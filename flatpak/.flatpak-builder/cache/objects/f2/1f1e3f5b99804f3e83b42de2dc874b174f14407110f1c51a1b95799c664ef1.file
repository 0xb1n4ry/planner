/* unity-search.c generated by valac 0.40.11, the Vala compiler
 * generated from unity-search.vala, do not modify */

/*
 * Copyright (C) 2011 Canonical, Ltd.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * version 3.0 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3.0 for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see
 * <http://www.gnu.org/licenses/>.
 *
 * Authored by Neil Jagdish Patel <neil.patel@canonical.com>
 *
 */


#include <glib.h>
#include <glib-object.h>
#include "unity.h"
#include <gio/gio.h>
#include <stdlib.h>
#include <string.h>
#include <dee.h>
#include <unity-trace.h>


#define UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE (unity_internal_glib_cancellable_get_type ())
#define UNITY_INTERNAL_GLIB_CANCELLABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE, UnityInternalGLibCancellable))
#define UNITY_INTERNAL_GLIB_CANCELLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE, UnityInternalGLibCancellableClass))
#define UNITY_INTERNAL_IS_GLIB_CANCELLABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE))
#define UNITY_INTERNAL_IS_GLIB_CANCELLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE))
#define UNITY_INTERNAL_GLIB_CANCELLABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE, UnityInternalGLibCancellableClass))

typedef struct _UnityInternalGLibCancellable UnityInternalGLibCancellable;
typedef struct _UnityInternalGLibCancellableClass UnityInternalGLibCancellableClass;
typedef struct _UnityInternalGLibCancellablePrivate UnityInternalGLibCancellablePrivate;
enum  {
	UNITY_INTERNAL_GLIB_CANCELLABLE_0_PROPERTY,
	UNITY_INTERNAL_GLIB_CANCELLABLE_NUM_PROPERTIES
};
static GParamSpec* unity_internal_glib_cancellable_properties[UNITY_INTERNAL_GLIB_CANCELLABLE_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
enum  {
	UNITY_DEPRECATED_SCOPE_SEARCH_0_PROPERTY,
	UNITY_DEPRECATED_SCOPE_SEARCH_CHANNEL_ID_PROPERTY,
	UNITY_DEPRECATED_SCOPE_SEARCH_SEARCH_STRING_PROPERTY,
	UNITY_DEPRECATED_SCOPE_SEARCH_SEARCH_TYPE_PROPERTY,
	UNITY_DEPRECATED_SCOPE_SEARCH_HINTS_PROPERTY,
	UNITY_DEPRECATED_SCOPE_SEARCH_RESULTS_MODEL_PROPERTY,
	UNITY_DEPRECATED_SCOPE_SEARCH_OWNER_PROPERTY,
	UNITY_DEPRECATED_SCOPE_SEARCH_NUM_PROPERTIES
};
static GParamSpec* unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
typedef struct _Block3Data Block3Data;
#define _g_main_loop_unref0(var) ((var == NULL) ? NULL : (var = (g_main_loop_unref (var), NULL)))
typedef struct _Block4Data Block4Data;
typedef struct _UnityDeprecatedScopeSearchRealAsyncRunData UnityDeprecatedScopeSearchRealAsyncRunData;
typedef struct _Block5Data Block5Data;
enum  {
	UNITY_DEPRECATED_SCOPE_SEARCH_FINISHED_SIGNAL,
	UNITY_DEPRECATED_SCOPE_SEARCH_NUM_SIGNALS
};
static guint unity_deprecated_scope_search_signals[UNITY_DEPRECATED_SCOPE_SEARCH_NUM_SIGNALS] = {0};
enum  {
	UNITY_AGGREGATED_SCOPE_SEARCH_0_PROPERTY,
	UNITY_AGGREGATED_SCOPE_SEARCH_NUM_PROPERTIES
};
static GParamSpec* unity_aggregated_scope_search_properties[UNITY_AGGREGATED_SCOPE_SEARCH_NUM_PROPERTIES];
typedef struct _UnityAggregatedScopeSearchSearchScopeData UnityAggregatedScopeSearchSearchScopeData;
typedef struct _UnityAggregatedScopeSearchPushResultsData UnityAggregatedScopeSearchPushResultsData;
typedef struct _Block6Data Block6Data;
typedef struct _UnityAggregatedScopeSearchRealAsyncRunData UnityAggregatedScopeSearchRealAsyncRunData;
typedef struct _Block7Data Block7Data;
enum  {
	UNITY_AGGREGATED_SCOPE_SEARCH_TRANSACTION_COMPLETE_SIGNAL,
	UNITY_AGGREGATED_SCOPE_SEARCH_CATEGORY_ORDER_CHANGED_SIGNAL,
	UNITY_AGGREGATED_SCOPE_SEARCH_NUM_SIGNALS
};
static guint unity_aggregated_scope_search_signals[UNITY_AGGREGATED_SCOPE_SEARCH_NUM_SIGNALS] = {0};

struct _UnityInternalGLibCancellable {
	UnityCancellable parent_instance;
	UnityInternalGLibCancellablePrivate * priv;
};

struct _UnityInternalGLibCancellableClass {
	UnityCancellableClass parent_class;
};

struct _UnityInternalGLibCancellablePrivate {
	GCancellable* canc;
};

struct _UnityDeprecatedScopeSearchPrivate {
	gchar* _channel_id;
	GHashTable* _hints;
	DeeSerializableModel* _results_model;
	UnityDeprecatedScopeBase* _owner;
	GHashTable* _reply_hints;
};

struct _Block3Data {
	int _ref_count_;
	UnityDeprecatedScopeSearch* self;
	GMainLoop* ml;
};

struct _Block4Data {
	int _ref_count_;
	UnityDeprecatedScopeSearch* self;
	gboolean waiting;
	gboolean search_finished;
	gpointer _async_data_;
};

struct _UnityDeprecatedScopeSearchRealAsyncRunData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityDeprecatedScopeSearch* self;
	Block4Data* _data4_;
	gulong finished_sig_id;
	gulong _tmp0_;
	gulong _tmp1_;
	UnityDeprecatedScope* depr_scope;
	UnityDeprecatedScopeBase* _tmp2_;
	UnityDeprecatedScope* _tmp3_;
	UnityDeprecatedScope* _tmp4_;
	GCancellable* canc;
	UnitySearchContext* _tmp5_;
	UnityCancellable* _tmp6_;
	GCancellable* _tmp7_;
	UnityDeprecatedScope* _tmp8_;
	UnitySearchType _tmp9_;
	UnitySearchType _tmp10_;
	GCancellable* _tmp11_;
	gboolean _tmp12_;
	gulong _tmp13_;
};

struct _Block5Data {
	int _ref_count_;
	UnityDeprecatedScopeSearch* self;
	UnityScopeSearchBaseCallback cb;
	gpointer cb_target;
};

struct _UnityAggregatedScopeSearchSearchScopeData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityAggregatedScopeSearch* self;
	gchar* scope_id;
	gchar* search_string;
	UnitySearchType search_type;
	GHashTable* hints;
	GHashTable* result;
	UnitySearchContext* _tmp0_;
	UnityCancellable* _tmp1_;
	GError* _tmp2_;
	UnityAggregatorScope* agg_scope;
	UnityDeprecatedScopeBase* _tmp3_;
	UnityDeprecatedScopeBase* _tmp4_;
	UnityAggregatorScope* _tmp5_;
	GCancellable* canc;
	UnitySearchContext* _tmp6_;
	UnityCancellable* _tmp7_;
	GCancellable* _tmp8_;
	const gchar* _tmp9_;
	const gchar* _tmp10_;
	GHashTable* res;
	GHashTable* _tmp11_;
	const gchar* _tmp12_;
	const gchar* _tmp13_;
	GError * _inner_error_;
};

struct _UnityAggregatedScopeSearchPushResultsData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityAggregatedScopeSearch* self;
	gchar* scope_id;
	DeeSerializableModel* results_model;
	gchar** category_ids;
	gint category_ids_length1;
	UnitySearchContext* _tmp0_;
	UnityCancellable* _tmp1_;
	UnityAggregatorScope* agg_scope;
	UnityDeprecatedScopeBase* _tmp2_;
	UnityDeprecatedScopeBase* _tmp3_;
	UnityAggregatorScope* _tmp4_;
	GCancellable* canc;
	UnitySearchContext* _tmp5_;
	UnityCancellable* _tmp6_;
	GCancellable* _tmp7_;
	UnityAggregatorScope* _tmp8_;
	const gchar* _tmp9_;
	const gchar* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	GCancellable* _tmp13_;
};

struct _Block6Data {
	int _ref_count_;
	UnityAggregatedScopeSearch* self;
	GMainLoop* ml;
};

struct _UnityAggregatedScopeSearchRealAsyncRunData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityAggregatedScopeSearch* self;
	UnityAggregatorScope* agg_scope;
	UnityDeprecatedScopeBase* _tmp0_;
	UnityDeprecatedScopeBase* _tmp1_;
	UnityAggregatorScope* _tmp2_;
};

struct _Block7Data {
	int _ref_count_;
	UnityAggregatedScopeSearch* self;
	UnityScopeSearchBaseCallback cb;
	gpointer cb_target;
};


static gpointer unity_internal_glib_cancellable_parent_class = NULL;
static gpointer unity_deprecated_scope_search_parent_class = NULL;
static gpointer unity_aggregated_scope_search_parent_class = NULL;

GType unity_internal_glib_cancellable_get_type (void) G_GNUC_CONST;
#define UNITY_INTERNAL_GLIB_CANCELLABLE_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE, UnityInternalGLibCancellablePrivate))
static void unity_internal_glib_cancellable_real_cancel (UnityCancellable* base);
static gboolean unity_internal_glib_cancellable_real_is_cancelled (UnityCancellable* base);
static GCancellable* unity_internal_glib_cancellable_real_get_gcancellable (UnityCancellable* base);
UnityInternalGLibCancellable* unity_internal_glib_cancellable_new (void);
UnityInternalGLibCancellable* unity_internal_glib_cancellable_construct (GType object_type);
static void unity_internal_glib_cancellable_finalize (GObject * obj);
#define UNITY_DEPRECATED_SCOPE_SEARCH_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, UnityDeprecatedScopeSearchPrivate))
UnityDeprecatedScopeSearch* unity_deprecated_scope_search_new (UnityDeprecatedScope* owner,
                                                               const gchar* channel_id,
                                                               GHashTable* hints,
                                                               DeeSerializableModel* results_model);
UnityDeprecatedScopeSearch* unity_deprecated_scope_search_construct (GType object_type,
                                                                     UnityDeprecatedScope* owner,
                                                                     const gchar* channel_id,
                                                                     GHashTable* hints,
                                                                     DeeSerializableModel* results_model);
static void _g_free0_ (gpointer var);
static void _g_variant_unref0_ (gpointer var);
GHashTable* unity_deprecated_scope_search_get_reply_hints (UnityDeprecatedScopeSearch* self);
static void unity_deprecated_scope_search_real_run (UnityScopeSearchBase* base);
static Block3Data* block3_data_ref (Block3Data* _data3_);
static void block3_data_unref (void * _userdata_);
static void __lambda18_ (Block3Data* _data3_);
static void ___lambda18__unity_scope_search_base_callback (UnityScopeSearchBase* instance,
                                                    gpointer self);
static void unity_deprecated_scope_search_real_async_run_data_free (gpointer _data);
static void unity_deprecated_scope_search_real_async_run_async_ready_wrapper (GObject *source_object,
                                                                       GAsyncResult *res,
                                                                       void *user_data);
static void unity_deprecated_scope_search_real_async_run (UnityDeprecatedScopeSearch* self,
                                                   GAsyncReadyCallback _callback_,
                                                   gpointer _user_data_);
static void unity_deprecated_scope_search_real_async_run_finish (UnityDeprecatedScopeSearch* self,
                                                          GAsyncResult* _res_);
static gboolean unity_deprecated_scope_search_real_async_run_co (UnityDeprecatedScopeSearchRealAsyncRunData* _data_);
static Block4Data* block4_data_ref (Block4Data* _data4_);
static void block4_data_unref (void * _userdata_);
static void __lambda14_ (Block4Data* _data4_);
static void ___lambda14__unity_deprecated_scope_search_finished (UnityDeprecatedScopeSearch* _sender,
                                                          gpointer self);
static void unity_deprecated_scope_search_real_run_async (UnityScopeSearchBase* base,
                                                   UnityScopeSearchBaseCallback cb,
                                                   gpointer cb_target);
static Block5Data* block5_data_ref (Block5Data* _data5_);
static void block5_data_unref (void * _userdata_);
static void __lambda15_ (Block5Data* _data5_,
                  GObject* obj,
                  GAsyncResult* res);
static void ___lambda15__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
static void unity_deprecated_scope_search_finalize (GObject * obj);
static void _vala_unity_deprecated_scope_search_get_property (GObject * object,
                                                       guint property_id,
                                                       GValue * value,
                                                       GParamSpec * pspec);
static void _vala_unity_deprecated_scope_search_set_property (GObject * object,
                                                       guint property_id,
                                                       const GValue * value,
                                                       GParamSpec * pspec);
static void unity_aggregated_scope_search_search_scope_data_free (gpointer _data);
static void unity_aggregated_scope_search_search_scope_async_ready_wrapper (GObject *source_object,
                                                                     GAsyncResult *res,
                                                                     void *user_data);
static gboolean unity_aggregated_scope_search_search_scope_co (UnityAggregatedScopeSearchSearchScopeData* _data_);
void unity_aggregator_scope_search_scope (UnityAggregatorScope* self,
                                          UnityAggregatedScopeSearch* search,
                                          const gchar* scope_id,
                                          const gchar* search_query,
                                          UnitySearchType search_type,
                                          GHashTable* hints,
                                          GCancellable* cancellable,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
GHashTable* unity_aggregator_scope_search_scope_finish (UnityAggregatorScope* self,
                                                        GAsyncResult* _res_,
                                                        GError** error);
static void unity_aggregated_scope_search_search_scope_ready (GObject* source_object,
                                                       GAsyncResult* _res_,
                                                       gpointer _user_data_);
static void unity_aggregated_scope_search_push_results_data_free (gpointer _data);
static void unity_aggregated_scope_search_push_results_async_ready_wrapper (GObject *source_object,
                                                                     GAsyncResult *res,
                                                                     void *user_data);
static gboolean unity_aggregated_scope_search_push_results_co (UnityAggregatedScopeSearchPushResultsData* _data_);
void unity_aggregator_scope_push_results (UnityAggregatorScope* self,
                                          const gchar* channel_id,
                                          const gchar* search_string,
                                          const gchar* scope_id,
                                          DeeSerializableModel* results_model,
                                          gchar** category_ids,
                                          int category_ids_length1,
                                          GCancellable* cancellable,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
void unity_aggregator_scope_push_results_finish (UnityAggregatorScope* self,
                                                 GAsyncResult* _res_);
static void unity_aggregated_scope_search_push_results_ready (GObject* source_object,
                                                       GAsyncResult* _res_,
                                                       gpointer _user_data_);
void unity_aggregator_scope_push_filter_settings (UnityAggregatorScope* self,
                                                  const gchar* channel_id,
                                                  UnityFilterSet* filters);
static void unity_aggregated_scope_search_real_run (UnityScopeSearchBase* base);
static Block6Data* block6_data_ref (Block6Data* _data6_);
static void block6_data_unref (void * _userdata_);
static void __lambda38_ (Block6Data* _data6_);
static void ___lambda38__unity_scope_search_base_callback (UnityScopeSearchBase* instance,
                                                    gpointer self);
static void unity_aggregated_scope_search_real_async_run_data_free (gpointer _data);
static void unity_aggregated_scope_search_real_async_run_async_ready_wrapper (GObject *source_object,
                                                                       GAsyncResult *res,
                                                                       void *user_data);
static void unity_aggregated_scope_search_real_async_run (UnityAggregatedScopeSearch* self,
                                                   GAsyncReadyCallback _callback_,
                                                   gpointer _user_data_);
static void unity_aggregated_scope_search_real_async_run_finish (UnityAggregatedScopeSearch* self,
                                                          GAsyncResult* _res_);
static gboolean unity_aggregated_scope_search_real_async_run_co (UnityAggregatedScopeSearchRealAsyncRunData* _data_);
static void unity_aggregated_scope_search_real_async_run_ready (GObject* source_object,
                                                         GAsyncResult* _res_,
                                                         gpointer _user_data_);
static void unity_aggregated_scope_search_real_run_async (UnityScopeSearchBase* base,
                                                   UnityScopeSearchBaseCallback cb,
                                                   gpointer cb_target);
static Block7Data* block7_data_ref (Block7Data* _data7_);
static void block7_data_unref (void * _userdata_);
static void __lambda32_ (Block7Data* _data7_,
                  GObject* obj,
                  GAsyncResult* res);
static void ___lambda32__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
static void g_cclosure_user_marshal_VOID__POINTER_INT (GClosure * closure,
                                                GValue * return_value,
                                                guint n_param_values,
                                                const GValue * param_values,
                                                gpointer invocation_hint,
                                                gpointer marshal_data);


static void
unity_internal_glib_cancellable_real_cancel (UnityCancellable* base)
{
	UnityInternalGLibCancellable * self;
	GCancellable* _tmp0_;
	self = (UnityInternalGLibCancellable*) base;
	_tmp0_ = self->priv->canc;
	g_cancellable_cancel (_tmp0_);
}


static gboolean
unity_internal_glib_cancellable_real_is_cancelled (UnityCancellable* base)
{
	UnityInternalGLibCancellable * self;
	gboolean result = FALSE;
	GCancellable* _tmp0_;
	self = (UnityInternalGLibCancellable*) base;
	_tmp0_ = self->priv->canc;
	result = g_cancellable_is_cancelled (_tmp0_);
	return result;
}


static gpointer
_g_object_ref0 (gpointer self)
{
	return self ? g_object_ref (self) : NULL;
}


static GCancellable*
unity_internal_glib_cancellable_real_get_gcancellable (UnityCancellable* base)
{
	UnityInternalGLibCancellable * self;
	GCancellable* result = NULL;
	GCancellable* _tmp0_;
	GCancellable* _tmp1_;
	self = (UnityInternalGLibCancellable*) base;
	_tmp0_ = self->priv->canc;
	_tmp1_ = _g_object_ref0 (_tmp0_);
	result = _tmp1_;
	return result;
}


UnityInternalGLibCancellable*
unity_internal_glib_cancellable_construct (GType object_type)
{
	UnityInternalGLibCancellable * self = NULL;
	self = (UnityInternalGLibCancellable*) unity_cancellable_construct (object_type);
	return self;
}


UnityInternalGLibCancellable*
unity_internal_glib_cancellable_new (void)
{
	return unity_internal_glib_cancellable_construct (UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE);
}


static void
unity_internal_glib_cancellable_class_init (UnityInternalGLibCancellableClass * klass)
{
	unity_internal_glib_cancellable_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityInternalGLibCancellablePrivate));
	((UnityCancellableClass *) klass)->cancel = (void (*) (UnityCancellable *)) unity_internal_glib_cancellable_real_cancel;
	((UnityCancellableClass *) klass)->is_cancelled = (gboolean (*) (UnityCancellable *)) unity_internal_glib_cancellable_real_is_cancelled;
	((UnityCancellableClass *) klass)->get_gcancellable = (GCancellable* (*) (UnityCancellable *)) unity_internal_glib_cancellable_real_get_gcancellable;
	G_OBJECT_CLASS (klass)->finalize = unity_internal_glib_cancellable_finalize;
}


static void
unity_internal_glib_cancellable_instance_init (UnityInternalGLibCancellable * self)
{
	GCancellable* _tmp0_;
	self->priv = UNITY_INTERNAL_GLIB_CANCELLABLE_GET_PRIVATE (self);
	_tmp0_ = g_cancellable_new ();
	self->priv->canc = _tmp0_;
}


static void
unity_internal_glib_cancellable_finalize (GObject * obj)
{
	UnityInternalGLibCancellable * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE, UnityInternalGLibCancellable);
	_g_object_unref0 (self->priv->canc);
	G_OBJECT_CLASS (unity_internal_glib_cancellable_parent_class)->finalize (obj);
}


GType
unity_internal_glib_cancellable_get_type (void)
{
	static volatile gsize unity_internal_glib_cancellable_type_id__volatile = 0;
	if (g_once_init_enter (&unity_internal_glib_cancellable_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityInternalGLibCancellableClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_internal_glib_cancellable_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityInternalGLibCancellable), 0, (GInstanceInitFunc) unity_internal_glib_cancellable_instance_init, NULL };
		GType unity_internal_glib_cancellable_type_id;
		unity_internal_glib_cancellable_type_id = g_type_register_static (UNITY_TYPE_CANCELLABLE, "UnityInternalGLibCancellable", &g_define_type_info, 0);
		g_once_init_leave (&unity_internal_glib_cancellable_type_id__volatile, unity_internal_glib_cancellable_type_id);
	}
	return unity_internal_glib_cancellable_type_id__volatile;
}


UnityDeprecatedScopeSearch*
unity_deprecated_scope_search_construct (GType object_type,
                                         UnityDeprecatedScope* owner,
                                         const gchar* channel_id,
                                         GHashTable* hints,
                                         DeeSerializableModel* results_model)
{
	UnityDeprecatedScopeSearch * self = NULL;
	g_return_val_if_fail (owner != NULL, NULL);
	g_return_val_if_fail (channel_id != NULL, NULL);
	g_return_val_if_fail (hints != NULL, NULL);
	g_return_val_if_fail (results_model != NULL, NULL);
	self = (UnityDeprecatedScopeSearch*) g_object_new (object_type, "owner", owner, "channel-id", channel_id, "hints", hints, "results-model", results_model, NULL);
	return self;
}


UnityDeprecatedScopeSearch*
unity_deprecated_scope_search_new (UnityDeprecatedScope* owner,
                                   const gchar* channel_id,
                                   GHashTable* hints,
                                   DeeSerializableModel* results_model)
{
	return unity_deprecated_scope_search_construct (UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, owner, channel_id, hints, results_model);
}


static void
_g_free0_ (gpointer var)
{
	var = (g_free (var), NULL);
}


static void
_g_variant_unref0_ (gpointer var)
{
	(var == NULL) ? NULL : (var = (g_variant_unref (var), NULL));
}


static gpointer
_g_variant_ref0 (gpointer self)
{
	return self ? g_variant_ref (self) : NULL;
}


void
unity_deprecated_scope_search_set_reply_hint (UnityDeprecatedScopeSearch* self,
                                              const gchar* key,
                                              GVariant* variant)
{
	GHashTable* _tmp0_;
	GHashTable* _tmp4_;
	gchar* _tmp5_;
	GVariant* _tmp6_;
	g_return_if_fail (self != NULL);
	g_return_if_fail (key != NULL);
	g_return_if_fail (variant != NULL);
	_tmp0_ = self->priv->_reply_hints;
	if (_tmp0_ == NULL) {
		GHashFunc _tmp1_;
		GEqualFunc _tmp2_;
		GHashTable* _tmp3_;
		_tmp1_ = g_str_hash;
		_tmp2_ = g_str_equal;
		_tmp3_ = g_hash_table_new_full (_tmp1_, _tmp2_, _g_free0_, _g_variant_unref0_);
		_g_hash_table_unref0 (self->priv->_reply_hints);
		self->priv->_reply_hints = _tmp3_;
	}
	_tmp4_ = self->priv->_reply_hints;
	_tmp5_ = g_strdup (key);
	_tmp6_ = _g_variant_ref0 (variant);
	g_hash_table_insert (_tmp4_, _tmp5_, _tmp6_);
}


static gpointer
_g_hash_table_ref0 (gpointer self)
{
	return self ? g_hash_table_ref (self) : NULL;
}


GHashTable*
unity_deprecated_scope_search_get_reply_hints (UnityDeprecatedScopeSearch* self)
{
	GHashTable* result = NULL;
	GHashTable* _tmp0_;
	GHashTable* _tmp1_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_reply_hints;
	_tmp1_ = _g_hash_table_ref0 (_tmp0_);
	result = _tmp1_;
	return result;
}


UnityFilter*
unity_deprecated_scope_search_get_filter (UnityDeprecatedScopeSearch* self,
                                          const gchar* filter_id)
{
	UnityFilter* result = NULL;
	UnitySearchContext* _tmp0_;
	UnityFilterSet* _tmp1_;
	UnityFilter* _tmp2_;
	g_return_val_if_fail (self != NULL, NULL);
	g_return_val_if_fail (filter_id != NULL, NULL);
	_tmp0_ = ((UnityScopeSearchBase*) self)->search_context;
	_tmp1_ = (*_tmp0_).filter_state;
	_tmp2_ = unity_filter_set_get_filter_by_id (_tmp1_, filter_id);
	result = _tmp2_;
	return result;
}


gboolean
unity_deprecated_scope_search_equals (UnityDeprecatedScopeSearch* self,
                                      UnityDeprecatedScopeSearch* other)
{
	gboolean result = FALSE;
	gboolean _tmp0_ = FALSE;
	g_return_val_if_fail (self != NULL, FALSE);
	g_return_val_if_fail (other != NULL, FALSE);
	if (other == NULL) {
		_tmp0_ = TRUE;
	} else {
		const gchar* _tmp1_;
		const gchar* _tmp2_;
		const gchar* _tmp3_;
		const gchar* _tmp4_;
		_tmp1_ = unity_deprecated_scope_search_get_search_string (self);
		_tmp2_ = _tmp1_;
		_tmp3_ = unity_deprecated_scope_search_get_search_string (other);
		_tmp4_ = _tmp3_;
		_tmp0_ = g_strcmp0 (_tmp2_, _tmp4_) != 0;
	}
	if (_tmp0_) {
		result = FALSE;
		return result;
	}
	result = TRUE;
	return result;
}


static Block3Data*
block3_data_ref (Block3Data* _data3_)
{
	g_atomic_int_inc (&_data3_->_ref_count_);
	return _data3_;
}


static void
block3_data_unref (void * _userdata_)
{
	Block3Data* _data3_;
	_data3_ = (Block3Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data3_->_ref_count_)) {
		UnityDeprecatedScopeSearch* self;
		self = _data3_->self;
		_g_main_loop_unref0 (_data3_->ml);
		_g_object_unref0 (self);
		g_slice_free (Block3Data, _data3_);
	}
}


static void
__lambda18_ (Block3Data* _data3_)
{
	UnityDeprecatedScopeSearch* self;
	self = _data3_->self;
	g_main_loop_quit (_data3_->ml);
}


static void
___lambda18__unity_scope_search_base_callback (UnityScopeSearchBase* instance,
                                               gpointer self)
{
	__lambda18_ (self);
}


static void
unity_deprecated_scope_search_real_run (UnityScopeSearchBase* base)
{
	UnityDeprecatedScopeSearch * self;
	Block3Data* _data3_;
	GMainLoop* _tmp0_;
	self = (UnityDeprecatedScopeSearch*) base;
	_data3_ = g_slice_new0 (Block3Data);
	_data3_->_ref_count_ = 1;
	_data3_->self = g_object_ref (self);
	_tmp0_ = g_main_loop_new (NULL, FALSE);
	_data3_->ml = _tmp0_;
	unity_scope_search_base_run_async ((UnityScopeSearchBase*) self, ___lambda18__unity_scope_search_base_callback, _data3_);
	g_main_loop_run (_data3_->ml);
	block3_data_unref (_data3_);
	_data3_ = NULL;
}


static void
unity_deprecated_scope_search_real_async_run_data_free (gpointer _data)
{
	UnityDeprecatedScopeSearchRealAsyncRunData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityDeprecatedScopeSearchRealAsyncRunData, _data_);
}


static void
unity_deprecated_scope_search_real_async_run_async_ready_wrapper (GObject *source_object,
                                                                  GAsyncResult *res,
                                                                  void *user_data)
{
	UnityDeprecatedScopeSearchRealAsyncRunData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_deprecated_scope_search_real_async_run (UnityDeprecatedScopeSearch* self,
                                              GAsyncReadyCallback _callback_,
                                              gpointer _user_data_)
{
	UnityDeprecatedScopeSearchRealAsyncRunData* _data_;
	UnityDeprecatedScopeSearch* _tmp0_;
	_data_ = g_slice_new0 (UnityDeprecatedScopeSearchRealAsyncRunData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_deprecated_scope_search_real_async_run_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_deprecated_scope_search_real_async_run_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	unity_deprecated_scope_search_real_async_run_co (_data_);
}


static void
unity_deprecated_scope_search_real_async_run_finish (UnityDeprecatedScopeSearch* self,
                                                     GAsyncResult* _res_)
{
	UnityDeprecatedScopeSearchRealAsyncRunData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
}


static Block4Data*
block4_data_ref (Block4Data* _data4_)
{
	g_atomic_int_inc (&_data4_->_ref_count_);
	return _data4_;
}


static void
block4_data_unref (void * _userdata_)
{
	Block4Data* _data4_;
	_data4_ = (Block4Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data4_->_ref_count_)) {
		UnityDeprecatedScopeSearch* self;
		self = _data4_->self;
		_g_object_unref0 (self);
		g_slice_free (Block4Data, _data4_);
	}
}


static void
__lambda14_ (Block4Data* _data4_)
{
	UnityDeprecatedScopeSearch* self;
	gboolean _tmp0_;
	self = _data4_->self;
	_data4_->search_finished = TRUE;
	_tmp0_ = _data4_->waiting;
	if (_tmp0_) {
		unity_deprecated_scope_search_real_async_run_co (_data4_->_async_data_);
	}
}


static void
___lambda14__unity_deprecated_scope_search_finished (UnityDeprecatedScopeSearch* _sender,
                                                     gpointer self)
{
	__lambda14_ (self);
}


static gboolean
unity_deprecated_scope_search_real_async_run_co (UnityDeprecatedScopeSearchRealAsyncRunData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_data4_ = g_slice_new0 (Block4Data);
	_data_->_data4_->_ref_count_ = 1;
	_data_->_data4_->self = g_object_ref (_data_->self);
	_data_->_data4_->_async_data_ = _data_;
	_data_->_data4_->waiting = FALSE;
	_data_->_data4_->search_finished = FALSE;
	_data_->finished_sig_id = (gulong) 0;
	_data_->_tmp0_ = g_signal_connect_data (_data_->self, "finished", (GCallback) ___lambda14__unity_deprecated_scope_search_finished, block4_data_ref (_data_->_data4_), (GClosureNotify) block4_data_unref, 0);
	_data_->finished_sig_id = _data_->_tmp0_;
	_data_->_tmp1_ = _data_->finished_sig_id;
	if (_data_->_tmp1_ == ((gulong) 0)) {
		g_critical ("unity-search.vala:115: Unexpected error ocurred");
		block4_data_unref (_data_->_data4_);
		_data_->_data4_ = NULL;
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
		if (_data_->_state_ != 0) {
			while (_data_->_task_complete_ != TRUE) {
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
			}
		}
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	_data_->_tmp2_ = _data_->self->priv->_owner;
	_data_->_tmp3_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp2_, UNITY_TYPE_DEPRECATED_SCOPE) ? ((UnityDeprecatedScope*) _data_->_tmp2_) : NULL);
	_data_->depr_scope = _data_->_tmp3_;
	_data_->_tmp4_ = _data_->depr_scope;
	if (_data_->_tmp4_ != NULL) {
		_data_->_tmp5_ = ((UnityScopeSearchBase*) _data_->self)->search_context;
		_data_->_tmp6_ = (*_data_->_tmp5_).cancellable;
		_data_->_tmp7_ = unity_cancellable_get_gcancellable (_data_->_tmp6_);
		_data_->canc = _data_->_tmp7_;
		_data_->_tmp8_ = _data_->depr_scope;
		_data_->_tmp9_ = unity_deprecated_scope_search_get_search_type (_data_->self);
		_data_->_tmp10_ = _data_->_tmp9_;
		_data_->_tmp11_ = _data_->canc;
		g_signal_emit_by_name (_data_->_tmp8_, "search-changed", _data_->self, _data_->_tmp10_, _data_->_tmp11_);
		_data_->_data4_->waiting = TRUE;
		_data_->_tmp12_ = _data_->_data4_->search_finished;
		if (!_data_->_tmp12_) {
			_data_->_state_ = 1;
			return FALSE;
			_state_1:
			;
		}
		_g_object_unref0 (_data_->canc);
	} else {
		g_warning ("unity-search.vala:134: Unable to perform search, expected DeprecatedSc" \
"ope");
	}
	_data_->_tmp13_ = _data_->finished_sig_id;
	g_signal_handler_disconnect (_data_->self, _data_->_tmp13_);
	_g_object_unref0 (_data_->depr_scope);
	block4_data_unref (_data_->_data4_);
	_data_->_data4_ = NULL;
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static Block5Data*
block5_data_ref (Block5Data* _data5_)
{
	g_atomic_int_inc (&_data5_->_ref_count_);
	return _data5_;
}


static void
block5_data_unref (void * _userdata_)
{
	Block5Data* _data5_;
	_data5_ = (Block5Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data5_->_ref_count_)) {
		UnityDeprecatedScopeSearch* self;
		self = _data5_->self;
		_g_object_unref0 (self);
		g_slice_free (Block5Data, _data5_);
	}
}


static void
__lambda15_ (Block5Data* _data5_,
             GObject* obj,
             GAsyncResult* res)
{
	UnityDeprecatedScopeSearch* self;
	self = _data5_->self;
	g_return_if_fail (res != NULL);
	unity_deprecated_scope_search_real_async_run_finish (self, res);
	_data5_->cb ((UnityScopeSearchBase*) self, _data5_->cb_target);
}


static void
___lambda15__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
	__lambda15_ (self, source_object, res);
	block5_data_unref (self);
}


static void
unity_deprecated_scope_search_real_run_async (UnityScopeSearchBase* base,
                                              UnityScopeSearchBaseCallback cb,
                                              gpointer cb_target)
{
	UnityDeprecatedScopeSearch * self;
	Block5Data* _data5_;
	self = (UnityDeprecatedScopeSearch*) base;
	_data5_ = g_slice_new0 (Block5Data);
	_data5_->_ref_count_ = 1;
	_data5_->self = g_object_ref (self);
	_data5_->cb = cb;
	_data5_->cb_target = cb_target;
	unity_deprecated_scope_search_real_async_run (self, ___lambda15__gasync_ready_callback, block5_data_ref (_data5_));
	block5_data_unref (_data5_);
	_data5_ = NULL;
}


const gchar*
unity_deprecated_scope_search_get_channel_id (UnityDeprecatedScopeSearch* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_channel_id;
	result = _tmp0_;
	return result;
}


static void
unity_deprecated_scope_search_set_channel_id (UnityDeprecatedScopeSearch* self,
                                              const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_deprecated_scope_search_get_channel_id (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_channel_id);
		self->priv->_channel_id = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_CHANNEL_ID_PROPERTY]);
	}
}


const gchar*
unity_deprecated_scope_search_get_search_string (UnityDeprecatedScopeSearch* self)
{
	const gchar* result;
	UnitySearchContext* _tmp0_;
	const gchar* _tmp1_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = ((UnityScopeSearchBase*) self)->search_context;
	_tmp1_ = (*_tmp0_).search_query;
	result = _tmp1_;
	return result;
}


UnitySearchType
unity_deprecated_scope_search_get_search_type (UnityDeprecatedScopeSearch* self)
{
	UnitySearchType result;
	UnitySearchContext* _tmp0_;
	UnitySearchType _tmp1_;
	g_return_val_if_fail (self != NULL, 0);
	_tmp0_ = ((UnityScopeSearchBase*) self)->search_context;
	_tmp1_ = (*_tmp0_).search_type;
	result = _tmp1_;
	return result;
}


GHashTable*
unity_deprecated_scope_search_get_hints (UnityDeprecatedScopeSearch* self)
{
	GHashTable* result;
	GHashTable* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_hints;
	result = _tmp0_;
	return result;
}


static void
unity_deprecated_scope_search_set_hints (UnityDeprecatedScopeSearch* self,
                                         GHashTable* value)
{
	g_return_if_fail (self != NULL);
	if (unity_deprecated_scope_search_get_hints (self) != value) {
		GHashTable* _tmp0_;
		_tmp0_ = _g_hash_table_ref0 (value);
		_g_hash_table_unref0 (self->priv->_hints);
		self->priv->_hints = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_HINTS_PROPERTY]);
	}
}


DeeSerializableModel*
unity_deprecated_scope_search_get_results_model (UnityDeprecatedScopeSearch* self)
{
	DeeSerializableModel* result;
	DeeSerializableModel* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_results_model;
	result = _tmp0_;
	return result;
}


static void
unity_deprecated_scope_search_set_results_model (UnityDeprecatedScopeSearch* self,
                                                 DeeSerializableModel* value)
{
	g_return_if_fail (self != NULL);
	if (unity_deprecated_scope_search_get_results_model (self) != value) {
		DeeSerializableModel* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_results_model);
		self->priv->_results_model = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_RESULTS_MODEL_PROPERTY]);
	}
}


UnityDeprecatedScopeBase*
unity_deprecated_scope_search_get_owner (UnityDeprecatedScopeSearch* self)
{
	UnityDeprecatedScopeBase* result;
	UnityDeprecatedScopeBase* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_owner;
	result = _tmp0_;
	return result;
}


static void
unity_deprecated_scope_search_set_owner (UnityDeprecatedScopeSearch* self,
                                         UnityDeprecatedScopeBase* value)
{
	g_return_if_fail (self != NULL);
	if (unity_deprecated_scope_search_get_owner (self) != value) {
		self->priv->_owner = value;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_OWNER_PROPERTY]);
	}
}


static void
unity_deprecated_scope_search_class_init (UnityDeprecatedScopeSearchClass * klass)
{
	unity_deprecated_scope_search_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityDeprecatedScopeSearchPrivate));
	((UnityScopeSearchBaseClass *) klass)->run = (void (*) (UnityScopeSearchBase *)) unity_deprecated_scope_search_real_run;
	((UnityScopeSearchBaseClass *) klass)->run_async = (void (*) (UnityScopeSearchBase *, UnityScopeSearchBaseCallback, gpointer)) unity_deprecated_scope_search_real_run_async;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_deprecated_scope_search_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_deprecated_scope_search_set_property;
	G_OBJECT_CLASS (klass)->finalize = unity_deprecated_scope_search_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_SEARCH_CHANNEL_ID_PROPERTY, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_CHANNEL_ID_PROPERTY] = g_param_spec_string ("channel-id", "channel-id", "channel-id", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_SEARCH_SEARCH_STRING_PROPERTY, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_SEARCH_STRING_PROPERTY] = g_param_spec_string ("search-string", "search-string", "search-string", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_SEARCH_SEARCH_TYPE_PROPERTY, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_SEARCH_TYPE_PROPERTY] = g_param_spec_enum ("search-type", "search-type", "search-type", UNITY_TYPE_SEARCH_TYPE, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_SEARCH_HINTS_PROPERTY, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_HINTS_PROPERTY] = g_param_spec_boxed ("hints", "hints", "hints", G_TYPE_HASH_TABLE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_SEARCH_RESULTS_MODEL_PROPERTY, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_RESULTS_MODEL_PROPERTY] = g_param_spec_object ("results-model", "results-model", "results-model", dee_serializable_model_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_SEARCH_OWNER_PROPERTY, unity_deprecated_scope_search_properties[UNITY_DEPRECATED_SCOPE_SEARCH_OWNER_PROPERTY] = g_param_spec_object ("owner", "owner", "owner", UNITY_TYPE_DEPRECATED_SCOPE_BASE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
	unity_deprecated_scope_search_signals[UNITY_DEPRECATED_SCOPE_SEARCH_FINISHED_SIGNAL] = g_signal_new ("finished", UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
}


static void
unity_deprecated_scope_search_instance_init (UnityDeprecatedScopeSearch * self)
{
	self->priv = UNITY_DEPRECATED_SCOPE_SEARCH_GET_PRIVATE (self);
	self->priv->_reply_hints = NULL;
}


static void
unity_deprecated_scope_search_finalize (GObject * obj)
{
	UnityDeprecatedScopeSearch * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, UnityDeprecatedScopeSearch);
	_g_free0 (self->priv->_channel_id);
	_g_hash_table_unref0 (self->priv->_hints);
	_g_object_unref0 (self->priv->_results_model);
	_g_hash_table_unref0 (self->priv->_reply_hints);
	G_OBJECT_CLASS (unity_deprecated_scope_search_parent_class)->finalize (obj);
}


/**
 * Internal transitioning class, note that it will disappear from the public
 * API as soon as possible and therefore shouldn't be used.
 */
GType
unity_deprecated_scope_search_get_type (void)
{
	static volatile gsize unity_deprecated_scope_search_type_id__volatile = 0;
	if (g_once_init_enter (&unity_deprecated_scope_search_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityDeprecatedScopeSearchClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_deprecated_scope_search_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityDeprecatedScopeSearch), 0, (GInstanceInitFunc) unity_deprecated_scope_search_instance_init, NULL };
		GType unity_deprecated_scope_search_type_id;
		unity_deprecated_scope_search_type_id = g_type_register_static (UNITY_TYPE_SCOPE_SEARCH_BASE, "UnityDeprecatedScopeSearch", &g_define_type_info, 0);
		g_once_init_leave (&unity_deprecated_scope_search_type_id__volatile, unity_deprecated_scope_search_type_id);
	}
	return unity_deprecated_scope_search_type_id__volatile;
}


static void
_vala_unity_deprecated_scope_search_get_property (GObject * object,
                                                  guint property_id,
                                                  GValue * value,
                                                  GParamSpec * pspec)
{
	UnityDeprecatedScopeSearch * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, UnityDeprecatedScopeSearch);
	switch (property_id) {
		case UNITY_DEPRECATED_SCOPE_SEARCH_CHANNEL_ID_PROPERTY:
		g_value_set_string (value, unity_deprecated_scope_search_get_channel_id (self));
		break;
		case UNITY_DEPRECATED_SCOPE_SEARCH_SEARCH_STRING_PROPERTY:
		g_value_set_string (value, unity_deprecated_scope_search_get_search_string (self));
		break;
		case UNITY_DEPRECATED_SCOPE_SEARCH_SEARCH_TYPE_PROPERTY:
		g_value_set_enum (value, unity_deprecated_scope_search_get_search_type (self));
		break;
		case UNITY_DEPRECATED_SCOPE_SEARCH_HINTS_PROPERTY:
		g_value_set_boxed (value, unity_deprecated_scope_search_get_hints (self));
		break;
		case UNITY_DEPRECATED_SCOPE_SEARCH_RESULTS_MODEL_PROPERTY:
		g_value_set_object (value, unity_deprecated_scope_search_get_results_model (self));
		break;
		case UNITY_DEPRECATED_SCOPE_SEARCH_OWNER_PROPERTY:
		g_value_set_object (value, unity_deprecated_scope_search_get_owner (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_deprecated_scope_search_set_property (GObject * object,
                                                  guint property_id,
                                                  const GValue * value,
                                                  GParamSpec * pspec)
{
	UnityDeprecatedScopeSearch * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, UnityDeprecatedScopeSearch);
	switch (property_id) {
		case UNITY_DEPRECATED_SCOPE_SEARCH_CHANNEL_ID_PROPERTY:
		unity_deprecated_scope_search_set_channel_id (self, g_value_get_string (value));
		break;
		case UNITY_DEPRECATED_SCOPE_SEARCH_HINTS_PROPERTY:
		unity_deprecated_scope_search_set_hints (self, g_value_get_boxed (value));
		break;
		case UNITY_DEPRECATED_SCOPE_SEARCH_RESULTS_MODEL_PROPERTY:
		unity_deprecated_scope_search_set_results_model (self, g_value_get_object (value));
		break;
		case UNITY_DEPRECATED_SCOPE_SEARCH_OWNER_PROPERTY:
		unity_deprecated_scope_search_set_owner (self, g_value_get_object (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


UnityAggregatedScopeSearch*
unity_aggregated_scope_search_construct (GType object_type,
                                         UnityAggregatorScope* owner,
                                         const gchar* channel_id,
                                         GHashTable* hints,
                                         DeeSerializableModel* results_model)
{
	UnityAggregatedScopeSearch * self = NULL;
	g_return_val_if_fail (owner != NULL, NULL);
	g_return_val_if_fail (channel_id != NULL, NULL);
	g_return_val_if_fail (hints != NULL, NULL);
	g_return_val_if_fail (results_model != NULL, NULL);
	self = (UnityAggregatedScopeSearch*) g_object_new (object_type, "owner", owner, "channel-id", channel_id, "hints", hints, "results-model", results_model, NULL);
	return self;
}


UnityAggregatedScopeSearch*
unity_aggregated_scope_search_new (UnityAggregatorScope* owner,
                                   const gchar* channel_id,
                                   GHashTable* hints,
                                   DeeSerializableModel* results_model)
{
	return unity_aggregated_scope_search_construct (UNITY_TYPE_AGGREGATED_SCOPE_SEARCH, owner, channel_id, hints, results_model);
}


static void
unity_aggregated_scope_search_search_scope_data_free (gpointer _data)
{
	UnityAggregatedScopeSearchSearchScopeData* _data_;
	_data_ = _data;
	_g_free0 (_data_->scope_id);
	_g_free0 (_data_->search_string);
	_g_hash_table_unref0 (_data_->hints);
	_g_hash_table_unref0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityAggregatedScopeSearchSearchScopeData, _data_);
}


static void
unity_aggregated_scope_search_search_scope_async_ready_wrapper (GObject *source_object,
                                                                GAsyncResult *res,
                                                                void *user_data)
{
	UnityAggregatedScopeSearchSearchScopeData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_aggregated_scope_search_search_scope (UnityAggregatedScopeSearch* self,
                                            const gchar* scope_id,
                                            const gchar* search_string,
                                            UnitySearchType search_type,
                                            GHashTable* hints,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_)
{
	UnityAggregatedScopeSearchSearchScopeData* _data_;
	UnityAggregatedScopeSearch* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	GHashTable* _tmp3_;
	_data_ = g_slice_new0 (UnityAggregatedScopeSearchSearchScopeData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_aggregated_scope_search_search_scope_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_aggregated_scope_search_search_scope_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (scope_id);
	_g_free0 (_data_->scope_id);
	_data_->scope_id = _tmp1_;
	_tmp2_ = g_strdup (search_string);
	_g_free0 (_data_->search_string);
	_data_->search_string = _tmp2_;
	_data_->search_type = search_type;
	_tmp3_ = _g_hash_table_ref0 (hints);
	_g_hash_table_unref0 (_data_->hints);
	_data_->hints = _tmp3_;
	unity_aggregated_scope_search_search_scope_co (_data_);
}


GHashTable*
unity_aggregated_scope_search_search_scope_finish (UnityAggregatedScopeSearch* self,
                                                   GAsyncResult* _res_,
                                                   GError** error)
{
	GHashTable* result;
	UnityAggregatedScopeSearchSearchScopeData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return NULL;
	}
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static void
unity_aggregated_scope_search_search_scope_ready (GObject* source_object,
                                                  GAsyncResult* _res_,
                                                  gpointer _user_data_)
{
	UnityAggregatedScopeSearchSearchScopeData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_aggregated_scope_search_search_scope_co (_data_);
}


static gboolean
unity_aggregated_scope_search_search_scope_co (UnityAggregatedScopeSearchSearchScopeData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = ((UnityScopeSearchBase*) _data_->self)->search_context;
	_data_->_tmp1_ = (*_data_->_tmp0_).cancellable;
	if (unity_cancellable_is_cancelled (_data_->_tmp1_)) {
		_data_->_tmp2_ = g_error_new_literal (G_IO_ERROR, G_IO_ERROR_CANCELLED, "Cancelled");
		_data_->_inner_error_ = _data_->_tmp2_;
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	_data_->_tmp3_ = unity_deprecated_scope_search_get_owner ((UnityDeprecatedScopeSearch*) _data_->self);
	_data_->_tmp4_ = _data_->_tmp3_;
	_data_->_tmp5_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp4_, UNITY_TYPE_AGGREGATOR_SCOPE) ? ((UnityAggregatorScope*) _data_->_tmp4_) : NULL);
	_data_->agg_scope = _data_->_tmp5_;
	_data_->_tmp6_ = ((UnityScopeSearchBase*) _data_->self)->search_context;
	_data_->_tmp7_ = (*_data_->_tmp6_).cancellable;
	_data_->_tmp8_ = unity_cancellable_get_gcancellable (_data_->_tmp7_);
	_data_->canc = _data_->_tmp8_;
	_data_->_tmp9_ = unity_deprecated_scope_base_get_id ((UnityDeprecatedScopeBase*) _data_->agg_scope);
	_data_->_tmp10_ = _data_->_tmp9_;
	unity_trace_tracepoint ("subsearch:start::scope=%s;target=%s;query=%s", _data_->_tmp10_, _data_->scope_id, _data_->search_string);
	_data_->_state_ = 1;
	unity_aggregator_scope_search_scope (_data_->agg_scope, _data_->self, _data_->scope_id, _data_->search_string, _data_->search_type, _data_->hints, _data_->canc, unity_aggregated_scope_search_search_scope_ready, _data_);
	return FALSE;
	_state_1:
	_data_->_tmp11_ = unity_aggregator_scope_search_scope_finish (_data_->agg_scope, _data_->_res_, &_data_->_inner_error_);
	_data_->res = _data_->_tmp11_;
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		_g_object_unref0 (_data_->canc);
		_g_object_unref0 (_data_->agg_scope);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	_data_->_tmp12_ = unity_deprecated_scope_base_get_id ((UnityDeprecatedScopeBase*) _data_->agg_scope);
	_data_->_tmp13_ = _data_->_tmp12_;
	unity_trace_tracepoint ("subsearch:end::scope=%s;target=%s;query=%s", _data_->_tmp13_, _data_->scope_id, _data_->search_string);
	_data_->result = _data_->res;
	_g_object_unref0 (_data_->canc);
	_g_object_unref0 (_data_->agg_scope);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_aggregated_scope_search_push_results_data_free (gpointer _data)
{
	UnityAggregatedScopeSearchPushResultsData* _data_;
	_data_ = _data;
	_g_free0 (_data_->scope_id);
	_g_object_unref0 (_data_->results_model);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityAggregatedScopeSearchPushResultsData, _data_);
}


static void
unity_aggregated_scope_search_push_results_async_ready_wrapper (GObject *source_object,
                                                                GAsyncResult *res,
                                                                void *user_data)
{
	UnityAggregatedScopeSearchPushResultsData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_aggregated_scope_search_push_results (UnityAggregatedScopeSearch* self,
                                            const gchar* scope_id,
                                            DeeSerializableModel* results_model,
                                            gchar** category_ids,
                                            int category_ids_length1,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_)
{
	UnityAggregatedScopeSearchPushResultsData* _data_;
	UnityAggregatedScopeSearch* _tmp0_;
	gchar* _tmp1_;
	DeeSerializableModel* _tmp2_;
	_data_ = g_slice_new0 (UnityAggregatedScopeSearchPushResultsData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_aggregated_scope_search_push_results_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_aggregated_scope_search_push_results_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (scope_id);
	_g_free0 (_data_->scope_id);
	_data_->scope_id = _tmp1_;
	_tmp2_ = _g_object_ref0 (results_model);
	_g_object_unref0 (_data_->results_model);
	_data_->results_model = _tmp2_;
	_data_->category_ids = category_ids;
	_data_->category_ids_length1 = category_ids_length1;
	unity_aggregated_scope_search_push_results_co (_data_);
}


void
unity_aggregated_scope_search_push_results_finish (UnityAggregatedScopeSearch* self,
                                                   GAsyncResult* _res_)
{
	UnityAggregatedScopeSearchPushResultsData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
}


static void
unity_aggregated_scope_search_push_results_ready (GObject* source_object,
                                                  GAsyncResult* _res_,
                                                  gpointer _user_data_)
{
	UnityAggregatedScopeSearchPushResultsData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_aggregated_scope_search_push_results_co (_data_);
}


static gboolean
unity_aggregated_scope_search_push_results_co (UnityAggregatedScopeSearchPushResultsData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = ((UnityScopeSearchBase*) _data_->self)->search_context;
	_data_->_tmp1_ = (*_data_->_tmp0_).cancellable;
	if (unity_cancellable_is_cancelled (_data_->_tmp1_)) {
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
		if (_data_->_state_ != 0) {
			while (_data_->_task_complete_ != TRUE) {
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
			}
		}
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	_data_->_tmp2_ = unity_deprecated_scope_search_get_owner ((UnityDeprecatedScopeSearch*) _data_->self);
	_data_->_tmp3_ = _data_->_tmp2_;
	_data_->_tmp4_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp3_, UNITY_TYPE_AGGREGATOR_SCOPE) ? ((UnityAggregatorScope*) _data_->_tmp3_) : NULL);
	_data_->agg_scope = _data_->_tmp4_;
	_data_->_tmp5_ = ((UnityScopeSearchBase*) _data_->self)->search_context;
	_data_->_tmp6_ = (*_data_->_tmp5_).cancellable;
	_data_->_tmp7_ = unity_cancellable_get_gcancellable (_data_->_tmp6_);
	_data_->canc = _data_->_tmp7_;
	_data_->_tmp8_ = _data_->agg_scope;
	_data_->_tmp9_ = unity_deprecated_scope_search_get_channel_id ((UnityDeprecatedScopeSearch*) _data_->self);
	_data_->_tmp10_ = _data_->_tmp9_;
	_data_->_tmp11_ = unity_deprecated_scope_search_get_search_string ((UnityDeprecatedScopeSearch*) _data_->self);
	_data_->_tmp12_ = _data_->_tmp11_;
	_data_->_tmp13_ = _data_->canc;
	_data_->_state_ = 1;
	unity_aggregator_scope_push_results (_data_->_tmp8_, _data_->_tmp10_, _data_->_tmp12_, _data_->scope_id, _data_->results_model, _data_->category_ids, _data_->category_ids_length1, _data_->_tmp13_, unity_aggregated_scope_search_push_results_ready, _data_);
	return FALSE;
	_state_1:
	unity_aggregator_scope_push_results_finish (_data_->_tmp8_, _data_->_res_);
	_g_object_unref0 (_data_->canc);
	_g_object_unref0 (_data_->agg_scope);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


void
unity_aggregated_scope_search_push_filter_settings (UnityAggregatedScopeSearch* self,
                                                    UnityFilterSet* filters)
{
	UnitySearchContext* _tmp0_;
	UnityCancellable* _tmp1_;
	UnityAggregatorScope* agg_scope = NULL;
	UnityDeprecatedScopeBase* _tmp2_;
	UnityDeprecatedScopeBase* _tmp3_;
	UnityAggregatorScope* _tmp4_;
	UnityAggregatorScope* _tmp5_;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	g_return_if_fail (self != NULL);
	g_return_if_fail (filters != NULL);
	_tmp0_ = ((UnityScopeSearchBase*) self)->search_context;
	_tmp1_ = (*_tmp0_).cancellable;
	if (unity_cancellable_is_cancelled (_tmp1_)) {
		return;
	}
	_tmp2_ = unity_deprecated_scope_search_get_owner ((UnityDeprecatedScopeSearch*) self);
	_tmp3_ = _tmp2_;
	_tmp4_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp3_, UNITY_TYPE_AGGREGATOR_SCOPE) ? ((UnityAggregatorScope*) _tmp3_) : NULL);
	agg_scope = _tmp4_;
	_tmp5_ = agg_scope;
	_tmp6_ = unity_deprecated_scope_search_get_channel_id ((UnityDeprecatedScopeSearch*) self);
	_tmp7_ = _tmp6_;
	unity_aggregator_scope_push_filter_settings (_tmp5_, _tmp7_, filters);
	_g_object_unref0 (agg_scope);
}


static Block6Data*
block6_data_ref (Block6Data* _data6_)
{
	g_atomic_int_inc (&_data6_->_ref_count_);
	return _data6_;
}


static void
block6_data_unref (void * _userdata_)
{
	Block6Data* _data6_;
	_data6_ = (Block6Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data6_->_ref_count_)) {
		UnityAggregatedScopeSearch* self;
		self = _data6_->self;
		_g_main_loop_unref0 (_data6_->ml);
		_g_object_unref0 (self);
		g_slice_free (Block6Data, _data6_);
	}
}


static void
__lambda38_ (Block6Data* _data6_)
{
	UnityAggregatedScopeSearch* self;
	self = _data6_->self;
	g_main_loop_quit (_data6_->ml);
}


static void
___lambda38__unity_scope_search_base_callback (UnityScopeSearchBase* instance,
                                               gpointer self)
{
	__lambda38_ (self);
}


static void
unity_aggregated_scope_search_real_run (UnityScopeSearchBase* base)
{
	UnityAggregatedScopeSearch * self;
	Block6Data* _data6_;
	GMainLoop* _tmp0_;
	self = (UnityAggregatedScopeSearch*) base;
	_data6_ = g_slice_new0 (Block6Data);
	_data6_->_ref_count_ = 1;
	_data6_->self = g_object_ref (self);
	_tmp0_ = g_main_loop_new (NULL, FALSE);
	_data6_->ml = _tmp0_;
	unity_scope_search_base_run_async ((UnityScopeSearchBase*) self, ___lambda38__unity_scope_search_base_callback, _data6_);
	g_main_loop_run (_data6_->ml);
	block6_data_unref (_data6_);
	_data6_ = NULL;
}


static void
unity_aggregated_scope_search_real_async_run_data_free (gpointer _data)
{
	UnityAggregatedScopeSearchRealAsyncRunData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityAggregatedScopeSearchRealAsyncRunData, _data_);
}


static void
unity_aggregated_scope_search_real_async_run_async_ready_wrapper (GObject *source_object,
                                                                  GAsyncResult *res,
                                                                  void *user_data)
{
	UnityAggregatedScopeSearchRealAsyncRunData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_aggregated_scope_search_real_async_run (UnityAggregatedScopeSearch* self,
                                              GAsyncReadyCallback _callback_,
                                              gpointer _user_data_)
{
	UnityAggregatedScopeSearchRealAsyncRunData* _data_;
	UnityAggregatedScopeSearch* _tmp0_;
	_data_ = g_slice_new0 (UnityAggregatedScopeSearchRealAsyncRunData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_aggregated_scope_search_real_async_run_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_aggregated_scope_search_real_async_run_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	unity_aggregated_scope_search_real_async_run_co (_data_);
}


static void
unity_aggregated_scope_search_real_async_run_finish (UnityAggregatedScopeSearch* self,
                                                     GAsyncResult* _res_)
{
	UnityAggregatedScopeSearchRealAsyncRunData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
}


static void
unity_aggregated_scope_search_real_async_run_ready (GObject* source_object,
                                                    GAsyncResult* _res_,
                                                    gpointer _user_data_)
{
	UnityAggregatedScopeSearchRealAsyncRunData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_aggregated_scope_search_real_async_run_co (_data_);
}


static gboolean
unity_aggregated_scope_search_real_async_run_co (UnityAggregatedScopeSearchRealAsyncRunData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = unity_deprecated_scope_search_get_owner ((UnityDeprecatedScopeSearch*) _data_->self);
	_data_->_tmp1_ = _data_->_tmp0_;
	_data_->_tmp2_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp1_, UNITY_TYPE_AGGREGATOR_SCOPE) ? ((UnityAggregatorScope*) _data_->_tmp1_) : NULL);
	_data_->agg_scope = _data_->_tmp2_;
	_data_->_state_ = 1;
	unity_aggregator_scope_search (_data_->agg_scope, _data_->self, unity_aggregated_scope_search_real_async_run_ready, _data_);
	return FALSE;
	_state_1:
	unity_aggregator_scope_search_finish (_data_->agg_scope, _data_->_res_);
	_g_object_unref0 (_data_->agg_scope);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static Block7Data*
block7_data_ref (Block7Data* _data7_)
{
	g_atomic_int_inc (&_data7_->_ref_count_);
	return _data7_;
}


static void
block7_data_unref (void * _userdata_)
{
	Block7Data* _data7_;
	_data7_ = (Block7Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data7_->_ref_count_)) {
		UnityAggregatedScopeSearch* self;
		self = _data7_->self;
		_g_object_unref0 (self);
		g_slice_free (Block7Data, _data7_);
	}
}


static void
__lambda32_ (Block7Data* _data7_,
             GObject* obj,
             GAsyncResult* res)
{
	UnityAggregatedScopeSearch* self;
	self = _data7_->self;
	g_return_if_fail (res != NULL);
	unity_aggregated_scope_search_real_async_run_finish (self, res);
	_data7_->cb ((UnityScopeSearchBase*) self, _data7_->cb_target);
}


static void
___lambda32__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
	__lambda32_ (self, source_object, res);
	block7_data_unref (self);
}


static void
unity_aggregated_scope_search_real_run_async (UnityScopeSearchBase* base,
                                              UnityScopeSearchBaseCallback cb,
                                              gpointer cb_target)
{
	UnityAggregatedScopeSearch * self;
	Block7Data* _data7_;
	self = (UnityAggregatedScopeSearch*) base;
	_data7_ = g_slice_new0 (Block7Data);
	_data7_->_ref_count_ = 1;
	_data7_->self = g_object_ref (self);
	_data7_->cb = cb;
	_data7_->cb_target = cb_target;
	unity_aggregated_scope_search_real_async_run (self, ___lambda32__gasync_ready_callback, block7_data_ref (_data7_));
	block7_data_unref (_data7_);
	_data7_ = NULL;
}


static void
g_cclosure_user_marshal_VOID__POINTER_INT (GClosure * closure,
                                           GValue * return_value,
                                           guint n_param_values,
                                           const GValue * param_values,
                                           gpointer invocation_hint,
                                           gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__POINTER_INT) (gpointer data1, gpointer arg_1, gint arg_2, gpointer data2);
	register GMarshalFunc_VOID__POINTER_INT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
	g_return_if_fail (n_param_values == 3);
	if (G_CCLOSURE_SWAP_DATA (closure)) {
		data1 = closure->data;
		data2 = param_values->data[0].v_pointer;
	} else {
		data1 = param_values->data[0].v_pointer;
		data2 = closure->data;
	}
	callback = (GMarshalFunc_VOID__POINTER_INT) (marshal_data ? marshal_data : cc->callback);
	callback (data1, g_value_get_pointer (param_values + 1), g_value_get_int (param_values + 2), data2);
}


static void
unity_aggregated_scope_search_class_init (UnityAggregatedScopeSearchClass * klass)
{
	unity_aggregated_scope_search_parent_class = g_type_class_peek_parent (klass);
	((UnityScopeSearchBaseClass *) klass)->run = (void (*) (UnityScopeSearchBase *)) unity_aggregated_scope_search_real_run;
	((UnityScopeSearchBaseClass *) klass)->run_async = (void (*) (UnityScopeSearchBase *, UnityScopeSearchBaseCallback, gpointer)) unity_aggregated_scope_search_real_run_async;
	unity_aggregated_scope_search_signals[UNITY_AGGREGATED_SCOPE_SEARCH_TRANSACTION_COMPLETE_SIGNAL] = g_signal_new ("transaction-complete", UNITY_TYPE_AGGREGATED_SCOPE_SEARCH, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__STRING, G_TYPE_NONE, 1, G_TYPE_STRING);
	unity_aggregated_scope_search_signals[UNITY_AGGREGATED_SCOPE_SEARCH_CATEGORY_ORDER_CHANGED_SIGNAL] = g_signal_new ("category-order-changed", UNITY_TYPE_AGGREGATED_SCOPE_SEARCH, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__POINTER_INT, G_TYPE_NONE, 2, G_TYPE_POINTER, G_TYPE_INT);
}


static void
unity_aggregated_scope_search_instance_init (UnityAggregatedScopeSearch * self)
{
}


GType
unity_aggregated_scope_search_get_type (void)
{
	static volatile gsize unity_aggregated_scope_search_type_id__volatile = 0;
	if (g_once_init_enter (&unity_aggregated_scope_search_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityAggregatedScopeSearchClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_aggregated_scope_search_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityAggregatedScopeSearch), 0, (GInstanceInitFunc) unity_aggregated_scope_search_instance_init, NULL };
		GType unity_aggregated_scope_search_type_id;
		unity_aggregated_scope_search_type_id = g_type_register_static (UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, "UnityAggregatedScopeSearch", &g_define_type_info, 0);
		g_once_init_leave (&unity_aggregated_scope_search_type_id__volatile, unity_aggregated_scope_search_type_id);
	}
	return unity_aggregated_scope_search_type_id__volatile;
}



