
/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */

#include "e-book-enumtypes.h"
/* enumerations from "/run/build/evolution-data-server/src/addressbook/libebook/e-book-types.h" */
#include "/run/build/evolution-data-server/src/addressbook/libebook/e-book-types.h"
GType
e_book_status_get_type (void)
{
	static volatile gsize the_type__volatile = 0;

	if (g_once_init_enter (&the_type__volatile)) {
		static const GEnumValue values[] = {
			{ E_BOOK_ERROR_OK,
			  "E_BOOK_ERROR_OK",
			  "ok" },
			{ E_BOOK_ERROR_INVALID_ARG,
			  "E_BOOK_ERROR_INVALID_ARG",
			  "invalid-arg" },
			{ E_BOOK_ERROR_BUSY,
			  "E_BOOK_ERROR_BUSY",
			  "busy" },
			{ E_BOOK_ERROR_REPOSITORY_OFFLINE,
			  "E_BOOK_ERROR_REPOSITORY_OFFLINE",
			  "repository-offline" },
			{ E_BOOK_ERROR_NO_SUCH_BOOK,
			  "E_BOOK_ERROR_NO_SUCH_BOOK",
			  "no-such-book" },
			{ E_BOOK_ERROR_NO_SELF_CONTACT,
			  "E_BOOK_ERROR_NO_SELF_CONTACT",
			  "no-self-contact" },
			{ E_BOOK_ERROR_SOURCE_NOT_LOADED,
			  "E_BOOK_ERROR_SOURCE_NOT_LOADED",
			  "source-not-loaded" },
			{ E_BOOK_ERROR_SOURCE_ALREADY_LOADED,
			  "E_BOOK_ERROR_SOURCE_ALREADY_LOADED",
			  "source-already-loaded" },
			{ E_BOOK_ERROR_PERMISSION_DENIED,
			  "E_BOOK_ERROR_PERMISSION_DENIED",
			  "permission-denied" },
			{ E_BOOK_ERROR_CONTACT_NOT_FOUND,
			  "E_BOOK_ERROR_CONTACT_NOT_FOUND",
			  "contact-not-found" },
			{ E_BOOK_ERROR_CONTACT_ID_ALREADY_EXISTS,
			  "E_BOOK_ERROR_CONTACT_ID_ALREADY_EXISTS",
			  "contact-id-already-exists" },
			{ E_BOOK_ERROR_PROTOCOL_NOT_SUPPORTED,
			  "E_BOOK_ERROR_PROTOCOL_NOT_SUPPORTED",
			  "protocol-not-supported" },
			{ E_BOOK_ERROR_CANCELLED,
			  "E_BOOK_ERROR_CANCELLED",
			  "cancelled" },
			{ E_BOOK_ERROR_COULD_NOT_CANCEL,
			  "E_BOOK_ERROR_COULD_NOT_CANCEL",
			  "could-not-cancel" },
			{ E_BOOK_ERROR_AUTHENTICATION_FAILED,
			  "E_BOOK_ERROR_AUTHENTICATION_FAILED",
			  "authentication-failed" },
			{ E_BOOK_ERROR_AUTHENTICATION_REQUIRED,
			  "E_BOOK_ERROR_AUTHENTICATION_REQUIRED",
			  "authentication-required" },
			{ E_BOOK_ERROR_TLS_NOT_AVAILABLE,
			  "E_BOOK_ERROR_TLS_NOT_AVAILABLE",
			  "tls-not-available" },
			{ E_BOOK_ERROR_DBUS_EXCEPTION,
			  "E_BOOK_ERROR_DBUS_EXCEPTION",
			  "dbus-exception" },
			{ E_BOOK_ERROR_NO_SUCH_SOURCE,
			  "E_BOOK_ERROR_NO_SUCH_SOURCE",
			  "no-such-source" },
			{ E_BOOK_ERROR_OFFLINE_UNAVAILABLE,
			  "E_BOOK_ERROR_OFFLINE_UNAVAILABLE",
			  "offline-unavailable" },
			{ E_BOOK_ERROR_OTHER_ERROR,
			  "E_BOOK_ERROR_OTHER_ERROR",
			  "other-error" },
			{ E_BOOK_ERROR_INVALID_SERVER_VERSION,
			  "E_BOOK_ERROR_INVALID_SERVER_VERSION",
			  "invalid-server-version" },
			{ E_BOOK_ERROR_UNSUPPORTED_AUTHENTICATION_METHOD,
			  "E_BOOK_ERROR_UNSUPPORTED_AUTHENTICATION_METHOD",
			  "unsupported-authentication-method" },
			{ E_BOOK_ERROR_NO_SPACE,
			  "E_BOOK_ERROR_NO_SPACE",
			  "no-space" },
			{ E_BOOK_ERROR_NOT_SUPPORTED,
			  "E_BOOK_ERROR_NOT_SUPPORTED",
			  "not-supported" },
			{ 0, NULL, NULL }
		};
		GType the_type = g_enum_register_static (
			g_intern_static_string ("EBookStatus"),
			values);
		g_once_init_leave (&the_type__volatile, the_type);
	}
	return the_type__volatile;
}

/* Generated data ends here */

