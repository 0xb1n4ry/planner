/* WhenPopover.c generated by valac 0.40.11, the Vala compiler
 * generated from WhenPopover.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <glib/gi18n-lib.h>
#include <gdk/gdk.h>
#include <granite.h>


#define WIDGETS_POPOVERS_TYPE_WHEN_POPOVER (widgets_popovers_when_popover_get_type ())
#define WIDGETS_POPOVERS_WHEN_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, WidgetsPopoversWhenPopover))
#define WIDGETS_POPOVERS_WHEN_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, WidgetsPopoversWhenPopoverClass))
#define WIDGETS_POPOVERS_IS_WHEN_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_POPOVERS_TYPE_WHEN_POPOVER))
#define WIDGETS_POPOVERS_IS_WHEN_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_POPOVERS_TYPE_WHEN_POPOVER))
#define WIDGETS_POPOVERS_WHEN_POPOVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, WidgetsPopoversWhenPopoverClass))

typedef struct _WidgetsPopoversWhenPopover WidgetsPopoversWhenPopover;
typedef struct _WidgetsPopoversWhenPopoverClass WidgetsPopoversWhenPopoverClass;
typedef struct _WidgetsPopoversWhenPopoverPrivate WidgetsPopoversWhenPopoverPrivate;

#define WIDGETS_TYPE_TIME_PICKER (widgets_time_picker_get_type ())
#define WIDGETS_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_TIME_PICKER, WidgetsTimePicker))
#define WIDGETS_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_TIME_PICKER, WidgetsTimePickerClass))
#define WIDGETS_IS_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_TIME_PICKER))
#define WIDGETS_IS_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_TIME_PICKER))
#define WIDGETS_TIME_PICKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_TIME_PICKER, WidgetsTimePickerClass))

typedef struct _WidgetsTimePicker WidgetsTimePicker;
typedef struct _WidgetsTimePickerClass WidgetsTimePickerClass;
enum  {
	WIDGETS_POPOVERS_WHEN_POPOVER_0_PROPERTY,
	WIDGETS_POPOVERS_WHEN_POPOVER_NUM_PROPERTIES
};
static GParamSpec* widgets_popovers_when_popover_properties[WIDGETS_POPOVERS_WHEN_POPOVER_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
typedef struct _Block73Data Block73Data;

#define WIDGETS_CALENDAR_TYPE_CALENDAR (widgets_calendar_calendar_get_type ())
#define WIDGETS_CALENDAR_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendar))
#define WIDGETS_CALENDAR_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))
#define WIDGETS_CALENDAR_IS_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_IS_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_CALENDAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))

typedef struct _WidgetsCalendarCalendar WidgetsCalendarCalendar;
typedef struct _WidgetsCalendarCalendarClass WidgetsCalendarCalendarClass;
typedef struct _Block74Data Block74Data;
typedef struct _WidgetsTimePickerPrivate WidgetsTimePickerPrivate;
typedef struct _Block75Data Block75Data;
enum  {
	WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL,
	WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_REMOVE_SIGNAL,
	WIDGETS_POPOVERS_WHEN_POPOVER_NUM_SIGNALS
};
static guint widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_NUM_SIGNALS] = {0};

struct _WidgetsPopoversWhenPopover {
	GtkPopover parent_instance;
	WidgetsPopoversWhenPopoverPrivate * priv;
	GtkButton* remove_button;
	GtkSwitch* reminder_switch;
	WidgetsTimePicker* reminder_timepicker;
};

struct _WidgetsPopoversWhenPopoverClass {
	GtkPopoverClass parent_class;
};

struct _WidgetsPopoversWhenPopoverPrivate {
	GtkStack* main_stack;
	gint item_selected;
	GDateTime* selected_date;
};

struct _Block73Data {
	int _ref_count_;
	WidgetsPopoversWhenPopover* self;
	GtkRadioButton* today_radio;
	GtkEventBox* today_eventbox;
	GtkRadioButton* tomorrow_radio;
	GtkEventBox* tomorrow_eventbox;
};

struct _Block74Data {
	int _ref_count_;
	WidgetsPopoversWhenPopover* self;
	GtkRevealer* timepicker_revealer;
};

struct _WidgetsTimePicker {
	GtkEventBox parent_instance;
	WidgetsTimePickerPrivate * priv;
	GtkEntry* time_entry;
};

struct _WidgetsTimePickerClass {
	GtkEventBoxClass parent_class;
};

struct _Block75Data {
	int _ref_count_;
	WidgetsPopoversWhenPopover* self;
	GraniteWidgetsModeButton* mode_button;
};


static gpointer widgets_popovers_when_popover_parent_class = NULL;

GType widgets_popovers_when_popover_get_type (void) G_GNUC_CONST;
GType widgets_time_picker_get_type (void) G_GNUC_CONST;
#define WIDGETS_POPOVERS_WHEN_POPOVER_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, WidgetsPopoversWhenPopoverPrivate))
WidgetsPopoversWhenPopover* widgets_popovers_when_popover_new (GtkWidget* relative);
WidgetsPopoversWhenPopover* widgets_popovers_when_popover_construct (GType object_type,
                                                                     GtkWidget* relative);
static GtkWidget* widgets_popovers_when_popover_get_when_widget (WidgetsPopoversWhenPopover* self);
static Block73Data* block73_data_ref (Block73Data* _data73_);
static void block73_data_unref (void * _userdata_);
GType widgets_calendar_calendar_get_type (void) G_GNUC_CONST;
WidgetsCalendarCalendar* widgets_calendar_calendar_new (gboolean _sensitive_past_days);
WidgetsCalendarCalendar* widgets_calendar_calendar_construct (GType object_type,
                                                              gboolean _sensitive_past_days);
static gboolean __lambda23_ (Block73Data* _data73_,
                      GdkEvent* event);
GDateTime* widgets_time_picker_get_time (WidgetsTimePicker* self);
static gboolean ___lambda23__gtk_widget_event (GtkWidget* _sender,
                                        GdkEvent* event,
                                        gpointer self);
static gboolean __lambda24_ (Block73Data* _data73_,
                      GdkEvent* event);
static gboolean ___lambda24__gtk_widget_event (GtkWidget* _sender,
                                        GdkEvent* event,
                                        gpointer self);
static void __lambda25_ (Block73Data* _data73_,
                  GDateTime* date);
static void ___lambda25__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                               GDateTime* date,
                                                               gpointer self);
static gboolean __lambda26_ (Block73Data* _data73_,
                      GdkEventCrossing* event);
static gboolean ___lambda26__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                     GdkEventCrossing* event,
                                                     gpointer self);
static gboolean __lambda27_ (Block73Data* _data73_,
                      GdkEventCrossing* event);
static gboolean ___lambda27__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                                     GdkEventCrossing* event,
                                                     gpointer self);
static gboolean __lambda28_ (Block73Data* _data73_,
                      GdkEventCrossing* event);
static gboolean ___lambda28__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                                     GdkEventCrossing* event,
                                                     gpointer self);
static gboolean __lambda29_ (Block73Data* _data73_,
                      GdkEventCrossing* event);
static gboolean ___lambda29__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                                     GdkEventCrossing* event,
                                                     gpointer self);
static GtkWidget* widgets_popovers_when_popover_get_reminder_widget (WidgetsPopoversWhenPopover* self);
static Block74Data* block74_data_ref (Block74Data* _data74_);
static void block74_data_unref (void * _userdata_);
WidgetsTimePicker* widgets_time_picker_new (void);
WidgetsTimePicker* widgets_time_picker_construct (GType object_type);
static void __lambda30_ (Block74Data* _data74_);
static void ___lambda30__g_object_notify (GObject* _sender,
                                   GParamSpec* pspec,
                                   gpointer self);
static void __lambda31_ (Block74Data* _data74_);
static void ___lambda31__g_object_notify (GObject* _sender,
                                   GParamSpec* pspec,
                                   gpointer self);
static void __lambda32_ (WidgetsPopoversWhenPopover* self);
static void ___lambda32__gtk_entry_activate (GtkEntry* _sender,
                                      gpointer self);
static void __lambda33_ (WidgetsPopoversWhenPopover* self);
static void ___lambda33__gtk_editable_changed (GtkEditable* _sender,
                                        gpointer self);
static void g_cclosure_user_marshal_VOID__BOXED_BOOLEAN_BOXED (GClosure * closure,
                                                        GValue * return_value,
                                                        guint n_param_values,
                                                        const GValue * param_values,
                                                        gpointer invocation_hint,
                                                        gpointer marshal_data);
static GObject * widgets_popovers_when_popover_constructor (GType type,
                                                     guint n_construct_properties,
                                                     GObjectConstructParam * construct_properties);
static Block75Data* block75_data_ref (Block75Data* _data75_);
static void block75_data_unref (void * _userdata_);
static void _widgets_popovers_when_popover___lambda34_ (Block75Data* _data75_,
                                                 GtkWidget* widget);
static void __widgets_popovers_when_popover___lambda34__granite_widgets_mode_button_mode_changed (GraniteWidgetsModeButton* _sender,
                                                                                           GtkWidget* widget,
                                                                                           gpointer self);
static void _widgets_popovers_when_popover___lambda35_ (WidgetsPopoversWhenPopover* self);
static void __widgets_popovers_when_popover___lambda35__gtk_button_clicked (GtkButton* _sender,
                                                                     gpointer self);
static void widgets_popovers_when_popover_finalize (GObject * obj);


WidgetsPopoversWhenPopover*
widgets_popovers_when_popover_construct (GType object_type,
                                         GtkWidget* relative)
{
	WidgetsPopoversWhenPopover * self = NULL;
#line 33 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (relative != NULL, NULL);
#line 34 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = (WidgetsPopoversWhenPopover*) g_object_new (object_type, "relative-to", relative, "modal", TRUE, "position", GTK_POS_RIGHT, NULL);
#line 33 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return self;
#line 236 "WhenPopover.c"
}


WidgetsPopoversWhenPopover*
widgets_popovers_when_popover_new (GtkWidget* relative)
{
#line 33 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return widgets_popovers_when_popover_construct (WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, relative);
#line 245 "WhenPopover.c"
}


static Block73Data*
block73_data_ref (Block73Data* _data73_)
{
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_atomic_int_inc (&_data73_->_ref_count_);
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return _data73_;
#line 256 "WhenPopover.c"
}


static void
block73_data_unref (void * _userdata_)
{
	Block73Data* _data73_;
	_data73_ = (Block73Data*) _userdata_;
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (g_atomic_int_dec_and_test (&_data73_->_ref_count_)) {
#line 267 "WhenPopover.c"
		WidgetsPopoversWhenPopover* self;
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		self = _data73_->self;
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (_data73_->tomorrow_eventbox);
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (_data73_->tomorrow_radio);
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (_data73_->today_eventbox);
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (_data73_->today_radio);
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (self);
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_slice_free (Block73Data, _data73_);
#line 283 "WhenPopover.c"
	}
}


static gboolean
__lambda23_ (Block73Data* _data73_,
             GdkEvent* event)
{
	WidgetsPopoversWhenPopover* self;
	gboolean result = FALSE;
	GdkEventType _tmp0_;
#line 132 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data73_->self;
#line 132 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 133 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = event->type;
#line 133 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp0_ == GDK_BUTTON_PRESS) {
#line 303 "WhenPopover.c"
		GDateTime* duedate_now = NULL;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		GtkSwitch* _tmp3_;
		gboolean _tmp4_;
		gboolean _tmp5_;
		WidgetsTimePicker* _tmp6_;
		GDateTime* _tmp7_;
		GDateTime* _tmp8_;
#line 134 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_widget_set_visible ((GtkWidget*) _data73_->today_radio, TRUE);
#line 135 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_toggle_button_set_active ((GtkToggleButton*) _data73_->today_radio, TRUE);
#line 136 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		self->priv->item_selected = 0;
#line 138 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_widget_set_visible ((GtkWidget*) _data73_->tomorrow_radio, FALSE);
#line 140 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp1_ = g_date_time_new_now_local ();
#line 140 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		duedate_now = _tmp1_;
#line 141 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp2_ = duedate_now;
#line 141 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp3_ = self->reminder_switch;
#line 141 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp4_ = gtk_switch_get_active (_tmp3_);
#line 141 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp5_ = _tmp4_;
#line 141 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp6_ = self->reminder_timepicker;
#line 141 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp7_ = widgets_time_picker_get_time (_tmp6_);
#line 141 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp8_ = _tmp7_;
#line 141 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp2_, _tmp5_, _tmp8_);
#line 133 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_date_time_unref0 (duedate_now);
#line 343 "WhenPopover.c"
	}
#line 144 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	result = FALSE;
#line 144 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 349 "WhenPopover.c"
}


static gboolean
___lambda23__gtk_widget_event (GtkWidget* _sender,
                               GdkEvent* event,
                               gpointer self)
{
	gboolean result;
	result = __lambda23_ (self, event);
#line 132 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 362 "WhenPopover.c"
}


static gboolean
__lambda24_ (Block73Data* _data73_,
             GdkEvent* event)
{
	WidgetsPopoversWhenPopover* self;
	gboolean result = FALSE;
	GdkEventType _tmp0_;
#line 147 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data73_->self;
#line 147 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 148 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = event->type;
#line 148 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp0_ == GDK_BUTTON_PRESS) {
#line 381 "WhenPopover.c"
		GDateTime* duedate_tomorrow = NULL;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		GDateTime* _tmp3_;
		GDateTime* _tmp4_;
		GDateTime* _tmp5_;
		GtkSwitch* _tmp6_;
		gboolean _tmp7_;
		gboolean _tmp8_;
		WidgetsTimePicker* _tmp9_;
		GDateTime* _tmp10_;
		GDateTime* _tmp11_;
#line 149 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_widget_set_visible ((GtkWidget*) _data73_->tomorrow_radio, TRUE);
#line 150 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_toggle_button_set_active ((GtkToggleButton*) _data73_->tomorrow_radio, TRUE);
#line 151 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		self->priv->item_selected = 1;
#line 153 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_widget_set_visible ((GtkWidget*) _data73_->today_radio, FALSE);
#line 155 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp1_ = g_date_time_new_now_local ();
#line 155 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp2_ = _tmp1_;
#line 155 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp3_ = g_date_time_add_days (_tmp2_, 1);
#line 155 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp4_ = _tmp3_;
#line 155 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_date_time_unref0 (_tmp2_);
#line 155 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		duedate_tomorrow = _tmp4_;
#line 156 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp5_ = duedate_tomorrow;
#line 156 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp6_ = self->reminder_switch;
#line 156 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp7_ = gtk_switch_get_active (_tmp6_);
#line 156 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp8_ = _tmp7_;
#line 156 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp9_ = self->reminder_timepicker;
#line 156 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp10_ = widgets_time_picker_get_time (_tmp9_);
#line 156 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp11_ = _tmp10_;
#line 156 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp5_, _tmp8_, _tmp11_);
#line 148 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_date_time_unref0 (duedate_tomorrow);
#line 432 "WhenPopover.c"
	}
#line 159 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	result = FALSE;
#line 159 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 438 "WhenPopover.c"
}


static gboolean
___lambda24__gtk_widget_event (GtkWidget* _sender,
                               GdkEvent* event,
                               gpointer self)
{
	gboolean result;
	result = __lambda24_ (self, event);
#line 147 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 451 "WhenPopover.c"
}


static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 163 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 460 "WhenPopover.c"
}


static void
__lambda25_ (Block73Data* _data73_,
             GDateTime* date)
{
	WidgetsPopoversWhenPopover* self;
	GDateTime* _tmp0_;
	GtkSwitch* _tmp1_;
	gboolean _tmp2_;
	gboolean _tmp3_;
	WidgetsTimePicker* _tmp4_;
	GDateTime* _tmp5_;
	GDateTime* _tmp6_;
#line 162 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data73_->self;
#line 162 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_if_fail (date != NULL);
#line 163 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = _g_date_time_ref0 (date);
#line 163 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_date_time_unref0 (self->priv->selected_date);
#line 163 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self->priv->selected_date = _tmp0_;
#line 165 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_visible ((GtkWidget*) _data73_->today_radio, FALSE);
#line 166 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_visible ((GtkWidget*) _data73_->tomorrow_radio, FALSE);
#line 167 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self->priv->item_selected = 2;
#line 169 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = self->reminder_switch;
#line 169 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp2_ = gtk_switch_get_active (_tmp1_);
#line 169 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp3_ = _tmp2_;
#line 169 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp4_ = self->reminder_timepicker;
#line 169 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp5_ = widgets_time_picker_get_time (_tmp4_);
#line 169 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp6_ = _tmp5_;
#line 169 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, date, _tmp3_, _tmp6_);
#line 506 "WhenPopover.c"
}


static void
___lambda25__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                          GDateTime* date,
                                                          gpointer self)
{
#line 162 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	__lambda25_ (self, date);
#line 517 "WhenPopover.c"
}


static gboolean
__lambda26_ (Block73Data* _data73_,
             GdkEventCrossing* event)
{
	WidgetsPopoversWhenPopover* self;
	gboolean result = FALSE;
	GtkStyleContext* _tmp0_;
#line 172 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data73_->self;
#line 172 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 173 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) _data73_->today_eventbox);
#line 173 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_add_class (_tmp0_, "when-item");
#line 174 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	result = FALSE;
#line 174 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 540 "WhenPopover.c"
}


static gboolean
___lambda26__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                            GdkEventCrossing* event,
                                            gpointer self)
{
	gboolean result;
	result = __lambda26_ (self, event);
#line 172 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 553 "WhenPopover.c"
}


static gboolean
__lambda27_ (Block73Data* _data73_,
             GdkEventCrossing* event)
{
	WidgetsPopoversWhenPopover* self;
	gboolean result = FALSE;
	GdkNotifyType _tmp0_;
	GtkStyleContext* _tmp1_;
#line 177 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data73_->self;
#line 177 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 178 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = event->detail;
#line 178 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp0_ == GDK_NOTIFY_INFERIOR) {
#line 179 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		result = FALSE;
#line 179 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		return result;
#line 577 "WhenPopover.c"
	}
#line 182 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = gtk_widget_get_style_context ((GtkWidget*) _data73_->today_eventbox);
#line 182 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_remove_class (_tmp1_, "when-item");
#line 183 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	result = FALSE;
#line 183 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 587 "WhenPopover.c"
}


static gboolean
___lambda27__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                            GdkEventCrossing* event,
                                            gpointer self)
{
	gboolean result;
	result = __lambda27_ (self, event);
#line 177 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 600 "WhenPopover.c"
}


static gboolean
__lambda28_ (Block73Data* _data73_,
             GdkEventCrossing* event)
{
	WidgetsPopoversWhenPopover* self;
	gboolean result = FALSE;
	GtkStyleContext* _tmp0_;
#line 186 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data73_->self;
#line 186 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 187 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) _data73_->tomorrow_eventbox);
#line 187 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_add_class (_tmp0_, "when-item");
#line 189 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	result = FALSE;
#line 189 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 623 "WhenPopover.c"
}


static gboolean
___lambda28__gtk_widget_enter_notify_event (GtkWidget* _sender,
                                            GdkEventCrossing* event,
                                            gpointer self)
{
	gboolean result;
	result = __lambda28_ (self, event);
#line 186 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 636 "WhenPopover.c"
}


static gboolean
__lambda29_ (Block73Data* _data73_,
             GdkEventCrossing* event)
{
	WidgetsPopoversWhenPopover* self;
	gboolean result = FALSE;
	GdkNotifyType _tmp0_;
	GtkStyleContext* _tmp1_;
#line 192 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data73_->self;
#line 192 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 193 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = event->detail;
#line 193 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp0_ == GDK_NOTIFY_INFERIOR) {
#line 194 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		result = FALSE;
#line 194 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		return result;
#line 660 "WhenPopover.c"
	}
#line 197 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = gtk_widget_get_style_context ((GtkWidget*) _data73_->tomorrow_eventbox);
#line 197 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_remove_class (_tmp1_, "when-item");
#line 198 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	result = FALSE;
#line 198 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 670 "WhenPopover.c"
}


static gboolean
___lambda29__gtk_widget_leave_notify_event (GtkWidget* _sender,
                                            GdkEventCrossing* event,
                                            gpointer self)
{
	gboolean result;
	result = __lambda29_ (self, event);
#line 192 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 683 "WhenPopover.c"
}


static GtkWidget*
widgets_popovers_when_popover_get_when_widget (WidgetsPopoversWhenPopover* self)
{
	GtkWidget* result = NULL;
	Block73Data* _data73_;
	GtkRadioButton* _tmp0_;
	GtkBox* today_box = NULL;
	GtkBox* _tmp1_;
	GtkImage* _tmp2_;
	GtkImage* _tmp3_;
	GtkLabel* _tmp4_;
	GtkLabel* _tmp5_;
	GtkEventBox* _tmp6_;
	GtkStyleContext* _tmp7_;
	GtkRadioButton* _tmp8_;
	GtkBox* tomorrow_box = NULL;
	GtkBox* _tmp9_;
	GtkImage* _tmp10_;
	GtkImage* _tmp11_;
	GtkLabel* _tmp12_;
	GtkLabel* _tmp13_;
	GtkEventBox* _tmp14_;
	GtkStyleContext* _tmp15_;
	WidgetsCalendarCalendar* calendar = NULL;
	WidgetsCalendarCalendar* _tmp16_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp17_;
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data73_ = g_slice_new0 (Block73Data);
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data73_->_ref_count_ = 1;
#line 92 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data73_->self = g_object_ref (self);
#line 93 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = (GtkRadioButton*) gtk_radio_button_new_with_label_from_widget (NULL, "");
#line 93 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp0_);
#line 93 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data73_->today_radio = _tmp0_;
#line 94 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_no_show_all ((GtkWidget*) _data73_->today_radio, TRUE);
#line 96 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 96 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp1_);
#line 96 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	today_box = _tmp1_;
#line 97 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) today_box, "margin", 6, NULL);
#line 98 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp2_ = (GtkImage*) gtk_image_new_from_icon_name ("planner-when", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 98 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp2_);
#line 98 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp3_ = _tmp2_;
#line 98 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_start (today_box, (GtkWidget*) _tmp3_, FALSE, FALSE, (guint) 0);
#line 98 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (_tmp3_);
#line 99 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp4_ = (GtkLabel*) gtk_label_new (_ ("Today"));
#line 99 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp4_);
#line 99 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp5_ = _tmp4_;
#line 99 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_start (today_box, (GtkWidget*) _tmp5_, FALSE, FALSE, (guint) 0);
#line 99 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (_tmp5_);
#line 100 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_end (today_box, (GtkWidget*) _data73_->today_radio, FALSE, FALSE, (guint) 0);
#line 102 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp6_ = (GtkEventBox*) gtk_event_box_new ();
#line 102 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp6_);
#line 102 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data73_->today_eventbox = _tmp6_;
#line 103 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_add_events ((GtkWidget*) _data73_->today_eventbox, (gint) (GDK_ENTER_NOTIFY_MASK | GDK_LEAVE_NOTIFY_MASK));
#line 104 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) _data73_->today_eventbox);
#line 104 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_add_class (_tmp7_, "menuitem");
#line 105 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) _data73_->today_eventbox, (GtkWidget*) today_box);
#line 107 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp8_ = (GtkRadioButton*) gtk_radio_button_new_with_label_from_widget (_data73_->today_radio, "");
#line 107 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp8_);
#line 107 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data73_->tomorrow_radio = _tmp8_;
#line 108 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_no_show_all ((GtkWidget*) _data73_->tomorrow_radio, TRUE);
#line 110 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp9_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 110 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp9_);
#line 110 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	tomorrow_box = _tmp9_;
#line 111 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) tomorrow_box, "margin", 6, NULL);
#line 112 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp10_ = (GtkImage*) gtk_image_new_from_icon_name ("planner-upcoming", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 112 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp10_);
#line 112 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp11_ = _tmp10_;
#line 112 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_start (tomorrow_box, (GtkWidget*) _tmp11_, FALSE, FALSE, (guint) 0);
#line 112 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (_tmp11_);
#line 113 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp12_ = (GtkLabel*) gtk_label_new (_ ("Tomorrow"));
#line 113 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp12_);
#line 113 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp13_ = _tmp12_;
#line 113 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_start (tomorrow_box, (GtkWidget*) _tmp13_, FALSE, FALSE, (guint) 0);
#line 113 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (_tmp13_);
#line 114 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_end (tomorrow_box, (GtkWidget*) _data73_->tomorrow_radio, FALSE, FALSE, (guint) 0);
#line 116 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp14_ = (GtkEventBox*) gtk_event_box_new ();
#line 116 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp14_);
#line 116 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data73_->tomorrow_eventbox = _tmp14_;
#line 117 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_add_events ((GtkWidget*) _data73_->tomorrow_eventbox, (gint) (GDK_ENTER_NOTIFY_MASK | GDK_LEAVE_NOTIFY_MASK));
#line 118 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp15_ = gtk_widget_get_style_context ((GtkWidget*) _data73_->tomorrow_eventbox);
#line 118 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_add_class (_tmp15_, "menuitem");
#line 119 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) _data73_->tomorrow_eventbox, (GtkWidget*) tomorrow_box);
#line 121 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp16_ = widgets_calendar_calendar_new (TRUE);
#line 121 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp16_);
#line 121 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	calendar = _tmp16_;
#line 122 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_hexpand ((GtkWidget*) calendar, TRUE);
#line 124 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp17_ = (GtkGrid*) gtk_grid_new ();
#line 124 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp17_);
#line 124 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	main_grid = _tmp17_;
#line 125 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) main_grid, "expand", TRUE, NULL);
#line 126 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) main_grid, GTK_ORIENTATION_VERTICAL);
#line 128 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) main_grid, (GtkWidget*) _data73_->today_eventbox);
#line 129 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) main_grid, (GtkWidget*) _data73_->tomorrow_eventbox);
#line 130 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) main_grid, (GtkWidget*) calendar);
#line 132 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data ((GtkWidget*) _data73_->today_eventbox, "event", (GCallback) ___lambda23__gtk_widget_event, block73_data_ref (_data73_), (GClosureNotify) block73_data_unref, 0);
#line 147 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data ((GtkWidget*) _data73_->tomorrow_eventbox, "event", (GCallback) ___lambda24__gtk_widget_event, block73_data_ref (_data73_), (GClosureNotify) block73_data_unref, 0);
#line 162 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data (calendar, "selection-changed", (GCallback) ___lambda25__widgets_calendar_calendar_selection_changed, block73_data_ref (_data73_), (GClosureNotify) block73_data_unref, 0);
#line 172 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data ((GtkWidget*) _data73_->today_eventbox, "enter-notify-event", (GCallback) ___lambda26__gtk_widget_enter_notify_event, block73_data_ref (_data73_), (GClosureNotify) block73_data_unref, 0);
#line 177 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data ((GtkWidget*) _data73_->today_eventbox, "leave-notify-event", (GCallback) ___lambda27__gtk_widget_leave_notify_event, block73_data_ref (_data73_), (GClosureNotify) block73_data_unref, 0);
#line 186 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data ((GtkWidget*) _data73_->tomorrow_eventbox, "enter-notify-event", (GCallback) ___lambda28__gtk_widget_enter_notify_event, block73_data_ref (_data73_), (GClosureNotify) block73_data_unref, 0);
#line 192 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data ((GtkWidget*) _data73_->tomorrow_eventbox, "leave-notify-event", (GCallback) ___lambda29__gtk_widget_leave_notify_event, block73_data_ref (_data73_), (GClosureNotify) block73_data_unref, 0);
#line 201 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	result = (GtkWidget*) main_grid;
#line 201 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (calendar);
#line 201 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (tomorrow_box);
#line 201 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (today_box);
#line 201 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	block73_data_unref (_data73_);
#line 201 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data73_ = NULL;
#line 201 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 878 "WhenPopover.c"
}


static Block74Data*
block74_data_ref (Block74Data* _data74_)
{
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_atomic_int_inc (&_data74_->_ref_count_);
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return _data74_;
#line 889 "WhenPopover.c"
}


static void
block74_data_unref (void * _userdata_)
{
	Block74Data* _data74_;
	_data74_ = (Block74Data*) _userdata_;
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (g_atomic_int_dec_and_test (&_data74_->_ref_count_)) {
#line 900 "WhenPopover.c"
		WidgetsPopoversWhenPopover* self;
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		self = _data74_->self;
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (_data74_->timepicker_revealer);
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (self);
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_slice_free (Block74Data, _data74_);
#line 910 "WhenPopover.c"
	}
}


static void
__lambda30_ (Block74Data* _data74_)
{
	WidgetsPopoversWhenPopover* self;
	GtkSwitch* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 235 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data74_->self;
#line 236 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = self->reminder_switch;
#line 236 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = gtk_switch_get_active (_tmp0_);
#line 236 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp2_ = _tmp1_;
#line 236 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp2_) {
#line 932 "WhenPopover.c"
		gint _tmp3_;
#line 237 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_revealer_set_reveal_child (_data74_->timepicker_revealer, TRUE);
#line 239 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp3_ = self->priv->item_selected;
#line 239 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		if (_tmp3_ == 0) {
#line 940 "WhenPopover.c"
			GDateTime* duedate_now = NULL;
			GDateTime* _tmp4_;
			GDateTime* _tmp5_;
			GtkSwitch* _tmp6_;
			gboolean _tmp7_;
			gboolean _tmp8_;
			WidgetsTimePicker* _tmp9_;
			GDateTime* _tmp10_;
			GDateTime* _tmp11_;
#line 240 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp4_ = g_date_time_new_now_local ();
#line 240 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			duedate_now = _tmp4_;
#line 241 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp5_ = duedate_now;
#line 241 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp6_ = self->reminder_switch;
#line 241 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp7_ = gtk_switch_get_active (_tmp6_);
#line 241 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp8_ = _tmp7_;
#line 241 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp9_ = self->reminder_timepicker;
#line 241 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp10_ = widgets_time_picker_get_time (_tmp9_);
#line 241 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp11_ = _tmp10_;
#line 241 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp5_, _tmp8_, _tmp11_);
#line 239 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_g_date_time_unref0 (duedate_now);
#line 972 "WhenPopover.c"
		} else {
			gint _tmp12_;
#line 242 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp12_ = self->priv->item_selected;
#line 242 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			if (_tmp12_ == 1) {
#line 979 "WhenPopover.c"
				GDateTime* duedate_tomorrow = NULL;
				GDateTime* _tmp13_;
				GDateTime* _tmp14_;
				GDateTime* _tmp15_;
				GDateTime* _tmp16_;
				GDateTime* _tmp17_;
				GtkSwitch* _tmp18_;
				gboolean _tmp19_;
				gboolean _tmp20_;
				WidgetsTimePicker* _tmp21_;
				GDateTime* _tmp22_;
				GDateTime* _tmp23_;
#line 243 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp13_ = g_date_time_new_now_local ();
#line 243 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp14_ = _tmp13_;
#line 243 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp15_ = g_date_time_add_days (_tmp14_, 1);
#line 243 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp16_ = _tmp15_;
#line 243 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_g_date_time_unref0 (_tmp14_);
#line 243 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				duedate_tomorrow = _tmp16_;
#line 244 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp17_ = duedate_tomorrow;
#line 244 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp18_ = self->reminder_switch;
#line 244 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp19_ = gtk_switch_get_active (_tmp18_);
#line 244 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp20_ = _tmp19_;
#line 244 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp21_ = self->reminder_timepicker;
#line 244 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp22_ = widgets_time_picker_get_time (_tmp21_);
#line 244 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp23_ = _tmp22_;
#line 244 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp17_, _tmp20_, _tmp23_);
#line 242 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_g_date_time_unref0 (duedate_tomorrow);
#line 1022 "WhenPopover.c"
			} else {
				GDateTime* _tmp24_;
#line 246 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp24_ = self->priv->selected_date;
#line 246 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				if (_tmp24_ == NULL) {
#line 1029 "WhenPopover.c"
					GDateTime* _tmp25_;
					GDateTime* _tmp26_;
					GtkSwitch* _tmp27_;
					gboolean _tmp28_;
					gboolean _tmp29_;
					WidgetsTimePicker* _tmp30_;
					GDateTime* _tmp31_;
					GDateTime* _tmp32_;
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp25_ = g_date_time_new_now_local ();
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp26_ = _tmp25_;
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp27_ = self->reminder_switch;
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp28_ = gtk_switch_get_active (_tmp27_);
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp29_ = _tmp28_;
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp30_ = self->reminder_timepicker;
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp31_ = widgets_time_picker_get_time (_tmp30_);
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp32_ = _tmp31_;
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp26_, _tmp29_, _tmp32_);
#line 247 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_g_date_time_unref0 (_tmp26_);
#line 1058 "WhenPopover.c"
				} else {
					GDateTime* _tmp33_;
					GtkSwitch* _tmp34_;
					gboolean _tmp35_;
					gboolean _tmp36_;
					WidgetsTimePicker* _tmp37_;
					GDateTime* _tmp38_;
					GDateTime* _tmp39_;
#line 249 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp33_ = self->priv->selected_date;
#line 249 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp34_ = self->reminder_switch;
#line 249 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp35_ = gtk_switch_get_active (_tmp34_);
#line 249 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp36_ = _tmp35_;
#line 249 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp37_ = self->reminder_timepicker;
#line 249 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp38_ = widgets_time_picker_get_time (_tmp37_);
#line 249 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp39_ = _tmp38_;
#line 249 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp33_, _tmp36_, _tmp39_);
#line 1083 "WhenPopover.c"
				}
			}
		}
	} else {
		GDateTime* _tmp40_;
		GDateTime* _tmp41_;
		GtkSwitch* _tmp42_;
		gboolean _tmp43_;
		gboolean _tmp44_;
		WidgetsTimePicker* _tmp45_;
		GDateTime* _tmp46_;
		GDateTime* _tmp47_;
#line 253 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_revealer_set_reveal_child (_data74_->timepicker_revealer, FALSE);
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp40_ = g_date_time_new_now_local ();
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp41_ = _tmp40_;
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp42_ = self->reminder_switch;
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp43_ = gtk_switch_get_active (_tmp42_);
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp44_ = _tmp43_;
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp45_ = self->reminder_timepicker;
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp46_ = widgets_time_picker_get_time (_tmp45_);
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp47_ = _tmp46_;
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp41_, _tmp44_, _tmp47_);
#line 254 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_date_time_unref0 (_tmp41_);
#line 1118 "WhenPopover.c"
	}
}


static void
___lambda30__g_object_notify (GObject* _sender,
                              GParamSpec* pspec,
                              gpointer self)
{
#line 235 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	__lambda30_ (self);
#line 1130 "WhenPopover.c"
}


static void
__lambda31_ (Block74Data* _data74_)
{
	WidgetsPopoversWhenPopover* self;
	GtkSwitch* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 258 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data74_->self;
#line 259 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = self->reminder_switch;
#line 259 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = gtk_switch_get_active (_tmp0_);
#line 259 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp2_ = _tmp1_;
#line 259 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp2_) {
#line 1151 "WhenPopover.c"
		gint _tmp3_;
#line 260 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_revealer_set_reveal_child (_data74_->timepicker_revealer, TRUE);
#line 262 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp3_ = self->priv->item_selected;
#line 262 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		if (_tmp3_ == 0) {
#line 1159 "WhenPopover.c"
			GDateTime* duedate_now = NULL;
			GDateTime* _tmp4_;
			GDateTime* _tmp5_;
			GtkSwitch* _tmp6_;
			gboolean _tmp7_;
			gboolean _tmp8_;
			WidgetsTimePicker* _tmp9_;
			GDateTime* _tmp10_;
			GDateTime* _tmp11_;
#line 263 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp4_ = g_date_time_new_now_local ();
#line 263 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			duedate_now = _tmp4_;
#line 264 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp5_ = duedate_now;
#line 264 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp6_ = self->reminder_switch;
#line 264 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp7_ = gtk_switch_get_active (_tmp6_);
#line 264 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp8_ = _tmp7_;
#line 264 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp9_ = self->reminder_timepicker;
#line 264 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp10_ = widgets_time_picker_get_time (_tmp9_);
#line 264 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp11_ = _tmp10_;
#line 264 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp5_, _tmp8_, _tmp11_);
#line 262 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_g_date_time_unref0 (duedate_now);
#line 1191 "WhenPopover.c"
		} else {
			gint _tmp12_;
#line 265 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp12_ = self->priv->item_selected;
#line 265 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			if (_tmp12_ == 1) {
#line 1198 "WhenPopover.c"
				GDateTime* duedate_tomorrow = NULL;
				GDateTime* _tmp13_;
				GDateTime* _tmp14_;
				GDateTime* _tmp15_;
				GDateTime* _tmp16_;
				GDateTime* _tmp17_;
				GtkSwitch* _tmp18_;
				gboolean _tmp19_;
				gboolean _tmp20_;
				WidgetsTimePicker* _tmp21_;
				GDateTime* _tmp22_;
				GDateTime* _tmp23_;
#line 266 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp13_ = g_date_time_new_now_local ();
#line 266 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp14_ = _tmp13_;
#line 266 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp15_ = g_date_time_add_days (_tmp14_, 1);
#line 266 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp16_ = _tmp15_;
#line 266 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_g_date_time_unref0 (_tmp14_);
#line 266 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				duedate_tomorrow = _tmp16_;
#line 267 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp17_ = duedate_tomorrow;
#line 267 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp18_ = self->reminder_switch;
#line 267 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp19_ = gtk_switch_get_active (_tmp18_);
#line 267 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp20_ = _tmp19_;
#line 267 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp21_ = self->reminder_timepicker;
#line 267 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp22_ = widgets_time_picker_get_time (_tmp21_);
#line 267 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp23_ = _tmp22_;
#line 267 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp17_, _tmp20_, _tmp23_);
#line 265 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_g_date_time_unref0 (duedate_tomorrow);
#line 1241 "WhenPopover.c"
			} else {
				GDateTime* _tmp24_;
#line 269 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp24_ = self->priv->selected_date;
#line 269 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				if (_tmp24_ == NULL) {
#line 1248 "WhenPopover.c"
					GDateTime* _tmp25_;
					GDateTime* _tmp26_;
					GtkSwitch* _tmp27_;
					gboolean _tmp28_;
					gboolean _tmp29_;
					WidgetsTimePicker* _tmp30_;
					GDateTime* _tmp31_;
					GDateTime* _tmp32_;
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp25_ = g_date_time_new_now_local ();
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp26_ = _tmp25_;
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp27_ = self->reminder_switch;
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp28_ = gtk_switch_get_active (_tmp27_);
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp29_ = _tmp28_;
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp30_ = self->reminder_timepicker;
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp31_ = widgets_time_picker_get_time (_tmp30_);
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp32_ = _tmp31_;
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp26_, _tmp29_, _tmp32_);
#line 270 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_g_date_time_unref0 (_tmp26_);
#line 1277 "WhenPopover.c"
				} else {
					GDateTime* _tmp33_;
					GtkSwitch* _tmp34_;
					gboolean _tmp35_;
					gboolean _tmp36_;
					WidgetsTimePicker* _tmp37_;
					GDateTime* _tmp38_;
					GDateTime* _tmp39_;
#line 272 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp33_ = self->priv->selected_date;
#line 272 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp34_ = self->reminder_switch;
#line 272 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp35_ = gtk_switch_get_active (_tmp34_);
#line 272 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp36_ = _tmp35_;
#line 272 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp37_ = self->reminder_timepicker;
#line 272 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp38_ = widgets_time_picker_get_time (_tmp37_);
#line 272 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					_tmp39_ = _tmp38_;
#line 272 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
					g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp33_, _tmp36_, _tmp39_);
#line 1302 "WhenPopover.c"
				}
			}
		}
	} else {
		GDateTime* _tmp40_;
		GDateTime* _tmp41_;
		GtkSwitch* _tmp42_;
		gboolean _tmp43_;
		gboolean _tmp44_;
		WidgetsTimePicker* _tmp45_;
		GDateTime* _tmp46_;
		GDateTime* _tmp47_;
#line 276 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_revealer_set_reveal_child (_data74_->timepicker_revealer, FALSE);
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp40_ = g_date_time_new_now_local ();
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp41_ = _tmp40_;
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp42_ = self->reminder_switch;
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp43_ = gtk_switch_get_active (_tmp42_);
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp44_ = _tmp43_;
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp45_ = self->reminder_timepicker;
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp46_ = widgets_time_picker_get_time (_tmp45_);
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp47_ = _tmp46_;
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp41_, _tmp44_, _tmp47_);
#line 277 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_date_time_unref0 (_tmp41_);
#line 1337 "WhenPopover.c"
	}
}


static void
___lambda31__g_object_notify (GObject* _sender,
                              GParamSpec* pspec,
                              gpointer self)
{
#line 258 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	__lambda31_ (self);
#line 1349 "WhenPopover.c"
}


static void
__lambda32_ (WidgetsPopoversWhenPopover* self)
{
	gint _tmp0_;
#line 282 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = self->priv->item_selected;
#line 282 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp0_ == 0) {
#line 1361 "WhenPopover.c"
		GDateTime* duedate_now = NULL;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		GtkSwitch* _tmp3_;
		gboolean _tmp4_;
		gboolean _tmp5_;
		WidgetsTimePicker* _tmp6_;
		GDateTime* _tmp7_;
		GDateTime* _tmp8_;
#line 283 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp1_ = g_date_time_new_now_local ();
#line 283 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		duedate_now = _tmp1_;
#line 284 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp2_ = duedate_now;
#line 284 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp3_ = self->reminder_switch;
#line 284 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp4_ = gtk_switch_get_active (_tmp3_);
#line 284 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp5_ = _tmp4_;
#line 284 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp6_ = self->reminder_timepicker;
#line 284 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp7_ = widgets_time_picker_get_time (_tmp6_);
#line 284 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp8_ = _tmp7_;
#line 284 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp2_, _tmp5_, _tmp8_);
#line 282 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_date_time_unref0 (duedate_now);
#line 1393 "WhenPopover.c"
	} else {
		gint _tmp9_;
#line 285 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp9_ = self->priv->item_selected;
#line 285 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		if (_tmp9_ == 1) {
#line 1400 "WhenPopover.c"
			GDateTime* duedate_tomorrow = NULL;
			GDateTime* _tmp10_;
			GDateTime* _tmp11_;
			GDateTime* _tmp12_;
			GDateTime* _tmp13_;
			GDateTime* _tmp14_;
			GtkSwitch* _tmp15_;
			gboolean _tmp16_;
			gboolean _tmp17_;
			WidgetsTimePicker* _tmp18_;
			GDateTime* _tmp19_;
			GDateTime* _tmp20_;
#line 286 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp10_ = g_date_time_new_now_local ();
#line 286 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp11_ = _tmp10_;
#line 286 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp12_ = g_date_time_add_days (_tmp11_, 1);
#line 286 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp13_ = _tmp12_;
#line 286 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_g_date_time_unref0 (_tmp11_);
#line 286 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			duedate_tomorrow = _tmp13_;
#line 287 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp14_ = duedate_tomorrow;
#line 287 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp15_ = self->reminder_switch;
#line 287 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp16_ = gtk_switch_get_active (_tmp15_);
#line 287 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp17_ = _tmp16_;
#line 287 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp18_ = self->reminder_timepicker;
#line 287 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp19_ = widgets_time_picker_get_time (_tmp18_);
#line 287 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp20_ = _tmp19_;
#line 287 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp14_, _tmp17_, _tmp20_);
#line 285 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_g_date_time_unref0 (duedate_tomorrow);
#line 1443 "WhenPopover.c"
		} else {
			GDateTime* _tmp21_;
#line 289 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp21_ = self->priv->selected_date;
#line 289 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			if (_tmp21_ == NULL) {
#line 1450 "WhenPopover.c"
				GDateTime* _tmp22_;
				GDateTime* _tmp23_;
				GtkSwitch* _tmp24_;
				gboolean _tmp25_;
				gboolean _tmp26_;
				WidgetsTimePicker* _tmp27_;
				GDateTime* _tmp28_;
				GDateTime* _tmp29_;
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp22_ = g_date_time_new_now_local ();
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp23_ = _tmp22_;
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp24_ = self->reminder_switch;
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp25_ = gtk_switch_get_active (_tmp24_);
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp26_ = _tmp25_;
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp27_ = self->reminder_timepicker;
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp28_ = widgets_time_picker_get_time (_tmp27_);
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp29_ = _tmp28_;
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp23_, _tmp26_, _tmp29_);
#line 290 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_g_date_time_unref0 (_tmp23_);
#line 1479 "WhenPopover.c"
			} else {
				GDateTime* _tmp30_;
				GtkSwitch* _tmp31_;
				gboolean _tmp32_;
				gboolean _tmp33_;
				WidgetsTimePicker* _tmp34_;
				GDateTime* _tmp35_;
				GDateTime* _tmp36_;
#line 292 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp30_ = self->priv->selected_date;
#line 292 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp31_ = self->reminder_switch;
#line 292 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp32_ = gtk_switch_get_active (_tmp31_);
#line 292 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp33_ = _tmp32_;
#line 292 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp34_ = self->reminder_timepicker;
#line 292 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp35_ = widgets_time_picker_get_time (_tmp34_);
#line 292 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp36_ = _tmp35_;
#line 292 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp30_, _tmp33_, _tmp36_);
#line 1504 "WhenPopover.c"
			}
		}
	}
#line 296 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_popover_popdown ((GtkPopover*) self);
#line 1510 "WhenPopover.c"
}


static void
___lambda32__gtk_entry_activate (GtkEntry* _sender,
                                 gpointer self)
{
#line 281 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	__lambda32_ ((WidgetsPopoversWhenPopover*) self);
#line 1520 "WhenPopover.c"
}


static void
__lambda33_ (WidgetsPopoversWhenPopover* self)
{
	gint _tmp0_;
#line 300 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = self->priv->item_selected;
#line 300 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp0_ == 0) {
#line 1532 "WhenPopover.c"
		GDateTime* duedate_now = NULL;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		GtkSwitch* _tmp3_;
		gboolean _tmp4_;
		gboolean _tmp5_;
		WidgetsTimePicker* _tmp6_;
		GDateTime* _tmp7_;
		GDateTime* _tmp8_;
#line 301 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp1_ = g_date_time_new_now_local ();
#line 301 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		duedate_now = _tmp1_;
#line 302 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp2_ = duedate_now;
#line 302 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp3_ = self->reminder_switch;
#line 302 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp4_ = gtk_switch_get_active (_tmp3_);
#line 302 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp5_ = _tmp4_;
#line 302 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp6_ = self->reminder_timepicker;
#line 302 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp7_ = widgets_time_picker_get_time (_tmp6_);
#line 302 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp8_ = _tmp7_;
#line 302 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp2_, _tmp5_, _tmp8_);
#line 300 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_date_time_unref0 (duedate_now);
#line 1564 "WhenPopover.c"
	} else {
		gint _tmp9_;
#line 303 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp9_ = self->priv->item_selected;
#line 303 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		if (_tmp9_ == 1) {
#line 1571 "WhenPopover.c"
			GDateTime* duedate_tomorrow = NULL;
			GDateTime* _tmp10_;
			GDateTime* _tmp11_;
			GDateTime* _tmp12_;
			GDateTime* _tmp13_;
			GDateTime* _tmp14_;
			GtkSwitch* _tmp15_;
			gboolean _tmp16_;
			gboolean _tmp17_;
			WidgetsTimePicker* _tmp18_;
			GDateTime* _tmp19_;
			GDateTime* _tmp20_;
#line 304 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp10_ = g_date_time_new_now_local ();
#line 304 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp11_ = _tmp10_;
#line 304 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp12_ = g_date_time_add_days (_tmp11_, 1);
#line 304 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp13_ = _tmp12_;
#line 304 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_g_date_time_unref0 (_tmp11_);
#line 304 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			duedate_tomorrow = _tmp13_;
#line 305 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp14_ = duedate_tomorrow;
#line 305 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp15_ = self->reminder_switch;
#line 305 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp16_ = gtk_switch_get_active (_tmp15_);
#line 305 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp17_ = _tmp16_;
#line 305 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp18_ = self->reminder_timepicker;
#line 305 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp19_ = widgets_time_picker_get_time (_tmp18_);
#line 305 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp20_ = _tmp19_;
#line 305 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp14_, _tmp17_, _tmp20_);
#line 303 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_g_date_time_unref0 (duedate_tomorrow);
#line 1614 "WhenPopover.c"
		} else {
			GDateTime* _tmp21_;
#line 307 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			_tmp21_ = self->priv->selected_date;
#line 307 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
			if (_tmp21_ == NULL) {
#line 1621 "WhenPopover.c"
				GDateTime* _tmp22_;
				GDateTime* _tmp23_;
				GtkSwitch* _tmp24_;
				gboolean _tmp25_;
				gboolean _tmp26_;
				WidgetsTimePicker* _tmp27_;
				GDateTime* _tmp28_;
				GDateTime* _tmp29_;
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp22_ = g_date_time_new_now_local ();
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp23_ = _tmp22_;
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp24_ = self->reminder_switch;
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp25_ = gtk_switch_get_active (_tmp24_);
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp26_ = _tmp25_;
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp27_ = self->reminder_timepicker;
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp28_ = widgets_time_picker_get_time (_tmp27_);
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp29_ = _tmp28_;
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp23_, _tmp26_, _tmp29_);
#line 308 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_g_date_time_unref0 (_tmp23_);
#line 1650 "WhenPopover.c"
			} else {
				GDateTime* _tmp30_;
				GtkSwitch* _tmp31_;
				gboolean _tmp32_;
				gboolean _tmp33_;
				WidgetsTimePicker* _tmp34_;
				GDateTime* _tmp35_;
				GDateTime* _tmp36_;
#line 310 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp30_ = self->priv->selected_date;
#line 310 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp31_ = self->reminder_switch;
#line 310 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp32_ = gtk_switch_get_active (_tmp31_);
#line 310 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp33_ = _tmp32_;
#line 310 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp34_ = self->reminder_timepicker;
#line 310 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp35_ = widgets_time_picker_get_time (_tmp34_);
#line 310 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				_tmp36_ = _tmp35_;
#line 310 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
				g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL], 0, _tmp30_, _tmp33_, _tmp36_);
#line 1675 "WhenPopover.c"
			}
		}
	}
}


static void
___lambda33__gtk_editable_changed (GtkEditable* _sender,
                                   gpointer self)
{
#line 299 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	__lambda33_ ((WidgetsPopoversWhenPopover*) self);
#line 1688 "WhenPopover.c"
}


static GtkWidget*
widgets_popovers_when_popover_get_reminder_widget (WidgetsPopoversWhenPopover* self)
{
	GtkWidget* result = NULL;
	Block74Data* _data74_;
	GtkImage* reminder_icon = NULL;
	GtkImage* _tmp0_;
	GtkLabel* reminder_label = NULL;
	GtkLabel* _tmp1_;
	GtkSwitch* _tmp2_;
	GtkSwitch* _tmp3_;
	GtkStyleContext* _tmp4_;
	GtkSwitch* _tmp5_;
	GtkBox* reminder_box = NULL;
	GtkBox* _tmp6_;
	GtkStyleContext* _tmp7_;
	GtkSwitch* _tmp8_;
	WidgetsTimePicker* _tmp9_;
	WidgetsTimePicker* _tmp10_;
	WidgetsTimePicker* _tmp11_;
	GtkRevealer* _tmp12_;
	WidgetsTimePicker* _tmp13_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp14_;
	GtkSwitch* _tmp15_;
	GtkSwitch* _tmp16_;
	WidgetsTimePicker* _tmp17_;
	GtkEntry* _tmp18_;
	WidgetsTimePicker* _tmp19_;
	GtkEntry* _tmp20_;
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data74_ = g_slice_new0 (Block74Data);
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data74_->_ref_count_ = 1;
#line 204 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data74_->self = g_object_ref (self);
#line 205 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = (GtkImage*) gtk_image_new_from_icon_name ("planner-notification-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 205 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp0_);
#line 205 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	reminder_icon = _tmp0_;
#line 206 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = (GtkLabel*) gtk_label_new ("Reminder");
#line 206 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp1_);
#line 206 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	reminder_label = _tmp1_;
#line 208 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp2_ = (GtkSwitch*) gtk_switch_new ();
#line 208 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp2_);
#line 208 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (self->reminder_switch);
#line 208 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self->reminder_switch = _tmp2_;
#line 209 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp3_ = self->reminder_switch;
#line 209 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp4_ = gtk_widget_get_style_context ((GtkWidget*) _tmp3_);
#line 209 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_add_class (_tmp4_, "active-switch");
#line 210 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp5_ = self->reminder_switch;
#line 210 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp5_, GTK_ALIGN_CENTER);
#line 212 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp6_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 212 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp6_);
#line 212 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	reminder_box = _tmp6_;
#line 213 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_margin_end ((GtkWidget*) reminder_box, 3);
#line 214 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) reminder_box);
#line 214 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_add_class (_tmp7_, "menuitem");
#line 215 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_start (reminder_box, (GtkWidget*) reminder_icon, FALSE, FALSE, (guint) 0);
#line 216 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_start (reminder_box, (GtkWidget*) reminder_label, FALSE, FALSE, (guint) 6);
#line 217 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp8_ = self->reminder_switch;
#line 217 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_box_pack_end (reminder_box, (GtkWidget*) _tmp8_, FALSE, FALSE, (guint) 0);
#line 219 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp9_ = widgets_time_picker_new ();
#line 219 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp9_);
#line 219 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (self->reminder_timepicker);
#line 219 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self->reminder_timepicker = _tmp9_;
#line 220 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp10_ = self->reminder_timepicker;
#line 220 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp10_, 6);
#line 221 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp11_ = self->reminder_timepicker;
#line 221 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp11_, 6);
#line 223 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp12_ = (GtkRevealer*) gtk_revealer_new ();
#line 223 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp12_);
#line 223 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data74_->timepicker_revealer = _tmp12_;
#line 224 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _data74_->timepicker_revealer, 3);
#line 225 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_revealer_set_reveal_child (_data74_->timepicker_revealer, FALSE);
#line 226 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp13_ = self->reminder_timepicker;
#line 226 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) _data74_->timepicker_revealer, (GtkWidget*) _tmp13_);
#line 228 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp14_ = (GtkGrid*) gtk_grid_new ();
#line 228 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp14_);
#line 228 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	main_grid = _tmp14_;
#line 229 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) main_grid, "expand", TRUE, NULL);
#line 230 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) main_grid, GTK_ORIENTATION_VERTICAL);
#line 232 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) main_grid, (GtkWidget*) reminder_box);
#line 233 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) main_grid, (GtkWidget*) _data74_->timepicker_revealer);
#line 235 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp15_ = self->reminder_switch;
#line 235 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data ((GObject*) _tmp15_, "notify::active", (GCallback) ___lambda30__g_object_notify, block74_data_ref (_data74_), (GClosureNotify) block74_data_unref, 0);
#line 258 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp16_ = self->reminder_switch;
#line 258 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data ((GObject*) _tmp16_, "notify::active", (GCallback) ___lambda31__g_object_notify, block74_data_ref (_data74_), (GClosureNotify) block74_data_unref, 0);
#line 281 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp17_ = self->reminder_timepicker;
#line 281 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp18_ = _tmp17_->time_entry;
#line 281 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_object (_tmp18_, "activate", (GCallback) ___lambda32__gtk_entry_activate, self, 0);
#line 299 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp19_ = self->reminder_timepicker;
#line 299 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp20_ = _tmp19_->time_entry;
#line 299 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_object ((GtkEditable*) _tmp20_, "changed", (GCallback) ___lambda33__gtk_editable_changed, self, 0);
#line 315 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	result = (GtkWidget*) main_grid;
#line 315 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (reminder_box);
#line 315 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (reminder_label);
#line 315 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (reminder_icon);
#line 315 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	block74_data_unref (_data74_);
#line 315 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data74_ = NULL;
#line 315 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return result;
#line 1858 "WhenPopover.c"
}


static void
g_cclosure_user_marshal_VOID__BOXED_BOOLEAN_BOXED (GClosure * closure,
                                                   GValue * return_value,
                                                   guint n_param_values,
                                                   const GValue * param_values,
                                                   gpointer invocation_hint,
                                                   gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__BOXED_BOOLEAN_BOXED) (gpointer data1, gpointer arg_1, gboolean arg_2, gpointer arg_3, gpointer data2);
	register GMarshalFunc_VOID__BOXED_BOOLEAN_BOXED callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_if_fail (n_param_values == 4);
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		data1 = closure->data;
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		data2 = param_values->data[0].v_pointer;
#line 1884 "WhenPopover.c"
	} else {
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		data1 = param_values->data[0].v_pointer;
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		data2 = closure->data;
#line 1890 "WhenPopover.c"
	}
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	callback = (GMarshalFunc_VOID__BOXED_BOOLEAN_BOXED) (marshal_data ? marshal_data : cc->callback);
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	callback (data1, g_value_get_boxed (param_values + 1), g_value_get_boolean (param_values + 2), g_value_get_boxed (param_values + 3), data2);
#line 1896 "WhenPopover.c"
}


static Block75Data*
block75_data_ref (Block75Data* _data75_)
{
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_atomic_int_inc (&_data75_->_ref_count_);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return _data75_;
#line 1907 "WhenPopover.c"
}


static void
block75_data_unref (void * _userdata_)
{
	Block75Data* _data75_;
	_data75_ = (Block75Data*) _userdata_;
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (g_atomic_int_dec_and_test (&_data75_->_ref_count_)) {
#line 1918 "WhenPopover.c"
		WidgetsPopoversWhenPopover* self;
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		self = _data75_->self;
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (_data75_->mode_button);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_g_object_unref0 (self);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		g_slice_free (Block75Data, _data75_);
#line 1928 "WhenPopover.c"
	}
}


static void
_widgets_popovers_when_popover___lambda34_ (Block75Data* _data75_,
                                            GtkWidget* widget)
{
	WidgetsPopoversWhenPopover* self;
	GraniteWidgetsModeButton* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
#line 74 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = _data75_->self;
#line 74 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_return_if_fail (widget != NULL);
#line 75 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = _data75_->mode_button;
#line 75 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = granite_widgets_mode_button_get_selected (_tmp0_);
#line 75 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp2_ = _tmp1_;
#line 75 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	if (_tmp2_ == 0) {
#line 1953 "WhenPopover.c"
		GtkStack* _tmp3_;
#line 76 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp3_ = self->priv->main_stack;
#line 76 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_stack_set_visible_child_name (_tmp3_, "when");
#line 1959 "WhenPopover.c"
	} else {
		GtkStack* _tmp4_;
#line 78 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		_tmp4_ = self->priv->main_stack;
#line 78 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
		gtk_stack_set_visible_child_name (_tmp4_, "reminder");
#line 1966 "WhenPopover.c"
	}
}


static void
__widgets_popovers_when_popover___lambda34__granite_widgets_mode_button_mode_changed (GraniteWidgetsModeButton* _sender,
                                                                                      GtkWidget* widget,
                                                                                      gpointer self)
{
#line 74 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_widgets_popovers_when_popover___lambda34_ (self, widget);
#line 1978 "WhenPopover.c"
}


static void
_widgets_popovers_when_popover___lambda35_ (WidgetsPopoversWhenPopover* self)
{
	GtkButton* _tmp0_;
	GtkSwitch* _tmp1_;
#line 83 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = self->remove_button;
#line 83 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_visible ((GtkWidget*) _tmp0_, FALSE);
#line 84 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = self->reminder_switch;
#line 84 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_switch_set_active (_tmp1_, FALSE);
#line 86 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_emit (self, widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_REMOVE_SIGNAL], 0);
#line 88 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_popover_popdown ((GtkPopover*) self);
#line 1999 "WhenPopover.c"
}


static void
__widgets_popovers_when_popover___lambda35__gtk_button_clicked (GtkButton* _sender,
                                                                gpointer self)
{
#line 82 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_widgets_popovers_when_popover___lambda35_ ((WidgetsPopoversWhenPopover*) self);
#line 2009 "WhenPopover.c"
}


static GObject *
widgets_popovers_when_popover_constructor (GType type,
                                           guint n_construct_properties,
                                           GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsPopoversWhenPopover * self;
	Block75Data* _data75_;
	GraniteWidgetsModeButton* _tmp0_;
	GraniteWidgetsModeButton* _tmp1_;
	GraniteWidgetsModeButton* _tmp2_;
	GraniteWidgetsModeButton* _tmp3_;
	GraniteWidgetsModeButton* _tmp4_;
	GraniteWidgetsModeButton* _tmp5_;
	GraniteWidgetsModeButton* _tmp6_;
	GtkStack* _tmp7_;
	GtkStack* _tmp8_;
	GtkStack* _tmp9_;
	GtkStack* _tmp10_;
	GtkWidget* _tmp11_;
	GtkWidget* _tmp12_;
	GtkStack* _tmp13_;
	GtkWidget* _tmp14_;
	GtkWidget* _tmp15_;
	GtkButton* _tmp16_;
	GtkButton* _tmp17_;
	GtkButton* _tmp18_;
	GtkStyleContext* _tmp19_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp20_;
	GtkGrid* _tmp21_;
	GtkGrid* _tmp22_;
	GtkGrid* _tmp23_;
	GtkGrid* _tmp24_;
	GraniteWidgetsModeButton* _tmp25_;
	GtkGrid* _tmp26_;
	GtkStack* _tmp27_;
	GtkGrid* _tmp28_;
	GtkButton* _tmp29_;
	GtkGrid* _tmp30_;
	GraniteWidgetsModeButton* _tmp31_;
	GtkButton* _tmp32_;
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	parent_class = G_OBJECT_CLASS (widgets_popovers_when_popover_parent_class);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, WidgetsPopoversWhenPopover);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data75_ = g_slice_new0 (Block75Data);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data75_->_ref_count_ = 1;
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data75_->self = g_object_ref (self);
#line 42 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp0_ = granite_widgets_mode_button_new ();
#line 42 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp0_);
#line 42 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data75_->mode_button = _tmp0_;
#line 43 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp1_ = _data75_->mode_button;
#line 43 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp1_, TRUE);
#line 44 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp2_ = _data75_->mode_button;
#line 44 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) _tmp2_, "margin", 6, NULL);
#line 45 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp3_ = _data75_->mode_button;
#line 45 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp3_, GTK_ALIGN_CENTER);
#line 47 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp4_ = _data75_->mode_button;
#line 47 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	granite_widgets_mode_button_append_icon (_tmp4_, "office-calendar-symbolic", GTK_ICON_SIZE_MENU);
#line 48 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp5_ = _data75_->mode_button;
#line 48 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	granite_widgets_mode_button_append_icon (_tmp5_, "notification-symbolic", GTK_ICON_SIZE_MENU);
#line 50 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp6_ = _data75_->mode_button;
#line 50 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	granite_widgets_mode_button_set_selected (_tmp6_, 0);
#line 52 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp7_ = (GtkStack*) gtk_stack_new ();
#line 52 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp7_);
#line 52 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (self->priv->main_stack);
#line 52 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self->priv->main_stack = _tmp7_;
#line 53 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp8_ = self->priv->main_stack;
#line 53 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) _tmp8_, "expand", TRUE, NULL);
#line 54 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp9_ = self->priv->main_stack;
#line 54 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_stack_set_transition_type (_tmp9_, GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT);
#line 56 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp10_ = self->priv->main_stack;
#line 56 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp11_ = widgets_popovers_when_popover_get_when_widget (self);
#line 56 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp12_ = _tmp11_;
#line 56 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_stack_add_named (_tmp10_, _tmp12_, "when");
#line 56 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (_tmp12_);
#line 57 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp13_ = self->priv->main_stack;
#line 57 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp14_ = widgets_popovers_when_popover_get_reminder_widget (self);
#line 57 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp15_ = _tmp14_;
#line 57 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_stack_add_named (_tmp13_, _tmp15_, "reminder");
#line 57 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (_tmp15_);
#line 59 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp16_ = (GtkButton*) gtk_button_new_with_label (_ ("Clear"));
#line 59 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp16_);
#line 59 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (self->remove_button);
#line 59 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self->remove_button = _tmp16_;
#line 60 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp17_ = self->remove_button;
#line 60 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) _tmp17_, "margin", 6, NULL);
#line 61 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp18_ = self->remove_button;
#line 61 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp19_ = gtk_widget_get_style_context ((GtkWidget*) _tmp18_);
#line 61 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_style_context_add_class (_tmp19_, GTK_STYLE_CLASS_DESTRUCTIVE_ACTION);
#line 63 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp20_ = (GtkGrid*) gtk_grid_new ();
#line 63 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_ref_sink (_tmp20_);
#line 63 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	main_grid = _tmp20_;
#line 64 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp21_ = main_grid;
#line 64 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) _tmp21_, "expand", TRUE, NULL);
#line 65 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp22_ = main_grid;
#line 65 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp22_, GTK_ORIENTATION_VERTICAL);
#line 66 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp23_ = main_grid;
#line 66 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_object_set ((GtkWidget*) _tmp23_, "width-request", 250, NULL);
#line 68 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp24_ = main_grid;
#line 68 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp25_ = _data75_->mode_button;
#line 68 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) _tmp24_, (GtkWidget*) _tmp25_);
#line 69 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp26_ = main_grid;
#line 69 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp27_ = self->priv->main_stack;
#line 69 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) _tmp26_, (GtkWidget*) _tmp27_);
#line 70 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp28_ = main_grid;
#line 70 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp29_ = self->remove_button;
#line 70 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) _tmp28_, (GtkWidget*) _tmp29_);
#line 72 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp30_ = main_grid;
#line 72 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp30_);
#line 74 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp31_ = _data75_->mode_button;
#line 74 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_data (_tmp31_, "mode-changed", (GCallback) __widgets_popovers_when_popover___lambda34__granite_widgets_mode_button_mode_changed, block75_data_ref (_data75_), (GClosureNotify) block75_data_unref, 0);
#line 82 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_tmp32_ = self->remove_button;
#line 82 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_signal_connect_object (_tmp32_, "clicked", (GCallback) __widgets_popovers_when_popover___lambda35__gtk_button_clicked, self, 0);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (main_grid);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	block75_data_unref (_data75_);
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_data75_ = NULL;
#line 41 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	return obj;
#line 2208 "WhenPopover.c"
}


static void
widgets_popovers_when_popover_class_init (WidgetsPopoversWhenPopoverClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	widgets_popovers_when_popover_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	g_type_class_add_private (klass, sizeof (WidgetsPopoversWhenPopoverPrivate));
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_popovers_when_popover_constructor;
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_popovers_when_popover_finalize;
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_DATE_SIGNAL] = g_signal_new ("on-selected-date", WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__BOXED_BOOLEAN_BOXED, G_TYPE_NONE, 3, G_TYPE_DATE_TIME, G_TYPE_BOOLEAN, G_TYPE_DATE_TIME);
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	widgets_popovers_when_popover_signals[WIDGETS_POPOVERS_WHEN_POPOVER_ON_SELECTED_REMOVE_SIGNAL] = g_signal_new ("on-selected-remove", WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 2227 "WhenPopover.c"
}


static void
widgets_popovers_when_popover_instance_init (WidgetsPopoversWhenPopover * self)
{
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self->priv = WIDGETS_POPOVERS_WHEN_POPOVER_GET_PRIVATE (self);
#line 31 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self->priv->item_selected = 0;
#line 2238 "WhenPopover.c"
}


static void
widgets_popovers_when_popover_finalize (GObject * obj)
{
	WidgetsPopoversWhenPopover * self;
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_POPOVERS_TYPE_WHEN_POPOVER, WidgetsPopoversWhenPopover);
#line 23 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (self->priv->main_stack);
#line 25 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (self->remove_button);
#line 26 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (self->reminder_switch);
#line 27 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_object_unref0 (self->reminder_timepicker);
#line 32 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	_g_date_time_unref0 (self->priv->selected_date);
#line 22 "/run/build/planner/src/Widgets/Popovers/WhenPopover.vala"
	G_OBJECT_CLASS (widgets_popovers_when_popover_parent_class)->finalize (obj);
#line 2260 "WhenPopover.c"
}


GType
widgets_popovers_when_popover_get_type (void)
{
	static volatile gsize widgets_popovers_when_popover_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_popovers_when_popover_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsPopoversWhenPopoverClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_popovers_when_popover_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsPopoversWhenPopover), 0, (GInstanceInitFunc) widgets_popovers_when_popover_instance_init, NULL };
		GType widgets_popovers_when_popover_type_id;
		widgets_popovers_when_popover_type_id = g_type_register_static (gtk_popover_get_type (), "WidgetsPopoversWhenPopover", &g_define_type_info, 0);
		g_once_init_leave (&widgets_popovers_when_popover_type_id__volatile, widgets_popovers_when_popover_type_id);
	}
	return widgets_popovers_when_popover_type_id__volatile;
}



