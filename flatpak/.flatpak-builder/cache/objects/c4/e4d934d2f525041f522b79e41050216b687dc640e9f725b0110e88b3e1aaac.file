/* MainWindow.c generated by valac 0.40.11, the Vala compiler
 * generated from MainWindow.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2011-2017 elementary LLC. (https://elementary.io)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by: Maxwell Barvian <maxwell@elementary.io>
 *              Corentin NoÃ«l <corentin@elementary.io>
 */


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include "elementary-calendar.h"
#include <stdlib.h>
#include <string.h>


#define MAYA_TYPE_MAIN_WINDOW (maya_main_window_get_type ())
#define MAYA_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_TYPE_MAIN_WINDOW, MayaMainWindow))
#define MAYA_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_TYPE_MAIN_WINDOW, MayaMainWindowClass))
#define MAYA_IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_TYPE_MAIN_WINDOW))
#define MAYA_IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_TYPE_MAIN_WINDOW))
#define MAYA_MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_TYPE_MAIN_WINDOW, MayaMainWindowClass))

typedef struct _MayaMainWindow MayaMainWindow;
typedef struct _MayaMainWindowClass MayaMainWindowClass;
typedef struct _MayaMainWindowPrivate MayaMainWindowPrivate;
enum  {
	MAYA_MAIN_WINDOW_0_PROPERTY,
	MAYA_MAIN_WINDOW_NUM_PROPERTIES
};
static GParamSpec* maya_main_window_properties[MAYA_MAIN_WINDOW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _Block3Data Block3Data;
#define _g_free0(var) (var = (g_free (var), NULL))
typedef struct _Block4Data Block4Data;

struct _MayaMainWindow {
	GtkApplicationWindow parent_instance;
	MayaMainWindowPrivate * priv;
	GtkPaned* hpaned;
};

struct _MayaMainWindowClass {
	GtkApplicationWindowClass parent_class;
};

struct _Block3Data {
	int _ref_count_;
	MayaMainWindow* self;
	GtkLabel* infobar_label;
	GtkInfoBar* infobar;
};

struct _Block4Data {
	int _ref_count_;
	Block3Data * _data3_;
	gchar* message;
};


static gpointer maya_main_window_parent_class = NULL;

GType maya_main_window_get_type (void) G_GNUC_CONST;
MayaMainWindow* maya_main_window_new (GtkApplication* application);
MayaMainWindow* maya_main_window_construct (GType object_type,
                                            GtkApplication* application);
static GObject * maya_main_window_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties);
static Block3Data* block3_data_ref (Block3Data* _data3_);
static void block3_data_unref (void * _userdata_);
static void _maya_main_window___lambda19_ (Block3Data* _data3_,
                                    gint id);
static void __maya_main_window___lambda19__gtk_info_bar_response (GtkInfoBar* _sender,
                                                           gint response_id,
                                                           gpointer self);
static void _maya_main_window___lambda20_ (Block3Data* _data3_,
                                    const gchar* message);
static Block4Data* block4_data_ref (Block4Data* _data4_);
static void block4_data_unref (void * _userdata_);
static gboolean __lambda21_ (Block4Data* _data4_);
static gboolean ___lambda21__gsource_func (gpointer self);
static void __maya_main_window___lambda20__maya_model_calendar_model_error_received (MayaModelCalendarModel* _sender,
                                                                              const gchar* _error_,
                                                                              gpointer self);
static void maya_main_window_finalize (GObject * obj);


MayaMainWindow*
maya_main_window_construct (GType object_type,
                            GtkApplication* application)
{
	MayaMainWindow * self = NULL;
#line 25 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_return_val_if_fail (application != NULL, NULL);
#line 26 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	self = (MayaMainWindow*) g_object_new (object_type, "application", application, "height-request", 400, "icon-name", "office-calendar", "width-request", 625, NULL);
#line 25 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	return self;
#line 118 "MainWindow.c"
}


MayaMainWindow*
maya_main_window_new (GtkApplication* application)
{
#line 25 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	return maya_main_window_construct (MAYA_TYPE_MAIN_WINDOW, application);
#line 127 "MainWindow.c"
}


static Block3Data*
block3_data_ref (Block3Data* _data3_)
{
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_atomic_int_inc (&_data3_->_ref_count_);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	return _data3_;
#line 138 "MainWindow.c"
}


static void
block3_data_unref (void * _userdata_)
{
	Block3Data* _data3_;
	_data3_ = (Block3Data*) _userdata_;
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	if (g_atomic_int_dec_and_test (&_data3_->_ref_count_)) {
#line 149 "MainWindow.c"
		MayaMainWindow* self;
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		self = _data3_->self;
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		_g_object_unref0 (_data3_->infobar);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		_g_object_unref0 (_data3_->infobar_label);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		_g_object_unref0 (self);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		g_slice_free (Block3Data, _data3_);
#line 161 "MainWindow.c"
	}
}


static void
_maya_main_window___lambda19_ (Block3Data* _data3_,
                               gint id)
{
	MayaMainWindow* self;
	GtkInfoBar* _tmp0_;
#line 56 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	self = _data3_->self;
#line 56 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp0_ = _data3_->infobar;
#line 56 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_widget_hide ((GtkWidget*) _tmp0_);
#line 178 "MainWindow.c"
}


static void
__maya_main_window___lambda19__gtk_info_bar_response (GtkInfoBar* _sender,
                                                      gint response_id,
                                                      gpointer self)
{
#line 56 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_maya_main_window___lambda19_ (self, response_id);
#line 189 "MainWindow.c"
}


static Block4Data*
block4_data_ref (Block4Data* _data4_)
{
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_atomic_int_inc (&_data4_->_ref_count_);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	return _data4_;
#line 200 "MainWindow.c"
}


static void
block4_data_unref (void * _userdata_)
{
	Block4Data* _data4_;
	_data4_ = (Block4Data*) _userdata_;
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	if (g_atomic_int_dec_and_test (&_data4_->_ref_count_)) {
#line 211 "MainWindow.c"
		MayaMainWindow* self;
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		self = _data4_->_data3_->self;
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		_g_free0 (_data4_->message);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		block3_data_unref (_data4_->_data3_);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		_data4_->_data3_ = NULL;
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
		g_slice_free (Block4Data, _data4_);
#line 223 "MainWindow.c"
	}
}


static gboolean
__lambda21_ (Block4Data* _data4_)
{
	Block3Data* _data3_;
	MayaMainWindow* self;
	gboolean result = FALSE;
	GtkLabel* _tmp0_;
	GtkInfoBar* _tmp1_;
#line 59 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data3_ = _data4_->_data3_;
#line 59 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	self = _data3_->self;
#line 60 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp0_ = _data3_->infobar_label;
#line 60 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_label_set_label (_tmp0_, _data4_->message);
#line 61 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp1_ = _data3_->infobar;
#line 61 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_widget_show ((GtkWidget*) _tmp1_);
#line 62 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	result = FALSE;
#line 62 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	return result;
#line 252 "MainWindow.c"
}


static gboolean
___lambda21__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda21_ (self);
#line 59 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	return result;
#line 263 "MainWindow.c"
}


static void
_maya_main_window___lambda20_ (Block3Data* _data3_,
                               const gchar* message)
{
	MayaMainWindow* self;
	Block4Data* _data4_;
	gchar* _tmp0_;
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	self = _data3_->self;
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_return_if_fail (message != NULL);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data4_ = g_slice_new0 (Block4Data);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data4_->_ref_count_ = 1;
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data4_->_data3_ = block3_data_ref (_data3_);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp0_ = g_strdup (message);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_g_free0 (_data4_->message);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data4_->message = _tmp0_;
#line 59 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_idle_add_full (G_PRIORITY_DEFAULT_IDLE, ___lambda21__gsource_func, block4_data_ref (_data4_), block4_data_unref);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	block4_data_unref (_data4_);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data4_ = NULL;
#line 296 "MainWindow.c"
}


static void
__maya_main_window___lambda20__maya_model_calendar_model_error_received (MayaModelCalendarModel* _sender,
                                                                         const gchar* _error_,
                                                                         gpointer self)
{
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_maya_main_window___lambda20_ (self, _error_);
#line 307 "MainWindow.c"
}


static GObject *
maya_main_window_constructor (GType type,
                              guint n_construct_properties,
                              GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	MayaMainWindow * self;
	Block3Data* _data3_;
	GtkIconTheme* default_theme = NULL;
	GtkIconTheme* _tmp0_;
	GtkIconTheme* _tmp1_;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
	GtkInfoBar* _tmp4_;
	GtkInfoBar* _tmp5_;
	GtkInfoBar* _tmp6_;
	GtkInfoBar* _tmp7_;
	GtkInfoBar* _tmp8_;
	GtkContainer* _tmp9_;
	GtkLabel* _tmp10_;
	GtkPaned* _tmp11_;
	GtkGrid* grid = NULL;
	GtkGrid* _tmp12_;
	GtkGrid* _tmp13_;
	GtkGrid* _tmp14_;
	GtkInfoBar* _tmp15_;
	GtkGrid* _tmp16_;
	GtkPaned* _tmp17_;
	GtkGrid* _tmp18_;
	GtkInfoBar* _tmp19_;
	MayaModelCalendarModel* _tmp20_;
	MayaModelCalendarModel* _tmp21_;
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	parent_class = G_OBJECT_CLASS (maya_main_window_parent_class);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_TYPE_MAIN_WINDOW, MayaMainWindow);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data3_ = g_slice_new0 (Block3Data);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data3_->_ref_count_ = 1;
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data3_->self = g_object_ref (self);
#line 35 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp0_ = gtk_icon_theme_get_default ();
#line 35 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	default_theme = _tmp0_;
#line 36 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp1_ = default_theme;
#line 36 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_icon_theme_add_resource_path (_tmp1_, "/io/elementary/calendar");
#line 38 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new (NULL);
#line 38 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_object_ref_sink (_tmp2_);
#line 38 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data3_->infobar_label = _tmp2_;
#line 39 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp3_ = _data3_->infobar_label;
#line 39 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_widget_show ((GtkWidget*) _tmp3_);
#line 41 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp4_ = (GtkInfoBar*) gtk_info_bar_new ();
#line 41 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_object_ref_sink (_tmp4_);
#line 41 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data3_->infobar = _tmp4_;
#line 42 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp5_ = _data3_->infobar;
#line 42 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_info_bar_set_message_type (_tmp5_, GTK_MESSAGE_ERROR);
#line 43 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp6_ = _data3_->infobar;
#line 43 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_widget_set_no_show_all ((GtkWidget*) _tmp6_, TRUE);
#line 44 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp7_ = _data3_->infobar;
#line 44 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_info_bar_set_show_close_button (_tmp7_, TRUE);
#line 45 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp8_ = _data3_->infobar;
#line 45 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp9_ = gtk_info_bar_get_content_area (_tmp8_);
#line 45 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp10_ = _data3_->infobar_label;
#line 45 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_container_add (_tmp9_, (GtkWidget*) _tmp10_);
#line 47 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp11_ = (GtkPaned*) gtk_paned_new (GTK_ORIENTATION_HORIZONTAL);
#line 47 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_object_ref_sink (_tmp11_);
#line 47 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_g_object_unref0 (self->hpaned);
#line 47 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	self->hpaned = _tmp11_;
#line 49 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp12_ = (GtkGrid*) gtk_grid_new ();
#line 49 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_object_ref_sink (_tmp12_);
#line 49 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	grid = _tmp12_;
#line 50 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp13_ = grid;
#line 50 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp13_, GTK_ORIENTATION_VERTICAL);
#line 51 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp14_ = grid;
#line 51 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp15_ = _data3_->infobar;
#line 51 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_container_add ((GtkContainer*) _tmp14_, (GtkWidget*) _tmp15_);
#line 52 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp16_ = grid;
#line 52 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp17_ = self->hpaned;
#line 52 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_container_add ((GtkContainer*) _tmp16_, (GtkWidget*) _tmp17_);
#line 54 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp18_ = grid;
#line 54 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp18_);
#line 56 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp19_ = _data3_->infobar;
#line 56 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_signal_connect_data (_tmp19_, "response", (GCallback) __maya_main_window___lambda19__gtk_info_bar_response, block3_data_ref (_data3_), (GClosureNotify) block3_data_unref, 0);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp20_ = maya_model_calendar_model_get_default ();
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_tmp21_ = _tmp20_;
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	g_signal_connect_data (_tmp21_, "error-received", (GCallback) __maya_main_window___lambda20__maya_model_calendar_model_error_received, block3_data_ref (_data3_), (GClosureNotify) block3_data_unref, 0);
#line 58 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_g_object_unref0 (_tmp21_);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_g_object_unref0 (grid);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	block3_data_unref (_data3_);
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_data3_ = NULL;
#line 34 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	return obj;
#line 454 "MainWindow.c"
}


static void
maya_main_window_class_init (MayaMainWindowClass * klass)
{
#line 22 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	maya_main_window_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	G_OBJECT_CLASS (klass)->constructor = maya_main_window_constructor;
#line 22 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	G_OBJECT_CLASS (klass)->finalize = maya_main_window_finalize;
#line 467 "MainWindow.c"
}


static void
maya_main_window_instance_init (MayaMainWindow * self)
{
}


static void
maya_main_window_finalize (GObject * obj)
{
	MayaMainWindow * self;
#line 22 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_TYPE_MAIN_WINDOW, MayaMainWindow);
#line 23 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	_g_object_unref0 (self->hpaned);
#line 22 "/run/build/io.elementary.calendar/src/MainWindow.vala"
	G_OBJECT_CLASS (maya_main_window_parent_class)->finalize (obj);
#line 487 "MainWindow.c"
}


GType
maya_main_window_get_type (void)
{
	static volatile gsize maya_main_window_type_id__volatile = 0;
	if (g_once_init_enter (&maya_main_window_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (MayaMainWindowClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maya_main_window_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MayaMainWindow), 0, (GInstanceInitFunc) maya_main_window_instance_init, NULL };
		GType maya_main_window_type_id;
		maya_main_window_type_id = g_type_register_static (gtk_application_window_get_type (), "MayaMainWindow", &g_define_type_info, 0);
		g_once_init_leave (&maya_main_window_type_id__volatile, maya_main_window_type_id);
	}
	return maya_main_window_type_id__volatile;
}



