/* unity-deprecated-scope.c generated by valac 0.40.11, the Vala compiler
 * generated from unity-deprecated-scope.vala, do not modify */

/*
 * Copyright (C) 2011 Canonical, Ltd.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * version 3.0 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3.0 for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see
 * <http://www.gnu.org/licenses/>.
 *
 * Authored by Neil Jagdish Patel <neil.patel@canonical.com>
 *
 */


#include <glib.h>
#include <glib-object.h>
#include "unity.h"
#include <stdlib.h>
#include <string.h>
#include <unity-protocol.h>
#include <dee.h>
#include <gio/gio.h>


#define UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL (unity_internal_scope_dbus_impl_get_type ())
#define UNITY_INTERNAL_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL, UnityInternalScopeDBusImpl))
#define UNITY_INTERNAL_IS_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL))
#define UNITY_INTERNAL_SCOPE_DBUS_IMPL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL, UnityInternalScopeDBusImplIface))

typedef struct _UnityInternalScopeDBusImpl UnityInternalScopeDBusImpl;
typedef struct _UnityInternalScopeDBusImplIface UnityInternalScopeDBusImplIface;

#define UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL (unity_internal_deprecated_scope_dbus_impl_get_type ())
#define UNITY_INTERNAL_DEPRECATED_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL, UnityInternalDeprecatedScopeDBusImpl))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_DBUS_IMPL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL, UnityInternalDeprecatedScopeDBusImplIface))

typedef struct _UnityInternalDeprecatedScopeDBusImpl UnityInternalDeprecatedScopeDBusImpl;
typedef struct _UnityInternalDeprecatedScopeDBusImplIface UnityInternalDeprecatedScopeDBusImplIface;
enum  {
	UNITY_DEPRECATED_SCOPE_BASE_0_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_ID_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_DBUS_PATH_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_SEARCH_IN_GLOBAL_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_VISIBLE_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_IS_MASTER_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_SEARCH_HINT_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_SOURCES_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_CATEGORIES_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_FILTERS_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_SCHEMA_PROPERTY,
	UNITY_DEPRECATED_SCOPE_BASE_NUM_PROPERTIES
};
static GParamSpec* unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
typedef struct _UnityDeprecatedScopeBaseHandleSearchData UnityDeprecatedScopeBaseHandleSearchData;
enum  {
	UNITY_DEPRECATED_SCOPE_BASE_ACTIVE_SOURCES_CHANGED_SIGNAL,
	UNITY_DEPRECATED_SCOPE_BASE_NUM_SIGNALS
};
static guint unity_deprecated_scope_base_signals[UNITY_DEPRECATED_SCOPE_BASE_NUM_SIGNALS] = {0};
enum  {
	UNITY_DEPRECATED_SCOPE_0_PROPERTY,
	UNITY_DEPRECATED_SCOPE_NUM_PROPERTIES
};
static GParamSpec* unity_deprecated_scope_properties[UNITY_DEPRECATED_SCOPE_NUM_PROPERTIES];
typedef struct _UnityDeprecatedScopePreviewResultData UnityDeprecatedScopePreviewResultData;
typedef struct _UnityDeprecatedScopeActivateResultData UnityDeprecatedScopeActivateResultData;

#define UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL (unity_internal_deprecated_scope_impl_get_type ())
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImpl))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImplClass))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImplClass))

typedef struct _UnityInternalDeprecatedScopeImpl UnityInternalDeprecatedScopeImpl;
typedef struct _UnityInternalDeprecatedScopeImplClass UnityInternalDeprecatedScopeImplClass;
enum  {
	UNITY_DEPRECATED_SCOPE_ACTIVATE_URI_SIGNAL,
	UNITY_DEPRECATED_SCOPE_PREVIEW_URI_SIGNAL,
	UNITY_DEPRECATED_SCOPE_GENERATE_SEARCH_KEY_SIGNAL,
	UNITY_DEPRECATED_SCOPE_SEARCH_CHANGED_SIGNAL,
	UNITY_DEPRECATED_SCOPE_NUM_SIGNALS
};
static guint unity_deprecated_scope_signals[UNITY_DEPRECATED_SCOPE_NUM_SIGNALS] = {0};
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _UnityInternalScopeDBusImplIface {
	GTypeInterface parent_iface;
	void (*export) (UnityInternalScopeDBusImpl* self, GError** error);
	void (*unexport) (UnityInternalScopeDBusImpl* self);
	void (*queue_property_notification) (UnityInternalScopeDBusImpl* self, const gchar* prop_name, GVariant* prop_value);
	DeeSerializableModel* (*get_categories_model) (UnityInternalScopeDBusImpl* self);
	void (*set_categories_model) (UnityInternalScopeDBusImpl* self, DeeSerializableModel* value);
	DeeSerializableModel* (*get_filters_model) (UnityInternalScopeDBusImpl* self);
	void (*set_filters_model) (UnityInternalScopeDBusImpl* self, DeeSerializableModel* value);
};

struct _UnityInternalDeprecatedScopeDBusImplIface {
	GTypeInterface parent_iface;
	void (*set_categories) (UnityInternalDeprecatedScopeDBusImpl* self, GList* categories);
	void (*set_filters) (UnityInternalDeprecatedScopeDBusImpl* self, GList* filters);
};

struct _UnityDeprecatedScopeBasePrivate {
	gchar* _id;
	gchar* _dbus_path;
	gboolean _search_in_global;
	gboolean _visible;
	gboolean _is_master;
	gchar* _search_hint;
	UnityOptionsFilter* _sources;
	UnitySchema* _schema;
	UnityInternalDeprecatedScopeDBusImpl* _pimpl;
	gboolean exported;
	gboolean is_local;
};

struct _UnityDeprecatedScopeBaseHandleSearchData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityDeprecatedScopeBase* self;
	gchar* channel_id;
	gchar* search_string;
	GHashTable* hints;
	GHashTable* result;
	GHashTable* _result_;
	UnityInternalDeprecatedScopeDBusImpl* _tmp0_;
	GHashTable* _tmp1_;
	GError * _inner_error_;
};

struct _UnityDeprecatedScopePreviewResultData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityDeprecatedScope* self;
	UnityScopeResult _result_;
	UnityPreview* result;
	UnityPreview* preview;
	UnityScopeResult _tmp0_;
	const gchar* _tmp1_;
	UnityPreview* _tmp2_;
};

struct _UnityDeprecatedScopeActivateResultData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityDeprecatedScope* self;
	UnityScopeResult _result_;
	UnityActivationResponse* result;
	UnityActivationResponse* response;
	UnityScopeResult _tmp0_;
	const gchar* _tmp1_;
	UnityActivationResponse* _tmp2_;
};


static gpointer unity_deprecated_scope_base_parent_class = NULL;
static gpointer unity_deprecated_scope_parent_class = NULL;

GType unity_internal_scope_dbus_impl_get_type (void) G_GNUC_CONST;
GType unity_internal_deprecated_scope_dbus_impl_get_type (void) G_GNUC_CONST;
#define UNITY_DEPRECATED_SCOPE_BASE_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_TYPE_DEPRECATED_SCOPE_BASE, UnityDeprecatedScopeBasePrivate))
static void unity_deprecated_scope_base_real_constructed (GObject* base);
GObject* unity_deprecated_scope_base_create_impl (UnityDeprecatedScopeBase* self);
static GObject* unity_deprecated_scope_base_real_create_impl (UnityDeprecatedScopeBase* self);
GObject* unity_deprecated_scope_base_get_impl (UnityDeprecatedScopeBase* self);
void unity_internal_scope_dbus_impl_export (UnityInternalScopeDBusImpl* self,
                                            GError** error);
void unity_internal_scope_dbus_impl_unexport (UnityInternalScopeDBusImpl* self);
void unity_deprecated_scope_base_set_view_type_internal (UnityDeprecatedScopeBase* self,
                                                         UnityProtocolViewType view_type);
void unity_deprecated_scope_base_set_active_sources_internal (UnityDeprecatedScopeBase* self,
                                                              gchar** active_sources_,
                                                              int active_sources__length1);
static gboolean _vala_string_array_contains (gchar* * stack,
                                      int stack_length,
                                      gchar* needle);
static void unity_deprecated_scope_base_handle_search_data_free (gpointer _data);
static void unity_deprecated_scope_base_handle_search_async_ready_wrapper (GObject *source_object,
                                                                    GAsyncResult *res,
                                                                    void *user_data);
void unity_deprecated_scope_base_handle_search (UnityDeprecatedScopeBase* self,
                                                const gchar* channel_id,
                                                const gchar* search_string,
                                                GHashTable* hints,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
GHashTable* unity_deprecated_scope_base_handle_search_finish (UnityDeprecatedScopeBase* self,
                                                              GAsyncResult* _res_,
                                                              GError** error);
static gboolean unity_deprecated_scope_base_handle_search_co (UnityDeprecatedScopeBaseHandleSearchData* _data_);
static void unity_deprecated_scope_base_handle_search_ready (GObject* source_object,
                                                      GAsyncResult* _res_,
                                                      gpointer _user_data_);
void unity_deprecated_scope_base_set_sources (UnityDeprecatedScopeBase* self,
                                              UnityOptionsFilter* value);
void unity_internal_deprecated_scope_dbus_impl_set_categories (UnityInternalDeprecatedScopeDBusImpl* self,
                                                               GList* categories);
void unity_internal_deprecated_scope_dbus_impl_set_filters (UnityInternalDeprecatedScopeDBusImpl* self,
                                                            GList* filters);
static void g_cclosure_user_marshal_VOID__BOXED_INT (GClosure * closure,
                                              GValue * return_value,
                                              guint n_param_values,
                                              const GValue * param_values,
                                              gpointer invocation_hint,
                                              gpointer marshal_data);
static GObject * unity_deprecated_scope_base_constructor (GType type,
                                                   guint n_construct_properties,
                                                   GObjectConstructParam * construct_properties);
static void unity_deprecated_scope_base_finalize (GObject * obj);
static void _vala_unity_deprecated_scope_base_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec);
static void _vala_unity_deprecated_scope_base_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec);
static void unity_deprecated_scope_real_preview_result_data_free (gpointer _data);
static void unity_deprecated_scope_real_preview_result_async_ready_wrapper (GObject *source_object,
                                                                     GAsyncResult *res,
                                                                     void *user_data);
static void unity_deprecated_scope_real_preview_result (UnityDeprecatedScope* self,
                                                 UnityScopeResult* _result_,
                                                 GAsyncReadyCallback _callback_,
                                                 gpointer _user_data_);
static gboolean unity_deprecated_scope_real_preview_result_co (UnityDeprecatedScopePreviewResultData* _data_);
static void unity_deprecated_scope_real_activate_result_data_free (gpointer _data);
static void unity_deprecated_scope_real_activate_result_async_ready_wrapper (GObject *source_object,
                                                                      GAsyncResult *res,
                                                                      void *user_data);
static void unity_deprecated_scope_real_activate_result (UnityDeprecatedScope* self,
                                                  UnityScopeResult* _result_,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_);
static gboolean unity_deprecated_scope_real_activate_result_co (UnityDeprecatedScopeActivateResultData* _data_);
static GObject* unity_deprecated_scope_real_create_impl (UnityDeprecatedScopeBase* base);
UnityInternalDeprecatedScopeImpl* unity_internal_deprecated_scope_impl_new (UnityDeprecatedScope* owner);
UnityInternalDeprecatedScopeImpl* unity_internal_deprecated_scope_impl_construct (GType object_type,
                                                                                  UnityDeprecatedScope* owner);
GType unity_internal_deprecated_scope_impl_get_type (void) G_GNUC_CONST;
void unity_internal_deprecated_scope_impl_queue_search_for_type (UnityInternalDeprecatedScopeImpl* self,
                                                                 UnitySearchType search_type);
static void g_cclosure_user_marshal_OBJECT__STRING (GClosure * closure,
                                             GValue * return_value,
                                             guint n_param_values,
                                             const GValue * param_values,
                                             gpointer invocation_hint,
                                             gpointer marshal_data);
static void g_cclosure_user_marshal_STRING__OBJECT (GClosure * closure,
                                             GValue * return_value,
                                             guint n_param_values,
                                             const GValue * param_values,
                                             gpointer invocation_hint,
                                             gpointer marshal_data);
static void g_cclosure_user_marshal_VOID__OBJECT_ENUM_OBJECT (GClosure * closure,
                                                       GValue * return_value,
                                                       guint n_param_values,
                                                       const GValue * param_values,
                                                       gpointer invocation_hint,
                                                       gpointer marshal_data);


UnityDeprecatedScopeBase*
unity_deprecated_scope_base_construct (GType object_type,
                                       const gchar* dbus_path_,
                                       const gchar* id_)
{
	UnityDeprecatedScopeBase * self = NULL;
	g_return_val_if_fail (dbus_path_ != NULL, NULL);
	g_return_val_if_fail (id_ != NULL, NULL);
	self = (UnityDeprecatedScopeBase*) g_object_new (object_type, "dbus-path", dbus_path_, "id", id_, NULL);
	return self;
}


static void
unity_deprecated_scope_base_real_constructed (GObject* base)
{
	UnityDeprecatedScopeBase * self;
	GObject* _tmp0_;
	UnityInternalDeprecatedScopeDBusImpl* _tmp1_;
	self = (UnityDeprecatedScopeBase*) base;
	_tmp0_ = unity_deprecated_scope_base_create_impl (self);
	_tmp1_ = G_TYPE_CHECK_INSTANCE_TYPE (_tmp0_, UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL) ? ((UnityInternalDeprecatedScopeDBusImpl*) _tmp0_) : NULL;
	if (_tmp1_ == NULL) {
		_g_object_unref0 (_tmp0_);
	}
	_g_object_unref0 (self->priv->_pimpl);
	self->priv->_pimpl = _tmp1_;
}


static GObject*
unity_deprecated_scope_base_real_create_impl (UnityDeprecatedScopeBase* self)
{
	g_critical ("Type `%s' does not implement abstract method `unity_deprecated_scope_base_create_impl'", g_type_name (G_TYPE_FROM_INSTANCE (self)));
	return NULL;
}


GObject*
unity_deprecated_scope_base_create_impl (UnityDeprecatedScopeBase* self)
{
	g_return_val_if_fail (self != NULL, NULL);
	return UNITY_DEPRECATED_SCOPE_BASE_GET_CLASS (self)->create_impl (self);
}


GObject*
unity_deprecated_scope_base_get_impl (UnityDeprecatedScopeBase* self)
{
	GObject* result = NULL;
	UnityInternalDeprecatedScopeDBusImpl* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_pimpl;
	result = (GObject*) _tmp0_;
	return result;
}


void
unity_deprecated_scope_base_export (UnityDeprecatedScopeBase* self,
                                    GError** error)
{
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_;
	GError * _inner_error_ = NULL;
	g_return_if_fail (self != NULL);
	_tmp1_ = self->priv->exported;
	if (!_tmp1_) {
		gboolean _tmp2_;
		_tmp2_ = self->priv->is_local;
		_tmp0_ = !_tmp2_;
	} else {
		_tmp0_ = FALSE;
	}
	if (_tmp0_) {
		UnityInternalDeprecatedScopeDBusImpl* _tmp3_;
		_tmp3_ = self->priv->_pimpl;
		unity_internal_scope_dbus_impl_export ((UnityInternalScopeDBusImpl*) _tmp3_, &_inner_error_);
		if (G_UNLIKELY (_inner_error_ != NULL)) {
			g_propagate_error (error, _inner_error_);
			return;
		}
		self->priv->exported = TRUE;
	}
}


void
unity_deprecated_scope_base_unexport (UnityDeprecatedScopeBase* self)
{
	gboolean _tmp0_;
	g_return_if_fail (self != NULL);
	_tmp0_ = self->priv->exported;
	if (_tmp0_) {
		UnityInternalDeprecatedScopeDBusImpl* _tmp1_;
		_tmp1_ = self->priv->_pimpl;
		unity_internal_scope_dbus_impl_unexport ((UnityInternalScopeDBusImpl*) _tmp1_);
		self->priv->exported = FALSE;
	}
}


void
unity_deprecated_scope_base_set_view_type_internal (UnityDeprecatedScopeBase* self,
                                                    UnityProtocolViewType view_type)
{
	g_return_if_fail (self != NULL);
}


static gpointer
_g_object_ref0 (gpointer self)
{
	return self ? g_object_ref (self) : NULL;
}


static gboolean
_vala_string_array_contains (gchar* * stack,
                             int stack_length,
                             gchar* needle)
{
	int i;
	for (i = 0; i < stack_length; i++) {
		if (g_strcmp0 (stack[i], needle) == 0) {
			return TRUE;
		}
	}
	return FALSE;
}


void
unity_deprecated_scope_base_set_active_sources_internal (UnityDeprecatedScopeBase* self,
                                                         gchar** active_sources_,
                                                         int active_sources__length1)
{
	UnityOptionsFilter* _tmp0_;
	GList* _tmp1_;
	g_return_if_fail (self != NULL);
	_tmp0_ = self->priv->_sources;
	_tmp1_ = _tmp0_->options;
	{
		GList* filter_option_collection = NULL;
		GList* filter_option_it = NULL;
		filter_option_collection = _tmp1_;
		for (filter_option_it = filter_option_collection; filter_option_it != NULL; filter_option_it = filter_option_it->next) {
			UnityFilterOption* _tmp2_;
			UnityFilterOption* filter_option = NULL;
			_tmp2_ = _g_object_ref0 ((UnityFilterOption*) filter_option_it->data);
			filter_option = _tmp2_;
			{
				UnityFilterOption* _tmp3_;
				UnityFilterOption* _tmp4_;
				const gchar* _tmp5_;
				const gchar* _tmp6_;
				_tmp3_ = filter_option;
				_tmp4_ = filter_option;
				_tmp5_ = unity_filter_option_get_id (_tmp4_);
				_tmp6_ = _tmp5_;
				unity_filter_option_set_active (_tmp3_, _vala_string_array_contains (active_sources_, active_sources__length1, _tmp6_));
				_g_object_unref0 (filter_option);
			}
		}
	}
	g_signal_emit (self, unity_deprecated_scope_base_signals[UNITY_DEPRECATED_SCOPE_BASE_ACTIVE_SOURCES_CHANGED_SIGNAL], 0, active_sources_, active_sources__length1);
}


static void
unity_deprecated_scope_base_handle_search_data_free (gpointer _data)
{
	UnityDeprecatedScopeBaseHandleSearchData* _data_;
	_data_ = _data;
	_g_free0 (_data_->channel_id);
	_g_free0 (_data_->search_string);
	_g_hash_table_unref0 (_data_->hints);
	_g_hash_table_unref0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityDeprecatedScopeBaseHandleSearchData, _data_);
}


static void
unity_deprecated_scope_base_handle_search_async_ready_wrapper (GObject *source_object,
                                                               GAsyncResult *res,
                                                               void *user_data)
{
	UnityDeprecatedScopeBaseHandleSearchData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static gpointer
_g_hash_table_ref0 (gpointer self)
{
	return self ? g_hash_table_ref (self) : NULL;
}


void
unity_deprecated_scope_base_handle_search (UnityDeprecatedScopeBase* self,
                                           const gchar* channel_id,
                                           const gchar* search_string,
                                           GHashTable* hints,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_)
{
	UnityDeprecatedScopeBaseHandleSearchData* _data_;
	UnityDeprecatedScopeBase* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	GHashTable* _tmp3_;
	_data_ = g_slice_new0 (UnityDeprecatedScopeBaseHandleSearchData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_deprecated_scope_base_handle_search_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_deprecated_scope_base_handle_search_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (channel_id);
	_g_free0 (_data_->channel_id);
	_data_->channel_id = _tmp1_;
	_tmp2_ = g_strdup (search_string);
	_g_free0 (_data_->search_string);
	_data_->search_string = _tmp2_;
	_tmp3_ = _g_hash_table_ref0 (hints);
	_g_hash_table_unref0 (_data_->hints);
	_data_->hints = _tmp3_;
	unity_deprecated_scope_base_handle_search_co (_data_);
}


GHashTable*
unity_deprecated_scope_base_handle_search_finish (UnityDeprecatedScopeBase* self,
                                                  GAsyncResult* _res_,
                                                  GError** error)
{
	GHashTable* result;
	UnityDeprecatedScopeBaseHandleSearchData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return NULL;
	}
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static void
unity_deprecated_scope_base_handle_search_ready (GObject* source_object,
                                                 GAsyncResult* _res_,
                                                 gpointer _user_data_)
{
	UnityDeprecatedScopeBaseHandleSearchData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_deprecated_scope_base_handle_search_co (_data_);
}


static gboolean
unity_deprecated_scope_base_handle_search_co (UnityDeprecatedScopeBaseHandleSearchData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_pimpl;
	_data_->_state_ = 1;
	unity_protocol_scope_service_search ((UnityProtocolScopeService*) _data_->_tmp0_, _data_->channel_id, _data_->search_string, _data_->hints, NULL, unity_deprecated_scope_base_handle_search_ready, _data_);
	return FALSE;
	_state_1:
	_data_->_tmp1_ = unity_protocol_scope_service_search_finish ((UnityProtocolScopeService*) _data_->_tmp0_, _data_->_res_, &_data_->_inner_error_);
	_data_->_result_ = _data_->_tmp1_;
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	_data_->result = _data_->_result_;
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


const gchar*
unity_deprecated_scope_base_get_id (UnityDeprecatedScopeBase* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_id;
	result = _tmp0_;
	return result;
}


static void
unity_deprecated_scope_base_set_id (UnityDeprecatedScopeBase* self,
                                    const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_deprecated_scope_base_get_id (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_id);
		self->priv->_id = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_ID_PROPERTY]);
	}
}


const gchar*
unity_deprecated_scope_base_get_dbus_path (UnityDeprecatedScopeBase* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_dbus_path;
	result = _tmp0_;
	return result;
}


static void
unity_deprecated_scope_base_set_dbus_path (UnityDeprecatedScopeBase* self,
                                           const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_deprecated_scope_base_get_dbus_path (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_dbus_path);
		self->priv->_dbus_path = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_DBUS_PATH_PROPERTY]);
	}
}


gboolean
unity_deprecated_scope_base_get_search_in_global (UnityDeprecatedScopeBase* self)
{
	gboolean result;
	gboolean _tmp0_;
	g_return_val_if_fail (self != NULL, FALSE);
	_tmp0_ = self->priv->_search_in_global;
	result = _tmp0_;
	return result;
}


void
unity_deprecated_scope_base_set_search_in_global (UnityDeprecatedScopeBase* self,
                                                  gboolean value)
{
	g_return_if_fail (self != NULL);
	if (unity_deprecated_scope_base_get_search_in_global (self) != value) {
		self->priv->_search_in_global = value;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_SEARCH_IN_GLOBAL_PROPERTY]);
	}
}


gboolean
unity_deprecated_scope_base_get_visible (UnityDeprecatedScopeBase* self)
{
	gboolean result;
	gboolean _tmp0_;
	g_return_val_if_fail (self != NULL, FALSE);
	_tmp0_ = self->priv->_visible;
	result = _tmp0_;
	return result;
}


void
unity_deprecated_scope_base_set_visible (UnityDeprecatedScopeBase* self,
                                         gboolean value)
{
	g_return_if_fail (self != NULL);
	if (unity_deprecated_scope_base_get_visible (self) != value) {
		self->priv->_visible = value;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_VISIBLE_PROPERTY]);
	}
}


gboolean
unity_deprecated_scope_base_get_is_master (UnityDeprecatedScopeBase* self)
{
	gboolean result;
	gboolean _tmp0_;
	g_return_val_if_fail (self != NULL, FALSE);
	_tmp0_ = self->priv->_is_master;
	result = _tmp0_;
	return result;
}


static void
unity_deprecated_scope_base_set_is_master (UnityDeprecatedScopeBase* self,
                                           gboolean value)
{
	g_return_if_fail (self != NULL);
	if (unity_deprecated_scope_base_get_is_master (self) != value) {
		self->priv->_is_master = value;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_IS_MASTER_PROPERTY]);
	}
}


const gchar*
unity_deprecated_scope_base_get_search_hint (UnityDeprecatedScopeBase* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_search_hint;
	result = _tmp0_;
	return result;
}


void
unity_deprecated_scope_base_set_search_hint (UnityDeprecatedScopeBase* self,
                                             const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_deprecated_scope_base_get_search_hint (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_search_hint);
		self->priv->_search_hint = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_SEARCH_HINT_PROPERTY]);
	}
}


UnityOptionsFilter*
unity_deprecated_scope_base_get_sources (UnityDeprecatedScopeBase* self)
{
	UnityOptionsFilter* result;
	UnityOptionsFilter* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_sources;
	result = _tmp0_;
	return result;
}


void
unity_deprecated_scope_base_set_sources (UnityDeprecatedScopeBase* self,
                                         UnityOptionsFilter* value)
{
	g_return_if_fail (self != NULL);
	if (unity_deprecated_scope_base_get_sources (self) != value) {
		UnityOptionsFilter* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_sources);
		self->priv->_sources = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_SOURCES_PROPERTY]);
	}
}


UnityCategorySet*
unity_deprecated_scope_base_get_categories (UnityDeprecatedScopeBase* self)
{
	UnityCategorySet* result;
	UnityCategorySet* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->_categories;
	result = _tmp0_;
	return result;
}


void
unity_deprecated_scope_base_set_categories (UnityDeprecatedScopeBase* self,
                                            UnityCategorySet* value)
{
	UnityCategorySet* _tmp0_;
	UnityInternalDeprecatedScopeDBusImpl* _tmp1_;
	GList* _tmp2_;
	GList* _tmp3_;
	g_return_if_fail (self != NULL);
	_tmp0_ = _g_object_ref0 (value);
	_g_object_unref0 (self->_categories);
	self->_categories = _tmp0_;
	_tmp1_ = self->priv->_pimpl;
	_tmp2_ = unity_category_set_get_categories (value);
	_tmp3_ = _tmp2_;
	unity_internal_deprecated_scope_dbus_impl_set_categories (_tmp1_, _tmp3_);
	(_tmp3_ == NULL) ? NULL : (_tmp3_ = (g_list_free (_tmp3_), NULL));
	g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_CATEGORIES_PROPERTY]);
}


UnityFilterSet*
unity_deprecated_scope_base_get_filters (UnityDeprecatedScopeBase* self)
{
	UnityFilterSet* result;
	UnityFilterSet* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->_filters;
	result = _tmp0_;
	return result;
}


void
unity_deprecated_scope_base_set_filters (UnityDeprecatedScopeBase* self,
                                         UnityFilterSet* value)
{
	UnityFilterSet* _tmp0_;
	UnityInternalDeprecatedScopeDBusImpl* _tmp1_;
	GList* _tmp2_;
	GList* _tmp3_;
	g_return_if_fail (self != NULL);
	_tmp0_ = _g_object_ref0 (value);
	_g_object_unref0 (self->_filters);
	self->_filters = _tmp0_;
	_tmp1_ = self->priv->_pimpl;
	_tmp2_ = unity_filter_set_get_filters (value);
	_tmp3_ = _tmp2_;
	unity_internal_deprecated_scope_dbus_impl_set_filters (_tmp1_, _tmp3_);
	(_tmp3_ == NULL) ? NULL : (_tmp3_ = (g_list_free (_tmp3_), NULL));
	g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_FILTERS_PROPERTY]);
}


UnitySchema*
unity_deprecated_scope_base_get_schema (UnityDeprecatedScopeBase* self)
{
	UnitySchema* result;
	UnitySchema* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_schema;
	result = _tmp0_;
	return result;
}


void
unity_deprecated_scope_base_set_schema (UnityDeprecatedScopeBase* self,
                                        UnitySchema* value)
{
	g_return_if_fail (self != NULL);
	if (unity_deprecated_scope_base_get_schema (self) != value) {
		UnitySchema* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_schema);
		self->priv->_schema = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_SCHEMA_PROPERTY]);
	}
}


static void
g_cclosure_user_marshal_VOID__BOXED_INT (GClosure * closure,
                                         GValue * return_value,
                                         guint n_param_values,
                                         const GValue * param_values,
                                         gpointer invocation_hint,
                                         gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__BOXED_INT) (gpointer data1, gpointer arg_1, gint arg_2, gpointer data2);
	register GMarshalFunc_VOID__BOXED_INT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
	g_return_if_fail (n_param_values == 3);
	if (G_CCLOSURE_SWAP_DATA (closure)) {
		data1 = closure->data;
		data2 = param_values->data[0].v_pointer;
	} else {
		data1 = param_values->data[0].v_pointer;
		data2 = closure->data;
	}
	callback = (GMarshalFunc_VOID__BOXED_INT) (marshal_data ? marshal_data : cc->callback);
	callback (data1, g_value_get_boxed (param_values + 1), g_value_get_int (param_values + 2), data2);
}


static GObject *
unity_deprecated_scope_base_constructor (GType type,
                                         guint n_construct_properties,
                                         GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	UnityDeprecatedScopeBase * self;
	UnitySchema* _tmp0_;
	UnitySchema* _tmp1_;
	UnityCheckOptionFilter* _tmp2_;
	UnityCheckOptionFilter* _tmp3_;
	parent_class = G_OBJECT_CLASS (unity_deprecated_scope_base_parent_class);
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_TYPE_DEPRECATED_SCOPE_BASE, UnityDeprecatedScopeBase);
	_tmp0_ = unity_schema_new ();
	_tmp1_ = _tmp0_;
	unity_deprecated_scope_base_set_schema (self, _tmp1_);
	_g_object_unref0 (_tmp1_);
	_tmp2_ = unity_check_option_filter_new ("unity-sources", "Sources", NULL, TRUE);
	_tmp3_ = _tmp2_;
	unity_deprecated_scope_base_set_sources (self, (UnityOptionsFilter*) _tmp3_);
	_g_object_unref0 (_tmp3_);
	return obj;
}


static void
unity_deprecated_scope_base_class_init (UnityDeprecatedScopeBaseClass * klass)
{
	unity_deprecated_scope_base_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityDeprecatedScopeBasePrivate));
	((GObjectClass *) klass)->constructed = (void (*) (GObject *)) unity_deprecated_scope_base_real_constructed;
	((UnityDeprecatedScopeBaseClass *) klass)->create_impl = (GObject* (*) (UnityDeprecatedScopeBase *)) unity_deprecated_scope_base_real_create_impl;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_deprecated_scope_base_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_deprecated_scope_base_set_property;
	G_OBJECT_CLASS (klass)->constructor = unity_deprecated_scope_base_constructor;
	G_OBJECT_CLASS (klass)->finalize = unity_deprecated_scope_base_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_ID_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_ID_PROPERTY] = g_param_spec_string ("id", "id", "id", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_DBUS_PATH_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_DBUS_PATH_PROPERTY] = g_param_spec_string ("dbus-path", "dbus-path", "dbus-path", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_SEARCH_IN_GLOBAL_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_SEARCH_IN_GLOBAL_PROPERTY] = g_param_spec_boolean ("search-in-global", "search-in-global", "search-in-global", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_VISIBLE_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_VISIBLE_PROPERTY] = g_param_spec_boolean ("visible", "visible", "visible", TRUE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_IS_MASTER_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_IS_MASTER_PROPERTY] = g_param_spec_boolean ("is-master", "is-master", "is-master", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_SEARCH_HINT_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_SEARCH_HINT_PROPERTY] = g_param_spec_string ("search-hint", "search-hint", "search-hint", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_SOURCES_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_SOURCES_PROPERTY] = g_param_spec_object ("sources", "sources", "sources", UNITY_TYPE_OPTIONS_FILTER, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_CATEGORIES_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_CATEGORIES_PROPERTY] = g_param_spec_object ("categories", "categories", "categories", UNITY_TYPE_CATEGORY_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_FILTERS_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_FILTERS_PROPERTY] = g_param_spec_object ("filters", "filters", "filters", UNITY_TYPE_FILTER_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_DEPRECATED_SCOPE_BASE_SCHEMA_PROPERTY, unity_deprecated_scope_base_properties[UNITY_DEPRECATED_SCOPE_BASE_SCHEMA_PROPERTY] = g_param_spec_object ("schema", "schema", "schema", UNITY_TYPE_SCHEMA, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	unity_deprecated_scope_base_signals[UNITY_DEPRECATED_SCOPE_BASE_ACTIVE_SOURCES_CHANGED_SIGNAL] = g_signal_new ("active-sources-changed", UNITY_TYPE_DEPRECATED_SCOPE_BASE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__BOXED_INT, G_TYPE_NONE, 2, G_TYPE_STRV, G_TYPE_INT);
}


static void
unity_deprecated_scope_base_instance_init (UnityDeprecatedScopeBase * self)
{
	self->priv = UNITY_DEPRECATED_SCOPE_BASE_GET_PRIVATE (self);
	self->priv->_search_in_global = FALSE;
	self->priv->_visible = TRUE;
	self->priv->_is_master = FALSE;
	self->priv->exported = FALSE;
	self->priv->is_local = FALSE;
}


static void
unity_deprecated_scope_base_finalize (GObject * obj)
{
	UnityDeprecatedScopeBase * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_TYPE_DEPRECATED_SCOPE_BASE, UnityDeprecatedScopeBase);
	_g_free0 (self->priv->_id);
	_g_free0 (self->priv->_dbus_path);
	_g_free0 (self->priv->_search_hint);
	_g_object_unref0 (self->priv->_sources);
	_g_object_unref0 (self->priv->_schema);
	_g_object_unref0 (self->priv->_pimpl);
	_g_object_unref0 (self->_categories);
	_g_object_unref0 (self->_filters);
	G_OBJECT_CLASS (unity_deprecated_scope_base_parent_class)->finalize (obj);
}


GType
unity_deprecated_scope_base_get_type (void)
{
	static volatile gsize unity_deprecated_scope_base_type_id__volatile = 0;
	if (g_once_init_enter (&unity_deprecated_scope_base_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityDeprecatedScopeBaseClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_deprecated_scope_base_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityDeprecatedScopeBase), 0, (GInstanceInitFunc) unity_deprecated_scope_base_instance_init, NULL };
		GType unity_deprecated_scope_base_type_id;
		unity_deprecated_scope_base_type_id = g_type_register_static (G_TYPE_OBJECT, "UnityDeprecatedScopeBase", &g_define_type_info, G_TYPE_FLAG_ABSTRACT);
		g_once_init_leave (&unity_deprecated_scope_base_type_id__volatile, unity_deprecated_scope_base_type_id);
	}
	return unity_deprecated_scope_base_type_id__volatile;
}


static void
_vala_unity_deprecated_scope_base_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec)
{
	UnityDeprecatedScopeBase * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_TYPE_DEPRECATED_SCOPE_BASE, UnityDeprecatedScopeBase);
	switch (property_id) {
		case UNITY_DEPRECATED_SCOPE_BASE_ID_PROPERTY:
		g_value_set_string (value, unity_deprecated_scope_base_get_id (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_DBUS_PATH_PROPERTY:
		g_value_set_string (value, unity_deprecated_scope_base_get_dbus_path (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_SEARCH_IN_GLOBAL_PROPERTY:
		g_value_set_boolean (value, unity_deprecated_scope_base_get_search_in_global (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_VISIBLE_PROPERTY:
		g_value_set_boolean (value, unity_deprecated_scope_base_get_visible (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_IS_MASTER_PROPERTY:
		g_value_set_boolean (value, unity_deprecated_scope_base_get_is_master (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_SEARCH_HINT_PROPERTY:
		g_value_set_string (value, unity_deprecated_scope_base_get_search_hint (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_SOURCES_PROPERTY:
		g_value_set_object (value, unity_deprecated_scope_base_get_sources (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_CATEGORIES_PROPERTY:
		g_value_set_object (value, unity_deprecated_scope_base_get_categories (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_FILTERS_PROPERTY:
		g_value_set_object (value, unity_deprecated_scope_base_get_filters (self));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_SCHEMA_PROPERTY:
		g_value_set_object (value, unity_deprecated_scope_base_get_schema (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_deprecated_scope_base_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec)
{
	UnityDeprecatedScopeBase * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_TYPE_DEPRECATED_SCOPE_BASE, UnityDeprecatedScopeBase);
	switch (property_id) {
		case UNITY_DEPRECATED_SCOPE_BASE_ID_PROPERTY:
		unity_deprecated_scope_base_set_id (self, g_value_get_string (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_DBUS_PATH_PROPERTY:
		unity_deprecated_scope_base_set_dbus_path (self, g_value_get_string (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_SEARCH_IN_GLOBAL_PROPERTY:
		unity_deprecated_scope_base_set_search_in_global (self, g_value_get_boolean (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_VISIBLE_PROPERTY:
		unity_deprecated_scope_base_set_visible (self, g_value_get_boolean (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_IS_MASTER_PROPERTY:
		unity_deprecated_scope_base_set_is_master (self, g_value_get_boolean (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_SEARCH_HINT_PROPERTY:
		unity_deprecated_scope_base_set_search_hint (self, g_value_get_string (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_SOURCES_PROPERTY:
		unity_deprecated_scope_base_set_sources (self, g_value_get_object (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_CATEGORIES_PROPERTY:
		unity_deprecated_scope_base_set_categories (self, g_value_get_object (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_FILTERS_PROPERTY:
		unity_deprecated_scope_base_set_filters (self, g_value_get_object (value));
		break;
		case UNITY_DEPRECATED_SCOPE_BASE_SCHEMA_PROPERTY:
		unity_deprecated_scope_base_set_schema (self, g_value_get_object (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
unity_deprecated_scope_real_preview_result_data_free (gpointer _data)
{
	UnityDeprecatedScopePreviewResultData* _data_;
	_data_ = _data;
	unity_scope_result_destroy (&_data_->_result_);
	_g_object_unref0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityDeprecatedScopePreviewResultData, _data_);
}


static void
unity_deprecated_scope_real_preview_result_async_ready_wrapper (GObject *source_object,
                                                                GAsyncResult *res,
                                                                void *user_data)
{
	UnityDeprecatedScopePreviewResultData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_deprecated_scope_real_preview_result (UnityDeprecatedScope* self,
                                            UnityScopeResult* _result_,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_)
{
	UnityDeprecatedScopePreviewResultData* _data_;
	UnityDeprecatedScope* _tmp0_;
	UnityScopeResult _tmp1_;
	UnityScopeResult _tmp2_ = {0};
	_data_ = g_slice_new0 (UnityDeprecatedScopePreviewResultData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_deprecated_scope_real_preview_result_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_deprecated_scope_real_preview_result_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = *_result_;
	unity_scope_result_copy (&_tmp1_, &_tmp2_);
	unity_scope_result_destroy (&_data_->_result_);
	_data_->_result_ = _tmp2_;
	unity_deprecated_scope_real_preview_result_co (_data_);
}


static UnityPreview*
unity_deprecated_scope_real_preview_result_finish (UnityDeprecatedScope* self,
                                                   GAsyncResult* _res_)
{
	UnityPreview* result;
	UnityDeprecatedScopePreviewResultData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static gboolean
unity_deprecated_scope_real_preview_result_co (UnityDeprecatedScopePreviewResultData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->_result_;
	_data_->_tmp1_ = _data_->_tmp0_.uri;
	_data_->_tmp2_ = NULL;
	g_signal_emit (_data_->self, unity_deprecated_scope_signals[UNITY_DEPRECATED_SCOPE_PREVIEW_URI_SIGNAL], 0, _data_->_tmp1_, &_data_->_tmp2_);
	_data_->preview = _data_->_tmp2_;
	_data_->result = _data_->preview;
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


void
unity_deprecated_scope_preview_result (UnityDeprecatedScope* self,
                                       UnityScopeResult* _result_,
                                       GAsyncReadyCallback _callback_,
                                       gpointer _user_data_)
{
	UNITY_DEPRECATED_SCOPE_GET_CLASS (self)->preview_result (self, _result_, _callback_, _user_data_);
}


UnityPreview*
unity_deprecated_scope_preview_result_finish (UnityDeprecatedScope* self,
                                              GAsyncResult* _res_)
{
	return UNITY_DEPRECATED_SCOPE_GET_CLASS (self)->preview_result_finish (self, _res_);
}


static void
unity_deprecated_scope_real_activate_result_data_free (gpointer _data)
{
	UnityDeprecatedScopeActivateResultData* _data_;
	_data_ = _data;
	unity_scope_result_destroy (&_data_->_result_);
	_g_object_unref0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityDeprecatedScopeActivateResultData, _data_);
}


static void
unity_deprecated_scope_real_activate_result_async_ready_wrapper (GObject *source_object,
                                                                 GAsyncResult *res,
                                                                 void *user_data)
{
	UnityDeprecatedScopeActivateResultData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_deprecated_scope_real_activate_result (UnityDeprecatedScope* self,
                                             UnityScopeResult* _result_,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_)
{
	UnityDeprecatedScopeActivateResultData* _data_;
	UnityDeprecatedScope* _tmp0_;
	UnityScopeResult _tmp1_;
	UnityScopeResult _tmp2_ = {0};
	_data_ = g_slice_new0 (UnityDeprecatedScopeActivateResultData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_deprecated_scope_real_activate_result_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_deprecated_scope_real_activate_result_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = *_result_;
	unity_scope_result_copy (&_tmp1_, &_tmp2_);
	unity_scope_result_destroy (&_data_->_result_);
	_data_->_result_ = _tmp2_;
	unity_deprecated_scope_real_activate_result_co (_data_);
}


static UnityActivationResponse*
unity_deprecated_scope_real_activate_result_finish (UnityDeprecatedScope* self,
                                                    GAsyncResult* _res_)
{
	UnityActivationResponse* result;
	UnityDeprecatedScopeActivateResultData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static gboolean
unity_deprecated_scope_real_activate_result_co (UnityDeprecatedScopeActivateResultData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->_result_;
	_data_->_tmp1_ = _data_->_tmp0_.uri;
	_data_->_tmp2_ = NULL;
	g_signal_emit (_data_->self, unity_deprecated_scope_signals[UNITY_DEPRECATED_SCOPE_ACTIVATE_URI_SIGNAL], 0, _data_->_tmp1_, &_data_->_tmp2_);
	_data_->response = _data_->_tmp2_;
	_data_->result = _data_->response;
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


void
unity_deprecated_scope_activate_result (UnityDeprecatedScope* self,
                                        UnityScopeResult* _result_,
                                        GAsyncReadyCallback _callback_,
                                        gpointer _user_data_)
{
	UNITY_DEPRECATED_SCOPE_GET_CLASS (self)->activate_result (self, _result_, _callback_, _user_data_);
}


UnityActivationResponse*
unity_deprecated_scope_activate_result_finish (UnityDeprecatedScope* self,
                                               GAsyncResult* _res_)
{
	return UNITY_DEPRECATED_SCOPE_GET_CLASS (self)->activate_result_finish (self, _res_);
}


UnityDeprecatedScope*
unity_deprecated_scope_construct (GType object_type,
                                  const gchar* dbus_path_,
                                  const gchar* id_)
{
	UnityDeprecatedScope * self = NULL;
	g_return_val_if_fail (dbus_path_ != NULL, NULL);
	g_return_val_if_fail (id_ != NULL, NULL);
	self = (UnityDeprecatedScope*) g_object_new (object_type, "dbus-path", dbus_path_, "id", id_, NULL);
	return self;
}


UnityDeprecatedScope*
unity_deprecated_scope_new (const gchar* dbus_path_,
                            const gchar* id_)
{
	return unity_deprecated_scope_construct (UNITY_TYPE_DEPRECATED_SCOPE, dbus_path_, id_);
}


static GObject*
unity_deprecated_scope_real_create_impl (UnityDeprecatedScopeBase* base)
{
	UnityDeprecatedScope * self;
	GObject* result = NULL;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	self = (UnityDeprecatedScope*) base;
	_tmp0_ = unity_internal_deprecated_scope_impl_new (self);
	result = (GObject*) _tmp0_;
	return result;
}


/**
   * Invalidates current search and queues new search.
   *
   * This method will invalidate (and cancel) last search and queue a new
   * search (with the same search_string). The {@link DeprecatedScope.search_changed}
   * signal will be emitted immediately in case the Lens managing this scope
   * is active, or as soon as it becomes active.
   *
   * @param search_type Type of search to queue.
   */
void
unity_deprecated_scope_queue_search_changed (UnityDeprecatedScope* self,
                                             UnitySearchType search_type)
{
	UnityInternalDeprecatedScopeImpl* pimpl = NULL;
	GObject* _tmp0_;
	UnityInternalDeprecatedScopeImpl* _tmp1_;
	g_return_if_fail (self != NULL);
	_vala_return_if_fail (search_type < UNITY_SEARCH_TYPE_N_TYPES, "search_type < SearchType.N_TYPES");
	_tmp0_ = unity_deprecated_scope_base_get_impl ((UnityDeprecatedScopeBase*) self);
	_tmp1_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp0_, UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL) ? ((UnityInternalDeprecatedScopeImpl*) _tmp0_) : NULL);
	pimpl = _tmp1_;
	unity_internal_deprecated_scope_impl_queue_search_for_type (pimpl, search_type);
	_g_object_unref0 (pimpl);
}


static void
g_cclosure_user_marshal_OBJECT__STRING (GClosure * closure,
                                        GValue * return_value,
                                        guint n_param_values,
                                        const GValue * param_values,
                                        gpointer invocation_hint,
                                        gpointer marshal_data)
{
	typedef gpointer (*GMarshalFunc_OBJECT__STRING) (gpointer data1, const char* arg_1, gpointer data2);
	register GMarshalFunc_OBJECT__STRING callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	gpointer v_return;
	cc = (GCClosure *) closure;
	g_return_if_fail (return_value != NULL);
	g_return_if_fail (n_param_values == 2);
	if (G_CCLOSURE_SWAP_DATA (closure)) {
		data1 = closure->data;
		data2 = param_values->data[0].v_pointer;
	} else {
		data1 = param_values->data[0].v_pointer;
		data2 = closure->data;
	}
	callback = (GMarshalFunc_OBJECT__STRING) (marshal_data ? marshal_data : cc->callback);
	v_return = callback (data1, g_value_get_string (param_values + 1), data2);
	g_value_take_object (return_value, v_return);
}


static void
g_cclosure_user_marshal_STRING__OBJECT (GClosure * closure,
                                        GValue * return_value,
                                        guint n_param_values,
                                        const GValue * param_values,
                                        gpointer invocation_hint,
                                        gpointer marshal_data)
{
	typedef const char* (*GMarshalFunc_STRING__OBJECT) (gpointer data1, gpointer arg_1, gpointer data2);
	register GMarshalFunc_STRING__OBJECT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	const char* v_return;
	cc = (GCClosure *) closure;
	g_return_if_fail (return_value != NULL);
	g_return_if_fail (n_param_values == 2);
	if (G_CCLOSURE_SWAP_DATA (closure)) {
		data1 = closure->data;
		data2 = param_values->data[0].v_pointer;
	} else {
		data1 = param_values->data[0].v_pointer;
		data2 = closure->data;
	}
	callback = (GMarshalFunc_STRING__OBJECT) (marshal_data ? marshal_data : cc->callback);
	v_return = callback (data1, g_value_get_object (param_values + 1), data2);
	g_value_take_string (return_value, v_return);
}


static void
g_cclosure_user_marshal_VOID__OBJECT_ENUM_OBJECT (GClosure * closure,
                                                  GValue * return_value,
                                                  guint n_param_values,
                                                  const GValue * param_values,
                                                  gpointer invocation_hint,
                                                  gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__OBJECT_ENUM_OBJECT) (gpointer data1, gpointer arg_1, gint arg_2, gpointer arg_3, gpointer data2);
	register GMarshalFunc_VOID__OBJECT_ENUM_OBJECT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
	g_return_if_fail (n_param_values == 4);
	if (G_CCLOSURE_SWAP_DATA (closure)) {
		data1 = closure->data;
		data2 = param_values->data[0].v_pointer;
	} else {
		data1 = param_values->data[0].v_pointer;
		data2 = closure->data;
	}
	callback = (GMarshalFunc_VOID__OBJECT_ENUM_OBJECT) (marshal_data ? marshal_data : cc->callback);
	callback (data1, g_value_get_object (param_values + 1), g_value_get_enum (param_values + 2), g_value_get_object (param_values + 3), data2);
}


static void
unity_deprecated_scope_class_init (UnityDeprecatedScopeClass * klass)
{
	unity_deprecated_scope_parent_class = g_type_class_peek_parent (klass);
	((UnityDeprecatedScopeClass *) klass)->preview_result = (void (*) (UnityDeprecatedScope *, UnityScopeResult*, GAsyncReadyCallback, gpointer)) unity_deprecated_scope_real_preview_result;
	((UnityDeprecatedScopeClass *) klass)->preview_result_finish = (UnityPreview* (*) (UnityDeprecatedScope *, GAsyncResult*)) unity_deprecated_scope_real_preview_result_finish;
	((UnityDeprecatedScopeClass *) klass)->activate_result = (void (*) (UnityDeprecatedScope *, UnityScopeResult*, GAsyncReadyCallback, gpointer)) unity_deprecated_scope_real_activate_result;
	((UnityDeprecatedScopeClass *) klass)->activate_result_finish = (UnityActivationResponse* (*) (UnityDeprecatedScope *, GAsyncResult*)) unity_deprecated_scope_real_activate_result_finish;
	((UnityDeprecatedScopeBaseClass *) klass)->create_impl = (GObject* (*) (UnityDeprecatedScopeBase *)) unity_deprecated_scope_real_create_impl;
	unity_deprecated_scope_signals[UNITY_DEPRECATED_SCOPE_ACTIVATE_URI_SIGNAL] = g_signal_new ("activate-uri", UNITY_TYPE_DEPRECATED_SCOPE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_OBJECT__STRING, UNITY_TYPE_ACTIVATION_RESPONSE, 1, G_TYPE_STRING);
	unity_deprecated_scope_signals[UNITY_DEPRECATED_SCOPE_PREVIEW_URI_SIGNAL] = g_signal_new ("preview-uri", UNITY_TYPE_DEPRECATED_SCOPE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_OBJECT__STRING, UNITY_TYPE_PREVIEW, 1, G_TYPE_STRING);
	unity_deprecated_scope_signals[UNITY_DEPRECATED_SCOPE_GENERATE_SEARCH_KEY_SIGNAL] = g_signal_new ("generate-search-key", UNITY_TYPE_DEPRECATED_SCOPE, G_SIGNAL_RUN_LAST | G_SIGNAL_DETAILED, 0, NULL, NULL, g_cclosure_user_marshal_STRING__OBJECT, G_TYPE_STRING, 1, UNITY_TYPE_DEPRECATED_SCOPE_SEARCH);
	unity_deprecated_scope_signals[UNITY_DEPRECATED_SCOPE_SEARCH_CHANGED_SIGNAL] = g_signal_new ("search-changed", UNITY_TYPE_DEPRECATED_SCOPE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__OBJECT_ENUM_OBJECT, G_TYPE_NONE, 3, UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, UNITY_TYPE_SEARCH_TYPE, g_cancellable_get_type ());
}


static void
unity_deprecated_scope_instance_init (UnityDeprecatedScope * self)
{
}


GType
unity_deprecated_scope_get_type (void)
{
	static volatile gsize unity_deprecated_scope_type_id__volatile = 0;
	if (g_once_init_enter (&unity_deprecated_scope_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityDeprecatedScopeClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_deprecated_scope_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityDeprecatedScope), 0, (GInstanceInitFunc) unity_deprecated_scope_instance_init, NULL };
		GType unity_deprecated_scope_type_id;
		unity_deprecated_scope_type_id = g_type_register_static (UNITY_TYPE_DEPRECATED_SCOPE_BASE, "UnityDeprecatedScope", &g_define_type_info, 0);
		g_once_init_leave (&unity_deprecated_scope_type_id__volatile, unity_deprecated_scope_type_id);
	}
	return unity_deprecated_scope_type_id__volatile;
}



