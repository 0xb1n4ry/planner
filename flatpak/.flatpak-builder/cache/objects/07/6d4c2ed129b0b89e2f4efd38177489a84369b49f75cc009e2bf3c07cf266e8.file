/* inspect.c generated by valac 0.40.11, the Vala compiler
 * generated from inspect.vala, do not modify */

/*
 * Copyright (C) 2010 Collabora Ltd.
 * Copyright (C) 2012 Philip Withnall
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors:
 *       Philip Withnall <philip.withnall@collabora.co.uk>
 */


#include <glib.h>
#include <glib-object.h>
#include <gee.h>
#include <stdlib.h>
#include <string.h>
#include <folks/folks.h>
#include <termios.h>
#include <stdio.h>
#include <locale.h>
#include <glib/gi18n-lib.h>
#include <config.h>
#include <glib-unix.h>
#include <signal.h>
#include <sys/types.h>
#include <gio/gio.h>
#include <unistd.h>
#include <readline/readline.h>
#include <readline/history.h>
#include <sys/wait.h>
#include <gobject/gvaluecollector.h>


#define FOLKS_INSPECT_TYPE_CLIENT (folks_inspect_client_get_type ())
#define FOLKS_INSPECT_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClient))
#define FOLKS_INSPECT_CLIENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClientClass))
#define FOLKS_INSPECT_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_TYPE_CLIENT))
#define FOLKS_INSPECT_IS_CLIENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_TYPE_CLIENT))
#define FOLKS_INSPECT_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClientClass))

typedef struct _FolksInspectClient FolksInspectClient;
typedef struct _FolksInspectClientClass FolksInspectClientClass;
typedef struct _FolksInspectClientPrivate FolksInspectClientPrivate;

#define FOLKS_INSPECT_TYPE_COMMAND (folks_inspect_command_get_type ())
#define FOLKS_INSPECT_COMMAND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommand))
#define FOLKS_INSPECT_COMMAND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommandClass))
#define FOLKS_INSPECT_IS_COMMAND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_TYPE_COMMAND))
#define FOLKS_INSPECT_IS_COMMAND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_TYPE_COMMAND))
#define FOLKS_INSPECT_COMMAND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommandClass))

typedef struct _FolksInspectCommand FolksInspectCommand;
typedef struct _FolksInspectCommandClass FolksInspectCommandClass;

#define FOLKS_INSPECT_TYPE_SIGNAL_MANAGER (folks_inspect_signal_manager_get_type ())
#define FOLKS_INSPECT_SIGNAL_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_TYPE_SIGNAL_MANAGER, FolksInspectSignalManager))
#define FOLKS_INSPECT_SIGNAL_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_TYPE_SIGNAL_MANAGER, FolksInspectSignalManagerClass))
#define FOLKS_INSPECT_IS_SIGNAL_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_TYPE_SIGNAL_MANAGER))
#define FOLKS_INSPECT_IS_SIGNAL_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_TYPE_SIGNAL_MANAGER))
#define FOLKS_INSPECT_SIGNAL_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_TYPE_SIGNAL_MANAGER, FolksInspectSignalManagerClass))

typedef struct _FolksInspectSignalManager FolksInspectSignalManager;
typedef struct _FolksInspectSignalManagerClass FolksInspectSignalManagerClass;
enum  {
	FOLKS_INSPECT_CLIENT_0_PROPERTY,
	FOLKS_INSPECT_CLIENT_AGGREGATOR_PROPERTY,
	FOLKS_INSPECT_CLIENT_BACKEND_STORE_PROPERTY,
	FOLKS_INSPECT_CLIENT_SIGNAL_MANAGER_PROPERTY,
	FOLKS_INSPECT_CLIENT_NUM_PROPERTIES
};
static GParamSpec* folks_inspect_client_properties[FOLKS_INSPECT_CLIENT_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_main_loop_unref0(var) ((var == NULL) ? NULL : (var = (g_main_loop_unref (var), NULL)))
#define _g_io_channel_unref0(var) ((var == NULL) ? NULL : (var = (g_io_channel_unref (var), NULL)))
#define _fclose0(var) ((var == NULL) ? NULL : (var = (fclose (var), NULL)))
typedef struct _Block1Data Block1Data;
#define _g_option_context_free0(var) ((var == NULL) ? NULL : (var = (g_option_context_free (var), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))

#define FOLKS_INSPECT_COMMANDS_TYPE_QUIT (folks_inspect_commands_quit_get_type ())
#define FOLKS_INSPECT_COMMANDS_QUIT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_QUIT, FolksInspectCommandsQuit))
#define FOLKS_INSPECT_COMMANDS_QUIT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_QUIT, FolksInspectCommandsQuitClass))
#define FOLKS_INSPECT_COMMANDS_IS_QUIT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_QUIT))
#define FOLKS_INSPECT_COMMANDS_IS_QUIT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_QUIT))
#define FOLKS_INSPECT_COMMANDS_QUIT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_QUIT, FolksInspectCommandsQuitClass))

typedef struct _FolksInspectCommandsQuit FolksInspectCommandsQuit;
typedef struct _FolksInspectCommandsQuitClass FolksInspectCommandsQuitClass;
#define _folks_inspect_command_unref0(var) ((var == NULL) ? NULL : (var = (folks_inspect_command_unref (var), NULL)))

#define FOLKS_INSPECT_COMMANDS_TYPE_HELP (folks_inspect_commands_help_get_type ())
#define FOLKS_INSPECT_COMMANDS_HELP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_HELP, FolksInspectCommandsHelp))
#define FOLKS_INSPECT_COMMANDS_HELP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_HELP, FolksInspectCommandsHelpClass))
#define FOLKS_INSPECT_COMMANDS_IS_HELP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_HELP))
#define FOLKS_INSPECT_COMMANDS_IS_HELP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_HELP))
#define FOLKS_INSPECT_COMMANDS_HELP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_HELP, FolksInspectCommandsHelpClass))

typedef struct _FolksInspectCommandsHelp FolksInspectCommandsHelp;
typedef struct _FolksInspectCommandsHelpClass FolksInspectCommandsHelpClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_INDIVIDUALS (folks_inspect_commands_individuals_get_type ())
#define FOLKS_INSPECT_COMMANDS_INDIVIDUALS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_INDIVIDUALS, FolksInspectCommandsIndividuals))
#define FOLKS_INSPECT_COMMANDS_INDIVIDUALS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_INDIVIDUALS, FolksInspectCommandsIndividualsClass))
#define FOLKS_INSPECT_COMMANDS_IS_INDIVIDUALS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_INDIVIDUALS))
#define FOLKS_INSPECT_COMMANDS_IS_INDIVIDUALS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_INDIVIDUALS))
#define FOLKS_INSPECT_COMMANDS_INDIVIDUALS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_INDIVIDUALS, FolksInspectCommandsIndividualsClass))

typedef struct _FolksInspectCommandsIndividuals FolksInspectCommandsIndividuals;
typedef struct _FolksInspectCommandsIndividualsClass FolksInspectCommandsIndividualsClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_LINKING (folks_inspect_commands_linking_get_type ())
#define FOLKS_INSPECT_COMMANDS_LINKING(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_LINKING, FolksInspectCommandsLinking))
#define FOLKS_INSPECT_COMMANDS_LINKING_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_LINKING, FolksInspectCommandsLinkingClass))
#define FOLKS_INSPECT_COMMANDS_IS_LINKING(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_LINKING))
#define FOLKS_INSPECT_COMMANDS_IS_LINKING_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_LINKING))
#define FOLKS_INSPECT_COMMANDS_LINKING_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_LINKING, FolksInspectCommandsLinkingClass))

typedef struct _FolksInspectCommandsLinking FolksInspectCommandsLinking;
typedef struct _FolksInspectCommandsLinkingClass FolksInspectCommandsLinkingClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS (folks_inspect_commands_personas_get_type ())
#define FOLKS_INSPECT_COMMANDS_PERSONAS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS, FolksInspectCommandsPersonas))
#define FOLKS_INSPECT_COMMANDS_PERSONAS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS, FolksInspectCommandsPersonasClass))
#define FOLKS_INSPECT_COMMANDS_IS_PERSONAS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS))
#define FOLKS_INSPECT_COMMANDS_IS_PERSONAS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS))
#define FOLKS_INSPECT_COMMANDS_PERSONAS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS, FolksInspectCommandsPersonasClass))

typedef struct _FolksInspectCommandsPersonas FolksInspectCommandsPersonas;
typedef struct _FolksInspectCommandsPersonasClass FolksInspectCommandsPersonasClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_BACKENDS (folks_inspect_commands_backends_get_type ())
#define FOLKS_INSPECT_COMMANDS_BACKENDS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_BACKENDS, FolksInspectCommandsBackends))
#define FOLKS_INSPECT_COMMANDS_BACKENDS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_BACKENDS, FolksInspectCommandsBackendsClass))
#define FOLKS_INSPECT_COMMANDS_IS_BACKENDS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_BACKENDS))
#define FOLKS_INSPECT_COMMANDS_IS_BACKENDS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_BACKENDS))
#define FOLKS_INSPECT_COMMANDS_BACKENDS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_BACKENDS, FolksInspectCommandsBackendsClass))

typedef struct _FolksInspectCommandsBackends FolksInspectCommandsBackends;
typedef struct _FolksInspectCommandsBackendsClass FolksInspectCommandsBackendsClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_PERSONA_STORES (folks_inspect_commands_persona_stores_get_type ())
#define FOLKS_INSPECT_COMMANDS_PERSONA_STORES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONA_STORES, FolksInspectCommandsPersonaStores))
#define FOLKS_INSPECT_COMMANDS_PERSONA_STORES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_PERSONA_STORES, FolksInspectCommandsPersonaStoresClass))
#define FOLKS_INSPECT_COMMANDS_IS_PERSONA_STORES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONA_STORES))
#define FOLKS_INSPECT_COMMANDS_IS_PERSONA_STORES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_PERSONA_STORES))
#define FOLKS_INSPECT_COMMANDS_PERSONA_STORES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONA_STORES, FolksInspectCommandsPersonaStoresClass))

typedef struct _FolksInspectCommandsPersonaStores FolksInspectCommandsPersonaStores;
typedef struct _FolksInspectCommandsPersonaStoresClass FolksInspectCommandsPersonaStoresClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_SET (folks_inspect_commands_set_get_type ())
#define FOLKS_INSPECT_COMMANDS_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SET, FolksInspectCommandsSet))
#define FOLKS_INSPECT_COMMANDS_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_SET, FolksInspectCommandsSetClass))
#define FOLKS_INSPECT_COMMANDS_IS_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SET))
#define FOLKS_INSPECT_COMMANDS_IS_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_SET))
#define FOLKS_INSPECT_COMMANDS_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SET, FolksInspectCommandsSetClass))

typedef struct _FolksInspectCommandsSet FolksInspectCommandsSet;
typedef struct _FolksInspectCommandsSetClass FolksInspectCommandsSetClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_SIGNALS (folks_inspect_commands_signals_get_type ())
#define FOLKS_INSPECT_COMMANDS_SIGNALS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SIGNALS, FolksInspectCommandsSignals))
#define FOLKS_INSPECT_COMMANDS_SIGNALS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_SIGNALS, FolksInspectCommandsSignalsClass))
#define FOLKS_INSPECT_COMMANDS_IS_SIGNALS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SIGNALS))
#define FOLKS_INSPECT_COMMANDS_IS_SIGNALS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_SIGNALS))
#define FOLKS_INSPECT_COMMANDS_SIGNALS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SIGNALS, FolksInspectCommandsSignalsClass))

typedef struct _FolksInspectCommandsSignals FolksInspectCommandsSignals;
typedef struct _FolksInspectCommandsSignalsClass FolksInspectCommandsSignalsClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_DEBUG (folks_inspect_commands_debug_get_type ())
#define FOLKS_INSPECT_COMMANDS_DEBUG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_DEBUG, FolksInspectCommandsDebug))
#define FOLKS_INSPECT_COMMANDS_DEBUG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_DEBUG, FolksInspectCommandsDebugClass))
#define FOLKS_INSPECT_COMMANDS_IS_DEBUG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_DEBUG))
#define FOLKS_INSPECT_COMMANDS_IS_DEBUG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_DEBUG))
#define FOLKS_INSPECT_COMMANDS_DEBUG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_DEBUG, FolksInspectCommandsDebugClass))

typedef struct _FolksInspectCommandsDebug FolksInspectCommandsDebug;
typedef struct _FolksInspectCommandsDebugClass FolksInspectCommandsDebugClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_SEARCH (folks_inspect_commands_search_get_type ())
#define FOLKS_INSPECT_COMMANDS_SEARCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SEARCH, FolksInspectCommandsSearch))
#define FOLKS_INSPECT_COMMANDS_SEARCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_SEARCH, FolksInspectCommandsSearchClass))
#define FOLKS_INSPECT_COMMANDS_IS_SEARCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SEARCH))
#define FOLKS_INSPECT_COMMANDS_IS_SEARCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_SEARCH))
#define FOLKS_INSPECT_COMMANDS_SEARCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_SEARCH, FolksInspectCommandsSearchClass))

typedef struct _FolksInspectCommandsSearch FolksInspectCommandsSearch;
typedef struct _FolksInspectCommandsSearchClass FolksInspectCommandsSearchClass;
typedef struct _Block2Data Block2Data;
typedef struct _FolksInspectClientWaitForQuiescenceData FolksInspectClientWaitForQuiescenceData;
typedef struct _FolksInspectClientRunNonInteractiveData FolksInspectClientRunNonInteractiveData;
typedef struct _FolksInspectClientRunInteractiveData FolksInspectClientRunInteractiveData;
typedef struct _Block3Data Block3Data;
typedef struct _FolksInspectCommandPrivate FolksInspectCommandPrivate;
typedef struct _FolksInspectParamSpecCommand FolksInspectParamSpecCommand;
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _FolksInspectClient {
	GObject parent_instance;
	FolksInspectClientPrivate * priv;
	GeeHashMap* commands;
};

struct _FolksInspectClientClass {
	GObjectClass parent_class;
};

struct _FolksInspectClientPrivate {
	GMainLoop* main_loop;
	FolksIndividualAggregator* _aggregator;
	FolksBackendStore* _backend_store;
	FolksInspectSignalManager* _signal_manager;
	struct termios _original_termios_p;
	gboolean _original_termios_p_valid;
	gboolean _quit_after_pager_dies;
	GIOChannel* _stdin_channel;
	FILE* _pager_channel;
	guint _pager_child_watch_id;
};

struct _Block1Data {
	int _ref_count_;
	gint retval;
};

struct _Block2Data {
	int _ref_count_;
	FolksInspectClient* self;
	gboolean has_yielded;
	gpointer _async_data_;
};

struct _FolksInspectClientWaitForQuiescenceData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksInspectClient* self;
	Block2Data* _data2_;
	gulong signal_id;
	FolksIndividualAggregator* _tmp0_;
	gulong _tmp1_;
	FolksIndividualAggregator* _tmp2_;
	FolksIndividualAggregator* _tmp3_;
	gboolean _tmp4_;
	gboolean _tmp5_;
	FolksIndividualAggregator* _tmp6_;
	gulong _tmp7_;
	FolksIndividualAggregator* _tmp8_;
	gboolean _tmp9_;
	gboolean _tmp10_;
	GError * _inner_error_;
};

struct _FolksInspectClientRunNonInteractiveData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksInspectClient* self;
	gchar* command_line;
	gint result;
	gchar* subcommand;
	gchar* command_name;
	FolksInspectCommand* command;
	gchar* _tmp0_;
	gchar* _tmp1_;
	FolksInspectCommand* _tmp2_;
	FolksInspectCommand* _tmp3_;
	FILE* _tmp4_;
	const gchar* _tmp5_;
	GError* e1;
	FILE* _tmp6_;
	GError* _tmp7_;
	const gchar* _tmp8_;
	gint retval;
	FolksInspectCommand* _tmp9_;
	const gchar* _tmp10_;
	GError * _inner_error_;
};

struct _FolksInspectClientRunInteractiveData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksInspectClient* self;
	gint result;
	struct termios _tmp0_;
	gint _tmp1_;
	FILE* _tmp2_;
	GIOChannel* _tmp3_;
	FolksIndividualAggregator* _tmp4_;
};

struct _Block3Data {
	int _ref_count_;
	FolksInspectCommand* command;
};

struct _FolksInspectCommand {
	GTypeInstance parent_instance;
	volatile int ref_count;
	FolksInspectCommandPrivate * priv;
	FolksInspectClient* client;
};

struct _FolksInspectCommandClass {
	GTypeClass parent_class;
	void (*finalize) (FolksInspectCommand *self);
	void (*run) (FolksInspectCommand* self, const gchar* command_string, GAsyncReadyCallback _callback_, gpointer _user_data_);
	gint (*run_finish) (FolksInspectCommand* self, GAsyncResult* _res_);
	gchar** (*complete_subcommand) (FolksInspectCommand* self, const gchar* subcommand, int* result_length1);
	const gchar* (*get_name) (FolksInspectCommand* self);
	const gchar* (*get_description) (FolksInspectCommand* self);
	const gchar* (*get_help) (FolksInspectCommand* self);
};

struct _FolksInspectParamSpecCommand {
	GParamSpec parent_instance;
};


extern FolksInspectClient* main_client;
FolksInspectClient* main_client = NULL;
static gpointer folks_inspect_client_parent_class = NULL;
static gboolean folks_inspect_client__is_readline_installed;
static gboolean folks_inspect_client__is_readline_installed = FALSE;
static GPid folks_inspect_client__pager_pid;
static GPid folks_inspect_client__pager_pid = (GPid) 0;
static guint folks_inspect_client__stdin_watch_id;
static guint folks_inspect_client__stdin_watch_id = (guint) 0;
extern FILE* folks_inspect_utils_output_filestream;
static gpointer folks_inspect_command_parent_class = NULL;

GType folks_inspect_client_get_type (void) G_GNUC_CONST;
gpointer folks_inspect_command_ref (gpointer instance);
void folks_inspect_command_unref (gpointer instance);
GParamSpec* folks_inspect_param_spec_command (const gchar* name,
                                              const gchar* nick,
                                              const gchar* blurb,
                                              GType object_type,
                                              GParamFlags flags);
void folks_inspect_value_set_command (GValue* value,
                                      gpointer v_object);
void folks_inspect_value_take_command (GValue* value,
                                       gpointer v_object);
gpointer folks_inspect_value_get_command (const GValue* value);
GType folks_inspect_command_get_type (void) G_GNUC_CONST;
GType folks_inspect_signal_manager_get_type (void) G_GNUC_CONST;
#define FOLKS_INSPECT_CLIENT_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClientPrivate))
gint folks_inspect_client_main (gchar** args,
                                int args_length1);
static Block1Data* block1_data_ref (Block1Data* _data1_);
static void block1_data_unref (void * _userdata_);
FolksInspectClient* folks_inspect_client_new (void);
FolksInspectClient* folks_inspect_client_construct (GType object_type);
static gboolean __lambda4_ (void);
void folks_inspect_client_quit (FolksInspectClient* self);
static gboolean ___lambda4__gsource_func (gpointer self);
void folks_inspect_client_run_interactive (FolksInspectClient* self,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_);
gint folks_inspect_client_run_interactive_finish (FolksInspectClient* self,
                                                  GAsyncResult* _res_);
void folks_inspect_client_run_non_interactive (FolksInspectClient* self,
                                               const gchar* command_line,
                                               GAsyncReadyCallback _callback_,
                                               gpointer _user_data_);
gint folks_inspect_client_run_non_interactive_finish (FolksInspectClient* self,
                                                      GAsyncResult* _res_);
static void ___lambda9_ (Block1Data* _data1_,
                  GObject* obj,
                  GAsyncResult* res);
static void ____lambda9__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
void folks_inspect_utils_init (void);
FolksInspectCommandsQuit* folks_inspect_commands_quit_new (FolksInspectClient* client);
FolksInspectCommandsQuit* folks_inspect_commands_quit_construct (GType object_type,
                                                                 FolksInspectClient* client);
GType folks_inspect_commands_quit_get_type (void) G_GNUC_CONST;
FolksInspectCommandsHelp* folks_inspect_commands_help_new (FolksInspectClient* client);
FolksInspectCommandsHelp* folks_inspect_commands_help_construct (GType object_type,
                                                                 FolksInspectClient* client);
GType folks_inspect_commands_help_get_type (void) G_GNUC_CONST;
FolksInspectCommandsIndividuals* folks_inspect_commands_individuals_new (FolksInspectClient* client);
FolksInspectCommandsIndividuals* folks_inspect_commands_individuals_construct (GType object_type,
                                                                               FolksInspectClient* client);
GType folks_inspect_commands_individuals_get_type (void) G_GNUC_CONST;
FolksInspectCommandsLinking* folks_inspect_commands_linking_new (FolksInspectClient* client);
FolksInspectCommandsLinking* folks_inspect_commands_linking_construct (GType object_type,
                                                                       FolksInspectClient* client);
GType folks_inspect_commands_linking_get_type (void) G_GNUC_CONST;
FolksInspectCommandsPersonas* folks_inspect_commands_personas_new (FolksInspectClient* client);
FolksInspectCommandsPersonas* folks_inspect_commands_personas_construct (GType object_type,
                                                                         FolksInspectClient* client);
GType folks_inspect_commands_personas_get_type (void) G_GNUC_CONST;
FolksInspectCommandsBackends* folks_inspect_commands_backends_new (FolksInspectClient* client);
FolksInspectCommandsBackends* folks_inspect_commands_backends_construct (GType object_type,
                                                                         FolksInspectClient* client);
GType folks_inspect_commands_backends_get_type (void) G_GNUC_CONST;
FolksInspectCommandsPersonaStores* folks_inspect_commands_persona_stores_new (FolksInspectClient* client);
FolksInspectCommandsPersonaStores* folks_inspect_commands_persona_stores_construct (GType object_type,
                                                                                    FolksInspectClient* client);
GType folks_inspect_commands_persona_stores_get_type (void) G_GNUC_CONST;
FolksInspectCommandsSet* folks_inspect_commands_set_new (FolksInspectClient* client);
FolksInspectCommandsSet* folks_inspect_commands_set_construct (GType object_type,
                                                               FolksInspectClient* client);
GType folks_inspect_commands_set_get_type (void) G_GNUC_CONST;
FolksInspectCommandsSignals* folks_inspect_commands_signals_new (FolksInspectClient* client);
FolksInspectCommandsSignals* folks_inspect_commands_signals_construct (GType object_type,
                                                                       FolksInspectClient* client);
GType folks_inspect_commands_signals_get_type (void) G_GNUC_CONST;
FolksInspectCommandsDebug* folks_inspect_commands_debug_new (FolksInspectClient* client);
FolksInspectCommandsDebug* folks_inspect_commands_debug_construct (GType object_type,
                                                                   FolksInspectClient* client);
GType folks_inspect_commands_debug_get_type (void) G_GNUC_CONST;
FolksInspectCommandsSearch* folks_inspect_commands_search_new (FolksInspectClient* client);
FolksInspectCommandsSearch* folks_inspect_commands_search_construct (GType object_type,
                                                                     FolksInspectClient* client);
GType folks_inspect_commands_search_get_type (void) G_GNUC_CONST;
FolksInspectSignalManager* folks_inspect_signal_manager_new (void);
FolksInspectSignalManager* folks_inspect_signal_manager_construct (GType object_type);
static void folks_inspect_client_set_signal_manager (FolksInspectClient* self,
                                              FolksInspectSignalManager* value);
static void folks_inspect_client_set_backend_store (FolksInspectClient* self,
                                             FolksBackendStore* value);
static void folks_inspect_client_set_aggregator (FolksInspectClient* self,
                                          FolksIndividualAggregator* value);
static void _folks_inspect_client_stop_paged_output (FolksInspectClient* self);
static void _folks_inspect_client_uninstall_readline_and_stdin (FolksInspectClient* self);
static void _folks_inspect_client_wait_for_quiescence_data_free (gpointer _data);
static void _folks_inspect_client_wait_for_quiescence_async_ready_wrapper (GObject *source_object,
                                                                    GAsyncResult *res,
                                                                    void *user_data);
static void _folks_inspect_client_wait_for_quiescence (FolksInspectClient* self,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
static void _folks_inspect_client_wait_for_quiescence_finish (FolksInspectClient* self,
                                                       GAsyncResult* _res_,
                                                       GError** error);
static gboolean _folks_inspect_client_wait_for_quiescence_co (FolksInspectClientWaitForQuiescenceData* _data_);
static Block2Data* block2_data_ref (Block2Data* _data2_);
static void block2_data_unref (void * _userdata_);
FolksIndividualAggregator* folks_inspect_client_get_aggregator (FolksInspectClient* self);
static void __lambda8_ (Block2Data* _data2_,
                 GObject* obj,
                 GParamSpec* pspec);
static void ___lambda8__g_object_notify (GObject* _sender,
                                  GParamSpec* pspec,
                                  gpointer self);
static void _folks_inspect_client_wait_for_quiescence_ready (GObject* source_object,
                                                      GAsyncResult* _res_,
                                                      gpointer _user_data_);
static void folks_inspect_client_run_non_interactive_data_free (gpointer _data);
static void folks_inspect_client_run_non_interactive_async_ready_wrapper (GObject *source_object,
                                                                   GAsyncResult *res,
                                                                   void *user_data);
static gboolean folks_inspect_client_run_non_interactive_co (FolksInspectClientRunNonInteractiveData* _data_);
static FolksInspectCommand* folks_inspect_client_parse_command_line (const gchar* command_line,
                                                              gchar* * command_name,
                                                              gchar* * subcommand);
static void folks_inspect_client_run_non_interactive_ready (GObject* source_object,
                                                     GAsyncResult* _res_,
                                                     gpointer _user_data_);
void folks_inspect_command_run (FolksInspectCommand* self,
                                const gchar* command_string,
                                GAsyncReadyCallback _callback_,
                                gpointer _user_data_);
gint folks_inspect_command_run_finish (FolksInspectCommand* self,
                                       GAsyncResult* _res_);
static void folks_inspect_client_run_interactive_data_free (gpointer _data);
static void folks_inspect_client_run_interactive_async_ready_wrapper (GObject *source_object,
                                                               GAsyncResult *res,
                                                               void *user_data);
static gboolean folks_inspect_client_run_interactive_co (FolksInspectClientRunInteractiveData* _data_);
static gboolean __lambda5_ (FolksInspectClient* self);
static gboolean ___lambda5__gsource_func (gpointer self);
static gchar** folks_inspect_client_completion_cb (const gchar* word,
                                            gint start,
                                            gint end);
static gchar** _folks_inspect_client_completion_cb_rl_completion_func_t (const gchar* str,
                                                                  gint a,
                                                                  gint b);
static void _folks_inspect_client_install_readline_and_stdin (FolksInspectClient* self);
static gboolean _folks_inspect_client_stdin_handler_cb (FolksInspectClient* self,
                                                 GIOChannel* source,
                                                 GIOCondition cond);
static gboolean __folks_inspect_client_stdin_handler_cb_gio_func (GIOChannel* source,
                                                           GIOCondition condition,
                                                           gpointer self);
static void _folks_inspect_client_readline_handler_cb (const gchar* _command_line);
static void __folks_inspect_client_readline_handler_cb_rl_vcpfunc_t (const gchar* s);
static Block3Data* block3_data_ref (Block3Data* _data3_);
static void block3_data_unref (void * _userdata_);
static void _folks_inspect_client_start_paged_output (FolksInspectClient* self);
static void ___lambda7_ (Block3Data* _data3_,
                  GObject* obj,
                  GAsyncResult* res);
static void ____lambda7__gasync_ready_callback (GObject* source_object,
                                         GAsyncResult* res,
                                         gpointer self);
static void __lambda6_ (FolksInspectClient* self,
                 GPid pid,
                 gint status);
static void ___lambda6__gchild_watch_func (GPid pid,
                                    gint status,
                                    gpointer self);
gchar* folks_inspect_utils_command_name_completion_cb (const gchar* word,
                                                       gint state);
static gchar* _folks_inspect_utils_command_name_completion_cb_rl_compentry_func_t (const gchar* str,
                                                                            gint a);
static gchar** _vala_array_dup15 (gchar** self,
                           int length);
gchar** folks_inspect_command_complete_subcommand (FolksInspectCommand* self,
                                                   const gchar* subcommand,
                                                   int* result_length1);
FolksBackendStore* folks_inspect_client_get_backend_store (FolksInspectClient* self);
FolksInspectSignalManager* folks_inspect_client_get_signal_manager (FolksInspectClient* self);
static void folks_inspect_client_finalize (GObject * obj);
static void _vala_folks_inspect_client_get_property (GObject * object,
                                              guint property_id,
                                              GValue * value,
                                              GParamSpec * pspec);
static void _vala_folks_inspect_client_set_property (GObject * object,
                                              guint property_id,
                                              const GValue * value,
                                              GParamSpec * pspec);
FolksInspectCommand* folks_inspect_command_construct (GType object_type,
                                                      FolksInspectClient* client);
static gchar** folks_inspect_command_real_complete_subcommand (FolksInspectCommand* self,
                                                        const gchar* subcommand,
                                                        int* result_length1);
const gchar* folks_inspect_command_get_name (FolksInspectCommand* self);
const gchar* folks_inspect_command_get_description (FolksInspectCommand* self);
const gchar* folks_inspect_command_get_help (FolksInspectCommand* self);
static void folks_inspect_command_finalize (FolksInspectCommand * obj);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);
static gint _vala_array_length (gpointer array);


static Block1Data*
block1_data_ref (Block1Data* _data1_)
{
#line 52 "/run/build/folks/tools/inspect/inspect.vala"
	g_atomic_int_inc (&_data1_->_ref_count_);
#line 52 "/run/build/folks/tools/inspect/inspect.vala"
	return _data1_;
#line 581 "inspect.c"
}


static void
block1_data_unref (void * _userdata_)
{
	Block1Data* _data1_;
	_data1_ = (Block1Data*) _userdata_;
#line 52 "/run/build/folks/tools/inspect/inspect.vala"
	if (g_atomic_int_dec_and_test (&_data1_->_ref_count_)) {
#line 52 "/run/build/folks/tools/inspect/inspect.vala"
		g_slice_free (Block1Data, _data1_);
#line 594 "inspect.c"
	}
}


static gboolean
__lambda4_ (void)
{
	gboolean result = FALSE;
	GPid _tmp0_;
#line 86 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = folks_inspect_client__pager_pid;
#line 86 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp0_ != ((GPid) 0)) {
#line 608 "inspect.c"
		FolksInspectClient* _tmp1_;
		GPid _tmp2_;
#line 88 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp1_ = main_client;
#line 88 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp1_->priv->_quit_after_pager_dies = TRUE;
#line 90 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp2_ = folks_inspect_client__pager_pid;
#line 90 "/run/build/folks/tools/inspect/inspect.vala"
		kill ((pid_t) _tmp2_, (gint) SIGTERM);
#line 619 "inspect.c"
	} else {
		FolksInspectClient* _tmp3_;
#line 98 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp3_ = main_client;
#line 98 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client_quit (_tmp3_);
#line 626 "inspect.c"
	}
#line 101 "/run/build/folks/tools/inspect/inspect.vala"
	result = FALSE;
#line 101 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 632 "inspect.c"
}


static gboolean
___lambda4__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda4_ ();
#line 80 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 643 "inspect.c"
}


static gchar*
_vala_g_strjoinv (const gchar* separator,
                  gchar** str_array,
                  int str_array_length1)
{
	gchar* result = NULL;
	gboolean _tmp0_ = FALSE;
#line 1148 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (separator == NULL) {
#line 1149 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		separator = "";
#line 658 "inspect.c"
	}
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (str_array != NULL) {
#line 662 "inspect.c"
		gboolean _tmp1_ = FALSE;
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		if (str_array_length1 > 0) {
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp1_ = TRUE;
#line 668 "inspect.c"
		} else {
			gboolean _tmp2_ = FALSE;
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			if (str_array_length1 == -1) {
#line 673 "inspect.c"
				const gchar* _tmp3_;
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp3_ = str_array[0];
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp2_ = _tmp3_ != NULL;
#line 679 "inspect.c"
			} else {
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp2_ = FALSE;
#line 683 "inspect.c"
			}
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp1_ = _tmp2_;
#line 687 "inspect.c"
		}
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = _tmp1_;
#line 691 "inspect.c"
	} else {
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = FALSE;
#line 695 "inspect.c"
	}
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (_tmp0_) {
#line 699 "inspect.c"
		gint i = 0;
		gsize len = 0UL;
		gint _tmp20_;
		gint _tmp22_;
		gint _tmp23_;
		gsize _tmp24_;
		gint _tmp25_;
		gint _tmp26_;
		gint _tmp27_;
		const gchar* res = NULL;
		gsize _tmp28_;
		void* _tmp29_;
		void* ptr = NULL;
		const gchar* _tmp30_;
		const gchar* _tmp31_;
		void* _tmp32_;
		const gchar* _tmp45_;
#line 1153 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		len = (gsize) 1;
#line 719 "inspect.c"
		{
			gboolean _tmp4_ = FALSE;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			i = 0;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp4_ = TRUE;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			while (TRUE) {
#line 728 "inspect.c"
				gboolean _tmp6_ = FALSE;
				gboolean _tmp7_ = FALSE;
				gint _tmp12_ = 0;
				gint _tmp13_;
				const gchar* _tmp14_;
				gsize _tmp19_;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (!_tmp4_) {
#line 737 "inspect.c"
					gint _tmp5_;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp5_ = i;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					i = _tmp5_ + 1;
#line 743 "inspect.c"
				}
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp4_ = FALSE;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (str_array_length1 != -1) {
#line 749 "inspect.c"
					gint _tmp8_;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp8_ = i;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp7_ = _tmp8_ < str_array_length1;
#line 755 "inspect.c"
				} else {
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp7_ = FALSE;
#line 759 "inspect.c"
				}
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (_tmp7_) {
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp6_ = TRUE;
#line 765 "inspect.c"
				} else {
					gboolean _tmp9_ = FALSE;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					if (str_array_length1 == -1) {
#line 770 "inspect.c"
						gint _tmp10_;
						const gchar* _tmp11_;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
						_tmp10_ = i;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
						_tmp11_ = str_array[_tmp10_];
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
						_tmp9_ = _tmp11_ != NULL;
#line 779 "inspect.c"
					} else {
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
						_tmp9_ = FALSE;
#line 783 "inspect.c"
					}
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp6_ = _tmp9_;
#line 787 "inspect.c"
				}
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (!_tmp6_) {
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					break;
#line 793 "inspect.c"
				}
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp13_ = i;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp14_ = str_array[_tmp13_];
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (_tmp14_ != NULL) {
#line 801 "inspect.c"
					gint _tmp15_;
					const gchar* _tmp16_;
					gint _tmp17_;
					gint _tmp18_;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp15_ = i;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp16_ = str_array[_tmp15_];
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp17_ = strlen ((const gchar*) _tmp16_);
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp18_ = _tmp17_;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp12_ = _tmp18_;
#line 816 "inspect.c"
				} else {
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp12_ = 0;
#line 820 "inspect.c"
				}
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp19_ = len;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				len = _tmp19_ + _tmp12_;
#line 826 "inspect.c"
			}
		}
#line 1157 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp20_ = i;
#line 1157 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		if (_tmp20_ == 0) {
#line 833 "inspect.c"
			gchar* _tmp21_;
#line 1158 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp21_ = g_strdup ("");
#line 1158 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			result = _tmp21_;
#line 1158 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			return result;
#line 841 "inspect.c"
		}
#line 1160 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp22_ = i;
#line 1160 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		str_array_length1 = _tmp22_;
#line 1160 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp23_ = str_array_length1;
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp24_ = len;
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp25_ = strlen ((const gchar*) separator);
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp26_ = _tmp25_;
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp27_ = i;
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		len = _tmp24_ + (_tmp26_ * (_tmp27_ - 1));
#line 1163 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp28_ = len;
#line 1163 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp29_ = g_malloc (_tmp28_);
#line 1163 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		res = _tmp29_;
#line 1164 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp30_ = res;
#line 1164 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp31_ = str_array[0];
#line 1164 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp32_ = g_stpcpy ((void*) _tmp30_, (const gchar*) _tmp31_);
#line 1164 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		ptr = _tmp32_;
#line 873 "inspect.c"
		{
			gboolean _tmp33_ = FALSE;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			i = 1;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp33_ = TRUE;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			while (TRUE) {
#line 882 "inspect.c"
				gint _tmp35_;
				void* _tmp36_;
				void* _tmp37_;
				const gchar* _tmp38_ = NULL;
				gint _tmp39_;
				const gchar* _tmp40_;
				void* _tmp43_;
				void* _tmp44_;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (!_tmp33_) {
#line 893 "inspect.c"
					gint _tmp34_;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp34_ = i;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					i = _tmp34_ + 1;
#line 899 "inspect.c"
				}
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp33_ = FALSE;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp35_ = i;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (!(_tmp35_ < str_array_length1)) {
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					break;
#line 909 "inspect.c"
				}
#line 1166 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp36_ = ptr;
#line 1166 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp37_ = g_stpcpy (_tmp36_, (const gchar*) separator);
#line 1166 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				ptr = _tmp37_;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp39_ = i;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp40_ = str_array[_tmp39_];
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (_tmp40_ != NULL) {
#line 923 "inspect.c"
					gint _tmp41_;
					const gchar* _tmp42_;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp41_ = i;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp42_ = str_array[_tmp41_];
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp38_ = (const gchar*) _tmp42_;
#line 932 "inspect.c"
				} else {
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp38_ = "";
#line 936 "inspect.c"
				}
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp43_ = ptr;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp44_ = g_stpcpy (_tmp43_, _tmp38_);
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				ptr = _tmp44_;
#line 944 "inspect.c"
			}
		}
#line 1170 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp45_ = res;
#line 1170 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		res = NULL;
#line 1170 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = (gchar*) _tmp45_;
#line 1170 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 955 "inspect.c"
	} else {
		gchar* _tmp46_;
#line 1172 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp46_ = g_strdup ("");
#line 1172 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = _tmp46_;
#line 1172 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 964 "inspect.c"
	}
}


static void
___lambda9_ (Block1Data* _data1_,
             GObject* obj,
             GAsyncResult* res)
{
	FolksInspectClient* _tmp0_;
	FolksInspectClient* _tmp1_;
#line 127 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (res != NULL);
#line 129 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = main_client;
#line 129 "/run/build/folks/tools/inspect/inspect.vala"
	_data1_->retval = folks_inspect_client_run_non_interactive_finish (_tmp0_, res);
#line 130 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = main_client;
#line 130 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_quit (_tmp1_);
#line 986 "inspect.c"
}


static void
____lambda9__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
#line 127 "/run/build/folks/tools/inspect/inspect.vala"
	___lambda9_ (self, source_object, res);
#line 127 "/run/build/folks/tools/inspect/inspect.vala"
	block1_data_unref (self);
#line 999 "inspect.c"
}


gint
folks_inspect_client_main (gchar** args,
                           int args_length1)
{
	gint result = 0;
	Block1Data* _data1_;
	GOptionContext* context = NULL;
	GOptionContext* _tmp0_;
	GOptionContext* _tmp1_;
	FolksInspectClient* _tmp8_;
	FolksInspectClient* _tmp15_;
	GMainLoop* _tmp16_;
	gint _tmp17_;
	GError * _inner_error_ = NULL;
#line 52 "/run/build/folks/tools/inspect/inspect.vala"
	_data1_ = g_slice_new0 (Block1Data);
#line 52 "/run/build/folks/tools/inspect/inspect.vala"
	_data1_->_ref_count_ = 1;
#line 54 "/run/build/folks/tools/inspect/inspect.vala"
	_data1_->retval = 0;
#line 56 "/run/build/folks/tools/inspect/inspect.vala"
	setlocale (LC_ALL, "");
#line 57 "/run/build/folks/tools/inspect/inspect.vala"
	bindtextdomain (GETTEXT_PACKAGE, LOCALE_DIR);
#line 58 "/run/build/folks/tools/inspect/inspect.vala"
	textdomain (GETTEXT_PACKAGE);
#line 61 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = g_option_context_new ("[COMMAND]");
#line 61 "/run/build/folks/tools/inspect/inspect.vala"
	context = _tmp0_;
#line 62 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = context;
#line 62 "/run/build/folks/tools/inspect/inspect.vala"
	g_option_context_set_summary (_tmp1_, "Inspect meta-contact information in libfolks.");
#line 1037 "inspect.c"
	{
		GOptionContext* _tmp2_;
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp2_ = context;
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
		g_option_context_parse (_tmp2_, &args_length1, &args, &_inner_error_);
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 1046 "inspect.c"
			gint _tmp3_ = -1;
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
			if (_inner_error_->domain == G_OPTION_ERROR) {
#line 1050 "inspect.c"
				goto __catch4_g_option_error;
			}
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
			_g_option_context_free0 (context);
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
			block1_data_unref (_data1_);
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
			_data1_ = NULL;
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
			g_clear_error (&_inner_error_);
#line 66 "/run/build/folks/tools/inspect/inspect.vala"
			return _tmp3_;
#line 1065 "inspect.c"
		}
	}
	goto __finally4;
	__catch4_g_option_error:
	{
		GError* e1 = NULL;
		FILE* _tmp4_;
		GError* _tmp5_;
		const gchar* _tmp6_;
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
		e1 = _inner_error_;
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
		_inner_error_ = NULL;
#line 70 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp4_ = stderr;
#line 70 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp5_ = e1;
#line 70 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp6_ = _tmp5_->message;
#line 70 "/run/build/folks/tools/inspect/inspect.vala"
		fprintf (_tmp4_, "Couldn’t parse command line options: %s\n", _tmp6_);
#line 72 "/run/build/folks/tools/inspect/inspect.vala"
		result = 1;
#line 72 "/run/build/folks/tools/inspect/inspect.vala"
		_g_error_free0 (e1);
#line 72 "/run/build/folks/tools/inspect/inspect.vala"
		_g_option_context_free0 (context);
#line 72 "/run/build/folks/tools/inspect/inspect.vala"
		block1_data_unref (_data1_);
#line 72 "/run/build/folks/tools/inspect/inspect.vala"
		_data1_ = NULL;
#line 72 "/run/build/folks/tools/inspect/inspect.vala"
		return result;
#line 1099 "inspect.c"
	}
	__finally4:
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 1104 "inspect.c"
		gint _tmp7_ = -1;
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
		_g_option_context_free0 (context);
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
		block1_data_unref (_data1_);
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
		_data1_ = NULL;
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
		g_clear_error (&_inner_error_);
#line 64 "/run/build/folks/tools/inspect/inspect.vala"
		return _tmp7_;
#line 1118 "inspect.c"
	}
#line 76 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp8_ = folks_inspect_client_new ();
#line 76 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (main_client);
#line 76 "/run/build/folks/tools/inspect/inspect.vala"
	main_client = _tmp8_;
#line 80 "/run/build/folks/tools/inspect/inspect.vala"
	g_unix_signal_add_full (G_PRIORITY_DEFAULT, (gint) SIGTERM, ___lambda4__gsource_func, NULL, NULL);
#line 105 "/run/build/folks/tools/inspect/inspect.vala"
	if (args_length1 == 1) {
#line 1130 "inspect.c"
		FolksInspectClient* _tmp9_;
#line 107 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp9_ = main_client;
#line 107 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client_run_interactive (_tmp9_, NULL, NULL);
#line 108 "/run/build/folks/tools/inspect/inspect.vala"
		_data1_->retval = 0;
#line 1138 "inspect.c"
	} else {
		gchar* command_line = NULL;
		const gchar* _tmp10_;
		FolksInspectClient* _tmp13_;
		const gchar* _tmp14_;
#line 112 "/run/build/folks/tools/inspect/inspect.vala"
		_vala_assert (args_length1 > 1, "args.length > 1");
#line 118 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp10_ = args[1];
#line 118 "/run/build/folks/tools/inspect/inspect.vala"
		if (g_strcmp0 (_tmp10_, "--") == 0) {
#line 1150 "inspect.c"
			gchar* _tmp11_;
#line 120 "/run/build/folks/tools/inspect/inspect.vala"
			_tmp11_ = _vala_g_strjoinv (" ", args + 2, 0 - 2);
#line 120 "/run/build/folks/tools/inspect/inspect.vala"
			_g_free0 (command_line);
#line 120 "/run/build/folks/tools/inspect/inspect.vala"
			command_line = _tmp11_;
#line 1158 "inspect.c"
		} else {
			gchar* _tmp12_;
#line 124 "/run/build/folks/tools/inspect/inspect.vala"
			_tmp12_ = _vala_g_strjoinv (" ", args + 1, 0 - 1);
#line 124 "/run/build/folks/tools/inspect/inspect.vala"
			_g_free0 (command_line);
#line 124 "/run/build/folks/tools/inspect/inspect.vala"
			command_line = _tmp12_;
#line 1167 "inspect.c"
		}
#line 127 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp13_ = main_client;
#line 127 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp14_ = command_line;
#line 127 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client_run_non_interactive (_tmp13_, _tmp14_, ____lambda9__gasync_ready_callback, block1_data_ref (_data1_));
#line 105 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (command_line);
#line 1177 "inspect.c"
	}
#line 134 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp15_ = main_client;
#line 134 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp16_ = _tmp15_->priv->main_loop;
#line 134 "/run/build/folks/tools/inspect/inspect.vala"
	g_main_loop_run (_tmp16_);
#line 136 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp17_ = _data1_->retval;
#line 136 "/run/build/folks/tools/inspect/inspect.vala"
	result = _tmp17_;
#line 136 "/run/build/folks/tools/inspect/inspect.vala"
	_g_option_context_free0 (context);
#line 136 "/run/build/folks/tools/inspect/inspect.vala"
	block1_data_unref (_data1_);
#line 136 "/run/build/folks/tools/inspect/inspect.vala"
	_data1_ = NULL;
#line 136 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 1197 "inspect.c"
}


int
main (int argc,
      char ** argv)
{
#line 52 "/run/build/folks/tools/inspect/inspect.vala"
	return folks_inspect_client_main (argv, argc);
#line 1207 "inspect.c"
}


FolksInspectClient*
folks_inspect_client_construct (GType object_type)
{
	FolksInspectClient * self = NULL;
	GeeHashMap* _tmp0_;
	GeeHashMap* _tmp1_;
	FolksInspectCommandsQuit* _tmp2_;
	FolksInspectCommandsQuit* _tmp3_;
	GeeHashMap* _tmp4_;
	FolksInspectCommandsHelp* _tmp5_;
	FolksInspectCommandsHelp* _tmp6_;
	GeeHashMap* _tmp7_;
	FolksInspectCommandsIndividuals* _tmp8_;
	FolksInspectCommandsIndividuals* _tmp9_;
	GeeHashMap* _tmp10_;
	FolksInspectCommandsLinking* _tmp11_;
	FolksInspectCommandsLinking* _tmp12_;
	GeeHashMap* _tmp13_;
	FolksInspectCommandsPersonas* _tmp14_;
	FolksInspectCommandsPersonas* _tmp15_;
	GeeHashMap* _tmp16_;
	FolksInspectCommandsBackends* _tmp17_;
	FolksInspectCommandsBackends* _tmp18_;
	GeeHashMap* _tmp19_;
	FolksInspectCommandsPersonaStores* _tmp20_;
	FolksInspectCommandsPersonaStores* _tmp21_;
	GeeHashMap* _tmp22_;
	FolksInspectCommandsSet* _tmp23_;
	FolksInspectCommandsSet* _tmp24_;
	GeeHashMap* _tmp25_;
	FolksInspectCommandsSignals* _tmp26_;
	FolksInspectCommandsSignals* _tmp27_;
	GeeHashMap* _tmp28_;
	FolksInspectCommandsDebug* _tmp29_;
	FolksInspectCommandsDebug* _tmp30_;
	GeeHashMap* _tmp31_;
	FolksInspectCommandsSearch* _tmp32_;
	FolksInspectCommandsSearch* _tmp33_;
	GMainLoop* _tmp34_;
	FolksInspectSignalManager* _tmp35_;
	FolksInspectSignalManager* _tmp36_;
	FolksBackendStore* _tmp37_;
	FolksBackendStore* _tmp38_;
	FolksIndividualAggregator* _tmp39_;
	FolksIndividualAggregator* _tmp40_;
#line 139 "/run/build/folks/tools/inspect/inspect.vala"
	self = (FolksInspectClient*) g_object_new (object_type, NULL);
#line 141 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_utils_init ();
#line 143 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_INSPECT_TYPE_COMMAND, (GBoxedCopyFunc) folks_inspect_command_ref, (GDestroyNotify) folks_inspect_command_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 143 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (self->commands);
#line 143 "/run/build/folks/tools/inspect/inspect.vala"
	self->commands = _tmp0_;
#line 147 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = self->commands;
#line 147 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp2_ = folks_inspect_commands_quit_new (self);
#line 147 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp3_ = _tmp2_;
#line 147 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp1_, "quit", (FolksInspectCommand*) _tmp3_);
#line 147 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp3_);
#line 148 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp4_ = self->commands;
#line 148 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp5_ = folks_inspect_commands_help_new (self);
#line 148 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp6_ = _tmp5_;
#line 148 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp4_, "help", (FolksInspectCommand*) _tmp6_);
#line 148 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp6_);
#line 149 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp7_ = self->commands;
#line 149 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp8_ = folks_inspect_commands_individuals_new (self);
#line 149 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp9_ = _tmp8_;
#line 149 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp7_, "individuals", (FolksInspectCommand*) _tmp9_);
#line 149 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp9_);
#line 150 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp10_ = self->commands;
#line 150 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp11_ = folks_inspect_commands_linking_new (self);
#line 150 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp12_ = _tmp11_;
#line 150 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp10_, "linking", (FolksInspectCommand*) _tmp12_);
#line 150 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp12_);
#line 151 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp13_ = self->commands;
#line 151 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp14_ = folks_inspect_commands_personas_new (self);
#line 151 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp15_ = _tmp14_;
#line 151 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp13_, "personas", (FolksInspectCommand*) _tmp15_);
#line 151 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp15_);
#line 152 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp16_ = self->commands;
#line 152 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp17_ = folks_inspect_commands_backends_new (self);
#line 152 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp18_ = _tmp17_;
#line 152 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp16_, "backends", (FolksInspectCommand*) _tmp18_);
#line 152 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp18_);
#line 153 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp19_ = self->commands;
#line 153 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp20_ = folks_inspect_commands_persona_stores_new (self);
#line 153 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp21_ = _tmp20_;
#line 153 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp19_, "persona-stores", (FolksInspectCommand*) _tmp21_);
#line 153 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp21_);
#line 154 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp22_ = self->commands;
#line 154 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp23_ = folks_inspect_commands_set_new (self);
#line 154 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp24_ = _tmp23_;
#line 154 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp22_, "set", (FolksInspectCommand*) _tmp24_);
#line 154 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp24_);
#line 155 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp25_ = self->commands;
#line 155 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp26_ = folks_inspect_commands_signals_new (self);
#line 155 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp27_ = _tmp26_;
#line 155 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp25_, "signals", (FolksInspectCommand*) _tmp27_);
#line 155 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp27_);
#line 156 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp28_ = self->commands;
#line 156 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp29_ = folks_inspect_commands_debug_new (self);
#line 156 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp30_ = _tmp29_;
#line 156 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp28_, "debug", (FolksInspectCommand*) _tmp30_);
#line 156 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp30_);
#line 157 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp31_ = self->commands;
#line 157 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp32_ = folks_inspect_commands_search_new (self);
#line 157 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp33_ = _tmp32_;
#line 157 "/run/build/folks/tools/inspect/inspect.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp31_, "search", (FolksInspectCommand*) _tmp33_);
#line 157 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_tmp33_);
#line 160 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp34_ = g_main_loop_new (NULL, FALSE);
#line 160 "/run/build/folks/tools/inspect/inspect.vala"
	_g_main_loop_unref0 (self->priv->main_loop);
#line 160 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->main_loop = _tmp34_;
#line 161 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp35_ = folks_inspect_signal_manager_new ();
#line 161 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp36_ = _tmp35_;
#line 161 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_set_signal_manager (self, _tmp36_);
#line 161 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (_tmp36_);
#line 162 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp37_ = folks_backend_store_dup ();
#line 162 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp38_ = _tmp37_;
#line 162 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_set_backend_store (self, _tmp38_);
#line 162 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (_tmp38_);
#line 163 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp39_ = folks_individual_aggregator_dup ();
#line 163 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp40_ = _tmp39_;
#line 163 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_set_aggregator (self, _tmp40_);
#line 163 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (_tmp40_);
#line 139 "/run/build/folks/tools/inspect/inspect.vala"
	return self;
#line 1408 "inspect.c"
}


FolksInspectClient*
folks_inspect_client_new (void)
{
#line 139 "/run/build/folks/tools/inspect/inspect.vala"
	return folks_inspect_client_construct (FOLKS_INSPECT_TYPE_CLIENT);
#line 1417 "inspect.c"
}


void
folks_inspect_client_quit (FolksInspectClient* self)
{
	gboolean _tmp0_;
	gboolean _tmp1_;
	GMainLoop* _tmp3_;
#line 166 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (self != NULL);
#line 169 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_client_stop_paged_output (self);
#line 172 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = folks_inspect_client__is_readline_installed;
#line 172 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp0_) {
#line 174 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_client_uninstall_readline_and_stdin (self);
#line 1437 "inspect.c"
	}
#line 179 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = self->priv->_original_termios_p_valid;
#line 179 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp1_) {
#line 1443 "inspect.c"
		struct termios _tmp2_;
#line 181 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp2_ = self->priv->_original_termios_p;
#line 181 "/run/build/folks/tools/inspect/inspect.vala"
		tcsetattr (STDIN_FILENO, TCSADRAIN, &_tmp2_);
#line 1449 "inspect.c"
	}
#line 186 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp3_ = self->priv->main_loop;
#line 186 "/run/build/folks/tools/inspect/inspect.vala"
	g_main_loop_quit (_tmp3_);
#line 1455 "inspect.c"
}


static void
_folks_inspect_client_wait_for_quiescence_data_free (gpointer _data)
{
	FolksInspectClientWaitForQuiescenceData* _data_;
	_data_ = _data;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (_data_->self);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_slice_free (FolksInspectClientWaitForQuiescenceData, _data_);
#line 1468 "inspect.c"
}


static void
_folks_inspect_client_wait_for_quiescence_async_ready_wrapper (GObject *source_object,
                                                               GAsyncResult *res,
                                                               void *user_data)
{
	FolksInspectClientWaitForQuiescenceData* _task_data_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	if (_task_data_->_callback_ != NULL) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 1484 "inspect.c"
	}
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_task_data_->_task_complete_ = TRUE;
#line 1488 "inspect.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	return self ? g_object_ref (self) : NULL;
#line 1497 "inspect.c"
}


static void
_folks_inspect_client_wait_for_quiescence (FolksInspectClient* self,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_)
{
	FolksInspectClientWaitForQuiescenceData* _data_;
	FolksInspectClient* _tmp0_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_ = g_slice_new0 (FolksInspectClientWaitForQuiescenceData);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_callback_ = _callback_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, _folks_inspect_client_wait_for_quiescence_async_ready_wrapper, _user_data_);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	if (_callback_ == NULL) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_task_complete_ = TRUE;
#line 1518 "inspect.c"
	}
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_task_set_task_data (_data_->_async_result, _data_, _folks_inspect_client_wait_for_quiescence_data_free);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->self = _tmp0_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_client_wait_for_quiescence_co (_data_);
#line 1528 "inspect.c"
}


static void
_folks_inspect_client_wait_for_quiescence_finish (FolksInspectClient* self,
                                                  GAsyncResult* _res_,
                                                  GError** error)
{
	FolksInspectClientWaitForQuiescenceData* _data_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	if (NULL == _data_) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 1544 "inspect.c"
	}
}


static Block2Data*
block2_data_ref (Block2Data* _data2_)
{
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	g_atomic_int_inc (&_data2_->_ref_count_);
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	return _data2_;
#line 1556 "inspect.c"
}


static void
block2_data_unref (void * _userdata_)
{
	Block2Data* _data2_;
	_data2_ = (Block2Data*) _userdata_;
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	if (g_atomic_int_dec_and_test (&_data2_->_ref_count_)) {
#line 1567 "inspect.c"
		FolksInspectClient* self;
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
		self = _data2_->self;
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
		_g_object_unref0 (self);
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
		g_slice_free (Block2Data, _data2_);
#line 1575 "inspect.c"
	}
}


static void
__lambda8_ (Block2Data* _data2_,
            GObject* obj,
            GParamSpec* pspec)
{
	FolksInspectClient* self;
	gboolean _tmp0_;
#line 193 "/run/build/folks/tools/inspect/inspect.vala"
	self = _data2_->self;
#line 193 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (obj != NULL);
#line 193 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (pspec != NULL);
#line 195 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = _data2_->has_yielded;
#line 195 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp0_ == TRUE) {
#line 197 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_client_wait_for_quiescence_co (_data2_->_async_data_);
#line 1599 "inspect.c"
	}
}


static void
___lambda8__g_object_notify (GObject* _sender,
                             GParamSpec* pspec,
                             gpointer self)
{
#line 192 "/run/build/folks/tools/inspect/inspect.vala"
	__lambda8_ (self, _sender, pspec);
#line 1611 "inspect.c"
}


static void
_folks_inspect_client_wait_for_quiescence_ready (GObject* source_object,
                                                 GAsyncResult* _res_,
                                                 gpointer _user_data_)
{
	FolksInspectClientWaitForQuiescenceData* _data_;
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
	_data_ = _user_data_;
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_source_object_ = source_object;
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_res_ = _res_;
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_task_complete_ = TRUE;
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_client_wait_for_quiescence_co (_data_);
#line 1631 "inspect.c"
}


static gboolean
_folks_inspect_client_wait_for_quiescence_co (FolksInspectClientWaitForQuiescenceData* _data_)
{
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	switch (_data_->_state_) {
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
		case 0:
#line 1642 "inspect.c"
		goto _state_0;
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
		case 1:
#line 1646 "inspect.c"
		goto _state_1;
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
		case 2:
#line 1650 "inspect.c"
		goto _state_2;
		default:
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
		g_assert_not_reached ();
#line 1655 "inspect.c"
	}
	_state_0:
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_data2_ = g_slice_new0 (Block2Data);
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_data2_->_ref_count_ = 1;
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_data2_->self = g_object_ref (_data_->self);
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_data2_->_async_data_ = _data_;
#line 191 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_data2_->has_yielded = FALSE;
#line 192 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp0_ = _data_->self->priv->_aggregator;
#line 192 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp1_ = g_signal_connect_data ((GObject*) _data_->_tmp0_, "notify::is-quiescent", (GCallback) ___lambda8__g_object_notify, block2_data_ref (_data_->_data2_), (GClosureNotify) block2_data_unref, 0);
#line 192 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->signal_id = _data_->_tmp1_;
#line 1674 "inspect.c"
	{
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp2_ = _data_->self->priv->_aggregator;
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_state_ = 1;
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
		folks_individual_aggregator_prepare (_data_->_tmp2_, _folks_inspect_client_wait_for_quiescence_ready, _data_);
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
		return FALSE;
#line 1684 "inspect.c"
		_state_1:
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
		folks_individual_aggregator_prepare_finish (_data_->_tmp2_, _data_->_res_, &_data_->_inner_error_);
#line 203 "/run/build/folks/tools/inspect/inspect.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 1690 "inspect.c"
			goto __finally5;
		}
#line 205 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp3_ = _data_->self->priv->_aggregator;
#line 205 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp4_ = folks_individual_aggregator_get_is_quiescent (_data_->_tmp3_);
#line 205 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp5_ = _data_->_tmp4_;
#line 205 "/run/build/folks/tools/inspect/inspect.vala"
		if (_data_->_tmp5_ == FALSE) {
#line 207 "/run/build/folks/tools/inspect/inspect.vala"
			_data_->_data2_->has_yielded = TRUE;
#line 208 "/run/build/folks/tools/inspect/inspect.vala"
			_data_->_state_ = 2;
#line 208 "/run/build/folks/tools/inspect/inspect.vala"
			return FALSE;
#line 1707 "inspect.c"
			_state_2:
			;
		}
	}
	__finally5:
	{
#line 213 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp6_ = _data_->self->priv->_aggregator;
#line 213 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp7_ = _data_->signal_id;
#line 213 "/run/build/folks/tools/inspect/inspect.vala"
		g_signal_handler_disconnect ((GObject*) _data_->_tmp6_, _data_->_tmp7_);
#line 214 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp8_ = _data_->self->priv->_aggregator;
#line 214 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp9_ = folks_individual_aggregator_get_is_quiescent (_data_->_tmp8_);
#line 214 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp10_ = _data_->_tmp9_;
#line 214 "/run/build/folks/tools/inspect/inspect.vala"
		_vala_assert (_data_->_tmp10_ == TRUE, "this.aggregator.is_quiescent == true");
#line 1728 "inspect.c"
	}
#line 201 "/run/build/folks/tools/inspect/inspect.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 201 "/run/build/folks/tools/inspect/inspect.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 201 "/run/build/folks/tools/inspect/inspect.vala"
		block2_data_unref (_data_->_data2_);
#line 201 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_data2_ = NULL;
#line 201 "/run/build/folks/tools/inspect/inspect.vala"
		g_object_unref (_data_->_async_result);
#line 201 "/run/build/folks/tools/inspect/inspect.vala"
		return FALSE;
#line 1742 "inspect.c"
	}
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	block2_data_unref (_data_->_data2_);
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_data2_ = NULL;
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	if (_data_->_state_ != 0) {
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1756 "inspect.c"
		}
	}
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	g_object_unref (_data_->_async_result);
#line 189 "/run/build/folks/tools/inspect/inspect.vala"
	return FALSE;
#line 1763 "inspect.c"
}


static void
folks_inspect_client_run_non_interactive_data_free (gpointer _data)
{
	FolksInspectClientRunNonInteractiveData* _data_;
	_data_ = _data;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_data_->command_line);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (_data_->self);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_slice_free (FolksInspectClientRunNonInteractiveData, _data_);
#line 1778 "inspect.c"
}


static void
folks_inspect_client_run_non_interactive_async_ready_wrapper (GObject *source_object,
                                                              GAsyncResult *res,
                                                              void *user_data)
{
	FolksInspectClientRunNonInteractiveData* _task_data_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	if (_task_data_->_callback_ != NULL) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 1794 "inspect.c"
	}
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_task_data_->_task_complete_ = TRUE;
#line 1798 "inspect.c"
}


void
folks_inspect_client_run_non_interactive (FolksInspectClient* self,
                                          const gchar* command_line,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_)
{
	FolksInspectClientRunNonInteractiveData* _data_;
	FolksInspectClient* _tmp0_;
	gchar* _tmp1_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_ = g_slice_new0 (FolksInspectClientRunNonInteractiveData);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_callback_ = _callback_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_inspect_client_run_non_interactive_async_ready_wrapper, _user_data_);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	if (_callback_ == NULL) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_task_complete_ = TRUE;
#line 1821 "inspect.c"
	}
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_inspect_client_run_non_interactive_data_free);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->self = _tmp0_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = g_strdup (command_line);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_data_->command_line);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->command_line = _tmp1_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_run_non_interactive_co (_data_);
#line 1837 "inspect.c"
}


gint
folks_inspect_client_run_non_interactive_finish (FolksInspectClient* self,
                                                 GAsyncResult* _res_)
{
	gint result;
	FolksInspectClientRunNonInteractiveData* _data_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	result = _data_->result;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 1853 "inspect.c"
}


static void
folks_inspect_client_run_non_interactive_ready (GObject* source_object,
                                                GAsyncResult* _res_,
                                                gpointer _user_data_)
{
	FolksInspectClientRunNonInteractiveData* _data_;
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
	_data_ = _user_data_;
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_source_object_ = source_object;
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_res_ = _res_;
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_task_complete_ = TRUE;
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_run_non_interactive_co (_data_);
#line 1873 "inspect.c"
}


static gboolean
folks_inspect_client_run_non_interactive_co (FolksInspectClientRunNonInteractiveData* _data_)
{
#line 218 "/run/build/folks/tools/inspect/inspect.vala"
	switch (_data_->_state_) {
#line 218 "/run/build/folks/tools/inspect/inspect.vala"
		case 0:
#line 1884 "inspect.c"
		goto _state_0;
#line 218 "/run/build/folks/tools/inspect/inspect.vala"
		case 1:
#line 1888 "inspect.c"
		goto _state_1;
#line 218 "/run/build/folks/tools/inspect/inspect.vala"
		case 2:
#line 1892 "inspect.c"
		goto _state_2;
		default:
#line 218 "/run/build/folks/tools/inspect/inspect.vala"
		g_assert_not_reached ();
#line 1897 "inspect.c"
	}
	_state_0:
#line 227 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp0_ = NULL;
#line 227 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp1_ = NULL;
#line 227 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp2_ = folks_inspect_client_parse_command_line (_data_->command_line, &_data_->_tmp0_, &_data_->_tmp1_);
#line 227 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_data_->command_name);
#line 227 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->command_name = _data_->_tmp0_;
#line 227 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_data_->subcommand);
#line 227 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->subcommand = _data_->_tmp1_;
#line 227 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->command = _data_->_tmp2_;
#line 230 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp3_ = _data_->command;
#line 230 "/run/build/folks/tools/inspect/inspect.vala"
	if (_data_->_tmp3_ == NULL) {
#line 232 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp4_ = stdout;
#line 232 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp5_ = _data_->command_name;
#line 232 "/run/build/folks/tools/inspect/inspect.vala"
		fprintf (_data_->_tmp4_, "Unrecognised command ‘%s’.\n", _data_->_tmp5_);
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->result = 1;
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_command_unref0 (_data_->command);
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_data_->command_name);
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_data_->subcommand);
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
		if (_data_->_state_ != 0) {
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1942 "inspect.c"
			}
		}
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
		g_object_unref (_data_->_async_result);
#line 233 "/run/build/folks/tools/inspect/inspect.vala"
		return FALSE;
#line 1949 "inspect.c"
	}
	{
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_state_ = 1;
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_client_wait_for_quiescence (_data_->self, folks_inspect_client_run_non_interactive_ready, _data_);
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
		return FALSE;
#line 1958 "inspect.c"
		_state_1:
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_client_wait_for_quiescence_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
#line 240 "/run/build/folks/tools/inspect/inspect.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 1964 "inspect.c"
			goto __catch6_g_error;
		}
	}
	goto __finally6;
	__catch6_g_error:
	{
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->e1 = _data_->_inner_error_;
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_inner_error_ = NULL;
#line 244 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp6_ = stderr;
#line 244 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp7_ = _data_->e1;
#line 244 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_tmp8_ = _data_->_tmp7_->message;
#line 244 "/run/build/folks/tools/inspect/inspect.vala"
		fprintf (_data_->_tmp6_, "Error preparing aggregator: %s\n", _data_->_tmp8_);
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->result = 1;
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		_g_error_free0 (_data_->e1);
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_command_unref0 (_data_->command);
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_data_->command_name);
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_data_->subcommand);
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		if (_data_->_state_ != 0) {
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2001 "inspect.c"
			}
		}
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		g_object_unref (_data_->_async_result);
#line 245 "/run/build/folks/tools/inspect/inspect.vala"
		return FALSE;
#line 2008 "inspect.c"
	}
	__finally6:
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_command_unref0 (_data_->command);
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_data_->command_name);
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_data_->subcommand);
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		g_clear_error (&_data_->_inner_error_);
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		g_object_unref (_data_->_async_result);
#line 238 "/run/build/folks/tools/inspect/inspect.vala"
		return FALSE;
#line 2027 "inspect.c"
	}
#line 249 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp9_ = _data_->command;
#line 249 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp10_ = _data_->subcommand;
#line 249 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_state_ = 2;
#line 249 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_command_run (_data_->_tmp9_, _data_->_tmp10_, folks_inspect_client_run_non_interactive_ready, _data_);
#line 249 "/run/build/folks/tools/inspect/inspect.vala"
	return FALSE;
#line 2039 "inspect.c"
	_state_2:
#line 249 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->retval = folks_inspect_command_run_finish (_data_->_tmp9_, _data_->_res_);
#line 250 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_quit (_data_->self);
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->result = _data_->retval;
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (_data_->command);
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_data_->command_name);
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_data_->subcommand);
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
	if (_data_->_state_ != 0) {
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2061 "inspect.c"
		}
	}
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
	g_object_unref (_data_->_async_result);
#line 252 "/run/build/folks/tools/inspect/inspect.vala"
	return FALSE;
#line 2068 "inspect.c"
}


static void
folks_inspect_client_run_interactive_data_free (gpointer _data)
{
	FolksInspectClientRunInteractiveData* _data_;
	_data_ = _data;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (_data_->self);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_slice_free (FolksInspectClientRunInteractiveData, _data_);
#line 2081 "inspect.c"
}


static void
folks_inspect_client_run_interactive_async_ready_wrapper (GObject *source_object,
                                                          GAsyncResult *res,
                                                          void *user_data)
{
	FolksInspectClientRunInteractiveData* _task_data_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	if (_task_data_->_callback_ != NULL) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 2097 "inspect.c"
	}
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_task_data_->_task_complete_ = TRUE;
#line 2101 "inspect.c"
}


void
folks_inspect_client_run_interactive (FolksInspectClient* self,
                                      GAsyncReadyCallback _callback_,
                                      gpointer _user_data_)
{
	FolksInspectClientRunInteractiveData* _data_;
	FolksInspectClient* _tmp0_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_ = g_slice_new0 (FolksInspectClientRunInteractiveData);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_callback_ = _callback_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_inspect_client_run_interactive_async_ready_wrapper, _user_data_);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	if (_callback_ == NULL) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->_task_complete_ = TRUE;
#line 2122 "inspect.c"
	}
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_inspect_client_run_interactive_data_free);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->self = _tmp0_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_run_interactive_co (_data_);
#line 2132 "inspect.c"
}


gint
folks_inspect_client_run_interactive_finish (FolksInspectClient* self,
                                             GAsyncResult* _res_)
{
	gint result;
	FolksInspectClientRunInteractiveData* _data_;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	result = _data_->result;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 2148 "inspect.c"
}


static gboolean
__lambda5_ (FolksInspectClient* self)
{
	gboolean result = FALSE;
	gboolean _tmp0_;
	FILE* _tmp1_;
#line 276 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = folks_inspect_client__is_readline_installed;
#line 276 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp0_ == FALSE) {
#line 278 "/run/build/folks/tools/inspect/inspect.vala"
		result = TRUE;
#line 278 "/run/build/folks/tools/inspect/inspect.vala"
		return result;
#line 2166 "inspect.c"
	}
#line 282 "/run/build/folks/tools/inspect/inspect.vala"
	rl_free_line_state ();
#line 283 "/run/build/folks/tools/inspect/inspect.vala"
	rl_cleanup_after_signal ();
#line 284 "/run/build/folks/tools/inspect/inspect.vala"
	rl_reset_after_signal ();
#line 287 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = stdout;
#line 287 "/run/build/folks/tools/inspect/inspect.vala"
	fprintf (_tmp1_, "^C");
#line 288 "/run/build/folks/tools/inspect/inspect.vala"
	rl_crlf ();
#line 289 "/run/build/folks/tools/inspect/inspect.vala"
	rl_reset_line_state ();
#line 290 "/run/build/folks/tools/inspect/inspect.vala"
	rl_replace_line ("", 0);
#line 291 "/run/build/folks/tools/inspect/inspect.vala"
	rl_redisplay ();
#line 293 "/run/build/folks/tools/inspect/inspect.vala"
	result = TRUE;
#line 293 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 2190 "inspect.c"
}


static gboolean
___lambda5__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda5_ ((FolksInspectClient*) self);
#line 271 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 2201 "inspect.c"
}


static gchar**
_folks_inspect_client_completion_cb_rl_completion_func_t (const gchar* str,
                                                          gint a,
                                                          gint b)
{
	gchar** result;
	result = folks_inspect_client_completion_cb (str, a, b);
#line 299 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 2214 "inspect.c"
}


static gboolean
folks_inspect_client_run_interactive_co (FolksInspectClientRunInteractiveData* _data_)
{
#line 255 "/run/build/folks/tools/inspect/inspect.vala"
	switch (_data_->_state_) {
#line 255 "/run/build/folks/tools/inspect/inspect.vala"
		case 0:
#line 2225 "inspect.c"
		goto _state_0;
		default:
#line 255 "/run/build/folks/tools/inspect/inspect.vala"
		g_assert_not_reached ();
#line 2230 "inspect.c"
	}
	_state_0:
#line 264 "/run/build/folks/tools/inspect/inspect.vala"
	memset (&_data_->_tmp0_, 0, sizeof (struct termios));
#line 264 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp1_ = tcgetattr (STDIN_FILENO, &_data_->_tmp0_);
#line 264 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->self->priv->_original_termios_p = _data_->_tmp0_;
#line 264 "/run/build/folks/tools/inspect/inspect.vala"
	if (_data_->_tmp1_ == 0) {
#line 266 "/run/build/folks/tools/inspect/inspect.vala"
		_data_->self->priv->_original_termios_p_valid = TRUE;
#line 2243 "inspect.c"
	}
#line 271 "/run/build/folks/tools/inspect/inspect.vala"
	g_unix_signal_add_full (G_PRIORITY_DEFAULT, (gint) SIGINT, ___lambda5__gsource_func, g_object_ref (_data_->self), g_object_unref);
#line 298 "/run/build/folks/tools/inspect/inspect.vala"
	rl_readline_name = "folks-inspect";
#line 299 "/run/build/folks/tools/inspect/inspect.vala"
	rl_attempted_completion_function = _folks_inspect_client_completion_cb_rl_completion_func_t;
#line 300 "/run/build/folks/tools/inspect/inspect.vala"
	rl_catch_signals = 0;
#line 303 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp2_ = stdin;
#line 303 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp3_ = g_io_channel_unix_new (fileno (_data_->_tmp2_));
#line 303 "/run/build/folks/tools/inspect/inspect.vala"
	_g_io_channel_unref0 (_data_->self->priv->_stdin_channel);
#line 303 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->self->priv->_stdin_channel = _data_->_tmp3_;
#line 304 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_client_install_readline_and_stdin (_data_->self);
#line 307 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->_tmp4_ = _data_->self->priv->_aggregator;
#line 307 "/run/build/folks/tools/inspect/inspect.vala"
	folks_individual_aggregator_prepare (_data_->_tmp4_, NULL, NULL);
#line 309 "/run/build/folks/tools/inspect/inspect.vala"
	_data_->result = 0;
#line 309 "/run/build/folks/tools/inspect/inspect.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 309 "/run/build/folks/tools/inspect/inspect.vala"
	if (_data_->_state_ != 0) {
#line 309 "/run/build/folks/tools/inspect/inspect.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 309 "/run/build/folks/tools/inspect/inspect.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2277 "inspect.c"
		}
	}
#line 309 "/run/build/folks/tools/inspect/inspect.vala"
	g_object_unref (_data_->_async_result);
#line 309 "/run/build/folks/tools/inspect/inspect.vala"
	return FALSE;
#line 2284 "inspect.c"
}


static gboolean
__folks_inspect_client_stdin_handler_cb_gio_func (GIOChannel* source,
                                                  GIOCondition condition,
                                                  gpointer self)
{
	gboolean result;
	result = _folks_inspect_client_stdin_handler_cb ((FolksInspectClient*) self, source, condition);
#line 315 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 2297 "inspect.c"
}


static void
__folks_inspect_client_readline_handler_cb_rl_vcpfunc_t (const gchar* s)
{
#line 319 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_client_readline_handler_cb (s);
#line 2306 "inspect.c"
}


static void
_folks_inspect_client_install_readline_and_stdin (FolksInspectClient* self)
{
	GIOChannel* _tmp0_;
#line 312 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (self != NULL);
#line 315 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = self->priv->_stdin_channel;
#line 315 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client__stdin_watch_id = g_io_add_watch (_tmp0_, G_IO_IN, __folks_inspect_client_stdin_handler_cb_gio_func, self);
#line 319 "/run/build/folks/tools/inspect/inspect.vala"
	rl_callback_handler_install ("> ", __folks_inspect_client_readline_handler_cb_rl_vcpfunc_t);
#line 320 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client__is_readline_installed = TRUE;
#line 2324 "inspect.c"
}


static void
_folks_inspect_client_uninstall_readline_and_stdin (FolksInspectClient* self)
{
	guint _tmp0_;
#line 323 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (self != NULL);
#line 325 "/run/build/folks/tools/inspect/inspect.vala"
	rl_callback_handler_remove ();
#line 326 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client__is_readline_installed = FALSE;
#line 328 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = folks_inspect_client__stdin_watch_id;
#line 328 "/run/build/folks/tools/inspect/inspect.vala"
	g_source_remove (_tmp0_);
#line 329 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client__stdin_watch_id = (guint) 0;
#line 2344 "inspect.c"
}


static gboolean
_folks_inspect_client_stdin_handler_cb (FolksInspectClient* self,
                                        GIOChannel* source,
                                        GIOCondition cond)
{
	gboolean result = FALSE;
#line 333 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 333 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (source != NULL, FALSE);
#line 337 "/run/build/folks/tools/inspect/inspect.vala"
	if ((cond & G_IO_IN) != 0) {
#line 339 "/run/build/folks/tools/inspect/inspect.vala"
		rl_callback_read_char ();
#line 340 "/run/build/folks/tools/inspect/inspect.vala"
		result = TRUE;
#line 340 "/run/build/folks/tools/inspect/inspect.vala"
		return result;
#line 2366 "inspect.c"
	}
#line 343 "/run/build/folks/tools/inspect/inspect.vala"
	g_assert_not_reached ();
#line 2370 "inspect.c"
}


static Block3Data*
block3_data_ref (Block3Data* _data3_)
{
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	g_atomic_int_inc (&_data3_->_ref_count_);
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	return _data3_;
#line 2381 "inspect.c"
}


static void
block3_data_unref (void * _userdata_)
{
	Block3Data* _data3_;
	_data3_ = (Block3Data*) _userdata_;
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	if (g_atomic_int_dec_and_test (&_data3_->_ref_count_)) {
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_command_unref0 (_data3_->command);
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
		g_slice_free (Block3Data, _data3_);
#line 2396 "inspect.c"
	}
}


static gchar*
string_strip (const gchar* self)
{
	gchar* result = NULL;
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
#line 1304 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1305 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1305 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1306 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = _result_;
#line 1306 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_strstrip (_tmp1_);
#line 1307 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _result_;
#line 1307 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 2422 "inspect.c"
}


static void
___lambda7_ (Block3Data* _data3_,
             GObject* obj,
             GAsyncResult* res)
{
	FolksInspectCommand* _tmp0_;
	FolksInspectClient* _tmp1_;
	FILE* _tmp2_;
#line 388 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (res != NULL);
#line 390 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = _data3_->command;
#line 390 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_command_run_finish (_tmp0_, res);
#line 392 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = main_client;
#line 392 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp2_ = _tmp1_->priv->_pager_channel;
#line 392 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp2_ != NULL) {
#line 2446 "inspect.c"
		FolksInspectClient* _tmp3_;
		FILE* _tmp4_;
#line 396 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp3_ = main_client;
#line 396 "/run/build/folks/tools/inspect/inspect.vala"
		_fclose0 (_tmp3_->priv->_pager_channel);
#line 396 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp3_->priv->_pager_channel = NULL;
#line 397 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp4_ = stdout;
#line 397 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_utils_output_filestream = _tmp4_;
#line 2459 "inspect.c"
	} else {
#line 402 "/run/build/folks/tools/inspect/inspect.vala"
		rl_reset_line_state ();
#line 403 "/run/build/folks/tools/inspect/inspect.vala"
		rl_replace_line ("", 0);
#line 404 "/run/build/folks/tools/inspect/inspect.vala"
		rl_redisplay ();
#line 2467 "inspect.c"
	}
}


static void
____lambda7__gasync_ready_callback (GObject* source_object,
                                    GAsyncResult* res,
                                    gpointer self)
{
#line 388 "/run/build/folks/tools/inspect/inspect.vala"
	___lambda7_ (self, source_object, res);
#line 388 "/run/build/folks/tools/inspect/inspect.vala"
	block3_data_unref (self);
#line 2481 "inspect.c"
}


static void
_folks_inspect_client_readline_handler_cb (const gchar* _command_line)
{
	Block3Data* _data3_;
	gchar* command_line = NULL;
	gchar* _tmp2_;
	const gchar* _tmp3_;
	gchar* _tmp4_;
	const gchar* _tmp5_;
	gchar* subcommand = NULL;
	gchar* command_name = NULL;
	const gchar* _tmp6_;
	gchar* _tmp7_ = NULL;
	gchar* _tmp8_ = NULL;
	FolksInspectCommand* _tmp9_;
	FolksInspectCommand* _tmp10_;
	const gchar* _tmp17_;
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	_data3_ = g_slice_new0 (Block3Data);
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	_data3_->_ref_count_ = 1;
#line 348 "/run/build/folks/tools/inspect/inspect.vala"
	if (_command_line == NULL) {
#line 2508 "inspect.c"
		const gchar* _tmp0_;
		FolksInspectClient* _tmp1_;
#line 352 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp0_ = rl_line_buffer;
#line 352 "/run/build/folks/tools/inspect/inspect.vala"
		if (g_strcmp0 (_tmp0_, "") != 0) {
#line 354 "/run/build/folks/tools/inspect/inspect.vala"
			rl_ding ();
#line 355 "/run/build/folks/tools/inspect/inspect.vala"
			block3_data_unref (_data3_);
#line 355 "/run/build/folks/tools/inspect/inspect.vala"
			_data3_ = NULL;
#line 355 "/run/build/folks/tools/inspect/inspect.vala"
			return;
#line 2523 "inspect.c"
		}
#line 359 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp1_ = main_client;
#line 359 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client_quit (_tmp1_);
#line 361 "/run/build/folks/tools/inspect/inspect.vala"
		block3_data_unref (_data3_);
#line 361 "/run/build/folks/tools/inspect/inspect.vala"
		_data3_ = NULL;
#line 361 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2535 "inspect.c"
	}
#line 364 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp2_ = g_strdup ((const gchar*) _command_line);
#line 364 "/run/build/folks/tools/inspect/inspect.vala"
	command_line = _tmp2_;
#line 366 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp3_ = command_line;
#line 366 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp4_ = string_strip (_tmp3_);
#line 366 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (command_line);
#line 366 "/run/build/folks/tools/inspect/inspect.vala"
	command_line = _tmp4_;
#line 367 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp5_ = command_line;
#line 367 "/run/build/folks/tools/inspect/inspect.vala"
	if (g_strcmp0 (_tmp5_, "") == 0) {
#line 371 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (command_line);
#line 371 "/run/build/folks/tools/inspect/inspect.vala"
		block3_data_unref (_data3_);
#line 371 "/run/build/folks/tools/inspect/inspect.vala"
		_data3_ = NULL;
#line 371 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2561 "inspect.c"
	}
#line 376 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp6_ = command_line;
#line 376 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp9_ = folks_inspect_client_parse_command_line (_tmp6_, &_tmp7_, &_tmp8_);
#line 376 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (command_name);
#line 376 "/run/build/folks/tools/inspect/inspect.vala"
	command_name = _tmp7_;
#line 376 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (subcommand);
#line 376 "/run/build/folks/tools/inspect/inspect.vala"
	subcommand = _tmp8_;
#line 376 "/run/build/folks/tools/inspect/inspect.vala"
	_data3_->command = _tmp9_;
#line 380 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp10_ = _data3_->command;
#line 380 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp10_ != NULL) {
#line 2581 "inspect.c"
		const gchar* _tmp11_;
		FolksInspectCommand* _tmp13_;
		const gchar* _tmp14_;
#line 382 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp11_ = command_name;
#line 382 "/run/build/folks/tools/inspect/inspect.vala"
		if (g_strcmp0 (_tmp11_, "quit") != 0) {
#line 2589 "inspect.c"
			FolksInspectClient* _tmp12_;
#line 385 "/run/build/folks/tools/inspect/inspect.vala"
			_tmp12_ = main_client;
#line 385 "/run/build/folks/tools/inspect/inspect.vala"
			_folks_inspect_client_start_paged_output (_tmp12_);
#line 2595 "inspect.c"
		}
#line 388 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp13_ = _data3_->command;
#line 388 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp14_ = subcommand;
#line 388 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_command_run (_tmp13_, _tmp14_, ____lambda7__gasync_ready_callback, block3_data_ref (_data3_));
#line 2603 "inspect.c"
	} else {
		FILE* _tmp15_;
		const gchar* _tmp16_;
#line 411 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp15_ = stdout;
#line 411 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp16_ = command_name;
#line 411 "/run/build/folks/tools/inspect/inspect.vala"
		fprintf (_tmp15_, "Unrecognised command ‘%s’.\n", _tmp16_);
#line 2613 "inspect.c"
	}
#line 415 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp17_ = command_line;
#line 415 "/run/build/folks/tools/inspect/inspect.vala"
	add_history (_tmp17_);
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (command_name);
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (subcommand);
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (command_line);
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	block3_data_unref (_data3_);
#line 346 "/run/build/folks/tools/inspect/inspect.vala"
	_data3_ = NULL;
#line 2629 "inspect.c"
}


static void
__lambda6_ (FolksInspectClient* self,
            GPid pid,
            gint status)
{
	gboolean _tmp0_;
#line 493 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_client_stop_paged_output (self);
#line 500 "/run/build/folks/tools/inspect/inspect.vala"
	if (WIFSIGNALED (status)) {
#line 502 "/run/build/folks/tools/inspect/inspect.vala"
		rl_crlf ();
#line 2645 "inspect.c"
	}
#line 505 "/run/build/folks/tools/inspect/inspect.vala"
	rl_reset_line_state ();
#line 506 "/run/build/folks/tools/inspect/inspect.vala"
	rl_replace_line ("", 0);
#line 509 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = self->priv->_quit_after_pager_dies;
#line 509 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp0_) {
#line 2655 "inspect.c"
		FolksInspectClient* _tmp1_;
#line 511 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp1_ = main_client;
#line 511 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client_quit (_tmp1_);
#line 512 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2663 "inspect.c"
	}
#line 516 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_client_install_readline_and_stdin (self);
#line 2667 "inspect.c"
}


static void
___lambda6__gchild_watch_func (GPid pid,
                               gint status,
                               gpointer self)
{
#line 489 "/run/build/folks/tools/inspect/inspect.vala"
	__lambda6_ ((FolksInspectClient*) self, pid, status);
#line 2678 "inspect.c"
}


static void
_folks_inspect_client_start_paged_output (FolksInspectClient* self)
{
	gchar* pager = NULL;
	const gchar* _tmp0_;
	gchar* _tmp1_;
	gboolean _tmp2_ = FALSE;
	const gchar* _tmp3_;
	const gchar* _tmp5_;
	gchar** args = NULL;
	gint args_length1 = 0;
	gint _args_size_ = 0;
	gint pager_fd = 0;
	gint _tmp17_;
	FILE* _tmp18_;
	FILE* _tmp19_;
	GPid _tmp20_;
	GError * _inner_error_ = NULL;
#line 418 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (self != NULL);
#line 422 "/run/build/folks/tools/inspect/inspect.vala"
	if (!isatty (1)) {
#line 424 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2706 "inspect.c"
	}
#line 427 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = g_getenv ("PAGER");
#line 427 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 427 "/run/build/folks/tools/inspect/inspect.vala"
	pager = _tmp1_;
#line 428 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp3_ = pager;
#line 428 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp3_ != NULL) {
#line 2718 "inspect.c"
		const gchar* _tmp4_;
#line 428 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp4_ = pager;
#line 428 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp2_ = g_strcmp0 (_tmp4_, "") == 0;
#line 2724 "inspect.c"
	} else {
#line 428 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp2_ = FALSE;
#line 2728 "inspect.c"
	}
#line 428 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp2_) {
#line 430 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (pager);
#line 430 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2736 "inspect.c"
	}
#line 433 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp5_ = pager;
#line 433 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp5_ == NULL) {
#line 2742 "inspect.c"
		gchar* _tmp6_;
#line 435 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp6_ = g_strdup ("less -FRSX");
#line 435 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (pager);
#line 435 "/run/build/folks/tools/inspect/inspect.vala"
		pager = _tmp6_;
#line 2750 "inspect.c"
	}
	{
		const gchar* _tmp7_;
		gchar** _tmp8_ = NULL;
		gint _tmp9_;
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp7_ = pager;
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
		g_shell_parse_argv (_tmp7_, &_tmp9_, &_tmp8_, &_inner_error_);
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
		args = (_vala_array_free (args, args_length1, (GDestroyNotify) g_free), NULL);
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
		args = _tmp8_;
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
		args_length1 = _tmp9_;
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
		_args_size_ = args_length1;
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
			if (_inner_error_->domain == G_SHELL_ERROR) {
#line 2772 "inspect.c"
				goto __catch7_g_shell_error;
			}
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
			args = (_vala_array_free (args, args_length1, (GDestroyNotify) g_free), NULL);
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
			_g_free0 (pager);
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
			g_clear_error (&_inner_error_);
#line 442 "/run/build/folks/tools/inspect/inspect.vala"
			return;
#line 2785 "inspect.c"
		}
	}
	goto __finally7;
	__catch7_g_shell_error:
	{
		GError* e = NULL;
		GError* _tmp10_;
		const gchar* _tmp11_;
#line 440 "/run/build/folks/tools/inspect/inspect.vala"
		e = _inner_error_;
#line 440 "/run/build/folks/tools/inspect/inspect.vala"
		_inner_error_ = NULL;
#line 446 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp10_ = e;
#line 446 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp11_ = _tmp10_->message;
#line 446 "/run/build/folks/tools/inspect/inspect.vala"
		g_warning ("inspect.vala:446: Error parsing pager arguments: %s", _tmp11_);
#line 447 "/run/build/folks/tools/inspect/inspect.vala"
		_g_error_free0 (e);
#line 447 "/run/build/folks/tools/inspect/inspect.vala"
		args = (_vala_array_free (args, args_length1, (GDestroyNotify) g_free), NULL);
#line 447 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (pager);
#line 447 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2812 "inspect.c"
	}
	__finally7:
#line 440 "/run/build/folks/tools/inspect/inspect.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 440 "/run/build/folks/tools/inspect/inspect.vala"
		args = (_vala_array_free (args, args_length1, (GDestroyNotify) g_free), NULL);
#line 440 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (pager);
#line 440 "/run/build/folks/tools/inspect/inspect.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 440 "/run/build/folks/tools/inspect/inspect.vala"
		g_clear_error (&_inner_error_);
#line 440 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2827 "inspect.c"
	}
#line 451 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_client_uninstall_readline_and_stdin (self);
#line 455 "/run/build/folks/tools/inspect/inspect.vala"
	rl_prep_terminal (1);
#line 458 "/run/build/folks/tools/inspect/inspect.vala"
	pager_fd = 0;
#line 2835 "inspect.c"
	{
		gchar** _tmp12_;
		gint _tmp12__length1;
		GPid _tmp13_ = 0;
		gint _tmp14_ = 0;
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp12_ = args;
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp12__length1 = args_length1;
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
		g_spawn_async_with_pipes (NULL, _tmp12_, NULL, (G_SPAWN_LEAVE_DESCRIPTORS_OPEN | G_SPAWN_SEARCH_PATH) | G_SPAWN_DO_NOT_REAP_CHILD, NULL, NULL, &_tmp13_, &_tmp14_, NULL, NULL, &_inner_error_);
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client__pager_pid = _tmp13_;
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
		pager_fd = _tmp14_;
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
			if (_inner_error_->domain == G_SPAWN_ERROR) {
#line 2855 "inspect.c"
				goto __catch8_g_spawn_error;
			}
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
			args = (_vala_array_free (args, args_length1, (GDestroyNotify) g_free), NULL);
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
			_g_free0 (pager);
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
			g_clear_error (&_inner_error_);
#line 462 "/run/build/folks/tools/inspect/inspect.vala"
			return;
#line 2868 "inspect.c"
		}
	}
	goto __finally8;
	__catch8_g_spawn_error:
	{
		GError* e2 = NULL;
		GError* _tmp15_;
		const gchar* _tmp16_;
#line 460 "/run/build/folks/tools/inspect/inspect.vala"
		e2 = _inner_error_;
#line 460 "/run/build/folks/tools/inspect/inspect.vala"
		_inner_error_ = NULL;
#line 476 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp15_ = e2;
#line 476 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp16_ = _tmp15_->message;
#line 476 "/run/build/folks/tools/inspect/inspect.vala"
		g_warning ("inspect.vala:476: Error spawning pager: %s", _tmp16_);
#line 479 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_client_install_readline_and_stdin (self);
#line 481 "/run/build/folks/tools/inspect/inspect.vala"
		_g_error_free0 (e2);
#line 481 "/run/build/folks/tools/inspect/inspect.vala"
		args = (_vala_array_free (args, args_length1, (GDestroyNotify) g_free), NULL);
#line 481 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (pager);
#line 481 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2897 "inspect.c"
	}
	__finally8:
#line 460 "/run/build/folks/tools/inspect/inspect.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 460 "/run/build/folks/tools/inspect/inspect.vala"
		args = (_vala_array_free (args, args_length1, (GDestroyNotify) g_free), NULL);
#line 460 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (pager);
#line 460 "/run/build/folks/tools/inspect/inspect.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 460 "/run/build/folks/tools/inspect/inspect.vala"
		g_clear_error (&_inner_error_);
#line 460 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2912 "inspect.c"
	}
#line 485 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp17_ = pager_fd;
#line 485 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp18_ = fdopen (_tmp17_, "w");
#line 485 "/run/build/folks/tools/inspect/inspect.vala"
	_fclose0 (self->priv->_pager_channel);
#line 485 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_pager_channel = _tmp18_;
#line 486 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp19_ = self->priv->_pager_channel;
#line 486 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_utils_output_filestream = _tmp19_;
#line 489 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp20_ = folks_inspect_client__pager_pid;
#line 489 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_pager_child_watch_id = g_child_watch_add_full (G_PRIORITY_DEFAULT_IDLE, _tmp20_, ___lambda6__gchild_watch_func, g_object_ref (self), g_object_unref);
#line 418 "/run/build/folks/tools/inspect/inspect.vala"
	args = (_vala_array_free (args, args_length1, (GDestroyNotify) g_free), NULL);
#line 418 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (pager);
#line 2934 "inspect.c"
}


static void
_folks_inspect_client_stop_paged_output (FolksInspectClient* self)
{
	GPid _tmp0_;
	GPid _tmp1_;
	guint _tmp2_;
	FILE* _tmp3_;
#line 520 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (self != NULL);
#line 522 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = folks_inspect_client__pager_pid;
#line 522 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp0_ == ((GPid) 0)) {
#line 524 "/run/build/folks/tools/inspect/inspect.vala"
		return;
#line 2953 "inspect.c"
	}
#line 527 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp1_ = folks_inspect_client__pager_pid;
#line 527 "/run/build/folks/tools/inspect/inspect.vala"
	g_spawn_close_pid (_tmp1_);
#line 528 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp2_ = self->priv->_pager_child_watch_id;
#line 528 "/run/build/folks/tools/inspect/inspect.vala"
	g_source_remove (_tmp2_);
#line 530 "/run/build/folks/tools/inspect/inspect.vala"
	_fclose0 (self->priv->_pager_channel);
#line 530 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_pager_channel = NULL;
#line 531 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp3_ = stdout;
#line 531 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_utils_output_filestream = _tmp3_;
#line 532 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client__pager_pid = (GPid) 0;
#line 533 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_pager_child_watch_id = (guint) 0;
#line 537 "/run/build/folks/tools/inspect/inspect.vala"
	rl_deprep_terminal ();
#line 538 "/run/build/folks/tools/inspect/inspect.vala"
	rl_free_line_state ();
#line 539 "/run/build/folks/tools/inspect/inspect.vala"
	rl_cleanup_after_signal ();
#line 540 "/run/build/folks/tools/inspect/inspect.vala"
	rl_reset_after_signal ();
#line 2983 "inspect.c"
}


static FolksInspectCommand*
folks_inspect_client_parse_command_line (const gchar* command_line,
                                         gchar* * command_name,
                                         gchar* * subcommand)
{
	gchar* _vala_command_name = NULL;
	gchar* _vala_subcommand = NULL;
	FolksInspectCommand* result = NULL;
	gchar* _tmp0_;
	gchar** parts = NULL;
	gchar** _tmp1_;
	gchar** _tmp2_;
	gint parts_length1;
	gint _parts_size_;
	gchar** _tmp3_;
	gint _tmp3__length1;
	gchar** _tmp4_;
	gint _tmp4__length1;
	const gchar* _tmp5_;
	gchar* _tmp6_;
	gboolean _tmp7_ = FALSE;
	gchar** _tmp8_;
	gint _tmp8__length1;
	FolksInspectClient* _tmp14_;
	GeeHashMap* _tmp15_;
	gchar** _tmp16_;
	gint _tmp16__length1;
	const gchar* _tmp17_;
	gpointer _tmp18_;
#line 543 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (command_line != NULL, NULL);
#line 548 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = g_strdup ("");
#line 548 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_vala_command_name);
#line 548 "/run/build/folks/tools/inspect/inspect.vala"
	_vala_command_name = _tmp0_;
#line 549 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_vala_subcommand);
#line 549 "/run/build/folks/tools/inspect/inspect.vala"
	_vala_subcommand = NULL;
#line 551 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp2_ = _tmp1_ = g_strsplit (command_line, " ", 2);
#line 551 "/run/build/folks/tools/inspect/inspect.vala"
	parts = _tmp2_;
#line 551 "/run/build/folks/tools/inspect/inspect.vala"
	parts_length1 = _vala_array_length (_tmp1_);
#line 551 "/run/build/folks/tools/inspect/inspect.vala"
	_parts_size_ = parts_length1;
#line 553 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp3_ = parts;
#line 553 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp3__length1 = parts_length1;
#line 553 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp3__length1 < 1) {
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
		result = NULL;
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
		parts = (_vala_array_free (parts, parts_length1, (GDestroyNotify) g_free), NULL);
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
		if (command_name) {
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
			*command_name = _vala_command_name;
#line 3050 "inspect.c"
		} else {
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
			_g_free0 (_vala_command_name);
#line 3054 "inspect.c"
		}
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
		if (subcommand) {
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
			*subcommand = _vala_subcommand;
#line 3060 "inspect.c"
		} else {
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
			_g_free0 (_vala_subcommand);
#line 3064 "inspect.c"
		}
#line 554 "/run/build/folks/tools/inspect/inspect.vala"
		return result;
#line 3068 "inspect.c"
	}
#line 556 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp4_ = parts;
#line 556 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp4__length1 = parts_length1;
#line 556 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp5_ = _tmp4_[0];
#line 556 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp6_ = g_strdup (_tmp5_);
#line 556 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (_vala_command_name);
#line 556 "/run/build/folks/tools/inspect/inspect.vala"
	_vala_command_name = _tmp6_;
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp8_ = parts;
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp8__length1 = parts_length1;
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp8__length1 == 2) {
#line 3088 "inspect.c"
		gchar** _tmp9_;
		gint _tmp9__length1;
		const gchar* _tmp10_;
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp9_ = parts;
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp9__length1 = parts_length1;
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp10_ = _tmp9_[1];
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp7_ = g_strcmp0 (_tmp10_, "") != 0;
#line 3100 "inspect.c"
	} else {
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp7_ = FALSE;
#line 3104 "inspect.c"
	}
#line 557 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp7_) {
#line 3108 "inspect.c"
		gchar** _tmp11_;
		gint _tmp11__length1;
		const gchar* _tmp12_;
		gchar* _tmp13_;
#line 558 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp11_ = parts;
#line 558 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp11__length1 = parts_length1;
#line 558 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp12_ = _tmp11_[1];
#line 558 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp13_ = g_strdup (_tmp12_);
#line 558 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_vala_subcommand);
#line 558 "/run/build/folks/tools/inspect/inspect.vala"
		_vala_subcommand = _tmp13_;
#line 3125 "inspect.c"
	} else {
#line 560 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_vala_subcommand);
#line 560 "/run/build/folks/tools/inspect/inspect.vala"
		_vala_subcommand = NULL;
#line 3131 "inspect.c"
	}
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp14_ = main_client;
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp15_ = _tmp14_->commands;
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp16_ = parts;
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp16__length1 = parts_length1;
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp17_ = _tmp16_[0];
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp18_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp15_, _tmp17_);
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	result = (FolksInspectCommand*) _tmp18_;
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	parts = (_vala_array_free (parts, parts_length1, (GDestroyNotify) g_free), NULL);
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	if (command_name) {
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
		*command_name = _vala_command_name;
#line 3153 "inspect.c"
	} else {
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_vala_command_name);
#line 3157 "inspect.c"
	}
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	if (subcommand) {
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
		*subcommand = _vala_subcommand;
#line 3163 "inspect.c"
	} else {
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (_vala_subcommand);
#line 3167 "inspect.c"
	}
#line 564 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 3171 "inspect.c"
}


static gchar*
_folks_inspect_utils_command_name_completion_cb_rl_compentry_func_t (const gchar* str,
                                                                     gint a)
{
	gchar* result;
	result = folks_inspect_utils_command_name_completion_cb (str, a);
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 3183 "inspect.c"
}


static gchar**
_vala_array_dup15 (gchar** self,
                   int length)
{
	gchar** result;
	int i;
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
	result = g_new0 (gchar*, length + 1);
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
	for (i = 0; i < length; i++) {
#line 3197 "inspect.c"
		gchar* _tmp0_;
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp0_ = g_strdup (self[i]);
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
		result[i] = _tmp0_;
#line 3203 "inspect.c"
	}
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 3207 "inspect.c"
}


static gchar**
folks_inspect_client_completion_cb (const gchar* word,
                                    gint start,
                                    gint end)
{
	gchar** result = NULL;
	gchar* command_name = NULL;
	gchar* subcommand = NULL;
	FolksInspectCommand* command = NULL;
	const gchar* _tmp3_;
	gchar* _tmp4_ = NULL;
	gchar* _tmp5_ = NULL;
	FolksInspectCommand* _tmp6_;
	FolksInspectCommand* _tmp7_;
#line 568 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (word != NULL, NULL);
#line 576 "/run/build/folks/tools/inspect/inspect.vala"
	if (start == 0) {
#line 3229 "inspect.c"
		gchar** _tmp0_;
		gchar** _tmp1_;
		gchar** _tmp2_;
		gint _tmp2__length1;
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp1_ = _tmp0_ = rl_completion_matches (word, _folks_inspect_utils_command_name_completion_cb_rl_compentry_func_t);
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp2_ = (_tmp1_ != NULL) ? _vala_array_dup15 (_tmp1_, _vala_array_length (_tmp0_)) : ((gpointer) _tmp1_);
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp2__length1 = _vala_array_length (_tmp0_);
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
		result = _tmp2_;
#line 578 "/run/build/folks/tools/inspect/inspect.vala"
		return result;
#line 3244 "inspect.c"
	}
#line 585 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp3_ = rl_line_buffer;
#line 585 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp6_ = folks_inspect_client_parse_command_line (_tmp3_, &_tmp4_, &_tmp5_);
#line 585 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (command_name);
#line 585 "/run/build/folks/tools/inspect/inspect.vala"
	command_name = _tmp4_;
#line 585 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (subcommand);
#line 585 "/run/build/folks/tools/inspect/inspect.vala"
	subcommand = _tmp5_;
#line 585 "/run/build/folks/tools/inspect/inspect.vala"
	command = _tmp6_;
#line 589 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp7_ = command;
#line 589 "/run/build/folks/tools/inspect/inspect.vala"
	if (_tmp7_ != NULL) {
#line 3264 "inspect.c"
		const gchar* _tmp8_;
		FolksInspectCommand* _tmp10_;
		const gchar* _tmp11_;
		gint _tmp12_ = 0;
		gchar** _tmp13_;
#line 591 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp8_ = subcommand;
#line 591 "/run/build/folks/tools/inspect/inspect.vala"
		if (_tmp8_ == NULL) {
#line 3274 "inspect.c"
			gchar* _tmp9_;
#line 592 "/run/build/folks/tools/inspect/inspect.vala"
			_tmp9_ = g_strdup ("");
#line 592 "/run/build/folks/tools/inspect/inspect.vala"
			_g_free0 (subcommand);
#line 592 "/run/build/folks/tools/inspect/inspect.vala"
			subcommand = _tmp9_;
#line 3282 "inspect.c"
		}
#line 593 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp10_ = command;
#line 593 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp11_ = subcommand;
#line 593 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp13_ = folks_inspect_command_complete_subcommand (_tmp10_, _tmp11_, &_tmp12_);
#line 593 "/run/build/folks/tools/inspect/inspect.vala"
		result = _tmp13_;
#line 593 "/run/build/folks/tools/inspect/inspect.vala"
		_folks_inspect_command_unref0 (command);
#line 593 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (subcommand);
#line 593 "/run/build/folks/tools/inspect/inspect.vala"
		_g_free0 (command_name);
#line 593 "/run/build/folks/tools/inspect/inspect.vala"
		return result;
#line 3300 "inspect.c"
	}
#line 596 "/run/build/folks/tools/inspect/inspect.vala"
	result = NULL;
#line 596 "/run/build/folks/tools/inspect/inspect.vala"
	_folks_inspect_command_unref0 (command);
#line 596 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (subcommand);
#line 596 "/run/build/folks/tools/inspect/inspect.vala"
	_g_free0 (command_name);
#line 596 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 3312 "inspect.c"
}


FolksIndividualAggregator*
folks_inspect_client_get_aggregator (FolksInspectClient* self)
{
	FolksIndividualAggregator* result;
	FolksIndividualAggregator* _tmp0_;
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = self->priv->_aggregator;
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
	result = _tmp0_;
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 3329 "inspect.c"
}


static void
folks_inspect_client_set_aggregator (FolksInspectClient* self,
                                     FolksIndividualAggregator* value)
{
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (self != NULL);
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
	if (folks_inspect_client_get_aggregator (self) != value) {
#line 3341 "inspect.c"
		FolksIndividualAggregator* _tmp0_;
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
		_g_object_unref0 (self->priv->_aggregator);
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
		self->priv->_aggregator = _tmp0_;
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_inspect_client_properties[FOLKS_INSPECT_CLIENT_AGGREGATOR_PROPERTY]);
#line 3351 "inspect.c"
	}
}


FolksBackendStore*
folks_inspect_client_get_backend_store (FolksInspectClient* self)
{
	FolksBackendStore* result;
	FolksBackendStore* _tmp0_;
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = self->priv->_backend_store;
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
	result = _tmp0_;
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 3369 "inspect.c"
}


static void
folks_inspect_client_set_backend_store (FolksInspectClient* self,
                                        FolksBackendStore* value)
{
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (self != NULL);
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
	if (folks_inspect_client_get_backend_store (self) != value) {
#line 3381 "inspect.c"
		FolksBackendStore* _tmp0_;
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
		_g_object_unref0 (self->priv->_backend_store);
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
		self->priv->_backend_store = _tmp0_;
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_inspect_client_properties[FOLKS_INSPECT_CLIENT_BACKEND_STORE_PROPERTY]);
#line 3391 "inspect.c"
	}
}


FolksInspectSignalManager*
folks_inspect_client_get_signal_manager (FolksInspectClient* self)
{
	FolksInspectSignalManager* result;
	FolksInspectSignalManager* _tmp0_;
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = self->priv->_signal_manager;
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
	result = _tmp0_;
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 3409 "inspect.c"
}


static void
folks_inspect_client_set_signal_manager (FolksInspectClient* self,
                                         FolksInspectSignalManager* value)
{
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (self != NULL);
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
	if (folks_inspect_client_get_signal_manager (self) != value) {
#line 3421 "inspect.c"
		FolksInspectSignalManager* _tmp0_;
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
		_g_object_unref0 (self->priv->_signal_manager);
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
		self->priv->_signal_manager = _tmp0_;
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_inspect_client_properties[FOLKS_INSPECT_CLIENT_SIGNAL_MANAGER_PROPERTY]);
#line 3431 "inspect.c"
	}
}


static void
folks_inspect_client_class_init (FolksInspectClientClass * klass)
{
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_client_parent_class = g_type_class_peek_parent (klass);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_type_class_add_private (klass, sizeof (FolksInspectClientPrivate));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_folks_inspect_client_get_property;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_folks_inspect_client_set_property;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	G_OBJECT_CLASS (klass)->finalize = folks_inspect_client_finalize;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INSPECT_CLIENT_AGGREGATOR_PROPERTY, folks_inspect_client_properties[FOLKS_INSPECT_CLIENT_AGGREGATOR_PROPERTY] = g_param_spec_object ("aggregator", "aggregator", "aggregator", FOLKS_TYPE_INDIVIDUAL_AGGREGATOR, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INSPECT_CLIENT_BACKEND_STORE_PROPERTY, folks_inspect_client_properties[FOLKS_INSPECT_CLIENT_BACKEND_STORE_PROPERTY] = g_param_spec_object ("backend-store", "backend-store", "backend-store", FOLKS_TYPE_BACKEND_STORE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INSPECT_CLIENT_SIGNAL_MANAGER_PROPERTY, folks_inspect_client_properties[FOLKS_INSPECT_CLIENT_SIGNAL_MANAGER_PROPERTY] = g_param_spec_object ("signal-manager", "signal-manager", "signal-manager", FOLKS_INSPECT_TYPE_SIGNAL_MANAGER, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 3455 "inspect.c"
}


static void
folks_inspect_client_instance_init (FolksInspectClient * self)
{
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv = FOLKS_INSPECT_CLIENT_GET_PRIVATE (self);
#line 44 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_original_termios_p_valid = FALSE;
#line 45 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_quit_after_pager_dies = FALSE;
#line 47 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_stdin_channel = NULL;
#line 49 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_pager_channel = NULL;
#line 50 "/run/build/folks/tools/inspect/inspect.vala"
	self->priv->_pager_child_watch_id = (guint) 0;
#line 3474 "inspect.c"
}


static void
folks_inspect_client_finalize (GObject * obj)
{
	FolksInspectClient * self;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClient);
#line 35 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (self->commands);
#line 37 "/run/build/folks/tools/inspect/inspect.vala"
	_g_main_loop_unref0 (self->priv->main_loop);
#line 38 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (self->priv->_aggregator);
#line 39 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (self->priv->_backend_store);
#line 40 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (self->priv->_signal_manager);
#line 47 "/run/build/folks/tools/inspect/inspect.vala"
	_g_io_channel_unref0 (self->priv->_stdin_channel);
#line 49 "/run/build/folks/tools/inspect/inspect.vala"
	_fclose0 (self->priv->_pager_channel);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	G_OBJECT_CLASS (folks_inspect_client_parent_class)->finalize (obj);
#line 3500 "inspect.c"
}


GType
folks_inspect_client_get_type (void)
{
	static volatile gsize folks_inspect_client_type_id__volatile = 0;
	if (g_once_init_enter (&folks_inspect_client_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksInspectClientClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_inspect_client_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksInspectClient), 0, (GInstanceInitFunc) folks_inspect_client_instance_init, NULL };
		GType folks_inspect_client_type_id;
		folks_inspect_client_type_id = g_type_register_static (G_TYPE_OBJECT, "FolksInspectClient", &g_define_type_info, 0);
		g_once_init_leave (&folks_inspect_client_type_id__volatile, folks_inspect_client_type_id);
	}
	return folks_inspect_client_type_id__volatile;
}


static void
_vala_folks_inspect_client_get_property (GObject * object,
                                         guint property_id,
                                         GValue * value,
                                         GParamSpec * pspec)
{
	FolksInspectClient * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClient);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	switch (property_id) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		case FOLKS_INSPECT_CLIENT_AGGREGATOR_PROPERTY:
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		g_value_set_object (value, folks_inspect_client_get_aggregator (self));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		break;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		case FOLKS_INSPECT_CLIENT_BACKEND_STORE_PROPERTY:
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		g_value_set_object (value, folks_inspect_client_get_backend_store (self));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		break;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		case FOLKS_INSPECT_CLIENT_SIGNAL_MANAGER_PROPERTY:
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		g_value_set_object (value, folks_inspect_client_get_signal_manager (self));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		break;
#line 3546 "inspect.c"
		default:
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		break;
#line 3552 "inspect.c"
	}
}


static void
_vala_folks_inspect_client_set_property (GObject * object,
                                         guint property_id,
                                         const GValue * value,
                                         GParamSpec * pspec)
{
	FolksInspectClient * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClient);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
	switch (property_id) {
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		case FOLKS_INSPECT_CLIENT_AGGREGATOR_PROPERTY:
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client_set_aggregator (self, g_value_get_object (value));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		break;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		case FOLKS_INSPECT_CLIENT_BACKEND_STORE_PROPERTY:
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client_set_backend_store (self, g_value_get_object (value));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		break;
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		case FOLKS_INSPECT_CLIENT_SIGNAL_MANAGER_PROPERTY:
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_client_set_signal_manager (self, g_value_get_object (value));
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		break;
#line 3585 "inspect.c"
		default:
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 33 "/run/build/folks/tools/inspect/inspect.vala"
		break;
#line 3591 "inspect.c"
	}
}


FolksInspectCommand*
folks_inspect_command_construct (GType object_type,
                                 FolksInspectClient* client)
{
	FolksInspectCommand* self = NULL;
	FolksInspectClient* _tmp0_;
#line 604 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (client != NULL, NULL);
#line 604 "/run/build/folks/tools/inspect/inspect.vala"
	self = (FolksInspectCommand*) g_type_create_instance (object_type);
#line 606 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = _g_object_ref0 (client);
#line 606 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (self->client);
#line 606 "/run/build/folks/tools/inspect/inspect.vala"
	self->client = _tmp0_;
#line 604 "/run/build/folks/tools/inspect/inspect.vala"
	return self;
#line 3614 "inspect.c"
}


void
folks_inspect_command_run (FolksInspectCommand* self,
                           const gchar* command_string,
                           GAsyncReadyCallback _callback_,
                           gpointer _user_data_)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	FOLKS_INSPECT_COMMAND_GET_CLASS (self)->run (self, command_string, _callback_, _user_data_);
#line 3626 "inspect.c"
}


gint
folks_inspect_command_run_finish (FolksInspectCommand* self,
                                  GAsyncResult* _res_)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	return FOLKS_INSPECT_COMMAND_GET_CLASS (self)->run_finish (self, _res_);
#line 3636 "inspect.c"
}


static gchar**
folks_inspect_command_real_complete_subcommand (FolksInspectCommand* self,
                                                const gchar* subcommand,
                                                int* result_length1)
{
	gchar** result = NULL;
	gchar** _tmp0_;
	gint _tmp0__length1;
#line 615 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (subcommand != NULL, NULL);
#line 618 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0_ = NULL;
#line 618 "/run/build/folks/tools/inspect/inspect.vala"
	_tmp0__length1 = 0;
#line 618 "/run/build/folks/tools/inspect/inspect.vala"
	if (result_length1) {
#line 618 "/run/build/folks/tools/inspect/inspect.vala"
		*result_length1 = _tmp0__length1;
#line 3658 "inspect.c"
	}
#line 618 "/run/build/folks/tools/inspect/inspect.vala"
	result = _tmp0_;
#line 618 "/run/build/folks/tools/inspect/inspect.vala"
	return result;
#line 3664 "inspect.c"
}


gchar**
folks_inspect_command_complete_subcommand (FolksInspectCommand* self,
                                           const gchar* subcommand,
                                           int* result_length1)
{
#line 615 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 615 "/run/build/folks/tools/inspect/inspect.vala"
	return FOLKS_INSPECT_COMMAND_GET_CLASS (self)->complete_subcommand (self, subcommand, result_length1);
#line 3677 "inspect.c"
}


const gchar*
folks_inspect_command_get_name (FolksInspectCommand* self)
{
#line 609 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 609 "/run/build/folks/tools/inspect/inspect.vala"
	return FOLKS_INSPECT_COMMAND_GET_CLASS (self)->get_name (self);
#line 3688 "inspect.c"
}


const gchar*
folks_inspect_command_get_description (FolksInspectCommand* self)
{
#line 610 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 610 "/run/build/folks/tools/inspect/inspect.vala"
	return FOLKS_INSPECT_COMMAND_GET_CLASS (self)->get_description (self);
#line 3699 "inspect.c"
}


const gchar*
folks_inspect_command_get_help (FolksInspectCommand* self)
{
#line 611 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 611 "/run/build/folks/tools/inspect/inspect.vala"
	return FOLKS_INSPECT_COMMAND_GET_CLASS (self)->get_help (self);
#line 3710 "inspect.c"
}


static void
folks_inspect_value_command_init (GValue* value)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	value->data[0].v_pointer = NULL;
#line 3719 "inspect.c"
}


static void
folks_inspect_value_command_free_value (GValue* value)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (value->data[0].v_pointer) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_command_unref (value->data[0].v_pointer);
#line 3730 "inspect.c"
	}
}


static void
folks_inspect_value_command_copy_value (const GValue* src_value,
                                        GValue* dest_value)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (src_value->data[0].v_pointer) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		dest_value->data[0].v_pointer = folks_inspect_command_ref (src_value->data[0].v_pointer);
#line 3743 "inspect.c"
	} else {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		dest_value->data[0].v_pointer = NULL;
#line 3747 "inspect.c"
	}
}


static gpointer
folks_inspect_value_command_peek_pointer (const GValue* value)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	return value->data[0].v_pointer;
#line 3757 "inspect.c"
}


static gchar*
folks_inspect_value_command_collect_value (GValue* value,
                                           guint n_collect_values,
                                           GTypeCValue* collect_values,
                                           guint collect_flags)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (collect_values[0].v_pointer) {
#line 3769 "inspect.c"
		FolksInspectCommand * object;
		object = collect_values[0].v_pointer;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		if (object->parent_instance.g_class == NULL) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
			return g_strconcat ("invalid unclassed object pointer for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 3776 "inspect.c"
		} else if (!g_value_type_compatible (G_TYPE_FROM_INSTANCE (object), G_VALUE_TYPE (value))) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
			return g_strconcat ("invalid object type `", g_type_name (G_TYPE_FROM_INSTANCE (object)), "' for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 3780 "inspect.c"
		}
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		value->data[0].v_pointer = folks_inspect_command_ref (object);
#line 3784 "inspect.c"
	} else {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		value->data[0].v_pointer = NULL;
#line 3788 "inspect.c"
	}
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	return NULL;
#line 3792 "inspect.c"
}


static gchar*
folks_inspect_value_command_lcopy_value (const GValue* value,
                                         guint n_collect_values,
                                         GTypeCValue* collect_values,
                                         guint collect_flags)
{
	FolksInspectCommand ** object_p;
	object_p = collect_values[0].v_pointer;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (!object_p) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		return g_strdup_printf ("value location for `%s' passed as NULL", G_VALUE_TYPE_NAME (value));
#line 3808 "inspect.c"
	}
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (!value->data[0].v_pointer) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		*object_p = NULL;
#line 3814 "inspect.c"
	} else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		*object_p = value->data[0].v_pointer;
#line 3818 "inspect.c"
	} else {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		*object_p = folks_inspect_command_ref (value->data[0].v_pointer);
#line 3822 "inspect.c"
	}
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	return NULL;
#line 3826 "inspect.c"
}


GParamSpec*
folks_inspect_param_spec_command (const gchar* name,
                                  const gchar* nick,
                                  const gchar* blurb,
                                  GType object_type,
                                  GParamFlags flags)
{
	FolksInspectParamSpecCommand* spec;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (g_type_is_a (object_type, FOLKS_INSPECT_TYPE_COMMAND), NULL);
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	spec = g_param_spec_internal (G_TYPE_PARAM_OBJECT, name, nick, blurb, flags);
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	G_PARAM_SPEC (spec)->value_type = object_type;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	return G_PARAM_SPEC (spec);
#line 3846 "inspect.c"
}


gpointer
folks_inspect_value_get_command (const GValue* value)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_val_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, FOLKS_INSPECT_TYPE_COMMAND), NULL);
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	return value->data[0].v_pointer;
#line 3857 "inspect.c"
}


void
folks_inspect_value_set_command (GValue* value,
                                 gpointer v_object)
{
	FolksInspectCommand * old;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, FOLKS_INSPECT_TYPE_COMMAND));
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	old = value->data[0].v_pointer;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (v_object) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, FOLKS_INSPECT_TYPE_COMMAND));
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		value->data[0].v_pointer = v_object;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_command_ref (value->data[0].v_pointer);
#line 3880 "inspect.c"
	} else {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		value->data[0].v_pointer = NULL;
#line 3884 "inspect.c"
	}
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (old) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_command_unref (old);
#line 3890 "inspect.c"
	}
}


void
folks_inspect_value_take_command (GValue* value,
                                  gpointer v_object)
{
	FolksInspectCommand * old;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, FOLKS_INSPECT_TYPE_COMMAND));
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	old = value->data[0].v_pointer;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (v_object) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, FOLKS_INSPECT_TYPE_COMMAND));
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		value->data[0].v_pointer = v_object;
#line 3912 "inspect.c"
	} else {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		value->data[0].v_pointer = NULL;
#line 3916 "inspect.c"
	}
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (old) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		folks_inspect_command_unref (old);
#line 3922 "inspect.c"
	}
}


static void
folks_inspect_command_class_init (FolksInspectCommandClass * klass)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	folks_inspect_command_parent_class = g_type_class_peek_parent (klass);
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	((FolksInspectCommandClass *) klass)->finalize = folks_inspect_command_finalize;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	((FolksInspectCommandClass *) klass)->complete_subcommand = (gchar** (*) (FolksInspectCommand *, const gchar*, int*)) folks_inspect_command_real_complete_subcommand;
#line 3936 "inspect.c"
}


static void
folks_inspect_command_instance_init (FolksInspectCommand * self)
{
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	self->ref_count = 1;
#line 3945 "inspect.c"
}


static void
folks_inspect_command_finalize (FolksInspectCommand * obj)
{
	FolksInspectCommand * self;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommand);
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	g_signal_handlers_destroy (self);
#line 602 "/run/build/folks/tools/inspect/inspect.vala"
	_g_object_unref0 (self->client);
#line 3959 "inspect.c"
}


GType
folks_inspect_command_get_type (void)
{
	static volatile gsize folks_inspect_command_type_id__volatile = 0;
	if (g_once_init_enter (&folks_inspect_command_type_id__volatile)) {
		static const GTypeValueTable g_define_type_value_table = { folks_inspect_value_command_init, folks_inspect_value_command_free_value, folks_inspect_value_command_copy_value, folks_inspect_value_command_peek_pointer, "p", folks_inspect_value_command_collect_value, "p", folks_inspect_value_command_lcopy_value };
		static const GTypeInfo g_define_type_info = { sizeof (FolksInspectCommandClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_inspect_command_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksInspectCommand), 0, (GInstanceInitFunc) folks_inspect_command_instance_init, &g_define_type_value_table };
		static const GTypeFundamentalInfo g_define_type_fundamental_info = { (G_TYPE_FLAG_CLASSED | G_TYPE_FLAG_INSTANTIATABLE | G_TYPE_FLAG_DERIVABLE | G_TYPE_FLAG_DEEP_DERIVABLE) };
		GType folks_inspect_command_type_id;
		folks_inspect_command_type_id = g_type_register_fundamental (g_type_fundamental_next (), "FolksInspectCommand", &g_define_type_info, &g_define_type_fundamental_info, G_TYPE_FLAG_ABSTRACT);
		g_once_init_leave (&folks_inspect_command_type_id__volatile, folks_inspect_command_type_id);
	}
	return folks_inspect_command_type_id__volatile;
}


gpointer
folks_inspect_command_ref (gpointer instance)
{
	FolksInspectCommand * self;
	self = instance;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	g_atomic_int_inc (&self->ref_count);
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	return instance;
#line 3988 "inspect.c"
}


void
folks_inspect_command_unref (gpointer instance)
{
	FolksInspectCommand * self;
	self = instance;
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
	if (g_atomic_int_dec_and_test (&self->ref_count)) {
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		FOLKS_INSPECT_COMMAND_GET_CLASS (self)->finalize (self);
#line 600 "/run/build/folks/tools/inspect/inspect.vala"
		g_type_free_instance ((GTypeInstance *) self);
#line 4003 "inspect.c"
	}
}


static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}


static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}


static gint
_vala_array_length (gpointer array)
{
	int length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}



