/* import-pidgin.c generated by valac 0.40.11, the Vala compiler
 * generated from import-pidgin.vala, do not modify */

/*
 * Copyright (C) 2010 Collabora Ltd.
 * Copyright (C) 2013 Philip Withnall
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors:
 *       Philip Withnall <philip.withnall@collabora.co.uk>
 */


#include <glib.h>
#include <glib-object.h>
#include <gio/gio.h>
#include <folks/folks.h>
#include <stdlib.h>
#include <string.h>
#include <glib/gi18n-lib.h>
#include <libxml/tree.h>
#include <libxml/parser.h>
#include <stdio.h>
#include <gee.h>


#define FOLKS_TYPE_IMPORTER (folks_importer_get_type ())
#define FOLKS_IMPORTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_IMPORTER, FolksImporter))
#define FOLKS_IMPORTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_IMPORTER, FolksImporterClass))
#define FOLKS_IS_IMPORTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_IMPORTER))
#define FOLKS_IS_IMPORTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_IMPORTER))
#define FOLKS_IMPORTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_IMPORTER, FolksImporterClass))

typedef struct _FolksImporter FolksImporter;
typedef struct _FolksImporterClass FolksImporterClass;
typedef struct _FolksImporterPrivate FolksImporterPrivate;

#define FOLKS_IMPORTERS_TYPE_PIDGIN (folks_importers_pidgin_get_type ())
#define FOLKS_IMPORTERS_PIDGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_IMPORTERS_TYPE_PIDGIN, FolksImportersPidgin))
#define FOLKS_IMPORTERS_PIDGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_IMPORTERS_TYPE_PIDGIN, FolksImportersPidginClass))
#define FOLKS_IMPORTERS_IS_PIDGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_IMPORTERS_TYPE_PIDGIN))
#define FOLKS_IMPORTERS_IS_PIDGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_IMPORTERS_TYPE_PIDGIN))
#define FOLKS_IMPORTERS_PIDGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_IMPORTERS_TYPE_PIDGIN, FolksImportersPidginClass))

typedef struct _FolksImportersPidgin FolksImportersPidgin;
typedef struct _FolksImportersPidginClass FolksImportersPidginClass;
typedef struct _FolksImportersPidginPrivate FolksImportersPidginPrivate;
enum  {
	FOLKS_IMPORTERS_PIDGIN_0_PROPERTY,
	FOLKS_IMPORTERS_PIDGIN_NUM_PROPERTIES
};
static GParamSpec* folks_importers_pidgin_properties[FOLKS_IMPORTERS_PIDGIN_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
typedef struct _FolksImportersPidginImportData FolksImportersPidginImportData;
typedef struct _FolksImportersPidginParseBlistData FolksImportersPidginParseBlistData;
typedef struct _FolksImportersPidginParseGroupData FolksImportersPidginParseGroupData;
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
typedef struct _FolksImportersPidginParseContactData FolksImportersPidginParseContactData;

typedef enum  {
	FOLKS_IMPORT_ERROR_MALFORMED_INPUT
} FolksImportError;
#define FOLKS_IMPORT_ERROR folks_import_error_quark ()
struct _FolksImporter {
	GObject parent_instance;
	FolksImporterPrivate * priv;
};

struct _FolksImporterClass {
	GObjectClass parent_class;
	void (*import) (FolksImporter* self, FolksPersonaStore* destination_store, const gchar* source_filename, GAsyncReadyCallback _callback_, gpointer _user_data_);
	guint (*import_finish) (FolksImporter* self, GAsyncResult* _res_, GError** error);
};

struct _FolksImportersPidgin {
	FolksImporter parent_instance;
	FolksImportersPidginPrivate * priv;
};

struct _FolksImportersPidginClass {
	FolksImporterClass parent_class;
};

struct _FolksImportersPidginPrivate {
	FolksPersonaStore* destination_store;
	guint persona_count;
};

struct _FolksImportersPidginImportData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksImportersPidgin* self;
	FolksPersonaStore* destination_store;
	gchar* source_filename;
	guint result;
	FolksPersonaStore* _tmp0_;
	gchar* filename;
	gchar* _tmp1_;
	gboolean _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	const gchar* _tmp7_;
	gchar* _tmp8_;
	GFile* file;
	const gchar* _tmp9_;
	GFile* _tmp10_;
	GFile* _tmp11_;
	const gchar* _tmp12_;
	GError* _tmp13_;
	GFileInfo* file_info;
	GFileInfo* _tmp14_;
	GFile* _tmp15_;
	GFileInfo* _tmp16_;
	GFileInfo* _tmp17_;
	GError* e;
	const gchar* _tmp18_;
	GError* _tmp19_;
	const gchar* _tmp20_;
	GError* _tmp21_;
	GFileInfo* _tmp22_;
	const gchar* _tmp23_;
	GError* _tmp24_;
	xmlDoc* xml_doc;
	const gchar* _tmp25_;
	xmlDoc* _tmp26_;
	xmlDoc* _tmp27_;
	const gchar* _tmp28_;
	GError* _tmp29_;
	xmlNode* root_node;
	xmlDoc* _tmp30_;
	xmlNode* _tmp31_;
	gboolean _tmp32_;
	gboolean _tmp33_;
	xmlNode* _tmp34_;
	xmlNode* _tmp35_;
	const gchar* _tmp36_;
	xmlNode* _tmp37_;
	gchar* _tmp38_;
	gchar* _tmp39_;
	xmlDoc* _tmp40_;
	const gchar* _tmp41_;
	GError* _tmp42_;
	xmlNode* iter;
	xmlNode* _tmp43_;
	xmlNode* _tmp44_;
	gboolean _tmp45_;
	xmlNode* _tmp46_;
	xmlNode* _tmp47_;
	xmlNode* _tmp48_;
	gboolean _tmp49_;
	xmlNode* _tmp50_;
	xmlElementType _tmp51_;
	xmlNode* _tmp52_;
	const gchar* _tmp53_;
	xmlNode* _tmp54_;
	xmlDoc* _tmp55_;
	FILE* _tmp56_;
	guint _tmp57_;
	gchar* _tmp58_;
	gchar* _tmp59_;
	guint _tmp60_;
	const gchar* _tmp61_;
	guint _tmp62_;
	GError * _inner_error_;
};

struct _FolksImportersPidginParseBlistData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksImportersPidgin* self;
	xmlNode* blist_node;
	xmlNode* iter;
	xmlNode* _tmp0_;
	gboolean _tmp1_;
	xmlNode* _tmp2_;
	xmlNode* _tmp3_;
	xmlNode* _tmp4_;
	gboolean _tmp5_;
	xmlNode* _tmp6_;
	xmlElementType _tmp7_;
	xmlNode* _tmp8_;
	const gchar* _tmp9_;
	xmlNode* _tmp10_;
};

struct _FolksImportersPidginParseGroupData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksImportersPidgin* self;
	xmlNode* group_node;
	gchar* group_name;
	gchar* _tmp0_;
	xmlNode* iter;
	xmlNode* _tmp1_;
	gboolean _tmp2_;
	xmlNode* _tmp3_;
	xmlNode* _tmp4_;
	xmlNode* _tmp5_;
	gboolean _tmp6_;
	xmlNode* _tmp7_;
	xmlElementType _tmp8_;
	xmlNode* _tmp9_;
	const gchar* _tmp10_;
	FolksPersona* persona;
	xmlNode* _tmp11_;
	FolksPersona* _tmp12_;
	gboolean _tmp13_;
	FolksPersona* _tmp14_;
	FolksPersona* _tmp15_;
	FolksGroupDetails* group_details;
	FolksPersona* _tmp16_;
	FolksGroupDetails* _tmp17_;
	FolksGroupDetails* _tmp18_;
	const gchar* _tmp19_;
	GError* e;
	FILE* _tmp20_;
	gchar* _tmp21_;
	gchar* _tmp22_;
	FolksPersona* _tmp23_;
	const gchar* _tmp24_;
	const gchar* _tmp25_;
	GError* _tmp26_;
	const gchar* _tmp27_;
	GError * _inner_error_;
};

struct _FolksImportersPidginParseContactData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksImportersPidgin* self;
	xmlNode* contact_node;
	FolksPersona* result;
	gchar* alias;
	GeeHashMultiMap* im_addresses;
	GeeHashMultiMap* _tmp0_;
	gchar* im_address_string;
	gchar* _tmp1_;
	xmlNode* iter;
	xmlNode* _tmp2_;
	gboolean _tmp3_;
	xmlNode* _tmp4_;
	xmlNode* _tmp5_;
	xmlNode* _tmp6_;
	gboolean _tmp7_;
	xmlNode* _tmp8_;
	xmlElementType _tmp9_;
	xmlNode* _tmp10_;
	const gchar* _tmp11_;
	gchar* blist_protocol;
	xmlNode* _tmp12_;
	gchar* _tmp13_;
	const gchar* _tmp14_;
	gchar* tp_protocol;
	const gchar* _tmp15_;
	gchar* _tmp16_;
	const gchar* _tmp17_;
	xmlNode* subiter;
	xmlNode* _tmp18_;
	xmlNode* _tmp19_;
	gboolean _tmp20_;
	xmlNode* _tmp21_;
	xmlNode* _tmp22_;
	xmlNode* _tmp23_;
	xmlNode* _tmp24_;
	xmlElementType _tmp25_;
	xmlNode* _tmp26_;
	const gchar* _tmp27_;
	xmlNode* _tmp28_;
	gchar* _tmp29_;
	xmlNode* _tmp30_;
	const gchar* _tmp31_;
	gchar* im_address;
	xmlNode* _tmp32_;
	gchar* _tmp33_;
	GeeHashMultiMap* _tmp34_;
	const gchar* _tmp35_;
	const gchar* _tmp36_;
	FolksImFieldDetails* _tmp37_;
	FolksImFieldDetails* _tmp38_;
	const gchar* _tmp39_;
	const gchar* _tmp40_;
	gchar* _tmp41_;
	gchar* _tmp42_;
	gchar* _tmp43_;
	gboolean _tmp44_;
	GeeHashMultiMap* _tmp45_;
	gint _tmp46_;
	gint _tmp47_;
	gboolean _tmp48_;
	gboolean _tmp49_;
	const gchar* _tmp50_;
	const gchar* _tmp51_;
	gchar* _tmp52_;
	gchar* _tmp53_;
	const gchar* _tmp54_;
	gchar* _tmp55_;
	gchar* _tmp56_;
	const gchar* _tmp57_;
	gchar* _tmp58_;
	gchar* _tmp59_;
	FILE* _tmp60_;
	const gchar* _tmp61_;
	GHashTable* details;
	GHashFunc _tmp62_;
	GEqualFunc _tmp63_;
	GHashTable* _tmp64_;
	GValue im_addresses_value;
	GValue _tmp65_;
	GeeHashMultiMap* _tmp66_;
	GHashTable* _tmp67_;
	gchar* _tmp68_;
	GValue _tmp69_;
	GValue _tmp70_;
	GValue* _tmp71_;
	FolksPersona* persona;
	FolksPersona* _tmp72_;
	FolksPersonaStore* _tmp73_;
	GHashTable* _tmp74_;
	FolksPersona* _tmp75_;
	FolksPersona* _tmp76_;
	GError* e;
	FILE* _tmp77_;
	const gchar* _tmp78_;
	const gchar* _tmp79_;
	GError* _tmp80_;
	const gchar* _tmp81_;
	gboolean _tmp82_;
	const gchar* _tmp83_;
	FolksPersona* _tmp84_;
	FolksPersona* _tmp85_;
	const gchar* _tmp86_;
	FILE* _tmp87_;
	FolksPersona* _tmp88_;
	const gchar* _tmp89_;
	const gchar* _tmp90_;
	const gchar* _tmp91_;
	const gchar* _tmp92_;
	guint _tmp93_;
	GError * _inner_error_;
};


static gpointer folks_importers_pidgin_parent_class = NULL;

GType folks_importer_get_type (void) G_GNUC_CONST;
GQuark folks_import_error_quark (void);
GType folks_importers_pidgin_get_type (void) G_GNUC_CONST;
#define FOLKS_IMPORTERS_PIDGIN_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), FOLKS_IMPORTERS_TYPE_PIDGIN, FolksImportersPidginPrivate))
static void folks_importers_pidgin_real_import_data_free (gpointer _data);
static void folks_importers_pidgin_real_import_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
static void folks_importers_pidgin_real_import (FolksImporter* base,
                                         FolksPersonaStore* destination_store,
                                         const gchar* source_filename,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
static gboolean folks_importers_pidgin_real_import_co (FolksImportersPidginImportData* _data_);
static void folks_importers_pidgin_import_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_);
static void folks_importers_pidgin_parse_blist (FolksImportersPidgin* self,
                                         xmlNode* blist_node,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
static void folks_importers_pidgin_parse_blist_finish (FolksImportersPidgin* self,
                                                GAsyncResult* _res_);
static void folks_importers_pidgin_parse_blist_data_free (gpointer _data);
static void folks_importers_pidgin_parse_blist_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
static gboolean folks_importers_pidgin_parse_blist_co (FolksImportersPidginParseBlistData* _data_);
static void folks_importers_pidgin_parse_group (FolksImportersPidgin* self,
                                         xmlNode* group_node,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
static void folks_importers_pidgin_parse_group_finish (FolksImportersPidgin* self,
                                                GAsyncResult* _res_);
static void folks_importers_pidgin_parse_blist_ready (GObject* source_object,
                                               GAsyncResult* _res_,
                                               gpointer _user_data_);
static void folks_importers_pidgin_parse_group_data_free (gpointer _data);
static void folks_importers_pidgin_parse_group_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
static gboolean folks_importers_pidgin_parse_group_co (FolksImportersPidginParseGroupData* _data_);
static void folks_importers_pidgin_parse_contact (FolksImportersPidgin* self,
                                           xmlNode* contact_node,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_);
static FolksPersona* folks_importers_pidgin_parse_contact_finish (FolksImportersPidgin* self,
                                                           GAsyncResult* _res_);
static void folks_importers_pidgin_parse_group_ready (GObject* source_object,
                                               GAsyncResult* _res_,
                                               gpointer _user_data_);
static void folks_importers_pidgin_parse_contact_data_free (gpointer _data);
static void folks_importers_pidgin_parse_contact_async_ready_wrapper (GObject *source_object,
                                                               GAsyncResult *res,
                                                               void *user_data);
static gboolean folks_importers_pidgin_parse_contact_co (FolksImportersPidginParseContactData* _data_);
static gchar* folks_importers_pidgin_blist_protocol_to_tp_protocol (FolksImportersPidgin* self,
                                                             const gchar* blist_protocol);
static void _g_free0_ (gpointer var);
static void _vala_GValue_free (GValue* self);
static void __vala_GValue_free0_ (gpointer var);
static GValue* _g_value_dup (GValue* self);
static void folks_importers_pidgin_parse_contact_ready (GObject* source_object,
                                                 GAsyncResult* _res_,
                                                 gpointer _user_data_);
FolksImportersPidgin* folks_importers_pidgin_new (void);
FolksImportersPidgin* folks_importers_pidgin_construct (GType object_type);
FolksImporter* folks_importer_construct (GType object_type);
static void folks_importers_pidgin_finalize (GObject * obj);


static void
folks_importers_pidgin_real_import_data_free (gpointer _data)
{
	FolksImportersPidginImportData* _data_;
	_data_ = _data;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->destination_store);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_free0 (_data_->source_filename);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->self);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_slice_free (FolksImportersPidginImportData, _data_);
#line 462 "import-pidgin.c"
}


static void
folks_importers_pidgin_real_import_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	FolksImportersPidginImportData* _task_data_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (_task_data_->_callback_ != NULL) {
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 478 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_task_data_->_task_complete_ = TRUE;
#line 482 "import-pidgin.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	return self ? g_object_ref (self) : NULL;
#line 491 "import-pidgin.c"
}


static void
folks_importers_pidgin_real_import (FolksImporter* base,
                                    FolksPersonaStore* destination_store,
                                    const gchar* source_filename,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	FolksImportersPidgin * self;
	FolksImportersPidginImportData* _data_;
	FolksImportersPidgin* _tmp0_;
	FolksPersonaStore* _tmp1_;
	gchar* _tmp2_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	self = (FolksImportersPidgin*) base;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = g_slice_new0 (FolksImportersPidginImportData);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_callback_ = _callback_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_importers_pidgin_real_import_async_ready_wrapper, _user_data_);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (_callback_ == NULL) {
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_task_complete_ = TRUE;
#line 519 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_importers_pidgin_real_import_data_free);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->self = _tmp0_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_tmp1_ = _g_object_ref0 (destination_store);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->destination_store);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->destination_store = _tmp1_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_tmp2_ = g_strdup (source_filename);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_free0 (_data_->source_filename);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->source_filename = _tmp2_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_real_import_co (_data_);
#line 541 "import-pidgin.c"
}


static guint
folks_importers_pidgin_real_import_finish (FolksImporter* base,
                                           GAsyncResult* _res_,
                                           GError** error)
{
	guint result;
	FolksImportersPidginImportData* _data_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (NULL == _data_) {
#line 556 "import-pidgin.c"
		guint _tmp0_ = 0U;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		return _tmp0_;
#line 560 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	result = _data_->result;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	return result;
#line 566 "import-pidgin.c"
}


static gchar*
string_strip (const gchar* self)
{
	gchar* result = NULL;
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
#line 1304 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1305 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1305 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1306 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = _result_;
#line 1306 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_strstrip (_tmp1_);
#line 1307 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _result_;
#line 1307 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 591 "import-pidgin.c"
}


static void
folks_importers_pidgin_import_ready (GObject* source_object,
                                     GAsyncResult* _res_,
                                     gpointer _user_data_)
{
	FolksImportersPidginImportData* _data_;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = _user_data_;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_source_object_ = source_object;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_res_ = _res_;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_task_complete_ = TRUE;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_real_import_co (_data_);
#line 611 "import-pidgin.c"
}


static gboolean
folks_importers_pidgin_real_import_co (FolksImportersPidginImportData* _data_)
{
#line 32 "/run/build/folks/tools/import-pidgin.vala"
	switch (_data_->_state_) {
#line 32 "/run/build/folks/tools/import-pidgin.vala"
		case 0:
#line 622 "import-pidgin.c"
		goto _state_0;
#line 32 "/run/build/folks/tools/import-pidgin.vala"
		case 1:
#line 626 "import-pidgin.c"
		goto _state_1;
#line 32 "/run/build/folks/tools/import-pidgin.vala"
		case 2:
#line 630 "import-pidgin.c"
		goto _state_2;
		default:
#line 32 "/run/build/folks/tools/import-pidgin.vala"
		g_assert_not_reached ();
#line 635 "import-pidgin.c"
	}
	_state_0:
#line 35 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp0_ = _g_object_ref0 (_data_->destination_store);
#line 35 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->self->priv->destination_store);
#line 35 "/run/build/folks/tools/import-pidgin.vala"
	_data_->self->priv->destination_store = _data_->_tmp0_;
#line 36 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp1_ = g_strdup (_data_->source_filename);
#line 36 "/run/build/folks/tools/import-pidgin.vala"
	_data_->filename = _data_->_tmp1_;
#line 39 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp3_ = _data_->filename;
#line 39 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp3_ == NULL) {
#line 39 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp2_ = TRUE;
#line 654 "import-pidgin.c"
	} else {
#line 39 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp4_ = _data_->filename;
#line 39 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp5_ = string_strip (_data_->_tmp4_);
#line 39 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp6_ = _data_->_tmp5_;
#line 39 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp2_ = g_strcmp0 (_data_->_tmp6_, "") == 0;
#line 39 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->_tmp6_);
#line 666 "import-pidgin.c"
	}
#line 39 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp2_) {
#line 41 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp7_ = g_get_home_dir ();
#line 41 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp8_ = g_build_filename (_data_->_tmp7_, ".purple", "blist.xml", NULL, NULL);
#line 41 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->filename);
#line 41 "/run/build/folks/tools/import-pidgin.vala"
		_data_->filename = _data_->_tmp8_;
#line 678 "import-pidgin.c"
	}
#line 45 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp9_ = _data_->filename;
#line 45 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp10_ = g_file_new_for_path (_data_->_tmp9_);
#line 45 "/run/build/folks/tools/import-pidgin.vala"
	_data_->file = _data_->_tmp10_;
#line 46 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp11_ = _data_->file;
#line 46 "/run/build/folks/tools/import-pidgin.vala"
	if (!g_file_query_exists (_data_->_tmp11_, NULL)) {
#line 49 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp12_ = _data_->filename;
#line 49 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp13_ = g_error_new (FOLKS_IMPORT_ERROR, FOLKS_IMPORT_ERROR_MALFORMED_INPUT, _ ("File %s does not exist."), _data_->_tmp12_);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_inner_error_ = _data_->_tmp13_;
#line 49 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_inner_error_->domain == FOLKS_IMPORT_ERROR) {
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 708 "import-pidgin.c"
		} else {
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			g_clear_error (&_data_->_inner_error_);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 49 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 722 "import-pidgin.c"
		}
	}
	{
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp15_ = _data_->file;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_state_ = 1;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		g_file_query_info_async (_data_->_tmp15_, G_FILE_ATTRIBUTE_ACCESS_CAN_READ, G_FILE_QUERY_INFO_NONE, G_PRIORITY_DEFAULT, NULL, folks_importers_pidgin_import_ready, _data_);
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		return FALSE;
#line 734 "import-pidgin.c"
		_state_1:
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp16_ = g_file_query_info_finish (_data_->_tmp15_, _data_->_res_, &_data_->_inner_error_);
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp14_ = _data_->_tmp16_;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 742 "import-pidgin.c"
			goto __catch5_g_error;
		}
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp17_ = _data_->_tmp14_;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp14_ = NULL;
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->file_info);
#line 56 "/run/build/folks/tools/import-pidgin.vala"
		_data_->file_info = _data_->_tmp17_;
#line 54 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->_tmp14_);
#line 755 "import-pidgin.c"
	}
	goto __finally5;
	__catch5_g_error:
	{
#line 54 "/run/build/folks/tools/import-pidgin.vala"
		_data_->e = _data_->_inner_error_;
#line 54 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_inner_error_ = NULL;
#line 62 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp18_ = _data_->filename;
#line 62 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp19_ = _data_->e;
#line 62 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp20_ = _data_->_tmp19_->message;
#line 62 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp21_ = g_error_new (FOLKS_IMPORT_ERROR, FOLKS_IMPORT_ERROR_MALFORMED_INPUT, _ ("Failed to get information about file %s: %s"), _data_->_tmp18_, _data_->_tmp20_);
#line 62 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_inner_error_ = _data_->_tmp21_;
#line 62 "/run/build/folks/tools/import-pidgin.vala"
		_g_error_free0 (_data_->e);
#line 776 "import-pidgin.c"
		goto __finally5;
	}
	__finally5:
#line 54 "/run/build/folks/tools/import-pidgin.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 54 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_inner_error_->domain == FOLKS_IMPORT_ERROR) {
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file_info);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 796 "import-pidgin.c"
		} else {
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file_info);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			g_clear_error (&_data_->_inner_error_);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 54 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 812 "import-pidgin.c"
		}
	}
#line 69 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp22_ = _data_->file_info;
#line 69 "/run/build/folks/tools/import-pidgin.vala"
	if (!g_file_info_get_attribute_boolean (_data_->_tmp22_, G_FILE_ATTRIBUTE_ACCESS_CAN_READ)) {
#line 72 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp23_ = _data_->filename;
#line 72 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp24_ = g_error_new (FOLKS_IMPORT_ERROR, FOLKS_IMPORT_ERROR_MALFORMED_INPUT, _ ("File %s is not readable."), _data_->_tmp23_);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_inner_error_ = _data_->_tmp24_;
#line 72 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_inner_error_->domain == FOLKS_IMPORT_ERROR) {
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file_info);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 839 "import-pidgin.c"
		} else {
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file_info);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			g_clear_error (&_data_->_inner_error_);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 72 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 855 "import-pidgin.c"
		}
	}
#line 76 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp25_ = _data_->filename;
#line 76 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp26_ = xmlParseFile (_data_->_tmp25_);
#line 76 "/run/build/folks/tools/import-pidgin.vala"
	_data_->xml_doc = _data_->_tmp26_;
#line 78 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp27_ = _data_->xml_doc;
#line 78 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp27_ == NULL) {
#line 80 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp28_ = _data_->filename;
#line 80 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp29_ = g_error_new (FOLKS_IMPORT_ERROR, FOLKS_IMPORT_ERROR_MALFORMED_INPUT, _ ("The Pidgin buddy list file ‘%s’ could not be loaded."), _data_->_tmp28_);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_inner_error_ = _data_->_tmp29_;
#line 80 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_inner_error_->domain == FOLKS_IMPORT_ERROR) {
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file_info);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 888 "import-pidgin.c"
		} else {
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file_info);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			g_clear_error (&_data_->_inner_error_);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 80 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 904 "import-pidgin.c"
		}
	}
#line 87 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp30_ = _data_->xml_doc;
#line 87 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp31_ = xmlDocGetRootElement (_data_->_tmp30_);
#line 87 "/run/build/folks/tools/import-pidgin.vala"
	_data_->root_node = _data_->_tmp31_;
#line 89 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp34_ = _data_->root_node;
#line 89 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp34_ == NULL) {
#line 89 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp33_ = TRUE;
#line 919 "import-pidgin.c"
	} else {
#line 89 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp35_ = _data_->root_node;
#line 89 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp36_ = _data_->_tmp35_->name;
#line 89 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp33_ = g_strcmp0 (_data_->_tmp36_, "purple") != 0;
#line 927 "import-pidgin.c"
	}
#line 89 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp33_) {
#line 89 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp32_ = TRUE;
#line 933 "import-pidgin.c"
	} else {
#line 90 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp37_ = _data_->root_node;
#line 90 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp38_ = (gchar*) xmlGetProp (_data_->_tmp37_, (xmlChar*) "version");
#line 90 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp39_ = _data_->_tmp38_;
#line 90 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp32_ = g_strcmp0 (_data_->_tmp39_, "1.0") != 0;
#line 90 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->_tmp39_);
#line 945 "import-pidgin.c"
	}
#line 89 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp32_) {
#line 94 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp40_ = _data_->xml_doc;
#line 94 "/run/build/folks/tools/import-pidgin.vala"
		xmlFreeDoc (_data_->_tmp40_);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp41_ = _data_->filename;
#line 95 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp42_ = g_error_new (FOLKS_IMPORT_ERROR, FOLKS_IMPORT_ERROR_MALFORMED_INPUT, _ ("The Pidgin buddy list file ‘%s’ could not be loaded: the root element " \
"could not be found or was not recognized."), _data_->_tmp41_);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_inner_error_ = _data_->_tmp42_;
#line 95 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_inner_error_->domain == FOLKS_IMPORT_ERROR) {
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file_info);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 973 "import-pidgin.c"
		} else {
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file_info);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->file);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->filename);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			g_clear_error (&_data_->_inner_error_);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 95 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 989 "import-pidgin.c"
		}
	}
	{
#line 102 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp43_ = _data_->root_node;
#line 102 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp44_ = _data_->_tmp43_->children;
#line 102 "/run/build/folks/tools/import-pidgin.vala"
		_data_->iter = _data_->_tmp44_;
#line 999 "import-pidgin.c"
		{
#line 102 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp45_ = TRUE;
#line 102 "/run/build/folks/tools/import-pidgin.vala"
			while (TRUE) {
#line 102 "/run/build/folks/tools/import-pidgin.vala"
				if (!_data_->_tmp45_) {
#line 103 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp46_ = _data_->iter;
#line 103 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp47_ = _data_->_tmp46_->next;
#line 103 "/run/build/folks/tools/import-pidgin.vala"
					_data_->iter = _data_->_tmp47_;
#line 1013 "import-pidgin.c"
				}
#line 102 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp45_ = FALSE;
#line 102 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp48_ = _data_->iter;
#line 102 "/run/build/folks/tools/import-pidgin.vala"
				if (!(_data_->_tmp48_ != NULL)) {
#line 102 "/run/build/folks/tools/import-pidgin.vala"
					break;
#line 1023 "import-pidgin.c"
				}
#line 105 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp50_ = _data_->iter;
#line 105 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp51_ = _data_->_tmp50_->type;
#line 105 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp51_ != XML_ELEMENT_NODE) {
#line 105 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp49_ = TRUE;
#line 1033 "import-pidgin.c"
				} else {
#line 105 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp52_ = _data_->iter;
#line 105 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp53_ = _data_->_tmp52_->name;
#line 105 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp49_ = g_strcmp0 (_data_->_tmp53_, "blist") != 0;
#line 1041 "import-pidgin.c"
				}
#line 105 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp49_) {
#line 106 "/run/build/folks/tools/import-pidgin.vala"
					continue;
#line 1047 "import-pidgin.c"
				}
#line 108 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp54_ = _data_->iter;
#line 108 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_state_ = 2;
#line 108 "/run/build/folks/tools/import-pidgin.vala"
				folks_importers_pidgin_parse_blist (_data_->self, _data_->_tmp54_, folks_importers_pidgin_import_ready, _data_);
#line 108 "/run/build/folks/tools/import-pidgin.vala"
				return FALSE;
#line 1057 "import-pidgin.c"
				_state_2:
#line 108 "/run/build/folks/tools/import-pidgin.vala"
				folks_importers_pidgin_parse_blist_finish (_data_->self, _data_->_res_);
#line 1061 "import-pidgin.c"
			}
		}
	}
#line 112 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp55_ = _data_->xml_doc;
#line 112 "/run/build/folks/tools/import-pidgin.vala"
	xmlFreeDoc (_data_->_tmp55_);
#line 114 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp56_ = stdout;
#line 114 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp57_ = _data_->self->priv->persona_count;
#line 114 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp58_ = g_strconcat (ngettext ("Imported %u buddy from ‘%s’.", "Imported %u buddies from ‘%s’.", (gulong) _data_->_tmp57_), "\n", NULL);
#line 114 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp59_ = _data_->_tmp58_;
#line 114 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp60_ = _data_->self->priv->persona_count;
#line 114 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp61_ = _data_->filename;
#line 114 "/run/build/folks/tools/import-pidgin.vala"
	fprintf (_data_->_tmp56_, _data_->_tmp59_, _data_->_tmp60_, _data_->_tmp61_);
#line 114 "/run/build/folks/tools/import-pidgin.vala"
	_g_free0 (_data_->_tmp59_);
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp62_ = _data_->self->priv->persona_count;
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	_data_->result = _data_->_tmp62_;
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->file_info);
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->file);
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	_g_free0 (_data_->filename);
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_state_ != 0) {
#line 122 "/run/build/folks/tools/import-pidgin.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 122 "/run/build/folks/tools/import-pidgin.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1103 "import-pidgin.c"
		}
	}
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	g_object_unref (_data_->_async_result);
#line 122 "/run/build/folks/tools/import-pidgin.vala"
	return FALSE;
#line 1110 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_blist_data_free (gpointer _data)
{
	FolksImportersPidginParseBlistData* _data_;
	_data_ = _data;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->self);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_slice_free (FolksImportersPidginParseBlistData, _data_);
#line 1123 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_blist_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	FolksImportersPidginParseBlistData* _task_data_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (_task_data_->_callback_ != NULL) {
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 1139 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_task_data_->_task_complete_ = TRUE;
#line 1143 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_blist (FolksImportersPidgin* self,
                                    xmlNode* blist_node,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	FolksImportersPidginParseBlistData* _data_;
	FolksImportersPidgin* _tmp0_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = g_slice_new0 (FolksImportersPidginParseBlistData);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_callback_ = _callback_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_importers_pidgin_parse_blist_async_ready_wrapper, _user_data_);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (_callback_ == NULL) {
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_task_complete_ = TRUE;
#line 1165 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_importers_pidgin_parse_blist_data_free);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->self = _tmp0_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->blist_node = blist_node;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_parse_blist_co (_data_);
#line 1177 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_blist_finish (FolksImportersPidgin* self,
                                           GAsyncResult* _res_)
{
	FolksImportersPidginParseBlistData* _data_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 1188 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_blist_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_)
{
	FolksImportersPidginParseBlistData* _data_;
#line 133 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = _user_data_;
#line 133 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_source_object_ = source_object;
#line 133 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_res_ = _res_;
#line 133 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_task_complete_ = TRUE;
#line 133 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_parse_blist_co (_data_);
#line 1208 "import-pidgin.c"
}


static gboolean
folks_importers_pidgin_parse_blist_co (FolksImportersPidginParseBlistData* _data_)
{
#line 125 "/run/build/folks/tools/import-pidgin.vala"
	switch (_data_->_state_) {
#line 125 "/run/build/folks/tools/import-pidgin.vala"
		case 0:
#line 1219 "import-pidgin.c"
		goto _state_0;
#line 125 "/run/build/folks/tools/import-pidgin.vala"
		case 1:
#line 1223 "import-pidgin.c"
		goto _state_1;
		default:
#line 125 "/run/build/folks/tools/import-pidgin.vala"
		g_assert_not_reached ();
#line 1228 "import-pidgin.c"
	}
	_state_0:
	{
#line 127 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp0_ = _data_->blist_node->children;
#line 127 "/run/build/folks/tools/import-pidgin.vala"
		_data_->iter = _data_->_tmp0_;
#line 1236 "import-pidgin.c"
		{
#line 127 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp1_ = TRUE;
#line 127 "/run/build/folks/tools/import-pidgin.vala"
			while (TRUE) {
#line 127 "/run/build/folks/tools/import-pidgin.vala"
				if (!_data_->_tmp1_) {
#line 128 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp2_ = _data_->iter;
#line 128 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp3_ = _data_->_tmp2_->next;
#line 128 "/run/build/folks/tools/import-pidgin.vala"
					_data_->iter = _data_->_tmp3_;
#line 1250 "import-pidgin.c"
				}
#line 127 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp1_ = FALSE;
#line 127 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp4_ = _data_->iter;
#line 127 "/run/build/folks/tools/import-pidgin.vala"
				if (!(_data_->_tmp4_ != NULL)) {
#line 127 "/run/build/folks/tools/import-pidgin.vala"
					break;
#line 1260 "import-pidgin.c"
				}
#line 130 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp6_ = _data_->iter;
#line 130 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp7_ = _data_->_tmp6_->type;
#line 130 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp7_ != XML_ELEMENT_NODE) {
#line 130 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp5_ = TRUE;
#line 1270 "import-pidgin.c"
				} else {
#line 130 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp8_ = _data_->iter;
#line 130 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp9_ = _data_->_tmp8_->name;
#line 130 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp5_ = g_strcmp0 (_data_->_tmp9_, "group") != 0;
#line 1278 "import-pidgin.c"
				}
#line 130 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp5_) {
#line 131 "/run/build/folks/tools/import-pidgin.vala"
					continue;
#line 1284 "import-pidgin.c"
				}
#line 133 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp10_ = _data_->iter;
#line 133 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_state_ = 1;
#line 133 "/run/build/folks/tools/import-pidgin.vala"
				folks_importers_pidgin_parse_group (_data_->self, _data_->_tmp10_, folks_importers_pidgin_parse_blist_ready, _data_);
#line 133 "/run/build/folks/tools/import-pidgin.vala"
				return FALSE;
#line 1294 "import-pidgin.c"
				_state_1:
#line 133 "/run/build/folks/tools/import-pidgin.vala"
				folks_importers_pidgin_parse_group_finish (_data_->self, _data_->_res_);
#line 1298 "import-pidgin.c"
			}
		}
	}
#line 125 "/run/build/folks/tools/import-pidgin.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 125 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_state_ != 0) {
#line 125 "/run/build/folks/tools/import-pidgin.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 125 "/run/build/folks/tools/import-pidgin.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1310 "import-pidgin.c"
		}
	}
#line 125 "/run/build/folks/tools/import-pidgin.vala"
	g_object_unref (_data_->_async_result);
#line 125 "/run/build/folks/tools/import-pidgin.vala"
	return FALSE;
#line 1317 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_group_data_free (gpointer _data)
{
	FolksImportersPidginParseGroupData* _data_;
	_data_ = _data;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->self);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_slice_free (FolksImportersPidginParseGroupData, _data_);
#line 1330 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_group_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	FolksImportersPidginParseGroupData* _task_data_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (_task_data_->_callback_ != NULL) {
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 1346 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_task_data_->_task_complete_ = TRUE;
#line 1350 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_group (FolksImportersPidgin* self,
                                    xmlNode* group_node,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	FolksImportersPidginParseGroupData* _data_;
	FolksImportersPidgin* _tmp0_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = g_slice_new0 (FolksImportersPidginParseGroupData);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_callback_ = _callback_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_importers_pidgin_parse_group_async_ready_wrapper, _user_data_);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (_callback_ == NULL) {
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_task_complete_ = TRUE;
#line 1372 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_importers_pidgin_parse_group_data_free);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->self = _tmp0_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->group_node = group_node;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_parse_group_co (_data_);
#line 1384 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_group_finish (FolksImportersPidgin* self,
                                           GAsyncResult* _res_)
{
	FolksImportersPidginParseGroupData* _data_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 1395 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_group_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_)
{
	FolksImportersPidginParseGroupData* _data_;
#line 147 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = _user_data_;
#line 147 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_source_object_ = source_object;
#line 147 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_res_ = _res_;
#line 147 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_task_complete_ = TRUE;
#line 147 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_parse_group_co (_data_);
#line 1415 "import-pidgin.c"
}


static gboolean
folks_importers_pidgin_parse_group_co (FolksImportersPidginParseGroupData* _data_)
{
#line 137 "/run/build/folks/tools/import-pidgin.vala"
	switch (_data_->_state_) {
#line 137 "/run/build/folks/tools/import-pidgin.vala"
		case 0:
#line 1426 "import-pidgin.c"
		goto _state_0;
#line 137 "/run/build/folks/tools/import-pidgin.vala"
		case 1:
#line 1430 "import-pidgin.c"
		goto _state_1;
#line 137 "/run/build/folks/tools/import-pidgin.vala"
		case 2:
#line 1434 "import-pidgin.c"
		goto _state_2;
		default:
#line 137 "/run/build/folks/tools/import-pidgin.vala"
		g_assert_not_reached ();
#line 1439 "import-pidgin.c"
	}
	_state_0:
#line 139 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp0_ = (gchar*) xmlGetProp (_data_->group_node, (xmlChar*) "name");
#line 139 "/run/build/folks/tools/import-pidgin.vala"
	_data_->group_name = _data_->_tmp0_;
#line 1446 "import-pidgin.c"
	{
#line 141 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp1_ = _data_->group_node->children;
#line 141 "/run/build/folks/tools/import-pidgin.vala"
		_data_->iter = _data_->_tmp1_;
#line 1452 "import-pidgin.c"
		{
#line 141 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp2_ = TRUE;
#line 141 "/run/build/folks/tools/import-pidgin.vala"
			while (TRUE) {
#line 141 "/run/build/folks/tools/import-pidgin.vala"
				if (!_data_->_tmp2_) {
#line 142 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp3_ = _data_->iter;
#line 142 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp4_ = _data_->_tmp3_->next;
#line 142 "/run/build/folks/tools/import-pidgin.vala"
					_data_->iter = _data_->_tmp4_;
#line 1466 "import-pidgin.c"
				}
#line 141 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp2_ = FALSE;
#line 141 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp5_ = _data_->iter;
#line 141 "/run/build/folks/tools/import-pidgin.vala"
				if (!(_data_->_tmp5_ != NULL)) {
#line 141 "/run/build/folks/tools/import-pidgin.vala"
					break;
#line 1476 "import-pidgin.c"
				}
#line 144 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp7_ = _data_->iter;
#line 144 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp8_ = _data_->_tmp7_->type;
#line 144 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp8_ != XML_ELEMENT_NODE) {
#line 144 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp6_ = TRUE;
#line 1486 "import-pidgin.c"
				} else {
#line 144 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp9_ = _data_->iter;
#line 144 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp10_ = _data_->_tmp9_->name;
#line 144 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp6_ = g_strcmp0 (_data_->_tmp10_, "contact") != 0;
#line 1494 "import-pidgin.c"
				}
#line 144 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp6_) {
#line 145 "/run/build/folks/tools/import-pidgin.vala"
					continue;
#line 1500 "import-pidgin.c"
				}
#line 147 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp11_ = _data_->iter;
#line 147 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_state_ = 1;
#line 147 "/run/build/folks/tools/import-pidgin.vala"
				folks_importers_pidgin_parse_contact (_data_->self, _data_->_tmp11_, folks_importers_pidgin_parse_group_ready, _data_);
#line 147 "/run/build/folks/tools/import-pidgin.vala"
				return FALSE;
#line 1510 "import-pidgin.c"
				_state_1:
#line 147 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp12_ = folks_importers_pidgin_parse_contact_finish (_data_->self, _data_->_res_);
#line 147 "/run/build/folks/tools/import-pidgin.vala"
				_data_->persona = _data_->_tmp12_;
#line 151 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp14_ = _data_->persona;
#line 151 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp14_ == NULL) {
#line 151 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp13_ = TRUE;
#line 1522 "import-pidgin.c"
				} else {
#line 151 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp15_ = _data_->persona;
#line 151 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp13_ = !G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp15_, FOLKS_TYPE_GROUP_DETAILS);
#line 1528 "import-pidgin.c"
				}
#line 151 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp13_) {
#line 152 "/run/build/folks/tools/import-pidgin.vala"
					_g_object_unref0 (_data_->persona);
#line 152 "/run/build/folks/tools/import-pidgin.vala"
					continue;
#line 1536 "import-pidgin.c"
				}
				{
#line 156 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp16_ = _data_->persona;
#line 156 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp17_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp16_, FOLKS_TYPE_GROUP_DETAILS, FolksGroupDetails));
#line 156 "/run/build/folks/tools/import-pidgin.vala"
					_data_->group_details = _data_->_tmp17_;
#line 157 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp18_ = _data_->group_details;
#line 157 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp19_ = _data_->group_name;
#line 157 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_state_ = 2;
#line 157 "/run/build/folks/tools/import-pidgin.vala"
					folks_group_details_change_group (_data_->_tmp18_, _data_->_tmp19_, TRUE, folks_importers_pidgin_parse_group_ready, _data_);
#line 157 "/run/build/folks/tools/import-pidgin.vala"
					return FALSE;
#line 1555 "import-pidgin.c"
					_state_2:
#line 157 "/run/build/folks/tools/import-pidgin.vala"
					folks_group_details_change_group_finish (_data_->_tmp18_, _data_->_res_, &_data_->_inner_error_);
#line 157 "/run/build/folks/tools/import-pidgin.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 157 "/run/build/folks/tools/import-pidgin.vala"
						_g_object_unref0 (_data_->group_details);
#line 1563 "import-pidgin.c"
						goto __catch6_g_error;
					}
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					_g_object_unref0 (_data_->group_details);
#line 1568 "import-pidgin.c"
				}
				goto __finally6;
				__catch6_g_error:
				{
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					_data_->e = _data_->_inner_error_;
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_inner_error_ = NULL;
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp20_ = stderr;
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp21_ = g_strconcat (_ ("Error changing group of contact ‘%s’: %s"), "\n", NULL);
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp22_ = _data_->_tmp21_;
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp23_ = _data_->persona;
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp24_ = folks_persona_get_iid (_data_->_tmp23_);
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp25_ = _data_->_tmp24_;
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp26_ = _data_->e;
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp27_ = _data_->_tmp26_->message;
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					fprintf (_data_->_tmp20_, _data_->_tmp22_, _data_->_tmp25_, _data_->_tmp27_);
#line 161 "/run/build/folks/tools/import-pidgin.vala"
					_g_free0 (_data_->_tmp22_);
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					_g_error_free0 (_data_->e);
#line 1599 "import-pidgin.c"
				}
				__finally6:
#line 154 "/run/build/folks/tools/import-pidgin.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					_g_object_unref0 (_data_->persona);
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					_g_free0 (_data_->group_name);
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					g_clear_error (&_data_->_inner_error_);
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					g_object_unref (_data_->_async_result);
#line 154 "/run/build/folks/tools/import-pidgin.vala"
					return FALSE;
#line 1616 "import-pidgin.c"
				}
#line 141 "/run/build/folks/tools/import-pidgin.vala"
				_g_object_unref0 (_data_->persona);
#line 1620 "import-pidgin.c"
			}
		}
	}
#line 137 "/run/build/folks/tools/import-pidgin.vala"
	_g_free0 (_data_->group_name);
#line 137 "/run/build/folks/tools/import-pidgin.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 137 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_state_ != 0) {
#line 137 "/run/build/folks/tools/import-pidgin.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 137 "/run/build/folks/tools/import-pidgin.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1634 "import-pidgin.c"
		}
	}
#line 137 "/run/build/folks/tools/import-pidgin.vala"
	g_object_unref (_data_->_async_result);
#line 137 "/run/build/folks/tools/import-pidgin.vala"
	return FALSE;
#line 1641 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_contact_data_free (gpointer _data)
{
	FolksImportersPidginParseContactData* _data_;
	_data_ = _data;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->result);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->self);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_slice_free (FolksImportersPidginParseContactData, _data_);
#line 1656 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_contact_async_ready_wrapper (GObject *source_object,
                                                          GAsyncResult *res,
                                                          void *user_data)
{
	FolksImportersPidginParseContactData* _task_data_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (_task_data_->_callback_ != NULL) {
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 1672 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_task_data_->_task_complete_ = TRUE;
#line 1676 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_contact (FolksImportersPidgin* self,
                                      xmlNode* contact_node,
                                      GAsyncReadyCallback _callback_,
                                      gpointer _user_data_)
{
	FolksImportersPidginParseContactData* _data_;
	FolksImportersPidgin* _tmp0_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = g_slice_new0 (FolksImportersPidginParseContactData);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_callback_ = _callback_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_importers_pidgin_parse_contact_async_ready_wrapper, _user_data_);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	if (_callback_ == NULL) {
#line 27 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_task_complete_ = TRUE;
#line 1698 "import-pidgin.c"
	}
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_importers_pidgin_parse_contact_data_free);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->self = _tmp0_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->contact_node = contact_node;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_parse_contact_co (_data_);
#line 1710 "import-pidgin.c"
}


static FolksPersona*
folks_importers_pidgin_parse_contact_finish (FolksImportersPidgin* self,
                                             GAsyncResult* _res_)
{
	FolksPersona* result;
	FolksImportersPidginParseContactData* _data_;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	result = _data_->result;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	_data_->result = NULL;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	return result;
#line 1728 "import-pidgin.c"
}


static void
_g_free0_ (gpointer var)
{
#line 227 "/run/build/folks/tools/import-pidgin.vala"
	var = (g_free (var), NULL);
#line 1737 "import-pidgin.c"
}


static void
_vala_GValue_free (GValue* self)
{
#line 227 "/run/build/folks/tools/import-pidgin.vala"
	g_value_unset (self);
#line 227 "/run/build/folks/tools/import-pidgin.vala"
	g_free (self);
#line 1748 "import-pidgin.c"
}


static void
__vala_GValue_free0_ (gpointer var)
{
#line 227 "/run/build/folks/tools/import-pidgin.vala"
	(var == NULL) ? NULL : (var = (_vala_GValue_free (var), NULL));
#line 1757 "import-pidgin.c"
}


static GValue*
_g_value_dup (GValue* self)
{
#line 230 "/run/build/folks/tools/import-pidgin.vala"
	return g_boxed_copy (G_TYPE_VALUE, self);
#line 1766 "import-pidgin.c"
}


static gpointer
__g_value_dup0 (gpointer self)
{
#line 230 "/run/build/folks/tools/import-pidgin.vala"
	return self ? _g_value_dup (self) : NULL;
#line 1775 "import-pidgin.c"
}


static void
folks_importers_pidgin_parse_contact_ready (GObject* source_object,
                                            GAsyncResult* _res_,
                                            gpointer _user_data_)
{
	FolksImportersPidginParseContactData* _data_;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
	_data_ = _user_data_;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_source_object_ = source_object;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_res_ = _res_;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_task_complete_ = TRUE;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_parse_contact_co (_data_);
#line 1795 "import-pidgin.c"
}


static gboolean
folks_importers_pidgin_parse_contact_co (FolksImportersPidginParseContactData* _data_)
{
#line 170 "/run/build/folks/tools/import-pidgin.vala"
	switch (_data_->_state_) {
#line 170 "/run/build/folks/tools/import-pidgin.vala"
		case 0:
#line 1806 "import-pidgin.c"
		goto _state_0;
#line 170 "/run/build/folks/tools/import-pidgin.vala"
		case 1:
#line 1810 "import-pidgin.c"
		goto _state_1;
		default:
#line 170 "/run/build/folks/tools/import-pidgin.vala"
		g_assert_not_reached ();
#line 1815 "import-pidgin.c"
	}
	_state_0:
#line 172 "/run/build/folks/tools/import-pidgin.vala"
	_data_->alias = NULL;
#line 173 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp0_ = gee_hash_multi_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_IM_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 173 "/run/build/folks/tools/import-pidgin.vala"
	_data_->im_addresses = _data_->_tmp0_;
#line 174 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp1_ = g_strdup ("");
#line 174 "/run/build/folks/tools/import-pidgin.vala"
	_data_->im_address_string = _data_->_tmp1_;
#line 1828 "import-pidgin.c"
	{
#line 177 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp2_ = _data_->contact_node->children;
#line 177 "/run/build/folks/tools/import-pidgin.vala"
		_data_->iter = _data_->_tmp2_;
#line 1834 "import-pidgin.c"
		{
#line 177 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp3_ = TRUE;
#line 177 "/run/build/folks/tools/import-pidgin.vala"
			while (TRUE) {
#line 177 "/run/build/folks/tools/import-pidgin.vala"
				if (!_data_->_tmp3_) {
#line 178 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp4_ = _data_->iter;
#line 178 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp5_ = _data_->_tmp4_->next;
#line 178 "/run/build/folks/tools/import-pidgin.vala"
					_data_->iter = _data_->_tmp5_;
#line 1848 "import-pidgin.c"
				}
#line 177 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp3_ = FALSE;
#line 177 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp6_ = _data_->iter;
#line 177 "/run/build/folks/tools/import-pidgin.vala"
				if (!(_data_->_tmp6_ != NULL)) {
#line 177 "/run/build/folks/tools/import-pidgin.vala"
					break;
#line 1858 "import-pidgin.c"
				}
#line 180 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp8_ = _data_->iter;
#line 180 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp9_ = _data_->_tmp8_->type;
#line 180 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp9_ != XML_ELEMENT_NODE) {
#line 180 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp7_ = TRUE;
#line 1868 "import-pidgin.c"
				} else {
#line 180 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp10_ = _data_->iter;
#line 180 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp11_ = _data_->_tmp10_->name;
#line 180 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp7_ = g_strcmp0 (_data_->_tmp11_, "buddy") != 0;
#line 1876 "import-pidgin.c"
				}
#line 180 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp7_) {
#line 181 "/run/build/folks/tools/import-pidgin.vala"
					continue;
#line 1882 "import-pidgin.c"
				}
#line 183 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp12_ = _data_->iter;
#line 183 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp13_ = (gchar*) xmlGetProp (_data_->_tmp12_, (xmlChar*) "proto");
#line 183 "/run/build/folks/tools/import-pidgin.vala"
				_data_->blist_protocol = _data_->_tmp13_;
#line 184 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp14_ = _data_->blist_protocol;
#line 184 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp14_ == NULL) {
#line 185 "/run/build/folks/tools/import-pidgin.vala"
					_g_free0 (_data_->blist_protocol);
#line 185 "/run/build/folks/tools/import-pidgin.vala"
					continue;
#line 1898 "import-pidgin.c"
				}
#line 187 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp15_ = _data_->blist_protocol;
#line 187 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp16_ = folks_importers_pidgin_blist_protocol_to_tp_protocol (_data_->self, _data_->_tmp15_);
#line 187 "/run/build/folks/tools/import-pidgin.vala"
				_data_->tp_protocol = _data_->_tmp16_;
#line 189 "/run/build/folks/tools/import-pidgin.vala"
				_data_->_tmp17_ = _data_->tp_protocol;
#line 189 "/run/build/folks/tools/import-pidgin.vala"
				if (_data_->_tmp17_ == NULL) {
#line 190 "/run/build/folks/tools/import-pidgin.vala"
					_g_free0 (_data_->tp_protocol);
#line 190 "/run/build/folks/tools/import-pidgin.vala"
					_g_free0 (_data_->blist_protocol);
#line 190 "/run/build/folks/tools/import-pidgin.vala"
					continue;
#line 1916 "import-pidgin.c"
				}
				{
#line 193 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp18_ = _data_->iter;
#line 193 "/run/build/folks/tools/import-pidgin.vala"
					_data_->_tmp19_ = _data_->_tmp18_->children;
#line 193 "/run/build/folks/tools/import-pidgin.vala"
					_data_->subiter = _data_->_tmp19_;
#line 1925 "import-pidgin.c"
					{
#line 193 "/run/build/folks/tools/import-pidgin.vala"
						_data_->_tmp20_ = TRUE;
#line 193 "/run/build/folks/tools/import-pidgin.vala"
						while (TRUE) {
#line 193 "/run/build/folks/tools/import-pidgin.vala"
							if (!_data_->_tmp20_) {
#line 194 "/run/build/folks/tools/import-pidgin.vala"
								_data_->_tmp21_ = _data_->subiter;
#line 194 "/run/build/folks/tools/import-pidgin.vala"
								_data_->_tmp22_ = _data_->_tmp21_->next;
#line 194 "/run/build/folks/tools/import-pidgin.vala"
								_data_->subiter = _data_->_tmp22_;
#line 1939 "import-pidgin.c"
							}
#line 193 "/run/build/folks/tools/import-pidgin.vala"
							_data_->_tmp20_ = FALSE;
#line 193 "/run/build/folks/tools/import-pidgin.vala"
							_data_->_tmp23_ = _data_->subiter;
#line 193 "/run/build/folks/tools/import-pidgin.vala"
							if (!(_data_->_tmp23_ != NULL)) {
#line 193 "/run/build/folks/tools/import-pidgin.vala"
								break;
#line 1949 "import-pidgin.c"
							}
#line 196 "/run/build/folks/tools/import-pidgin.vala"
							_data_->_tmp24_ = _data_->subiter;
#line 196 "/run/build/folks/tools/import-pidgin.vala"
							_data_->_tmp25_ = _data_->_tmp24_->type;
#line 196 "/run/build/folks/tools/import-pidgin.vala"
							if (_data_->_tmp25_ != XML_ELEMENT_NODE) {
#line 197 "/run/build/folks/tools/import-pidgin.vala"
								continue;
#line 1959 "import-pidgin.c"
							}
#line 199 "/run/build/folks/tools/import-pidgin.vala"
							_data_->_tmp26_ = _data_->subiter;
#line 199 "/run/build/folks/tools/import-pidgin.vala"
							_data_->_tmp27_ = _data_->_tmp26_->name;
#line 199 "/run/build/folks/tools/import-pidgin.vala"
							if (g_strcmp0 (_data_->_tmp27_, "alias") == 0) {
#line 200 "/run/build/folks/tools/import-pidgin.vala"
								_data_->_tmp28_ = _data_->subiter;
#line 200 "/run/build/folks/tools/import-pidgin.vala"
								_data_->_tmp29_ = (gchar*) xmlNodeGetContent (_data_->_tmp28_);
#line 200 "/run/build/folks/tools/import-pidgin.vala"
								_g_free0 (_data_->alias);
#line 200 "/run/build/folks/tools/import-pidgin.vala"
								_data_->alias = _data_->_tmp29_;
#line 1975 "import-pidgin.c"
							} else {
#line 201 "/run/build/folks/tools/import-pidgin.vala"
								_data_->_tmp30_ = _data_->subiter;
#line 201 "/run/build/folks/tools/import-pidgin.vala"
								_data_->_tmp31_ = _data_->_tmp30_->name;
#line 201 "/run/build/folks/tools/import-pidgin.vala"
								if (g_strcmp0 (_data_->_tmp31_, "name") == 0) {
#line 206 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp32_ = _data_->subiter;
#line 206 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp33_ = (gchar*) xmlNodeGetContent (_data_->_tmp32_);
#line 206 "/run/build/folks/tools/import-pidgin.vala"
									_data_->im_address = _data_->_tmp33_;
#line 207 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp34_ = _data_->im_addresses;
#line 207 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp35_ = _data_->tp_protocol;
#line 207 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp36_ = _data_->im_address;
#line 207 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp37_ = folks_im_field_details_new (_data_->_tmp36_, NULL);
#line 207 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp38_ = _data_->_tmp37_;
#line 207 "/run/build/folks/tools/import-pidgin.vala"
									gee_multi_map_set ((GeeMultiMap*) _data_->_tmp34_, _data_->_tmp35_, _data_->_tmp38_);
#line 207 "/run/build/folks/tools/import-pidgin.vala"
									_g_object_unref0 (_data_->_tmp38_);
#line 209 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp39_ = _data_->im_address_string;
#line 209 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp40_ = _data_->im_address;
#line 209 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp41_ = g_strdup_printf ("    %s\n", _data_->_tmp40_);
#line 209 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp42_ = _data_->_tmp41_;
#line 209 "/run/build/folks/tools/import-pidgin.vala"
									_data_->_tmp43_ = g_strconcat (_data_->_tmp39_, _data_->_tmp42_, NULL);
#line 209 "/run/build/folks/tools/import-pidgin.vala"
									_g_free0 (_data_->im_address_string);
#line 209 "/run/build/folks/tools/import-pidgin.vala"
									_data_->im_address_string = _data_->_tmp43_;
#line 209 "/run/build/folks/tools/import-pidgin.vala"
									_g_free0 (_data_->_tmp42_);
#line 201 "/run/build/folks/tools/import-pidgin.vala"
									_g_free0 (_data_->im_address);
#line 2021 "import-pidgin.c"
								}
							}
						}
					}
				}
#line 177 "/run/build/folks/tools/import-pidgin.vala"
				_g_free0 (_data_->tp_protocol);
#line 177 "/run/build/folks/tools/import-pidgin.vala"
				_g_free0 (_data_->blist_protocol);
#line 2031 "import-pidgin.c"
			}
		}
	}
#line 215 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp45_ = _data_->im_addresses;
#line 215 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp46_ = gee_multi_map_get_size ((GeeMultiMap*) _data_->_tmp45_);
#line 215 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp47_ = _data_->_tmp46_;
#line 215 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp47_ < 2) {
#line 216 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp50_ = _data_->alias;
#line 216 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_tmp50_ == NULL) {
#line 216 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp49_ = TRUE;
#line 2049 "import-pidgin.c"
		} else {
#line 216 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp51_ = _data_->alias;
#line 216 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp52_ = string_strip (_data_->_tmp51_);
#line 216 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp53_ = _data_->_tmp52_;
#line 216 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp49_ = g_strcmp0 (_data_->_tmp53_, "") == 0;
#line 216 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->_tmp53_);
#line 2061 "import-pidgin.c"
		}
#line 216 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_tmp49_) {
#line 216 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp48_ = TRUE;
#line 2067 "import-pidgin.c"
		} else {
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp54_ = _data_->alias;
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp55_ = string_strip (_data_->_tmp54_);
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp56_ = _data_->_tmp55_;
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp57_ = _data_->im_address_string;
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp58_ = string_strip (_data_->_tmp57_);
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp59_ = _data_->_tmp58_;
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_data_->_tmp48_ = g_strcmp0 (_data_->_tmp56_, _data_->_tmp59_) == 0;
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->_tmp59_);
#line 217 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->_tmp56_);
#line 2087 "import-pidgin.c"
		}
#line 216 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp44_ = _data_->_tmp48_;
#line 2091 "import-pidgin.c"
	} else {
#line 215 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp44_ = FALSE;
#line 2095 "import-pidgin.c"
	}
#line 215 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp44_) {
#line 219 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp60_ = stdout;
#line 219 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp61_ = _data_->im_address_string;
#line 219 "/run/build/folks/tools/import-pidgin.vala"
		fprintf (_data_->_tmp60_, _ ("Ignoring buddy with no alias and only one IM address:\n%s"), _data_->_tmp61_);
#line 223 "/run/build/folks/tools/import-pidgin.vala"
		_data_->result = NULL;
#line 223 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->im_address_string);
#line 223 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->im_addresses);
#line 223 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->alias);
#line 223 "/run/build/folks/tools/import-pidgin.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 223 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_state_ != 0) {
#line 223 "/run/build/folks/tools/import-pidgin.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 223 "/run/build/folks/tools/import-pidgin.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2121 "import-pidgin.c"
			}
		}
#line 223 "/run/build/folks/tools/import-pidgin.vala"
		g_object_unref (_data_->_async_result);
#line 223 "/run/build/folks/tools/import-pidgin.vala"
		return FALSE;
#line 2128 "import-pidgin.c"
	}
#line 227 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp62_ = g_str_hash;
#line 227 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp63_ = g_str_equal;
#line 227 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp64_ = g_hash_table_new_full (_data_->_tmp62_, _data_->_tmp63_, _g_free0_, __vala_GValue_free0_);
#line 227 "/run/build/folks/tools/import-pidgin.vala"
	_data_->details = _data_->_tmp64_;
#line 228 "/run/build/folks/tools/import-pidgin.vala"
	memset (&_data_->_tmp65_, 0, sizeof (GValue));
#line 228 "/run/build/folks/tools/import-pidgin.vala"
	g_value_init (&_data_->_tmp65_, GEE_TYPE_MULTI_MAP);
#line 228 "/run/build/folks/tools/import-pidgin.vala"
	_data_->im_addresses_value = _data_->_tmp65_;
#line 229 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp66_ = _data_->im_addresses;
#line 229 "/run/build/folks/tools/import-pidgin.vala"
	g_value_set_object (&_data_->im_addresses_value, (GObject*) _data_->_tmp66_);
#line 230 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp67_ = _data_->details;
#line 230 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp68_ = g_strdup ("im-addresses");
#line 230 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp69_ = _data_->im_addresses_value;
#line 230 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp70_ = _data_->_tmp69_;
#line 230 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp71_ = __g_value_dup0 (&_data_->_tmp70_);
#line 230 "/run/build/folks/tools/import-pidgin.vala"
	g_hash_table_insert (_data_->_tmp67_, _data_->_tmp68_, _data_->_tmp71_);
#line 2160 "import-pidgin.c"
	{
#line 236 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp73_ = _data_->self->priv->destination_store;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp74_ = _data_->details;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_state_ = 1;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
		folks_persona_store_add_persona_from_details (_data_->_tmp73_, _data_->_tmp74_, folks_importers_pidgin_parse_contact_ready, _data_);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
		return FALSE;
#line 2172 "import-pidgin.c"
		_state_1:
#line 236 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp75_ = folks_persona_store_add_persona_from_details_finish (_data_->_tmp73_, _data_->_res_, &_data_->_inner_error_);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp72_ = _data_->_tmp75_;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			if (_data_->_inner_error_->domain == FOLKS_PERSONA_STORE_ERROR) {
#line 2182 "import-pidgin.c"
				goto __catch7_folks_persona_store_error;
			}
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->persona);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			G_IS_VALUE (&_data_->im_addresses_value) ? (g_value_unset (&_data_->im_addresses_value), NULL) : NULL;
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			_g_hash_table_unref0 (_data_->details);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->im_address_string);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			_g_object_unref0 (_data_->im_addresses);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (_data_->alias);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			g_clear_error (&_data_->_inner_error_);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			g_object_unref (_data_->_async_result);
#line 236 "/run/build/folks/tools/import-pidgin.vala"
			return FALSE;
#line 2205 "import-pidgin.c"
		}
#line 235 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp76_ = _data_->_tmp72_;
#line 235 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp72_ = NULL;
#line 235 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->persona);
#line 235 "/run/build/folks/tools/import-pidgin.vala"
		_data_->persona = _data_->_tmp76_;
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->_tmp72_);
#line 2217 "import-pidgin.c"
	}
	goto __finally7;
	__catch7_folks_persona_store_error:
	{
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		_data_->e = _data_->_inner_error_;
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_inner_error_ = NULL;
#line 243 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp77_ = stderr;
#line 243 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp78_ = _data_->alias;
#line 243 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp79_ = _data_->im_address_string;
#line 243 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp80_ = _data_->e;
#line 243 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp81_ = _data_->_tmp80_->message;
#line 243 "/run/build/folks/tools/import-pidgin.vala"
		fprintf (_data_->_tmp77_, _ ("Failed to create new contact for buddy with alias ‘%s’ and IM addresse" \
"s:\n" \
"%s\n" \
"Error: %s\n"), _data_->_tmp78_, _data_->_tmp79_, _data_->_tmp81_);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		_data_->result = NULL;
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		_g_error_free0 (_data_->e);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->persona);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		G_IS_VALUE (&_data_->im_addresses_value) ? (g_value_unset (&_data_->im_addresses_value), NULL) : NULL;
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		_g_hash_table_unref0 (_data_->details);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->im_address_string);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->im_addresses);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->alias);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		if (_data_->_state_ != 0) {
#line 246 "/run/build/folks/tools/import-pidgin.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 246 "/run/build/folks/tools/import-pidgin.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2262 "import-pidgin.c"
			}
		}
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		g_object_unref (_data_->_async_result);
#line 246 "/run/build/folks/tools/import-pidgin.vala"
		return FALSE;
#line 2269 "import-pidgin.c"
	}
	__finally7:
#line 233 "/run/build/folks/tools/import-pidgin.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->persona);
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		G_IS_VALUE (&_data_->im_addresses_value) ? (g_value_unset (&_data_->im_addresses_value), NULL) : NULL;
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		_g_hash_table_unref0 (_data_->details);
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->im_address_string);
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		_g_object_unref0 (_data_->im_addresses);
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (_data_->alias);
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		g_clear_error (&_data_->_inner_error_);
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		g_object_unref (_data_->_async_result);
#line 233 "/run/build/folks/tools/import-pidgin.vala"
		return FALSE;
#line 2294 "import-pidgin.c"
	}
#line 250 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp83_ = _data_->alias;
#line 250 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp83_ != NULL) {
#line 250 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp84_ = _data_->persona;
#line 250 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp82_ = G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp84_, FOLKS_TYPE_ALIAS_DETAILS);
#line 2304 "import-pidgin.c"
	} else {
#line 250 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp82_ = FALSE;
#line 2308 "import-pidgin.c"
	}
#line 250 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_tmp82_) {
#line 251 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp85_ = _data_->persona;
#line 251 "/run/build/folks/tools/import-pidgin.vala"
		_data_->_tmp86_ = _data_->alias;
#line 251 "/run/build/folks/tools/import-pidgin.vala"
		folks_alias_details_set_alias (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp85_, FOLKS_TYPE_ALIAS_DETAILS, FolksAliasDetails), _data_->_tmp86_);
#line 2318 "import-pidgin.c"
	}
#line 254 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp87_ = stdout;
#line 254 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp88_ = _data_->persona;
#line 254 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp89_ = folks_persona_get_uid (_data_->_tmp88_);
#line 254 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp90_ = _data_->_tmp89_;
#line 254 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp91_ = _data_->alias;
#line 254 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp92_ = _data_->im_address_string;
#line 254 "/run/build/folks/tools/import-pidgin.vala"
	fprintf (_data_->_tmp87_, _ ("Created contact ‘%s’ for buddy with alias ‘%s’ and IM addresses:\n" \
"%s"), _data_->_tmp90_, _data_->_tmp91_, _data_->_tmp92_);
#line 260 "/run/build/folks/tools/import-pidgin.vala"
	_data_->_tmp93_ = _data_->self->priv->persona_count;
#line 260 "/run/build/folks/tools/import-pidgin.vala"
	_data_->self->priv->persona_count = _data_->_tmp93_ + 1;
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	_data_->result = _data_->persona;
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	G_IS_VALUE (&_data_->im_addresses_value) ? (g_value_unset (&_data_->im_addresses_value), NULL) : NULL;
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	_g_hash_table_unref0 (_data_->details);
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	_g_free0 (_data_->im_address_string);
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (_data_->im_addresses);
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	_g_free0 (_data_->alias);
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	if (_data_->_state_ != 0) {
#line 262 "/run/build/folks/tools/import-pidgin.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 262 "/run/build/folks/tools/import-pidgin.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2358 "import-pidgin.c"
		}
	}
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	g_object_unref (_data_->_async_result);
#line 262 "/run/build/folks/tools/import-pidgin.vala"
	return FALSE;
#line 2365 "import-pidgin.c"
}


static glong
string_strnlen (gchar* str,
                glong maxlen)
{
	glong result = 0L;
	gchar* end = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
#line 1392 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = memchr (str, 0, (gsize) maxlen);
#line 1392 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	end = _tmp0_;
#line 1393 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = end;
#line 1393 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (_tmp1_ == NULL) {
#line 1394 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = maxlen;
#line 1394 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 2389 "import-pidgin.c"
	} else {
		gchar* _tmp2_;
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp2_ = end;
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = (glong) (_tmp2_ - str);
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 2398 "import-pidgin.c"
	}
}


static gchar*
string_substring (const gchar* self,
                  glong offset,
                  glong len)
{
	gchar* result = NULL;
	glong string_length = 0L;
	gboolean _tmp0_ = FALSE;
	glong _tmp6_;
	gchar* _tmp7_;
#line 1403 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (offset >= ((glong) 0)) {
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = len >= ((glong) 0);
#line 2419 "import-pidgin.c"
	} else {
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = FALSE;
#line 2423 "import-pidgin.c"
	}
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (_tmp0_) {
#line 1407 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		string_length = string_strnlen ((gchar*) self, offset + len);
#line 2429 "import-pidgin.c"
	} else {
		gint _tmp1_;
		gint _tmp2_;
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp1_ = strlen (self);
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp2_ = _tmp1_;
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		string_length = (glong) _tmp2_;
#line 2439 "import-pidgin.c"
	}
#line 1412 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (offset < ((glong) 0)) {
#line 2443 "import-pidgin.c"
		glong _tmp3_;
#line 1413 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp3_ = string_length;
#line 1413 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		offset = _tmp3_ + offset;
#line 1414 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		g_return_val_if_fail (offset >= ((glong) 0), NULL);
#line 2451 "import-pidgin.c"
	} else {
		glong _tmp4_;
#line 1416 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp4_ = string_length;
#line 1416 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		g_return_val_if_fail (offset <= _tmp4_, NULL);
#line 2458 "import-pidgin.c"
	}
#line 1418 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (len < ((glong) 0)) {
#line 2462 "import-pidgin.c"
		glong _tmp5_;
#line 1419 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp5_ = string_length;
#line 1419 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		len = _tmp5_ - offset;
#line 2468 "import-pidgin.c"
	}
#line 1421 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp6_ = string_length;
#line 1421 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail ((offset + len) <= _tmp6_, NULL);
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp7_ = g_strndup (((gchar*) self) + offset, (gsize) len);
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp7_;
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 2480 "import-pidgin.c"
}


static gchar*
folks_importers_pidgin_blist_protocol_to_tp_protocol (FolksImportersPidgin* self,
                                                      const gchar* blist_protocol)
{
	gchar* result = NULL;
	gchar* tp_protocol = NULL;
	gchar* _tmp0_;
	const gchar* _tmp2_;
#line 265 "/run/build/folks/tools/import-pidgin.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 265 "/run/build/folks/tools/import-pidgin.vala"
	g_return_val_if_fail (blist_protocol != NULL, NULL);
#line 267 "/run/build/folks/tools/import-pidgin.vala"
	_tmp0_ = g_strdup (blist_protocol);
#line 267 "/run/build/folks/tools/import-pidgin.vala"
	tp_protocol = _tmp0_;
#line 268 "/run/build/folks/tools/import-pidgin.vala"
	if (g_str_has_prefix (blist_protocol, "prpl-")) {
#line 2502 "import-pidgin.c"
		gchar* _tmp1_;
#line 269 "/run/build/folks/tools/import-pidgin.vala"
		_tmp1_ = string_substring (blist_protocol, (glong) 5, (glong) -1);
#line 269 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (tp_protocol);
#line 269 "/run/build/folks/tools/import-pidgin.vala"
		tp_protocol = _tmp1_;
#line 2510 "import-pidgin.c"
	}
#line 275 "/run/build/folks/tools/import-pidgin.vala"
	_tmp2_ = tp_protocol;
#line 275 "/run/build/folks/tools/import-pidgin.vala"
	if (g_strcmp0 (_tmp2_, "bonjour") == 0) {
#line 2516 "import-pidgin.c"
		gchar* _tmp3_;
#line 276 "/run/build/folks/tools/import-pidgin.vala"
		_tmp3_ = g_strdup ("local-xmpp");
#line 276 "/run/build/folks/tools/import-pidgin.vala"
		_g_free0 (tp_protocol);
#line 276 "/run/build/folks/tools/import-pidgin.vala"
		tp_protocol = _tmp3_;
#line 2524 "import-pidgin.c"
	} else {
		const gchar* _tmp4_;
#line 277 "/run/build/folks/tools/import-pidgin.vala"
		_tmp4_ = tp_protocol;
#line 277 "/run/build/folks/tools/import-pidgin.vala"
		if (g_strcmp0 (_tmp4_, "novell") == 0) {
#line 2531 "import-pidgin.c"
			gchar* _tmp5_;
#line 278 "/run/build/folks/tools/import-pidgin.vala"
			_tmp5_ = g_strdup ("groupwise");
#line 278 "/run/build/folks/tools/import-pidgin.vala"
			_g_free0 (tp_protocol);
#line 278 "/run/build/folks/tools/import-pidgin.vala"
			tp_protocol = _tmp5_;
#line 2539 "import-pidgin.c"
		} else {
			const gchar* _tmp6_;
#line 279 "/run/build/folks/tools/import-pidgin.vala"
			_tmp6_ = tp_protocol;
#line 279 "/run/build/folks/tools/import-pidgin.vala"
			if (g_strcmp0 (_tmp6_, "gg") == 0) {
#line 2546 "import-pidgin.c"
				gchar* _tmp7_;
#line 280 "/run/build/folks/tools/import-pidgin.vala"
				_tmp7_ = g_strdup ("gadugadu");
#line 280 "/run/build/folks/tools/import-pidgin.vala"
				_g_free0 (tp_protocol);
#line 280 "/run/build/folks/tools/import-pidgin.vala"
				tp_protocol = _tmp7_;
#line 2554 "import-pidgin.c"
			} else {
				const gchar* _tmp8_;
#line 281 "/run/build/folks/tools/import-pidgin.vala"
				_tmp8_ = tp_protocol;
#line 281 "/run/build/folks/tools/import-pidgin.vala"
				if (g_strcmp0 (_tmp8_, "meanwhile") == 0) {
#line 2561 "import-pidgin.c"
					gchar* _tmp9_;
#line 282 "/run/build/folks/tools/import-pidgin.vala"
					_tmp9_ = g_strdup ("sametime");
#line 282 "/run/build/folks/tools/import-pidgin.vala"
					_g_free0 (tp_protocol);
#line 282 "/run/build/folks/tools/import-pidgin.vala"
					tp_protocol = _tmp9_;
#line 2569 "import-pidgin.c"
				} else {
					const gchar* _tmp10_;
#line 283 "/run/build/folks/tools/import-pidgin.vala"
					_tmp10_ = tp_protocol;
#line 283 "/run/build/folks/tools/import-pidgin.vala"
					if (g_strcmp0 (_tmp10_, "simple") == 0) {
#line 2576 "import-pidgin.c"
						gchar* _tmp11_;
#line 284 "/run/build/folks/tools/import-pidgin.vala"
						_tmp11_ = g_strdup ("sip");
#line 284 "/run/build/folks/tools/import-pidgin.vala"
						_g_free0 (tp_protocol);
#line 284 "/run/build/folks/tools/import-pidgin.vala"
						tp_protocol = _tmp11_;
#line 2584 "import-pidgin.c"
					}
				}
			}
		}
	}
#line 286 "/run/build/folks/tools/import-pidgin.vala"
	result = tp_protocol;
#line 286 "/run/build/folks/tools/import-pidgin.vala"
	return result;
#line 2594 "import-pidgin.c"
}


FolksImportersPidgin*
folks_importers_pidgin_construct (GType object_type)
{
	FolksImportersPidgin * self = NULL;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	self = (FolksImportersPidgin*) folks_importer_construct (object_type);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	return self;
#line 2606 "import-pidgin.c"
}


FolksImportersPidgin*
folks_importers_pidgin_new (void)
{
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	return folks_importers_pidgin_construct (FOLKS_IMPORTERS_TYPE_PIDGIN);
#line 2615 "import-pidgin.c"
}


static void
folks_importers_pidgin_class_init (FolksImportersPidginClass * klass)
{
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	folks_importers_pidgin_parent_class = g_type_class_peek_parent (klass);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	g_type_class_add_private (klass, sizeof (FolksImportersPidginPrivate));
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	((FolksImporterClass *) klass)->import = (void (*) (FolksImporter *, FolksPersonaStore*, const gchar*, GAsyncReadyCallback, gpointer)) folks_importers_pidgin_real_import;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	((FolksImporterClass *) klass)->import_finish = (guint (*) (FolksImporter *, GAsyncResult*, GError**)) folks_importers_pidgin_real_import_finish;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	G_OBJECT_CLASS (klass)->finalize = folks_importers_pidgin_finalize;
#line 2632 "import-pidgin.c"
}


static void
folks_importers_pidgin_instance_init (FolksImportersPidgin * self)
{
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	self->priv = FOLKS_IMPORTERS_PIDGIN_GET_PRIVATE (self);
#line 30 "/run/build/folks/tools/import-pidgin.vala"
	self->priv->persona_count = (guint) 0;
#line 2643 "import-pidgin.c"
}


static void
folks_importers_pidgin_finalize (GObject * obj)
{
	FolksImportersPidgin * self;
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_IMPORTERS_TYPE_PIDGIN, FolksImportersPidgin);
#line 29 "/run/build/folks/tools/import-pidgin.vala"
	_g_object_unref0 (self->priv->destination_store);
#line 27 "/run/build/folks/tools/import-pidgin.vala"
	G_OBJECT_CLASS (folks_importers_pidgin_parent_class)->finalize (obj);
#line 2657 "import-pidgin.c"
}


GType
folks_importers_pidgin_get_type (void)
{
	static volatile gsize folks_importers_pidgin_type_id__volatile = 0;
	if (g_once_init_enter (&folks_importers_pidgin_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksImportersPidginClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_importers_pidgin_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksImportersPidgin), 0, (GInstanceInitFunc) folks_importers_pidgin_instance_init, NULL };
		GType folks_importers_pidgin_type_id;
		folks_importers_pidgin_type_id = g_type_register_static (FOLKS_TYPE_IMPORTER, "FolksImportersPidgin", &g_define_type_info, 0);
		g_once_init_leave (&folks_importers_pidgin_type_id__volatile, folks_importers_pidgin_type_id);
	}
	return folks_importers_pidgin_type_id__volatile;
}



