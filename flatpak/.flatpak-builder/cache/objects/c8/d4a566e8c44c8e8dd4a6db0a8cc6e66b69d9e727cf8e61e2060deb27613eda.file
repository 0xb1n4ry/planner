/* postal-address-details.c generated by valac 0.40.11, the Vala compiler
 * generated from postal-address-details.vala, do not modify */

/*
 * Copyright (C) 2010 Collabora Ltd.
 * Copyright (C) 2011 Philip Withnall
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors:
 *       Marco Barisione <marco.barisione@collabora.co.uk>
 *       Raul Gutierrez Segales <raul.gutierrez.segales@collabora.co.uk>
 *       Philip Withnall <philip@tecnocode.co.uk>
 */


#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib/gi18n-lib.h>
#include <gee.h>
#include <gio/gio.h>


#define FOLKS_TYPE_POSTAL_ADDRESS (folks_postal_address_get_type ())
#define FOLKS_POSTAL_ADDRESS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddress))
#define FOLKS_POSTAL_ADDRESS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddressClass))
#define FOLKS_IS_POSTAL_ADDRESS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_POSTAL_ADDRESS))
#define FOLKS_IS_POSTAL_ADDRESS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_POSTAL_ADDRESS))
#define FOLKS_POSTAL_ADDRESS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddressClass))

typedef struct _FolksPostalAddress FolksPostalAddress;
typedef struct _FolksPostalAddressClass FolksPostalAddressClass;
typedef struct _FolksPostalAddressPrivate FolksPostalAddressPrivate;
enum  {
	FOLKS_POSTAL_ADDRESS_0_PROPERTY,
	FOLKS_POSTAL_ADDRESS_PO_BOX_PROPERTY,
	FOLKS_POSTAL_ADDRESS_EXTENSION_PROPERTY,
	FOLKS_POSTAL_ADDRESS_STREET_PROPERTY,
	FOLKS_POSTAL_ADDRESS_LOCALITY_PROPERTY,
	FOLKS_POSTAL_ADDRESS_REGION_PROPERTY,
	FOLKS_POSTAL_ADDRESS_POSTAL_CODE_PROPERTY,
	FOLKS_POSTAL_ADDRESS_COUNTRY_PROPERTY,
	FOLKS_POSTAL_ADDRESS_ADDRESS_FORMAT_PROPERTY,
	FOLKS_POSTAL_ADDRESS_UID_PROPERTY,
	FOLKS_POSTAL_ADDRESS_NUM_PROPERTIES
};
static GParamSpec* folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))

#define FOLKS_TYPE_ABSTRACT_FIELD_DETAILS (folks_abstract_field_details_get_type ())
#define FOLKS_ABSTRACT_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS, FolksAbstractFieldDetails))
#define FOLKS_ABSTRACT_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS, FolksAbstractFieldDetailsClass))
#define FOLKS_IS_ABSTRACT_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS))
#define FOLKS_IS_ABSTRACT_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS))
#define FOLKS_ABSTRACT_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS, FolksAbstractFieldDetailsClass))

typedef struct _FolksAbstractFieldDetails FolksAbstractFieldDetails;
typedef struct _FolksAbstractFieldDetailsClass FolksAbstractFieldDetailsClass;
typedef struct _FolksAbstractFieldDetailsPrivate FolksAbstractFieldDetailsPrivate;

#define FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS (folks_postal_address_field_details_get_type ())
#define FOLKS_POSTAL_ADDRESS_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetails))
#define FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetailsClass))
#define FOLKS_IS_POSTAL_ADDRESS_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS))
#define FOLKS_IS_POSTAL_ADDRESS_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS))
#define FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetailsClass))

typedef struct _FolksPostalAddressFieldDetails FolksPostalAddressFieldDetails;
typedef struct _FolksPostalAddressFieldDetailsClass FolksPostalAddressFieldDetailsClass;
typedef struct _FolksPostalAddressFieldDetailsPrivate FolksPostalAddressFieldDetailsPrivate;
enum  {
	FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_0_PROPERTY,
	FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_ID_PROPERTY,
	FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_NUM_PROPERTIES
};
static GParamSpec* folks_postal_address_field_details_properties[FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_NUM_PROPERTIES];

#define FOLKS_TYPE_POSTAL_ADDRESS_DETAILS (folks_postal_address_details_get_type ())
#define FOLKS_POSTAL_ADDRESS_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_POSTAL_ADDRESS_DETAILS, FolksPostalAddressDetails))
#define FOLKS_IS_POSTAL_ADDRESS_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_POSTAL_ADDRESS_DETAILS))
#define FOLKS_POSTAL_ADDRESS_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_POSTAL_ADDRESS_DETAILS, FolksPostalAddressDetailsIface))

typedef struct _FolksPostalAddressDetails FolksPostalAddressDetails;
typedef struct _FolksPostalAddressDetailsIface FolksPostalAddressDetailsIface;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _FolksPostalAddressDetailsChangePostalAddressesData FolksPostalAddressDetailsChangePostalAddressesData;

struct _FolksPostalAddress {
	GObject parent_instance;
	FolksPostalAddressPrivate * priv;
};

struct _FolksPostalAddressClass {
	GObjectClass parent_class;
};

struct _FolksPostalAddressPrivate {
	gchar* _po_box;
	gchar* _extension;
	gchar* _street;
	gchar* _locality;
	gchar* _region;
	gchar* _postal_code;
	gchar* _country;
	gchar* _address_format;
	gchar* _uid;
};

struct _FolksAbstractFieldDetails {
	GObject parent_instance;
	FolksAbstractFieldDetailsPrivate * priv;
};

struct _FolksAbstractFieldDetailsClass {
	GObjectClass parent_class;
	gboolean (*equal) (FolksAbstractFieldDetails* self, FolksAbstractFieldDetails* that);
	gboolean (*parameters_equal) (FolksAbstractFieldDetails* self, FolksAbstractFieldDetails* that);
	gboolean (*values_equal) (FolksAbstractFieldDetails* self, FolksAbstractFieldDetails* that);
	guint (*hash) (FolksAbstractFieldDetails* self);
	gconstpointer (*get_value) (FolksAbstractFieldDetails* self);
	void (*set_value) (FolksAbstractFieldDetails* self, gconstpointer value);
	const gchar* (*get_id) (FolksAbstractFieldDetails* self);
	void (*set_id) (FolksAbstractFieldDetails* self, const gchar* value);
	GeeMultiMap* (*get_parameters) (FolksAbstractFieldDetails* self);
	void (*set_parameters) (FolksAbstractFieldDetails* self, GeeMultiMap* value);
};

struct _FolksPostalAddressFieldDetails {
	FolksAbstractFieldDetails parent_instance;
	FolksPostalAddressFieldDetailsPrivate * priv;
};

struct _FolksPostalAddressFieldDetailsClass {
	FolksAbstractFieldDetailsClass parent_class;
};

struct _FolksPostalAddressFieldDetailsPrivate {
	gchar* _id;
};

typedef enum  {
	FOLKS_PROPERTY_ERROR_NOT_WRITEABLE,
	FOLKS_PROPERTY_ERROR_INVALID_VALUE,
	FOLKS_PROPERTY_ERROR_UNKNOWN_ERROR,
	FOLKS_PROPERTY_ERROR_UNAVAILABLE
} FolksPropertyError;
#define FOLKS_PROPERTY_ERROR folks_property_error_quark ()
struct _FolksPostalAddressDetailsIface {
	GTypeInterface parent_iface;
	void (*change_postal_addresses) (FolksPostalAddressDetails* self, GeeSet* postal_addresses, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_postal_addresses_finish) (FolksPostalAddressDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_postal_addresses) (FolksPostalAddressDetails* self);
	void (*set_postal_addresses) (FolksPostalAddressDetails* self, GeeSet* value);
};

struct _FolksPostalAddressDetailsChangePostalAddressesData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksPostalAddressDetails* self;
	GeeSet* postal_addresses;
	GError* _tmp0_;
	GError * _inner_error_;
};


static gpointer folks_postal_address_parent_class = NULL;
static gpointer folks_postal_address_field_details_parent_class = NULL;

GType folks_postal_address_get_type (void) G_GNUC_CONST;
#define FOLKS_POSTAL_ADDRESS_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddressPrivate))
FolksPostalAddress* folks_postal_address_new (const gchar* po_box,
                                              const gchar* extension,
                                              const gchar* street,
                                              const gchar* locality,
                                              const gchar* region,
                                              const gchar* postal_code,
                                              const gchar* country,
                                              const gchar* address_format,
                                              const gchar* uid);
FolksPostalAddress* folks_postal_address_construct (GType object_type,
                                                    const gchar* po_box,
                                                    const gchar* extension,
                                                    const gchar* street,
                                                    const gchar* locality,
                                                    const gchar* region,
                                                    const gchar* postal_code,
                                                    const gchar* country,
                                                    const gchar* address_format,
                                                    const gchar* uid);
gboolean folks_postal_address_is_empty (FolksPostalAddress* self);
const gchar* folks_postal_address_get_po_box (FolksPostalAddress* self);
const gchar* folks_postal_address_get_extension (FolksPostalAddress* self);
const gchar* folks_postal_address_get_street (FolksPostalAddress* self);
const gchar* folks_postal_address_get_locality (FolksPostalAddress* self);
const gchar* folks_postal_address_get_region (FolksPostalAddress* self);
const gchar* folks_postal_address_get_postal_code (FolksPostalAddress* self);
const gchar* folks_postal_address_get_country (FolksPostalAddress* self);
const gchar* folks_postal_address_get_address_format (FolksPostalAddress* self);
gboolean folks_postal_address_equal (FolksPostalAddress* self,
                                     FolksPostalAddress* with);
gchar* folks_postal_address_to_string (FolksPostalAddress* self);
void folks_postal_address_set_po_box (FolksPostalAddress* self,
                                      const gchar* value);
void folks_postal_address_set_extension (FolksPostalAddress* self,
                                         const gchar* value);
void folks_postal_address_set_street (FolksPostalAddress* self,
                                      const gchar* value);
void folks_postal_address_set_locality (FolksPostalAddress* self,
                                        const gchar* value);
void folks_postal_address_set_region (FolksPostalAddress* self,
                                      const gchar* value);
void folks_postal_address_set_postal_code (FolksPostalAddress* self,
                                           const gchar* value);
void folks_postal_address_set_country (FolksPostalAddress* self,
                                       const gchar* value);
void folks_postal_address_set_address_format (FolksPostalAddress* self,
                                              const gchar* value);
const gchar* folks_postal_address_get_uid (FolksPostalAddress* self) G_GNUC_DEPRECATED;
void folks_postal_address_set_uid (FolksPostalAddress* self,
                                   const gchar* value) G_GNUC_DEPRECATED;
static void folks_postal_address_finalize (GObject * obj);
static void _vala_folks_postal_address_get_property (GObject * object,
                                              guint property_id,
                                              GValue * value,
                                              GParamSpec * pspec);
static void _vala_folks_postal_address_set_property (GObject * object,
                                              guint property_id,
                                              const GValue * value,
                                              GParamSpec * pspec);
GType folks_abstract_field_details_get_type (void) G_GNUC_CONST;
GType folks_postal_address_field_details_get_type (void) G_GNUC_CONST;
#define FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetailsPrivate))
FolksPostalAddressFieldDetails* folks_postal_address_field_details_new (FolksPostalAddress* value,
                                                                        GeeMultiMap* parameters);
FolksPostalAddressFieldDetails* folks_postal_address_field_details_construct (GType object_type,
                                                                              FolksPostalAddress* value,
                                                                              GeeMultiMap* parameters);
static gboolean folks_postal_address_field_details_real_equal (FolksAbstractFieldDetails* base,
                                                        FolksAbstractFieldDetails* that);
gboolean folks_abstract_field_details_parameters_equal (FolksAbstractFieldDetails* self,
                                                        FolksAbstractFieldDetails* that);
gconstpointer folks_abstract_field_details_get_value (FolksAbstractFieldDetails* self);
static guint folks_postal_address_field_details_real_hash (FolksAbstractFieldDetails* base);
static GObject * folks_postal_address_field_details_constructor (GType type,
                                                          guint n_construct_properties,
                                                          GObjectConstructParam * construct_properties);
static void _folks_postal_address_field_details___lambda4_ (FolksPostalAddressFieldDetails* self,
                                                     GObject* s,
                                                     GParamSpec* p);
const gchar* folks_abstract_field_details_get_id (FolksAbstractFieldDetails* self);
void folks_abstract_field_details_set_id (FolksAbstractFieldDetails* self,
                                          const gchar* value);
static void __folks_postal_address_field_details___lambda4__g_object_notify (GObject* _sender,
                                                                      GParamSpec* pspec,
                                                                      gpointer self);
static void folks_postal_address_field_details_finalize (GObject * obj);
static void _vala_folks_postal_address_field_details_get_property (GObject * object,
                                                            guint property_id,
                                                            GValue * value,
                                                            GParamSpec * pspec);
static void _vala_folks_postal_address_field_details_set_property (GObject * object,
                                                            guint property_id,
                                                            const GValue * value,
                                                            GParamSpec * pspec);
GQuark folks_property_error_quark (void);
GType folks_postal_address_details_get_type (void) G_GNUC_CONST;
static void folks_postal_address_details_real_change_postal_addresses_data_free (gpointer _data);
static void folks_postal_address_details_real_change_postal_addresses_async_ready_wrapper (GObject *source_object,
                                                                                    GAsyncResult *res,
                                                                                    void *user_data);
static void folks_postal_address_details_real_change_postal_addresses (FolksPostalAddressDetails* self,
                                                                GeeSet* postal_addresses,
                                                                GAsyncReadyCallback _callback_,
                                                                gpointer _user_data_);
void folks_postal_address_details_change_postal_addresses (FolksPostalAddressDetails* self,
                                                           GeeSet* postal_addresses,
                                                           GAsyncReadyCallback _callback_,
                                                           gpointer _user_data_);
void folks_postal_address_details_change_postal_addresses_finish (FolksPostalAddressDetails* self,
                                                                  GAsyncResult* _res_,
                                                                  GError** error);
static gboolean folks_postal_address_details_real_change_postal_addresses_co (FolksPostalAddressDetailsChangePostalAddressesData* _data_);
GeeSet* folks_postal_address_details_get_postal_addresses (FolksPostalAddressDetails* self);
void folks_postal_address_details_set_postal_addresses (FolksPostalAddressDetails* self,
                                                        GeeSet* value);


/**
   * Create a PostalAddress.
   *
   * You can pass ``null`` if a component is not set.
   *
   * @param po_box the PO Box
   * @param extension the address extension
   * @param street the street name and number
   * @param locality the locality (city, town or village) name
   * @param region the region (state or province) name
   * @param postal_code the postal code
   * @param country the country name
   * @param address_format the address format
   * @param uid external UID for the address instance
   * @since 0.5.1
   */
FolksPostalAddress*
folks_postal_address_construct (GType object_type,
                                const gchar* po_box,
                                const gchar* extension,
                                const gchar* street,
                                const gchar* locality,
                                const gchar* region,
                                const gchar* postal_code,
                                const gchar* country,
                                const gchar* address_format,
                                const gchar* uid)
{
	FolksPostalAddress * self = NULL;
#line 166 "/run/build/folks/folks/postal-address-details.vala"
	self = (FolksPostalAddress*) g_object_new (object_type, "po-box", po_box, "extension", extension, "street", street, "locality", locality, "region", region, "postal-code", postal_code, "country", country, "address-format", address_format, "uid", uid, NULL);
#line 162 "/run/build/folks/folks/postal-address-details.vala"
	return self;
#line 339 "postal-address-details.c"
}


FolksPostalAddress*
folks_postal_address_new (const gchar* po_box,
                          const gchar* extension,
                          const gchar* street,
                          const gchar* locality,
                          const gchar* region,
                          const gchar* postal_code,
                          const gchar* country,
                          const gchar* address_format,
                          const gchar* uid)
{
#line 162 "/run/build/folks/folks/postal-address-details.vala"
	return folks_postal_address_construct (FOLKS_TYPE_POSTAL_ADDRESS, po_box, extension, street, locality, region, postal_code, country, address_format, uid);
#line 356 "postal-address-details.c"
}


/**
   * Whether none of the components is set.
   *
   * @return ``true`` if all the components are the empty string, ``false``
   * otherwise.
   *
   * @since 0.6.7
   */
gboolean
folks_postal_address_is_empty (FolksPostalAddress* self)
{
	gboolean result = FALSE;
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gboolean _tmp4_ = FALSE;
	gboolean _tmp5_ = FALSE;
	gboolean _tmp6_ = FALSE;
	const gchar* _tmp7_;
	const gchar* _tmp8_;
#line 185 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	_tmp7_ = folks_postal_address_get_po_box (self);
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	_tmp8_ = _tmp7_;
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	if (g_strcmp0 (_tmp8_, "") == 0) {
#line 389 "postal-address-details.c"
		const gchar* _tmp9_;
		const gchar* _tmp10_;
#line 188 "/run/build/folks/folks/postal-address-details.vala"
		_tmp9_ = folks_postal_address_get_extension (self);
#line 188 "/run/build/folks/folks/postal-address-details.vala"
		_tmp10_ = _tmp9_;
#line 188 "/run/build/folks/folks/postal-address-details.vala"
		_tmp6_ = g_strcmp0 (_tmp10_, "") == 0;
#line 398 "postal-address-details.c"
	} else {
#line 187 "/run/build/folks/folks/postal-address-details.vala"
		_tmp6_ = FALSE;
#line 402 "postal-address-details.c"
	}
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp6_) {
#line 406 "postal-address-details.c"
		const gchar* _tmp11_;
		const gchar* _tmp12_;
#line 189 "/run/build/folks/folks/postal-address-details.vala"
		_tmp11_ = folks_postal_address_get_street (self);
#line 189 "/run/build/folks/folks/postal-address-details.vala"
		_tmp12_ = _tmp11_;
#line 189 "/run/build/folks/folks/postal-address-details.vala"
		_tmp5_ = g_strcmp0 (_tmp12_, "") == 0;
#line 415 "postal-address-details.c"
	} else {
#line 187 "/run/build/folks/folks/postal-address-details.vala"
		_tmp5_ = FALSE;
#line 419 "postal-address-details.c"
	}
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp5_) {
#line 423 "postal-address-details.c"
		const gchar* _tmp13_;
		const gchar* _tmp14_;
#line 190 "/run/build/folks/folks/postal-address-details.vala"
		_tmp13_ = folks_postal_address_get_locality (self);
#line 190 "/run/build/folks/folks/postal-address-details.vala"
		_tmp14_ = _tmp13_;
#line 190 "/run/build/folks/folks/postal-address-details.vala"
		_tmp4_ = g_strcmp0 (_tmp14_, "") == 0;
#line 432 "postal-address-details.c"
	} else {
#line 187 "/run/build/folks/folks/postal-address-details.vala"
		_tmp4_ = FALSE;
#line 436 "postal-address-details.c"
	}
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp4_) {
#line 440 "postal-address-details.c"
		const gchar* _tmp15_;
		const gchar* _tmp16_;
#line 191 "/run/build/folks/folks/postal-address-details.vala"
		_tmp15_ = folks_postal_address_get_region (self);
#line 191 "/run/build/folks/folks/postal-address-details.vala"
		_tmp16_ = _tmp15_;
#line 191 "/run/build/folks/folks/postal-address-details.vala"
		_tmp3_ = g_strcmp0 (_tmp16_, "") == 0;
#line 449 "postal-address-details.c"
	} else {
#line 187 "/run/build/folks/folks/postal-address-details.vala"
		_tmp3_ = FALSE;
#line 453 "postal-address-details.c"
	}
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp3_) {
#line 457 "postal-address-details.c"
		const gchar* _tmp17_;
		const gchar* _tmp18_;
#line 192 "/run/build/folks/folks/postal-address-details.vala"
		_tmp17_ = folks_postal_address_get_postal_code (self);
#line 192 "/run/build/folks/folks/postal-address-details.vala"
		_tmp18_ = _tmp17_;
#line 192 "/run/build/folks/folks/postal-address-details.vala"
		_tmp2_ = g_strcmp0 (_tmp18_, "") == 0;
#line 466 "postal-address-details.c"
	} else {
#line 187 "/run/build/folks/folks/postal-address-details.vala"
		_tmp2_ = FALSE;
#line 470 "postal-address-details.c"
	}
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp2_) {
#line 474 "postal-address-details.c"
		const gchar* _tmp19_;
		const gchar* _tmp20_;
#line 193 "/run/build/folks/folks/postal-address-details.vala"
		_tmp19_ = folks_postal_address_get_country (self);
#line 193 "/run/build/folks/folks/postal-address-details.vala"
		_tmp20_ = _tmp19_;
#line 193 "/run/build/folks/folks/postal-address-details.vala"
		_tmp1_ = g_strcmp0 (_tmp20_, "") == 0;
#line 483 "postal-address-details.c"
	} else {
#line 187 "/run/build/folks/folks/postal-address-details.vala"
		_tmp1_ = FALSE;
#line 487 "postal-address-details.c"
	}
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp1_) {
#line 491 "postal-address-details.c"
		const gchar* _tmp21_;
		const gchar* _tmp22_;
#line 194 "/run/build/folks/folks/postal-address-details.vala"
		_tmp21_ = folks_postal_address_get_address_format (self);
#line 194 "/run/build/folks/folks/postal-address-details.vala"
		_tmp22_ = _tmp21_;
#line 194 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = g_strcmp0 (_tmp22_, "") == 0;
#line 500 "postal-address-details.c"
	} else {
#line 187 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = FALSE;
#line 504 "postal-address-details.c"
	}
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 187 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 510 "postal-address-details.c"
}


/**
   * Compare if two postal addresses are equal. Addresses are equal if all their
   * components are equal (where ``null`` compares equal only with ``null``) and
   * they have the same set of types (or both have no types).
   *
   * This does not factor in the {@link PostalAddress.uid}.
   *
   * @param with another postal address to compare with
   * @return ``true`` if the addresses are equal, ``false`` otherwise
   */
gboolean
folks_postal_address_equal (FolksPostalAddress* self,
                            FolksPostalAddress* with)
{
	gboolean result = FALSE;
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	gboolean _tmp4_ = FALSE;
	gboolean _tmp5_ = FALSE;
	gboolean _tmp6_ = FALSE;
	const gchar* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	const gchar* _tmp10_;
#line 207 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 207 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (with != NULL, FALSE);
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	_tmp7_ = folks_postal_address_get_po_box (self);
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	_tmp8_ = _tmp7_;
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	_tmp9_ = folks_postal_address_get_po_box (with);
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	_tmp10_ = _tmp9_;
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	if (g_strcmp0 (_tmp8_, _tmp10_) != 0) {
#line 209 "/run/build/folks/folks/postal-address-details.vala"
		_tmp6_ = TRUE;
#line 556 "postal-address-details.c"
	} else {
		const gchar* _tmp11_;
		const gchar* _tmp12_;
		const gchar* _tmp13_;
		const gchar* _tmp14_;
#line 210 "/run/build/folks/folks/postal-address-details.vala"
		_tmp11_ = folks_postal_address_get_extension (self);
#line 210 "/run/build/folks/folks/postal-address-details.vala"
		_tmp12_ = _tmp11_;
#line 210 "/run/build/folks/folks/postal-address-details.vala"
		_tmp13_ = folks_postal_address_get_extension (with);
#line 210 "/run/build/folks/folks/postal-address-details.vala"
		_tmp14_ = _tmp13_;
#line 210 "/run/build/folks/folks/postal-address-details.vala"
		_tmp6_ = g_strcmp0 (_tmp12_, _tmp14_) != 0;
#line 572 "postal-address-details.c"
	}
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp6_) {
#line 209 "/run/build/folks/folks/postal-address-details.vala"
		_tmp5_ = TRUE;
#line 578 "postal-address-details.c"
	} else {
		const gchar* _tmp15_;
		const gchar* _tmp16_;
		const gchar* _tmp17_;
		const gchar* _tmp18_;
#line 211 "/run/build/folks/folks/postal-address-details.vala"
		_tmp15_ = folks_postal_address_get_street (self);
#line 211 "/run/build/folks/folks/postal-address-details.vala"
		_tmp16_ = _tmp15_;
#line 211 "/run/build/folks/folks/postal-address-details.vala"
		_tmp17_ = folks_postal_address_get_street (with);
#line 211 "/run/build/folks/folks/postal-address-details.vala"
		_tmp18_ = _tmp17_;
#line 211 "/run/build/folks/folks/postal-address-details.vala"
		_tmp5_ = g_strcmp0 (_tmp16_, _tmp18_) != 0;
#line 594 "postal-address-details.c"
	}
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp5_) {
#line 209 "/run/build/folks/folks/postal-address-details.vala"
		_tmp4_ = TRUE;
#line 600 "postal-address-details.c"
	} else {
		const gchar* _tmp19_;
		const gchar* _tmp20_;
		const gchar* _tmp21_;
		const gchar* _tmp22_;
#line 212 "/run/build/folks/folks/postal-address-details.vala"
		_tmp19_ = folks_postal_address_get_locality (self);
#line 212 "/run/build/folks/folks/postal-address-details.vala"
		_tmp20_ = _tmp19_;
#line 212 "/run/build/folks/folks/postal-address-details.vala"
		_tmp21_ = folks_postal_address_get_locality (with);
#line 212 "/run/build/folks/folks/postal-address-details.vala"
		_tmp22_ = _tmp21_;
#line 212 "/run/build/folks/folks/postal-address-details.vala"
		_tmp4_ = g_strcmp0 (_tmp20_, _tmp22_) != 0;
#line 616 "postal-address-details.c"
	}
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp4_) {
#line 209 "/run/build/folks/folks/postal-address-details.vala"
		_tmp3_ = TRUE;
#line 622 "postal-address-details.c"
	} else {
		const gchar* _tmp23_;
		const gchar* _tmp24_;
		const gchar* _tmp25_;
		const gchar* _tmp26_;
#line 213 "/run/build/folks/folks/postal-address-details.vala"
		_tmp23_ = folks_postal_address_get_region (self);
#line 213 "/run/build/folks/folks/postal-address-details.vala"
		_tmp24_ = _tmp23_;
#line 213 "/run/build/folks/folks/postal-address-details.vala"
		_tmp25_ = folks_postal_address_get_region (with);
#line 213 "/run/build/folks/folks/postal-address-details.vala"
		_tmp26_ = _tmp25_;
#line 213 "/run/build/folks/folks/postal-address-details.vala"
		_tmp3_ = g_strcmp0 (_tmp24_, _tmp26_) != 0;
#line 638 "postal-address-details.c"
	}
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp3_) {
#line 209 "/run/build/folks/folks/postal-address-details.vala"
		_tmp2_ = TRUE;
#line 644 "postal-address-details.c"
	} else {
		const gchar* _tmp27_;
		const gchar* _tmp28_;
		const gchar* _tmp29_;
		const gchar* _tmp30_;
#line 214 "/run/build/folks/folks/postal-address-details.vala"
		_tmp27_ = folks_postal_address_get_postal_code (self);
#line 214 "/run/build/folks/folks/postal-address-details.vala"
		_tmp28_ = _tmp27_;
#line 214 "/run/build/folks/folks/postal-address-details.vala"
		_tmp29_ = folks_postal_address_get_postal_code (with);
#line 214 "/run/build/folks/folks/postal-address-details.vala"
		_tmp30_ = _tmp29_;
#line 214 "/run/build/folks/folks/postal-address-details.vala"
		_tmp2_ = g_strcmp0 (_tmp28_, _tmp30_) != 0;
#line 660 "postal-address-details.c"
	}
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp2_) {
#line 209 "/run/build/folks/folks/postal-address-details.vala"
		_tmp1_ = TRUE;
#line 666 "postal-address-details.c"
	} else {
		const gchar* _tmp31_;
		const gchar* _tmp32_;
		const gchar* _tmp33_;
		const gchar* _tmp34_;
#line 215 "/run/build/folks/folks/postal-address-details.vala"
		_tmp31_ = folks_postal_address_get_country (self);
#line 215 "/run/build/folks/folks/postal-address-details.vala"
		_tmp32_ = _tmp31_;
#line 215 "/run/build/folks/folks/postal-address-details.vala"
		_tmp33_ = folks_postal_address_get_country (with);
#line 215 "/run/build/folks/folks/postal-address-details.vala"
		_tmp34_ = _tmp33_;
#line 215 "/run/build/folks/folks/postal-address-details.vala"
		_tmp1_ = g_strcmp0 (_tmp32_, _tmp34_) != 0;
#line 682 "postal-address-details.c"
	}
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp1_) {
#line 209 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = TRUE;
#line 688 "postal-address-details.c"
	} else {
		const gchar* _tmp35_;
		const gchar* _tmp36_;
		const gchar* _tmp37_;
		const gchar* _tmp38_;
#line 216 "/run/build/folks/folks/postal-address-details.vala"
		_tmp35_ = folks_postal_address_get_address_format (self);
#line 216 "/run/build/folks/folks/postal-address-details.vala"
		_tmp36_ = _tmp35_;
#line 216 "/run/build/folks/folks/postal-address-details.vala"
		_tmp37_ = folks_postal_address_get_address_format (with);
#line 216 "/run/build/folks/folks/postal-address-details.vala"
		_tmp38_ = _tmp37_;
#line 216 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = g_strcmp0 (_tmp36_, _tmp38_) != 0;
#line 704 "postal-address-details.c"
	}
#line 209 "/run/build/folks/folks/postal-address-details.vala"
	if (_tmp0_) {
#line 217 "/run/build/folks/folks/postal-address-details.vala"
		result = FALSE;
#line 217 "/run/build/folks/folks/postal-address-details.vala"
		return result;
#line 712 "postal-address-details.c"
	}
#line 219 "/run/build/folks/folks/postal-address-details.vala"
	result = TRUE;
#line 219 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 718 "postal-address-details.c"
}


/**
   * Get a formatted version of the address. The format is localised, and by
   * default is comma-separated.
   *
   * @return a formatted address.
   *
   * @since 0.4.0
   */
gchar*
folks_postal_address_to_string (FolksPostalAddress* self)
{
	gchar* result = NULL;
	gchar* str = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	const gchar* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	const gchar* _tmp13_;
	const gchar* _tmp14_;
	gchar* _tmp15_;
#line 230 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 232 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = g_strdup (_ ("%s, %s, %s, %s, %s, %s, %s"));
#line 232 "/run/build/folks/folks/postal-address-details.vala"
	str = _tmp0_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = folks_postal_address_get_po_box (self);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp2_ = _tmp1_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp3_ = folks_postal_address_get_extension (self);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp4_ = _tmp3_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp5_ = folks_postal_address_get_street (self);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp6_ = _tmp5_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp7_ = folks_postal_address_get_locality (self);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp8_ = _tmp7_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp9_ = folks_postal_address_get_region (self);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp10_ = _tmp9_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp11_ = folks_postal_address_get_postal_code (self);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp12_ = _tmp11_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp13_ = folks_postal_address_get_country (self);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp14_ = _tmp13_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_tmp15_ = g_strdup_printf (str, _tmp2_, _tmp4_, _tmp6_, _tmp8_, _tmp10_, _tmp12_, _tmp14_);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp15_;
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (str);
#line 233 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 793 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_po_box (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 43 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 43 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_po_box;
#line 43 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 43 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 810 "postal-address-details.c"
}


void
folks_postal_address_set_po_box (FolksPostalAddress* self,
                                 const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 44 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 44 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 44 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 826 "postal-address-details.c"
	} else {
#line 44 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 830 "postal-address-details.c"
	}
#line 44 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 44 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_po_box);
#line 44 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_po_box = _tmp1_;
#line 44 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_PO_BOX_PROPERTY]);
#line 840 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_extension (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 55 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 55 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_extension;
#line 55 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 55 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 857 "postal-address-details.c"
}


void
folks_postal_address_set_extension (FolksPostalAddress* self,
                                    const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 56 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 56 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 56 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 873 "postal-address-details.c"
	} else {
#line 56 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 877 "postal-address-details.c"
	}
#line 56 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 56 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_extension);
#line 56 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_extension = _tmp1_;
#line 56 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_EXTENSION_PROPERTY]);
#line 887 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_street (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 69 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 69 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_street;
#line 69 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 69 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 904 "postal-address-details.c"
}


void
folks_postal_address_set_street (FolksPostalAddress* self,
                                 const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 70 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 70 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 70 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 920 "postal-address-details.c"
	} else {
#line 70 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 924 "postal-address-details.c"
	}
#line 70 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 70 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_street);
#line 70 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_street = _tmp1_;
#line 70 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_STREET_PROPERTY]);
#line 934 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_locality (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 81 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 81 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_locality;
#line 81 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 81 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 951 "postal-address-details.c"
}


void
folks_postal_address_set_locality (FolksPostalAddress* self,
                                   const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 82 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 82 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 82 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 967 "postal-address-details.c"
	} else {
#line 82 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 971 "postal-address-details.c"
	}
#line 82 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 82 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_locality);
#line 82 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_locality = _tmp1_;
#line 82 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_LOCALITY_PROPERTY]);
#line 981 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_region (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 93 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 93 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_region;
#line 93 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 93 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 998 "postal-address-details.c"
}


void
folks_postal_address_set_region (FolksPostalAddress* self,
                                 const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 94 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 94 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 94 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 1014 "postal-address-details.c"
	} else {
#line 94 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 1018 "postal-address-details.c"
	}
#line 94 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 94 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_region);
#line 94 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_region = _tmp1_;
#line 94 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_REGION_PROPERTY]);
#line 1028 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_postal_code (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 105 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 105 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_postal_code;
#line 105 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 105 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 1045 "postal-address-details.c"
}


void
folks_postal_address_set_postal_code (FolksPostalAddress* self,
                                      const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 106 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 106 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 106 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 1061 "postal-address-details.c"
	} else {
#line 106 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 1065 "postal-address-details.c"
	}
#line 106 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 106 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_postal_code);
#line 106 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_postal_code = _tmp1_;
#line 106 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_POSTAL_CODE_PROPERTY]);
#line 1075 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_country (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 117 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 117 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_country;
#line 117 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 117 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 1092 "postal-address-details.c"
}


void
folks_postal_address_set_country (FolksPostalAddress* self,
                                  const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 118 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 118 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 118 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 1108 "postal-address-details.c"
	} else {
#line 118 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 1112 "postal-address-details.c"
	}
#line 118 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 118 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_country);
#line 118 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_country = _tmp1_;
#line 118 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_COUNTRY_PROPERTY]);
#line 1122 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_address_format (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 130 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 130 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_address_format;
#line 130 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 130 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 1139 "postal-address-details.c"
}


void
folks_postal_address_set_address_format (FolksPostalAddress* self,
                                         const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 131 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 131 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 131 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 1155 "postal-address-details.c"
	} else {
#line 131 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 1159 "postal-address-details.c"
	}
#line 131 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 131 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_address_format);
#line 131 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_address_format = _tmp1_;
#line 131 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_ADDRESS_FORMAT_PROPERTY]);
#line 1169 "postal-address-details.c"
}


const gchar*
folks_postal_address_get_uid (FolksPostalAddress* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 142 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 142 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_uid;
#line 142 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 142 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 1186 "postal-address-details.c"
}


void
folks_postal_address_set_uid (FolksPostalAddress* self,
                              const gchar* value)
{
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
#line 143 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 143 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 143 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 1202 "postal-address-details.c"
	} else {
#line 143 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 1206 "postal-address-details.c"
	}
#line 143 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 143 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_uid);
#line 143 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_uid = _tmp1_;
#line 143 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_UID_PROPERTY]);
#line 1216 "postal-address-details.c"
}


static void
folks_postal_address_class_init (FolksPostalAddressClass * klass)
{
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	folks_postal_address_parent_class = g_type_class_peek_parent (klass);
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_type_class_add_private (klass, sizeof (FolksPostalAddressPrivate));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_folks_postal_address_get_property;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_folks_postal_address_set_property;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (klass)->finalize = folks_postal_address_finalize;
#line 1233 "postal-address-details.c"
	/**
	   * The PO Box.
	   *
	   * The PO Box (also known as Postal office box or Postal box).
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_PO_BOX_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_PO_BOX_PROPERTY] = g_param_spec_string ("po-box", "po-box", "po-box", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1241 "postal-address-details.c"
	/**
	   * The address extension.
	   *
	   * Any additional part of the address, for instance a flat number.
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_EXTENSION_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_EXTENSION_PROPERTY] = g_param_spec_string ("extension", "extension", "extension", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1249 "postal-address-details.c"
	/**
	   * The street name and number.
	   *
	   * The street name including the optional building number.
	   * The number can be before or after the street name based on the
	   * language and country.
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_STREET_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_STREET_PROPERTY] = g_param_spec_string ("street", "street", "street", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1259 "postal-address-details.c"
	/**
	   * The locality.
	   *
	   * The locality, for instance the city name.
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_LOCALITY_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_LOCALITY_PROPERTY] = g_param_spec_string ("locality", "locality", "locality", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1267 "postal-address-details.c"
	/**
	   * The region.
	   *
	   * The region, for instance the name of the state or province.
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_REGION_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_REGION_PROPERTY] = g_param_spec_string ("region", "region", "region", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1275 "postal-address-details.c"
	/**
	   * The postal code.
	   *
	   * The postal code (also known as post code, postcode or ZIP code).
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_POSTAL_CODE_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_POSTAL_CODE_PROPERTY] = g_param_spec_string ("postal-code", "postal-code", "postal-code", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1283 "postal-address-details.c"
	/**
	   * The country.
	   *
	   * The name of the country.
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_COUNTRY_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_COUNTRY_PROPERTY] = g_param_spec_string ("country", "country", "country", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1291 "postal-address-details.c"
	/**
	   * The address format.
	   *
	   * The two letter country code that determines the format or exact
	   * meaning of the other fields.
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_ADDRESS_FORMAT_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_ADDRESS_FORMAT_PROPERTY] = g_param_spec_string ("address-format", "address-format", "address-format", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT));
#line 1300 "postal-address-details.c"
	/**
	   * The UID of the Postal Address (if any).
	   */
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_UID_PROPERTY, folks_postal_address_properties[FOLKS_POSTAL_ADDRESS_UID_PROPERTY] = g_param_spec_string ("uid", "uid", "uid", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT | G_PARAM_DEPRECATED));
#line 1306 "postal-address-details.c"
}


static void
folks_postal_address_instance_init (FolksPostalAddress * self)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	self->priv = FOLKS_POSTAL_ADDRESS_GET_PRIVATE (self);
#line 35 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = g_strdup ("");
#line 35 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_po_box = _tmp0_;
#line 47 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup ("");
#line 47 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_extension = _tmp1_;
#line 59 "/run/build/folks/folks/postal-address-details.vala"
	_tmp2_ = g_strdup ("");
#line 59 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_street = _tmp2_;
#line 73 "/run/build/folks/folks/postal-address-details.vala"
	_tmp3_ = g_strdup ("");
#line 73 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_locality = _tmp3_;
#line 85 "/run/build/folks/folks/postal-address-details.vala"
	_tmp4_ = g_strdup ("");
#line 85 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_region = _tmp4_;
#line 97 "/run/build/folks/folks/postal-address-details.vala"
	_tmp5_ = g_strdup ("");
#line 97 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_postal_code = _tmp5_;
#line 109 "/run/build/folks/folks/postal-address-details.vala"
	_tmp6_ = g_strdup ("");
#line 109 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_country = _tmp6_;
#line 121 "/run/build/folks/folks/postal-address-details.vala"
	_tmp7_ = g_strdup ("");
#line 121 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_address_format = _tmp7_;
#line 134 "/run/build/folks/folks/postal-address-details.vala"
	_tmp8_ = g_strdup ("");
#line 134 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_uid = _tmp8_;
#line 1360 "postal-address-details.c"
}


static void
folks_postal_address_finalize (GObject * obj)
{
	FolksPostalAddress * self;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddress);
#line 35 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_po_box);
#line 47 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_extension);
#line 59 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_street);
#line 73 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_locality);
#line 85 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_region);
#line 97 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_postal_code);
#line 109 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_country);
#line 121 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_address_format);
#line 134 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_uid);
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (folks_postal_address_parent_class)->finalize (obj);
#line 1390 "postal-address-details.c"
}


/**
 * Object representing a postal mail address.
 *
 * The components of the address are never ``null``: an empty string
 * indicates that a property is not set.
 */
GType
folks_postal_address_get_type (void)
{
	static volatile gsize folks_postal_address_type_id__volatile = 0;
	if (g_once_init_enter (&folks_postal_address_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksPostalAddressClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_postal_address_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksPostalAddress), 0, (GInstanceInitFunc) folks_postal_address_instance_init, NULL };
		GType folks_postal_address_type_id;
		folks_postal_address_type_id = g_type_register_static (G_TYPE_OBJECT, "FolksPostalAddress", &g_define_type_info, 0);
		g_once_init_leave (&folks_postal_address_type_id__volatile, folks_postal_address_type_id);
	}
	return folks_postal_address_type_id__volatile;
}


static void
_vala_folks_postal_address_get_property (GObject * object,
                                         guint property_id,
                                         GValue * value,
                                         GParamSpec * pspec)
{
	FolksPostalAddress * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddress);
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	switch (property_id) {
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_PO_BOX_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_postal_address_get_po_box (self));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_EXTENSION_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_postal_address_get_extension (self));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_STREET_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_postal_address_get_street (self));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_LOCALITY_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_postal_address_get_locality (self));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_REGION_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_postal_address_get_region (self));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_POSTAL_CODE_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_postal_address_get_postal_code (self));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_COUNTRY_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_postal_address_get_country (self));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_ADDRESS_FORMAT_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_postal_address_get_address_format (self));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_UID_PROPERTY:
G_GNUC_BEGIN_IGNORE_DEPRECATIONS
#line 1475 "postal-address-details.c"
		g_value_set_string (value, folks_postal_address_get_uid (self));
G_GNUC_END_IGNORE_DEPRECATIONS
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 1480 "postal-address-details.c"
		default:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 1486 "postal-address-details.c"
	}
}


static void
_vala_folks_postal_address_set_property (GObject * object,
                                         guint property_id,
                                         const GValue * value,
                                         GParamSpec * pspec)
{
	FolksPostalAddress * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddress);
#line 33 "/run/build/folks/folks/postal-address-details.vala"
	switch (property_id) {
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_PO_BOX_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_po_box (self, g_value_get_string (value));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_EXTENSION_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_extension (self, g_value_get_string (value));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_STREET_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_street (self, g_value_get_string (value));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_LOCALITY_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_locality (self, g_value_get_string (value));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_REGION_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_region (self, g_value_get_string (value));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_POSTAL_CODE_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_postal_code (self, g_value_get_string (value));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_COUNTRY_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_country (self, g_value_get_string (value));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_ADDRESS_FORMAT_PROPERTY:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_address_format (self, g_value_get_string (value));
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_UID_PROPERTY:
G_GNUC_BEGIN_IGNORE_DEPRECATIONS
#line 1552 "postal-address-details.c"
		folks_postal_address_set_uid (self, g_value_get_string (value));
G_GNUC_END_IGNORE_DEPRECATIONS
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 1557 "postal-address-details.c"
		default:
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 33 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 1563 "postal-address-details.c"
	}
}


/**
   * Create a new PostalAddressFieldDetails.
   *
   * @param value the value of the field, a non-empty {@link PostalAddress}
   * @param parameters initial parameters. See
   * {@link AbstractFieldDetails.parameters}. A ``null`` value is equivalent to
   * an empty map of parameters.
   *
   *
   * @return a new PostalAddressFieldDetails
   *
   * @since 0.6.0
   */
FolksPostalAddressFieldDetails*
folks_postal_address_field_details_construct (GType object_type,
                                              FolksPostalAddress* value,
                                              GeeMultiMap* parameters)
{
	FolksPostalAddressFieldDetails * self = NULL;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
#line 280 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (value != NULL, NULL);
#line 283 "/run/build/folks/folks/postal-address-details.vala"
	if (folks_postal_address_is_empty (value)) {
#line 285 "/run/build/folks/folks/postal-address-details.vala"
		g_warning ("postal-address-details.vala:285: Empty postal address passed to Postal" \
"AddressFieldDetails.");
#line 1595 "postal-address-details.c"
	}
#line 289 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = folks_postal_address_get_uid (value);
#line 289 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = _tmp0_;
#line 289 "/run/build/folks/folks/postal-address-details.vala"
	self = (FolksPostalAddressFieldDetails*) g_object_new (object_type, "t_type", FOLKS_TYPE_POSTAL_ADDRESS, "t_dup_func", (GBoxedCopyFunc) g_object_ref, "t_destroy_func", (GDestroyNotify) g_object_unref, "value", value, "parameters", parameters, "id", _tmp1_, NULL);
#line 280 "/run/build/folks/folks/postal-address-details.vala"
	return self;
#line 1605 "postal-address-details.c"
}


FolksPostalAddressFieldDetails*
folks_postal_address_field_details_new (FolksPostalAddress* value,
                                        GeeMultiMap* parameters)
{
#line 280 "/run/build/folks/folks/postal-address-details.vala"
	return folks_postal_address_field_details_construct (FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, value, parameters);
#line 1615 "postal-address-details.c"
}


/**
   * {@inheritDoc}
   *
   * @since 0.6.0
   */
static gboolean
folks_postal_address_field_details_real_equal (FolksAbstractFieldDetails* base,
                                               FolksAbstractFieldDetails* that)
{
	FolksPostalAddressFieldDetails * self;
	gboolean result = FALSE;
	gconstpointer _tmp0_;
	FolksPostalAddress* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gconstpointer _tmp4_;
	FolksPostalAddress* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	gboolean _tmp8_;
#line 309 "/run/build/folks/folks/postal-address-details.vala"
	self = (FolksPostalAddressFieldDetails*) base;
#line 309 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (that != NULL, FALSE);
#line 311 "/run/build/folks/folks/postal-address-details.vala"
	if (!FOLKS_ABSTRACT_FIELD_DETAILS_CLASS (folks_postal_address_field_details_parent_class)->parameters_equal (G_TYPE_CHECK_INSTANCE_CAST (self, FOLKS_TYPE_ABSTRACT_FIELD_DETAILS, FolksAbstractFieldDetails), that)) {
#line 312 "/run/build/folks/folks/postal-address-details.vala"
		result = FALSE;
#line 312 "/run/build/folks/folks/postal-address-details.vala"
		return result;
#line 1649 "postal-address-details.c"
	}
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) self);
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = _tmp0_;
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp2_ = folks_postal_address_to_string ((FolksPostalAddress*) _tmp1_);
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp3_ = _tmp2_;
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp4_ = folks_abstract_field_details_get_value (that);
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp5_ = _tmp4_;
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp6_ = folks_postal_address_to_string ((FolksPostalAddress*) _tmp5_);
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp7_ = _tmp6_;
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_tmp8_ = g_strcmp0 (_tmp3_, _tmp7_) == 0;
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (_tmp7_);
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (_tmp3_);
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp8_;
#line 315 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 1677 "postal-address-details.c"
}


/**
   * {@inheritDoc}
   *
   * @since 0.6.0
   */
static guint
folks_postal_address_field_details_real_hash (FolksAbstractFieldDetails* base)
{
	FolksPostalAddressFieldDetails * self;
	guint result = 0U;
	GHashFunc _tmp0_;
	gconstpointer _tmp1_;
	FolksPostalAddress* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	guint _tmp5_;
#line 323 "/run/build/folks/folks/postal-address-details.vala"
	self = (FolksPostalAddressFieldDetails*) base;
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = g_str_hash;
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) self);
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	_tmp2_ = _tmp1_;
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	_tmp3_ = folks_postal_address_to_string ((FolksPostalAddress*) _tmp2_);
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	_tmp4_ = _tmp3_;
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	_tmp5_ = _tmp0_ (_tmp4_);
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (_tmp4_);
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp5_;
#line 326 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 1717 "postal-address-details.c"
}


static const gchar*
folks_postal_address_field_details_real_get_id (FolksAbstractFieldDetails* base)
{
	const gchar* result;
	FolksPostalAddressFieldDetails* self;
	const gchar* _tmp0_;
#line 256 "/run/build/folks/folks/postal-address-details.vala"
	self = (FolksPostalAddressFieldDetails*) base;
#line 256 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = self->priv->_id;
#line 256 "/run/build/folks/folks/postal-address-details.vala"
	result = _tmp0_;
#line 256 "/run/build/folks/folks/postal-address-details.vala"
	return result;
#line 1735 "postal-address-details.c"
}


static void
folks_postal_address_field_details_real_set_id (FolksAbstractFieldDetails* base,
                                                const gchar* value)
{
	FolksPostalAddressFieldDetails* self;
	const gchar* _tmp0_ = NULL;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gconstpointer _tmp3_;
	FolksPostalAddress* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
#line 257 "/run/build/folks/folks/postal-address-details.vala"
	self = (FolksPostalAddressFieldDetails*) base;
#line 259 "/run/build/folks/folks/postal-address-details.vala"
	if (value != NULL) {
#line 259 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = value;
#line 1757 "postal-address-details.c"
	} else {
#line 259 "/run/build/folks/folks/postal-address-details.vala"
		_tmp0_ = "";
#line 1761 "postal-address-details.c"
	}
#line 259 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 259 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_id);
#line 259 "/run/build/folks/folks/postal-address-details.vala"
	self->priv->_id = _tmp1_;
#line 262 "/run/build/folks/folks/postal-address-details.vala"
	_tmp2_ = self->priv->_id;
#line 262 "/run/build/folks/folks/postal-address-details.vala"
	_tmp3_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) self);
#line 262 "/run/build/folks/folks/postal-address-details.vala"
	_tmp4_ = _tmp3_;
#line 262 "/run/build/folks/folks/postal-address-details.vala"
	_tmp5_ = folks_postal_address_get_uid ((FolksPostalAddress*) _tmp4_);
#line 262 "/run/build/folks/folks/postal-address-details.vala"
	_tmp6_ = _tmp5_;
#line 262 "/run/build/folks/folks/postal-address-details.vala"
	if (g_strcmp0 (_tmp2_, _tmp6_) != 0) {
#line 1781 "postal-address-details.c"
		gconstpointer _tmp7_;
		FolksPostalAddress* _tmp8_;
		const gchar* _tmp9_;
#line 263 "/run/build/folks/folks/postal-address-details.vala"
		_tmp7_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) self);
#line 263 "/run/build/folks/folks/postal-address-details.vala"
		_tmp8_ = _tmp7_;
#line 263 "/run/build/folks/folks/postal-address-details.vala"
		_tmp9_ = self->priv->_id;
#line 263 "/run/build/folks/folks/postal-address-details.vala"
		folks_postal_address_set_uid ((FolksPostalAddress*) _tmp8_, _tmp9_);
#line 1793 "postal-address-details.c"
	}
#line 257 "/run/build/folks/folks/postal-address-details.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_postal_address_field_details_properties[FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_ID_PROPERTY]);
#line 1797 "postal-address-details.c"
}


static void
_folks_postal_address_field_details___lambda4_ (FolksPostalAddressFieldDetails* self,
                                                GObject* s,
                                                GParamSpec* p)
{
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	gconstpointer _tmp2_;
	FolksPostalAddress* _tmp3_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
#line 297 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (s != NULL);
#line 297 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (p != NULL);
#line 299 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = folks_abstract_field_details_get_id ((FolksAbstractFieldDetails*) self);
#line 299 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = _tmp0_;
#line 299 "/run/build/folks/folks/postal-address-details.vala"
	_tmp2_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) self);
#line 299 "/run/build/folks/folks/postal-address-details.vala"
	_tmp3_ = _tmp2_;
#line 299 "/run/build/folks/folks/postal-address-details.vala"
	_tmp4_ = folks_postal_address_get_uid ((FolksPostalAddress*) _tmp3_);
#line 299 "/run/build/folks/folks/postal-address-details.vala"
	_tmp5_ = _tmp4_;
#line 299 "/run/build/folks/folks/postal-address-details.vala"
	if (g_strcmp0 (_tmp1_, _tmp5_) != 0) {
#line 1830 "postal-address-details.c"
		gconstpointer _tmp6_;
		FolksPostalAddress* _tmp7_;
		const gchar* _tmp8_;
		const gchar* _tmp9_;
#line 300 "/run/build/folks/folks/postal-address-details.vala"
		_tmp6_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) self);
#line 300 "/run/build/folks/folks/postal-address-details.vala"
		_tmp7_ = _tmp6_;
#line 300 "/run/build/folks/folks/postal-address-details.vala"
		_tmp8_ = folks_postal_address_get_uid ((FolksPostalAddress*) _tmp7_);
#line 300 "/run/build/folks/folks/postal-address-details.vala"
		_tmp9_ = _tmp8_;
#line 300 "/run/build/folks/folks/postal-address-details.vala"
		folks_abstract_field_details_set_id ((FolksAbstractFieldDetails*) self, _tmp9_);
#line 1845 "postal-address-details.c"
	}
}


static void
__folks_postal_address_field_details___lambda4__g_object_notify (GObject* _sender,
                                                                 GParamSpec* pspec,
                                                                 gpointer self)
{
#line 297 "/run/build/folks/folks/postal-address-details.vala"
	_folks_postal_address_field_details___lambda4_ ((FolksPostalAddressFieldDetails*) self, _sender, pspec);
#line 1857 "postal-address-details.c"
}


static GObject *
folks_postal_address_field_details_constructor (GType type,
                                                guint n_construct_properties,
                                                GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	FolksPostalAddressFieldDetails * self;
	gconstpointer _tmp0_;
	FolksPostalAddress* _tmp1_;
#line 294 "/run/build/folks/folks/postal-address-details.vala"
	parent_class = G_OBJECT_CLASS (folks_postal_address_field_details_parent_class);
#line 294 "/run/build/folks/folks/postal-address-details.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 294 "/run/build/folks/folks/postal-address-details.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetails);
#line 297 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) self);
#line 297 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = _tmp0_;
#line 297 "/run/build/folks/folks/postal-address-details.vala"
	g_signal_connect_object ((GObject*) ((FolksPostalAddress*) _tmp1_), "notify::uid", (GCallback) __folks_postal_address_field_details___lambda4__g_object_notify, self, 0);
#line 294 "/run/build/folks/folks/postal-address-details.vala"
	return obj;
#line 1885 "postal-address-details.c"
}


static void
folks_postal_address_field_details_class_init (FolksPostalAddressFieldDetailsClass * klass)
{
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	folks_postal_address_field_details_parent_class = g_type_class_peek_parent (klass);
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	g_type_class_add_private (klass, sizeof (FolksPostalAddressFieldDetailsPrivate));
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	((FolksAbstractFieldDetailsClass *) klass)->equal = (gboolean (*) (FolksAbstractFieldDetails *, FolksAbstractFieldDetails*)) folks_postal_address_field_details_real_equal;
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	((FolksAbstractFieldDetailsClass *) klass)->hash = (guint (*) (FolksAbstractFieldDetails *)) folks_postal_address_field_details_real_hash;
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	FOLKS_ABSTRACT_FIELD_DETAILS_CLASS (klass)->get_id = folks_postal_address_field_details_real_get_id;
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	FOLKS_ABSTRACT_FIELD_DETAILS_CLASS (klass)->set_id = folks_postal_address_field_details_real_set_id;
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_folks_postal_address_field_details_get_property;
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_folks_postal_address_field_details_set_property;
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (klass)->constructor = folks_postal_address_field_details_constructor;
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (klass)->finalize = folks_postal_address_field_details_finalize;
#line 1912 "postal-address-details.c"
	/**
	   * {@inheritDoc}
	   */
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_ID_PROPERTY, folks_postal_address_field_details_properties[FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_ID_PROPERTY] = g_param_spec_string ("id", "id", "id", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 1918 "postal-address-details.c"
}


static void
folks_postal_address_field_details_instance_init (FolksPostalAddressFieldDetails * self)
{
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	self->priv = FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_GET_PRIVATE (self);
#line 1927 "postal-address-details.c"
}


static void
folks_postal_address_field_details_finalize (GObject * obj)
{
	FolksPostalAddressFieldDetails * self;
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetails);
#line 250 "/run/build/folks/folks/postal-address-details.vala"
	_g_free0 (self->priv->_id);
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	G_OBJECT_CLASS (folks_postal_address_field_details_parent_class)->finalize (obj);
#line 1941 "postal-address-details.c"
}


/**
 * Object representing a PostalAddress value that can have some parameters
 * associated with it.
 *
 * See {@link Folks.AbstractFieldDetails} for details on common parameter names
 * and values.
 *
 * @since 0.6.0
 */
GType
folks_postal_address_field_details_get_type (void)
{
	static volatile gsize folks_postal_address_field_details_type_id__volatile = 0;
	if (g_once_init_enter (&folks_postal_address_field_details_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksPostalAddressFieldDetailsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_postal_address_field_details_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksPostalAddressFieldDetails), 0, (GInstanceInitFunc) folks_postal_address_field_details_instance_init, NULL };
		GType folks_postal_address_field_details_type_id;
		folks_postal_address_field_details_type_id = g_type_register_static (FOLKS_TYPE_ABSTRACT_FIELD_DETAILS, "FolksPostalAddressFieldDetails", &g_define_type_info, 0);
		g_once_init_leave (&folks_postal_address_field_details_type_id__volatile, folks_postal_address_field_details_type_id);
	}
	return folks_postal_address_field_details_type_id__volatile;
}


static void
_vala_folks_postal_address_field_details_get_property (GObject * object,
                                                       guint property_id,
                                                       GValue * value,
                                                       GParamSpec * pspec)
{
	FolksPostalAddressFieldDetails * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetails);
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	switch (property_id) {
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_ID_PROPERTY:
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		g_value_set_string (value, folks_abstract_field_details_get_id ((FolksAbstractFieldDetails*) self));
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 1984 "postal-address-details.c"
		default:
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 1990 "postal-address-details.c"
	}
}


static void
_vala_folks_postal_address_field_details_set_property (GObject * object,
                                                       guint property_id,
                                                       const GValue * value,
                                                       GParamSpec * pspec)
{
	FolksPostalAddressFieldDetails * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetails);
#line 247 "/run/build/folks/folks/postal-address-details.vala"
	switch (property_id) {
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		case FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_ID_PROPERTY:
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		folks_abstract_field_details_set_id ((FolksAbstractFieldDetails*) self, g_value_get_string (value));
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 2011 "postal-address-details.c"
		default:
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 247 "/run/build/folks/folks/postal-address-details.vala"
		break;
#line 2017 "postal-address-details.c"
	}
}


static void
folks_postal_address_details_real_change_postal_addresses_data_free (gpointer _data)
{
	FolksPostalAddressDetailsChangePostalAddressesData* _data_;
	_data_ = _data;
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_g_object_unref0 (_data_->postal_addresses);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_g_object_unref0 (_data_->self);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	g_slice_free (FolksPostalAddressDetailsChangePostalAddressesData, _data_);
#line 2033 "postal-address-details.c"
}


static void
folks_postal_address_details_real_change_postal_addresses_async_ready_wrapper (GObject *source_object,
                                                                               GAsyncResult *res,
                                                                               void *user_data)
{
	FolksPostalAddressDetailsChangePostalAddressesData* _task_data_;
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	if (_task_data_->_callback_ != NULL) {
#line 334 "/run/build/folks/folks/postal-address-details.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 2049 "postal-address-details.c"
	}
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_task_data_->_task_complete_ = TRUE;
#line 2053 "postal-address-details.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	return self ? g_object_ref (self) : NULL;
#line 2062 "postal-address-details.c"
}


static void
folks_postal_address_details_real_change_postal_addresses (FolksPostalAddressDetails* self,
                                                           GeeSet* postal_addresses,
                                                           GAsyncReadyCallback _callback_,
                                                           gpointer _user_data_)
{
	FolksPostalAddressDetailsChangePostalAddressesData* _data_;
	FolksPostalAddressDetails* _tmp0_;
	GeeSet* _tmp1_;
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_data_ = g_slice_new0 (FolksPostalAddressDetailsChangePostalAddressesData);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_data_->_callback_ = _callback_;
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_postal_address_details_real_change_postal_addresses_async_ready_wrapper, _user_data_);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	if (_callback_ == NULL) {
#line 334 "/run/build/folks/folks/postal-address-details.vala"
		_data_->_task_complete_ = TRUE;
#line 2085 "postal-address-details.c"
	}
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_postal_address_details_real_change_postal_addresses_data_free);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_data_->self = _tmp0_;
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_tmp1_ = _g_object_ref0 (postal_addresses);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_g_object_unref0 (_data_->postal_addresses);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_data_->postal_addresses = _tmp1_;
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	folks_postal_address_details_real_change_postal_addresses_co (_data_);
#line 2101 "postal-address-details.c"
}


static void
folks_postal_address_details_real_change_postal_addresses_finish (FolksPostalAddressDetails* self,
                                                                  GAsyncResult* _res_,
                                                                  GError** error)
{
	FolksPostalAddressDetailsChangePostalAddressesData* _data_;
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	if (NULL == _data_) {
#line 334 "/run/build/folks/folks/postal-address-details.vala"
		return;
#line 2117 "postal-address-details.c"
	}
}


/**
   * Change the contact's postal addresses.
   *
   * It's preferred to call this rather than setting
   * {@link PostalAddressDetails.postal_addresses} directly, as this method
   * gives error notification and will only return once the addresses have been
   * written to the relevant backing store (or the operation's failed).
   *
   * @param postal_addresses the set of postal addresses
   * @throws PropertyError if setting the addresses failed
   * @since 0.6.2
   */
static gboolean
folks_postal_address_details_real_change_postal_addresses_co (FolksPostalAddressDetailsChangePostalAddressesData* _data_)
{
#line 357 "/run/build/folks/folks/postal-address-details.vala"
	switch (_data_->_state_) {
#line 357 "/run/build/folks/folks/postal-address-details.vala"
		case 0:
#line 2141 "postal-address-details.c"
		goto _state_0;
		default:
#line 357 "/run/build/folks/folks/postal-address-details.vala"
		g_assert_not_reached ();
#line 2146 "postal-address-details.c"
	}
	_state_0:
#line 361 "/run/build/folks/folks/postal-address-details.vala"
	_data_->_tmp0_ = g_error_new_literal (FOLKS_PROPERTY_ERROR, FOLKS_PROPERTY_ERROR_NOT_WRITEABLE, _ ("Postal addresses are not writeable on this contact."));
#line 361 "/run/build/folks/folks/postal-address-details.vala"
	_data_->_inner_error_ = _data_->_tmp0_;
#line 361 "/run/build/folks/folks/postal-address-details.vala"
	if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 361 "/run/build/folks/folks/postal-address-details.vala"
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 361 "/run/build/folks/folks/postal-address-details.vala"
		g_object_unref (_data_->_async_result);
#line 361 "/run/build/folks/folks/postal-address-details.vala"
		return FALSE;
#line 2161 "postal-address-details.c"
	} else {
#line 361 "/run/build/folks/folks/postal-address-details.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 361 "/run/build/folks/folks/postal-address-details.vala"
		g_clear_error (&_data_->_inner_error_);
#line 361 "/run/build/folks/folks/postal-address-details.vala"
		g_object_unref (_data_->_async_result);
#line 361 "/run/build/folks/folks/postal-address-details.vala"
		return FALSE;
#line 2171 "postal-address-details.c"
	}
#line 357 "/run/build/folks/folks/postal-address-details.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 357 "/run/build/folks/folks/postal-address-details.vala"
	if (_data_->_state_ != 0) {
#line 357 "/run/build/folks/folks/postal-address-details.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 357 "/run/build/folks/folks/postal-address-details.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2181 "postal-address-details.c"
		}
	}
#line 357 "/run/build/folks/folks/postal-address-details.vala"
	g_object_unref (_data_->_async_result);
#line 357 "/run/build/folks/folks/postal-address-details.vala"
	return FALSE;
#line 2188 "postal-address-details.c"
}


void
folks_postal_address_details_change_postal_addresses (FolksPostalAddressDetails* self,
                                                      GeeSet* postal_addresses,
                                                      GAsyncReadyCallback _callback_,
                                                      gpointer _user_data_)
{
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	FOLKS_POSTAL_ADDRESS_DETAILS_GET_INTERFACE (self)->change_postal_addresses (self, postal_addresses, _callback_, _user_data_);
#line 2200 "postal-address-details.c"
}


void
folks_postal_address_details_change_postal_addresses_finish (FolksPostalAddressDetails* self,
                                                             GAsyncResult* _res_,
                                                             GError** error)
{
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	FOLKS_POSTAL_ADDRESS_DETAILS_GET_INTERFACE (self)->change_postal_addresses_finish (self, _res_, error);
#line 2211 "postal-address-details.c"
}


GeeSet*
folks_postal_address_details_get_postal_addresses (FolksPostalAddressDetails* self)
{
#line 343 "/run/build/folks/folks/postal-address-details.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 343 "/run/build/folks/folks/postal-address-details.vala"
	return FOLKS_POSTAL_ADDRESS_DETAILS_GET_INTERFACE (self)->get_postal_addresses (self);
#line 2222 "postal-address-details.c"
}


void
folks_postal_address_details_set_postal_addresses (FolksPostalAddressDetails* self,
                                                   GeeSet* value)
{
#line 343 "/run/build/folks/folks/postal-address-details.vala"
	g_return_if_fail (self != NULL);
#line 343 "/run/build/folks/folks/postal-address-details.vala"
	FOLKS_POSTAL_ADDRESS_DETAILS_GET_INTERFACE (self)->set_postal_addresses (self, value);
#line 2234 "postal-address-details.c"
}


static void
folks_postal_address_details_default_init (FolksPostalAddressDetailsIface * iface)
{
	/**
	   * The postal addresses of the contact.
	   *
	   * A list of postal addresses associated to the contact.
	   *
	   * @since 0.5.1
	   */
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	g_object_interface_install_property (iface, g_param_spec_object ("postal-addresses", "postal-addresses", "postal-addresses", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	iface->change_postal_addresses = folks_postal_address_details_real_change_postal_addresses;
#line 334 "/run/build/folks/folks/postal-address-details.vala"
	iface->change_postal_addresses_finish = folks_postal_address_details_real_change_postal_addresses_finish;
#line 2254 "postal-address-details.c"
}


/**
 * Interface for classes that can provide postal addresses, such as
 * {@link Persona} and {@link Individual}.
 */
GType
folks_postal_address_details_get_type (void)
{
	static volatile gsize folks_postal_address_details_type_id__volatile = 0;
	if (g_once_init_enter (&folks_postal_address_details_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksPostalAddressDetailsIface), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_postal_address_details_default_init, (GClassFinalizeFunc) NULL, NULL, 0, 0, (GInstanceInitFunc) NULL, NULL };
		GType folks_postal_address_details_type_id;
		folks_postal_address_details_type_id = g_type_register_static (G_TYPE_INTERFACE, "FolksPostalAddressDetails", &g_define_type_info, 0);
		g_type_interface_add_prerequisite (folks_postal_address_details_type_id, G_TYPE_OBJECT);
		g_once_init_leave (&folks_postal_address_details_type_id__volatile, folks_postal_address_details_type_id);
	}
	return folks_postal_address_details_type_id__volatile;
}



