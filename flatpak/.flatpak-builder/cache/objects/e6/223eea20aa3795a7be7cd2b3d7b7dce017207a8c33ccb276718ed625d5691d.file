/* unity-deprecated-scope-impl.c generated by valac 0.40.11, the Vala compiler
 * generated from unity-deprecated-scope-impl.vala, do not modify */

/*
 * Copyright (C) 2011-2012 Canonical, Ltd.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * version 3.0 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3.0 for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see
 * <http://www.gnu.org/licenses/>.
 *
 * Authored by Neil Jagdish Patel <neil.patel@canonical.com>
 *             Michal Hruby <michal.hruby@canonical.com>
 *
 * Note: Yes, this pretty much copies unity-scope-dbus-impl.vala, but
 *       there are tiny differences and we'll get rid of this file soon
 */


#include <glib.h>
#include <glib-object.h>
#include <unity-protocol.h>
#include <stdlib.h>
#include <string.h>
#include <dee.h>
#include "unity.h"
#include <gio/gio.h>
#include <unity-trace.h>
#include <float.h>
#include <math.h>


#define UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL (unity_internal_scope_dbus_impl_get_type ())
#define UNITY_INTERNAL_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL, UnityInternalScopeDBusImpl))
#define UNITY_INTERNAL_IS_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL))
#define UNITY_INTERNAL_SCOPE_DBUS_IMPL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL, UnityInternalScopeDBusImplIface))

typedef struct _UnityInternalScopeDBusImpl UnityInternalScopeDBusImpl;
typedef struct _UnityInternalScopeDBusImplIface UnityInternalScopeDBusImplIface;

#define UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL (unity_internal_deprecated_scope_dbus_impl_get_type ())
#define UNITY_INTERNAL_DEPRECATED_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL, UnityInternalDeprecatedScopeDBusImpl))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_DBUS_IMPL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL, UnityInternalDeprecatedScopeDBusImplIface))

typedef struct _UnityInternalDeprecatedScopeDBusImpl UnityInternalDeprecatedScopeDBusImpl;
typedef struct _UnityInternalDeprecatedScopeDBusImplIface UnityInternalDeprecatedScopeDBusImplIface;

#define UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL (unity_internal_deprecated_scope_impl_get_type ())
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImpl))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImplClass))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImplClass))

typedef struct _UnityInternalDeprecatedScopeImpl UnityInternalDeprecatedScopeImpl;
typedef struct _UnityInternalDeprecatedScopeImplClass UnityInternalDeprecatedScopeImplClass;
typedef struct _UnityInternalDeprecatedScopeImplPrivate UnityInternalDeprecatedScopeImplPrivate;

#define UNITY_INTERNAL_TYPE_SCOPE_CHANNEL (unity_internal_scope_channel_get_type ())
#define UNITY_INTERNAL_SCOPE_CHANNEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL, UnityInternalScopeChannel))
#define UNITY_INTERNAL_SCOPE_CHANNEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL, UnityInternalScopeChannelClass))
#define UNITY_INTERNAL_IS_SCOPE_CHANNEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL))
#define UNITY_INTERNAL_IS_SCOPE_CHANNEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL))
#define UNITY_INTERNAL_SCOPE_CHANNEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL, UnityInternalScopeChannelClass))

typedef struct _UnityInternalScopeChannel UnityInternalScopeChannel;
typedef struct _UnityInternalScopeChannelClass UnityInternalScopeChannelClass;
enum  {
	UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_0_PROPERTY,
	UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_OWNER_PROPERTY,
	UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CATEGORIES_MODEL_PROPERTY,
	UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_FILTERS_MODEL_PROPERTY,
	UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_VIEW_TYPE_PROPERTY,
	UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_NUM_PROPERTIES
};
static GParamSpec* unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_NUM_PROPERTIES];
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_rand_free0(var) ((var == NULL) ? NULL : (var = (g_rand_free (var), NULL)))
#define _g_variant_builder_unref0(var) ((var == NULL) ? NULL : (var = (g_variant_builder_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_variant_type_free0(var) ((var == NULL) ? NULL : (var = (g_variant_type_free (var), NULL)))
#define _g_variant_unref0(var) ((var == NULL) ? NULL : (var = (g_variant_unref (var), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))

#define UNITY_INTERNAL_TYPE_FILTER_COLUMN (unity_internal_filter_column_get_type ())

#define UNITY_INTERNAL_TYPE_RESULT_COLUMN (unity_internal_result_column_get_type ())
#define _g_ptr_array_unref0(var) ((var == NULL) ? NULL : (var = (g_ptr_array_unref (var), NULL)))
typedef struct _UnityInternalDeprecatedScopeImplActivateData UnityInternalDeprecatedScopeImplActivateData;
typedef struct _UnityInternalScopeChannelPrivate UnityInternalScopeChannelPrivate;

#define UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX (unity_internal_utils_async_mutex_get_type ())
#define UNITY_INTERNAL_UTILS_ASYNC_MUTEX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX, UnityInternalUtilsAsyncMutex))
#define UNITY_INTERNAL_UTILS_ASYNC_MUTEX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX, UnityInternalUtilsAsyncMutexClass))
#define UNITY_INTERNAL_UTILS_IS_ASYNC_MUTEX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX))
#define UNITY_INTERNAL_UTILS_IS_ASYNC_MUTEX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX))
#define UNITY_INTERNAL_UTILS_ASYNC_MUTEX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX, UnityInternalUtilsAsyncMutexClass))

typedef struct _UnityInternalUtilsAsyncMutex UnityInternalUtilsAsyncMutex;
typedef struct _UnityInternalUtilsAsyncMutexClass UnityInternalUtilsAsyncMutexClass;
typedef struct _Block18Data Block18Data;

#define UNITY_INTERNAL_TYPE_DEE_RESULT_SET (unity_internal_dee_result_set_get_type ())
#define UNITY_INTERNAL_DEE_RESULT_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEE_RESULT_SET, UnityInternalDeeResultSet))
#define UNITY_INTERNAL_DEE_RESULT_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_DEE_RESULT_SET, UnityInternalDeeResultSetClass))
#define UNITY_INTERNAL_IS_DEE_RESULT_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEE_RESULT_SET))
#define UNITY_INTERNAL_IS_DEE_RESULT_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_DEE_RESULT_SET))
#define UNITY_INTERNAL_DEE_RESULT_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_DEE_RESULT_SET, UnityInternalDeeResultSetClass))

typedef struct _UnityInternalDeeResultSet UnityInternalDeeResultSet;
typedef struct _UnityInternalDeeResultSetClass UnityInternalDeeResultSetClass;
typedef struct _Block19Data Block19Data;

#define UNITY_INTERNAL_TYPE_CHANNEL_STATE (unity_internal_channel_state_get_type ())
typedef struct _UnityInternalDeprecatedScopeImplSearchInternalData UnityInternalDeprecatedScopeImplSearchInternalData;
typedef struct _UnityInternalDeprecatedScopeImplSearchData UnityInternalDeprecatedScopeImplSearchData;
typedef struct _UnityInternalDeprecatedScopeImplOpenChannelData UnityInternalDeprecatedScopeImplOpenChannelData;
typedef struct _UnityInternalDeprecatedScopeImplCloseChannelData UnityInternalDeprecatedScopeImplCloseChannelData;
typedef struct _UnityInternalDeprecatedScopeImplSetViewTypeData UnityInternalDeprecatedScopeImplSetViewTypeData;
typedef struct _UnityInternalDeprecatedScopeImplSetActiveSourcesData UnityInternalDeprecatedScopeImplSetActiveSourcesData;
typedef struct _UnityInternalDeprecatedScopeImplPushResultsData UnityInternalDeprecatedScopeImplPushResultsData;
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _UnityInternalScopeDBusImplIface {
	GTypeInterface parent_iface;
	void (*export) (UnityInternalScopeDBusImpl* self, GError** error);
	void (*unexport) (UnityInternalScopeDBusImpl* self);
	void (*queue_property_notification) (UnityInternalScopeDBusImpl* self, const gchar* prop_name, GVariant* prop_value);
	DeeSerializableModel* (*get_categories_model) (UnityInternalScopeDBusImpl* self);
	void (*set_categories_model) (UnityInternalScopeDBusImpl* self, DeeSerializableModel* value);
	DeeSerializableModel* (*get_filters_model) (UnityInternalScopeDBusImpl* self);
	void (*set_filters_model) (UnityInternalScopeDBusImpl* self, DeeSerializableModel* value);
};

struct _UnityInternalDeprecatedScopeDBusImplIface {
	GTypeInterface parent_iface;
	void (*set_categories) (UnityInternalDeprecatedScopeDBusImpl* self, GList* categories);
	void (*set_filters) (UnityInternalDeprecatedScopeDBusImpl* self, GList* filters);
};

struct _UnityInternalDeprecatedScopeImpl {
	GObject parent_instance;
	UnityInternalDeprecatedScopeImplPrivate * priv;
};

struct _UnityInternalDeprecatedScopeImplClass {
	GObjectClass parent_class;
};

struct _UnityInternalDeprecatedScopeImplPrivate {
	UnityDeprecatedScope* _owner;
	GHashTable* _channels;
	guint _dbus_id;
	GDBusConnection* _dbus_connection;
	GHashTable* _action_map;
	GRand* _rand;
	DeeSerializableModel* _categories_model;
	DeeSerializableModel* _filters_model;
	UnityProtocolViewType _view_type;
	GVariantBuilder* changed_props;
};

typedef enum  {
	UNITY_INTERNAL_FILTER_COLUMN_ID,
	UNITY_INTERNAL_FILTER_COLUMN_DISPLAY_NAME,
	UNITY_INTERNAL_FILTER_COLUMN_ICON_HINT,
	UNITY_INTERNAL_FILTER_COLUMN_RENDERER_NAME,
	UNITY_INTERNAL_FILTER_COLUMN_RENDERER_STATE,
	UNITY_INTERNAL_FILTER_COLUMN_VISIBLE,
	UNITY_INTERNAL_FILTER_COLUMN_COLLAPSED,
	UNITY_INTERNAL_FILTER_COLUMN_FILTERING,
	UNITY_INTERNAL_FILTER_COLUMN_N_COLUMNS
} UnityInternalFilterColumn;

typedef enum  {
	UNITY_INTERNAL_RESULT_COLUMN_URI,
	UNITY_INTERNAL_RESULT_COLUMN_ICON_HINT,
	UNITY_INTERNAL_RESULT_COLUMN_CATEGORY,
	UNITY_INTERNAL_RESULT_COLUMN_RESULT_TYPE,
	UNITY_INTERNAL_RESULT_COLUMN_MIMETYPE,
	UNITY_INTERNAL_RESULT_COLUMN_TITLE,
	UNITY_INTERNAL_RESULT_COLUMN_COMMENT,
	UNITY_INTERNAL_RESULT_COLUMN_DND_URI,
	UNITY_INTERNAL_RESULT_COLUMN_METADATA,
	UNITY_INTERNAL_RESULT_COLUMN_N_COLUMNS
} UnityInternalResultColumn;

struct _UnityInternalDeprecatedScopeImplActivateData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityInternalDeprecatedScopeImpl* self;
	gchar* channel_id;
	GVariant** result_arr;
	gint result_arr_length1;
	guint action_type;
	GHashTable* hints;
	GCancellable* cancellable;
	UnityProtocolActivationReplyRaw result;
	UnityProtocolActivationReplyRaw reply;
	UnityActivationResponse* response;
	UnityPreview* preview;
	GError* _tmp0_;
	UnityScopeResult scope_result;
	GVariant* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	GVariant* _tmp4_;
	const gchar* _tmp5_;
	gchar* _tmp6_;
	GVariant* _tmp7_;
	GVariant* _tmp8_;
	GVariant* _tmp9_;
	const gchar* _tmp10_;
	gchar* _tmp11_;
	GVariant* _tmp12_;
	const gchar* _tmp13_;
	gchar* _tmp14_;
	GVariant* _tmp15_;
	const gchar* _tmp16_;
	gchar* _tmp17_;
	GVariant* _tmp18_;
	const gchar* _tmp19_;
	gchar* _tmp20_;
	GVariant* _tmp21_;
	const GVariantType* _tmp22_;
	const GVariantType* _tmp23_;
	GVariant* _tmp24_;
	GHashTable* _tmp25_;
	UnityProtocolActionType action;
	UnityProtocolActionType _tmp30_;
	UnityDeprecatedScope* _tmp31_;
	UnityScopeResult _tmp32_;
	UnityActivationResponse* _tmp33_;
	UnityDeprecatedScope* _tmp34_;
	UnityScopeResult _tmp35_;
	UnityPreview* _tmp36_;
	UnityPreview* _tmp37_;
	UnityGenericPreview* _tmp38_;
	UnityPreview* _tmp39_;
	UnityScopeResult _tmp40_;
	const gchar* _tmp41_;
	UnityPreview* _tmp42_;
	UnityScopeResult _tmp43_;
	const gchar* _tmp44_;
	gchar* _tmp45_;
	gchar* _tmp46_;
	GIcon* icon;
	UnityScopeResult _tmp47_;
	const gchar* _tmp48_;
	GIcon* _tmp49_;
	UnityPreview* _tmp50_;
	GIcon* _tmp51_;
	GVariant* act_id_v;
	gconstpointer _tmp52_;
	GVariant* _tmp53_;
	gboolean _tmp54_;
	GVariant* _tmp55_;
	GVariant* _tmp56_;
	const GVariantType* _tmp57_;
	const GVariantType* _tmp58_;
	gchar* _tmp59_;
	gchar* _tmp60_;
	GError* _tmp61_;
	GError* _tmp62_;
	gchar* action_id;
	GVariant* _tmp63_;
	const gchar* _tmp64_;
	gchar* _tmp65_;
	const gchar* _tmp66_;
	UnityScopeResult _tmp67_;
	const gchar* _tmp68_;
	UnityActivationResponse* _tmp69_;
	gboolean _tmp70_;
	UnityActivationResponse* _tmp71_;
	UnityActivationResponse* _tmp72_;
	UnityHandledType _tmp73_;
	UnityHandledType _tmp74_;
	UnityActivationResponse* _tmp75_;
	UnityPreview* _tmp76_;
	gchar* new_uri;
	UnityActivationResponse* _tmp77_;
	const gchar* _tmp78_;
	const gchar* _tmp79_;
	gchar* _tmp80_;
	const gchar* _tmp81_;
	const gchar* _tmp82_;
	GVariant* _tmp83_;
	GVariant* _tmp84_;
	UnityProtocolActivationReplyRaw _tmp85_;
	UnityProtocolActivationReplyRaw _tmp86_;
	UnityProtocolActivationReplyRaw _tmp87_;
	UnityPreview* _tmp88_;
	UnityActivationResponse* _tmp89_;
	UnityPreview* _tmp90_;
	UnityPreview* _tmp91_;
	UnityPreview* _tmp92_;
	GPtrArray* actions;
	UnityPreview* _tmp93_;
	GPtrArray* _tmp94_;
	GPtrArray* _tmp95_;
	guint i;
	gboolean _tmp96_;
	guint _tmp97_;
	guint _tmp98_;
	GPtrArray* _tmp99_;
	gint _tmp100_;
	gint _tmp101_;
	UnityPreviewAction* preview_action;
	GPtrArray* _tmp102_;
	guint _tmp103_;
	gconstpointer _tmp104_;
	GHashTable* _tmp105_;
	UnityPreviewAction* _tmp106_;
	const gchar* _tmp107_;
	const gchar* _tmp108_;
	gchar* _tmp109_;
	UnityPreviewAction* _tmp110_;
	UnityPreviewAction* _tmp111_;
	UnityPreview* _tmp112_;
	UnityActivationResponse* _tmp113_;
	UnityActivationResponse* _tmp114_;
	UnityActivationResponse* _tmp115_;
	UnityScopeResult _tmp116_;
	const gchar* _tmp117_;
	gchar* _tmp118_;
	UnityActivationResponse* _tmp119_;
	UnityHandledType _tmp120_;
	UnityHandledType _tmp121_;
	UnityActivationResponse* _tmp122_;
	GHashTable* _tmp123_;
	GError * _inner_error_;
};

struct _UnityInternalScopeChannel {
	GObject parent_instance;
	UnityInternalScopeChannelPrivate * priv;
	UnityInternalUtilsAsyncMutex* model_lock;
	DeeSharedModel* transfer_model;
	DeeSerializableModel* backend_model;
	UnityFilterSet* filters;
	UnityProtocolChannelType channel_type;
	gchar* id;
	UnityScopeSearchBase* last_search;
	guint last_search_tag;
};

struct _UnityInternalScopeChannelClass {
	GObjectClass parent_class;
};

struct _Block18Data {
	int _ref_count_;
	UnityInternalDeprecatedScopeImpl* self;
	gpointer _async_data_;
};

struct _Block19Data {
	int _ref_count_;
	Block18Data * _data18_;
	gint64 search_end_time;
};

typedef enum  {
	UNITY_INTERNAL_CHANNEL_STATE_IDLE,
	UNITY_INTERNAL_CHANNEL_STATE_SEARCH_ACTIVE
} UnityInternalChannelState;

struct _UnityInternalDeprecatedScopeImplSearchInternalData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityInternalDeprecatedScopeImpl* self;
	gchar* search_string;
	GHashTable* hints;
	UnityInternalScopeChannel* channel;
	GHashTable* result;
	Block18Data* _data18_;
	GHashTable* _result_;
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	GVariant* filter_row_variant;
	gconstpointer _tmp3_;
	GVariant* _tmp4_;
	GVariant* _tmp5_;
	UnityScopeSearchBase* _tmp6_;
	UnityScopeSearchBase* _tmp7_;
	UnitySearchContext* _tmp8_;
	UnityCancellable* _tmp9_;
	UnityCancellable* cancellable;
	UnityCancellable* _tmp10_;
	UnitySearchContext search_context;
	gchar* _tmp11_;
	UnityFilterSet* _tmp12_;
	UnityFilterSet* _tmp13_;
	UnitySearchMetadata* _tmp14_;
	UnityInternalDeeResultSet* result_set;
	DeeSerializableModel* _tmp15_;
	UnityInternalDeeResultSet* _tmp16_;
	UnityInternalDeeResultSet* _tmp17_;
	UnityInternalDeeResultSet* _tmp18_;
	UnityResultSet* _tmp19_;
	UnityCancellable* _tmp20_;
	UnityCancellable* _tmp21_;
	UnityDeprecatedScopeSearch* new_search;
	UnityDeprecatedScope* _tmp22_;
	const gchar* _tmp23_;
	DeeSerializableModel* _tmp24_;
	UnityDeprecatedScopeSearch* _tmp25_;
	UnityDeprecatedScopeSearch* _tmp26_;
	UnitySearchContext _tmp27_;
	gchar* normalized_query;
	UnityDeprecatedScopeSearch* _tmp28_;
	gchar* _tmp29_;
	const gchar* _tmp30_;
	gchar* _tmp31_;
	UnityScopeSearchBase* last_search;
	UnityScopeSearchBase* _tmp32_;
	UnityScopeSearchBase* _tmp33_;
	UnityScopeSearchBase* _tmp34_;
	UnityScopeSearchBase* _tmp35_;
	UnitySearchContext* _tmp36_;
	const gchar* _tmp37_;
	const gchar* _tmp38_;
	UnityDeprecatedScopeSearch* last_depr_search;
	UnityScopeSearchBase* _tmp39_;
	UnityDeprecatedScopeSearch* _tmp40_;
	GHashTable* last_hints;
	UnityDeprecatedScopeSearch* _tmp41_;
	GHashTable* _tmp42_;
	GHashTable* _tmp43_;
	GHashTable* _tmp44_;
	GHashTable* _tmp45_;
	gchar* _tmp46_;
	GHashTable* _tmp47_;
	gconstpointer _tmp48_;
	GVariant* _tmp49_;
	GHashTable* _tmp50_;
	gchar* _tmp51_;
	GVariant* _tmp52_;
	UnityScopeSearchBase* _tmp53_;
	UnitySearchContext* _tmp54_;
	UnityCancellable* _tmp55_;
	UnityDeprecatedScopeSearch* _tmp56_;
	UnityScopeSearchBase* _tmp57_;
	Block19Data* _data19_;
	UnityInternalUtilsAsyncMutex* _tmp58_;
	UnityInternalUtilsAsyncMutex* _tmp59_;
	UnityCancellable* _tmp60_;
	const gchar* _tmp61_;
	GError* _tmp62_;
	UnityInternalDeeResultSet* _tmp63_;
	DeeSharedModel* _tmp64_;
	gint64 search_start_time;
	gboolean _tmp65_;
	gint64 _tmp66_;
	UnityDeprecatedScope* _tmp67_;
	const gchar* _tmp68_;
	const gchar* _tmp69_;
	UnityDeprecatedScopeSearch* _tmp70_;
	UnityCancellable* _tmp71_;
	UnityInternalDeeResultSet* _tmp72_;
	GHashTable* _tmp73_;
	gchar* _tmp74_;
	GVariant* _tmp75_;
	UnityDeprecatedScope* _tmp76_;
	const gchar* _tmp77_;
	const gchar* _tmp78_;
	gboolean _tmp79_;
	gint64 delta_us;
	gint64 _tmp80_;
	gint64 _tmp81_;
	gdouble delta;
	gint64 _tmp82_;
	GHashTable* _tmp83_;
	gchar* _tmp84_;
	gdouble _tmp85_;
	GVariant* _tmp86_;
	GHashTable* reply_hints;
	UnityDeprecatedScopeSearch* _tmp87_;
	GHashTable* _tmp88_;
	GHashTable* _tmp89_;
	GHashTable* _tmp90_;
	GHashTable* _tmp91_;
	gchar* _tmp92_;
	GHashTable* _tmp93_;
	gconstpointer _tmp94_;
	GVariant* _tmp95_;
	UnityInternalUtilsAsyncMutex* _tmp96_;
	UnityCancellable* _tmp97_;
	const gchar* _tmp98_;
	GError* _tmp99_;
	GError * _inner_error_;
};

struct _UnityInternalDeprecatedScopeImplSearchData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityInternalDeprecatedScopeImpl* self;
	gchar* channel_id;
	gchar* search_string;
	GHashTable* hints;
	GCancellable* cancellable;
	GHashTable* result;
	GHashTable* _result_;
	UnityInternalScopeChannel* channel;
	UnityInternalScopeChannel* _tmp0_;
	GHashTable* _tmp1_;
	UnityInternalScopeChannel* _tmp2_;
	GHashTable* _tmp3_;
	GHashTable* _tmp4_;
	GError * _inner_error_;
};

struct _UnityInternalDeprecatedScopeImplOpenChannelData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityInternalDeprecatedScopeImpl* self;
	guint channel_type;
	GHashTable* hints;
	GCancellable* cancellable;
	GHashTable* out_hints;
	char* sender;
	gchar* result;
	UnityProtocolChannelFlags flags;
	UnityInternalScopeChannel* channel;
	UnityInternalScopeChannel* _tmp0_;
	UnitySchema* schema;
	UnityDeprecatedScope* _tmp1_;
	UnitySchema* _tmp2_;
	UnitySchema* _tmp3_;
	UnitySchema* _tmp4_;
	GHashTable* required_schema;
	GHashFunc _tmp5_;
	GEqualFunc _tmp6_;
	GHashTable* _tmp7_;
	GHashTable* optional_schema;
	GHashFunc _tmp8_;
	GEqualFunc _tmp9_;
	GHashTable* _tmp10_;
	UnitySchema* _tmp11_;
	GList* _tmp12_;
	GList* field_collection;
	GList* field_it;
	UnitySchemaFieldInfo* field;
	UnitySchemaFieldInfo* _tmp13_;
	UnitySchemaFieldType _tmp14_;
	GHashTable* _tmp15_;
	UnitySchemaFieldInfo* _tmp16_;
	const gchar* _tmp17_;
	gchar* _tmp18_;
	UnitySchemaFieldInfo* _tmp19_;
	const gchar* _tmp20_;
	gchar* _tmp21_;
	GHashTable* _tmp22_;
	UnitySchemaFieldInfo* _tmp23_;
	const gchar* _tmp24_;
	gchar* _tmp25_;
	UnitySchemaFieldInfo* _tmp26_;
	const gchar* _tmp27_;
	gchar* _tmp28_;
	gchar* model_name;
	UnityInternalScopeChannel* _tmp29_;
	gchar* _tmp30_;
	gchar* _tmp31_;
	GHashTable* _tmp32_;
	GHashTable* _tmp33_;
	DeeSerializableModel* _tmp34_;
	DeeSerializableModel* _tmp35_;
	UnityProtocolChannelFlags _tmp36_;
	gchar* _tmp37_;
	gchar* _tmp38_;
	UnityInternalScopeChannel* _tmp39_;
	DeeSharedModel* _tmp40_;
	UnityInternalScopeChannel* _tmp41_;
	DeeSharedModel* _tmp42_;
	UnityInternalScopeChannel* _tmp43_;
	DeeSharedModel* _tmp44_;
	GHashTable* _tmp45_;
	UnityInternalScopeChannel* _tmp46_;
	const gchar* _tmp47_;
	gchar* _tmp48_;
	UnityInternalScopeChannel* _tmp49_;
	UnityInternalScopeChannel* _tmp50_;
	GHashFunc _tmp51_;
	GEqualFunc _tmp52_;
	GHashTable* _tmp53_;
	gchar* _tmp54_;
	const gchar* _tmp55_;
	GVariant* _tmp56_;
	UnityInternalScopeChannel* _tmp57_;
	const gchar* _tmp58_;
	gchar* _tmp59_;
};

struct _UnityInternalDeprecatedScopeImplCloseChannelData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityInternalDeprecatedScopeImpl* self;
	gchar* channel_id;
	GHashTable* hints;
	GCancellable* cancellable;
	GHashTable* _tmp0_;
	GError* _tmp1_;
	GError * _inner_error_;
};

struct _UnityInternalDeprecatedScopeImplSetViewTypeData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityInternalDeprecatedScopeImpl* self;
	guint view_type_id;
	UnityProtocolViewType view_type;
};

struct _UnityInternalDeprecatedScopeImplSetActiveSourcesData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityInternalDeprecatedScopeImpl* self;
	gchar* channel_id;
	gchar** sources;
	gint sources_length1;
	GCancellable* cancellable;
	UnityDeprecatedScope* _tmp0_;
};

struct _UnityInternalDeprecatedScopeImplPushResultsData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityInternalDeprecatedScopeImpl* self;
	gchar* channel_id;
	gchar* search_string;
	gchar* source_scope_id;
	GVariant* _result_;
	gchar** categories;
	gint categories_length1;
	GCancellable* cancellable;
	GHashTable* result;
	GError* _tmp0_;
	GError * _inner_error_;
};


static gpointer unity_internal_deprecated_scope_impl_parent_class = NULL;
static gboolean unity_internal_deprecated_scope_impl_measure_requests;
static gboolean unity_internal_deprecated_scope_impl_measure_requests = FALSE;
static UnityProtocolScopeServiceIface * unity_internal_deprecated_scope_impl_unity_protocol_scope_service_parent_iface = NULL;
static UnityInternalScopeDBusImplIface * unity_internal_deprecated_scope_impl_unity_internal_scope_dbus_impl_parent_iface = NULL;
static UnityInternalDeprecatedScopeDBusImplIface * unity_internal_deprecated_scope_impl_unity_internal_deprecated_scope_dbus_impl_parent_iface = NULL;

GType unity_internal_scope_dbus_impl_get_type (void) G_GNUC_CONST;
GType unity_internal_deprecated_scope_dbus_impl_get_type (void) G_GNUC_CONST;
void unity_internal_deprecated_scope_dbus_impl_set_categories (UnityInternalDeprecatedScopeDBusImpl* self,
                                                               GList* categories);
void unity_internal_deprecated_scope_dbus_impl_set_filters (UnityInternalDeprecatedScopeDBusImpl* self,
                                                            GList* filters);
GType unity_internal_deprecated_scope_impl_get_type (void) G_GNUC_CONST;
GType unity_internal_scope_channel_get_type (void) G_GNUC_CONST;
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImplPrivate))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_SOURCES_FILTER_ID "unity-sources"
UnityInternalDeprecatedScopeImpl* unity_internal_deprecated_scope_impl_new (UnityDeprecatedScope* owner);
UnityInternalDeprecatedScopeImpl* unity_internal_deprecated_scope_impl_construct (GType object_type,
                                                                                  UnityDeprecatedScope* owner);
static gchar* unity_internal_deprecated_scope_impl_create_dbus_name (UnityInternalDeprecatedScopeImpl* self);
static UnityDeprecatedScope* unity_internal_deprecated_scope_impl_get_owner (UnityInternalDeprecatedScopeImpl* self);
static void unity_internal_deprecated_scope_impl_create_models (UnityInternalDeprecatedScopeImpl* self);
void unity_internal_scope_dbus_impl_set_categories_model (UnityInternalScopeDBusImpl* self,
                                                          DeeSerializableModel* value);
DeeSerializableModel* unity_internal_scope_dbus_impl_get_categories_model (UnityInternalScopeDBusImpl* self);
void unity_internal_scope_dbus_impl_set_filters_model (UnityInternalScopeDBusImpl* self,
                                                       DeeSerializableModel* value);
DeeSerializableModel* unity_internal_scope_dbus_impl_get_filters_model (UnityInternalScopeDBusImpl* self);
static void unity_internal_deprecated_scope_impl_real_export (UnityInternalScopeDBusImpl* base,
                                                       GError** error);
static void unity_internal_deprecated_scope_impl_real_unexport (UnityInternalScopeDBusImpl* base);
static void unity_internal_deprecated_scope_impl_real_queue_property_notification (UnityInternalScopeDBusImpl* base,
                                                                            const gchar* prop_name,
                                                                            GVariant* prop_value);
static gboolean ___lambda13_ (UnityInternalDeprecatedScopeImpl* self);
static gboolean ____lambda13__gsource_func (gpointer self);
static void unity_internal_deprecated_scope_impl_real_set_categories (UnityInternalDeprecatedScopeDBusImpl* base,
                                                               GList* categories);
gchar* unity_internal_utils_icon_to_string (GIcon* icon);
GVariant* unity_internal_utils_hash_table_to_asv (GHashTable* hash);
GHashTable* unity_category_get_hints (UnityCategory* self);
void unity_internal_scope_dbus_impl_queue_property_notification (UnityInternalScopeDBusImpl* self,
                                                                 const gchar* prop_name,
                                                                 GVariant* prop_value);
static void unity_internal_deprecated_scope_impl_real_set_filters (UnityInternalDeprecatedScopeDBusImpl* base,
                                                            GList* filters);
static void unity_internal_deprecated_scope_impl_on_filter_option_changed (UnityInternalDeprecatedScopeImpl* self,
                                                                    UnityFilter* filter);
static void _unity_internal_deprecated_scope_impl_on_filter_option_changed_unity_filter_changed (UnityFilter* _sender,
                                                                                          gpointer self);
GType unity_internal_filter_column_get_type (void) G_GNUC_CONST;
GHashTable* unity_filter_get_hints (UnityFilter* self);
static void unity_internal_deprecated_scope_impl_real_activate_data_free (gpointer _data);
static void unity_internal_deprecated_scope_impl_real_activate_async_ready_wrapper (GObject *source_object,
                                                                             GAsyncResult *res,
                                                                             void *user_data);
static void unity_internal_deprecated_scope_impl_real_activate (UnityProtocolScopeService* base,
                                                         const gchar* channel_id,
                                                         GVariant** result_arr,
                                                         int result_arr_length1,
                                                         guint action_type,
                                                         GHashTable* hints,
                                                         GCancellable* cancellable,
                                                         GAsyncReadyCallback _callback_,
                                                         gpointer _user_data_);
static gboolean unity_internal_deprecated_scope_impl_real_activate_co (UnityInternalDeprecatedScopeImplActivateData* _data_);
GType unity_internal_result_column_get_type (void) G_GNUC_CONST;
static GHashTable* _variant_get34 (GVariant* value);
static void unity_internal_deprecated_scope_impl_activate_ready (GObject* source_object,
                                                          GAsyncResult* _res_,
                                                          gpointer _user_data_);
UnityGenericPreview* unity_generic_preview_empty (void);
#define UNITY_INTERNAL_ACTIVATE_PREVIEW_ACTION_HINT "preview-action-id"
UnityActivationResponse* unity_internal_deprecated_scope_impl_activate_action (UnityInternalDeprecatedScopeImpl* self,
                                                                               const gchar* action_id,
                                                                               const gchar* uri,
                                                                               GHashTable* hints);
UnityPreview* unity_activation_response_get_preview (UnityActivationResponse* self);
static GVariant* _variant_new35 (const gchar* value);
GPtrArray* unity_preview_get_actions (UnityPreview* self);
GHashTable* unity_activation_response_get_hints (UnityActivationResponse* self);
static gchar* unity_internal_deprecated_scope_impl_get_search_key (UnityInternalDeprecatedScopeImpl* self,
                                                            UnityDeprecatedScopeSearch* search);
void unity_internal_deprecated_scope_impl_queue_search_for_type (UnityInternalDeprecatedScopeImpl* self,
                                                                 UnitySearchType search_type);
gpointer unity_internal_utils_async_mutex_ref (gpointer instance);
void unity_internal_utils_async_mutex_unref (gpointer instance);
GParamSpec* unity_internal_utils_param_spec_async_mutex (const gchar* name,
                                                         const gchar* nick,
                                                         const gchar* blurb,
                                                         GType object_type,
                                                         GParamFlags flags);
void unity_internal_utils_value_set_async_mutex (GValue* value,
                                                 gpointer v_object);
void unity_internal_utils_value_take_async_mutex (GValue* value,
                                                  gpointer v_object);
gpointer unity_internal_utils_value_get_async_mutex (const GValue* value);
GType unity_internal_utils_async_mutex_get_type (void) G_GNUC_CONST;
static void unity_internal_deprecated_scope_impl_search_internal_data_free (gpointer _data);
static void unity_internal_deprecated_scope_impl_search_internal_async_ready_wrapper (GObject *source_object,
                                                                               GAsyncResult *res,
                                                                               void *user_data);
static void unity_internal_deprecated_scope_impl_search_internal (UnityInternalDeprecatedScopeImpl* self,
                                                           const gchar* search_string,
                                                           GHashTable* hints,
                                                           UnityInternalScopeChannel* channel,
                                                           GAsyncReadyCallback _callback_,
                                                           gpointer _user_data_);
static GHashTable* unity_internal_deprecated_scope_impl_search_internal_finish (UnityInternalDeprecatedScopeImpl* self,
                                                                         GAsyncResult* _res_,
                                                                         GError** error);
static gboolean unity_internal_deprecated_scope_impl_search_internal_co (UnityInternalDeprecatedScopeImplSearchInternalData* _data_);
static Block18Data* block18_data_ref (Block18Data* _data18_);
static void block18_data_unref (void * _userdata_);
static void _g_free0_ (gpointer var);
static void _g_variant_unref0_ (gpointer var);
#define UNITY_INTERNAL_SEARCH_FILTER_ROW_HINT "changed-filter-row"
static void unity_internal_deprecated_scope_impl_update_filter_state (UnityInternalDeprecatedScopeImpl* self,
                                                               UnityInternalScopeChannel* channel,
                                                               GVariant* changed_row,
                                                               GError** error);
UnitySearchType unity_internal_scope_channel_get_search_type (UnityInternalScopeChannel* self);
GType unity_internal_dee_result_set_get_type (void) G_GNUC_CONST;
UnityInternalDeeResultSet* unity_internal_dee_result_set_new_with_model (DeeSerializableModel* model);
UnityInternalDeeResultSet* unity_internal_dee_result_set_construct_with_model (GType object_type,
                                                                               DeeSerializableModel* model);
UnityDeprecatedScopeSearch* unity_deprecated_scope_search_new (UnityDeprecatedScope* owner,
                                                               const gchar* channel_id,
                                                               GHashTable* hints,
                                                               DeeSerializableModel* results_model);
UnityDeprecatedScopeSearch* unity_deprecated_scope_search_construct (GType object_type,
                                                                     UnityDeprecatedScope* owner,
                                                                     const gchar* channel_id,
                                                                     GHashTable* hints,
                                                                     DeeSerializableModel* results_model);
gboolean unity_internal_scope_channel_is_search_running (UnityInternalScopeChannel* self);
void unity_internal_scope_channel_wait_for_search (UnityInternalScopeChannel* self,
                                                   GAsyncReadyCallback _callback_,
                                                   gpointer _user_data_);
void unity_internal_scope_channel_wait_for_search_finish (UnityInternalScopeChannel* self,
                                                          GAsyncResult* _res_);
static void unity_internal_deprecated_scope_impl_search_internal_ready (GObject* source_object,
                                                                 GAsyncResult* _res_,
                                                                 gpointer _user_data_);
GHashTable* unity_deprecated_scope_search_get_reply_hints (UnityDeprecatedScopeSearch* self);
#define UNITY_INTERNAL_SEARCH_NO_RESULTS_HINT "no-results-hint"
#define UNITY_INTERNAL_SEARCH_SEQNUM_HINT "model-seqnum"
guint64 unity_internal_scope_channel_get_last_seqnum (UnityInternalScopeChannel* self);
static Block19Data* block19_data_ref (Block19Data* _data19_);
static void block19_data_unref (void * _userdata_);
gboolean unity_internal_utils_async_mutex_try_lock (UnityInternalUtilsAsyncMutex* self);
void unity_internal_utils_async_mutex_lock (UnityInternalUtilsAsyncMutex* self,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_);
void unity_internal_utils_async_mutex_lock_finish (UnityInternalUtilsAsyncMutex* self,
                                                   GAsyncResult* _res_);
GType unity_internal_channel_state_get_type (void) G_GNUC_CONST;
void unity_internal_scope_channel_set_state (UnityInternalScopeChannel* self,
                                             UnityInternalChannelState new_state);
static gboolean _unity_internal_deprecated_scope_impl_search_internal_co_gsource_func (gpointer self);
void unity_internal_dee_result_set_set_flush_model (UnityInternalDeeResultSet* self,
                                                    DeeSerializableModel* value);
static void ___lambda16_ (Block19Data* _data19_);
static void ____lambda16__unity_scope_search_base_callback (UnityScopeSearchBase* instance,
                                                     gpointer self);
#define UNITY_INTERNAL_SEARCH_TIME_HINT "search-time"
void unity_internal_utils_async_mutex_unlock (UnityInternalUtilsAsyncMutex* self);
static void unity_internal_deprecated_scope_impl_real_search_data_free (gpointer _data);
static void unity_internal_deprecated_scope_impl_real_search_async_ready_wrapper (GObject *source_object,
                                                                           GAsyncResult *res,
                                                                           void *user_data);
static void unity_internal_deprecated_scope_impl_real_search (UnityProtocolScopeService* base,
                                                       const gchar* channel_id,
                                                       const gchar* search_string,
                                                       GHashTable* hints,
                                                       GCancellable* cancellable,
                                                       GAsyncReadyCallback _callback_,
                                                       gpointer _user_data_);
static gboolean unity_internal_deprecated_scope_impl_real_search_co (UnityInternalDeprecatedScopeImplSearchData* _data_);
static UnityInternalScopeChannel* unity_internal_deprecated_scope_impl_get_channel_by_id (UnityInternalDeprecatedScopeImpl* self,
                                                                                   const gchar* channel_id,
                                                                                   GError** error);
static void unity_internal_deprecated_scope_impl_search_ready (GObject* source_object,
                                                        GAsyncResult* _res_,
                                                        gpointer _user_data_);
UnityFilter* unity_internal_scope_channel_get_filter_by_id (UnityInternalScopeChannel* self,
                                                            const gchar* filter_id);
void unity_filter_set_filtering (UnityFilter* self,
                                 gboolean value);
void unity_filter_set_collapsed (UnityFilter* self,
                                 gboolean value);
void unity_filter_update (UnityFilter* self,
                          GVariant* properties);
static void unity_internal_deprecated_scope_impl_real_open_channel_data_free (gpointer _data);
static void unity_internal_deprecated_scope_impl_real_open_channel_async_ready_wrapper (GObject *source_object,
                                                                                 GAsyncResult *res,
                                                                                 void *user_data);
static void unity_internal_deprecated_scope_impl_real_open_channel (UnityProtocolScopeService* base,
                                                             guint channel_type,
                                                             GHashTable* hints,
                                                             GCancellable* cancellable,
                                                             const char* sender,
                                                             GAsyncReadyCallback _callback_,
                                                             gpointer _user_data_);
static gboolean unity_internal_deprecated_scope_impl_real_open_channel_co (UnityInternalDeprecatedScopeImplOpenChannelData* _data_);
UnityInternalScopeChannel* unity_internal_scope_channel_new (UnityProtocolChannelType channel_type_);
UnityInternalScopeChannel* unity_internal_scope_channel_construct (GType object_type,
                                                                   UnityProtocolChannelType channel_type_);
gchar* unity_internal_scope_channel_create_channel (UnityInternalScopeChannel* self,
                                                    const gchar* swarm_name,
                                                    GHashTable* metadata_schema,
                                                    GHashTable* optional_metadata,
                                                    DeeSerializableModel* filter_model,
                                                    UnityProtocolChannelFlags flags);
void unity_internal_utils_wait_for_model_synchronization (DeeSharedModel* model,
                                                          GAsyncReadyCallback _callback_,
                                                          gpointer _user_data_);
void unity_internal_utils_wait_for_model_synchronization_finish (GAsyncResult* _res_);
static void unity_internal_deprecated_scope_impl_open_channel_ready (GObject* source_object,
                                                              GAsyncResult* _res_,
                                                              gpointer _user_data_);
static void unity_internal_deprecated_scope_impl_real_close_channel_data_free (gpointer _data);
static void unity_internal_deprecated_scope_impl_real_close_channel_async_ready_wrapper (GObject *source_object,
                                                                                  GAsyncResult *res,
                                                                                  void *user_data);
static void unity_internal_deprecated_scope_impl_real_close_channel (UnityProtocolScopeService* base,
                                                              const gchar* channel_id,
                                                              GHashTable* hints,
                                                              GCancellable* cancellable,
                                                              GAsyncReadyCallback _callback_,
                                                              gpointer _user_data_);
static gboolean unity_internal_deprecated_scope_impl_real_close_channel_co (UnityInternalDeprecatedScopeImplCloseChannelData* _data_);
static void unity_internal_deprecated_scope_impl_real_set_view_type_data_free (gpointer _data);
static void unity_internal_deprecated_scope_impl_real_set_view_type_async_ready_wrapper (GObject *source_object,
                                                                                  GAsyncResult *res,
                                                                                  void *user_data);
static void unity_internal_deprecated_scope_impl_real_set_view_type (UnityProtocolScopeService* base,
                                                              guint view_type_id,
                                                              GAsyncReadyCallback _callback_,
                                                              gpointer _user_data_);
static gboolean unity_internal_deprecated_scope_impl_real_set_view_type_co (UnityInternalDeprecatedScopeImplSetViewTypeData* _data_);
void unity_internal_deprecated_scope_impl_set_view_type (UnityInternalDeprecatedScopeImpl* self,
                                                         UnityProtocolViewType value);
static void unity_internal_deprecated_scope_impl_set_active_sources_data_free (gpointer _data);
static void unity_internal_deprecated_scope_impl_set_active_sources_async_ready_wrapper (GObject *source_object,
                                                                                  GAsyncResult *res,
                                                                                  void *user_data);
void unity_internal_deprecated_scope_impl_set_active_sources (UnityInternalDeprecatedScopeImpl* self,
                                                              const gchar* channel_id,
                                                              gchar** sources,
                                                              int sources_length1,
                                                              GCancellable* cancellable,
                                                              GAsyncReadyCallback _callback_,
                                                              gpointer _user_data_);
void unity_internal_deprecated_scope_impl_set_active_sources_finish (UnityInternalDeprecatedScopeImpl* self,
                                                                     GAsyncResult* _res_,
                                                                     GError** error);
static gboolean unity_internal_deprecated_scope_impl_set_active_sources_co (UnityInternalDeprecatedScopeImplSetActiveSourcesData* _data_);
void unity_deprecated_scope_base_set_active_sources_internal (UnityDeprecatedScopeBase* self,
                                                              gchar** active_sources_,
                                                              int active_sources__length1);
static void unity_internal_deprecated_scope_impl_real_push_results_data_free (gpointer _data);
static void unity_internal_deprecated_scope_impl_real_push_results_async_ready_wrapper (GObject *source_object,
                                                                                 GAsyncResult *res,
                                                                                 void *user_data);
static void unity_internal_deprecated_scope_impl_real_push_results (UnityProtocolScopeService* base,
                                                             const gchar* channel_id,
                                                             const gchar* search_string,
                                                             const gchar* source_scope_id,
                                                             GVariant* _result_,
                                                             gchar** categories,
                                                             int categories_length1,
                                                             GCancellable* cancellable,
                                                             GAsyncReadyCallback _callback_,
                                                             gpointer _user_data_);
static gboolean unity_internal_deprecated_scope_impl_real_push_results_co (UnityInternalDeprecatedScopeImplPushResultsData* _data_);
static void unity_internal_deprecated_scope_impl_set_owner (UnityInternalDeprecatedScopeImpl* self,
                                                     UnityDeprecatedScope* value);
UnityProtocolViewType unity_internal_deprecated_scope_impl_get_view_type (UnityInternalDeprecatedScopeImpl* self);
static GObject * unity_internal_deprecated_scope_impl_constructor (GType type,
                                                            guint n_construct_properties,
                                                            GObjectConstructParam * construct_properties);
static void _g_object_unref0_ (gpointer var);
#define UNITY_INTERNAL_VAR_MEASURED_SEARCHES "LIBUNITY_TIME_SEARCHES"
static void unity_internal_deprecated_scope_impl_finalize (GObject * obj);
static void _vala_unity_internal_deprecated_scope_impl_get_property (GObject * object,
                                                              guint property_id,
                                                              GValue * value,
                                                              GParamSpec * pspec);
static void _vala_unity_internal_deprecated_scope_impl_set_property (GObject * object,
                                                              guint property_id,
                                                              const GValue * value,
                                                              GParamSpec * pspec);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);

extern const gchar* UNITY_INTERNAL_CATEGORIES_SCHEMA[5];
extern const gchar* UNITY_INTERNAL_FILTERS_SCHEMA[8];
extern const gchar* UNITY_INTERNAL_RESULTS_SCHEMA[9];

void
unity_internal_deprecated_scope_dbus_impl_set_categories (UnityInternalDeprecatedScopeDBusImpl* self,
                                                          GList* categories)
{
	g_return_if_fail (self != NULL);
	UNITY_INTERNAL_DEPRECATED_SCOPE_DBUS_IMPL_GET_INTERFACE (self)->set_categories (self, categories);
}


void
unity_internal_deprecated_scope_dbus_impl_set_filters (UnityInternalDeprecatedScopeDBusImpl* self,
                                                       GList* filters)
{
	g_return_if_fail (self != NULL);
	UNITY_INTERNAL_DEPRECATED_SCOPE_DBUS_IMPL_GET_INTERFACE (self)->set_filters (self, filters);
}


static void
unity_internal_deprecated_scope_dbus_impl_default_init (UnityInternalDeprecatedScopeDBusImplIface * iface)
{
}


GType
unity_internal_deprecated_scope_dbus_impl_get_type (void)
{
	static volatile gsize unity_internal_deprecated_scope_dbus_impl_type_id__volatile = 0;
	if (g_once_init_enter (&unity_internal_deprecated_scope_dbus_impl_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityInternalDeprecatedScopeDBusImplIface), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_internal_deprecated_scope_dbus_impl_default_init, (GClassFinalizeFunc) NULL, NULL, 0, 0, (GInstanceInitFunc) NULL, NULL };
		GType unity_internal_deprecated_scope_dbus_impl_type_id;
		unity_internal_deprecated_scope_dbus_impl_type_id = g_type_register_static (G_TYPE_INTERFACE, "UnityInternalDeprecatedScopeDBusImpl", &g_define_type_info, 0);
		g_type_interface_add_prerequisite (unity_internal_deprecated_scope_dbus_impl_type_id, UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL);
		g_once_init_leave (&unity_internal_deprecated_scope_dbus_impl_type_id__volatile, unity_internal_deprecated_scope_dbus_impl_type_id);
	}
	return unity_internal_deprecated_scope_dbus_impl_type_id__volatile;
}


UnityInternalDeprecatedScopeImpl*
unity_internal_deprecated_scope_impl_construct (GType object_type,
                                                UnityDeprecatedScope* owner)
{
	UnityInternalDeprecatedScopeImpl * self = NULL;
	g_return_val_if_fail (owner != NULL, NULL);
	self = (UnityInternalDeprecatedScopeImpl*) g_object_new (object_type, "owner", owner, NULL);
	return self;
}


UnityInternalDeprecatedScopeImpl*
unity_internal_deprecated_scope_impl_new (UnityDeprecatedScope* owner)
{
	return unity_internal_deprecated_scope_impl_construct (UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, owner);
}


static gchar*
unity_internal_deprecated_scope_impl_create_dbus_name (UnityInternalDeprecatedScopeImpl* self)
{
	gchar* result = NULL;
	gint64 t = 0LL;
	static const char format_string[] = "com.canonical.Unity.Scope.%s.T%" G_GINT64_FORMAT "%d";
	gchar* dbus_name = NULL;
	UnityDeprecatedScope* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	GRand* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	g_return_val_if_fail (self != NULL, NULL);
	t = g_get_monotonic_time ();
	_tmp0_ = self->priv->_owner;
	_tmp1_ = unity_deprecated_scope_base_get_dbus_path ((UnityDeprecatedScopeBase*) _tmp0_);
	_tmp2_ = _tmp1_;
	_tmp3_ = g_path_get_basename (_tmp2_);
	_tmp4_ = _tmp3_;
	_tmp5_ = self->priv->_rand;
	_tmp6_ = g_strdup_printf (format_string, _tmp4_, t, g_rand_int_range (_tmp5_, (gint32) 0, (gint32) 10000));
	_tmp7_ = _tmp6_;
	_g_free0 (_tmp4_);
	dbus_name = _tmp7_;
	result = dbus_name;
	return result;
}


static void
unity_internal_deprecated_scope_impl_create_models (UnityInternalDeprecatedScopeImpl* self)
{
	DeeSequenceModel* _tmp0_;
	DeeSequenceModel* _tmp1_;
	DeeSerializableModel* _tmp2_;
	DeeSerializableModel* _tmp3_;
	DeeSequenceModel* _tmp4_;
	DeeSequenceModel* _tmp5_;
	DeeSerializableModel* _tmp6_;
	DeeSerializableModel* _tmp7_;
	g_return_if_fail (self != NULL);
	_tmp0_ = (DeeSequenceModel*) dee_sequence_model_new ();
	_tmp1_ = _tmp0_;
	unity_internal_scope_dbus_impl_set_categories_model ((UnityInternalScopeDBusImpl*) self, (DeeSerializableModel*) _tmp1_);
	_g_object_unref0 (_tmp1_);
	_tmp2_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
	_tmp3_ = _tmp2_;
	dee_model_set_schema_full ((DeeModel*) _tmp3_, UNITY_INTERNAL_CATEGORIES_SCHEMA, (guint) G_N_ELEMENTS (UNITY_INTERNAL_CATEGORIES_SCHEMA));
	_tmp4_ = (DeeSequenceModel*) dee_sequence_model_new ();
	_tmp5_ = _tmp4_;
	unity_internal_scope_dbus_impl_set_filters_model ((UnityInternalScopeDBusImpl*) self, (DeeSerializableModel*) _tmp5_);
	_g_object_unref0 (_tmp5_);
	_tmp6_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
	_tmp7_ = _tmp6_;
	dee_model_set_schema_full ((DeeModel*) _tmp7_, UNITY_INTERNAL_FILTERS_SCHEMA, (guint) G_N_ELEMENTS (UNITY_INTERNAL_FILTERS_SCHEMA));
}


static void
unity_internal_deprecated_scope_impl_real_export (UnityInternalScopeDBusImpl* base,
                                                  GError** error)
{
	UnityInternalDeprecatedScopeImpl * self;
	GDBusConnection* _tmp0_ = NULL;
	GDBusConnection* _tmp1_;
	GDBusConnection* _tmp2_;
	guint _tmp3_ = 0U;
	GDBusConnection* _tmp4_;
	UnityDeprecatedScope* _tmp5_;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	guint _tmp8_;
	GError * _inner_error_ = NULL;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp1_ = g_bus_get_sync (G_BUS_TYPE_SESSION, NULL, &_inner_error_);
	_tmp0_ = _tmp1_;
	if (G_UNLIKELY (_inner_error_ != NULL)) {
		g_propagate_error (error, _inner_error_);
		return;
	}
	_tmp2_ = _tmp0_;
	_tmp0_ = NULL;
	_g_object_unref0 (self->priv->_dbus_connection);
	self->priv->_dbus_connection = _tmp2_;
	_tmp4_ = self->priv->_dbus_connection;
	_tmp5_ = self->priv->_owner;
	_tmp6_ = unity_deprecated_scope_base_get_dbus_path ((UnityDeprecatedScopeBase*) _tmp5_);
	_tmp7_ = _tmp6_;
	_tmp8_ = unity_protocol_scope_service_register_object (G_TYPE_CHECK_INSTANCE_TYPE (self, UNITY_PROTOCOL_TYPE_SCOPE_SERVICE) ? ((UnityProtocolScopeService*) self) : NULL, _tmp4_, _tmp7_, &_inner_error_);
	_tmp3_ = _tmp8_;
	if (G_UNLIKELY (_inner_error_ != NULL)) {
		g_propagate_error (error, _inner_error_);
		_g_object_unref0 (_tmp0_);
		return;
	}
	self->priv->_dbus_id = _tmp3_;
	_g_object_unref0 (_tmp0_);
}


static void
unity_internal_deprecated_scope_impl_real_unexport (UnityInternalScopeDBusImpl* base)
{
	UnityInternalDeprecatedScopeImpl * self;
	guint _tmp0_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = self->priv->_dbus_id;
	if (_tmp0_ != ((guint) 0)) {
		GDBusConnection* _tmp1_;
		guint _tmp2_;
		_tmp1_ = self->priv->_dbus_connection;
		_tmp2_ = self->priv->_dbus_id;
		g_dbus_connection_unregister_object (_tmp1_, _tmp2_);
		self->priv->_dbus_id = (guint) 0;
		_g_object_unref0 (self->priv->_dbus_connection);
		self->priv->_dbus_connection = NULL;
	}
}


static gboolean
___lambda13_ (UnityInternalDeprecatedScopeImpl* self)
{
	gboolean result = FALSE;
	GVariant* invalidated = NULL;
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	GVariant** _tmp2_;
	GVariant** _tmp3_;
	gint _tmp3__length1;
	GVariant* _tmp4_;
	GVariant* _tmp5_;
	GError * _inner_error_ = NULL;
	_tmp0_ = g_variant_type_new ("s");
	_tmp1_ = _tmp0_;
	_tmp2_ = g_new0 (GVariant*, 0 + 1);
	_tmp3_ = _tmp2_;
	_tmp3__length1 = 0;
	_tmp4_ = g_variant_new_array (_tmp1_, _tmp3_, 0);
	g_variant_ref_sink (_tmp4_);
	_tmp5_ = _tmp4_;
	_tmp3_ = (_vala_array_free (_tmp3_, _tmp3__length1, (GDestroyNotify) g_variant_unref), NULL);
	_g_variant_type_free0 (_tmp1_);
	invalidated = _tmp5_;
	{
		GDBusConnection* _tmp6_;
		UnityDeprecatedScope* _tmp7_;
		const gchar* _tmp8_;
		const gchar* _tmp9_;
		GVariantBuilder* _tmp10_;
		GVariant* _tmp11_;
		GVariant* _tmp12_;
		_tmp6_ = self->priv->_dbus_connection;
		_tmp7_ = self->priv->_owner;
		_tmp8_ = unity_deprecated_scope_base_get_dbus_path ((UnityDeprecatedScopeBase*) _tmp7_);
		_tmp9_ = _tmp8_;
		_tmp10_ = self->priv->changed_props;
		_tmp11_ = g_variant_new ("(sa{sv}@as)", UNITY_PROTOCOL_SCOPE_SERVICE_INTERFACE_NAME, _tmp10_, invalidated, NULL);
		g_variant_ref_sink (_tmp11_);
		_tmp12_ = _tmp11_;
		g_dbus_connection_emit_signal (_tmp6_, NULL, _tmp9_, "org.freedesktop.DBus.Properties", "PropertiesChanged", _tmp12_, &_inner_error_);
		_g_variant_unref0 (_tmp12_);
		if (G_UNLIKELY (_inner_error_ != NULL)) {
			goto __catch22_g_error;
		}
	}
	goto __finally22;
	__catch22_g_error:
	{
		GError* err = NULL;
		GError* _tmp13_;
		const gchar* _tmp14_;
		err = _inner_error_;
		_inner_error_ = NULL;
		_tmp13_ = err;
		_tmp14_ = _tmp13_->message;
		g_warning ("unity-deprecated-scope-impl.vala:146: %s", _tmp14_);
		_g_error_free0 (err);
	}
	__finally22:
	if (G_UNLIKELY (_inner_error_ != NULL)) {
		gboolean _tmp15_ = FALSE;
		_g_variant_unref0 (invalidated);
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
		g_clear_error (&_inner_error_);
		return _tmp15_;
	}
	_g_variant_builder_unref0 (self->priv->changed_props);
	self->priv->changed_props = NULL;
	result = FALSE;
	_g_variant_unref0 (invalidated);
	return result;
}


static gboolean
____lambda13__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda13_ ((UnityInternalDeprecatedScopeImpl*) self);
	return result;
}


static void
unity_internal_deprecated_scope_impl_real_queue_property_notification (UnityInternalScopeDBusImpl* base,
                                                                       const gchar* prop_name,
                                                                       GVariant* prop_value)
{
	UnityInternalDeprecatedScopeImpl * self;
	guint _tmp0_;
	gboolean schedule_emit = FALSE;
	GVariantBuilder* _tmp1_;
	GVariantBuilder* _tmp2_;
	GVariantBuilder* _tmp6_;
	gboolean _tmp7_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	g_return_if_fail (prop_name != NULL);
	g_return_if_fail (prop_value != NULL);
	_tmp0_ = self->priv->_dbus_id;
	if (_tmp0_ == ((guint) 0)) {
		return;
	}
	_tmp1_ = self->priv->changed_props;
	schedule_emit = _tmp1_ == NULL;
	_tmp2_ = self->priv->changed_props;
	if (_tmp2_ == NULL) {
		GVariantType* _tmp3_;
		GVariantType* _tmp4_;
		GVariantBuilder* _tmp5_;
		_tmp3_ = g_variant_type_new ("a{sv}");
		_tmp4_ = _tmp3_;
		_tmp5_ = g_variant_builder_new (_tmp4_);
		_g_variant_builder_unref0 (self->priv->changed_props);
		self->priv->changed_props = _tmp5_;
		_g_variant_type_free0 (_tmp4_);
	}
	_tmp6_ = self->priv->changed_props;
	g_variant_builder_add (_tmp6_, "{sv}", prop_name, prop_value, NULL);
	_tmp7_ = schedule_emit;
	if (_tmp7_) {
		g_idle_add_full (G_PRIORITY_DEFAULT_IDLE, ____lambda13__gsource_func, g_object_ref (self), g_object_unref);
	}
}


static void
unity_internal_deprecated_scope_impl_real_set_categories (UnityInternalDeprecatedScopeDBusImpl* base,
                                                          GList* categories)
{
	UnityInternalDeprecatedScopeImpl * self;
	gboolean categories_model_empty = FALSE;
	DeeSerializableModel* _tmp0_;
	DeeSerializableModel* _tmp1_;
	gboolean _tmp2_;
	guint _tmp53_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
	_tmp1_ = _tmp0_;
	categories_model_empty = dee_model_get_n_rows ((DeeModel*) _tmp1_) == ((guint) 0);
	_tmp2_ = categories_model_empty;
	if (!_tmp2_) {
		GList* cats = NULL;
		guint cats_length = 0U;
		gboolean data_matches = FALSE;
		guint _tmp3_;
		DeeSerializableModel* _tmp4_;
		DeeSerializableModel* _tmp5_;
		DeeModelIter* iter = NULL;
		DeeSerializableModel* _tmp6_;
		DeeSerializableModel* _tmp7_;
		DeeModelIter* _tmp8_;
		DeeModelIter* end_iter = NULL;
		DeeSerializableModel* _tmp9_;
		DeeSerializableModel* _tmp10_;
		DeeModelIter* _tmp11_;
		gboolean _tmp31_;
		cats = categories;
		cats_length = g_list_length (categories);
		_tmp3_ = cats_length;
		_tmp4_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
		_tmp5_ = _tmp4_;
		data_matches = _tmp3_ >= dee_model_get_n_rows ((DeeModel*) _tmp5_);
		_tmp6_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
		_tmp7_ = _tmp6_;
		_tmp8_ = dee_model_get_first_iter ((DeeModel*) _tmp7_);
		iter = _tmp8_;
		_tmp9_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
		_tmp10_ = _tmp9_;
		_tmp11_ = dee_model_get_last_iter ((DeeModel*) _tmp10_);
		end_iter = _tmp11_;
		while (TRUE) {
			gboolean _tmp12_ = FALSE;
			gboolean _tmp13_;
			gboolean _tmp16_;
			GList* _tmp17_;
			gconstpointer _tmp18_;
			const gchar* _tmp19_;
			const gchar* _tmp20_;
			DeeSerializableModel* _tmp21_;
			DeeSerializableModel* _tmp22_;
			DeeModelIter* _tmp23_;
			const gchar* _tmp24_;
			DeeSerializableModel* _tmp25_;
			DeeSerializableModel* _tmp26_;
			DeeModelIter* _tmp27_;
			DeeModelIter* _tmp28_;
			GList* _tmp29_;
			GList* _tmp30_;
			_tmp13_ = data_matches;
			if (_tmp13_) {
				DeeModelIter* _tmp14_;
				DeeModelIter* _tmp15_;
				_tmp14_ = iter;
				_tmp15_ = end_iter;
				_tmp12_ = _tmp14_ != _tmp15_;
			} else {
				_tmp12_ = FALSE;
			}
			if (!_tmp12_) {
				break;
			}
			_tmp16_ = data_matches;
			_tmp17_ = cats;
			_tmp18_ = _tmp17_->data;
			_tmp19_ = unity_category_get_id ((UnityCategory*) _tmp18_);
			_tmp20_ = _tmp19_;
			_tmp21_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
			_tmp22_ = _tmp21_;
			_tmp23_ = iter;
			_tmp24_ = dee_model_get_string ((DeeModel*) _tmp22_, _tmp23_, (guint) 0);
			data_matches = _tmp16_ & (g_strcmp0 (_tmp20_, _tmp24_) == 0);
			_tmp25_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
			_tmp26_ = _tmp25_;
			_tmp27_ = iter;
			_tmp28_ = dee_model_next ((DeeModel*) _tmp26_, _tmp27_);
			iter = _tmp28_;
			_tmp29_ = cats;
			_tmp30_ = _tmp29_->next;
			cats = _tmp30_;
		}
		_tmp31_ = data_matches;
		if (!_tmp31_) {
			g_warning ("unity-deprecated-scope-impl.vala:176: Categories can only be added, ig" \
"noring request");
			return;
		} else {
			GList* _tmp32_;
			_tmp32_ = cats;
			categories = _tmp32_;
		}
	}
	{
		GList* category_collection = NULL;
		GList* category_it = NULL;
		category_collection = categories;
		for (category_it = category_collection; category_it != NULL; category_it = category_it->next) {
			UnityCategory* category = NULL;
			category = (UnityCategory*) category_it->data;
			{
				gchar* icon_hint = NULL;
				UnityCategory* _tmp33_;
				GIcon* _tmp34_;
				GIcon* _tmp35_;
				gchar* _tmp36_;
				DeeSerializableModel* _tmp37_;
				DeeSerializableModel* _tmp38_;
				UnityCategory* _tmp39_;
				const gchar* _tmp40_;
				const gchar* _tmp41_;
				UnityCategory* _tmp42_;
				const gchar* _tmp43_;
				const gchar* _tmp44_;
				const gchar* _tmp45_;
				UnityCategory* _tmp46_;
				const gchar* _tmp47_;
				const gchar* _tmp48_;
				UnityCategory* _tmp49_;
				GHashTable* _tmp50_;
				GVariant* _tmp51_;
				GVariant* _tmp52_;
				_tmp33_ = category;
				_tmp34_ = unity_category_get_icon_hint (_tmp33_);
				_tmp35_ = _tmp34_;
				_tmp36_ = unity_internal_utils_icon_to_string (_tmp35_);
				icon_hint = _tmp36_;
				_tmp37_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
				_tmp38_ = _tmp37_;
				_tmp39_ = category;
				_tmp40_ = unity_category_get_id (_tmp39_);
				_tmp41_ = _tmp40_;
				_tmp42_ = category;
				_tmp43_ = unity_category_get_name (_tmp42_);
				_tmp44_ = _tmp43_;
				_tmp45_ = icon_hint;
				_tmp46_ = category;
				_tmp47_ = unity_category_get_renderer (_tmp46_);
				_tmp48_ = _tmp47_;
				_tmp49_ = category;
				_tmp50_ = unity_category_get_hints (_tmp49_);
				_tmp51_ = unity_internal_utils_hash_table_to_asv (_tmp50_);
				_tmp52_ = _tmp51_;
				dee_model_append ((DeeModel*) _tmp38_, _tmp41_, _tmp44_, _tmp45_, _tmp48_, _tmp52_, NULL);
				_g_variant_unref0 (_tmp52_);
				_g_free0 (icon_hint);
			}
		}
	}
	_tmp53_ = self->priv->_dbus_id;
	if (_tmp53_ != ((guint) 0)) {
		GVariant* _tmp54_;
		GVariant* _tmp55_;
		GVariant* _tmp56_;
		GVariant* _tmp57_;
		GVariant* _tmp58_;
		_tmp54_ = unity_protocol_scope_service_get_categories ((UnityProtocolScopeService*) self);
		_tmp55_ = _tmp54_;
		_tmp56_ = _tmp55_;
		_tmp57_ = g_variant_new_variant (_tmp56_);
		g_variant_ref_sink (_tmp57_);
		_tmp58_ = _tmp57_;
		unity_internal_scope_dbus_impl_queue_property_notification ((UnityInternalScopeDBusImpl*) self, "Categories", _tmp58_);
		_g_variant_unref0 (_tmp58_);
		_g_variant_unref0 (_tmp56_);
	}
}


static void
_unity_internal_deprecated_scope_impl_on_filter_option_changed_unity_filter_changed (UnityFilter* _sender,
                                                                                     gpointer self)
{
	unity_internal_deprecated_scope_impl_on_filter_option_changed ((UnityInternalDeprecatedScopeImpl*) self, _sender);
}


static void
unity_internal_deprecated_scope_impl_real_set_filters (UnityInternalDeprecatedScopeDBusImpl* base,
                                                       GList* filters)
{
	UnityInternalDeprecatedScopeImpl * self;
	DeeSerializableModel* _tmp0_;
	DeeSerializableModel* _tmp1_;
	GList* filters_and_sources = NULL;
	GList* _tmp3_;
	UnityDeprecatedScope* _tmp4_;
	UnityOptionsFilter* _tmp5_;
	UnityOptionsFilter* _tmp6_;
	GList* _tmp7_;
	GVariant* data[8] = {0};
	GList* _tmp11_;
	guint _tmp25_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
	_tmp1_ = _tmp0_;
	dee_model_clear ((DeeModel*) _tmp1_);
	{
		GList* filter_collection = NULL;
		GList* filter_it = NULL;
		filter_collection = filters;
		for (filter_it = filter_collection; filter_it != NULL; filter_it = filter_it->next) {
			UnityFilter* filter = NULL;
			filter = (UnityFilter*) filter_it->data;
			{
				UnityFilter* _tmp2_;
				_tmp2_ = filter;
				g_signal_connect_object (_tmp2_, "changed", (GCallback) _unity_internal_deprecated_scope_impl_on_filter_option_changed_unity_filter_changed, self, 0);
			}
		}
	}
	_tmp3_ = g_list_copy (filters);
	filters_and_sources = _tmp3_;
	_tmp4_ = self->priv->_owner;
	_tmp5_ = unity_deprecated_scope_base_get_sources ((UnityDeprecatedScopeBase*) _tmp4_);
	_tmp6_ = _tmp5_;
	_tmp7_ = _tmp6_->options;
	if (g_list_length (_tmp7_) > ((guint) 0)) {
		UnityDeprecatedScope* _tmp8_;
		UnityOptionsFilter* _tmp9_;
		UnityOptionsFilter* _tmp10_;
		_tmp8_ = self->priv->_owner;
		_tmp9_ = unity_deprecated_scope_base_get_sources ((UnityDeprecatedScopeBase*) _tmp8_);
		_tmp10_ = _tmp9_;
		filters_and_sources = g_list_append (filters_and_sources, (UnityFilter*) _tmp10_);
	}
	_tmp11_ = filters_and_sources;
	{
		GList* filter_collection = NULL;
		GList* filter_it = NULL;
		filter_collection = _tmp11_;
		for (filter_it = filter_collection; filter_it != NULL; filter_it = filter_it->next) {
			UnityFilter* filter = NULL;
			filter = (UnityFilter*) filter_it->data;
			{
				GVariant* serialized_filter = NULL;
				UnityFilter* _tmp12_;
				GVariant* _tmp13_;
				DeeSerializableModel* _tmp23_;
				DeeSerializableModel* _tmp24_;
				_tmp12_ = filter;
				_tmp13_ = dee_serializable_serialize ((DeeSerializable*) _tmp12_);
				serialized_filter = _tmp13_;
				{
					gsize i = 0UL;
					i = (gsize) 0;
					{
						gboolean _tmp14_ = FALSE;
						_tmp14_ = TRUE;
						while (TRUE) {
							gsize _tmp16_;
							GVariant* _tmp17_;
							gsize _tmp18_;
							GVariant* _tmp19_;
							gsize _tmp20_;
							GVariant* _tmp21_;
							GVariant* _tmp22_;
							if (!_tmp14_) {
								gsize _tmp15_;
								_tmp15_ = i;
								i = _tmp15_ + 1;
							}
							_tmp14_ = FALSE;
							_tmp16_ = i;
							_tmp17_ = serialized_filter;
							if (!(_tmp16_ < g_variant_n_children (_tmp17_))) {
								break;
							}
							_tmp18_ = i;
							_tmp19_ = serialized_filter;
							_tmp20_ = i;
							_tmp21_ = g_variant_get_child_value (_tmp19_, _tmp20_);
							_g_variant_unref0 (data[_tmp18_]);
							data[_tmp18_] = _tmp21_;
							_tmp22_ = data[_tmp18_];
						}
					}
				}
				_tmp23_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
				_tmp24_ = _tmp23_;
				dee_model_append_row ((DeeModel*) _tmp24_, data);
				_g_variant_unref0 (serialized_filter);
			}
		}
	}
	_tmp25_ = self->priv->_dbus_id;
	if (_tmp25_ != ((guint) 0)) {
		GVariant* _tmp26_;
		GVariant* _tmp27_;
		GVariant* _tmp28_;
		GVariant* _tmp29_;
		GVariant* _tmp30_;
		_tmp26_ = unity_protocol_scope_service_get_filters ((UnityProtocolScopeService*) self);
		_tmp27_ = _tmp26_;
		_tmp28_ = _tmp27_;
		_tmp29_ = g_variant_new_variant (_tmp28_);
		g_variant_ref_sink (_tmp29_);
		_tmp30_ = _tmp29_;
		unity_internal_scope_dbus_impl_queue_property_notification ((UnityInternalScopeDBusImpl*) self, "Filters", _tmp30_);
		_g_variant_unref0 (_tmp30_);
		_g_variant_unref0 (_tmp28_);
	}
	_vala_array_destroy (data, 8, (GDestroyNotify) g_variant_unref);
	(filters_and_sources == NULL) ? NULL : (filters_and_sources = (g_list_free (filters_and_sources), NULL));
}


static void
unity_internal_deprecated_scope_impl_on_filter_option_changed (UnityInternalDeprecatedScopeImpl* self,
                                                               UnityFilter* filter)
{
	gboolean found_iter = FALSE;
	DeeModelIter* iter = NULL;
	DeeSerializableModel* _tmp0_;
	DeeSerializableModel* _tmp1_;
	DeeModelIter* _tmp2_;
	gboolean _tmp41_;
	g_return_if_fail (self != NULL);
	g_return_if_fail (filter != NULL);
	found_iter = FALSE;
	_tmp0_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
	_tmp1_ = _tmp0_;
	_tmp2_ = dee_model_get_first_iter ((DeeModel*) _tmp1_);
	iter = _tmp2_;
	while (TRUE) {
		DeeModelIter* _tmp3_;
		DeeSerializableModel* _tmp4_;
		DeeSerializableModel* _tmp5_;
		DeeModelIter* _tmp6_;
		DeeSerializableModel* _tmp7_;
		DeeSerializableModel* _tmp8_;
		DeeModelIter* _tmp9_;
		const gchar* _tmp10_;
		const gchar* _tmp11_;
		const gchar* _tmp12_;
		DeeSerializableModel* _tmp37_;
		DeeSerializableModel* _tmp38_;
		DeeModelIter* _tmp39_;
		DeeModelIter* _tmp40_;
		_tmp3_ = iter;
		_tmp4_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
		_tmp5_ = _tmp4_;
		_tmp6_ = dee_model_get_last_iter ((DeeModel*) _tmp5_);
		if (!(_tmp3_ != _tmp6_)) {
			break;
		}
		_tmp7_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
		_tmp8_ = _tmp7_;
		_tmp9_ = iter;
		_tmp10_ = dee_model_get_string ((DeeModel*) _tmp8_, _tmp9_, (guint) UNITY_INTERNAL_FILTER_COLUMN_ID);
		_tmp11_ = unity_filter_get_id (filter);
		_tmp12_ = _tmp11_;
		if (g_strcmp0 (_tmp10_, _tmp12_) == 0) {
			gchar* icon_hint = NULL;
			GIcon* _tmp13_;
			GIcon* _tmp14_;
			gchar* _tmp15_;
			DeeSerializableModel* _tmp16_;
			DeeSerializableModel* _tmp17_;
			DeeModelIter* _tmp18_;
			const gchar* _tmp19_;
			const gchar* _tmp20_;
			const gchar* _tmp21_;
			const gchar* _tmp22_;
			const gchar* _tmp23_;
			UnityFilterRenderer _tmp24_;
			UnityFilterRenderer _tmp25_;
			const gchar* _tmp26_;
			GHashTable* _tmp27_;
			GHashTable* _tmp28_;
			GVariant* _tmp29_;
			GVariant* _tmp30_;
			gboolean _tmp31_;
			gboolean _tmp32_;
			gboolean _tmp33_;
			gboolean _tmp34_;
			gboolean _tmp35_;
			gboolean _tmp36_;
			_tmp13_ = unity_filter_get_icon_hint (filter);
			_tmp14_ = _tmp13_;
			_tmp15_ = unity_internal_utils_icon_to_string (_tmp14_);
			icon_hint = _tmp15_;
			_tmp16_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
			_tmp17_ = _tmp16_;
			_tmp18_ = iter;
			_tmp19_ = unity_filter_get_id (filter);
			_tmp20_ = _tmp19_;
			_tmp21_ = unity_filter_get_display_name (filter);
			_tmp22_ = _tmp21_;
			_tmp23_ = icon_hint;
			_tmp24_ = unity_filter_get_renderer (filter);
			_tmp25_ = _tmp24_;
			_tmp26_ = unity_filter_renderer_to_string (_tmp25_);
			_tmp27_ = unity_filter_get_hints (filter);
			_tmp28_ = _tmp27_;
			_tmp29_ = unity_internal_utils_hash_table_to_asv (_tmp28_);
			_tmp30_ = _tmp29_;
			_tmp31_ = unity_filter_get_visible (filter);
			_tmp32_ = _tmp31_;
			_tmp33_ = unity_filter_get_collapsed (filter);
			_tmp34_ = _tmp33_;
			_tmp35_ = unity_filter_get_filtering (filter);
			_tmp36_ = _tmp35_;
			dee_model_set ((DeeModel*) _tmp17_, _tmp18_, _tmp20_, _tmp22_, _tmp23_, _tmp26_, _tmp30_, _tmp32_, _tmp34_, _tmp36_, NULL);
			_g_variant_unref0 (_tmp30_);
			_g_hash_table_unref0 (_tmp28_);
			found_iter = TRUE;
			_g_free0 (icon_hint);
		}
		_tmp37_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
		_tmp38_ = _tmp37_;
		_tmp39_ = iter;
		_tmp40_ = dee_model_next ((DeeModel*) _tmp38_, _tmp39_);
		iter = _tmp40_;
	}
	_tmp41_ = found_iter;
	if (_tmp41_) {
		g_object_notify ((GObject*) self, "filters");
	}
}


static void
unity_internal_deprecated_scope_impl_real_activate_data_free (gpointer _data)
{
	UnityInternalDeprecatedScopeImplActivateData* _data_;
	_data_ = _data;
	_g_free0 (_data_->channel_id);
	_g_hash_table_unref0 (_data_->hints);
	_g_object_unref0 (_data_->cancellable);
	unity_protocol_activation_reply_raw_destroy (&_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityInternalDeprecatedScopeImplActivateData, _data_);
}


static void
unity_internal_deprecated_scope_impl_real_activate_async_ready_wrapper (GObject *source_object,
                                                                        GAsyncResult *res,
                                                                        void *user_data)
{
	UnityInternalDeprecatedScopeImplActivateData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static gpointer
_g_object_ref0 (gpointer self)
{
	return self ? g_object_ref (self) : NULL;
}


static gpointer
_g_hash_table_ref0 (gpointer self)
{
	return self ? g_hash_table_ref (self) : NULL;
}


static void
unity_internal_deprecated_scope_impl_real_activate (UnityProtocolScopeService* base,
                                                    const gchar* channel_id,
                                                    GVariant** result_arr,
                                                    int result_arr_length1,
                                                    guint action_type,
                                                    GHashTable* hints,
                                                    GCancellable* cancellable,
                                                    GAsyncReadyCallback _callback_,
                                                    gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImpl * self;
	UnityInternalDeprecatedScopeImplActivateData* _data_;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	gchar* _tmp1_;
	GHashTable* _tmp2_;
	GCancellable* _tmp3_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_data_ = g_slice_new0 (UnityInternalDeprecatedScopeImplActivateData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), cancellable, unity_internal_deprecated_scope_impl_real_activate_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_internal_deprecated_scope_impl_real_activate_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (channel_id);
	_g_free0 (_data_->channel_id);
	_data_->channel_id = _tmp1_;
	_data_->result_arr = result_arr;
	_data_->result_arr_length1 = result_arr_length1;
	_data_->action_type = action_type;
	_tmp2_ = _g_hash_table_ref0 (hints);
	_g_hash_table_unref0 (_data_->hints);
	_data_->hints = _tmp2_;
	_tmp3_ = _g_object_ref0 (cancellable);
	_g_object_unref0 (_data_->cancellable);
	_data_->cancellable = _tmp3_;
	unity_internal_deprecated_scope_impl_real_activate_co (_data_);
}


static void
unity_internal_deprecated_scope_impl_real_activate_finish (UnityProtocolScopeService* base,
                                                           GAsyncResult* _res_,
                                                           UnityProtocolActivationReplyRaw* result,
                                                           GError** error)
{
	UnityInternalDeprecatedScopeImplActivateData* _data_;
	UnityProtocolActivationReplyRaw _tmp0_ = {0};
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
	unity_protocol_activation_reply_raw_copy (&_data_->result, &_tmp0_);
	*result = _tmp0_;
}


static GHashTable*
_variant_get34 (GVariant* value)
{
	GHashTable* _tmp26_;
	GVariantIter _tmp27_;
	GVariant* _tmp28_;
	GVariant* _tmp29_;
	_tmp26_ = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, (GDestroyNotify) g_variant_unref);
	g_variant_iter_init (&_tmp27_, value);
	while (g_variant_iter_loop (&_tmp27_, "{?*}", &_tmp28_, &_tmp29_)) {
		g_hash_table_insert (_tmp26_, g_variant_dup_string (_tmp28_, NULL), g_variant_get_variant (_tmp29_));
	}
	return _tmp26_;
}


static void
unity_internal_deprecated_scope_impl_activate_ready (GObject* source_object,
                                                     GAsyncResult* _res_,
                                                     gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImplActivateData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_internal_deprecated_scope_impl_real_activate_co (_data_);
}


static gpointer
_g_variant_ref0 (gpointer self)
{
	return self ? g_variant_ref (self) : NULL;
}


static GVariant*
_variant_new35 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static gpointer
_g_ptr_array_ref0 (gpointer self)
{
	return self ? g_ptr_array_ref (self) : NULL;
}


static gint
g_ptr_array_get_length (GPtrArray* self)
{
	gint result;
	guint _tmp0_;
	g_return_val_if_fail (self != NULL, 0);
	_tmp0_ = self->len;
	result = (gint) _tmp0_;
	return result;
}


static void
g_ptr_array_set_length (GPtrArray* self,
                        gint value)
{
	g_return_if_fail (self != NULL);
	g_ptr_array_set_size (self, value);
}


static gboolean
unity_internal_deprecated_scope_impl_real_activate_co (UnityInternalDeprecatedScopeImplActivateData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		case 3:
		goto _state_3;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	memset (&_data_->reply, 0, sizeof (UnityProtocolActivationReplyRaw));
	_data_->response = NULL;
	_data_->preview = NULL;
	if (_data_->result_arr_length1 != G_N_ELEMENTS (UNITY_INTERNAL_RESULTS_SCHEMA)) {
		_data_->_tmp0_ = g_error_new_literal (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_REQUEST_FAILED, "Invalid result array");
		_data_->_inner_error_ = _data_->_tmp0_;
		if ((_data_->_inner_error_->domain == G_IO_ERROR) || (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			_g_object_unref0 (_data_->preview);
			_g_object_unref0 (_data_->response);
			unity_protocol_activation_reply_raw_destroy (&_data_->reply);
			g_object_unref (_data_->_async_result);
			return FALSE;
		} else {
			_g_object_unref0 (_data_->preview);
			_g_object_unref0 (_data_->response);
			unity_protocol_activation_reply_raw_destroy (&_data_->reply);
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
			g_clear_error (&_data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	memset (&_data_->scope_result, 0, sizeof (UnityScopeResult));
	_data_->_tmp1_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_URI];
	_data_->_tmp2_ = g_variant_get_string (_data_->_tmp1_, NULL);
	_data_->_tmp3_ = g_strdup (_data_->_tmp2_);
	_g_free0 (_data_->scope_result.uri);
	_data_->scope_result.uri = _data_->_tmp3_;
	_data_->_tmp4_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_ICON_HINT];
	_data_->_tmp5_ = g_variant_get_string (_data_->_tmp4_, NULL);
	_data_->_tmp6_ = g_strdup (_data_->_tmp5_);
	_g_free0 (_data_->scope_result.icon_hint);
	_data_->scope_result.icon_hint = _data_->_tmp6_;
	_data_->_tmp7_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_CATEGORY];
	_data_->scope_result.category = (guint) g_variant_get_uint32 (_data_->_tmp7_);
	_data_->_tmp8_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_RESULT_TYPE];
	_data_->scope_result.result_type = (UnityResultType) g_variant_get_uint32 (_data_->_tmp8_);
	_data_->_tmp9_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_MIMETYPE];
	_data_->_tmp10_ = g_variant_get_string (_data_->_tmp9_, NULL);
	_data_->_tmp11_ = g_strdup (_data_->_tmp10_);
	_g_free0 (_data_->scope_result.mimetype);
	_data_->scope_result.mimetype = _data_->_tmp11_;
	_data_->_tmp12_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_TITLE];
	_data_->_tmp13_ = g_variant_get_string (_data_->_tmp12_, NULL);
	_data_->_tmp14_ = g_strdup (_data_->_tmp13_);
	_g_free0 (_data_->scope_result.title);
	_data_->scope_result.title = _data_->_tmp14_;
	_data_->_tmp15_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_COMMENT];
	_data_->_tmp16_ = g_variant_get_string (_data_->_tmp15_, NULL);
	_data_->_tmp17_ = g_strdup (_data_->_tmp16_);
	_g_free0 (_data_->scope_result.comment);
	_data_->scope_result.comment = _data_->_tmp17_;
	_data_->_tmp18_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_DND_URI];
	_data_->_tmp19_ = g_variant_get_string (_data_->_tmp18_, NULL);
	_data_->_tmp20_ = g_strdup (_data_->_tmp19_);
	_g_free0 (_data_->scope_result.dnd_uri);
	_data_->scope_result.dnd_uri = _data_->_tmp20_;
	_data_->_tmp21_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_METADATA];
	_data_->_tmp22_ = g_variant_get_type (_data_->_tmp21_);
	_data_->_tmp23_ = G_VARIANT_TYPE_VARDICT;
	if (g_variant_type_equal (_data_->_tmp22_, _data_->_tmp23_)) {
		_data_->_tmp24_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_METADATA];
		_data_->_tmp25_ = _variant_get34 (_data_->_tmp24_);
		_g_hash_table_unref0 (_data_->scope_result.metadata);
		_data_->scope_result.metadata = _data_->_tmp25_;
	}
	_data_->action = (UnityProtocolActionType) _data_->action_type;
	_data_->_tmp30_ = _data_->action;
	switch (_data_->_tmp30_) {
		case UNITY_PROTOCOL_ACTION_TYPE_ACTIVATE_RESULT:
		{
			_data_->_tmp31_ = _data_->self->priv->_owner;
			_data_->_tmp32_ = _data_->scope_result;
			_data_->_state_ = 1;
			unity_deprecated_scope_activate_result (_data_->_tmp31_, &_data_->_tmp32_, unity_internal_deprecated_scope_impl_activate_ready, _data_);
			return FALSE;
			_state_1:
			_data_->_tmp33_ = unity_deprecated_scope_activate_result_finish (_data_->_tmp31_, _data_->_res_);
			_g_object_unref0 (_data_->response);
			_data_->response = _data_->_tmp33_;
			break;
		}
		case UNITY_PROTOCOL_ACTION_TYPE_PREVIEW_RESULT:
		{
			_data_->_tmp34_ = _data_->self->priv->_owner;
			_data_->_tmp35_ = _data_->scope_result;
			_data_->_state_ = 2;
			unity_deprecated_scope_preview_result (_data_->_tmp34_, &_data_->_tmp35_, unity_internal_deprecated_scope_impl_activate_ready, _data_);
			return FALSE;
			_state_2:
			_data_->_tmp36_ = unity_deprecated_scope_preview_result_finish (_data_->_tmp34_, _data_->_res_);
			_g_object_unref0 (_data_->preview);
			_data_->preview = _data_->_tmp36_;
			_data_->_tmp37_ = _data_->preview;
			if (_data_->_tmp37_ == NULL) {
				_data_->_tmp38_ = unity_generic_preview_empty ();
				_g_object_unref0 (_data_->preview);
				_data_->preview = (UnityPreview*) _data_->_tmp38_;
				_data_->_tmp39_ = _data_->preview;
				_data_->_tmp40_ = _data_->scope_result;
				_data_->_tmp41_ = _data_->_tmp40_.title;
				unity_preview_set_title (_data_->_tmp39_, _data_->_tmp41_);
				_data_->_tmp42_ = _data_->preview;
				_data_->_tmp43_ = _data_->scope_result;
				_data_->_tmp44_ = _data_->_tmp43_.comment;
				_data_->_tmp45_ = g_markup_escape_text (_data_->_tmp44_, (gssize) -1);
				_data_->_tmp46_ = _data_->_tmp45_;
				unity_preview_set_description_markup (_data_->_tmp42_, _data_->_tmp46_);
				_g_free0 (_data_->_tmp46_);
				_data_->_tmp47_ = _data_->scope_result;
				_data_->_tmp48_ = _data_->_tmp47_.mimetype;
				_data_->_tmp49_ = g_content_type_get_icon (_data_->_tmp48_);
				_data_->icon = _data_->_tmp49_;
				_data_->_tmp50_ = _data_->preview;
				_data_->_tmp51_ = _data_->icon;
				unity_preview_set_image (_data_->_tmp50_, _data_->_tmp51_);
				_g_object_unref0 (_data_->icon);
			}
			break;
		}
		case UNITY_PROTOCOL_ACTION_TYPE_PREVIEW_ACTION:
		{
			_data_->_tmp52_ = g_hash_table_lookup (_data_->hints, UNITY_INTERNAL_ACTIVATE_PREVIEW_ACTION_HINT);
			_data_->_tmp53_ = _g_variant_ref0 ((GVariant*) _data_->_tmp52_);
			_data_->act_id_v = _data_->_tmp53_;
			_data_->_tmp55_ = _data_->act_id_v;
			if (_data_->_tmp55_ == NULL) {
				_data_->_tmp54_ = TRUE;
			} else {
				_data_->_tmp56_ = _data_->act_id_v;
				_data_->_tmp57_ = g_variant_get_type (_data_->_tmp56_);
				_data_->_tmp58_ = G_VARIANT_TYPE_STRING;
				_data_->_tmp54_ = !g_variant_type_equal (_data_->_tmp57_, _data_->_tmp58_);
			}
			if (_data_->_tmp54_) {
				_data_->_tmp59_ = g_strdup_printf ("Invoking preview action requires '%s' hint", UNITY_INTERNAL_ACTIVATE_PREVIEW_ACTION_HINT);
				_data_->_tmp60_ = _data_->_tmp59_;
				_data_->_tmp61_ = g_error_new_literal (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_REQUEST_FAILED, _data_->_tmp60_);
				_data_->_tmp62_ = _data_->_tmp61_;
				_g_free0 (_data_->_tmp60_);
				_data_->_inner_error_ = _data_->_tmp62_;
				if ((_data_->_inner_error_->domain == G_IO_ERROR) || (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR)) {
					g_task_return_error (_data_->_async_result, _data_->_inner_error_);
					_g_variant_unref0 (_data_->act_id_v);
					unity_scope_result_destroy (&_data_->scope_result);
					_g_object_unref0 (_data_->preview);
					_g_object_unref0 (_data_->response);
					unity_protocol_activation_reply_raw_destroy (&_data_->reply);
					g_object_unref (_data_->_async_result);
					return FALSE;
				} else {
					_g_variant_unref0 (_data_->act_id_v);
					unity_scope_result_destroy (&_data_->scope_result);
					_g_object_unref0 (_data_->preview);
					_g_object_unref0 (_data_->response);
					unity_protocol_activation_reply_raw_destroy (&_data_->reply);
					g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
					g_clear_error (&_data_->_inner_error_);
					g_object_unref (_data_->_async_result);
					return FALSE;
				}
			}
			_data_->_tmp63_ = _data_->act_id_v;
			_data_->_tmp64_ = g_variant_get_string (_data_->_tmp63_, NULL);
			_data_->_tmp65_ = g_strdup (_data_->_tmp64_);
			_data_->action_id = _data_->_tmp65_;
			_data_->_tmp66_ = _data_->action_id;
			_data_->_tmp67_ = _data_->scope_result;
			_data_->_tmp68_ = _data_->_tmp67_.uri;
			_data_->_tmp69_ = unity_internal_deprecated_scope_impl_activate_action (_data_->self, _data_->_tmp66_, _data_->_tmp68_, _data_->hints);
			_g_object_unref0 (_data_->response);
			_data_->response = _data_->_tmp69_;
			_g_free0 (_data_->action_id);
			_g_variant_unref0 (_data_->act_id_v);
			break;
		}
		default:
		{
			g_warning ("unity-deprecated-scope-impl.vala:318: Unknown activation ActionType: %" \
"u", _data_->action_type);
			break;
		}
	}
	_data_->_tmp71_ = _data_->response;
	if (_data_->_tmp71_ != NULL) {
		_data_->_tmp72_ = _data_->response;
		_data_->_tmp73_ = unity_activation_response_get_handled (_data_->_tmp72_);
		_data_->_tmp74_ = _data_->_tmp73_;
		_data_->_tmp70_ = _data_->_tmp74_ == UNITY_HANDLED_TYPE_SHOW_PREVIEW;
	} else {
		_data_->_tmp70_ = FALSE;
	}
	if (_data_->_tmp70_) {
		_data_->_tmp75_ = _data_->response;
		_data_->_tmp76_ = unity_activation_response_get_preview (_data_->_tmp75_);
		if (_data_->_tmp76_ == NULL) {
			_data_->_tmp77_ = _data_->response;
			_data_->_tmp78_ = unity_activation_response_get_goto_uri (_data_->_tmp77_);
			_data_->_tmp79_ = _data_->_tmp78_;
			_data_->_tmp80_ = g_strdup (_data_->_tmp79_);
			_data_->new_uri = _data_->_tmp80_;
			_data_->_tmp81_ = _data_->new_uri;
			if (_data_->_tmp81_ != NULL) {
				_data_->_tmp82_ = _data_->new_uri;
				_data_->_tmp83_ = _variant_new35 (_data_->_tmp82_);
				_g_variant_unref0 (_data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_URI]);
				_data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_URI] = _data_->_tmp83_;
				_data_->_tmp84_ = _data_->result_arr[UNITY_INTERNAL_RESULT_COLUMN_URI];
			}
			memset (&_data_->_tmp86_, 0, sizeof (UnityProtocolActivationReplyRaw));
			_data_->_state_ = 3;
			unity_protocol_scope_service_activate ((UnityProtocolScopeService*) _data_->self, _data_->channel_id, _data_->result_arr, _data_->result_arr_length1, (guint) UNITY_PROTOCOL_ACTION_TYPE_PREVIEW_RESULT, _data_->hints, _data_->cancellable, unity_internal_deprecated_scope_impl_activate_ready, _data_);
			return FALSE;
			_state_3:
			unity_protocol_scope_service_activate_finish ((UnityProtocolScopeService*) _data_->self, _data_->_res_, &_data_->_tmp86_, &_data_->_inner_error_);
			_data_->_tmp85_ = _data_->_tmp86_;
			if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
				if ((_data_->_inner_error_->domain == G_IO_ERROR) || (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR)) {
					g_task_return_error (_data_->_async_result, _data_->_inner_error_);
					_g_free0 (_data_->new_uri);
					unity_scope_result_destroy (&_data_->scope_result);
					_g_object_unref0 (_data_->preview);
					_g_object_unref0 (_data_->response);
					unity_protocol_activation_reply_raw_destroy (&_data_->reply);
					g_object_unref (_data_->_async_result);
					return FALSE;
				} else {
					_g_free0 (_data_->new_uri);
					unity_scope_result_destroy (&_data_->scope_result);
					_g_object_unref0 (_data_->preview);
					_g_object_unref0 (_data_->response);
					unity_protocol_activation_reply_raw_destroy (&_data_->reply);
					g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
					g_clear_error (&_data_->_inner_error_);
					g_object_unref (_data_->_async_result);
					return FALSE;
				}
			}
			_data_->_tmp87_ = _data_->_tmp85_;
			memset (&_data_->_tmp85_, 0, sizeof (UnityProtocolActivationReplyRaw));
			unity_protocol_activation_reply_raw_destroy (&_data_->reply);
			_data_->reply = _data_->_tmp87_;
			_data_->result = _data_->reply;
			unity_protocol_activation_reply_raw_destroy (&_data_->_tmp85_);
			_g_free0 (_data_->new_uri);
			unity_scope_result_destroy (&_data_->scope_result);
			_g_object_unref0 (_data_->preview);
			_g_object_unref0 (_data_->response);
			g_task_return_pointer (_data_->_async_result, _data_, NULL);
			if (_data_->_state_ != 0) {
				while (_data_->_task_complete_ != TRUE) {
					g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
				}
			}
			g_object_unref (_data_->_async_result);
			return FALSE;
		} else {
			_data_->_tmp88_ = _data_->preview;
			if (_data_->_tmp88_ == NULL) {
				_data_->_tmp89_ = _data_->response;
				_data_->_tmp90_ = unity_activation_response_get_preview (_data_->_tmp89_);
				_data_->_tmp91_ = _g_object_ref0 (_data_->_tmp90_);
				_g_object_unref0 (_data_->preview);
				_data_->preview = _data_->_tmp91_;
			}
		}
	}
	_data_->_tmp92_ = _data_->preview;
	if (_data_->_tmp92_ != NULL) {
		_data_->_tmp93_ = _data_->preview;
		_data_->_tmp94_ = unity_preview_get_actions (_data_->_tmp93_);
		_data_->_tmp95_ = _g_ptr_array_ref0 (_data_->_tmp94_);
		_data_->actions = _data_->_tmp95_;
		{
			_data_->i = (guint) 0;
			{
				_data_->_tmp96_ = TRUE;
				while (TRUE) {
					if (!_data_->_tmp96_) {
						_data_->_tmp97_ = _data_->i;
						_data_->i = _data_->_tmp97_ + 1;
					}
					_data_->_tmp96_ = FALSE;
					_data_->_tmp98_ = _data_->i;
					_data_->_tmp99_ = _data_->actions;
					_data_->_tmp100_ = g_ptr_array_get_length (_data_->_tmp99_);
					_data_->_tmp101_ = _data_->_tmp100_;
					if (!(_data_->_tmp98_ < ((guint) _data_->_tmp101_))) {
						break;
					}
					_data_->_tmp102_ = _data_->actions;
					_data_->_tmp103_ = _data_->i;
					_data_->_tmp104_ = g_ptr_array_index (_data_->_tmp102_, _data_->_tmp103_);
					_data_->preview_action = (UnityPreviewAction*) _data_->_tmp104_;
					_data_->_tmp105_ = _data_->self->priv->_action_map;
					_data_->_tmp106_ = _data_->preview_action;
					_data_->_tmp107_ = unity_preview_action_get_id (_data_->_tmp106_);
					_data_->_tmp108_ = _data_->_tmp107_;
					_data_->_tmp109_ = g_strdup (_data_->_tmp108_);
					_data_->_tmp110_ = _data_->preview_action;
					_data_->_tmp111_ = _g_object_ref0 (_data_->_tmp110_);
					g_hash_table_insert (_data_->_tmp105_, _data_->_tmp109_, _data_->_tmp111_);
				}
			}
		}
		_data_->_tmp112_ = _data_->preview;
		_data_->_tmp113_ = unity_activation_response_new_with_preview (_data_->_tmp112_);
		_g_object_unref0 (_data_->response);
		_data_->response = _data_->_tmp113_;
		_g_ptr_array_unref0 (_data_->actions);
	}
	_data_->_tmp114_ = _data_->response;
	if (_data_->_tmp114_ == NULL) {
		_data_->_tmp115_ = unity_activation_response_new (UNITY_HANDLED_TYPE_NOT_HANDLED, "");
		_g_object_unref0 (_data_->response);
		_data_->response = _data_->_tmp115_;
	}
	_data_->_tmp116_ = _data_->scope_result;
	_data_->_tmp117_ = _data_->_tmp116_.uri;
	_data_->_tmp118_ = g_strdup (_data_->_tmp117_);
	_g_free0 (_data_->reply.uri);
	_data_->reply.uri = _data_->_tmp118_;
	_data_->_tmp119_ = _data_->response;
	_data_->_tmp120_ = unity_activation_response_get_handled (_data_->_tmp119_);
	_data_->_tmp121_ = _data_->_tmp120_;
	_data_->reply.handled = (guint) _data_->_tmp121_;
	_data_->_tmp122_ = _data_->response;
	_data_->_tmp123_ = unity_activation_response_get_hints (_data_->_tmp122_);
	_g_hash_table_unref0 (_data_->reply.hints);
	_data_->reply.hints = _data_->_tmp123_;
	if (_data_->cancellable != NULL) {
		g_cancellable_set_error_if_cancelled (_data_->cancellable, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			if ((_data_->_inner_error_->domain == G_IO_ERROR) || (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR)) {
				g_task_return_error (_data_->_async_result, _data_->_inner_error_);
				unity_scope_result_destroy (&_data_->scope_result);
				_g_object_unref0 (_data_->preview);
				_g_object_unref0 (_data_->response);
				unity_protocol_activation_reply_raw_destroy (&_data_->reply);
				g_object_unref (_data_->_async_result);
				return FALSE;
			} else {
				unity_scope_result_destroy (&_data_->scope_result);
				_g_object_unref0 (_data_->preview);
				_g_object_unref0 (_data_->response);
				unity_protocol_activation_reply_raw_destroy (&_data_->reply);
				g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
				g_clear_error (&_data_->_inner_error_);
				g_object_unref (_data_->_async_result);
				return FALSE;
			}
		}
	}
	_data_->result = _data_->reply;
	unity_scope_result_destroy (&_data_->scope_result);
	_g_object_unref0 (_data_->preview);
	_g_object_unref0 (_data_->response);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static gchar*
unity_internal_deprecated_scope_impl_get_search_key (UnityInternalDeprecatedScopeImpl* self,
                                                     UnityDeprecatedScopeSearch* search)
{
	gchar* result = NULL;
	UnitySearchType search_type = 0;
	UnitySearchContext* _tmp0_;
	UnitySearchType _tmp1_;
	gchar* _tmp2_ = NULL;
	UnitySearchType _tmp3_;
	gchar* search_key = NULL;
	gchar* _tmp8_;
	g_return_val_if_fail (self != NULL, NULL);
	g_return_val_if_fail (search != NULL, NULL);
	_tmp0_ = ((UnityScopeSearchBase*) search)->search_context;
	_tmp1_ = (*_tmp0_).search_type;
	search_type = _tmp1_;
	_tmp3_ = search_type;
	if (_tmp3_ == UNITY_SEARCH_TYPE_DEFAULT) {
		UnityDeprecatedScope* _tmp4_;
		gchar* _tmp5_ = NULL;
		_tmp4_ = self->priv->_owner;
		g_signal_emit_by_name (_tmp4_, "generate-search-key::default", search, &_tmp5_);
		_g_free0 (_tmp2_);
		_tmp2_ = _tmp5_;
	} else {
		UnityDeprecatedScope* _tmp6_;
		gchar* _tmp7_ = NULL;
		_tmp6_ = self->priv->_owner;
		g_signal_emit_by_name (_tmp6_, "generate-search-key::global", search, &_tmp7_);
		_g_free0 (_tmp2_);
		_tmp2_ = _tmp7_;
	}
	_tmp8_ = g_strdup (_tmp2_);
	search_key = _tmp8_;
	result = search_key;
	_g_free0 (_tmp2_);
	return result;
}


void
unity_internal_deprecated_scope_impl_queue_search_for_type (UnityInternalDeprecatedScopeImpl* self,
                                                            UnitySearchType search_type)
{
	UnityProtocolChannelType _tmp0_ = 0;
	UnityProtocolChannelType channel_type = 0;
	GHashTable* _tmp1_;
	GList* _tmp2_;
	UnityProtocolChannelType _tmp7_;
	g_return_if_fail (self != NULL);
	_vala_return_if_fail (search_type < UNITY_SEARCH_TYPE_N_TYPES, "search_type < SearchType.N_TYPES");
	if (search_type == UNITY_SEARCH_TYPE_DEFAULT) {
		_tmp0_ = UNITY_PROTOCOL_CHANNEL_TYPE_DEFAULT;
	} else {
		_tmp0_ = UNITY_PROTOCOL_CHANNEL_TYPE_GLOBAL;
	}
	channel_type = _tmp0_;
	_tmp1_ = self->priv->_channels;
	_tmp2_ = g_hash_table_get_values (_tmp1_);
	{
		GList* channel_collection = NULL;
		GList* channel_it = NULL;
		channel_collection = _tmp2_;
		for (channel_it = channel_collection; channel_it != NULL; channel_it = channel_it->next) {
			UnityInternalScopeChannel* channel = NULL;
			channel = (UnityInternalScopeChannel*) channel_it->data;
			{
				UnityInternalScopeChannel* _tmp3_;
				UnityProtocolChannelType _tmp4_;
				UnityProtocolChannelType _tmp5_;
				_tmp3_ = channel;
				_tmp4_ = _tmp3_->channel_type;
				_tmp5_ = channel_type;
				if (_tmp4_ == _tmp5_) {
					UnityInternalScopeChannel* _tmp6_;
					_tmp6_ = channel;
					_g_object_unref0 (_tmp6_->last_search);
					_tmp6_->last_search = NULL;
				}
			}
		}
		(channel_collection == NULL) ? NULL : (channel_collection = (g_list_free (channel_collection), NULL));
	}
	_tmp7_ = channel_type;
	g_signal_emit_by_name ((UnityProtocolScopeService*) self, "results-invalidated", (guint) _tmp7_);
}


static void
unity_internal_deprecated_scope_impl_search_internal_data_free (gpointer _data)
{
	UnityInternalDeprecatedScopeImplSearchInternalData* _data_;
	_data_ = _data;
	_g_free0 (_data_->search_string);
	_g_hash_table_unref0 (_data_->hints);
	_g_object_unref0 (_data_->channel);
	_g_hash_table_unref0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityInternalDeprecatedScopeImplSearchInternalData, _data_);
}


static void
unity_internal_deprecated_scope_impl_search_internal_async_ready_wrapper (GObject *source_object,
                                                                          GAsyncResult *res,
                                                                          void *user_data)
{
	UnityInternalDeprecatedScopeImplSearchInternalData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_internal_deprecated_scope_impl_search_internal (UnityInternalDeprecatedScopeImpl* self,
                                                      const gchar* search_string,
                                                      GHashTable* hints,
                                                      UnityInternalScopeChannel* channel,
                                                      GAsyncReadyCallback _callback_,
                                                      gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImplSearchInternalData* _data_;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	gchar* _tmp1_;
	GHashTable* _tmp2_;
	UnityInternalScopeChannel* _tmp3_;
	_data_ = g_slice_new0 (UnityInternalDeprecatedScopeImplSearchInternalData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_internal_deprecated_scope_impl_search_internal_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_internal_deprecated_scope_impl_search_internal_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (search_string);
	_g_free0 (_data_->search_string);
	_data_->search_string = _tmp1_;
	_tmp2_ = _g_hash_table_ref0 (hints);
	_g_hash_table_unref0 (_data_->hints);
	_data_->hints = _tmp2_;
	_tmp3_ = _g_object_ref0 (channel);
	_g_object_unref0 (_data_->channel);
	_data_->channel = _tmp3_;
	unity_internal_deprecated_scope_impl_search_internal_co (_data_);
}


static GHashTable*
unity_internal_deprecated_scope_impl_search_internal_finish (UnityInternalDeprecatedScopeImpl* self,
                                                             GAsyncResult* _res_,
                                                             GError** error)
{
	GHashTable* result;
	UnityInternalDeprecatedScopeImplSearchInternalData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return NULL;
	}
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static Block18Data*
block18_data_ref (Block18Data* _data18_)
{
	g_atomic_int_inc (&_data18_->_ref_count_);
	return _data18_;
}


static void
block18_data_unref (void * _userdata_)
{
	Block18Data* _data18_;
	_data18_ = (Block18Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data18_->_ref_count_)) {
		UnityInternalDeprecatedScopeImpl* self;
		self = _data18_->self;
		_g_object_unref0 (self);
		g_slice_free (Block18Data, _data18_);
	}
}


static void
_g_free0_ (gpointer var)
{
	var = (g_free (var), NULL);
}


static void
_g_variant_unref0_ (gpointer var)
{
	(var == NULL) ? NULL : (var = (g_variant_unref (var), NULL));
}


static void
unity_internal_deprecated_scope_impl_search_internal_ready (GObject* source_object,
                                                            GAsyncResult* _res_,
                                                            gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImplSearchInternalData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_internal_deprecated_scope_impl_search_internal_co (_data_);
}


static Block19Data*
block19_data_ref (Block19Data* _data19_)
{
	g_atomic_int_inc (&_data19_->_ref_count_);
	return _data19_;
}


static void
block19_data_unref (void * _userdata_)
{
	Block19Data* _data19_;
	_data19_ = (Block19Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data19_->_ref_count_)) {
		UnityInternalDeprecatedScopeImpl* self;
		self = _data19_->_data18_->self;
		block18_data_unref (_data19_->_data18_);
		_data19_->_data18_ = NULL;
		g_slice_free (Block19Data, _data19_);
	}
}


static gboolean
_unity_internal_deprecated_scope_impl_search_internal_co_gsource_func (gpointer self)
{
	gboolean result;
	result = unity_internal_deprecated_scope_impl_search_internal_co (self);
	return result;
}


static void
___lambda16_ (Block19Data* _data19_)
{
	Block18Data* _data18_;
	UnityInternalDeprecatedScopeImpl* self;
	gboolean _tmp0_;
	_data18_ = _data19_->_data18_;
	self = _data18_->self;
	_tmp0_ = unity_internal_deprecated_scope_impl_measure_requests;
	if (_tmp0_) {
		_data19_->search_end_time = g_get_monotonic_time ();
	}
	g_idle_add_full (G_PRIORITY_DEFAULT, _unity_internal_deprecated_scope_impl_search_internal_co_gsource_func, _data18_->_async_data_, NULL);
}


static void
____lambda16__unity_scope_search_base_callback (UnityScopeSearchBase* instance,
                                                gpointer self)
{
	___lambda16_ (self);
}


static gboolean
unity_internal_deprecated_scope_impl_search_internal_co (UnityInternalDeprecatedScopeImplSearchInternalData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		case 3:
		goto _state_3;
		case 4:
		goto _state_4;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_data18_ = g_slice_new0 (Block18Data);
	_data_->_data18_->_ref_count_ = 1;
	_data_->_data18_->self = g_object_ref (_data_->self);
	_data_->_data18_->_async_data_ = _data_;
	_data_->_tmp0_ = g_str_hash;
	_data_->_tmp1_ = g_str_equal;
	_data_->_tmp2_ = g_hash_table_new_full (_data_->_tmp0_, _data_->_tmp1_, _g_free0_, _g_variant_unref0_);
	_data_->_result_ = _data_->_tmp2_;
	_data_->_tmp3_ = g_hash_table_lookup (_data_->hints, UNITY_INTERNAL_SEARCH_FILTER_ROW_HINT);
	_data_->filter_row_variant = (GVariant*) _data_->_tmp3_;
	_data_->_tmp4_ = _data_->filter_row_variant;
	if (_data_->_tmp4_ != NULL) {
		_data_->_tmp5_ = _data_->filter_row_variant;
		unity_internal_deprecated_scope_impl_update_filter_state (_data_->self, _data_->channel, _data_->_tmp5_, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			if (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR) {
				g_task_return_error (_data_->_async_result, _data_->_inner_error_);
				_g_hash_table_unref0 (_data_->_result_);
				block18_data_unref (_data_->_data18_);
				_data_->_data18_ = NULL;
				g_object_unref (_data_->_async_result);
				return FALSE;
			} else {
				_g_hash_table_unref0 (_data_->_result_);
				block18_data_unref (_data_->_data18_);
				_data_->_data18_ = NULL;
				g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
				g_clear_error (&_data_->_inner_error_);
				g_object_unref (_data_->_async_result);
				return FALSE;
			}
		}
		_data_->_tmp6_ = _data_->channel->last_search;
		if (_data_->_tmp6_ != NULL) {
			_data_->_tmp7_ = _data_->channel->last_search;
			_data_->_tmp8_ = _data_->_tmp7_->search_context;
			_data_->_tmp9_ = (*_data_->_tmp8_).cancellable;
			unity_cancellable_cancel (_data_->_tmp9_);
		}
		_g_object_unref0 (_data_->channel->last_search);
		_data_->channel->last_search = NULL;
	}
	_data_->_tmp10_ = unity_cancellable_create ();
	_data_->cancellable = _data_->_tmp10_;
	memset (&_data_->search_context, 0, sizeof (UnitySearchContext));
	_data_->_tmp11_ = g_strdup (_data_->search_string);
	_g_free0 (_data_->search_context.search_query);
	_data_->search_context.search_query = _data_->_tmp11_;
	_data_->search_context.search_type = unity_internal_scope_channel_get_search_type (_data_->channel);
	_data_->_tmp12_ = _data_->channel->filters;
	_data_->_tmp13_ = _g_object_ref0 (_data_->_tmp12_);
	_g_object_unref0 (_data_->search_context.filter_state);
	_data_->search_context.filter_state = _data_->_tmp13_;
	_data_->_tmp14_ = unity_search_metadata_create (_data_->hints);
	_g_object_unref0 (_data_->search_context.search_metadata);
	_data_->search_context.search_metadata = _data_->_tmp14_;
	_data_->_tmp15_ = _data_->channel->backend_model;
	_data_->_tmp16_ = unity_internal_dee_result_set_new_with_model (_data_->_tmp15_);
	_data_->result_set = _data_->_tmp16_;
	_data_->_tmp17_ = _data_->result_set;
	((UnityResultSet*) _data_->_tmp17_)->ttl = -1;
	_data_->_tmp18_ = _data_->result_set;
	_data_->_tmp19_ = _g_object_ref0 ((UnityResultSet*) _data_->_tmp18_);
	_g_object_unref0 (_data_->search_context.result_set);
	_data_->search_context.result_set = _data_->_tmp19_;
	_data_->_tmp20_ = _data_->cancellable;
	_data_->_tmp21_ = _g_object_ref0 (_data_->_tmp20_);
	_g_object_unref0 (_data_->search_context.cancellable);
	_data_->search_context.cancellable = _data_->_tmp21_;
	_data_->_tmp22_ = _data_->self->priv->_owner;
	_data_->_tmp23_ = _data_->channel->id;
	_data_->_tmp24_ = _data_->channel->backend_model;
	_data_->_tmp25_ = unity_deprecated_scope_search_new (_data_->_tmp22_, _data_->_tmp23_, _data_->hints, _data_->_tmp24_);
	_data_->new_search = _data_->_tmp25_;
	_data_->_tmp26_ = _data_->new_search;
	_data_->_tmp27_ = _data_->search_context;
	unity_scope_search_base_set_search_context ((UnityScopeSearchBase*) _data_->_tmp26_, &_data_->_tmp27_);
	_data_->_tmp28_ = _data_->new_search;
	_data_->_tmp29_ = unity_internal_deprecated_scope_impl_get_search_key (_data_->self, _data_->_tmp28_);
	_data_->normalized_query = _data_->_tmp29_;
	_data_->_tmp30_ = _data_->normalized_query;
	if (_data_->_tmp30_ == NULL) {
		_data_->_tmp31_ = g_strdup (_data_->search_string);
		_g_free0 (_data_->normalized_query);
		_data_->normalized_query = _data_->_tmp31_;
	}
	_data_->_tmp32_ = _data_->channel->last_search;
	_data_->_tmp33_ = _g_object_ref0 (_data_->_tmp32_);
	_data_->last_search = _data_->_tmp33_;
	_data_->_tmp34_ = _data_->last_search;
	if (_data_->_tmp34_ != NULL) {
		_data_->_tmp35_ = _data_->last_search;
		_data_->_tmp36_ = _data_->_tmp35_->search_context;
		_data_->_tmp37_ = (*_data_->_tmp36_).search_query;
		_data_->_tmp38_ = _data_->normalized_query;
		if (g_strcmp0 (_data_->_tmp37_, _data_->_tmp38_) == 0) {
			if (unity_internal_scope_channel_is_search_running (_data_->channel)) {
				_data_->_state_ = 1;
				unity_internal_scope_channel_wait_for_search (_data_->channel, unity_internal_deprecated_scope_impl_search_internal_ready, _data_);
				return FALSE;
				_state_1:
				unity_internal_scope_channel_wait_for_search_finish (_data_->channel, _data_->_res_);
			}
			_data_->_tmp39_ = _data_->last_search;
			_data_->_tmp40_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp39_, UNITY_TYPE_DEPRECATED_SCOPE_SEARCH) ? ((UnityDeprecatedScopeSearch*) _data_->_tmp39_) : NULL);
			_data_->last_depr_search = _data_->_tmp40_;
			_data_->_tmp41_ = _data_->last_depr_search;
			_data_->_tmp42_ = unity_deprecated_scope_search_get_reply_hints (_data_->_tmp41_);
			_data_->last_hints = _data_->_tmp42_;
			_data_->_tmp43_ = _data_->last_hints;
			if (_data_->_tmp43_ != NULL) {
				_data_->_tmp44_ = _data_->last_hints;
				if (g_hash_table_contains (_data_->_tmp44_, UNITY_INTERNAL_SEARCH_NO_RESULTS_HINT)) {
					_data_->_tmp45_ = _data_->_result_;
					_data_->_tmp46_ = g_strdup (UNITY_INTERNAL_SEARCH_NO_RESULTS_HINT);
					_data_->_tmp47_ = _data_->last_hints;
					_data_->_tmp48_ = g_hash_table_lookup (_data_->_tmp47_, UNITY_INTERNAL_SEARCH_NO_RESULTS_HINT);
					_data_->_tmp49_ = _g_variant_ref0 ((GVariant*) _data_->_tmp48_);
					g_hash_table_insert (_data_->_tmp45_, _data_->_tmp46_, _data_->_tmp49_);
				}
			}
			_data_->_tmp50_ = _data_->_result_;
			_data_->_tmp51_ = g_strdup (UNITY_INTERNAL_SEARCH_SEQNUM_HINT);
			_data_->_tmp52_ = g_variant_new_uint64 (unity_internal_scope_channel_get_last_seqnum (_data_->channel));
			g_variant_ref_sink (_data_->_tmp52_);
			g_hash_table_insert (_data_->_tmp50_, _data_->_tmp51_, _data_->_tmp52_);
			_data_->result = _data_->_result_;
			_g_hash_table_unref0 (_data_->last_hints);
			_g_object_unref0 (_data_->last_depr_search);
			_g_object_unref0 (_data_->last_search);
			_g_free0 (_data_->normalized_query);
			_g_object_unref0 (_data_->new_search);
			_g_object_unref0 (_data_->result_set);
			unity_search_context_destroy (&_data_->search_context);
			_g_object_unref0 (_data_->cancellable);
			block18_data_unref (_data_->_data18_);
			_data_->_data18_ = NULL;
			g_task_return_pointer (_data_->_async_result, _data_, NULL);
			if (_data_->_state_ != 0) {
				while (_data_->_task_complete_ != TRUE) {
					g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
				}
			}
			g_object_unref (_data_->_async_result);
			return FALSE;
		} else {
			_data_->_tmp53_ = _data_->last_search;
			_data_->_tmp54_ = _data_->_tmp53_->search_context;
			_data_->_tmp55_ = (*_data_->_tmp54_).cancellable;
			unity_cancellable_cancel (_data_->_tmp55_);
		}
	}
	_data_->_tmp56_ = _data_->new_search;
	_data_->_tmp57_ = _g_object_ref0 ((UnityScopeSearchBase*) _data_->_tmp56_);
	_g_object_unref0 (_data_->channel->last_search);
	_data_->channel->last_search = _data_->_tmp57_;
	{
		_data_->_data19_ = g_slice_new0 (Block19Data);
		_data_->_data19_->_ref_count_ = 1;
		_data_->_data19_->_data18_ = block18_data_ref (_data_->_data18_);
		_data_->_tmp58_ = _data_->channel->model_lock;
		if (!unity_internal_utils_async_mutex_try_lock (_data_->_tmp58_)) {
			_data_->_tmp59_ = _data_->channel->model_lock;
			_data_->_state_ = 2;
			unity_internal_utils_async_mutex_lock (_data_->_tmp59_, unity_internal_deprecated_scope_impl_search_internal_ready, _data_);
			return FALSE;
			_state_2:
			unity_internal_utils_async_mutex_lock_finish (_data_->_tmp59_, _data_->_res_);
		}
		unity_internal_scope_channel_set_state (_data_->channel, UNITY_INTERNAL_CHANNEL_STATE_SEARCH_ACTIVE);
		g_idle_add_full (G_PRIORITY_LOW, _unity_internal_deprecated_scope_impl_search_internal_co_gsource_func, _data_, NULL);
		_data_->_state_ = 3;
		return FALSE;
		_state_3:
		;
		_data_->_tmp60_ = _data_->cancellable;
		if (unity_cancellable_is_cancelled (_data_->_tmp60_)) {
			_data_->_tmp61_ = _data_->normalized_query;
			_data_->_tmp62_ = g_error_new (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_SEARCH_CANCELLED, "Search '%s' was cancelled", _data_->_tmp61_);
			_data_->_inner_error_ = _data_->_tmp62_;
			block19_data_unref (_data_->_data19_);
			_data_->_data19_ = NULL;
			goto __finally23;
		}
		_data_->_tmp63_ = _data_->result_set;
		_data_->_tmp64_ = _data_->channel->transfer_model;
		unity_internal_dee_result_set_set_flush_model (_data_->_tmp63_, (DeeSerializableModel*) _data_->_tmp64_);
		_data_->search_start_time = (gint64) 0;
		_data_->_tmp65_ = unity_internal_deprecated_scope_impl_measure_requests;
		if (_data_->_tmp65_) {
			_data_->search_start_time = g_get_monotonic_time ();
		}
		_data_->_tmp66_ = _data_->search_start_time;
		_data_->_data19_->search_end_time = _data_->_tmp66_;
		_data_->_tmp67_ = _data_->self->priv->_owner;
		_data_->_tmp68_ = unity_deprecated_scope_base_get_id ((UnityDeprecatedScopeBase*) _data_->_tmp67_);
		_data_->_tmp69_ = _data_->_tmp68_;
		unity_trace_tracepoint ("search:start::scope=%s", _data_->_tmp69_);
		_data_->_tmp70_ = _data_->new_search;
		unity_scope_search_base_run_async ((UnityScopeSearchBase*) _data_->_tmp70_, ____lambda16__unity_scope_search_base_callback, _data_->_data19_);
		_data_->_state_ = 4;
		return FALSE;
		_state_4:
		;
		_data_->_tmp71_ = _data_->cancellable;
		if (!unity_cancellable_is_cancelled (_data_->_tmp71_)) {
			_data_->_tmp72_ = _data_->result_set;
			unity_result_set_flush ((UnityResultSet*) _data_->_tmp72_);
			_data_->_tmp73_ = _data_->_result_;
			_data_->_tmp74_ = g_strdup (UNITY_INTERNAL_SEARCH_SEQNUM_HINT);
			_data_->_tmp75_ = g_variant_new_uint64 (unity_internal_scope_channel_get_last_seqnum (_data_->channel));
			g_variant_ref_sink (_data_->_tmp75_);
			g_hash_table_insert (_data_->_tmp73_, _data_->_tmp74_, _data_->_tmp75_);
		}
		_data_->_tmp76_ = _data_->self->priv->_owner;
		_data_->_tmp77_ = unity_deprecated_scope_base_get_id ((UnityDeprecatedScopeBase*) _data_->_tmp76_);
		_data_->_tmp78_ = _data_->_tmp77_;
		unity_trace_tracepoint ("search:end::scope=%s", _data_->_tmp78_);
		_data_->_tmp79_ = unity_internal_deprecated_scope_impl_measure_requests;
		if (_data_->_tmp79_) {
			_data_->_tmp80_ = _data_->_data19_->search_end_time;
			_data_->_tmp81_ = _data_->search_start_time;
			_data_->delta_us = _data_->_tmp80_ - _data_->_tmp81_;
			_data_->_tmp82_ = _data_->delta_us;
			_data_->delta = _data_->_tmp82_ / 1000000.0;
			_data_->_tmp83_ = _data_->_result_;
			_data_->_tmp84_ = g_strdup (UNITY_INTERNAL_SEARCH_TIME_HINT);
			_data_->_tmp85_ = _data_->delta;
			_data_->_tmp86_ = g_variant_new_double (_data_->_tmp85_);
			g_variant_ref_sink (_data_->_tmp86_);
			g_hash_table_insert (_data_->_tmp83_, _data_->_tmp84_, _data_->_tmp86_);
		}
		_data_->_tmp87_ = _data_->new_search;
		_data_->_tmp88_ = unity_deprecated_scope_search_get_reply_hints (_data_->_tmp87_);
		_data_->reply_hints = _data_->_tmp88_;
		_data_->_tmp89_ = _data_->reply_hints;
		if (_data_->_tmp89_ != NULL) {
			_data_->_tmp90_ = _data_->reply_hints;
			if (g_hash_table_contains (_data_->_tmp90_, UNITY_INTERNAL_SEARCH_NO_RESULTS_HINT)) {
				_data_->_tmp91_ = _data_->_result_;
				_data_->_tmp92_ = g_strdup (UNITY_INTERNAL_SEARCH_NO_RESULTS_HINT);
				_data_->_tmp93_ = _data_->reply_hints;
				_data_->_tmp94_ = g_hash_table_lookup (_data_->_tmp93_, UNITY_INTERNAL_SEARCH_NO_RESULTS_HINT);
				_data_->_tmp95_ = _g_variant_ref0 ((GVariant*) _data_->_tmp94_);
				g_hash_table_insert (_data_->_tmp91_, _data_->_tmp92_, _data_->_tmp95_);
			}
		}
		_g_hash_table_unref0 (_data_->reply_hints);
		block19_data_unref (_data_->_data19_);
		_data_->_data19_ = NULL;
	}
	__finally23:
	{
		unity_internal_scope_channel_set_state (_data_->channel, UNITY_INTERNAL_CHANNEL_STATE_IDLE);
		_data_->_tmp96_ = _data_->channel->model_lock;
		unity_internal_utils_async_mutex_unlock (_data_->_tmp96_);
	}
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		if (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			_g_object_unref0 (_data_->last_search);
			_g_free0 (_data_->normalized_query);
			_g_object_unref0 (_data_->new_search);
			_g_object_unref0 (_data_->result_set);
			unity_search_context_destroy (&_data_->search_context);
			_g_object_unref0 (_data_->cancellable);
			_g_hash_table_unref0 (_data_->_result_);
			block18_data_unref (_data_->_data18_);
			_data_->_data18_ = NULL;
			g_object_unref (_data_->_async_result);
			return FALSE;
		} else {
			_g_object_unref0 (_data_->last_search);
			_g_free0 (_data_->normalized_query);
			_g_object_unref0 (_data_->new_search);
			_g_object_unref0 (_data_->result_set);
			unity_search_context_destroy (&_data_->search_context);
			_g_object_unref0 (_data_->cancellable);
			_g_hash_table_unref0 (_data_->_result_);
			block18_data_unref (_data_->_data18_);
			_data_->_data18_ = NULL;
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
			g_clear_error (&_data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp97_ = _data_->cancellable;
	if (unity_cancellable_is_cancelled (_data_->_tmp97_)) {
		_data_->_tmp98_ = _data_->normalized_query;
		_data_->_tmp99_ = g_error_new (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_SEARCH_CANCELLED, "Search '%s' was cancelled", _data_->_tmp98_);
		_data_->_inner_error_ = _data_->_tmp99_;
		if (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			_g_object_unref0 (_data_->last_search);
			_g_free0 (_data_->normalized_query);
			_g_object_unref0 (_data_->new_search);
			_g_object_unref0 (_data_->result_set);
			unity_search_context_destroy (&_data_->search_context);
			_g_object_unref0 (_data_->cancellable);
			_g_hash_table_unref0 (_data_->_result_);
			block18_data_unref (_data_->_data18_);
			_data_->_data18_ = NULL;
			g_object_unref (_data_->_async_result);
			return FALSE;
		} else {
			_g_object_unref0 (_data_->last_search);
			_g_free0 (_data_->normalized_query);
			_g_object_unref0 (_data_->new_search);
			_g_object_unref0 (_data_->result_set);
			unity_search_context_destroy (&_data_->search_context);
			_g_object_unref0 (_data_->cancellable);
			_g_hash_table_unref0 (_data_->_result_);
			block18_data_unref (_data_->_data18_);
			_data_->_data18_ = NULL;
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
			g_clear_error (&_data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->result = _data_->_result_;
	_g_object_unref0 (_data_->last_search);
	_g_free0 (_data_->normalized_query);
	_g_object_unref0 (_data_->new_search);
	_g_object_unref0 (_data_->result_set);
	unity_search_context_destroy (&_data_->search_context);
	_g_object_unref0 (_data_->cancellable);
	block18_data_unref (_data_->_data18_);
	_data_->_data18_ = NULL;
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_internal_deprecated_scope_impl_real_search_data_free (gpointer _data)
{
	UnityInternalDeprecatedScopeImplSearchData* _data_;
	_data_ = _data;
	_g_free0 (_data_->channel_id);
	_g_free0 (_data_->search_string);
	_g_hash_table_unref0 (_data_->hints);
	_g_object_unref0 (_data_->cancellable);
	_g_hash_table_unref0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityInternalDeprecatedScopeImplSearchData, _data_);
}


static void
unity_internal_deprecated_scope_impl_real_search_async_ready_wrapper (GObject *source_object,
                                                                      GAsyncResult *res,
                                                                      void *user_data)
{
	UnityInternalDeprecatedScopeImplSearchData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_internal_deprecated_scope_impl_real_search (UnityProtocolScopeService* base,
                                                  const gchar* channel_id,
                                                  const gchar* search_string,
                                                  GHashTable* hints,
                                                  GCancellable* cancellable,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImpl * self;
	UnityInternalDeprecatedScopeImplSearchData* _data_;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	GHashTable* _tmp3_;
	GCancellable* _tmp4_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_data_ = g_slice_new0 (UnityInternalDeprecatedScopeImplSearchData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), cancellable, unity_internal_deprecated_scope_impl_real_search_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_internal_deprecated_scope_impl_real_search_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (channel_id);
	_g_free0 (_data_->channel_id);
	_data_->channel_id = _tmp1_;
	_tmp2_ = g_strdup (search_string);
	_g_free0 (_data_->search_string);
	_data_->search_string = _tmp2_;
	_tmp3_ = _g_hash_table_ref0 (hints);
	_g_hash_table_unref0 (_data_->hints);
	_data_->hints = _tmp3_;
	_tmp4_ = _g_object_ref0 (cancellable);
	_g_object_unref0 (_data_->cancellable);
	_data_->cancellable = _tmp4_;
	unity_internal_deprecated_scope_impl_real_search_co (_data_);
}


static GHashTable*
unity_internal_deprecated_scope_impl_real_search_finish (UnityProtocolScopeService* base,
                                                         GAsyncResult* _res_,
                                                         GError** error)
{
	GHashTable* result;
	UnityInternalDeprecatedScopeImplSearchData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return NULL;
	}
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static void
unity_internal_deprecated_scope_impl_search_ready (GObject* source_object,
                                                   GAsyncResult* _res_,
                                                   gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImplSearchData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_internal_deprecated_scope_impl_real_search_co (_data_);
}


static gboolean
unity_internal_deprecated_scope_impl_real_search_co (UnityInternalDeprecatedScopeImplSearchData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = unity_internal_deprecated_scope_impl_get_channel_by_id (_data_->self, _data_->channel_id, &_data_->_inner_error_);
	_data_->channel = _data_->_tmp0_;
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		if ((_data_->_inner_error_->domain == G_IO_ERROR) || (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			_g_hash_table_unref0 (_data_->_result_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		} else {
			_g_hash_table_unref0 (_data_->_result_);
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
			g_clear_error (&_data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp2_ = _data_->channel;
	_data_->_state_ = 1;
	unity_internal_deprecated_scope_impl_search_internal (_data_->self, _data_->search_string, _data_->hints, _data_->_tmp2_, unity_internal_deprecated_scope_impl_search_ready, _data_);
	return FALSE;
	_state_1:
	_data_->_tmp3_ = unity_internal_deprecated_scope_impl_search_internal_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
	_data_->_tmp1_ = _data_->_tmp3_;
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		if ((_data_->_inner_error_->domain == G_IO_ERROR) || (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			_g_object_unref0 (_data_->channel);
			_g_hash_table_unref0 (_data_->_result_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		} else {
			_g_object_unref0 (_data_->channel);
			_g_hash_table_unref0 (_data_->_result_);
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
			g_clear_error (&_data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp4_ = _data_->_tmp1_;
	_data_->_tmp1_ = NULL;
	_g_hash_table_unref0 (_data_->_result_);
	_data_->_result_ = _data_->_tmp4_;
	_data_->result = _data_->_result_;
	_g_hash_table_unref0 (_data_->_tmp1_);
	_g_object_unref0 (_data_->channel);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


UnityActivationResponse*
unity_internal_deprecated_scope_impl_activate_action (UnityInternalDeprecatedScopeImpl* self,
                                                      const gchar* action_id,
                                                      const gchar* uri,
                                                      GHashTable* hints)
{
	UnityActivationResponse* result = NULL;
	UnityActivationResponse* response = NULL;
	UnityPreviewAction* action = NULL;
	GHashTable* _tmp0_;
	gconstpointer _tmp1_;
	UnityPreviewAction* _tmp2_;
	UnityPreviewAction* _tmp3_;
	g_return_val_if_fail (self != NULL, NULL);
	g_return_val_if_fail (action_id != NULL, NULL);
	g_return_val_if_fail (uri != NULL, NULL);
	g_return_val_if_fail (hints != NULL, NULL);
	response = NULL;
	_tmp0_ = self->priv->_action_map;
	_tmp1_ = g_hash_table_lookup (_tmp0_, action_id);
	_tmp2_ = _g_object_ref0 ((UnityPreviewAction*) _tmp1_);
	action = _tmp2_;
	_tmp3_ = action;
	if (_tmp3_ != NULL) {
		GHashTable* action_hints = NULL;
		UnityPreviewAction* _tmp4_;
		GHashTable* _tmp5_;
		GHashTable* _tmp6_;
		GHashTable* _tmp7_;
		GHashTable* _tmp8_;
		UnityPreviewAction* _tmp17_;
		UnityActivationResponse* _tmp18_ = NULL;
		_tmp4_ = action;
		_tmp5_ = unity_preview_action_get_hints (_tmp4_);
		_tmp6_ = _tmp5_;
		_tmp7_ = _g_hash_table_ref0 (_tmp6_);
		action_hints = _tmp7_;
		_tmp8_ = action_hints;
		g_hash_table_remove_all (_tmp8_);
		if (g_hash_table_size (hints) > ((guint) 0)) {
			GHashTableIter iter = {0};
			const gchar* key = NULL;
			GVariant* value = NULL;
			g_hash_table_iter_init (&iter, hints);
			while (TRUE) {
				gconstpointer _tmp9_ = NULL;
				gconstpointer _tmp10_ = NULL;
				gboolean _tmp11_;
				GHashTable* _tmp12_;
				const gchar* _tmp13_;
				gchar* _tmp14_;
				GVariant* _tmp15_;
				GVariant* _tmp16_;
				_tmp11_ = g_hash_table_iter_next (&iter, (gpointer*) (&_tmp9_), (gpointer*) (&_tmp10_));
				key = _tmp9_;
				value = _tmp10_;
				if (!_tmp11_) {
					break;
				}
				_tmp12_ = action_hints;
				_tmp13_ = key;
				_tmp14_ = g_strdup (_tmp13_);
				_tmp15_ = value;
				_tmp16_ = _g_variant_ref0 (_tmp15_);
				g_hash_table_insert (_tmp12_, _tmp14_, _tmp16_);
			}
		}
		_tmp17_ = action;
		g_signal_emit_by_name (_tmp17_, "activated", uri, &_tmp18_);
		_g_object_unref0 (response);
		response = _tmp18_;
		_g_hash_table_unref0 (action_hints);
	} else {
		g_warning ("unity-deprecated-scope-impl.vala:577: Cannot find PreviewAction with i" \
"d: %s", action_id);
	}
	result = response;
	_g_object_unref0 (action);
	return result;
}


static void
unity_internal_deprecated_scope_impl_update_filter_state (UnityInternalDeprecatedScopeImpl* self,
                                                          UnityInternalScopeChannel* channel,
                                                          GVariant* changed_row,
                                                          GError** error)
{
	const gchar* _tmp0_;
	gchar* filter_id = NULL;
	UnityFilter* filter = NULL;
	const gchar* _tmp6_;
	UnityFilter* _tmp7_;
	UnityFilter* _tmp8_;
	UnityFilter* _tmp9_;
	gboolean state = FALSE;
	UnityFilter* _tmp15_;
	gboolean _tmp16_;
	UnityFilter* _tmp17_;
	gboolean _tmp18_;
	UnityFilter* _tmp19_;
	GVariant* _tmp20_;
	GVariant* _tmp21_;
	GError * _inner_error_ = NULL;
	g_return_if_fail (self != NULL);
	g_return_if_fail (channel != NULL);
	g_return_if_fail (changed_row != NULL);
	_tmp0_ = g_variant_get_type_string (changed_row);
	if (g_strcmp0 (_tmp0_, "(ssssa{sv}bbb)") != 0) {
		const gchar* _tmp1_;
		gchar* _tmp2_;
		gchar* _tmp3_;
		GError* _tmp4_;
		GError* _tmp5_;
		_tmp1_ = g_variant_get_type_string (changed_row);
		_tmp2_ = g_strdup_printf ("Incorrect signature of filter-state (got '%s')", _tmp1_);
		_tmp3_ = _tmp2_;
		_tmp4_ = g_error_new_literal (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_REQUEST_FAILED, _tmp3_);
		_tmp5_ = _tmp4_;
		_g_free0 (_tmp3_);
		_inner_error_ = _tmp5_;
		if (_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR) {
			g_propagate_error (error, _inner_error_);
			return;
		} else {
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
			g_clear_error (&_inner_error_);
			return;
		}
	}
	g_variant_get_child (changed_row, (gsize) UNITY_INTERNAL_FILTER_COLUMN_ID, "s", &filter_id, NULL);
	_tmp6_ = filter_id;
	_tmp7_ = unity_internal_scope_channel_get_filter_by_id (channel, _tmp6_);
	_tmp8_ = _g_object_ref0 (_tmp7_);
	filter = _tmp8_;
	_tmp9_ = filter;
	if (_tmp9_ == NULL) {
		const gchar* _tmp10_;
		gchar* _tmp11_;
		gchar* _tmp12_;
		GError* _tmp13_;
		GError* _tmp14_;
		_tmp10_ = filter_id;
		_tmp11_ = g_strdup_printf ("Unable to find filter with id '%s'", _tmp10_);
		_tmp12_ = _tmp11_;
		_tmp13_ = g_error_new_literal (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_REQUEST_FAILED, _tmp12_);
		_tmp14_ = _tmp13_;
		_g_free0 (_tmp12_);
		_inner_error_ = _tmp14_;
		if (_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR) {
			g_propagate_error (error, _inner_error_);
			_g_object_unref0 (filter);
			_g_free0 (filter_id);
			return;
		} else {
			_g_object_unref0 (filter);
			_g_free0 (filter_id);
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
			g_clear_error (&_inner_error_);
			return;
		}
	}
	g_variant_get_child (changed_row, (gsize) UNITY_INTERNAL_FILTER_COLUMN_FILTERING, "b", &state, NULL);
	_tmp15_ = filter;
	_tmp16_ = state;
	unity_filter_set_filtering (_tmp15_, _tmp16_);
	g_variant_get_child (changed_row, (gsize) UNITY_INTERNAL_FILTER_COLUMN_COLLAPSED, "b", &state, NULL);
	_tmp17_ = filter;
	_tmp18_ = state;
	unity_filter_set_collapsed (_tmp17_, _tmp18_);
	_tmp19_ = filter;
	_tmp20_ = g_variant_get_child_value (changed_row, (gsize) UNITY_INTERNAL_FILTER_COLUMN_RENDERER_STATE);
	_tmp21_ = _tmp20_;
	unity_filter_update (_tmp19_, _tmp21_);
	_g_variant_unref0 (_tmp21_);
	_g_object_unref0 (filter);
	_g_free0 (filter_id);
}


static void
unity_internal_deprecated_scope_impl_real_open_channel_data_free (gpointer _data)
{
	UnityInternalDeprecatedScopeImplOpenChannelData* _data_;
	_data_ = _data;
	_g_hash_table_unref0 (_data_->hints);
	_g_object_unref0 (_data_->cancellable);
	_g_free0 (_data_->sender);
	_g_free0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityInternalDeprecatedScopeImplOpenChannelData, _data_);
}


static void
unity_internal_deprecated_scope_impl_real_open_channel_async_ready_wrapper (GObject *source_object,
                                                                            GAsyncResult *res,
                                                                            void *user_data)
{
	UnityInternalDeprecatedScopeImplOpenChannelData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_internal_deprecated_scope_impl_real_open_channel (UnityProtocolScopeService* base,
                                                        guint channel_type,
                                                        GHashTable* hints,
                                                        GCancellable* cancellable,
                                                        const char* sender,
                                                        GAsyncReadyCallback _callback_,
                                                        gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImpl * self;
	UnityInternalDeprecatedScopeImplOpenChannelData* _data_;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	GHashTable* _tmp1_;
	GCancellable* _tmp2_;
	char* _tmp3_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_data_ = g_slice_new0 (UnityInternalDeprecatedScopeImplOpenChannelData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), cancellable, unity_internal_deprecated_scope_impl_real_open_channel_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_internal_deprecated_scope_impl_real_open_channel_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_data_->channel_type = channel_type;
	_tmp1_ = _g_hash_table_ref0 (hints);
	_g_hash_table_unref0 (_data_->hints);
	_data_->hints = _tmp1_;
	_tmp2_ = _g_object_ref0 (cancellable);
	_g_object_unref0 (_data_->cancellable);
	_data_->cancellable = _tmp2_;
	_tmp3_ = g_strdup (sender);
	_g_free0 (_data_->sender);
	_data_->sender = _tmp3_;
	unity_internal_deprecated_scope_impl_real_open_channel_co (_data_);
}


static gchar*
unity_internal_deprecated_scope_impl_real_open_channel_finish (UnityProtocolScopeService* base,
                                                               GAsyncResult* _res_,
                                                               GHashTable* * out_hints,
                                                               GError** error)
{
	gchar* result;
	UnityInternalDeprecatedScopeImplOpenChannelData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return NULL;
	}
	if (out_hints) {
		*out_hints = _data_->out_hints;
	} else {
		_g_hash_table_unref0 (_data_->out_hints);
	}
	_data_->out_hints = NULL;
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static void
unity_internal_deprecated_scope_impl_open_channel_ready (GObject* source_object,
                                                         GAsyncResult* _res_,
                                                         gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImplOpenChannelData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_internal_deprecated_scope_impl_real_open_channel_co (_data_);
}


static gboolean
unity_internal_deprecated_scope_impl_real_open_channel_co (UnityInternalDeprecatedScopeImplOpenChannelData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->flags = unity_protocol_channel_flags_from_hints (_data_->hints);
	_data_->_tmp0_ = unity_internal_scope_channel_new ((UnityProtocolChannelType) _data_->channel_type);
	_data_->channel = _data_->_tmp0_;
	_data_->_tmp1_ = _data_->self->priv->_owner;
	_data_->_tmp2_ = unity_deprecated_scope_base_get_schema ((UnityDeprecatedScopeBase*) _data_->_tmp1_);
	_data_->_tmp3_ = _data_->_tmp2_;
	_data_->_tmp4_ = _g_object_ref0 (_data_->_tmp3_);
	_data_->schema = _data_->_tmp4_;
	_data_->_tmp5_ = g_str_hash;
	_data_->_tmp6_ = g_str_equal;
	_data_->_tmp7_ = g_hash_table_new_full (_data_->_tmp5_, _data_->_tmp6_, _g_free0_, _g_free0_);
	_data_->required_schema = _data_->_tmp7_;
	_data_->_tmp8_ = g_str_hash;
	_data_->_tmp9_ = g_str_equal;
	_data_->_tmp10_ = g_hash_table_new_full (_data_->_tmp8_, _data_->_tmp9_, _g_free0_, _g_free0_);
	_data_->optional_schema = _data_->_tmp10_;
	_data_->_tmp11_ = _data_->schema;
	_data_->_tmp12_ = unity_schema_get_fields (_data_->_tmp11_);
	{
		_data_->field_collection = _data_->_tmp12_;
		for (_data_->field_it = _data_->field_collection; _data_->field_it != NULL; _data_->field_it = _data_->field_it->next) {
			_data_->field = (UnitySchemaFieldInfo*) _data_->field_it->data;
			{
				_data_->_tmp13_ = _data_->field;
				_data_->_tmp14_ = (*_data_->_tmp13_).type;
				if (_data_->_tmp14_ == UNITY_SCHEMA_FIELD_TYPE_REQUIRED) {
					_data_->_tmp15_ = _data_->required_schema;
					_data_->_tmp16_ = _data_->field;
					_data_->_tmp17_ = (*_data_->_tmp16_).name;
					_data_->_tmp18_ = g_strdup (_data_->_tmp17_);
					_data_->_tmp19_ = _data_->field;
					_data_->_tmp20_ = (*_data_->_tmp19_).schema;
					_data_->_tmp21_ = g_strdup (_data_->_tmp20_);
					g_hash_table_insert (_data_->_tmp15_, _data_->_tmp18_, _data_->_tmp21_);
				} else {
					_data_->_tmp22_ = _data_->optional_schema;
					_data_->_tmp23_ = _data_->field;
					_data_->_tmp24_ = (*_data_->_tmp23_).name;
					_data_->_tmp25_ = g_strdup (_data_->_tmp24_);
					_data_->_tmp26_ = _data_->field;
					_data_->_tmp27_ = (*_data_->_tmp26_).schema;
					_data_->_tmp28_ = g_strdup (_data_->_tmp27_);
					g_hash_table_insert (_data_->_tmp22_, _data_->_tmp25_, _data_->_tmp28_);
				}
			}
		}
		(_data_->field_collection == NULL) ? NULL : (_data_->field_collection = (g_list_free (_data_->field_collection), NULL));
	}
	_data_->_tmp29_ = _data_->channel;
	_data_->_tmp30_ = unity_internal_deprecated_scope_impl_create_dbus_name (_data_->self);
	_data_->_tmp31_ = _data_->_tmp30_;
	_data_->_tmp32_ = _data_->required_schema;
	_data_->_tmp33_ = _data_->optional_schema;
	_data_->_tmp34_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) _data_->self);
	_data_->_tmp35_ = _data_->_tmp34_;
	_data_->_tmp36_ = _data_->flags;
	_data_->_tmp37_ = unity_internal_scope_channel_create_channel (_data_->_tmp29_, _data_->_tmp31_, _data_->_tmp32_, _data_->_tmp33_, _data_->_tmp35_, _data_->_tmp36_);
	_data_->_tmp38_ = _data_->_tmp37_;
	_g_free0 (_data_->_tmp31_);
	_data_->model_name = _data_->_tmp38_;
	_data_->_tmp39_ = _data_->channel;
	_data_->_tmp40_ = _data_->_tmp39_->transfer_model;
	if (_data_->_tmp40_ != NULL) {
		_data_->_tmp41_ = _data_->channel;
		_data_->_tmp42_ = _data_->_tmp41_->transfer_model;
		dee_shared_model_set_flush_mode (_data_->_tmp42_, DEE_SHARED_MODEL_FLUSH_MODE_AUTOMATIC);
		_data_->_tmp43_ = _data_->channel;
		_data_->_tmp44_ = _data_->_tmp43_->transfer_model;
		_data_->_state_ = 1;
		unity_internal_utils_wait_for_model_synchronization (_data_->_tmp44_, unity_internal_deprecated_scope_impl_open_channel_ready, _data_);
		return FALSE;
		_state_1:
		unity_internal_utils_wait_for_model_synchronization_finish (_data_->_res_);
	}
	_data_->_tmp45_ = _data_->self->priv->_channels;
	_data_->_tmp46_ = _data_->channel;
	_data_->_tmp47_ = _data_->_tmp46_->id;
	_data_->_tmp48_ = g_strdup (_data_->_tmp47_);
	_data_->_tmp49_ = _data_->channel;
	_data_->_tmp50_ = _g_object_ref0 (_data_->_tmp49_);
	g_hash_table_insert (_data_->_tmp45_, _data_->_tmp48_, _data_->_tmp50_);
	_data_->_tmp51_ = g_str_hash;
	_data_->_tmp52_ = g_str_equal;
	_data_->_tmp53_ = g_hash_table_new_full (_data_->_tmp51_, _data_->_tmp52_, _g_free0_, _g_variant_unref0_);
	_g_hash_table_unref0 (_data_->out_hints);
	_data_->out_hints = _data_->_tmp53_;
	_data_->_tmp54_ = g_strdup (UNITY_PROTOCOL_CHANNEL_SWARM_NAME_HINT);
	_data_->_tmp55_ = _data_->model_name;
	_data_->_tmp56_ = g_variant_new_string (_data_->_tmp55_);
	g_variant_ref_sink (_data_->_tmp56_);
	g_hash_table_insert (_data_->out_hints, _data_->_tmp54_, _data_->_tmp56_);
	_data_->_tmp57_ = _data_->channel;
	_data_->_tmp58_ = _data_->_tmp57_->id;
	_data_->_tmp59_ = g_strdup (_data_->_tmp58_);
	_data_->result = _data_->_tmp59_;
	_g_free0 (_data_->model_name);
	_g_hash_table_unref0 (_data_->optional_schema);
	_g_hash_table_unref0 (_data_->required_schema);
	_g_object_unref0 (_data_->schema);
	_g_object_unref0 (_data_->channel);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static UnityInternalScopeChannel*
unity_internal_deprecated_scope_impl_get_channel_by_id (UnityInternalDeprecatedScopeImpl* self,
                                                        const gchar* channel_id,
                                                        GError** error)
{
	UnityInternalScopeChannel* result = NULL;
	UnityInternalScopeChannel* channel = NULL;
	GHashTable* _tmp0_;
	gconstpointer _tmp1_;
	UnityInternalScopeChannel* _tmp2_;
	UnityInternalScopeChannel* _tmp4_;
	UnityInternalScopeChannel* _tmp5_;
	GError * _inner_error_ = NULL;
	g_return_val_if_fail (self != NULL, NULL);
	g_return_val_if_fail (channel_id != NULL, NULL);
	_tmp0_ = self->priv->_channels;
	_tmp1_ = g_hash_table_lookup (_tmp0_, channel_id);
	channel = (UnityInternalScopeChannel*) _tmp1_;
	_tmp2_ = channel;
	if (_tmp2_ == NULL) {
		GError* _tmp3_;
		_tmp3_ = g_error_new_literal (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_INVALID_CHANNEL, "Invalid channel ID!");
		_inner_error_ = _tmp3_;
		if (_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR) {
			g_propagate_error (error, _inner_error_);
			return NULL;
		} else {
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
			g_clear_error (&_inner_error_);
			return NULL;
		}
	}
	_tmp4_ = channel;
	_tmp5_ = _g_object_ref0 (_tmp4_);
	result = _tmp5_;
	return result;
}


static void
unity_internal_deprecated_scope_impl_real_close_channel_data_free (gpointer _data)
{
	UnityInternalDeprecatedScopeImplCloseChannelData* _data_;
	_data_ = _data;
	_g_free0 (_data_->channel_id);
	_g_hash_table_unref0 (_data_->hints);
	_g_object_unref0 (_data_->cancellable);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityInternalDeprecatedScopeImplCloseChannelData, _data_);
}


static void
unity_internal_deprecated_scope_impl_real_close_channel_async_ready_wrapper (GObject *source_object,
                                                                             GAsyncResult *res,
                                                                             void *user_data)
{
	UnityInternalDeprecatedScopeImplCloseChannelData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_internal_deprecated_scope_impl_real_close_channel (UnityProtocolScopeService* base,
                                                         const gchar* channel_id,
                                                         GHashTable* hints,
                                                         GCancellable* cancellable,
                                                         GAsyncReadyCallback _callback_,
                                                         gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImpl * self;
	UnityInternalDeprecatedScopeImplCloseChannelData* _data_;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	gchar* _tmp1_;
	GHashTable* _tmp2_;
	GCancellable* _tmp3_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_data_ = g_slice_new0 (UnityInternalDeprecatedScopeImplCloseChannelData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), cancellable, unity_internal_deprecated_scope_impl_real_close_channel_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_internal_deprecated_scope_impl_real_close_channel_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (channel_id);
	_g_free0 (_data_->channel_id);
	_data_->channel_id = _tmp1_;
	_tmp2_ = _g_hash_table_ref0 (hints);
	_g_hash_table_unref0 (_data_->hints);
	_data_->hints = _tmp2_;
	_tmp3_ = _g_object_ref0 (cancellable);
	_g_object_unref0 (_data_->cancellable);
	_data_->cancellable = _tmp3_;
	unity_internal_deprecated_scope_impl_real_close_channel_co (_data_);
}


static void
unity_internal_deprecated_scope_impl_real_close_channel_finish (UnityProtocolScopeService* base,
                                                                GAsyncResult* _res_,
                                                                GError** error)
{
	UnityInternalDeprecatedScopeImplCloseChannelData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static gboolean
unity_internal_deprecated_scope_impl_real_close_channel_co (UnityInternalDeprecatedScopeImplCloseChannelData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_channels;
	if (g_hash_table_remove (_data_->_tmp0_, _data_->channel_id) == FALSE) {
		_data_->_tmp1_ = g_error_new_literal (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_INVALID_CHANNEL, "Invalid channel ID!");
		_data_->_inner_error_ = _data_->_tmp1_;
		if ((_data_->_inner_error_->domain == G_IO_ERROR) || (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		} else {
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
			g_clear_error (&_data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_internal_deprecated_scope_impl_real_set_view_type_data_free (gpointer _data)
{
	UnityInternalDeprecatedScopeImplSetViewTypeData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityInternalDeprecatedScopeImplSetViewTypeData, _data_);
}


static void
unity_internal_deprecated_scope_impl_real_set_view_type_async_ready_wrapper (GObject *source_object,
                                                                             GAsyncResult *res,
                                                                             void *user_data)
{
	UnityInternalDeprecatedScopeImplSetViewTypeData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_internal_deprecated_scope_impl_real_set_view_type (UnityProtocolScopeService* base,
                                                         guint view_type_id,
                                                         GAsyncReadyCallback _callback_,
                                                         gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImpl * self;
	UnityInternalDeprecatedScopeImplSetViewTypeData* _data_;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_data_ = g_slice_new0 (UnityInternalDeprecatedScopeImplSetViewTypeData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_internal_deprecated_scope_impl_real_set_view_type_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_internal_deprecated_scope_impl_real_set_view_type_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_data_->view_type_id = view_type_id;
	unity_internal_deprecated_scope_impl_real_set_view_type_co (_data_);
}


static void
unity_internal_deprecated_scope_impl_real_set_view_type_finish (UnityProtocolScopeService* base,
                                                                GAsyncResult* _res_,
                                                                GError** error)
{
	UnityInternalDeprecatedScopeImplSetViewTypeData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static gboolean
unity_internal_deprecated_scope_impl_real_set_view_type_co (UnityInternalDeprecatedScopeImplSetViewTypeData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->view_type = (UnityProtocolViewType) _data_->view_type_id;
	unity_internal_deprecated_scope_impl_set_view_type (_data_->self, _data_->view_type);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_internal_deprecated_scope_impl_set_active_sources_data_free (gpointer _data)
{
	UnityInternalDeprecatedScopeImplSetActiveSourcesData* _data_;
	_data_ = _data;
	_g_free0 (_data_->channel_id);
	_g_object_unref0 (_data_->cancellable);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityInternalDeprecatedScopeImplSetActiveSourcesData, _data_);
}


static void
unity_internal_deprecated_scope_impl_set_active_sources_async_ready_wrapper (GObject *source_object,
                                                                             GAsyncResult *res,
                                                                             void *user_data)
{
	UnityInternalDeprecatedScopeImplSetActiveSourcesData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_internal_deprecated_scope_impl_set_active_sources (UnityInternalDeprecatedScopeImpl* self,
                                                         const gchar* channel_id,
                                                         gchar** sources,
                                                         int sources_length1,
                                                         GCancellable* cancellable,
                                                         GAsyncReadyCallback _callback_,
                                                         gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImplSetActiveSourcesData* _data_;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	gchar* _tmp1_;
	GCancellable* _tmp2_;
	_data_ = g_slice_new0 (UnityInternalDeprecatedScopeImplSetActiveSourcesData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), cancellable, unity_internal_deprecated_scope_impl_set_active_sources_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_internal_deprecated_scope_impl_set_active_sources_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (channel_id);
	_g_free0 (_data_->channel_id);
	_data_->channel_id = _tmp1_;
	_data_->sources = sources;
	_data_->sources_length1 = sources_length1;
	_tmp2_ = _g_object_ref0 (cancellable);
	_g_object_unref0 (_data_->cancellable);
	_data_->cancellable = _tmp2_;
	unity_internal_deprecated_scope_impl_set_active_sources_co (_data_);
}


void
unity_internal_deprecated_scope_impl_set_active_sources_finish (UnityInternalDeprecatedScopeImpl* self,
                                                                GAsyncResult* _res_,
                                                                GError** error)
{
	UnityInternalDeprecatedScopeImplSetActiveSourcesData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static gboolean
unity_internal_deprecated_scope_impl_set_active_sources_co (UnityInternalDeprecatedScopeImplSetActiveSourcesData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_owner;
	unity_deprecated_scope_base_set_active_sources_internal ((UnityDeprecatedScopeBase*) _data_->_tmp0_, _data_->sources, _data_->sources_length1);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_internal_deprecated_scope_impl_real_push_results_data_free (gpointer _data)
{
	UnityInternalDeprecatedScopeImplPushResultsData* _data_;
	_data_ = _data;
	_g_free0 (_data_->channel_id);
	_g_free0 (_data_->search_string);
	_g_free0 (_data_->source_scope_id);
	_g_variant_unref0 (_data_->_result_);
	_g_object_unref0 (_data_->cancellable);
	_g_hash_table_unref0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityInternalDeprecatedScopeImplPushResultsData, _data_);
}


static void
unity_internal_deprecated_scope_impl_real_push_results_async_ready_wrapper (GObject *source_object,
                                                                            GAsyncResult *res,
                                                                            void *user_data)
{
	UnityInternalDeprecatedScopeImplPushResultsData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static void
unity_internal_deprecated_scope_impl_real_push_results (UnityProtocolScopeService* base,
                                                        const gchar* channel_id,
                                                        const gchar* search_string,
                                                        const gchar* source_scope_id,
                                                        GVariant* _result_,
                                                        gchar** categories,
                                                        int categories_length1,
                                                        GCancellable* cancellable,
                                                        GAsyncReadyCallback _callback_,
                                                        gpointer _user_data_)
{
	UnityInternalDeprecatedScopeImpl * self;
	UnityInternalDeprecatedScopeImplPushResultsData* _data_;
	UnityInternalDeprecatedScopeImpl* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	GVariant* _tmp4_;
	GCancellable* _tmp5_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_data_ = g_slice_new0 (UnityInternalDeprecatedScopeImplPushResultsData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), cancellable, unity_internal_deprecated_scope_impl_real_push_results_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_internal_deprecated_scope_impl_real_push_results_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (channel_id);
	_g_free0 (_data_->channel_id);
	_data_->channel_id = _tmp1_;
	_tmp2_ = g_strdup (search_string);
	_g_free0 (_data_->search_string);
	_data_->search_string = _tmp2_;
	_tmp3_ = g_strdup (source_scope_id);
	_g_free0 (_data_->source_scope_id);
	_data_->source_scope_id = _tmp3_;
	_tmp4_ = _g_variant_ref0 (_result_);
	_g_variant_unref0 (_data_->_result_);
	_data_->_result_ = _tmp4_;
	_data_->categories = categories;
	_data_->categories_length1 = categories_length1;
	_tmp5_ = _g_object_ref0 (cancellable);
	_g_object_unref0 (_data_->cancellable);
	_data_->cancellable = _tmp5_;
	unity_internal_deprecated_scope_impl_real_push_results_co (_data_);
}


static GHashTable*
unity_internal_deprecated_scope_impl_real_push_results_finish (UnityProtocolScopeService* base,
                                                               GAsyncResult* _res_,
                                                               GError** error)
{
	GHashTable* result;
	UnityInternalDeprecatedScopeImplPushResultsData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return NULL;
	}
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static gboolean
unity_internal_deprecated_scope_impl_real_push_results_co (UnityInternalDeprecatedScopeImplPushResultsData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = g_error_new_literal (UNITY_PROTOCOL_SCOPE_ERROR, UNITY_PROTOCOL_SCOPE_ERROR_REQUEST_FAILED, "Regular scopes don't support results pushing");
	_data_->_inner_error_ = _data_->_tmp0_;
	if ((_data_->_inner_error_->domain == G_IO_ERROR) || (_data_->_inner_error_->domain == UNITY_PROTOCOL_SCOPE_ERROR)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	} else {
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
		g_clear_error (&_data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
}


static UnityDeprecatedScope*
unity_internal_deprecated_scope_impl_get_owner (UnityInternalDeprecatedScopeImpl* self)
{
	UnityDeprecatedScope* result;
	UnityDeprecatedScope* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_owner;
	result = _tmp0_;
	return result;
}


static void
unity_internal_deprecated_scope_impl_set_owner (UnityInternalDeprecatedScopeImpl* self,
                                                UnityDeprecatedScope* value)
{
	g_return_if_fail (self != NULL);
	if (unity_internal_deprecated_scope_impl_get_owner (self) != value) {
		self->priv->_owner = value;
		g_object_notify_by_pspec ((GObject *) self, unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_OWNER_PROPERTY]);
	}
}


static DeeSerializableModel*
unity_internal_deprecated_scope_impl_real_get_categories_model (UnityInternalScopeDBusImpl* base)
{
	DeeSerializableModel* result;
	UnityInternalDeprecatedScopeImpl* self;
	DeeSerializableModel* _tmp0_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = self->priv->_categories_model;
	result = _tmp0_;
	return result;
}


static void
unity_internal_deprecated_scope_impl_real_set_categories_model (UnityInternalScopeDBusImpl* base,
                                                                DeeSerializableModel* value)
{
	UnityInternalDeprecatedScopeImpl* self;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	if (unity_internal_deprecated_scope_impl_real_get_categories_model (base) != value) {
		DeeSerializableModel* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_categories_model);
		self->priv->_categories_model = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CATEGORIES_MODEL_PROPERTY]);
	}
}


static DeeSerializableModel*
unity_internal_deprecated_scope_impl_real_get_filters_model (UnityInternalScopeDBusImpl* base)
{
	DeeSerializableModel* result;
	UnityInternalDeprecatedScopeImpl* self;
	DeeSerializableModel* _tmp0_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = self->priv->_filters_model;
	result = _tmp0_;
	return result;
}


static void
unity_internal_deprecated_scope_impl_real_set_filters_model (UnityInternalScopeDBusImpl* base,
                                                             DeeSerializableModel* value)
{
	UnityInternalDeprecatedScopeImpl* self;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	if (unity_internal_deprecated_scope_impl_real_get_filters_model (base) != value) {
		DeeSerializableModel* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_filters_model);
		self->priv->_filters_model = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_FILTERS_MODEL_PROPERTY]);
	}
}


UnityProtocolViewType
unity_internal_deprecated_scope_impl_get_view_type (UnityInternalDeprecatedScopeImpl* self)
{
	UnityProtocolViewType result;
	UnityProtocolViewType _tmp0_;
	g_return_val_if_fail (self != NULL, 0);
	_tmp0_ = self->priv->_view_type;
	result = _tmp0_;
	return result;
}


void
unity_internal_deprecated_scope_impl_set_view_type (UnityInternalDeprecatedScopeImpl* self,
                                                    UnityProtocolViewType value)
{
	g_return_if_fail (self != NULL);
	if (unity_internal_deprecated_scope_impl_get_view_type (self) != value) {
		self->priv->_view_type = value;
		g_object_notify_by_pspec ((GObject *) self, unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_VIEW_TYPE_PROPERTY]);
	}
}


static gint
unity_internal_deprecated_scope_impl_real_get_protocol_version (UnityProtocolScopeService* base)
{
	gint result;
	UnityInternalDeprecatedScopeImpl* self;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	result = 1;
	return result;
}


static gboolean
unity_internal_deprecated_scope_impl_real_get_visible (UnityProtocolScopeService* base)
{
	gboolean result;
	UnityInternalDeprecatedScopeImpl* self;
	UnityDeprecatedScope* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = self->priv->_owner;
	_tmp1_ = unity_deprecated_scope_base_get_visible ((UnityDeprecatedScopeBase*) _tmp0_);
	_tmp2_ = _tmp1_;
	result = _tmp2_;
	return result;
}


static gboolean
unity_internal_deprecated_scope_impl_real_get_is_master (UnityProtocolScopeService* base)
{
	gboolean result;
	UnityInternalDeprecatedScopeImpl* self;
	UnityDeprecatedScope* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = self->priv->_owner;
	_tmp1_ = unity_deprecated_scope_base_get_is_master ((UnityDeprecatedScopeBase*) _tmp0_);
	_tmp2_ = _tmp1_;
	result = _tmp2_;
	return result;
}


static gchar*
unity_internal_deprecated_scope_impl_real_get_search_hint (UnityProtocolScopeService* base)
{
	gchar* result;
	UnityInternalDeprecatedScopeImpl* self;
	const gchar* _tmp0_ = NULL;
	UnityDeprecatedScope* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	gchar* _tmp4_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp1_ = self->priv->_owner;
	_tmp2_ = unity_deprecated_scope_base_get_search_hint ((UnityDeprecatedScopeBase*) _tmp1_);
	_tmp3_ = _tmp2_;
	_tmp0_ = _tmp3_;
	if (_tmp0_ == NULL) {
		_tmp0_ = "";
	}
	_tmp4_ = g_strdup (_tmp0_);
	result = _tmp4_;
	return result;
}


static GHashTable*
unity_internal_deprecated_scope_impl_real_get_metadata (UnityProtocolScopeService* base)
{
	GHashTable* result;
	UnityInternalDeprecatedScopeImpl* self;
	UnitySchema* schema = NULL;
	UnityDeprecatedScope* _tmp0_;
	UnitySchema* _tmp1_;
	UnitySchema* _tmp2_;
	UnitySchema* _tmp3_;
	GHashTable* required_schema = NULL;
	GHashFunc _tmp4_;
	GEqualFunc _tmp5_;
	GHashTable* _tmp6_;
	UnitySchema* _tmp7_;
	GList* _tmp8_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = self->priv->_owner;
	_tmp1_ = unity_deprecated_scope_base_get_schema ((UnityDeprecatedScopeBase*) _tmp0_);
	_tmp2_ = _tmp1_;
	_tmp3_ = _g_object_ref0 (_tmp2_);
	schema = _tmp3_;
	_tmp4_ = g_str_hash;
	_tmp5_ = g_str_equal;
	_tmp6_ = g_hash_table_new_full (_tmp4_, _tmp5_, _g_free0_, _g_free0_);
	required_schema = _tmp6_;
	_tmp7_ = schema;
	_tmp8_ = unity_schema_get_fields (_tmp7_);
	{
		GList* field_collection = NULL;
		GList* field_it = NULL;
		field_collection = _tmp8_;
		for (field_it = field_collection; field_it != NULL; field_it = field_it->next) {
			UnitySchemaFieldInfo* field = NULL;
			field = (UnitySchemaFieldInfo*) field_it->data;
			{
				UnitySchemaFieldInfo* _tmp9_;
				UnitySchemaFieldType _tmp10_;
				_tmp9_ = field;
				_tmp10_ = (*_tmp9_).type;
				if (_tmp10_ == UNITY_SCHEMA_FIELD_TYPE_REQUIRED) {
					GHashTable* _tmp11_;
					UnitySchemaFieldInfo* _tmp12_;
					const gchar* _tmp13_;
					gchar* _tmp14_;
					UnitySchemaFieldInfo* _tmp15_;
					const gchar* _tmp16_;
					gchar* _tmp17_;
					_tmp11_ = required_schema;
					_tmp12_ = field;
					_tmp13_ = (*_tmp12_).name;
					_tmp14_ = g_strdup (_tmp13_);
					_tmp15_ = field;
					_tmp16_ = (*_tmp15_).schema;
					_tmp17_ = g_strdup (_tmp16_);
					g_hash_table_insert (_tmp11_, _tmp14_, _tmp17_);
				}
			}
		}
		(field_collection == NULL) ? NULL : (field_collection = (g_list_free (field_collection), NULL));
	}
	result = required_schema;
	_g_object_unref0 (schema);
	return result;
}


static GHashTable*
unity_internal_deprecated_scope_impl_real_get_optional_metadata (UnityProtocolScopeService* base)
{
	GHashTable* result;
	UnityInternalDeprecatedScopeImpl* self;
	UnitySchema* schema = NULL;
	UnityDeprecatedScope* _tmp0_;
	UnitySchema* _tmp1_;
	UnitySchema* _tmp2_;
	UnitySchema* _tmp3_;
	GHashTable* optional_schema = NULL;
	GHashFunc _tmp4_;
	GEqualFunc _tmp5_;
	GHashTable* _tmp6_;
	UnitySchema* _tmp7_;
	GList* _tmp8_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = self->priv->_owner;
	_tmp1_ = unity_deprecated_scope_base_get_schema ((UnityDeprecatedScopeBase*) _tmp0_);
	_tmp2_ = _tmp1_;
	_tmp3_ = _g_object_ref0 (_tmp2_);
	schema = _tmp3_;
	_tmp4_ = g_str_hash;
	_tmp5_ = g_str_equal;
	_tmp6_ = g_hash_table_new_full (_tmp4_, _tmp5_, _g_free0_, _g_free0_);
	optional_schema = _tmp6_;
	_tmp7_ = schema;
	_tmp8_ = unity_schema_get_fields (_tmp7_);
	{
		GList* field_collection = NULL;
		GList* field_it = NULL;
		field_collection = _tmp8_;
		for (field_it = field_collection; field_it != NULL; field_it = field_it->next) {
			UnitySchemaFieldInfo* field = NULL;
			field = (UnitySchemaFieldInfo*) field_it->data;
			{
				UnitySchemaFieldInfo* _tmp9_;
				UnitySchemaFieldType _tmp10_;
				_tmp9_ = field;
				_tmp10_ = (*_tmp9_).type;
				if (_tmp10_ == UNITY_SCHEMA_FIELD_TYPE_OPTIONAL) {
					GHashTable* _tmp11_;
					UnitySchemaFieldInfo* _tmp12_;
					const gchar* _tmp13_;
					gchar* _tmp14_;
					UnitySchemaFieldInfo* _tmp15_;
					const gchar* _tmp16_;
					gchar* _tmp17_;
					_tmp11_ = optional_schema;
					_tmp12_ = field;
					_tmp13_ = (*_tmp12_).name;
					_tmp14_ = g_strdup (_tmp13_);
					_tmp15_ = field;
					_tmp16_ = (*_tmp15_).schema;
					_tmp17_ = g_strdup (_tmp16_);
					g_hash_table_insert (_tmp11_, _tmp14_, _tmp17_);
				}
			}
		}
		(field_collection == NULL) ? NULL : (field_collection = (g_list_free (field_collection), NULL));
	}
	result = optional_schema;
	_g_object_unref0 (schema);
	return result;
}


static GVariant*
unity_internal_deprecated_scope_impl_real_get_categories (UnityProtocolScopeService* base)
{
	GVariant* result;
	UnityInternalDeprecatedScopeImpl* self;
	DeeSerializableModel* _tmp0_;
	DeeSerializableModel* _tmp1_;
	GVariant* _tmp2_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self);
	_tmp1_ = _tmp0_;
	_tmp2_ = dee_serializable_serialize ((DeeSerializable*) _tmp1_);
	result = _tmp2_;
	return result;
}


static GVariant*
unity_internal_deprecated_scope_impl_real_get_filters (UnityProtocolScopeService* base)
{
	GVariant* result;
	UnityInternalDeprecatedScopeImpl* self;
	DeeSerializableModel* _tmp0_;
	DeeSerializableModel* _tmp1_;
	GVariant* _tmp2_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self);
	_tmp1_ = _tmp0_;
	_tmp2_ = dee_serializable_serialize ((DeeSerializable*) _tmp1_);
	result = _tmp2_;
	return result;
}


static GHashTable*
unity_internal_deprecated_scope_impl_real_get_hints (UnityProtocolScopeService* base)
{
	GHashTable* result;
	UnityInternalDeprecatedScopeImpl* self;
	GHashTable* _tmp0_;
	self = (UnityInternalDeprecatedScopeImpl*) base;
	_tmp0_ = g_hash_table_new_full (NULL, NULL, _g_free0_, _g_variant_unref0_);
	result = _tmp0_;
	return result;
}


static void
_g_object_unref0_ (gpointer var)
{
	(var == NULL) ? NULL : (var = (g_object_unref (var), NULL));
}


static GObject *
unity_internal_deprecated_scope_impl_constructor (GType type,
                                                  guint n_construct_properties,
                                                  GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	UnityInternalDeprecatedScopeImpl * self;
	GRand* _tmp0_;
	GHashFunc _tmp1_;
	GEqualFunc _tmp2_;
	GHashTable* _tmp3_;
	GHashFunc _tmp4_;
	GEqualFunc _tmp5_;
	GHashTable* _tmp6_;
	parent_class = G_OBJECT_CLASS (unity_internal_deprecated_scope_impl_parent_class);
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImpl);
	_tmp0_ = g_rand_new ();
	_g_rand_free0 (self->priv->_rand);
	self->priv->_rand = _tmp0_;
	_tmp1_ = g_str_hash;
	_tmp2_ = g_str_equal;
	_tmp3_ = g_hash_table_new_full (_tmp1_, _tmp2_, _g_free0_, _g_object_unref0_);
	_g_hash_table_unref0 (self->priv->_action_map);
	self->priv->_action_map = _tmp3_;
	_tmp4_ = g_str_hash;
	_tmp5_ = g_str_equal;
	_tmp6_ = g_hash_table_new_full (_tmp4_, _tmp5_, _g_free0_, _g_object_unref0_);
	_g_hash_table_unref0 (self->priv->_channels);
	self->priv->_channels = _tmp6_;
	unity_internal_deprecated_scope_impl_create_models (self);
	return obj;
}


static void
unity_internal_deprecated_scope_impl_class_init (UnityInternalDeprecatedScopeImplClass * klass)
{
	const gchar* _tmp0_;
	unity_internal_deprecated_scope_impl_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityInternalDeprecatedScopeImplPrivate));
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_internal_deprecated_scope_impl_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_internal_deprecated_scope_impl_set_property;
	G_OBJECT_CLASS (klass)->constructor = unity_internal_deprecated_scope_impl_constructor;
	G_OBJECT_CLASS (klass)->finalize = unity_internal_deprecated_scope_impl_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_OWNER_PROPERTY, unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_OWNER_PROPERTY] = g_param_spec_object ("owner", "owner", "owner", UNITY_TYPE_DEPRECATED_SCOPE, G_PARAM_STATIC_STRINGS | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CATEGORIES_MODEL_PROPERTY, unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CATEGORIES_MODEL_PROPERTY] = g_param_spec_object ("categories-model", "categories-model", "categories-model", dee_serializable_model_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_FILTERS_MODEL_PROPERTY, unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_FILTERS_MODEL_PROPERTY] = g_param_spec_object ("filters-model", "filters-model", "filters-model", dee_serializable_model_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_VIEW_TYPE_PROPERTY, unity_internal_deprecated_scope_impl_properties[UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_VIEW_TYPE_PROPERTY] = g_param_spec_enum ("view-type", "view-type", "view-type", UNITY_PROTOCOL_TYPE_VIEW_TYPE, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	_tmp0_ = g_getenv (UNITY_INTERNAL_VAR_MEASURED_SEARCHES);
	unity_internal_deprecated_scope_impl_measure_requests = _tmp0_ != NULL;
}


static void
unity_internal_deprecated_scope_impl_unity_protocol_scope_service_interface_init (UnityProtocolScopeServiceIface * iface)
{
	unity_internal_deprecated_scope_impl_unity_protocol_scope_service_parent_iface = g_type_interface_peek_parent (iface);
	iface->activate = (void (*) (UnityProtocolScopeService *, const gchar*, GVariant**, int, guint, GHashTable*, GCancellable*, GAsyncReadyCallback, gpointer)) unity_internal_deprecated_scope_impl_real_activate;
	iface->activate_finish = (void (*) (UnityProtocolScopeService *, GAsyncResult*, UnityProtocolActivationReplyRaw*, GError**)) unity_internal_deprecated_scope_impl_real_activate_finish;
	iface->search = (void (*) (UnityProtocolScopeService *, const gchar*, const gchar*, GHashTable*, GCancellable*, GAsyncReadyCallback, gpointer)) unity_internal_deprecated_scope_impl_real_search;
	iface->search_finish = (GHashTable* (*) (UnityProtocolScopeService *, GAsyncResult*, GError**)) unity_internal_deprecated_scope_impl_real_search_finish;
	iface->open_channel = (void (*) (UnityProtocolScopeService *, guint, GHashTable*, GCancellable*, const char*, GAsyncReadyCallback, gpointer)) unity_internal_deprecated_scope_impl_real_open_channel;
	iface->open_channel_finish = (gchar* (*) (UnityProtocolScopeService *, GAsyncResult*, GHashTable* *, GError**)) unity_internal_deprecated_scope_impl_real_open_channel_finish;
	iface->close_channel = (void (*) (UnityProtocolScopeService *, const gchar*, GHashTable*, GCancellable*, GAsyncReadyCallback, gpointer)) unity_internal_deprecated_scope_impl_real_close_channel;
	iface->close_channel_finish = (void (*) (UnityProtocolScopeService *, GAsyncResult*, GError**)) unity_internal_deprecated_scope_impl_real_close_channel_finish;
	iface->set_view_type = (void (*) (UnityProtocolScopeService *, guint, GAsyncReadyCallback, gpointer)) unity_internal_deprecated_scope_impl_real_set_view_type;
	iface->set_view_type_finish = (void (*) (UnityProtocolScopeService *, GAsyncResult*, GError**)) unity_internal_deprecated_scope_impl_real_set_view_type_finish;
	iface->push_results = (void (*) (UnityProtocolScopeService *, const gchar*, const gchar*, const gchar*, GVariant*, gchar**, int, GCancellable*, GAsyncReadyCallback, gpointer)) unity_internal_deprecated_scope_impl_real_push_results;
	iface->push_results_finish = (GHashTable* (*) (UnityProtocolScopeService *, GAsyncResult*, GError**)) unity_internal_deprecated_scope_impl_real_push_results_finish;
	iface->get_protocol_version = unity_internal_deprecated_scope_impl_real_get_protocol_version;
	iface->get_visible = unity_internal_deprecated_scope_impl_real_get_visible;
	iface->get_is_master = unity_internal_deprecated_scope_impl_real_get_is_master;
	iface->get_search_hint = unity_internal_deprecated_scope_impl_real_get_search_hint;
	iface->get_metadata = unity_internal_deprecated_scope_impl_real_get_metadata;
	iface->get_optional_metadata = unity_internal_deprecated_scope_impl_real_get_optional_metadata;
	iface->get_categories = unity_internal_deprecated_scope_impl_real_get_categories;
	iface->get_filters = unity_internal_deprecated_scope_impl_real_get_filters;
	iface->get_hints = unity_internal_deprecated_scope_impl_real_get_hints;
}


static void
unity_internal_deprecated_scope_impl_unity_internal_scope_dbus_impl_interface_init (UnityInternalScopeDBusImplIface * iface)
{
	unity_internal_deprecated_scope_impl_unity_internal_scope_dbus_impl_parent_iface = g_type_interface_peek_parent (iface);
	iface->export = (void (*) (UnityInternalScopeDBusImpl *, GError**)) unity_internal_deprecated_scope_impl_real_export;
	iface->unexport = (void (*) (UnityInternalScopeDBusImpl *)) unity_internal_deprecated_scope_impl_real_unexport;
	iface->queue_property_notification = (void (*) (UnityInternalScopeDBusImpl *, const gchar*, GVariant*)) unity_internal_deprecated_scope_impl_real_queue_property_notification;
	iface->get_categories_model = unity_internal_deprecated_scope_impl_real_get_categories_model;
	iface->set_categories_model = unity_internal_deprecated_scope_impl_real_set_categories_model;
	iface->get_filters_model = unity_internal_deprecated_scope_impl_real_get_filters_model;
	iface->set_filters_model = unity_internal_deprecated_scope_impl_real_set_filters_model;
}


static void
unity_internal_deprecated_scope_impl_unity_internal_deprecated_scope_dbus_impl_interface_init (UnityInternalDeprecatedScopeDBusImplIface * iface)
{
	unity_internal_deprecated_scope_impl_unity_internal_deprecated_scope_dbus_impl_parent_iface = g_type_interface_peek_parent (iface);
	iface->set_categories = (void (*) (UnityInternalDeprecatedScopeDBusImpl *, GList*)) unity_internal_deprecated_scope_impl_real_set_categories;
	iface->set_filters = (void (*) (UnityInternalDeprecatedScopeDBusImpl *, GList*)) unity_internal_deprecated_scope_impl_real_set_filters;
}


static void
unity_internal_deprecated_scope_impl_instance_init (UnityInternalDeprecatedScopeImpl * self)
{
	self->priv = UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_GET_PRIVATE (self);
}


static void
unity_internal_deprecated_scope_impl_finalize (GObject * obj)
{
	UnityInternalDeprecatedScopeImpl * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImpl);
	_g_hash_table_unref0 (self->priv->_channels);
	_g_object_unref0 (self->priv->_dbus_connection);
	_g_hash_table_unref0 (self->priv->_action_map);
	_g_rand_free0 (self->priv->_rand);
	_g_object_unref0 (self->priv->_categories_model);
	_g_object_unref0 (self->priv->_filters_model);
	_g_variant_builder_unref0 (self->priv->changed_props);
	G_OBJECT_CLASS (unity_internal_deprecated_scope_impl_parent_class)->finalize (obj);
}


GType
unity_internal_deprecated_scope_impl_get_type (void)
{
	static volatile gsize unity_internal_deprecated_scope_impl_type_id__volatile = 0;
	if (g_once_init_enter (&unity_internal_deprecated_scope_impl_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityInternalDeprecatedScopeImplClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_internal_deprecated_scope_impl_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityInternalDeprecatedScopeImpl), 0, (GInstanceInitFunc) unity_internal_deprecated_scope_impl_instance_init, NULL };
		static const GInterfaceInfo unity_protocol_scope_service_info = { (GInterfaceInitFunc) unity_internal_deprecated_scope_impl_unity_protocol_scope_service_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo unity_internal_scope_dbus_impl_info = { (GInterfaceInitFunc) unity_internal_deprecated_scope_impl_unity_internal_scope_dbus_impl_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo unity_internal_deprecated_scope_dbus_impl_info = { (GInterfaceInitFunc) unity_internal_deprecated_scope_impl_unity_internal_deprecated_scope_dbus_impl_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		GType unity_internal_deprecated_scope_impl_type_id;
		unity_internal_deprecated_scope_impl_type_id = g_type_register_static (G_TYPE_OBJECT, "UnityInternalDeprecatedScopeImpl", &g_define_type_info, 0);
		g_type_add_interface_static (unity_internal_deprecated_scope_impl_type_id, UNITY_PROTOCOL_TYPE_SCOPE_SERVICE, &unity_protocol_scope_service_info);
		g_type_add_interface_static (unity_internal_deprecated_scope_impl_type_id, UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL, &unity_internal_scope_dbus_impl_info);
		g_type_add_interface_static (unity_internal_deprecated_scope_impl_type_id, UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL, &unity_internal_deprecated_scope_dbus_impl_info);
		g_once_init_leave (&unity_internal_deprecated_scope_impl_type_id__volatile, unity_internal_deprecated_scope_impl_type_id);
	}
	return unity_internal_deprecated_scope_impl_type_id__volatile;
}


static void
_vala_unity_internal_deprecated_scope_impl_get_property (GObject * object,
                                                         guint property_id,
                                                         GValue * value,
                                                         GParamSpec * pspec)
{
	UnityInternalDeprecatedScopeImpl * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImpl);
	switch (property_id) {
		case UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_OWNER_PROPERTY:
		g_value_set_object (value, unity_internal_deprecated_scope_impl_get_owner (self));
		break;
		case UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CATEGORIES_MODEL_PROPERTY:
		g_value_set_object (value, unity_internal_scope_dbus_impl_get_categories_model ((UnityInternalScopeDBusImpl*) self));
		break;
		case UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_FILTERS_MODEL_PROPERTY:
		g_value_set_object (value, unity_internal_scope_dbus_impl_get_filters_model ((UnityInternalScopeDBusImpl*) self));
		break;
		case UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_VIEW_TYPE_PROPERTY:
		g_value_set_enum (value, unity_internal_deprecated_scope_impl_get_view_type (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_internal_deprecated_scope_impl_set_property (GObject * object,
                                                         guint property_id,
                                                         const GValue * value,
                                                         GParamSpec * pspec)
{
	UnityInternalDeprecatedScopeImpl * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImpl);
	switch (property_id) {
		case UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_OWNER_PROPERTY:
		unity_internal_deprecated_scope_impl_set_owner (self, g_value_get_object (value));
		break;
		case UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CATEGORIES_MODEL_PROPERTY:
		unity_internal_scope_dbus_impl_set_categories_model ((UnityInternalScopeDBusImpl*) self, g_value_get_object (value));
		break;
		case UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_FILTERS_MODEL_PROPERTY:
		unity_internal_scope_dbus_impl_set_filters_model ((UnityInternalScopeDBusImpl*) self, g_value_get_object (value));
		break;
		case UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_VIEW_TYPE_PROPERTY:
		unity_internal_deprecated_scope_impl_set_view_type (self, g_value_get_enum (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}


static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}



