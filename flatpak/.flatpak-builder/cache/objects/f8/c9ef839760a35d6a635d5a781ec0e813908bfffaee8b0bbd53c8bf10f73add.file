/* DynamicSpinner.c generated by valac 0.40.11, the Vala compiler
 * generated from DynamicSpinner.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2014-2015 Maya Developers (http://launchpad.net/maya)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by: Corentin NoÃ«l <corentin@elementaryos.org>
 */


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include "elementary-calendar.h"
#include <libedataserver/libedataserver.h>
#include <gio/gio.h>


#define MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER (maya_view_widgets_dynamic_spinner_get_type ())
#define MAYA_VIEW_WIDGETS_DYNAMIC_SPINNER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER, MayaViewWidgetsDynamicSpinner))
#define MAYA_VIEW_WIDGETS_DYNAMIC_SPINNER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER, MayaViewWidgetsDynamicSpinnerClass))
#define MAYA_VIEW_WIDGETS_IS_DYNAMIC_SPINNER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER))
#define MAYA_VIEW_WIDGETS_IS_DYNAMIC_SPINNER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER))
#define MAYA_VIEW_WIDGETS_DYNAMIC_SPINNER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER, MayaViewWidgetsDynamicSpinnerClass))

typedef struct _MayaViewWidgetsDynamicSpinner MayaViewWidgetsDynamicSpinner;
typedef struct _MayaViewWidgetsDynamicSpinnerClass MayaViewWidgetsDynamicSpinnerClass;
typedef struct _MayaViewWidgetsDynamicSpinnerPrivate MayaViewWidgetsDynamicSpinnerPrivate;
enum  {
	MAYA_VIEW_WIDGETS_DYNAMIC_SPINNER_0_PROPERTY,
	MAYA_VIEW_WIDGETS_DYNAMIC_SPINNER_NUM_PROPERTIES
};
static GParamSpec* maya_view_widgets_dynamic_spinner_properties[MAYA_VIEW_WIDGETS_DYNAMIC_SPINNER_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
typedef struct _Block28Data Block28Data;
typedef struct _MayaViewWidgetsDynamicSpinnerAddSourceData MayaViewWidgetsDynamicSpinnerAddSourceData;
typedef struct _Block29Data Block29Data;
#define _g_free0(var) (var = (g_free (var), NULL))
typedef struct _MayaViewWidgetsDynamicSpinnerRemoveSourceData MayaViewWidgetsDynamicSpinnerRemoveSourceData;

struct _MayaViewWidgetsDynamicSpinner {
	GtkRevealer parent_instance;
	MayaViewWidgetsDynamicSpinnerPrivate * priv;
};

struct _MayaViewWidgetsDynamicSpinnerClass {
	GtkRevealerClass parent_class;
};

struct _MayaViewWidgetsDynamicSpinnerPrivate {
	GtkPopover* info_popover;
	GtkSpinner* spinner;
	GtkListBox* list_box;
	GHashTable* children_matcher;
	GRecMutex __lock_children_matcher;
};

struct _Block28Data {
	int _ref_count_;
	MayaViewWidgetsDynamicSpinner* self;
	ESource* source;
	GCancellable* cancellable;
	gpointer _async_data_;
};

struct _MayaViewWidgetsDynamicSpinnerAddSourceData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	MayaViewWidgetsDynamicSpinner* self;
	ESource* source;
	GCancellable* cancellable;
	Block28Data* _data28_;
};

struct _Block29Data {
	int _ref_count_;
	MayaViewWidgetsDynamicSpinner* self;
	ESource* source;
	gpointer _async_data_;
};

struct _MayaViewWidgetsDynamicSpinnerRemoveSourceData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	MayaViewWidgetsDynamicSpinner* self;
	ESource* source;
	Block29Data* _data29_;
};


static gpointer maya_view_widgets_dynamic_spinner_parent_class = NULL;

GType maya_view_widgets_dynamic_spinner_get_type (void) G_GNUC_CONST;
#define MAYA_VIEW_WIDGETS_DYNAMIC_SPINNER_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER, MayaViewWidgetsDynamicSpinnerPrivate))
MayaViewWidgetsDynamicSpinner* maya_view_widgets_dynamic_spinner_new (void);
MayaViewWidgetsDynamicSpinner* maya_view_widgets_dynamic_spinner_construct (GType object_type);
static void _g_free0_ (gpointer var);
static void _g_object_unref0_ (gpointer var);
static void __lambda70_ (MayaViewWidgetsDynamicSpinner* self);
static void ___lambda70__gtk_button_clicked (GtkButton* _sender,
                                      gpointer self);
static void __lambda71_ (MayaViewWidgetsDynamicSpinner* self,
                  ESource* source,
                  GCancellable* cancellable);
void maya_view_widgets_dynamic_spinner_add_source (MayaViewWidgetsDynamicSpinner* self,
                                                   ESource* source,
                                                   GCancellable* cancellable,
                                                   GAsyncReadyCallback _callback_,
                                                   gpointer _user_data_);
void maya_view_widgets_dynamic_spinner_add_source_finish (MayaViewWidgetsDynamicSpinner* self,
                                                          GAsyncResult* _res_);
static void ___lambda71__maya_model_calendar_model_connecting (MayaModelCalendarModel* _sender,
                                                        ESource* source,
                                                        GCancellable* cancellable,
                                                        gpointer self);
static void __lambda74_ (MayaViewWidgetsDynamicSpinner* self,
                  ESource* source);
void maya_view_widgets_dynamic_spinner_remove_source (MayaViewWidgetsDynamicSpinner* self,
                                                      ESource* source,
                                                      GAsyncReadyCallback _callback_,
                                                      gpointer _user_data_);
void maya_view_widgets_dynamic_spinner_remove_source_finish (MayaViewWidgetsDynamicSpinner* self,
                                                             GAsyncResult* _res_);
static void ___lambda74__maya_model_calendar_model_connected (MayaModelCalendarModel* _sender,
                                                       ESource* source,
                                                       gpointer self);
static void maya_view_widgets_dynamic_spinner_add_source_data_free (gpointer _data);
static void maya_view_widgets_dynamic_spinner_add_source_async_ready_wrapper (GObject *source_object,
                                                                       GAsyncResult *res,
                                                                       void *user_data);
static gboolean maya_view_widgets_dynamic_spinner_add_source_co (MayaViewWidgetsDynamicSpinnerAddSourceData* _data_);
static Block28Data* block28_data_ref (Block28Data* _data28_);
static void block28_data_unref (void * _userdata_);
static gboolean __lambda72_ (Block28Data* _data28_);
static void __lambda73_ (Block28Data* _data28_);
static void ___lambda73__gtk_button_clicked (GtkButton* _sender,
                                      gpointer self);
static gboolean ___lambda72__gsource_func (gpointer self);
static void maya_view_widgets_dynamic_spinner_remove_source_data_free (gpointer _data);
static void maya_view_widgets_dynamic_spinner_remove_source_async_ready_wrapper (GObject *source_object,
                                                                          GAsyncResult *res,
                                                                          void *user_data);
static gboolean maya_view_widgets_dynamic_spinner_remove_source_co (MayaViewWidgetsDynamicSpinnerRemoveSourceData* _data_);
static Block29Data* block29_data_ref (Block29Data* _data29_);
static void block29_data_unref (void * _userdata_);
static gboolean __lambda75_ (Block29Data* _data29_);
static gboolean ___lambda75__gsource_func (gpointer self);
static void maya_view_widgets_dynamic_spinner_finalize (GObject * obj);


static void
_g_free0_ (gpointer var)
{
#line 29 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	var = (g_free (var), NULL);
#line 182 "DynamicSpinner.c"
}


static void
_g_object_unref0_ (gpointer var)
{
#line 29 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	(var == NULL) ? NULL : (var = (g_object_unref (var), NULL));
#line 191 "DynamicSpinner.c"
}


static void
__lambda70_ (MayaViewWidgetsDynamicSpinner* self)
{
	GtkPopover* _tmp0_;
#line 35 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp0_ = self->priv->info_popover;
#line 35 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp0_);
#line 203 "DynamicSpinner.c"
}


static void
___lambda70__gtk_button_clicked (GtkButton* _sender,
                                 gpointer self)
{
#line 34 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	__lambda70_ ((MayaViewWidgetsDynamicSpinner*) self);
#line 213 "DynamicSpinner.c"
}


static void
__lambda71_ (MayaViewWidgetsDynamicSpinner* self,
             ESource* source,
             GCancellable* cancellable)
{
#line 46 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_return_if_fail (source != NULL);
#line 46 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_return_if_fail (cancellable != NULL);
#line 46 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	maya_view_widgets_dynamic_spinner_add_source (self, source, cancellable, NULL, NULL);
#line 228 "DynamicSpinner.c"
}


static void
___lambda71__maya_model_calendar_model_connecting (MayaModelCalendarModel* _sender,
                                                   ESource* source,
                                                   GCancellable* cancellable,
                                                   gpointer self)
{
#line 46 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	__lambda71_ ((MayaViewWidgetsDynamicSpinner*) self, source, cancellable);
#line 240 "DynamicSpinner.c"
}


static void
__lambda74_ (MayaViewWidgetsDynamicSpinner* self,
             ESource* source)
{
#line 47 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_return_if_fail (source != NULL);
#line 47 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	maya_view_widgets_dynamic_spinner_remove_source (self, source, NULL, NULL);
#line 252 "DynamicSpinner.c"
}


static void
___lambda74__maya_model_calendar_model_connected (MayaModelCalendarModel* _sender,
                                                  ESource* source,
                                                  gpointer self)
{
#line 47 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	__lambda74_ ((MayaViewWidgetsDynamicSpinner*) self, source);
#line 263 "DynamicSpinner.c"
}


MayaViewWidgetsDynamicSpinner*
maya_view_widgets_dynamic_spinner_construct (GType object_type)
{
	MayaViewWidgetsDynamicSpinner * self = NULL;
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	GtkSpinner* _tmp3_;
	GtkButton* button = NULL;
	GtkButton* _tmp4_;
	GtkSpinner* _tmp5_;
	GtkListBox* _tmp6_;
	GtkListBox* _tmp7_;
	GtkPopover* _tmp8_;
	GtkPopover* _tmp9_;
	GtkPopover* _tmp10_;
	GtkListBox* _tmp11_;
	MayaModelCalendarModel* calmodel = NULL;
	MayaModelCalendarModel* _tmp12_;
	GtkSpinner* _tmp13_;
#line 26 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self = (MayaViewWidgetsDynamicSpinner*) g_object_new (object_type, NULL);
#line 27 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_revealer_set_transition_type ((GtkRevealer*) self, GTK_REVEALER_TRANSITION_TYPE_CROSSFADE);
#line 29 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp0_ = g_str_hash;
#line 29 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp1_ = g_str_equal;
#line 29 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp2_ = g_hash_table_new_full (_tmp0_, _tmp1_, _g_free0_, _g_object_unref0_);
#line 29 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_hash_table_unref0 (self->priv->children_matcher);
#line 29 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self->priv->children_matcher = _tmp2_;
#line 31 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp3_ = (GtkSpinner*) gtk_spinner_new ();
#line 31 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_ref_sink (_tmp3_);
#line 31 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (self->priv->spinner);
#line 31 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self->priv->spinner = _tmp3_;
#line 32 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp4_ = (GtkButton*) gtk_button_new ();
#line 32 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_ref_sink (_tmp4_);
#line 32 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	button = _tmp4_;
#line 33 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp5_ = self->priv->spinner;
#line 33 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_button_set_image (button, (GtkWidget*) _tmp5_);
#line 34 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_signal_connect_object (button, "clicked", (GCallback) ___lambda70__gtk_button_clicked, self, 0);
#line 38 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp6_ = (GtkListBox*) gtk_list_box_new ();
#line 38 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_ref_sink (_tmp6_);
#line 38 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (self->priv->list_box);
#line 38 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self->priv->list_box = _tmp6_;
#line 39 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp7_ = self->priv->list_box;
#line 39 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_list_box_set_selection_mode (_tmp7_, GTK_SELECTION_NONE);
#line 41 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp8_ = (GtkPopover*) gtk_popover_new ((GtkWidget*) button);
#line 41 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_ref_sink (_tmp8_);
#line 41 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (self->priv->info_popover);
#line 41 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self->priv->info_popover = _tmp8_;
#line 42 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp9_ = self->priv->info_popover;
#line 42 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_popover_set_position (_tmp9_, GTK_POS_BOTTOM);
#line 43 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp10_ = self->priv->info_popover;
#line 43 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp11_ = self->priv->list_box;
#line 43 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_container_add ((GtkContainer*) _tmp10_, (GtkWidget*) _tmp11_);
#line 45 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp12_ = maya_model_calendar_model_get_default ();
#line 45 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	calmodel = _tmp12_;
#line 46 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_signal_connect_object (calmodel, "connecting", (GCallback) ___lambda71__maya_model_calendar_model_connecting, self, 0);
#line 47 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_signal_connect_object (calmodel, "connected", (GCallback) ___lambda74__maya_model_calendar_model_connected, self, 0);
#line 49 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) button);
#line 51 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 52 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp13_ = self->priv->spinner;
#line 52 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_spinner_start (_tmp13_);
#line 26 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (calmodel);
#line 26 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (button);
#line 26 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return self;
#line 373 "DynamicSpinner.c"
}


MayaViewWidgetsDynamicSpinner*
maya_view_widgets_dynamic_spinner_new (void)
{
#line 26 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return maya_view_widgets_dynamic_spinner_construct (MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER);
#line 382 "DynamicSpinner.c"
}


static void
maya_view_widgets_dynamic_spinner_add_source_data_free (gpointer _data)
{
	MayaViewWidgetsDynamicSpinnerAddSourceData* _data_;
	_data_ = _data;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (_data_->self);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_slice_free (MayaViewWidgetsDynamicSpinnerAddSourceData, _data_);
#line 395 "DynamicSpinner.c"
}


static void
maya_view_widgets_dynamic_spinner_add_source_async_ready_wrapper (GObject *source_object,
                                                                  GAsyncResult *res,
                                                                  void *user_data)
{
	MayaViewWidgetsDynamicSpinnerAddSourceData* _task_data_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (_task_data_->_callback_ != NULL) {
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 411 "DynamicSpinner.c"
	}
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_task_data_->_task_complete_ = TRUE;
#line 415 "DynamicSpinner.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return self ? g_object_ref (self) : NULL;
#line 424 "DynamicSpinner.c"
}


void
maya_view_widgets_dynamic_spinner_add_source (MayaViewWidgetsDynamicSpinner* self,
                                              ESource* source,
                                              GCancellable* cancellable,
                                              GAsyncReadyCallback _callback_,
                                              gpointer _user_data_)
{
	MayaViewWidgetsDynamicSpinnerAddSourceData* _data_;
	MayaViewWidgetsDynamicSpinner* _tmp0_;
	ESource* _tmp1_;
	GCancellable* _tmp2_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_ = g_slice_new0 (MayaViewWidgetsDynamicSpinnerAddSourceData);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_callback_ = _callback_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), cancellable, maya_view_widgets_dynamic_spinner_add_source_async_ready_wrapper, _user_data_);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (_callback_ == NULL) {
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_data_->_task_complete_ = TRUE;
#line 449 "DynamicSpinner.c"
	}
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_task_set_task_data (_data_->_async_result, _data_, maya_view_widgets_dynamic_spinner_add_source_data_free);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->self = _tmp0_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp1_ = _g_object_ref0 (source);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (_data_->source);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->source = _tmp1_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp2_ = _g_object_ref0 (cancellable);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (_data_->cancellable);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->cancellable = _tmp2_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	maya_view_widgets_dynamic_spinner_add_source_co (_data_);
#line 471 "DynamicSpinner.c"
}


void
maya_view_widgets_dynamic_spinner_add_source_finish (MayaViewWidgetsDynamicSpinner* self,
                                                     GAsyncResult* _res_)
{
	MayaViewWidgetsDynamicSpinnerAddSourceData* _data_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (NULL == _data_) {
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		return;
#line 486 "DynamicSpinner.c"
	}
}


static Block28Data*
block28_data_ref (Block28Data* _data28_)
{
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_atomic_int_inc (&_data28_->_ref_count_);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return _data28_;
#line 498 "DynamicSpinner.c"
}


static void
block28_data_unref (void * _userdata_)
{
	Block28Data* _data28_;
	_data28_ = (Block28Data*) _userdata_;
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (g_atomic_int_dec_and_test (&_data28_->_ref_count_)) {
#line 509 "DynamicSpinner.c"
		MayaViewWidgetsDynamicSpinner* self;
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		self = _data28_->self;
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_g_object_unref0 (_data28_->source);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_g_object_unref0 (_data28_->cancellable);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_g_object_unref0 (self);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		g_slice_free (Block28Data, _data28_);
#line 521 "DynamicSpinner.c"
	}
}


static void
__lambda73_ (Block28Data* _data28_)
{
	MayaViewWidgetsDynamicSpinner* self;
#line 61 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self = _data28_->self;
#line 61 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_cancellable_cancel (_data28_->cancellable);
#line 534 "DynamicSpinner.c"
}


static void
___lambda73__gtk_button_clicked (GtkButton* _sender,
                                 gpointer self)
{
#line 61 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	__lambda73_ (self);
#line 544 "DynamicSpinner.c"
}


static gboolean
__lambda72_ (Block28Data* _data28_)
{
	MayaViewWidgetsDynamicSpinner* self;
	gboolean result = FALSE;
	GtkLabel* label = NULL;
	const gchar* _tmp0_;
	GtkLabel* _tmp1_;
	GtkButton* stop_button = NULL;
	GtkButton* _tmp2_;
	GtkGrid* grid = NULL;
	GtkGrid* _tmp3_;
	GtkListBox* _tmp10_;
	GError * _inner_error_ = NULL;
#line 56 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self = _data28_->self;
#line 57 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_revealer_set_reveal_child ((GtkRevealer*) self, TRUE);
#line 59 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp0_ = e_source_get_display_name (_data28_->source);
#line 59 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp1_ = (GtkLabel*) gtk_label_new (_tmp0_);
#line 59 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_ref_sink (_tmp1_);
#line 59 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	label = _tmp1_;
#line 60 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp2_ = (GtkButton*) gtk_button_new_from_icon_name ("process-stop", (GtkIconSize) GTK_ICON_SIZE_BUTTON);
#line 60 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_ref_sink (_tmp2_);
#line 60 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	stop_button = _tmp2_;
#line 61 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_signal_connect_data (stop_button, "clicked", (GCallback) ___lambda73__gtk_button_clicked, block28_data_ref (_data28_), (GClosureNotify) block28_data_unref, 0);
#line 63 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp3_ = (GtkGrid*) gtk_grid_new ();
#line 63 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_ref_sink (_tmp3_);
#line 63 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	grid = _tmp3_;
#line 64 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_set ((GtkWidget*) grid, "margin", 6, NULL);
#line 65 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_grid_set_column_spacing (grid, 12);
#line 66 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) grid, GTK_ORIENTATION_HORIZONTAL);
#line 67 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_container_add ((GtkContainer*) grid, (GtkWidget*) label);
#line 68 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_container_add ((GtkContainer*) grid, (GtkWidget*) stop_button);
#line 598 "DynamicSpinner.c"
	{
		GHashTable* _tmp4_;
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_tmp4_ = self->priv->children_matcher;
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		g_rec_mutex_lock (&self->priv->__lock_children_matcher);
#line 605 "DynamicSpinner.c"
		{
			GHashTable* _tmp5_;
			gchar* _tmp6_;
			GtkWidget* _tmp7_;
#line 71 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp5_ = self->priv->children_matcher;
#line 71 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp6_ = e_source_dup_uid (_data28_->source);
#line 71 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp7_ = _g_object_ref0 ((GtkWidget*) grid);
#line 71 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_hash_table_insert (_tmp5_, _tmp6_, _tmp7_);
#line 618 "DynamicSpinner.c"
		}
		__finally23:
		{
			GHashTable* _tmp8_;
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp8_ = self->priv->children_matcher;
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_rec_mutex_unlock (&self->priv->__lock_children_matcher);
#line 627 "DynamicSpinner.c"
		}
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 631 "DynamicSpinner.c"
			gboolean _tmp9_ = FALSE;
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_g_object_unref0 (grid);
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_g_object_unref0 (stop_button);
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_g_object_unref0 (label);
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_clear_error (&_inner_error_);
#line 70 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			return _tmp9_;
#line 645 "DynamicSpinner.c"
		}
	}
#line 73 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp10_ = self->priv->list_box;
#line 73 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	gtk_container_add ((GtkContainer*) _tmp10_, (GtkWidget*) grid);
#line 74 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	result = FALSE;
#line 74 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (grid);
#line 74 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (stop_button);
#line 74 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (label);
#line 74 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return result;
#line 662 "DynamicSpinner.c"
}


static gboolean
___lambda72__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda72_ (self);
#line 56 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return result;
#line 673 "DynamicSpinner.c"
}


static gboolean
maya_view_widgets_dynamic_spinner_add_source_co (MayaViewWidgetsDynamicSpinnerAddSourceData* _data_)
{
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	switch (_data_->_state_) {
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		case 0:
#line 684 "DynamicSpinner.c"
		goto _state_0;
		default:
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		g_assert_not_reached ();
#line 689 "DynamicSpinner.c"
	}
	_state_0:
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data28_ = g_slice_new0 (Block28Data);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data28_->_ref_count_ = 1;
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data28_->self = g_object_ref (_data_->self);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (_data_->_data28_->source);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data28_->source = _data_->source;
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (_data_->_data28_->cancellable);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data28_->cancellable = _data_->cancellable;
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data28_->_async_data_ = _data_;
#line 56 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_idle_add_full (G_PRIORITY_DEFAULT_IDLE, ___lambda72__gsource_func, block28_data_ref (_data_->_data28_), block28_data_unref);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	block28_data_unref (_data_->_data28_);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data28_ = NULL;
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (_data_->_state_ != 0) {
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 722 "DynamicSpinner.c"
		}
	}
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_unref (_data_->_async_result);
#line 55 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return FALSE;
#line 729 "DynamicSpinner.c"
}


static void
maya_view_widgets_dynamic_spinner_remove_source_data_free (gpointer _data)
{
	MayaViewWidgetsDynamicSpinnerRemoveSourceData* _data_;
	_data_ = _data;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (_data_->self);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_slice_free (MayaViewWidgetsDynamicSpinnerRemoveSourceData, _data_);
#line 742 "DynamicSpinner.c"
}


static void
maya_view_widgets_dynamic_spinner_remove_source_async_ready_wrapper (GObject *source_object,
                                                                     GAsyncResult *res,
                                                                     void *user_data)
{
	MayaViewWidgetsDynamicSpinnerRemoveSourceData* _task_data_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (_task_data_->_callback_ != NULL) {
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 758 "DynamicSpinner.c"
	}
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_task_data_->_task_complete_ = TRUE;
#line 762 "DynamicSpinner.c"
}


void
maya_view_widgets_dynamic_spinner_remove_source (MayaViewWidgetsDynamicSpinner* self,
                                                 ESource* source,
                                                 GAsyncReadyCallback _callback_,
                                                 gpointer _user_data_)
{
	MayaViewWidgetsDynamicSpinnerRemoveSourceData* _data_;
	MayaViewWidgetsDynamicSpinner* _tmp0_;
	ESource* _tmp1_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_ = g_slice_new0 (MayaViewWidgetsDynamicSpinnerRemoveSourceData);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_callback_ = _callback_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, maya_view_widgets_dynamic_spinner_remove_source_async_ready_wrapper, _user_data_);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (_callback_ == NULL) {
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_data_->_task_complete_ = TRUE;
#line 785 "DynamicSpinner.c"
	}
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_task_set_task_data (_data_->_async_result, _data_, maya_view_widgets_dynamic_spinner_remove_source_data_free);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->self = _tmp0_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_tmp1_ = _g_object_ref0 (source);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (_data_->source);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->source = _tmp1_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	maya_view_widgets_dynamic_spinner_remove_source_co (_data_);
#line 801 "DynamicSpinner.c"
}


void
maya_view_widgets_dynamic_spinner_remove_source_finish (MayaViewWidgetsDynamicSpinner* self,
                                                        GAsyncResult* _res_)
{
	MayaViewWidgetsDynamicSpinnerRemoveSourceData* _data_;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 812 "DynamicSpinner.c"
}


static Block29Data*
block29_data_ref (Block29Data* _data29_)
{
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_atomic_int_inc (&_data29_->_ref_count_);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return _data29_;
#line 823 "DynamicSpinner.c"
}


static void
block29_data_unref (void * _userdata_)
{
	Block29Data* _data29_;
	_data29_ = (Block29Data*) _userdata_;
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (g_atomic_int_dec_and_test (&_data29_->_ref_count_)) {
#line 834 "DynamicSpinner.c"
		MayaViewWidgetsDynamicSpinner* self;
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		self = _data29_->self;
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_g_object_unref0 (_data29_->source);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_g_object_unref0 (self);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		g_slice_free (Block29Data, _data29_);
#line 844 "DynamicSpinner.c"
	}
}


static gboolean
__lambda75_ (Block29Data* _data29_)
{
	MayaViewWidgetsDynamicSpinner* self;
	gboolean result = FALSE;
	GError * _inner_error_ = NULL;
#line 79 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self = _data29_->self;
#line 857 "DynamicSpinner.c"
	{
		GHashTable* _tmp0_;
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		_tmp0_ = self->priv->children_matcher;
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		g_rec_mutex_lock (&self->priv->__lock_children_matcher);
#line 864 "DynamicSpinner.c"
		{
			GtkWidget* widget = NULL;
			GHashTable* _tmp1_;
			gchar* _tmp2_;
			gchar* _tmp3_;
			gconstpointer _tmp4_;
			GtkWidget* _tmp5_;
			GtkWidget* _tmp6_;
			GHashTable* _tmp7_;
			gchar* _tmp8_;
			gchar* _tmp9_;
			GtkWidget* _tmp10_;
			GHashTable* _tmp12_;
#line 81 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp1_ = self->priv->children_matcher;
#line 81 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp2_ = e_source_dup_uid (_data29_->source);
#line 81 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp3_ = _tmp2_;
#line 81 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp4_ = g_hash_table_lookup (_tmp1_, _tmp3_);
#line 81 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp5_ = _g_object_ref0 ((GtkWidget*) _tmp4_);
#line 81 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp6_ = _tmp5_;
#line 81 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_g_free0 (_tmp3_);
#line 81 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			widget = _tmp6_;
#line 82 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp7_ = self->priv->children_matcher;
#line 82 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp8_ = e_source_dup_uid (_data29_->source);
#line 82 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp9_ = _tmp8_;
#line 82 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_hash_table_remove (_tmp7_, _tmp9_);
#line 82 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_g_free0 (_tmp9_);
#line 83 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp10_ = widget;
#line 83 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			if (_tmp10_ != NULL) {
#line 908 "DynamicSpinner.c"
				GtkWidget* _tmp11_;
#line 84 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
				_tmp11_ = widget;
#line 84 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
				gtk_widget_destroy (_tmp11_);
#line 914 "DynamicSpinner.c"
			}
#line 85 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp12_ = self->priv->children_matcher;
#line 85 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			if (g_hash_table_size (_tmp12_) == ((guint) 0)) {
#line 86 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
				gtk_revealer_set_reveal_child ((GtkRevealer*) self, FALSE);
#line 922 "DynamicSpinner.c"
			}
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_g_object_unref0 (widget);
#line 926 "DynamicSpinner.c"
		}
		__finally24:
		{
			GHashTable* _tmp13_;
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			_tmp13_ = self->priv->children_matcher;
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_rec_mutex_unlock (&self->priv->__lock_children_matcher);
#line 935 "DynamicSpinner.c"
		}
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 939 "DynamicSpinner.c"
			gboolean _tmp14_ = FALSE;
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_clear_error (&_inner_error_);
#line 80 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			return _tmp14_;
#line 947 "DynamicSpinner.c"
		}
	}
#line 90 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	result = FALSE;
#line 90 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return result;
#line 954 "DynamicSpinner.c"
}


static gboolean
___lambda75__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda75_ (self);
#line 79 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return result;
#line 965 "DynamicSpinner.c"
}


static gboolean
maya_view_widgets_dynamic_spinner_remove_source_co (MayaViewWidgetsDynamicSpinnerRemoveSourceData* _data_)
{
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	switch (_data_->_state_) {
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		case 0:
#line 976 "DynamicSpinner.c"
		goto _state_0;
		default:
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		g_assert_not_reached ();
#line 981 "DynamicSpinner.c"
	}
	_state_0:
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data29_ = g_slice_new0 (Block29Data);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data29_->_ref_count_ = 1;
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data29_->self = g_object_ref (_data_->self);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (_data_->_data29_->source);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data29_->source = _data_->source;
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data29_->_async_data_ = _data_;
#line 79 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_idle_add_full (G_PRIORITY_DEFAULT_IDLE, ___lambda75__gsource_func, block29_data_ref (_data_->_data29_), block29_data_unref);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	block29_data_unref (_data_->_data29_);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_data_->_data29_ = NULL;
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	if (_data_->_state_ != 0) {
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1010 "DynamicSpinner.c"
		}
	}
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_object_unref (_data_->_async_result);
#line 78 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	return FALSE;
#line 1017 "DynamicSpinner.c"
}


static void
maya_view_widgets_dynamic_spinner_class_init (MayaViewWidgetsDynamicSpinnerClass * klass)
{
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	maya_view_widgets_dynamic_spinner_parent_class = g_type_class_peek_parent (klass);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_type_class_add_private (klass, sizeof (MayaViewWidgetsDynamicSpinnerPrivate));
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	G_OBJECT_CLASS (klass)->finalize = maya_view_widgets_dynamic_spinner_finalize;
#line 1030 "DynamicSpinner.c"
}


static void
maya_view_widgets_dynamic_spinner_instance_init (MayaViewWidgetsDynamicSpinner * self)
{
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self->priv = MAYA_VIEW_WIDGETS_DYNAMIC_SPINNER_GET_PRIVATE (self);
#line 25 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_rec_mutex_init (&self->priv->__lock_children_matcher);
#line 1041 "DynamicSpinner.c"
}


static void
maya_view_widgets_dynamic_spinner_finalize (GObject * obj)
{
	MayaViewWidgetsDynamicSpinner * self;
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_VIEW_WIDGETS_TYPE_DYNAMIC_SPINNER, MayaViewWidgetsDynamicSpinner);
#line 22 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (self->priv->info_popover);
#line 23 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (self->priv->spinner);
#line 24 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_object_unref0 (self->priv->list_box);
#line 25 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	g_rec_mutex_clear (&self->priv->__lock_children_matcher);
#line 25 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	_g_hash_table_unref0 (self->priv->children_matcher);
#line 21 "/run/build/io.elementary.calendar/src/Widgets/DynamicSpinner.vala"
	G_OBJECT_CLASS (maya_view_widgets_dynamic_spinner_parent_class)->finalize (obj);
#line 1063 "DynamicSpinner.c"
}


GType
maya_view_widgets_dynamic_spinner_get_type (void)
{
	static volatile gsize maya_view_widgets_dynamic_spinner_type_id__volatile = 0;
	if (g_once_init_enter (&maya_view_widgets_dynamic_spinner_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (MayaViewWidgetsDynamicSpinnerClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maya_view_widgets_dynamic_spinner_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MayaViewWidgetsDynamicSpinner), 0, (GInstanceInitFunc) maya_view_widgets_dynamic_spinner_instance_init, NULL };
		GType maya_view_widgets_dynamic_spinner_type_id;
		maya_view_widgets_dynamic_spinner_type_id = g_type_register_static (gtk_revealer_get_type (), "MayaViewWidgetsDynamicSpinner", &g_define_type_info, 0);
		g_once_init_leave (&maya_view_widgets_dynamic_spinner_type_id__volatile, maya_view_widgets_dynamic_spinner_type_id);
	}
	return maya_view_widgets_dynamic_spinner_type_id__volatile;
}



