/* protocol-previews.c generated by valac 0.40.11, the Vala compiler
 * generated from protocol-previews.vala, do not modify */

/*
 * Copyright (C) 2012 Canonical, Ltd.
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License
 * version 3.0 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License version 3.0 for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see
 * <http://www.gnu.org/licenses/>.
 *
 * Authored by Michal Hruby <michal.hruby@canonical.com>
 *
 */


#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <dee.h>
#include <gio/gio.h>
#include <float.h>
#include <math.h>


#define UNITY_PROTOCOL_TYPE_PREVIEW_RAW (unity_protocol_preview_raw_get_type ())

#define UNITY_PROTOCOL_TYPE_PREVIEW_ACTION_RAW (unity_protocol_preview_action_raw_get_type ())
typedef struct _UnityProtocolPreviewActionRaw UnityProtocolPreviewActionRaw;

#define UNITY_PROTOCOL_TYPE_INFO_HINT_RAW (unity_protocol_info_hint_raw_get_type ())
typedef struct _UnityProtocolInfoHintRaw UnityProtocolInfoHintRaw;
typedef struct _UnityProtocolPreviewRaw UnityProtocolPreviewRaw;
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))

#define UNITY_PROTOCOL_TYPE_LAYOUT_HINT (unity_protocol_layout_hint_get_type ())
#define _g_variant_unref0(var) ((var == NULL) ? NULL : (var = (g_variant_unref (var), NULL)))

#define UNITY_PROTOCOL_TYPE_PREVIEW (unity_protocol_preview_get_type ())
#define UNITY_PROTOCOL_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview))
#define UNITY_PROTOCOL_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreviewClass))
#define UNITY_PROTOCOL_IS_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PROTOCOL_TYPE_PREVIEW))
#define UNITY_PROTOCOL_IS_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PROTOCOL_TYPE_PREVIEW))
#define UNITY_PROTOCOL_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreviewClass))

typedef struct _UnityProtocolPreview UnityProtocolPreview;
typedef struct _UnityProtocolPreviewClass UnityProtocolPreviewClass;
typedef struct _UnityProtocolPreviewPrivate UnityProtocolPreviewPrivate;
enum  {
	UNITY_PROTOCOL_PREVIEW_0_PROPERTY,
	UNITY_PROTOCOL_PREVIEW_TITLE_PROPERTY,
	UNITY_PROTOCOL_PREVIEW_SUBTITLE_PROPERTY,
	UNITY_PROTOCOL_PREVIEW_DESCRIPTION_PROPERTY,
	UNITY_PROTOCOL_PREVIEW_IMAGE_SOURCE_URI_PROPERTY,
	UNITY_PROTOCOL_PREVIEW_IMAGE_PROPERTY,
	UNITY_PROTOCOL_PREVIEW_NUM_PROPERTIES
};
static GParamSpec* unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _unity_protocol_preview_action_raw_free0(var) ((var == NULL) ? NULL : (var = (unity_protocol_preview_action_raw_free (var), NULL)))
#define _unity_protocol_info_hint_raw_free0(var) ((var == NULL) ? NULL : (var = (unity_protocol_info_hint_raw_free (var), NULL)))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))

#define UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW (unity_protocol_generic_preview_get_type ())
#define UNITY_PROTOCOL_GENERIC_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW, UnityProtocolGenericPreview))
#define UNITY_PROTOCOL_GENERIC_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW, UnityProtocolGenericPreviewClass))
#define UNITY_PROTOCOL_IS_GENERIC_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW))
#define UNITY_PROTOCOL_IS_GENERIC_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW))
#define UNITY_PROTOCOL_GENERIC_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW, UnityProtocolGenericPreviewClass))

typedef struct _UnityProtocolGenericPreview UnityProtocolGenericPreview;
typedef struct _UnityProtocolGenericPreviewClass UnityProtocolGenericPreviewClass;
#define _g_type_class_unref0(var) ((var == NULL) ? NULL : (var = (g_type_class_unref (var), NULL)))

#define UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW (unity_protocol_application_preview_get_type ())
#define UNITY_PROTOCOL_APPLICATION_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, UnityProtocolApplicationPreview))
#define UNITY_PROTOCOL_APPLICATION_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, UnityProtocolApplicationPreviewClass))
#define UNITY_PROTOCOL_IS_APPLICATION_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW))
#define UNITY_PROTOCOL_IS_APPLICATION_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW))
#define UNITY_PROTOCOL_APPLICATION_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, UnityProtocolApplicationPreviewClass))

typedef struct _UnityProtocolApplicationPreview UnityProtocolApplicationPreview;
typedef struct _UnityProtocolApplicationPreviewClass UnityProtocolApplicationPreviewClass;

#define UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW (unity_protocol_music_preview_get_type ())
#define UNITY_PROTOCOL_MUSIC_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, UnityProtocolMusicPreview))
#define UNITY_PROTOCOL_MUSIC_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, UnityProtocolMusicPreviewClass))
#define UNITY_PROTOCOL_IS_MUSIC_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW))
#define UNITY_PROTOCOL_IS_MUSIC_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW))
#define UNITY_PROTOCOL_MUSIC_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, UnityProtocolMusicPreviewClass))

typedef struct _UnityProtocolMusicPreview UnityProtocolMusicPreview;
typedef struct _UnityProtocolMusicPreviewClass UnityProtocolMusicPreviewClass;

#define UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW (unity_protocol_payment_preview_get_type ())
#define UNITY_PROTOCOL_PAYMENT_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, UnityProtocolPaymentPreview))
#define UNITY_PROTOCOL_PAYMENT_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, UnityProtocolPaymentPreviewClass))
#define UNITY_PROTOCOL_IS_PAYMENT_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW))
#define UNITY_PROTOCOL_IS_PAYMENT_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW))
#define UNITY_PROTOCOL_PAYMENT_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, UnityProtocolPaymentPreviewClass))

typedef struct _UnityProtocolPaymentPreview UnityProtocolPaymentPreview;
typedef struct _UnityProtocolPaymentPreviewClass UnityProtocolPaymentPreviewClass;

#define UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW (unity_protocol_movie_preview_get_type ())
#define UNITY_PROTOCOL_MOVIE_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, UnityProtocolMoviePreview))
#define UNITY_PROTOCOL_MOVIE_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, UnityProtocolMoviePreviewClass))
#define UNITY_PROTOCOL_IS_MOVIE_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW))
#define UNITY_PROTOCOL_IS_MOVIE_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW))
#define UNITY_PROTOCOL_MOVIE_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, UnityProtocolMoviePreviewClass))

typedef struct _UnityProtocolMoviePreview UnityProtocolMoviePreview;
typedef struct _UnityProtocolMoviePreviewClass UnityProtocolMoviePreviewClass;

#define UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW (unity_protocol_social_preview_get_type ())
#define UNITY_PROTOCOL_SOCIAL_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, UnityProtocolSocialPreview))
#define UNITY_PROTOCOL_SOCIAL_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, UnityProtocolSocialPreviewClass))
#define UNITY_PROTOCOL_IS_SOCIAL_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW))
#define UNITY_PROTOCOL_IS_SOCIAL_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW))
#define UNITY_PROTOCOL_SOCIAL_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, UnityProtocolSocialPreviewClass))

typedef struct _UnityProtocolSocialPreview UnityProtocolSocialPreview;
typedef struct _UnityProtocolSocialPreviewClass UnityProtocolSocialPreviewClass;

#define UNITY_PROTOCOL_TYPE_SERIES_PREVIEW (unity_protocol_series_preview_get_type ())
#define UNITY_PROTOCOL_SERIES_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, UnityProtocolSeriesPreview))
#define UNITY_PROTOCOL_SERIES_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, UnityProtocolSeriesPreviewClass))
#define UNITY_PROTOCOL_IS_SERIES_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PROTOCOL_TYPE_SERIES_PREVIEW))
#define UNITY_PROTOCOL_IS_SERIES_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PROTOCOL_TYPE_SERIES_PREVIEW))
#define UNITY_PROTOCOL_SERIES_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, UnityProtocolSeriesPreviewClass))

typedef struct _UnityProtocolSeriesPreview UnityProtocolSeriesPreview;
typedef struct _UnityProtocolSeriesPreviewClass UnityProtocolSeriesPreviewClass;
#define _unity_protocol_preview_raw_free0(var) ((var == NULL) ? NULL : (var = (unity_protocol_preview_raw_free (var), NULL)))
typedef struct _UnityProtocolGenericPreviewPrivate UnityProtocolGenericPreviewPrivate;
enum  {
	UNITY_PROTOCOL_GENERIC_PREVIEW_0_PROPERTY,
	UNITY_PROTOCOL_GENERIC_PREVIEW_NUM_PROPERTIES
};
static GParamSpec* unity_protocol_generic_preview_properties[UNITY_PROTOCOL_GENERIC_PREVIEW_NUM_PROPERTIES];
#define _g_variant_type_free0(var) ((var == NULL) ? NULL : (var = (g_variant_type_free (var), NULL)))
typedef struct _UnityProtocolApplicationPreviewPrivate UnityProtocolApplicationPreviewPrivate;
enum  {
	UNITY_PROTOCOL_APPLICATION_PREVIEW_0_PROPERTY,
	UNITY_PROTOCOL_APPLICATION_PREVIEW_APP_ICON_PROPERTY,
	UNITY_PROTOCOL_APPLICATION_PREVIEW_LICENSE_PROPERTY,
	UNITY_PROTOCOL_APPLICATION_PREVIEW_COPYRIGHT_PROPERTY,
	UNITY_PROTOCOL_APPLICATION_PREVIEW_LAST_UPDATE_PROPERTY,
	UNITY_PROTOCOL_APPLICATION_PREVIEW_RATING_PROPERTY,
	UNITY_PROTOCOL_APPLICATION_PREVIEW_NUM_RATINGS_PROPERTY,
	UNITY_PROTOCOL_APPLICATION_PREVIEW_NUM_PROPERTIES
};
static GParamSpec* unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_NUM_PROPERTIES];
typedef struct _Block1Data Block1Data;

#define UNITY_PROTOCOL_TYPE_PLAY_STATE (unity_protocol_play_state_get_type ())
typedef struct _UnityProtocolMusicPreviewPrivate UnityProtocolMusicPreviewPrivate;
enum  {
	UNITY_PROTOCOL_MUSIC_PREVIEW_0_PROPERTY,
	UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_SWARM_NAME_PROPERTY,
	UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_ADDRESS_PROPERTY,
	UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_MODEL_PROPERTY,
	UNITY_PROTOCOL_MUSIC_PREVIEW_NUM_PROPERTIES
};
static GParamSpec* unity_protocol_music_preview_properties[UNITY_PROTOCOL_MUSIC_PREVIEW_NUM_PROPERTIES];
typedef struct _Block2Data Block2Data;

#define UNITY_PROTOCOL_TYPE_PREVIEW_PAYMENT_TYPE (unity_protocol_preview_payment_type_get_type ())
typedef struct _UnityProtocolPaymentPreviewPrivate UnityProtocolPaymentPreviewPrivate;
enum  {
	UNITY_PROTOCOL_PAYMENT_PREVIEW_0_PROPERTY,
	UNITY_PROTOCOL_PAYMENT_PREVIEW_HEADER_PROPERTY,
	UNITY_PROTOCOL_PAYMENT_PREVIEW_EMAIL_PROPERTY,
	UNITY_PROTOCOL_PAYMENT_PREVIEW_PAYMENT_METHOD_PROPERTY,
	UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_PRIZE_PROPERTY,
	UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_TYPE_PROPERTY,
	UNITY_PROTOCOL_PAYMENT_PREVIEW_PREVIEW_TYPE_PROPERTY,
	UNITY_PROTOCOL_PAYMENT_PREVIEW_NUM_PROPERTIES
};
static GParamSpec* unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_NUM_PROPERTIES];
typedef struct _Block3Data Block3Data;
typedef struct _UnityProtocolMoviePreviewPrivate UnityProtocolMoviePreviewPrivate;
enum  {
	UNITY_PROTOCOL_MOVIE_PREVIEW_0_PROPERTY,
	UNITY_PROTOCOL_MOVIE_PREVIEW_YEAR_PROPERTY,
	UNITY_PROTOCOL_MOVIE_PREVIEW_RATING_PROPERTY,
	UNITY_PROTOCOL_MOVIE_PREVIEW_NUM_RATINGS_PROPERTY,
	UNITY_PROTOCOL_MOVIE_PREVIEW_NUM_PROPERTIES
};
static GParamSpec* unity_protocol_movie_preview_properties[UNITY_PROTOCOL_MOVIE_PREVIEW_NUM_PROPERTIES];
typedef struct _Block4Data Block4Data;
typedef struct _UnityProtocolSocialPreviewPrivate UnityProtocolSocialPreviewPrivate;

#define UNITY_PROTOCOL_SOCIAL_PREVIEW_TYPE_COMMENT_RAW (unity_protocol_social_preview_comment_raw_get_type ())
typedef struct _UnityProtocolSocialPreviewCommentRaw UnityProtocolSocialPreviewCommentRaw;
enum  {
	UNITY_PROTOCOL_SOCIAL_PREVIEW_0_PROPERTY,
	UNITY_PROTOCOL_SOCIAL_PREVIEW_AVATAR_PROPERTY,
	UNITY_PROTOCOL_SOCIAL_PREVIEW_CONTENT_PROPERTY,
	UNITY_PROTOCOL_SOCIAL_PREVIEW_SENDER_PROPERTY,
	UNITY_PROTOCOL_SOCIAL_PREVIEW_NUM_PROPERTIES
};
static GParamSpec* unity_protocol_social_preview_properties[UNITY_PROTOCOL_SOCIAL_PREVIEW_NUM_PROPERTIES];
#define _unity_protocol_social_preview_comment_raw_free0(var) ((var == NULL) ? NULL : (var = (unity_protocol_social_preview_comment_raw_free (var), NULL)))
typedef struct _Block5Data Block5Data;

#define UNITY_PROTOCOL_TYPE_SERIES_ITEM_RAW (unity_protocol_series_item_raw_get_type ())
typedef struct _UnityProtocolSeriesItemRaw UnityProtocolSeriesItemRaw;
typedef struct _UnityProtocolSeriesPreviewPrivate UnityProtocolSeriesPreviewPrivate;
enum  {
	UNITY_PROTOCOL_SERIES_PREVIEW_0_PROPERTY,
	UNITY_PROTOCOL_SERIES_PREVIEW_SELECTED_ITEM_PROPERTY,
	UNITY_PROTOCOL_SERIES_PREVIEW_CHILD_PREVIEW_PROPERTY,
	UNITY_PROTOCOL_SERIES_PREVIEW_NUM_PROPERTIES
};
static GParamSpec* unity_protocol_series_preview_properties[UNITY_PROTOCOL_SERIES_PREVIEW_NUM_PROPERTIES];
#define _unity_protocol_series_item_raw_free0(var) ((var == NULL) ? NULL : (var = (unity_protocol_series_item_raw_free (var), NULL)))
typedef struct _Block6Data Block6Data;
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _UnityProtocolPreviewActionRaw {
	gchar* id;
	gchar* display_name;
	gchar* icon_hint;
	guint layout_hint;
	GHashTable* hints;
};

struct _UnityProtocolInfoHintRaw {
	gchar* id;
	gchar* display_name;
	gchar* icon_hint;
	GVariant* value;
};

struct _UnityProtocolPreviewRaw {
	gchar* renderer_name;
	gchar* title;
	gchar* subtitle;
	gchar* description;
	gchar* image_source_uri;
	gchar* image_hint;
	UnityProtocolPreviewActionRaw* actions;
	gint actions_length1;
	gint _actions_size_;
	UnityProtocolInfoHintRaw* info_hints;
	gint info_hints_length1;
	gint _info_hints_size_;
	GHashTable* hints;
};

typedef enum  {
	UNITY_PROTOCOL_LAYOUT_HINT_NONE,
	UNITY_PROTOCOL_LAYOUT_HINT_LEFT,
	UNITY_PROTOCOL_LAYOUT_HINT_RIGHT,
	UNITY_PROTOCOL_LAYOUT_HINT_TOP,
	UNITY_PROTOCOL_LAYOUT_HINT_BOTTOM
} UnityProtocolLayoutHint;

struct _UnityProtocolPreview {
	GObject parent_instance;
	UnityProtocolPreviewPrivate * priv;
};

struct _UnityProtocolPreviewClass {
	GObjectClass parent_class;
	void (*begin_updates) (UnityProtocolPreview* self);
	GHashTable* (*end_updates_as_hashtable) (UnityProtocolPreview* self);
	GVariant* (*end_updates) (UnityProtocolPreview* self);
	const gchar* (*get_renderer_name) (UnityProtocolPreview* self);
	void (*update_property) (UnityProtocolPreview* self, GHashTable* properties);
	void (*add_properties) (UnityProtocolPreview* self, GHashTable* properties);
};

struct _UnityProtocolPreviewPrivate {
	gchar* _title;
	gchar* _subtitle;
	gchar* _description;
	gchar* _image_source_uri;
	GIcon* _image;
	UnityProtocolPreviewRaw _raw;
	UnityProtocolPreviewActionRaw* _actions_raw;
	gint _actions_raw_length1;
	gint __actions_raw_size_;
	UnityProtocolInfoHintRaw* _info_hints;
	gint _info_hints_length1;
	gint __info_hints_size_;
	GHashTable* _updates;
	gboolean _no_details;
};

struct _UnityProtocolGenericPreview {
	UnityProtocolPreview parent_instance;
	UnityProtocolGenericPreviewPrivate * priv;
};

struct _UnityProtocolGenericPreviewClass {
	UnityProtocolPreviewClass parent_class;
};

struct _UnityProtocolApplicationPreview {
	UnityProtocolPreview parent_instance;
	UnityProtocolApplicationPreviewPrivate * priv;
};

struct _UnityProtocolApplicationPreviewClass {
	UnityProtocolPreviewClass parent_class;
};

struct _UnityProtocolApplicationPreviewPrivate {
	GIcon* _app_icon;
	gchar* _license;
	gchar* _copyright;
	gchar* _last_update;
	gfloat _rating;
	guint _num_ratings;
};

struct _Block1Data {
	int _ref_count_;
	UnityProtocolApplicationPreview* _result_;
};

typedef enum  {
	UNITY_PROTOCOL_PLAY_STATE_STOPPED,
	UNITY_PROTOCOL_PLAY_STATE_PLAYING,
	UNITY_PROTOCOL_PLAY_STATE_PAUSED
} UnityProtocolPlayState;

struct _UnityProtocolMusicPreview {
	UnityProtocolPreview parent_instance;
	UnityProtocolMusicPreviewPrivate * priv;
};

struct _UnityProtocolMusicPreviewClass {
	UnityProtocolPreviewClass parent_class;
};

struct _UnityProtocolMusicPreviewPrivate {
	gchar* _track_data_swarm_name;
	gchar* _track_data_address;
	DeeSerializableModel* _track_model;
};

struct _Block2Data {
	int _ref_count_;
	UnityProtocolMusicPreview* _result_;
};

typedef enum  {
	UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_APPLICATION,
	UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_MUSIC,
	UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_ERROR
} UnityProtocolPreviewPaymentType;

struct _UnityProtocolPaymentPreview {
	UnityProtocolPreview parent_instance;
	UnityProtocolPaymentPreviewPrivate * priv;
};

struct _UnityProtocolPaymentPreviewClass {
	UnityProtocolPreviewClass parent_class;
};

struct _UnityProtocolPaymentPreviewPrivate {
	gchar* _header;
	gchar* _email;
	gchar* _payment_method;
	gchar* _purchase_prize;
	gchar* _purchase_type;
	UnityProtocolPreviewPaymentType _preview_type;
};

struct _Block3Data {
	int _ref_count_;
	UnityProtocolPaymentPreview* _result_;
};

struct _UnityProtocolMoviePreview {
	UnityProtocolPreview parent_instance;
	UnityProtocolMoviePreviewPrivate * priv;
};

struct _UnityProtocolMoviePreviewClass {
	UnityProtocolPreviewClass parent_class;
};

struct _UnityProtocolMoviePreviewPrivate {
	gchar* _year;
	gfloat _rating;
	guint _num_ratings;
};

struct _Block4Data {
	int _ref_count_;
	UnityProtocolMoviePreview* _result_;
};

struct _UnityProtocolSocialPreviewCommentRaw {
	gchar* id;
	gchar* display_name;
	gchar* content;
	gchar* time;
};

struct _UnityProtocolSocialPreview {
	UnityProtocolPreview parent_instance;
	UnityProtocolSocialPreviewPrivate * priv;
	UnityProtocolSocialPreviewCommentRaw* comments;
	gint comments_length1;
};

struct _UnityProtocolSocialPreviewClass {
	UnityProtocolPreviewClass parent_class;
};

struct _UnityProtocolSocialPreviewPrivate {
	GIcon* _avatar;
	gchar* _content;
	gchar* _sender;
	UnityProtocolSocialPreviewCommentRaw* _comments;
	gint _comments_length1;
	gint __comments_size_;
};

struct _Block5Data {
	int _ref_count_;
	UnityProtocolSocialPreview* _result_;
};

struct _UnityProtocolSeriesItemRaw {
	gchar* uri;
	gchar* title;
	gchar* icon_hint;
};

struct _UnityProtocolSeriesPreview {
	UnityProtocolPreview parent_instance;
	UnityProtocolSeriesPreviewPrivate * priv;
};

struct _UnityProtocolSeriesPreviewClass {
	UnityProtocolPreviewClass parent_class;
};

struct _UnityProtocolSeriesPreviewPrivate {
	gint _selected_item;
	UnityProtocolPreview* _child_preview;
	UnityProtocolSeriesItemRaw* _items;
	gint _items_length1;
	gint __items_size_;
	gulong _selected_item_sig_id;
};

struct _Block6Data {
	int _ref_count_;
	UnityProtocolSeriesPreview* _result_;
};


static gpointer unity_protocol_preview_parent_class = NULL;
static gboolean unity_protocol_preview_parsers_registered;
static gboolean unity_protocol_preview_parsers_registered = FALSE;
static DeeSerializableIface * unity_protocol_preview_dee_serializable_parent_iface = NULL;
static gpointer unity_protocol_generic_preview_parent_class = NULL;
static gpointer unity_protocol_application_preview_parent_class = NULL;
static gpointer unity_protocol_music_preview_parent_class = NULL;
static gpointer unity_protocol_payment_preview_parent_class = NULL;
static gpointer unity_protocol_movie_preview_parent_class = NULL;
static gpointer unity_protocol_social_preview_parent_class = NULL;
static gpointer unity_protocol_series_preview_parent_class = NULL;

GType unity_protocol_preview_raw_get_type (void) G_GNUC_CONST;
GType unity_protocol_preview_action_raw_get_type (void) G_GNUC_CONST;
UnityProtocolPreviewActionRaw* unity_protocol_preview_action_raw_dup (const UnityProtocolPreviewActionRaw* self);
void unity_protocol_preview_action_raw_free (UnityProtocolPreviewActionRaw* self);
void unity_protocol_preview_action_raw_copy (const UnityProtocolPreviewActionRaw* self,
                                             UnityProtocolPreviewActionRaw* dest);
void unity_protocol_preview_action_raw_destroy (UnityProtocolPreviewActionRaw* self);
GType unity_protocol_info_hint_raw_get_type (void) G_GNUC_CONST;
UnityProtocolInfoHintRaw* unity_protocol_info_hint_raw_dup (const UnityProtocolInfoHintRaw* self);
void unity_protocol_info_hint_raw_free (UnityProtocolInfoHintRaw* self);
void unity_protocol_info_hint_raw_copy (const UnityProtocolInfoHintRaw* self,
                                        UnityProtocolInfoHintRaw* dest);
void unity_protocol_info_hint_raw_destroy (UnityProtocolInfoHintRaw* self);
UnityProtocolPreviewRaw* unity_protocol_preview_raw_dup (const UnityProtocolPreviewRaw* self);
void unity_protocol_preview_raw_free (UnityProtocolPreviewRaw* self);
void unity_protocol_preview_raw_copy (const UnityProtocolPreviewRaw* self,
                                      UnityProtocolPreviewRaw* dest);
void unity_protocol_preview_raw_destroy (UnityProtocolPreviewRaw* self);
static void _vala_UnityProtocolPreviewActionRaw_array_free (UnityProtocolPreviewActionRaw * array,
                                                     gint array_length);
static void _vala_UnityProtocolInfoHintRaw_array_free (UnityProtocolInfoHintRaw * array,
                                                gint array_length);
#define UNITY_PROTOCOL_PREVIEW_RAW_SIGNATURE "(ssssssa(sssua{sv})a(sssv)a{sv})"
void unity_protocol_preview_raw_init (UnityProtocolPreviewRaw *self);
static void _g_free0_ (gpointer var);
static void _g_variant_unref0_ (gpointer var);
UnityProtocolPreviewRaw* unity_protocol_preview_raw_from_variant (GVariant* v);
static void _variant_get5 (GVariant* value,
                    UnityProtocolPreviewRaw * result);
GVariant* unity_protocol_preview_raw_to_variant (UnityProtocolPreviewRaw *self);
static GVariant* _variant_new6 (UnityProtocolPreviewRaw value);
static UnityProtocolPreviewActionRaw* _vala_array_dup1 (UnityProtocolPreviewActionRaw* self,
                                                 int length);
static UnityProtocolInfoHintRaw* _vala_array_dup2 (UnityProtocolInfoHintRaw* self,
                                            int length);
GType unity_protocol_layout_hint_get_type (void) G_GNUC_CONST;
void unity_protocol_preview_action_raw_init (UnityProtocolPreviewActionRaw *self);
UnityProtocolPreviewActionRaw* unity_protocol_preview_action_raw_from_variant (GVariant* v);
static void _variant_get7 (GVariant* value,
                    UnityProtocolPreviewActionRaw * result);
GVariant* unity_protocol_preview_action_raw_to_variant (UnityProtocolPreviewActionRaw *self);
static GVariant* _variant_new8 (UnityProtocolPreviewActionRaw value);
GType unity_protocol_preview_get_type (void) G_GNUC_CONST;
#define UNITY_PROTOCOL_PREVIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreviewPrivate))
void unity_protocol_preview_begin_updates (UnityProtocolPreview* self);
static void unity_protocol_preview_real_begin_updates (UnityProtocolPreview* self);
GHashTable* unity_protocol_preview_end_updates_as_hashtable (UnityProtocolPreview* self);
static GHashTable* unity_protocol_preview_real_end_updates_as_hashtable (UnityProtocolPreview* self);
GVariant* unity_protocol_preview_end_updates (UnityProtocolPreview* self);
static GVariant* unity_protocol_preview_real_end_updates (UnityProtocolPreview* self);
static GVariant* _variant_new9 (GHashTable* value);
void unity_protocol_preview_add_action (UnityProtocolPreview* self,
                                        const gchar* id,
                                        const gchar* display_name,
                                        GIcon* icon,
                                        guint layout_hint);
void unity_protocol_preview_add_action_with_hints (UnityProtocolPreview* self,
                                                   const gchar* id,
                                                   const gchar* display_name,
                                                   GIcon* icon,
                                                   guint layout_hint,
                                                   GHashTable* hints);
static void _vala_array_add1 (UnityProtocolPreviewActionRaw* * array,
                       int* length,
                       int* size,
                       const UnityProtocolPreviewActionRaw* value);
UnityProtocolPreviewActionRaw* unity_protocol_preview_get_actions (UnityProtocolPreview* self,
                                                                   int* result_length1);
void unity_protocol_preview_add_info_hint (UnityProtocolPreview* self,
                                           const gchar* id,
                                           const gchar* display_name,
                                           GIcon* icon_hint,
                                           GVariant* value);
static void _vala_array_add2 (UnityProtocolInfoHintRaw* * array,
                       int* length,
                       int* size,
                       const UnityProtocolInfoHintRaw* value);
const gchar* unity_protocol_preview_get_renderer_name (UnityProtocolPreview* self);
static const gchar* unity_protocol_preview_real_get_renderer_name (UnityProtocolPreview* self);
UnityProtocolInfoHintRaw* unity_protocol_preview_get_info_hints (UnityProtocolPreview* self,
                                                                 int* result_length1);
void unity_protocol_preview_set_no_details (UnityProtocolPreview* self,
                                            gboolean val);
gboolean unity_protocol_preview_get_no_details (UnityProtocolPreview* self);
void unity_protocol_preview_preview_closed (UnityProtocolPreview* self);
void unity_protocol_preview_add_update (UnityProtocolPreview* self,
                                        const gchar* property,
                                        GVariant* value);
static GVariant* _variant_new10 (const gchar* value);
void unity_protocol_preview_update_property (UnityProtocolPreview* self,
                                             GHashTable* properties);
static void unity_protocol_preview_real_update_property (UnityProtocolPreview* self,
                                                  GHashTable* properties);
void unity_protocol_preview_add_properties (UnityProtocolPreview* self,
                                            GHashTable* properties);
static void unity_protocol_preview_real_add_properties (UnityProtocolPreview* self,
                                                 GHashTable* properties);
GHashTable* unity_protocol_preview_get_properties (UnityProtocolPreview* self);
static GVariant* unity_protocol_preview_real_serialize (DeeSerializable* base);
const gchar* unity_protocol_preview_get_title (UnityProtocolPreview* self);
const gchar* unity_protocol_preview_get_subtitle (UnityProtocolPreview* self);
const gchar* unity_protocol_preview_get_description (UnityProtocolPreview* self);
const gchar* unity_protocol_preview_get_image_source_uri (UnityProtocolPreview* self);
GIcon* unity_protocol_preview_get_image (UnityProtocolPreview* self);
static UnityProtocolPreviewActionRaw* _vala_array_dup3 (UnityProtocolPreviewActionRaw* self,
                                                 int length);
static UnityProtocolInfoHintRaw* _vala_array_dup4 (UnityProtocolInfoHintRaw* self,
                                            int length);
GIcon* unity_protocol_preview_string_to_icon (const gchar* s);
GIcon* unity_protocol_preview_variant_to_icon (GVariant* v);
static void unity_protocol_preview_register_parsers (void);
GType unity_protocol_generic_preview_get_type (void) G_GNUC_CONST;
GType unity_protocol_application_preview_get_type (void) G_GNUC_CONST;
GType unity_protocol_music_preview_get_type (void) G_GNUC_CONST;
GType unity_protocol_payment_preview_get_type (void) G_GNUC_CONST;
GType unity_protocol_movie_preview_get_type (void) G_GNUC_CONST;
GType unity_protocol_social_preview_get_type (void) G_GNUC_CONST;
GType unity_protocol_series_preview_get_type (void) G_GNUC_CONST;
UnityProtocolPreview* unity_protocol_preview_parse (GVariant* data);
#define UNITY_PROTOCOL_GENERIC_PREVIEW_RENDERER_NAME "preview-generic"
#define UNITY_PROTOCOL_APPLICATION_PREVIEW_RENDERER_NAME "preview-application"
#define UNITY_PROTOCOL_MUSIC_PREVIEW_RENDERER_NAME "preview-music"
#define UNITY_PROTOCOL_PAYMENT_PREVIEW_RENDERER_NAME "preview-payment"
#define UNITY_PROTOCOL_MOVIE_PREVIEW_RENDERER_NAME "preview-movie"
#define UNITY_PROTOCOL_SOCIAL_PREVIEW_RENDERER_NAME "preview-social"
#define UNITY_PROTOCOL_SERIES_PREVIEW_RENDERER_NAME "preview-series"
gpointer unity_protocol_preview_deserialize (GType t_type,
                                             GBoxedCopyFunc t_dup_func,
                                             GDestroyNotify t_destroy_func,
                                             GVariant* data,
                                             GHashTable* * out_properties);
void unity_protocol_preview_set_title (UnityProtocolPreview* self,
                                       const gchar* value);
void unity_protocol_preview_set_subtitle (UnityProtocolPreview* self,
                                          const gchar* value);
void unity_protocol_preview_set_description (UnityProtocolPreview* self,
                                             const gchar* value);
void unity_protocol_preview_set_image_source_uri (UnityProtocolPreview* self,
                                                  const gchar* value);
void unity_protocol_preview_set_image (UnityProtocolPreview* self,
                                       GIcon* value);
void unity_protocol_preview_checked_set (GVariant* v,
                                         GFunc f,
                                         gpointer f_target);
UnityProtocolPreview* unity_protocol_preview_construct (GType object_type);
static void unity_protocol_preview_finalize (GObject * obj);
static void _vala_unity_protocol_preview_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec);
static void _vala_unity_protocol_preview_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec);
UnityProtocolGenericPreview* unity_protocol_generic_preview_new (void);
UnityProtocolGenericPreview* unity_protocol_generic_preview_construct (GType object_type);
static const gchar* unity_protocol_generic_preview_real_get_renderer_name (UnityProtocolPreview* base);
static GObject* _unity_protocol_generic_preview___lambda4_ (GVariant* data);
static GObject* __unity_protocol_generic_preview___lambda4__dee_serializable_parse_func (GVariant* data);
#define UNITY_PROTOCOL_APPLICATION_PREVIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, UnityProtocolApplicationPreviewPrivate))
UnityProtocolApplicationPreview* unity_protocol_application_preview_new (void);
UnityProtocolApplicationPreview* unity_protocol_application_preview_construct (GType object_type);
static const gchar* unity_protocol_application_preview_real_get_renderer_name (UnityProtocolPreview* base);
static void unity_protocol_application_preview_real_add_properties (UnityProtocolPreview* base,
                                                             GHashTable* properties);
GIcon* unity_protocol_application_preview_get_app_icon (UnityProtocolApplicationPreview* self);
static GVariant* _variant_new11 (gchar* value);
const gchar* unity_protocol_application_preview_get_license (UnityProtocolApplicationPreview* self);
static GVariant* _variant_new12 (const gchar* value);
const gchar* unity_protocol_application_preview_get_copyright (UnityProtocolApplicationPreview* self);
static GVariant* _variant_new13 (const gchar* value);
const gchar* unity_protocol_application_preview_get_last_update (UnityProtocolApplicationPreview* self);
static GVariant* _variant_new14 (const gchar* value);
gfloat unity_protocol_application_preview_get_rating (UnityProtocolApplicationPreview* self);
static GVariant* _variant_new15 (gdouble value);
guint unity_protocol_application_preview_get_num_ratings (UnityProtocolApplicationPreview* self);
static GVariant* _variant_new16 (guint value);
void unity_protocol_application_preview_set_app_icon (UnityProtocolApplicationPreview* self,
                                                      GIcon* value);
void unity_protocol_application_preview_set_license (UnityProtocolApplicationPreview* self,
                                                     const gchar* value);
void unity_protocol_application_preview_set_copyright (UnityProtocolApplicationPreview* self,
                                                       const gchar* value);
void unity_protocol_application_preview_set_last_update (UnityProtocolApplicationPreview* self,
                                                         const gchar* value);
void unity_protocol_application_preview_set_rating (UnityProtocolApplicationPreview* self,
                                                    gfloat value);
void unity_protocol_application_preview_set_num_ratings (UnityProtocolApplicationPreview* self,
                                                         guint value);
static GObject* _unity_protocol_application_preview___lambda5_ (GVariant* data);
static Block1Data* block1_data_ref (Block1Data* _data1_);
static void block1_data_unref (void * _userdata_);
static void __lambda6_ (Block1Data* _data1_,
                 GVariant* v);
static void ___lambda6__gfunc (gconstpointer data,
                        gpointer self);
static void __lambda7_ (Block1Data* _data1_,
                 GVariant* v);
static void ___lambda7__gfunc (gconstpointer data,
                        gpointer self);
static void __lambda8_ (Block1Data* _data1_,
                 GVariant* v);
static void ___lambda8__gfunc (gconstpointer data,
                        gpointer self);
static void __lambda9_ (Block1Data* _data1_,
                 GVariant* v);
static void ___lambda9__gfunc (gconstpointer data,
                        gpointer self);
static void __lambda10_ (Block1Data* _data1_,
                  GVariant* v);
static void ___lambda10__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda11_ (Block1Data* _data1_,
                  GVariant* v);
static void ___lambda11__gfunc (gconstpointer data,
                         gpointer self);
static GObject* __unity_protocol_application_preview___lambda5__dee_serializable_parse_func (GVariant* data);
static void unity_protocol_application_preview_finalize (GObject * obj);
static void _vala_unity_protocol_application_preview_get_property (GObject * object,
                                                            guint property_id,
                                                            GValue * value,
                                                            GParamSpec * pspec);
static void _vala_unity_protocol_application_preview_set_property (GObject * object,
                                                            guint property_id,
                                                            const GValue * value,
                                                            GParamSpec * pspec);
GType unity_protocol_play_state_get_type (void) G_GNUC_CONST;
#define UNITY_PROTOCOL_MUSIC_PREVIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, UnityProtocolMusicPreviewPrivate))
UnityProtocolMusicPreview* unity_protocol_music_preview_new (void);
UnityProtocolMusicPreview* unity_protocol_music_preview_construct (GType object_type);
static const gchar* unity_protocol_music_preview_real_get_renderer_name (UnityProtocolPreview* base);
static void unity_protocol_music_preview_real_add_properties (UnityProtocolPreview* base,
                                                       GHashTable* properties);
const gchar* unity_protocol_music_preview_get_track_data_swarm_name (UnityProtocolMusicPreview* self);
static GVariant* _variant_new17 (const gchar* value);
const gchar* unity_protocol_music_preview_get_track_data_address (UnityProtocolMusicPreview* self);
static GVariant* _variant_new18 (const gchar* value);
DeeSerializableModel* unity_protocol_music_preview_get_track_model (UnityProtocolMusicPreview* self);
void unity_protocol_music_preview_set_track_data_swarm_name (UnityProtocolMusicPreview* self,
                                                             const gchar* value);
void unity_protocol_music_preview_set_track_data_address (UnityProtocolMusicPreview* self,
                                                          const gchar* value);
void unity_protocol_music_preview_set_track_model (UnityProtocolMusicPreview* self,
                                                   DeeSerializableModel* value);
static GObject* _unity_protocol_music_preview___lambda12_ (GVariant* data);
static Block2Data* block2_data_ref (Block2Data* _data2_);
static void block2_data_unref (void * _userdata_);
static void __lambda13_ (Block2Data* _data2_,
                  GVariant* v);
static void ___lambda13__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda14_ (Block2Data* _data2_,
                  GVariant* v);
static void ___lambda14__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda15_ (Block2Data* _data2_,
                  GVariant* v);
static void ___lambda15__gfunc (gconstpointer data,
                         gpointer self);
static GObject* __unity_protocol_music_preview___lambda12__dee_serializable_parse_func (GVariant* data);
static void unity_protocol_music_preview_finalize (GObject * obj);
static void _vala_unity_protocol_music_preview_get_property (GObject * object,
                                                      guint property_id,
                                                      GValue * value,
                                                      GParamSpec * pspec);
static void _vala_unity_protocol_music_preview_set_property (GObject * object,
                                                      guint property_id,
                                                      const GValue * value,
                                                      GParamSpec * pspec);
GType unity_protocol_preview_payment_type_get_type (void) G_GNUC_CONST;
#define UNITY_PROTOCOL_PAYMENT_PREVIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, UnityProtocolPaymentPreviewPrivate))
UnityProtocolPaymentPreview* unity_protocol_payment_preview_new (void);
UnityProtocolPaymentPreview* unity_protocol_payment_preview_construct (GType object_type);
static const gchar* unity_protocol_payment_preview_real_get_renderer_name (UnityProtocolPreview* base);
static void unity_protocol_payment_preview_real_add_properties (UnityProtocolPreview* base,
                                                         GHashTable* properties);
const gchar* unity_protocol_payment_preview_get_header (UnityProtocolPaymentPreview* self);
static GVariant* _variant_new19 (const gchar* value);
const gchar* unity_protocol_payment_preview_get_email (UnityProtocolPaymentPreview* self);
static GVariant* _variant_new20 (const gchar* value);
const gchar* unity_protocol_payment_preview_get_payment_method (UnityProtocolPaymentPreview* self);
static GVariant* _variant_new21 (const gchar* value);
const gchar* unity_protocol_payment_preview_get_purchase_prize (UnityProtocolPaymentPreview* self);
static GVariant* _variant_new22 (const gchar* value);
const gchar* unity_protocol_payment_preview_get_purchase_type (UnityProtocolPaymentPreview* self);
static GVariant* _variant_new23 (const gchar* value);
UnityProtocolPreviewPaymentType unity_protocol_payment_preview_get_preview_type (UnityProtocolPaymentPreview* self);
static GVariant* _variant_new24 (UnityProtocolPreviewPaymentType value);
void unity_protocol_payment_preview_set_header (UnityProtocolPaymentPreview* self,
                                                const gchar* value);
void unity_protocol_payment_preview_set_email (UnityProtocolPaymentPreview* self,
                                               const gchar* value);
void unity_protocol_payment_preview_set_payment_method (UnityProtocolPaymentPreview* self,
                                                        const gchar* value);
void unity_protocol_payment_preview_set_purchase_prize (UnityProtocolPaymentPreview* self,
                                                        const gchar* value);
void unity_protocol_payment_preview_set_purchase_type (UnityProtocolPaymentPreview* self,
                                                       const gchar* value);
void unity_protocol_payment_preview_set_preview_type (UnityProtocolPaymentPreview* self,
                                                      UnityProtocolPreviewPaymentType value);
static GObject* _unity_protocol_payment_preview___lambda16_ (GVariant* data);
static Block3Data* block3_data_ref (Block3Data* _data3_);
static void block3_data_unref (void * _userdata_);
static void __lambda17_ (Block3Data* _data3_,
                  GVariant* v);
static void ___lambda17__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda18_ (Block3Data* _data3_,
                  GVariant* v);
static void ___lambda18__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda19_ (Block3Data* _data3_,
                  GVariant* v);
static void ___lambda19__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda20_ (Block3Data* _data3_,
                  GVariant* v);
static void ___lambda20__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda21_ (Block3Data* _data3_,
                  GVariant* v);
static void ___lambda21__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda22_ (Block3Data* _data3_,
                  GVariant* v);
static void ___lambda22__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda23_ (Block3Data* _data3_,
                  GVariant* v);
static void ___lambda23__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda24_ (Block3Data* _data3_,
                  GVariant* v);
static void ___lambda24__gfunc (gconstpointer data,
                         gpointer self);
static GObject* __unity_protocol_payment_preview___lambda16__dee_serializable_parse_func (GVariant* data);
static void unity_protocol_payment_preview_finalize (GObject * obj);
static void _vala_unity_protocol_payment_preview_get_property (GObject * object,
                                                        guint property_id,
                                                        GValue * value,
                                                        GParamSpec * pspec);
static void _vala_unity_protocol_payment_preview_set_property (GObject * object,
                                                        guint property_id,
                                                        const GValue * value,
                                                        GParamSpec * pspec);
#define UNITY_PROTOCOL_MOVIE_PREVIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, UnityProtocolMoviePreviewPrivate))
UnityProtocolMoviePreview* unity_protocol_movie_preview_new (void);
UnityProtocolMoviePreview* unity_protocol_movie_preview_construct (GType object_type);
static const gchar* unity_protocol_movie_preview_real_get_renderer_name (UnityProtocolPreview* base);
static void unity_protocol_movie_preview_real_add_properties (UnityProtocolPreview* base,
                                                       GHashTable* properties);
gfloat unity_protocol_movie_preview_get_rating (UnityProtocolMoviePreview* self);
static GVariant* _variant_new25 (gdouble value);
guint unity_protocol_movie_preview_get_num_ratings (UnityProtocolMoviePreview* self);
static GVariant* _variant_new26 (guint value);
const gchar* unity_protocol_movie_preview_get_year (UnityProtocolMoviePreview* self);
static GVariant* _variant_new27 (const gchar* value);
void unity_protocol_movie_preview_set_year (UnityProtocolMoviePreview* self,
                                            const gchar* value);
void unity_protocol_movie_preview_set_rating (UnityProtocolMoviePreview* self,
                                              gfloat value);
void unity_protocol_movie_preview_set_num_ratings (UnityProtocolMoviePreview* self,
                                                   guint value);
static GObject* _unity_protocol_movie_preview___lambda25_ (GVariant* data);
static Block4Data* block4_data_ref (Block4Data* _data4_);
static void block4_data_unref (void * _userdata_);
static void __lambda26_ (Block4Data* _data4_,
                  GVariant* v);
static void ___lambda26__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda27_ (Block4Data* _data4_,
                  GVariant* v);
static void ___lambda27__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda28_ (Block4Data* _data4_,
                  GVariant* v);
static void ___lambda28__gfunc (gconstpointer data,
                         gpointer self);
static GObject* __unity_protocol_movie_preview___lambda25__dee_serializable_parse_func (GVariant* data);
static void unity_protocol_movie_preview_finalize (GObject * obj);
static void _vala_unity_protocol_movie_preview_get_property (GObject * object,
                                                      guint property_id,
                                                      GValue * value,
                                                      GParamSpec * pspec);
static void _vala_unity_protocol_movie_preview_set_property (GObject * object,
                                                      guint property_id,
                                                      const GValue * value,
                                                      GParamSpec * pspec);
GType unity_protocol_social_preview_comment_raw_get_type (void) G_GNUC_CONST;
UnityProtocolSocialPreviewCommentRaw* unity_protocol_social_preview_comment_raw_dup (const UnityProtocolSocialPreviewCommentRaw* self);
void unity_protocol_social_preview_comment_raw_free (UnityProtocolSocialPreviewCommentRaw* self);
void unity_protocol_social_preview_comment_raw_copy (const UnityProtocolSocialPreviewCommentRaw* self,
                                                     UnityProtocolSocialPreviewCommentRaw* dest);
void unity_protocol_social_preview_comment_raw_destroy (UnityProtocolSocialPreviewCommentRaw* self);
#define UNITY_PROTOCOL_SOCIAL_PREVIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, UnityProtocolSocialPreviewPrivate))
static void _vala_UnityProtocolSocialPreviewCommentRaw_array_free (UnityProtocolSocialPreviewCommentRaw * array,
                                                            gint array_length);
UnityProtocolSocialPreview* unity_protocol_social_preview_new (void);
UnityProtocolSocialPreview* unity_protocol_social_preview_construct (GType object_type);
static const gchar* unity_protocol_social_preview_real_get_renderer_name (UnityProtocolPreview* base);
static void unity_protocol_social_preview_real_add_properties (UnityProtocolPreview* base,
                                                        GHashTable* properties);
static GVariant* _variant_new28 (UnityProtocolSocialPreviewCommentRaw* value,
                          gint value_length1);
GIcon* unity_protocol_social_preview_get_avatar (UnityProtocolSocialPreview* self);
static GVariant* _variant_new29 (gchar* value);
const gchar* unity_protocol_social_preview_get_content (UnityProtocolSocialPreview* self);
static GVariant* _variant_new30 (const gchar* value);
const gchar* unity_protocol_social_preview_get_sender (UnityProtocolSocialPreview* self);
static GVariant* _variant_new31 (const gchar* value);
void unity_protocol_social_preview_add_comment (UnityProtocolSocialPreview* self,
                                                const gchar* id,
                                                const gchar* display_name,
                                                const gchar* content,
                                                const gchar* time);
static void _vala_array_add3 (UnityProtocolSocialPreviewCommentRaw* * array,
                       int* length,
                       int* size,
                       const UnityProtocolSocialPreviewCommentRaw* value);
UnityProtocolSocialPreviewCommentRaw* unity_protocol_social_preview_get_comments (UnityProtocolSocialPreview* self,
                                                                                  int* result_length1);
void unity_protocol_social_preview_set_avatar (UnityProtocolSocialPreview* self,
                                               GIcon* value);
void unity_protocol_social_preview_set_content (UnityProtocolSocialPreview* self,
                                                const gchar* value);
void unity_protocol_social_preview_set_sender (UnityProtocolSocialPreview* self,
                                               const gchar* value);
static GObject* _unity_protocol_social_preview___lambda29_ (GVariant* data);
static Block5Data* block5_data_ref (Block5Data* _data5_);
static void block5_data_unref (void * _userdata_);
static void __lambda30_ (Block5Data* _data5_,
                  GVariant* v);
static void ___lambda30__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda31_ (Block5Data* _data5_,
                  GVariant* v);
static void ___lambda31__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda32_ (Block5Data* _data5_,
                  GVariant* v);
static void ___lambda32__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda33_ (Block5Data* _data5_,
                  GVariant* v);
static UnityProtocolSocialPreviewCommentRaw* _variant_get32 (GVariant* value,
                                                      int* result_length1);
static void ___lambda33__gfunc (gconstpointer data,
                         gpointer self);
static GObject* __unity_protocol_social_preview___lambda29__dee_serializable_parse_func (GVariant* data);
static void unity_protocol_social_preview_finalize (GObject * obj);
static void _vala_unity_protocol_social_preview_get_property (GObject * object,
                                                       guint property_id,
                                                       GValue * value,
                                                       GParamSpec * pspec);
static void _vala_unity_protocol_social_preview_set_property (GObject * object,
                                                       guint property_id,
                                                       const GValue * value,
                                                       GParamSpec * pspec);
GType unity_protocol_series_item_raw_get_type (void) G_GNUC_CONST;
UnityProtocolSeriesItemRaw* unity_protocol_series_item_raw_dup (const UnityProtocolSeriesItemRaw* self);
void unity_protocol_series_item_raw_free (UnityProtocolSeriesItemRaw* self);
void unity_protocol_series_item_raw_copy (const UnityProtocolSeriesItemRaw* self,
                                          UnityProtocolSeriesItemRaw* dest);
void unity_protocol_series_item_raw_destroy (UnityProtocolSeriesItemRaw* self);
#define UNITY_PROTOCOL_SERIES_PREVIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, UnityProtocolSeriesPreviewPrivate))
static void _vala_UnityProtocolSeriesItemRaw_array_free (UnityProtocolSeriesItemRaw * array,
                                                  gint array_length);
UnityProtocolSeriesPreview* unity_protocol_series_preview_new (void);
UnityProtocolSeriesPreview* unity_protocol_series_preview_construct (GType object_type);
static void unity_protocol_series_preview_real_begin_updates (UnityProtocolPreview* base);
static void ___lambda34_ (UnityProtocolSeriesPreview* self);
gint unity_protocol_series_preview_get_selected_item (UnityProtocolSeriesPreview* self);
static GVariant* _variant_new33 (gint value);
static void ____lambda34__g_object_notify (GObject* _sender,
                                    GParamSpec* pspec,
                                    gpointer self);
static GHashTable* unity_protocol_series_preview_real_end_updates_as_hashtable (UnityProtocolPreview* base);
void unity_protocol_series_preview_add_series_item (UnityProtocolSeriesPreview* self,
                                                    const gchar* title,
                                                    const gchar* uri,
                                                    GIcon* icon);
static void _vala_array_add4 (UnityProtocolSeriesItemRaw* * array,
                       int* length,
                       int* size,
                       const UnityProtocolSeriesItemRaw* value);
UnityProtocolSeriesItemRaw* unity_protocol_series_preview_get_items (UnityProtocolSeriesPreview* self,
                                                                     int* result_length1);
static const gchar* unity_protocol_series_preview_real_get_renderer_name (UnityProtocolPreview* base);
static void unity_protocol_series_preview_real_update_property (UnityProtocolPreview* base,
                                                         GHashTable* properties);
void unity_protocol_series_preview_set_selected_item (UnityProtocolSeriesPreview* self,
                                                      gint value);
static void unity_protocol_series_preview_real_add_properties (UnityProtocolPreview* base,
                                                        GHashTable* properties);
static GVariant* _variant_new34 (UnityProtocolSeriesItemRaw* value,
                          gint value_length1);
UnityProtocolPreview* unity_protocol_series_preview_get_child_preview (UnityProtocolSeriesPreview* self);
static GVariant* _variant_new35 (gint value);
void unity_protocol_series_preview_set_child_preview (UnityProtocolSeriesPreview* self,
                                                      UnityProtocolPreview* value);
static GObject* _unity_protocol_series_preview___lambda35_ (GVariant* data);
static Block6Data* block6_data_ref (Block6Data* _data6_);
static void block6_data_unref (void * _userdata_);
static void __lambda36_ (Block6Data* _data6_,
                  GVariant* v);
static UnityProtocolSeriesItemRaw* _variant_get36 (GVariant* value,
                                            int* result_length1);
static void ___lambda36__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda37_ (Block6Data* _data6_,
                  GVariant* v);
static void ___lambda37__gfunc (gconstpointer data,
                         gpointer self);
static void __lambda38_ (Block6Data* _data6_,
                  GVariant* v);
static void ___lambda38__gfunc (gconstpointer data,
                         gpointer self);
static GObject* __unity_protocol_series_preview___lambda35__dee_serializable_parse_func (GVariant* data);
static void unity_protocol_series_preview_finalize (GObject * obj);
static void _vala_unity_protocol_series_preview_get_property (GObject * object,
                                                       guint property_id,
                                                       GValue * value,
                                                       GParamSpec * pspec);
static void _vala_unity_protocol_series_preview_set_property (GObject * object,
                                                       guint property_id,
                                                       const GValue * value,
                                                       GParamSpec * pspec);


static void
_vala_UnityProtocolPreviewActionRaw_array_free (UnityProtocolPreviewActionRaw * array,
                                                gint array_length)
{
	if (array != NULL) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			unity_protocol_preview_action_raw_destroy (&array[i]);
		}
	}
	g_free (array);
}


static void
_vala_UnityProtocolInfoHintRaw_array_free (UnityProtocolInfoHintRaw * array,
                                           gint array_length)
{
	if (array != NULL) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			unity_protocol_info_hint_raw_destroy (&array[i]);
		}
	}
	g_free (array);
}


static void
_g_free0_ (gpointer var)
{
	var = (g_free (var), NULL);
}


static void
_g_variant_unref0_ (gpointer var)
{
	(var == NULL) ? NULL : (var = (g_variant_unref (var), NULL));
}


void
unity_protocol_preview_raw_init (UnityProtocolPreviewRaw *self)
{
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	memset (self, 0, sizeof (UnityProtocolPreviewRaw));
	_tmp0_ = g_str_hash;
	_tmp1_ = g_str_equal;
	_tmp2_ = g_hash_table_new_full (_tmp0_, _tmp1_, _g_free0_, _g_variant_unref0_);
	_g_hash_table_unref0 ((*self).hints);
	(*self).hints = _tmp2_;
}


static void
_variant_get5 (GVariant* value,
               UnityProtocolPreviewRaw * result)
{
	UnityProtocolPreviewRaw _tmp1_;
	GVariantIter _tmp2_;
	GVariant* _tmp3_;
	GVariant* _tmp4_;
	GVariant* _tmp5_;
	GVariant* _tmp6_;
	GVariant* _tmp7_;
	GVariant* _tmp8_;
	GVariant* _tmp9_;
	UnityProtocolPreviewActionRaw* _tmp10_;
	int _tmp10__length;
	int _tmp10__size;
	int _tmp10__length1;
	GVariantIter _tmp11_;
	GVariant* _tmp12_;
	GVariant* _tmp24_;
	UnityProtocolInfoHintRaw* _tmp25_;
	int _tmp25__length;
	int _tmp25__size;
	int _tmp25__length1;
	GVariantIter _tmp26_;
	GVariant* _tmp27_;
	GVariant* _tmp34_;
	GHashTable* _tmp35_;
	GVariantIter _tmp36_;
	GVariant* _tmp37_;
	GVariant* _tmp38_;
	g_variant_iter_init (&_tmp2_, value);
	_tmp3_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.renderer_name = g_variant_dup_string (_tmp3_, NULL);
	g_variant_unref (_tmp3_);
	_tmp4_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.title = g_variant_dup_string (_tmp4_, NULL);
	g_variant_unref (_tmp4_);
	_tmp5_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.subtitle = g_variant_dup_string (_tmp5_, NULL);
	g_variant_unref (_tmp5_);
	_tmp6_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.description = g_variant_dup_string (_tmp6_, NULL);
	g_variant_unref (_tmp6_);
	_tmp7_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.image_source_uri = g_variant_dup_string (_tmp7_, NULL);
	g_variant_unref (_tmp7_);
	_tmp8_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.image_hint = g_variant_dup_string (_tmp8_, NULL);
	g_variant_unref (_tmp8_);
	_tmp9_ = g_variant_iter_next_value (&_tmp2_);
	_tmp10_ = g_new (UnityProtocolPreviewActionRaw, 5);
	_tmp10__length = 0;
	_tmp10__size = 4;
	_tmp10__length1 = 0;
	g_variant_iter_init (&_tmp11_, _tmp9_);
	for (; (_tmp12_ = g_variant_iter_next_value (&_tmp11_)) != NULL; _tmp10__length1++) {
		UnityProtocolPreviewActionRaw _tmp13_;
		GVariantIter _tmp14_;
		GVariant* _tmp15_;
		GVariant* _tmp16_;
		GVariant* _tmp17_;
		GVariant* _tmp18_;
		GVariant* _tmp19_;
		GHashTable* _tmp20_;
		GVariantIter _tmp21_;
		GVariant* _tmp22_;
		GVariant* _tmp23_;
		if (_tmp10__size == _tmp10__length) {
			_tmp10__size = 2 * _tmp10__size;
			_tmp10_ = g_renew (UnityProtocolPreviewActionRaw, _tmp10_, _tmp10__size + 1);
		}
		g_variant_iter_init (&_tmp14_, _tmp12_);
		_tmp15_ = g_variant_iter_next_value (&_tmp14_);
		_tmp13_.id = g_variant_dup_string (_tmp15_, NULL);
		g_variant_unref (_tmp15_);
		_tmp16_ = g_variant_iter_next_value (&_tmp14_);
		_tmp13_.display_name = g_variant_dup_string (_tmp16_, NULL);
		g_variant_unref (_tmp16_);
		_tmp17_ = g_variant_iter_next_value (&_tmp14_);
		_tmp13_.icon_hint = g_variant_dup_string (_tmp17_, NULL);
		g_variant_unref (_tmp17_);
		_tmp18_ = g_variant_iter_next_value (&_tmp14_);
		_tmp13_.layout_hint = g_variant_get_uint32 (_tmp18_);
		g_variant_unref (_tmp18_);
		_tmp19_ = g_variant_iter_next_value (&_tmp14_);
		_tmp20_ = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, (GDestroyNotify) g_variant_unref);
		g_variant_iter_init (&_tmp21_, _tmp19_);
		while (g_variant_iter_loop (&_tmp21_, "{?*}", &_tmp22_, &_tmp23_)) {
			g_hash_table_insert (_tmp20_, g_variant_dup_string (_tmp22_, NULL), g_variant_get_variant (_tmp23_));
		}
		_tmp13_.hints = _tmp20_;
		g_variant_unref (_tmp19_);
		_tmp10_[_tmp10__length++] = _tmp13_;
		g_variant_unref (_tmp12_);
	}
	_tmp1_.actions_length1 = _tmp10__length1;
	_tmp1_.actions = _tmp10_;
	g_variant_unref (_tmp9_);
	_tmp24_ = g_variant_iter_next_value (&_tmp2_);
	_tmp25_ = g_new (UnityProtocolInfoHintRaw, 5);
	_tmp25__length = 0;
	_tmp25__size = 4;
	_tmp25__length1 = 0;
	g_variant_iter_init (&_tmp26_, _tmp24_);
	for (; (_tmp27_ = g_variant_iter_next_value (&_tmp26_)) != NULL; _tmp25__length1++) {
		UnityProtocolInfoHintRaw _tmp28_;
		GVariantIter _tmp29_;
		GVariant* _tmp30_;
		GVariant* _tmp31_;
		GVariant* _tmp32_;
		GVariant* _tmp33_;
		if (_tmp25__size == _tmp25__length) {
			_tmp25__size = 2 * _tmp25__size;
			_tmp25_ = g_renew (UnityProtocolInfoHintRaw, _tmp25_, _tmp25__size + 1);
		}
		g_variant_iter_init (&_tmp29_, _tmp27_);
		_tmp30_ = g_variant_iter_next_value (&_tmp29_);
		_tmp28_.id = g_variant_dup_string (_tmp30_, NULL);
		g_variant_unref (_tmp30_);
		_tmp31_ = g_variant_iter_next_value (&_tmp29_);
		_tmp28_.display_name = g_variant_dup_string (_tmp31_, NULL);
		g_variant_unref (_tmp31_);
		_tmp32_ = g_variant_iter_next_value (&_tmp29_);
		_tmp28_.icon_hint = g_variant_dup_string (_tmp32_, NULL);
		g_variant_unref (_tmp32_);
		_tmp33_ = g_variant_iter_next_value (&_tmp29_);
		_tmp28_.value = g_variant_get_variant (_tmp33_);
		g_variant_unref (_tmp33_);
		_tmp25_[_tmp25__length++] = _tmp28_;
		g_variant_unref (_tmp27_);
	}
	_tmp1_.info_hints_length1 = _tmp25__length1;
	_tmp1_.info_hints = _tmp25_;
	g_variant_unref (_tmp24_);
	_tmp34_ = g_variant_iter_next_value (&_tmp2_);
	_tmp35_ = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, (GDestroyNotify) g_variant_unref);
	g_variant_iter_init (&_tmp36_, _tmp34_);
	while (g_variant_iter_loop (&_tmp36_, "{?*}", &_tmp37_, &_tmp38_)) {
		g_hash_table_insert (_tmp35_, g_variant_dup_string (_tmp37_, NULL), g_variant_get_variant (_tmp38_));
	}
	_tmp1_.hints = _tmp35_;
	g_variant_unref (_tmp34_);
	*result = _tmp1_;
}


static gpointer
_unity_protocol_preview_raw_dup0 (gpointer self)
{
	return self ? unity_protocol_preview_raw_dup (self) : NULL;
}


UnityProtocolPreviewRaw*
unity_protocol_preview_raw_from_variant (GVariant* v)
{
	UnityProtocolPreviewRaw* result = NULL;
	UnityProtocolPreviewRaw _tmp0_;
	UnityProtocolPreviewRaw _tmp39_;
	UnityProtocolPreviewRaw* _tmp40_;
	UnityProtocolPreviewRaw* _tmp41_;
	g_return_val_if_fail (v != NULL, NULL);
	_variant_get5 (v, &_tmp0_);
	_tmp39_ = _tmp0_;
	_tmp40_ = _unity_protocol_preview_raw_dup0 (&_tmp39_);
	_tmp41_ = _tmp40_;
	unity_protocol_preview_raw_destroy (&_tmp39_);
	result = _tmp41_;
	return result;
}


static GVariant*
_variant_new6 (UnityProtocolPreviewRaw value)
{
	GVariantBuilder _tmp0_;
	UnityProtocolPreviewActionRaw* _tmp1_;
	GVariantBuilder _tmp2_;
	int _tmp3_;
	UnityProtocolInfoHintRaw* _tmp9_;
	GVariantBuilder _tmp10_;
	int _tmp11_;
	GVariantBuilder _tmp13_;
	GHashTableIter _tmp14_;
	gpointer _tmp15_;
	gpointer _tmp16_;
	g_variant_builder_init (&_tmp0_, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.renderer_name));
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.title));
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.subtitle));
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.description));
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.image_source_uri));
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.image_hint));
	_tmp1_ = value.actions;
	g_variant_builder_init (&_tmp2_, G_VARIANT_TYPE ("a(sssua{sv})"));
	for (_tmp3_ = 0; _tmp3_ < value.actions_length1; _tmp3_++) {
		GVariantBuilder _tmp4_;
		GVariantBuilder _tmp5_;
		GHashTableIter _tmp6_;
		gpointer _tmp7_;
		gpointer _tmp8_;
		g_variant_builder_init (&_tmp4_, G_VARIANT_TYPE_TUPLE);
		g_variant_builder_add_value (&_tmp4_, g_variant_new_string ((*_tmp1_).id));
		g_variant_builder_add_value (&_tmp4_, g_variant_new_string ((*_tmp1_).display_name));
		g_variant_builder_add_value (&_tmp4_, g_variant_new_string ((*_tmp1_).icon_hint));
		g_variant_builder_add_value (&_tmp4_, g_variant_new_uint32 ((*_tmp1_).layout_hint));
		g_hash_table_iter_init (&_tmp6_, (*_tmp1_).hints);
		g_variant_builder_init (&_tmp5_, G_VARIANT_TYPE ("a{sv}"));
		while (g_hash_table_iter_next (&_tmp6_, &_tmp7_, &_tmp8_)) {
			gchar* _key;
			GVariant* _value;
			_key = (gchar*) _tmp7_;
			_value = (GVariant*) _tmp8_;
			g_variant_builder_add (&_tmp5_, "{?*}", g_variant_new_string (_key), g_variant_new_variant (_value));
		}
		g_variant_builder_add_value (&_tmp4_, g_variant_builder_end (&_tmp5_));
		g_variant_builder_add_value (&_tmp2_, g_variant_builder_end (&_tmp4_));
		_tmp1_++;
	}
	g_variant_builder_add_value (&_tmp0_, g_variant_builder_end (&_tmp2_));
	_tmp9_ = value.info_hints;
	g_variant_builder_init (&_tmp10_, G_VARIANT_TYPE ("a(sssv)"));
	for (_tmp11_ = 0; _tmp11_ < value.info_hints_length1; _tmp11_++) {
		GVariantBuilder _tmp12_;
		g_variant_builder_init (&_tmp12_, G_VARIANT_TYPE_TUPLE);
		g_variant_builder_add_value (&_tmp12_, g_variant_new_string ((*_tmp9_).id));
		g_variant_builder_add_value (&_tmp12_, g_variant_new_string ((*_tmp9_).display_name));
		g_variant_builder_add_value (&_tmp12_, g_variant_new_string ((*_tmp9_).icon_hint));
		g_variant_builder_add_value (&_tmp12_, g_variant_new_variant ((*_tmp9_).value));
		g_variant_builder_add_value (&_tmp10_, g_variant_builder_end (&_tmp12_));
		_tmp9_++;
	}
	g_variant_builder_add_value (&_tmp0_, g_variant_builder_end (&_tmp10_));
	g_hash_table_iter_init (&_tmp14_, value.hints);
	g_variant_builder_init (&_tmp13_, G_VARIANT_TYPE ("a{sv}"));
	while (g_hash_table_iter_next (&_tmp14_, &_tmp15_, &_tmp16_)) {
		gchar* _key;
		GVariant* _value;
		_key = (gchar*) _tmp15_;
		_value = (GVariant*) _tmp16_;
		g_variant_builder_add (&_tmp13_, "{?*}", g_variant_new_string (_key), g_variant_new_variant (_value));
	}
	g_variant_builder_add_value (&_tmp0_, g_variant_builder_end (&_tmp13_));
	return g_variant_ref_sink (g_variant_builder_end (&_tmp0_));
}


GVariant*
unity_protocol_preview_raw_to_variant (UnityProtocolPreviewRaw *self)
{
	GVariant* result = NULL;
	GVariant* _tmp17_;
	_tmp17_ = _variant_new6 ((*self));
	result = _tmp17_;
	return result;
}


static UnityProtocolPreviewActionRaw*
_vala_array_dup1 (UnityProtocolPreviewActionRaw* self,
                  int length)
{
	UnityProtocolPreviewActionRaw* result;
	int i;
	result = g_new0 (UnityProtocolPreviewActionRaw, length);
	for (i = 0; i < length; i++) {
		UnityProtocolPreviewActionRaw _tmp0_ = {0};
		unity_protocol_preview_action_raw_copy (&self[i], &_tmp0_);
		result[i] = _tmp0_;
	}
	return result;
}


static UnityProtocolInfoHintRaw*
_vala_array_dup2 (UnityProtocolInfoHintRaw* self,
                  int length)
{
	UnityProtocolInfoHintRaw* result;
	int i;
	result = g_new0 (UnityProtocolInfoHintRaw, length);
	for (i = 0; i < length; i++) {
		UnityProtocolInfoHintRaw _tmp0_ = {0};
		unity_protocol_info_hint_raw_copy (&self[i], &_tmp0_);
		result[i] = _tmp0_;
	}
	return result;
}


static gpointer
_g_hash_table_ref0 (gpointer self)
{
	return self ? g_hash_table_ref (self) : NULL;
}


void
unity_protocol_preview_raw_copy (const UnityProtocolPreviewRaw* self,
                                 UnityProtocolPreviewRaw* dest)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	const gchar* _tmp6_;
	gchar* _tmp7_;
	const gchar* _tmp8_;
	gchar* _tmp9_;
	const gchar* _tmp10_;
	gchar* _tmp11_;
	UnityProtocolPreviewActionRaw* _tmp12_;
	gint _tmp12__length1;
	UnityProtocolPreviewActionRaw* _tmp13_;
	gint _tmp13__length1;
	UnityProtocolInfoHintRaw* _tmp14_;
	gint _tmp14__length1;
	UnityProtocolInfoHintRaw* _tmp15_;
	gint _tmp15__length1;
	GHashTable* _tmp16_;
	GHashTable* _tmp17_;
	_tmp0_ = (*self).renderer_name;
	_tmp1_ = g_strdup (_tmp0_);
	_g_free0 ((*dest).renderer_name);
	(*dest).renderer_name = _tmp1_;
	_tmp2_ = (*self).title;
	_tmp3_ = g_strdup (_tmp2_);
	_g_free0 ((*dest).title);
	(*dest).title = _tmp3_;
	_tmp4_ = (*self).subtitle;
	_tmp5_ = g_strdup (_tmp4_);
	_g_free0 ((*dest).subtitle);
	(*dest).subtitle = _tmp5_;
	_tmp6_ = (*self).description;
	_tmp7_ = g_strdup (_tmp6_);
	_g_free0 ((*dest).description);
	(*dest).description = _tmp7_;
	_tmp8_ = (*self).image_source_uri;
	_tmp9_ = g_strdup (_tmp8_);
	_g_free0 ((*dest).image_source_uri);
	(*dest).image_source_uri = _tmp9_;
	_tmp10_ = (*self).image_hint;
	_tmp11_ = g_strdup (_tmp10_);
	_g_free0 ((*dest).image_hint);
	(*dest).image_hint = _tmp11_;
	_tmp12_ = (*self).actions;
	_tmp12__length1 = (*self).actions_length1;
	_tmp13_ = (_tmp12_ != NULL) ? _vala_array_dup1 (_tmp12_, _tmp12__length1) : ((gpointer) _tmp12_);
	_tmp13__length1 = _tmp12__length1;
	(*dest).actions = (_vala_UnityProtocolPreviewActionRaw_array_free ((*dest).actions, (*dest).actions_length1), NULL);
	(*dest).actions = _tmp13_;
	(*dest).actions_length1 = _tmp13__length1;
	(*dest)._actions_size_ = (*dest).actions_length1;
	_tmp14_ = (*self).info_hints;
	_tmp14__length1 = (*self).info_hints_length1;
	_tmp15_ = (_tmp14_ != NULL) ? _vala_array_dup2 (_tmp14_, _tmp14__length1) : ((gpointer) _tmp14_);
	_tmp15__length1 = _tmp14__length1;
	(*dest).info_hints = (_vala_UnityProtocolInfoHintRaw_array_free ((*dest).info_hints, (*dest).info_hints_length1), NULL);
	(*dest).info_hints = _tmp15_;
	(*dest).info_hints_length1 = _tmp15__length1;
	(*dest)._info_hints_size_ = (*dest).info_hints_length1;
	_tmp16_ = (*self).hints;
	_tmp17_ = _g_hash_table_ref0 (_tmp16_);
	_g_hash_table_unref0 ((*dest).hints);
	(*dest).hints = _tmp17_;
}


void
unity_protocol_preview_raw_destroy (UnityProtocolPreviewRaw* self)
{
	_g_free0 ((*self).renderer_name);
	_g_free0 ((*self).title);
	_g_free0 ((*self).subtitle);
	_g_free0 ((*self).description);
	_g_free0 ((*self).image_source_uri);
	_g_free0 ((*self).image_hint);
	(*self).actions = (_vala_UnityProtocolPreviewActionRaw_array_free ((*self).actions, (*self).actions_length1), NULL);
	(*self).info_hints = (_vala_UnityProtocolInfoHintRaw_array_free ((*self).info_hints, (*self).info_hints_length1), NULL);
	_g_hash_table_unref0 ((*self).hints);
}


UnityProtocolPreviewRaw*
unity_protocol_preview_raw_dup (const UnityProtocolPreviewRaw* self)
{
	UnityProtocolPreviewRaw* dup;
	dup = g_new0 (UnityProtocolPreviewRaw, 1);
	unity_protocol_preview_raw_copy (self, dup);
	return dup;
}


void
unity_protocol_preview_raw_free (UnityProtocolPreviewRaw* self)
{
	unity_protocol_preview_raw_destroy (self);
	g_free (self);
}


GType
unity_protocol_preview_raw_get_type (void)
{
	static volatile gsize unity_protocol_preview_raw_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_preview_raw_type_id__volatile)) {
		GType unity_protocol_preview_raw_type_id;
		unity_protocol_preview_raw_type_id = g_boxed_type_register_static ("UnityProtocolPreviewRaw", (GBoxedCopyFunc) unity_protocol_preview_raw_dup, (GBoxedFreeFunc) unity_protocol_preview_raw_free);
		g_once_init_leave (&unity_protocol_preview_raw_type_id__volatile, unity_protocol_preview_raw_type_id);
	}
	return unity_protocol_preview_raw_type_id__volatile;
}


GType
unity_protocol_layout_hint_get_type (void)
{
	static volatile gsize unity_protocol_layout_hint_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_layout_hint_type_id__volatile)) {
		static const GEnumValue values[] = {{UNITY_PROTOCOL_LAYOUT_HINT_NONE, "UNITY_PROTOCOL_LAYOUT_HINT_NONE", "none"}, {UNITY_PROTOCOL_LAYOUT_HINT_LEFT, "UNITY_PROTOCOL_LAYOUT_HINT_LEFT", "left"}, {UNITY_PROTOCOL_LAYOUT_HINT_RIGHT, "UNITY_PROTOCOL_LAYOUT_HINT_RIGHT", "right"}, {UNITY_PROTOCOL_LAYOUT_HINT_TOP, "UNITY_PROTOCOL_LAYOUT_HINT_TOP", "top"}, {UNITY_PROTOCOL_LAYOUT_HINT_BOTTOM, "UNITY_PROTOCOL_LAYOUT_HINT_BOTTOM", "bottom"}, {0, NULL, NULL}};
		GType unity_protocol_layout_hint_type_id;
		unity_protocol_layout_hint_type_id = g_enum_register_static ("UnityProtocolLayoutHint", values);
		g_once_init_leave (&unity_protocol_layout_hint_type_id__volatile, unity_protocol_layout_hint_type_id);
	}
	return unity_protocol_layout_hint_type_id__volatile;
}


static gpointer
_g_variant_ref0 (gpointer self)
{
	return self ? g_variant_ref (self) : NULL;
}


void
unity_protocol_info_hint_raw_copy (const UnityProtocolInfoHintRaw* self,
                                   UnityProtocolInfoHintRaw* dest)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	GVariant* _tmp6_;
	GVariant* _tmp7_;
	_tmp0_ = (*self).id;
	_tmp1_ = g_strdup (_tmp0_);
	_g_free0 ((*dest).id);
	(*dest).id = _tmp1_;
	_tmp2_ = (*self).display_name;
	_tmp3_ = g_strdup (_tmp2_);
	_g_free0 ((*dest).display_name);
	(*dest).display_name = _tmp3_;
	_tmp4_ = (*self).icon_hint;
	_tmp5_ = g_strdup (_tmp4_);
	_g_free0 ((*dest).icon_hint);
	(*dest).icon_hint = _tmp5_;
	_tmp6_ = (*self).value;
	_tmp7_ = _g_variant_ref0 (_tmp6_);
	_g_variant_unref0 ((*dest).value);
	(*dest).value = _tmp7_;
}


void
unity_protocol_info_hint_raw_destroy (UnityProtocolInfoHintRaw* self)
{
	_g_free0 ((*self).id);
	_g_free0 ((*self).display_name);
	_g_free0 ((*self).icon_hint);
	_g_variant_unref0 ((*self).value);
}


UnityProtocolInfoHintRaw*
unity_protocol_info_hint_raw_dup (const UnityProtocolInfoHintRaw* self)
{
	UnityProtocolInfoHintRaw* dup;
	dup = g_new0 (UnityProtocolInfoHintRaw, 1);
	unity_protocol_info_hint_raw_copy (self, dup);
	return dup;
}


void
unity_protocol_info_hint_raw_free (UnityProtocolInfoHintRaw* self)
{
	unity_protocol_info_hint_raw_destroy (self);
	g_free (self);
}


GType
unity_protocol_info_hint_raw_get_type (void)
{
	static volatile gsize unity_protocol_info_hint_raw_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_info_hint_raw_type_id__volatile)) {
		GType unity_protocol_info_hint_raw_type_id;
		unity_protocol_info_hint_raw_type_id = g_boxed_type_register_static ("UnityProtocolInfoHintRaw", (GBoxedCopyFunc) unity_protocol_info_hint_raw_dup, (GBoxedFreeFunc) unity_protocol_info_hint_raw_free);
		g_once_init_leave (&unity_protocol_info_hint_raw_type_id__volatile, unity_protocol_info_hint_raw_type_id);
	}
	return unity_protocol_info_hint_raw_type_id__volatile;
}


void
unity_protocol_preview_action_raw_init (UnityProtocolPreviewActionRaw *self)
{
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	memset (self, 0, sizeof (UnityProtocolPreviewActionRaw));
	_tmp0_ = g_str_hash;
	_tmp1_ = g_str_equal;
	_tmp2_ = g_hash_table_new_full (_tmp0_, _tmp1_, _g_free0_, _g_variant_unref0_);
	_g_hash_table_unref0 ((*self).hints);
	(*self).hints = _tmp2_;
}


static void
_variant_get7 (GVariant* value,
               UnityProtocolPreviewActionRaw * result)
{
	UnityProtocolPreviewActionRaw _tmp1_;
	GVariantIter _tmp2_;
	GVariant* _tmp3_;
	GVariant* _tmp4_;
	GVariant* _tmp5_;
	GVariant* _tmp6_;
	GVariant* _tmp7_;
	GHashTable* _tmp8_;
	GVariantIter _tmp9_;
	GVariant* _tmp10_;
	GVariant* _tmp11_;
	g_variant_iter_init (&_tmp2_, value);
	_tmp3_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.id = g_variant_dup_string (_tmp3_, NULL);
	g_variant_unref (_tmp3_);
	_tmp4_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.display_name = g_variant_dup_string (_tmp4_, NULL);
	g_variant_unref (_tmp4_);
	_tmp5_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.icon_hint = g_variant_dup_string (_tmp5_, NULL);
	g_variant_unref (_tmp5_);
	_tmp6_ = g_variant_iter_next_value (&_tmp2_);
	_tmp1_.layout_hint = g_variant_get_uint32 (_tmp6_);
	g_variant_unref (_tmp6_);
	_tmp7_ = g_variant_iter_next_value (&_tmp2_);
	_tmp8_ = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, (GDestroyNotify) g_variant_unref);
	g_variant_iter_init (&_tmp9_, _tmp7_);
	while (g_variant_iter_loop (&_tmp9_, "{?*}", &_tmp10_, &_tmp11_)) {
		g_hash_table_insert (_tmp8_, g_variant_dup_string (_tmp10_, NULL), g_variant_get_variant (_tmp11_));
	}
	_tmp1_.hints = _tmp8_;
	g_variant_unref (_tmp7_);
	*result = _tmp1_;
}


static gpointer
_unity_protocol_preview_action_raw_dup0 (gpointer self)
{
	return self ? unity_protocol_preview_action_raw_dup (self) : NULL;
}


UnityProtocolPreviewActionRaw*
unity_protocol_preview_action_raw_from_variant (GVariant* v)
{
	UnityProtocolPreviewActionRaw* result = NULL;
	UnityProtocolPreviewActionRaw _tmp0_;
	UnityProtocolPreviewActionRaw _tmp12_;
	UnityProtocolPreviewActionRaw* _tmp13_;
	UnityProtocolPreviewActionRaw* _tmp14_;
	g_return_val_if_fail (v != NULL, NULL);
	_variant_get7 (v, &_tmp0_);
	_tmp12_ = _tmp0_;
	_tmp13_ = _unity_protocol_preview_action_raw_dup0 (&_tmp12_);
	_tmp14_ = _tmp13_;
	unity_protocol_preview_action_raw_destroy (&_tmp12_);
	result = _tmp14_;
	return result;
}


static GVariant*
_variant_new8 (UnityProtocolPreviewActionRaw value)
{
	GVariantBuilder _tmp0_;
	GVariantBuilder _tmp1_;
	GHashTableIter _tmp2_;
	gpointer _tmp3_;
	gpointer _tmp4_;
	g_variant_builder_init (&_tmp0_, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.id));
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.display_name));
	g_variant_builder_add_value (&_tmp0_, g_variant_new_string (value.icon_hint));
	g_variant_builder_add_value (&_tmp0_, g_variant_new_uint32 (value.layout_hint));
	g_hash_table_iter_init (&_tmp2_, value.hints);
	g_variant_builder_init (&_tmp1_, G_VARIANT_TYPE ("a{sv}"));
	while (g_hash_table_iter_next (&_tmp2_, &_tmp3_, &_tmp4_)) {
		gchar* _key;
		GVariant* _value;
		_key = (gchar*) _tmp3_;
		_value = (GVariant*) _tmp4_;
		g_variant_builder_add (&_tmp1_, "{?*}", g_variant_new_string (_key), g_variant_new_variant (_value));
	}
	g_variant_builder_add_value (&_tmp0_, g_variant_builder_end (&_tmp1_));
	return g_variant_ref_sink (g_variant_builder_end (&_tmp0_));
}


GVariant*
unity_protocol_preview_action_raw_to_variant (UnityProtocolPreviewActionRaw *self)
{
	GVariant* result = NULL;
	GVariant* _tmp5_;
	_tmp5_ = _variant_new8 ((*self));
	result = _tmp5_;
	return result;
}


void
unity_protocol_preview_action_raw_copy (const UnityProtocolPreviewActionRaw* self,
                                        UnityProtocolPreviewActionRaw* dest)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	guint _tmp6_;
	GHashTable* _tmp7_;
	GHashTable* _tmp8_;
	_tmp0_ = (*self).id;
	_tmp1_ = g_strdup (_tmp0_);
	_g_free0 ((*dest).id);
	(*dest).id = _tmp1_;
	_tmp2_ = (*self).display_name;
	_tmp3_ = g_strdup (_tmp2_);
	_g_free0 ((*dest).display_name);
	(*dest).display_name = _tmp3_;
	_tmp4_ = (*self).icon_hint;
	_tmp5_ = g_strdup (_tmp4_);
	_g_free0 ((*dest).icon_hint);
	(*dest).icon_hint = _tmp5_;
	_tmp6_ = (*self).layout_hint;
	(*dest).layout_hint = _tmp6_;
	_tmp7_ = (*self).hints;
	_tmp8_ = _g_hash_table_ref0 (_tmp7_);
	_g_hash_table_unref0 ((*dest).hints);
	(*dest).hints = _tmp8_;
}


void
unity_protocol_preview_action_raw_destroy (UnityProtocolPreviewActionRaw* self)
{
	_g_free0 ((*self).id);
	_g_free0 ((*self).display_name);
	_g_free0 ((*self).icon_hint);
	_g_hash_table_unref0 ((*self).hints);
}


UnityProtocolPreviewActionRaw*
unity_protocol_preview_action_raw_dup (const UnityProtocolPreviewActionRaw* self)
{
	UnityProtocolPreviewActionRaw* dup;
	dup = g_new0 (UnityProtocolPreviewActionRaw, 1);
	unity_protocol_preview_action_raw_copy (self, dup);
	return dup;
}


void
unity_protocol_preview_action_raw_free (UnityProtocolPreviewActionRaw* self)
{
	unity_protocol_preview_action_raw_destroy (self);
	g_free (self);
}


GType
unity_protocol_preview_action_raw_get_type (void)
{
	static volatile gsize unity_protocol_preview_action_raw_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_preview_action_raw_type_id__volatile)) {
		GType unity_protocol_preview_action_raw_type_id;
		unity_protocol_preview_action_raw_type_id = g_boxed_type_register_static ("UnityProtocolPreviewActionRaw", (GBoxedCopyFunc) unity_protocol_preview_action_raw_dup, (GBoxedFreeFunc) unity_protocol_preview_action_raw_free);
		g_once_init_leave (&unity_protocol_preview_action_raw_type_id__volatile, unity_protocol_preview_action_raw_type_id);
	}
	return unity_protocol_preview_action_raw_type_id__volatile;
}


static void
unity_protocol_preview_real_begin_updates (UnityProtocolPreview* self)
{
	GHashTable* _tmp0_;
	_tmp0_ = self->priv->_updates;
	if (_tmp0_ != NULL) {
		g_warning ("protocol-previews.vala:120: Called begin_updates without end_updates");
	} else {
		GHashFunc _tmp1_;
		GEqualFunc _tmp2_;
		GHashTable* _tmp3_;
		_tmp1_ = g_str_hash;
		_tmp2_ = g_str_equal;
		_tmp3_ = g_hash_table_new_full (_tmp1_, _tmp2_, _g_free0_, _g_variant_unref0_);
		_g_hash_table_unref0 (self->priv->_updates);
		self->priv->_updates = _tmp3_;
	}
}


void
unity_protocol_preview_begin_updates (UnityProtocolPreview* self)
{
	g_return_if_fail (self != NULL);
	UNITY_PROTOCOL_PREVIEW_GET_CLASS (self)->begin_updates (self);
}


static GHashTable*
unity_protocol_preview_real_end_updates_as_hashtable (UnityProtocolPreview* self)
{
	GHashTable* result = NULL;
	GHashTable* _tmp0_;
	GHashTable* _result_ = NULL;
	GHashTable* _tmp1_;
	GHashTable* _tmp2_;
	_tmp0_ = self->priv->_updates;
	if (_tmp0_ == NULL) {
		g_warning ("protocol-previews.vala:132: Called end_updates without begin_updates");
	}
	_tmp1_ = self->priv->_updates;
	_tmp2_ = _g_hash_table_ref0 (_tmp1_);
	_result_ = _tmp2_;
	_g_hash_table_unref0 (self->priv->_updates);
	self->priv->_updates = NULL;
	result = _result_;
	return result;
}


GHashTable*
unity_protocol_preview_end_updates_as_hashtable (UnityProtocolPreview* self)
{
	g_return_val_if_fail (self != NULL, NULL);
	return UNITY_PROTOCOL_PREVIEW_GET_CLASS (self)->end_updates_as_hashtable (self);
}


static GVariant*
_variant_new9 (GHashTable* value)
{
	GVariantBuilder _tmp2_;
	GHashTableIter _tmp3_;
	gpointer _tmp4_;
	gpointer _tmp5_;
	g_hash_table_iter_init (&_tmp3_, value);
	g_variant_builder_init (&_tmp2_, G_VARIANT_TYPE ("a{sv}"));
	while (g_hash_table_iter_next (&_tmp3_, &_tmp4_, &_tmp5_)) {
		gchar* _key;
		GVariant* _value;
		_key = (gchar*) _tmp4_;
		_value = (GVariant*) _tmp5_;
		g_variant_builder_add (&_tmp2_, "{?*}", g_variant_new_string (_key), g_variant_new_variant (_value));
	}
	return g_variant_ref_sink (g_variant_builder_end (&_tmp2_));
}


static GVariant*
unity_protocol_preview_real_end_updates (UnityProtocolPreview* self)
{
	GVariant* result = NULL;
	GHashTable* _result_ = NULL;
	GHashTable* _tmp0_;
	GHashTable* _tmp1_;
	GVariant* _tmp6_;
	GVariant* _tmp7_;
	_tmp0_ = unity_protocol_preview_end_updates_as_hashtable (self);
	_result_ = _tmp0_;
	_tmp1_ = _result_;
	_tmp6_ = _variant_new9 (_tmp1_);
	_tmp7_ = _tmp6_;
	_g_hash_table_unref0 (_tmp1_);
	result = _tmp7_;
	return result;
}


GVariant*
unity_protocol_preview_end_updates (UnityProtocolPreview* self)
{
	g_return_val_if_fail (self != NULL, NULL);
	return UNITY_PROTOCOL_PREVIEW_GET_CLASS (self)->end_updates (self);
}


void
unity_protocol_preview_add_action (UnityProtocolPreview* self,
                                   const gchar* id,
                                   const gchar* display_name,
                                   GIcon* icon,
                                   guint layout_hint)
{
	GHashTable* hints = NULL;
	GHashTable* _tmp0_;
	GHashTable* _tmp1_;
	g_return_if_fail (self != NULL);
	g_return_if_fail (id != NULL);
	g_return_if_fail (display_name != NULL);
	_tmp0_ = g_hash_table_new_full (NULL, NULL, _g_free0_, _g_variant_unref0_);
	hints = _tmp0_;
	_tmp1_ = hints;
	hints = NULL;
	unity_protocol_preview_add_action_with_hints (self, id, display_name, icon, layout_hint, _tmp1_);
	_g_hash_table_unref0 (hints);
}


static void
_vala_array_add1 (UnityProtocolPreviewActionRaw* * array,
                  int* length,
                  int* size,
                  const UnityProtocolPreviewActionRaw* value)
{
	if ((*length) == (*size)) {
		*size = (*size) ? (2 * (*size)) : 4;
		*array = g_renew (UnityProtocolPreviewActionRaw, *array, *size);
	}
	(*array)[(*length)++] = *value;
}


void
unity_protocol_preview_add_action_with_hints (UnityProtocolPreview* self,
                                              const gchar* id,
                                              const gchar* display_name,
                                              GIcon* icon,
                                              guint layout_hint,
                                              GHashTable* hints)
{
	UnityProtocolPreviewActionRaw* action_raw = NULL;
	UnityProtocolPreviewActionRaw _tmp0_ = {0};
	UnityProtocolPreviewActionRaw _tmp1_;
	UnityProtocolPreviewActionRaw* _tmp2_;
	UnityProtocolPreviewActionRaw* _tmp3_;
	UnityProtocolPreviewActionRaw* _tmp4_;
	gchar* _tmp5_;
	UnityProtocolPreviewActionRaw* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_ = NULL;
	UnityProtocolPreviewActionRaw* _tmp11_;
	gchar* _tmp12_;
	UnityProtocolPreviewActionRaw* _tmp13_;
	UnityProtocolPreviewActionRaw* _tmp14_;
	GHashTable* _tmp15_;
	UnityProtocolPreviewActionRaw* _tmp16_;
	gint _tmp16__length1;
	UnityProtocolPreviewActionRaw* _tmp17_;
	UnityProtocolPreviewActionRaw* _tmp18_;
	UnityProtocolPreviewActionRaw _tmp19_ = {0};
	g_return_if_fail (self != NULL);
	g_return_if_fail (id != NULL);
	g_return_if_fail (display_name != NULL);
	g_return_if_fail (hints != NULL);
	unity_protocol_preview_action_raw_init (&_tmp0_);
	_tmp1_ = _tmp0_;
	_tmp2_ = _unity_protocol_preview_action_raw_dup0 (&_tmp1_);
	_tmp3_ = _tmp2_;
	unity_protocol_preview_action_raw_destroy (&_tmp1_);
	action_raw = _tmp3_;
	_tmp4_ = action_raw;
	_tmp5_ = g_strdup (id);
	_g_free0 ((*_tmp4_).id);
	(*_tmp4_).id = _tmp5_;
	_tmp6_ = action_raw;
	_tmp7_ = g_strdup (display_name);
	_g_free0 ((*_tmp6_).display_name);
	(*_tmp6_).display_name = _tmp7_;
	if (icon != NULL) {
		gchar* _tmp9_;
		_tmp9_ = g_icon_to_string (icon);
		_g_free0 (_tmp8_);
		_tmp8_ = _tmp9_;
	} else {
		gchar* _tmp10_;
		_tmp10_ = g_strdup ("");
		_g_free0 (_tmp8_);
		_tmp8_ = _tmp10_;
	}
	_tmp11_ = action_raw;
	_tmp12_ = g_strdup (_tmp8_);
	_g_free0 ((*_tmp11_).icon_hint);
	(*_tmp11_).icon_hint = _tmp12_;
	_tmp13_ = action_raw;
	(*_tmp13_).layout_hint = layout_hint;
	_tmp14_ = action_raw;
	_tmp15_ = hints;
	hints = NULL;
	_g_hash_table_unref0 ((*_tmp14_).hints);
	(*_tmp14_).hints = _tmp15_;
	_tmp16_ = self->priv->_actions_raw;
	_tmp16__length1 = self->priv->_actions_raw_length1;
	_tmp17_ = action_raw;
	action_raw = NULL;
	_tmp18_ = _tmp17_;
	unity_protocol_preview_action_raw_copy (_tmp18_, &_tmp19_);
	_vala_array_add1 (&self->priv->_actions_raw, &self->priv->_actions_raw_length1, &self->priv->__actions_raw_size_, &_tmp19_);
	_unity_protocol_preview_action_raw_free0 (_tmp18_);
	_g_free0 (_tmp8_);
	_unity_protocol_preview_action_raw_free0 (action_raw);
	_g_hash_table_unref0 (hints);
}


UnityProtocolPreviewActionRaw*
unity_protocol_preview_get_actions (UnityProtocolPreview* self,
                                    int* result_length1)
{
	UnityProtocolPreviewActionRaw* result = NULL;
	UnityProtocolPreviewActionRaw* _tmp0_;
	gint _tmp0__length1;
	UnityProtocolPreviewActionRaw* _tmp1_;
	gint _tmp1__length1;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_actions_raw;
	_tmp0__length1 = self->priv->_actions_raw_length1;
	_tmp1_ = _tmp0_;
	_tmp1__length1 = _tmp0__length1;
	if (result_length1) {
		*result_length1 = _tmp1__length1;
	}
	result = _tmp1_;
	return result;
}


static gpointer
_unity_protocol_info_hint_raw_dup0 (gpointer self)
{
	return self ? unity_protocol_info_hint_raw_dup (self) : NULL;
}


static void
_vala_array_add2 (UnityProtocolInfoHintRaw* * array,
                  int* length,
                  int* size,
                  const UnityProtocolInfoHintRaw* value)
{
	if ((*length) == (*size)) {
		*size = (*size) ? (2 * (*size)) : 4;
		*array = g_renew (UnityProtocolInfoHintRaw, *array, *size);
	}
	(*array)[(*length)++] = *value;
}


void
unity_protocol_preview_add_info_hint (UnityProtocolPreview* self,
                                      const gchar* id,
                                      const gchar* display_name,
                                      GIcon* icon_hint,
                                      GVariant* value)
{
	UnityProtocolInfoHintRaw* info = NULL;
	UnityProtocolInfoHintRaw _tmp0_ = {0};
	UnityProtocolInfoHintRaw _tmp1_;
	UnityProtocolInfoHintRaw* _tmp2_;
	UnityProtocolInfoHintRaw* _tmp3_;
	UnityProtocolInfoHintRaw* _tmp4_;
	gchar* _tmp5_;
	UnityProtocolInfoHintRaw* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_ = NULL;
	UnityProtocolInfoHintRaw* _tmp11_;
	gchar* _tmp12_;
	UnityProtocolInfoHintRaw* _tmp13_;
	GVariant* _tmp14_;
	UnityProtocolInfoHintRaw* _tmp15_;
	gint _tmp15__length1;
	UnityProtocolInfoHintRaw* _tmp16_;
	UnityProtocolInfoHintRaw* _tmp17_;
	UnityProtocolInfoHintRaw _tmp18_ = {0};
	g_return_if_fail (self != NULL);
	g_return_if_fail (id != NULL);
	g_return_if_fail (display_name != NULL);
	g_return_if_fail (value != NULL);
	memset (&_tmp0_, 0, sizeof (UnityProtocolInfoHintRaw));
	_tmp1_ = _tmp0_;
	_tmp2_ = _unity_protocol_info_hint_raw_dup0 (&_tmp1_);
	_tmp3_ = _tmp2_;
	unity_protocol_info_hint_raw_destroy (&_tmp1_);
	info = _tmp3_;
	_tmp4_ = info;
	_tmp5_ = g_strdup (id);
	_g_free0 ((*_tmp4_).id);
	(*_tmp4_).id = _tmp5_;
	_tmp6_ = info;
	_tmp7_ = g_strdup (display_name);
	_g_free0 ((*_tmp6_).display_name);
	(*_tmp6_).display_name = _tmp7_;
	if (icon_hint != NULL) {
		gchar* _tmp9_;
		_tmp9_ = g_icon_to_string (icon_hint);
		_g_free0 (_tmp8_);
		_tmp8_ = _tmp9_;
	} else {
		gchar* _tmp10_;
		_tmp10_ = g_strdup ("");
		_g_free0 (_tmp8_);
		_tmp8_ = _tmp10_;
	}
	_tmp11_ = info;
	_tmp12_ = g_strdup (_tmp8_);
	_g_free0 ((*_tmp11_).icon_hint);
	(*_tmp11_).icon_hint = _tmp12_;
	_tmp13_ = info;
	_tmp14_ = _g_variant_ref0 (value);
	_g_variant_unref0 ((*_tmp13_).value);
	(*_tmp13_).value = _tmp14_;
	_tmp15_ = self->priv->_info_hints;
	_tmp15__length1 = self->priv->_info_hints_length1;
	_tmp16_ = info;
	info = NULL;
	_tmp17_ = _tmp16_;
	unity_protocol_info_hint_raw_copy (_tmp17_, &_tmp18_);
	_vala_array_add2 (&self->priv->_info_hints, &self->priv->_info_hints_length1, &self->priv->__info_hints_size_, &_tmp18_);
	_unity_protocol_info_hint_raw_free0 (_tmp17_);
	_g_free0 (_tmp8_);
	_unity_protocol_info_hint_raw_free0 (info);
}


static const gchar*
unity_protocol_preview_real_get_renderer_name (UnityProtocolPreview* self)
{
	g_critical ("Type `%s' does not implement abstract method `unity_protocol_preview_get_renderer_name'", g_type_name (G_TYPE_FROM_INSTANCE (self)));
	return NULL;
}


const gchar*
unity_protocol_preview_get_renderer_name (UnityProtocolPreview* self)
{
	g_return_val_if_fail (self != NULL, NULL);
	return UNITY_PROTOCOL_PREVIEW_GET_CLASS (self)->get_renderer_name (self);
}


UnityProtocolInfoHintRaw*
unity_protocol_preview_get_info_hints (UnityProtocolPreview* self,
                                       int* result_length1)
{
	UnityProtocolInfoHintRaw* result = NULL;
	UnityProtocolInfoHintRaw* _tmp0_;
	gint _tmp0__length1;
	UnityProtocolInfoHintRaw* _tmp1_;
	gint _tmp1__length1;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_info_hints;
	_tmp0__length1 = self->priv->_info_hints_length1;
	_tmp1_ = _tmp0_;
	_tmp1__length1 = _tmp0__length1;
	if (result_length1) {
		*result_length1 = _tmp1__length1;
	}
	result = _tmp1_;
	return result;
}


void
unity_protocol_preview_set_no_details (UnityProtocolPreview* self,
                                       gboolean val)
{
	g_return_if_fail (self != NULL);
	self->priv->_no_details = val;
}


gboolean
unity_protocol_preview_get_no_details (UnityProtocolPreview* self)
{
	gboolean result = FALSE;
	gboolean _tmp0_;
	g_return_val_if_fail (self != NULL, FALSE);
	_tmp0_ = self->priv->_no_details;
	result = _tmp0_;
	return result;
}


/**
   * Called by Dash when preview has been closed
   */
static GVariant*
_variant_new10 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


void
unity_protocol_preview_preview_closed (UnityProtocolPreview* self)
{
	GVariant* _tmp0_;
	g_return_if_fail (self != NULL);
	_tmp0_ = _variant_new10 ("closed");
	unity_protocol_preview_add_update (self, "base-preview-action", _tmp0_);
	_g_variant_unref0 (_tmp0_);
}


static void
unity_protocol_preview_real_update_property (UnityProtocolPreview* self,
                                             GHashTable* properties)
{
	g_return_if_fail (properties != NULL);
}


void
unity_protocol_preview_update_property (UnityProtocolPreview* self,
                                        GHashTable* properties)
{
	g_return_if_fail (self != NULL);
	UNITY_PROTOCOL_PREVIEW_GET_CLASS (self)->update_property (self, properties);
}


static void
unity_protocol_preview_real_add_properties (UnityProtocolPreview* self,
                                            GHashTable* properties)
{
	gboolean _tmp0_;
	g_return_if_fail (properties != NULL);
	_tmp0_ = self->priv->_no_details;
	if (_tmp0_) {
		gchar* _tmp1_;
		GVariant* _tmp2_;
		_tmp1_ = g_strdup ("no-details");
		_tmp2_ = g_variant_new_boolean (TRUE);
		g_variant_ref_sink (_tmp2_);
		g_hash_table_insert (properties, _tmp1_, _tmp2_);
	}
}


void
unity_protocol_preview_add_properties (UnityProtocolPreview* self,
                                       GHashTable* properties)
{
	g_return_if_fail (self != NULL);
	UNITY_PROTOCOL_PREVIEW_GET_CLASS (self)->add_properties (self, properties);
}


void
unity_protocol_preview_add_update (UnityProtocolPreview* self,
                                   const gchar* property,
                                   GVariant* value)
{
	GHashTable* _tmp0_;
	g_return_if_fail (self != NULL);
	g_return_if_fail (property != NULL);
	g_return_if_fail (value != NULL);
	_tmp0_ = self->priv->_updates;
	if (_tmp0_ != NULL) {
		GHashTable* _tmp1_;
		gchar* _tmp2_;
		GVariant* _tmp3_;
		_tmp1_ = self->priv->_updates;
		_tmp2_ = g_strdup (property);
		_tmp3_ = _g_variant_ref0 (value);
		g_hash_table_insert (_tmp1_, _tmp2_, _tmp3_);
	}
}


GHashTable*
unity_protocol_preview_get_properties (UnityProtocolPreview* self)
{
	GHashTable* result = NULL;
	GHashTable* properties = NULL;
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = g_str_hash;
	_tmp1_ = g_str_equal;
	_tmp2_ = g_hash_table_new_full (_tmp0_, _tmp1_, _g_free0_, _g_variant_unref0_);
	properties = _tmp2_;
	unity_protocol_preview_add_properties (self, properties);
	result = properties;
	return result;
}


static UnityProtocolPreviewActionRaw*
_vala_array_dup3 (UnityProtocolPreviewActionRaw* self,
                  int length)
{
	UnityProtocolPreviewActionRaw* result;
	int i;
	result = g_new0 (UnityProtocolPreviewActionRaw, length);
	for (i = 0; i < length; i++) {
		UnityProtocolPreviewActionRaw _tmp0_ = {0};
		unity_protocol_preview_action_raw_copy (&self[i], &_tmp0_);
		result[i] = _tmp0_;
	}
	return result;
}


static UnityProtocolInfoHintRaw*
_vala_array_dup4 (UnityProtocolInfoHintRaw* self,
                  int length)
{
	UnityProtocolInfoHintRaw* result;
	int i;
	result = g_new0 (UnityProtocolInfoHintRaw, length);
	for (i = 0; i < length; i++) {
		UnityProtocolInfoHintRaw _tmp0_ = {0};
		unity_protocol_info_hint_raw_copy (&self[i], &_tmp0_);
		result[i] = _tmp0_;
	}
	return result;
}


static GVariant*
unity_protocol_preview_real_serialize (DeeSerializable* base)
{
	UnityProtocolPreview * self;
	GVariant* result = NULL;
	const gchar* _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_ = NULL;
	const gchar* _tmp3_;
	gchar* _tmp5_;
	const gchar* _tmp6_ = NULL;
	const gchar* _tmp7_;
	gchar* _tmp9_;
	const gchar* _tmp10_ = NULL;
	const gchar* _tmp11_;
	gchar* _tmp13_;
	const gchar* _tmp14_ = NULL;
	const gchar* _tmp15_;
	gchar* _tmp17_;
	gchar* _tmp18_ = NULL;
	GIcon* _tmp19_;
	gchar* _tmp23_;
	UnityProtocolPreviewActionRaw* _tmp24_;
	gint _tmp24__length1;
	UnityProtocolPreviewActionRaw* _tmp25_;
	gint _tmp25__length1;
	UnityProtocolInfoHintRaw* _tmp26_;
	gint _tmp26__length1;
	UnityProtocolInfoHintRaw* _tmp27_;
	gint _tmp27__length1;
	GHashTable* _tmp28_;
	GVariant* _tmp29_;
	self = (UnityProtocolPreview*) base;
	_tmp0_ = unity_protocol_preview_get_renderer_name (self);
	_tmp1_ = g_strdup (_tmp0_);
	_g_free0 (self->priv->_raw.renderer_name);
	self->priv->_raw.renderer_name = _tmp1_;
	_tmp3_ = self->priv->_title;
	if (_tmp3_ != NULL) {
		const gchar* _tmp4_;
		_tmp4_ = self->priv->_title;
		_tmp2_ = _tmp4_;
	} else {
		_tmp2_ = "";
	}
	_tmp5_ = g_strdup (_tmp2_);
	_g_free0 (self->priv->_raw.title);
	self->priv->_raw.title = _tmp5_;
	_tmp7_ = self->priv->_subtitle;
	if (_tmp7_ != NULL) {
		const gchar* _tmp8_;
		_tmp8_ = self->priv->_subtitle;
		_tmp6_ = _tmp8_;
	} else {
		_tmp6_ = "";
	}
	_tmp9_ = g_strdup (_tmp6_);
	_g_free0 (self->priv->_raw.subtitle);
	self->priv->_raw.subtitle = _tmp9_;
	_tmp11_ = self->priv->_description;
	if (_tmp11_ != NULL) {
		const gchar* _tmp12_;
		_tmp12_ = self->priv->_description;
		_tmp10_ = _tmp12_;
	} else {
		_tmp10_ = "";
	}
	_tmp13_ = g_strdup (_tmp10_);
	_g_free0 (self->priv->_raw.description);
	self->priv->_raw.description = _tmp13_;
	_tmp15_ = self->priv->_image_source_uri;
	if (_tmp15_ != NULL) {
		const gchar* _tmp16_;
		_tmp16_ = self->priv->_image_source_uri;
		_tmp14_ = _tmp16_;
	} else {
		_tmp14_ = "";
	}
	_tmp17_ = g_strdup (_tmp14_);
	_g_free0 (self->priv->_raw.image_source_uri);
	self->priv->_raw.image_source_uri = _tmp17_;
	_tmp19_ = self->priv->_image;
	if (_tmp19_ != NULL) {
		GIcon* _tmp20_;
		gchar* _tmp21_;
		_tmp20_ = self->priv->_image;
		_tmp21_ = g_icon_to_string (_tmp20_);
		_g_free0 (_tmp18_);
		_tmp18_ = _tmp21_;
	} else {
		gchar* _tmp22_;
		_tmp22_ = g_strdup ("");
		_g_free0 (_tmp18_);
		_tmp18_ = _tmp22_;
	}
	_tmp23_ = g_strdup (_tmp18_);
	_g_free0 (self->priv->_raw.image_hint);
	self->priv->_raw.image_hint = _tmp23_;
	_tmp24_ = self->priv->_actions_raw;
	_tmp24__length1 = self->priv->_actions_raw_length1;
	_tmp25_ = (_tmp24_ != NULL) ? _vala_array_dup3 (_tmp24_, _tmp24__length1) : ((gpointer) _tmp24_);
	_tmp25__length1 = _tmp24__length1;
	self->priv->_raw.actions = (_vala_UnityProtocolPreviewActionRaw_array_free (self->priv->_raw.actions, self->priv->_raw.actions_length1), NULL);
	self->priv->_raw.actions = _tmp25_;
	self->priv->_raw.actions_length1 = _tmp25__length1;
	self->priv->_raw._actions_size_ = self->priv->_raw.actions_length1;
	_tmp26_ = self->priv->_info_hints;
	_tmp26__length1 = self->priv->_info_hints_length1;
	_tmp27_ = (_tmp26_ != NULL) ? _vala_array_dup4 (_tmp26_, _tmp26__length1) : ((gpointer) _tmp26_);
	_tmp27__length1 = _tmp26__length1;
	self->priv->_raw.info_hints = (_vala_UnityProtocolInfoHintRaw_array_free (self->priv->_raw.info_hints, self->priv->_raw.info_hints_length1), NULL);
	self->priv->_raw.info_hints = _tmp27_;
	self->priv->_raw.info_hints_length1 = _tmp27__length1;
	self->priv->_raw._info_hints_size_ = self->priv->_raw.info_hints_length1;
	_tmp28_ = unity_protocol_preview_get_properties (self);
	_g_hash_table_unref0 (self->priv->_raw.hints);
	self->priv->_raw.hints = _tmp28_;
	_tmp29_ = unity_protocol_preview_raw_to_variant (&self->priv->_raw);
	result = _tmp29_;
	_g_free0 (_tmp18_);
	return result;
}


static gchar
string_get (const gchar* self,
            glong index)
{
	gchar result = '\0';
	gchar _tmp0_;
	g_return_val_if_fail (self != NULL, '\0');
	_tmp0_ = ((gchar*) self)[index];
	result = _tmp0_;
	return result;
}


GIcon*
unity_protocol_preview_string_to_icon (const gchar* s)
{
	GIcon* result = NULL;
	GError * _inner_error_ = NULL;
	g_return_val_if_fail (s != NULL, NULL);
	if (string_get (s, (glong) 0) != '\0') {
		{
			GIcon* _tmp0_ = NULL;
			GIcon* _tmp1_;
			GIcon* _tmp2_;
			_tmp1_ = g_icon_new_for_string (s, &_inner_error_);
			_tmp0_ = _tmp1_;
			if (G_UNLIKELY (_inner_error_ != NULL)) {
				goto __catch0_g_error;
			}
			_tmp2_ = _tmp0_;
			_tmp0_ = NULL;
			result = _tmp2_;
			_g_object_unref0 (_tmp0_);
			return result;
		}
		goto __finally0;
		__catch0_g_error:
		{
			GError* err = NULL;
			GError* _tmp3_;
			const gchar* _tmp4_;
			err = _inner_error_;
			_inner_error_ = NULL;
			_tmp3_ = err;
			_tmp4_ = _tmp3_->message;
			g_warning ("protocol-previews.vala:263: Failed to deserialize GIcon: %s", _tmp4_);
			result = NULL;
			_g_error_free0 (err);
			return result;
		}
		__finally0:
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
		g_clear_error (&_inner_error_);
		return NULL;
	}
	result = NULL;
	return result;
}


GIcon*
unity_protocol_preview_variant_to_icon (GVariant* v)
{
	GIcon* result = NULL;
	GIcon* _tmp0_ = NULL;
	if (v != NULL) {
		const gchar* _tmp1_;
		GIcon* _tmp2_;
		_tmp1_ = g_variant_get_string (v, NULL);
		_tmp2_ = unity_protocol_preview_string_to_icon (_tmp1_);
		_g_object_unref0 (_tmp0_);
		_tmp0_ = _tmp2_;
	} else {
		_g_object_unref0 (_tmp0_);
		_tmp0_ = NULL;
	}
	result = _tmp0_;
	return result;
}


static void
unity_protocol_preview_register_parsers (void)
{
	GTypeClass* _tmp0_;
	GTypeClass* _tmp1_;
	GTypeClass* _tmp2_;
	GTypeClass* _tmp3_;
	GTypeClass* _tmp4_;
	GTypeClass* _tmp5_;
	GTypeClass* _tmp6_;
	GTypeClass* _tmp7_;
	GTypeClass* _tmp8_;
	GTypeClass* _tmp9_;
	GTypeClass* _tmp10_;
	GTypeClass* _tmp11_;
	GTypeClass* _tmp12_;
	GTypeClass* _tmp13_;
	_tmp0_ = g_type_class_ref (UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW);
	_tmp1_ = _tmp0_;
	_g_type_class_unref0 (_tmp1_);
	_tmp2_ = g_type_class_ref (UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW);
	_tmp3_ = _tmp2_;
	_g_type_class_unref0 (_tmp3_);
	_tmp4_ = g_type_class_ref (UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW);
	_tmp5_ = _tmp4_;
	_g_type_class_unref0 (_tmp5_);
	_tmp6_ = g_type_class_ref (UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW);
	_tmp7_ = _tmp6_;
	_g_type_class_unref0 (_tmp7_);
	_tmp8_ = g_type_class_ref (UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW);
	_tmp9_ = _tmp8_;
	_g_type_class_unref0 (_tmp9_);
	_tmp10_ = g_type_class_ref (UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW);
	_tmp11_ = _tmp10_;
	_g_type_class_unref0 (_tmp11_);
	_tmp12_ = g_type_class_ref (UNITY_PROTOCOL_TYPE_SERIES_PREVIEW);
	_tmp13_ = _tmp12_;
	_g_type_class_unref0 (_tmp13_);
}


static gpointer
_g_object_ref0 (gpointer self)
{
	return self ? g_object_ref (self) : NULL;
}


UnityProtocolPreview*
unity_protocol_preview_parse (GVariant* data)
{
	UnityProtocolPreview* result = NULL;
	gboolean _tmp0_;
	GObject* result_obj = NULL;
	const gchar* renderer = NULL;
	GVariant* _tmp1_;
	GVariant* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
	GQuark _tmp8_ = 0U;
	GObject* _tmp17_;
	UnityProtocolPreview* _tmp18_;
	g_return_val_if_fail (data != NULL, NULL);
	_tmp0_ = unity_protocol_preview_parsers_registered;
	if (!_tmp0_) {
		unity_protocol_preview_register_parsers ();
		unity_protocol_preview_parsers_registered = TRUE;
	}
	result_obj = NULL;
	_tmp1_ = g_variant_get_child_value (data, (gsize) 0);
	_tmp2_ = _tmp1_;
	_tmp3_ = g_variant_get_string (_tmp2_, NULL);
	_tmp4_ = _tmp3_;
	_g_variant_unref0 (_tmp2_);
	renderer = _tmp4_;
	_tmp5_ = renderer;
	_tmp6_ = _tmp5_;
	_tmp8_ = (NULL == _tmp6_) ? 0 : g_quark_from_string (_tmp6_);
	if (_tmp8_ == g_quark_from_string (UNITY_PROTOCOL_GENERIC_PREVIEW_RENDERER_NAME)) {
		switch (0) {
			default:
			{
				GObject* _tmp9_;
				_tmp9_ = dee_serializable_parse (data, UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW);
				_g_object_unref0 (result_obj);
				result_obj = _tmp9_;
				break;
			}
		}
	} else if (_tmp8_ == g_quark_from_string (UNITY_PROTOCOL_APPLICATION_PREVIEW_RENDERER_NAME)) {
		switch (0) {
			default:
			{
				GObject* _tmp10_;
				_tmp10_ = dee_serializable_parse (data, UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW);
				_g_object_unref0 (result_obj);
				result_obj = _tmp10_;
				break;
			}
		}
	} else if (_tmp8_ == g_quark_from_string (UNITY_PROTOCOL_MUSIC_PREVIEW_RENDERER_NAME)) {
		switch (0) {
			default:
			{
				GObject* _tmp11_;
				_tmp11_ = dee_serializable_parse (data, UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW);
				_g_object_unref0 (result_obj);
				result_obj = _tmp11_;
				break;
			}
		}
	} else if (_tmp8_ == g_quark_from_string (UNITY_PROTOCOL_PAYMENT_PREVIEW_RENDERER_NAME)) {
		switch (0) {
			default:
			{
				GObject* _tmp12_;
				_tmp12_ = dee_serializable_parse (data, UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW);
				_g_object_unref0 (result_obj);
				result_obj = _tmp12_;
				break;
			}
		}
	} else if (_tmp8_ == g_quark_from_string (UNITY_PROTOCOL_MOVIE_PREVIEW_RENDERER_NAME)) {
		switch (0) {
			default:
			{
				GObject* _tmp13_;
				_tmp13_ = dee_serializable_parse (data, UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW);
				_g_object_unref0 (result_obj);
				result_obj = _tmp13_;
				break;
			}
		}
	} else if (_tmp8_ == g_quark_from_string (UNITY_PROTOCOL_SOCIAL_PREVIEW_RENDERER_NAME)) {
		switch (0) {
			default:
			{
				GObject* _tmp14_;
				_tmp14_ = dee_serializable_parse (data, UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW);
				_g_object_unref0 (result_obj);
				result_obj = _tmp14_;
				break;
			}
		}
	} else if (_tmp8_ == g_quark_from_string (UNITY_PROTOCOL_SERIES_PREVIEW_RENDERER_NAME)) {
		switch (0) {
			default:
			{
				GObject* _tmp15_;
				_tmp15_ = dee_serializable_parse (data, UNITY_PROTOCOL_TYPE_SERIES_PREVIEW);
				_g_object_unref0 (result_obj);
				result_obj = _tmp15_;
				break;
			}
		}
	} else {
		switch (0) {
			default:
			{
				const gchar* _tmp16_;
				_tmp16_ = renderer;
				g_warning ("protocol-previews.vala:321: Unknown preview renderer: %s", _tmp16_);
				break;
			}
		}
	}
	_tmp17_ = result_obj;
	_tmp18_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp17_, UNITY_PROTOCOL_TYPE_PREVIEW) ? ((UnityProtocolPreview*) _tmp17_) : NULL);
	result = _tmp18_;
	_g_object_unref0 (result_obj);
	return result;
}


gpointer
unity_protocol_preview_deserialize (GType t_type,
                                    GBoxedCopyFunc t_dup_func,
                                    GDestroyNotify t_destroy_func,
                                    GVariant* data,
                                    GHashTable* * out_properties)
{
	GHashTable* _vala_out_properties = NULL;
	gpointer result = NULL;
	UnityProtocolPreview* _result_ = NULL;
	GObject* _tmp0_;
	GObject* _tmp1_;
	UnityProtocolPreview* _tmp2_;
	UnityProtocolPreviewRaw* raw = NULL;
	UnityProtocolPreviewRaw* _tmp3_;
	UnityProtocolPreviewRaw* _tmp4_;
	GHashTable* _tmp5_;
	GHashTable* _tmp6_;
	UnityProtocolPreview* _tmp7_;
	UnityProtocolPreviewRaw* _tmp8_;
	const gchar* _tmp9_;
	UnityProtocolPreview* _tmp10_;
	UnityProtocolPreviewRaw* _tmp11_;
	const gchar* _tmp12_;
	UnityProtocolPreview* _tmp13_;
	UnityProtocolPreviewRaw* _tmp14_;
	const gchar* _tmp15_;
	UnityProtocolPreview* _tmp16_;
	UnityProtocolPreviewRaw* _tmp17_;
	const gchar* _tmp18_;
	UnityProtocolPreview* _tmp19_;
	UnityProtocolPreviewRaw* _tmp20_;
	const gchar* _tmp21_;
	GIcon* _tmp22_;
	GIcon* _tmp23_;
	UnityProtocolPreview* _tmp24_;
	UnityProtocolPreviewRaw* _tmp25_;
	UnityProtocolPreviewActionRaw* _tmp26_;
	gint _tmp26__length1;
	UnityProtocolPreview* _tmp27_;
	UnityProtocolPreviewRaw* _tmp28_;
	UnityProtocolInfoHintRaw* _tmp29_;
	gint _tmp29__length1;
	GVariant* no_det_var = NULL;
	UnityProtocolPreviewRaw* _tmp30_;
	GHashTable* _tmp31_;
	gconstpointer _tmp32_;
	GVariant* _tmp33_;
	UnityProtocolPreview* _tmp36_;
	gpointer _tmp37_;
	g_return_val_if_fail (data != NULL, NULL);
	_vala_return_val_if_fail (g_type_is_a (t_type, UNITY_PROTOCOL_TYPE_PREVIEW), "typeof (T).is_a (typeof (Preview))", NULL);
	_tmp0_ = g_object_new (t_type, NULL);
	_tmp1_ = G_IS_INITIALLY_UNOWNED (_tmp0_) ? g_object_ref_sink (_tmp0_) : _tmp0_;
	_tmp2_ = G_TYPE_CHECK_INSTANCE_TYPE (_tmp1_, UNITY_PROTOCOL_TYPE_PREVIEW) ? ((UnityProtocolPreview*) _tmp1_) : NULL;
	if (_tmp2_ == NULL) {
		_g_object_unref0 (_tmp1_);
	}
	_result_ = _tmp2_;
	_tmp3_ = unity_protocol_preview_raw_from_variant (data);
	raw = _tmp3_;
	_tmp4_ = raw;
	_tmp5_ = (*_tmp4_).hints;
	_tmp6_ = _g_hash_table_ref0 (_tmp5_);
	_g_hash_table_unref0 (_vala_out_properties);
	_vala_out_properties = _tmp6_;
	_tmp7_ = _result_;
	_tmp8_ = raw;
	_tmp9_ = (*_tmp8_).title;
	unity_protocol_preview_set_title (_tmp7_, _tmp9_);
	_tmp10_ = _result_;
	_tmp11_ = raw;
	_tmp12_ = (*_tmp11_).subtitle;
	unity_protocol_preview_set_subtitle (_tmp10_, _tmp12_);
	_tmp13_ = _result_;
	_tmp14_ = raw;
	_tmp15_ = (*_tmp14_).description;
	unity_protocol_preview_set_description (_tmp13_, _tmp15_);
	_tmp16_ = _result_;
	_tmp17_ = raw;
	_tmp18_ = (*_tmp17_).image_source_uri;
	unity_protocol_preview_set_image_source_uri (_tmp16_, _tmp18_);
	_tmp19_ = _result_;
	_tmp20_ = raw;
	_tmp21_ = (*_tmp20_).image_hint;
	_tmp22_ = unity_protocol_preview_string_to_icon (_tmp21_);
	_tmp23_ = _tmp22_;
	unity_protocol_preview_set_image (_tmp19_, _tmp23_);
	_g_object_unref0 (_tmp23_);
	_tmp24_ = _result_;
	_tmp25_ = raw;
	_tmp26_ = (*_tmp25_).actions;
	_tmp26__length1 = (*_tmp25_).actions_length1;
	(*_tmp25_).actions = NULL;
	(*_tmp25_).actions_length1 = 0;
	_tmp24_->priv->_actions_raw = (_vala_UnityProtocolPreviewActionRaw_array_free (_tmp24_->priv->_actions_raw, _tmp24_->priv->_actions_raw_length1), NULL);
	_tmp24_->priv->_actions_raw = _tmp26_;
	_tmp24_->priv->_actions_raw_length1 = _tmp26__length1;
	_tmp24_->priv->__actions_raw_size_ = _tmp24_->priv->_actions_raw_length1;
	_tmp27_ = _result_;
	_tmp28_ = raw;
	_tmp29_ = (*_tmp28_).info_hints;
	_tmp29__length1 = (*_tmp28_).info_hints_length1;
	(*_tmp28_).info_hints = NULL;
	(*_tmp28_).info_hints_length1 = 0;
	_tmp27_->priv->_info_hints = (_vala_UnityProtocolInfoHintRaw_array_free (_tmp27_->priv->_info_hints, _tmp27_->priv->_info_hints_length1), NULL);
	_tmp27_->priv->_info_hints = _tmp29_;
	_tmp27_->priv->_info_hints_length1 = _tmp29__length1;
	_tmp27_->priv->__info_hints_size_ = _tmp27_->priv->_info_hints_length1;
	_tmp30_ = raw;
	_tmp31_ = (*_tmp30_).hints;
	_tmp32_ = g_hash_table_lookup (_tmp31_, "no-details");
	no_det_var = (GVariant*) _tmp32_;
	_tmp33_ = no_det_var;
	if (_tmp33_ != NULL) {
		UnityProtocolPreview* _tmp34_;
		GVariant* _tmp35_;
		_tmp34_ = _result_;
		_tmp35_ = no_det_var;
		_tmp34_->priv->_no_details = g_variant_get_boolean (_tmp35_);
	}
	_tmp36_ = _result_;
	_tmp37_ = ((((gconstpointer) _tmp36_) != NULL) && (t_dup_func != NULL)) ? t_dup_func ((gpointer) ((gconstpointer) _tmp36_)) : ((gpointer) ((gconstpointer) _tmp36_));
	result = _tmp37_;
	_unity_protocol_preview_raw_free0 (raw);
	_g_object_unref0 (_result_);
	if (out_properties) {
		*out_properties = _vala_out_properties;
	} else {
		_g_hash_table_unref0 (_vala_out_properties);
	}
	return result;
}


void
unity_protocol_preview_checked_set (GVariant* v,
                                    GFunc f,
                                    gpointer f_target)
{
	if (v != NULL) {
		f (v, f_target);
	}
}


UnityProtocolPreview*
unity_protocol_preview_construct (GType object_type)
{
	UnityProtocolPreview * self = NULL;
	self = (UnityProtocolPreview*) g_object_new (object_type, NULL);
	return self;
}


const gchar*
unity_protocol_preview_get_title (UnityProtocolPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_title;
	result = _tmp0_;
	return result;
}


void
unity_protocol_preview_set_title (UnityProtocolPreview* self,
                                  const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_preview_get_title (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_title);
		self->priv->_title = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_TITLE_PROPERTY]);
	}
}


const gchar*
unity_protocol_preview_get_subtitle (UnityProtocolPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_subtitle;
	result = _tmp0_;
	return result;
}


void
unity_protocol_preview_set_subtitle (UnityProtocolPreview* self,
                                     const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_preview_get_subtitle (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_subtitle);
		self->priv->_subtitle = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_SUBTITLE_PROPERTY]);
	}
}


const gchar*
unity_protocol_preview_get_description (UnityProtocolPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_description;
	result = _tmp0_;
	return result;
}


void
unity_protocol_preview_set_description (UnityProtocolPreview* self,
                                        const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_preview_get_description (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_description);
		self->priv->_description = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_DESCRIPTION_PROPERTY]);
	}
}


const gchar*
unity_protocol_preview_get_image_source_uri (UnityProtocolPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_image_source_uri;
	result = _tmp0_;
	return result;
}


void
unity_protocol_preview_set_image_source_uri (UnityProtocolPreview* self,
                                             const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_preview_get_image_source_uri (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_image_source_uri);
		self->priv->_image_source_uri = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_IMAGE_SOURCE_URI_PROPERTY]);
	}
}


GIcon*
unity_protocol_preview_get_image (UnityProtocolPreview* self)
{
	GIcon* result;
	GIcon* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_image;
	result = _tmp0_;
	return result;
}


void
unity_protocol_preview_set_image (UnityProtocolPreview* self,
                                  GIcon* value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_preview_get_image (self) != value) {
		GIcon* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_image);
		self->priv->_image = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_IMAGE_PROPERTY]);
	}
}


static void
unity_protocol_preview_class_init (UnityProtocolPreviewClass * klass)
{
	unity_protocol_preview_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityProtocolPreviewPrivate));
	((UnityProtocolPreviewClass *) klass)->begin_updates = (void (*) (UnityProtocolPreview *)) unity_protocol_preview_real_begin_updates;
	((UnityProtocolPreviewClass *) klass)->end_updates_as_hashtable = (GHashTable* (*) (UnityProtocolPreview *)) unity_protocol_preview_real_end_updates_as_hashtable;
	((UnityProtocolPreviewClass *) klass)->end_updates = (GVariant* (*) (UnityProtocolPreview *)) unity_protocol_preview_real_end_updates;
	((UnityProtocolPreviewClass *) klass)->get_renderer_name = (const gchar* (*) (UnityProtocolPreview *)) unity_protocol_preview_real_get_renderer_name;
	((UnityProtocolPreviewClass *) klass)->update_property = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_preview_real_update_property;
	((UnityProtocolPreviewClass *) klass)->add_properties = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_preview_real_add_properties;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_protocol_preview_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_protocol_preview_set_property;
	G_OBJECT_CLASS (klass)->finalize = unity_protocol_preview_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PREVIEW_TITLE_PROPERTY, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_TITLE_PROPERTY] = g_param_spec_string ("title", "title", "title", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PREVIEW_SUBTITLE_PROPERTY, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_SUBTITLE_PROPERTY] = g_param_spec_string ("subtitle", "subtitle", "subtitle", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PREVIEW_DESCRIPTION_PROPERTY, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_DESCRIPTION_PROPERTY] = g_param_spec_string ("description", "description", "description", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PREVIEW_IMAGE_SOURCE_URI_PROPERTY, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_IMAGE_SOURCE_URI_PROPERTY] = g_param_spec_string ("image-source-uri", "image-source-uri", "image-source-uri", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PREVIEW_IMAGE_PROPERTY, unity_protocol_preview_properties[UNITY_PROTOCOL_PREVIEW_IMAGE_PROPERTY] = g_param_spec_object ("image", "image", "image", g_icon_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
}


static void
unity_protocol_preview_dee_serializable_interface_init (DeeSerializableIface * iface)
{
	unity_protocol_preview_dee_serializable_parent_iface = g_type_interface_peek_parent (iface);
	iface->serialize = (GVariant* (*) (DeeSerializable *)) unity_protocol_preview_real_serialize;
}


static void
unity_protocol_preview_instance_init (UnityProtocolPreview * self)
{
	self->priv = UNITY_PROTOCOL_PREVIEW_GET_PRIVATE (self);
	unity_protocol_preview_raw_init (&self->priv->_raw);
	self->priv->_actions_raw = NULL;
	self->priv->_actions_raw_length1 = 0;
	self->priv->__actions_raw_size_ = self->priv->_actions_raw_length1;
	self->priv->_info_hints = NULL;
	self->priv->_info_hints_length1 = 0;
	self->priv->__info_hints_size_ = self->priv->_info_hints_length1;
	self->priv->_updates = NULL;
	self->priv->_no_details = FALSE;
}


static void
unity_protocol_preview_finalize (GObject * obj)
{
	UnityProtocolPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview);
	_g_free0 (self->priv->_title);
	_g_free0 (self->priv->_subtitle);
	_g_free0 (self->priv->_description);
	_g_free0 (self->priv->_image_source_uri);
	_g_object_unref0 (self->priv->_image);
	unity_protocol_preview_raw_destroy (&self->priv->_raw);
	self->priv->_actions_raw = (_vala_UnityProtocolPreviewActionRaw_array_free (self->priv->_actions_raw, self->priv->_actions_raw_length1), NULL);
	self->priv->_info_hints = (_vala_UnityProtocolInfoHintRaw_array_free (self->priv->_info_hints, self->priv->_info_hints_length1), NULL);
	_g_hash_table_unref0 (self->priv->_updates);
	G_OBJECT_CLASS (unity_protocol_preview_parent_class)->finalize (obj);
}


GType
unity_protocol_preview_get_type (void)
{
	static volatile gsize unity_protocol_preview_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_preview_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityProtocolPreviewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_protocol_preview_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityProtocolPreview), 0, (GInstanceInitFunc) unity_protocol_preview_instance_init, NULL };
		static const GInterfaceInfo dee_serializable_info = { (GInterfaceInitFunc) unity_protocol_preview_dee_serializable_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		GType unity_protocol_preview_type_id;
		unity_protocol_preview_type_id = g_type_register_static (G_TYPE_OBJECT, "UnityProtocolPreview", &g_define_type_info, G_TYPE_FLAG_ABSTRACT);
		g_type_add_interface_static (unity_protocol_preview_type_id, dee_serializable_get_type (), &dee_serializable_info);
		g_once_init_leave (&unity_protocol_preview_type_id__volatile, unity_protocol_preview_type_id);
	}
	return unity_protocol_preview_type_id__volatile;
}


static void
_vala_unity_protocol_preview_get_property (GObject * object,
                                           guint property_id,
                                           GValue * value,
                                           GParamSpec * pspec)
{
	UnityProtocolPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_PREVIEW_TITLE_PROPERTY:
		g_value_set_string (value, unity_protocol_preview_get_title (self));
		break;
		case UNITY_PROTOCOL_PREVIEW_SUBTITLE_PROPERTY:
		g_value_set_string (value, unity_protocol_preview_get_subtitle (self));
		break;
		case UNITY_PROTOCOL_PREVIEW_DESCRIPTION_PROPERTY:
		g_value_set_string (value, unity_protocol_preview_get_description (self));
		break;
		case UNITY_PROTOCOL_PREVIEW_IMAGE_SOURCE_URI_PROPERTY:
		g_value_set_string (value, unity_protocol_preview_get_image_source_uri (self));
		break;
		case UNITY_PROTOCOL_PREVIEW_IMAGE_PROPERTY:
		g_value_set_object (value, unity_protocol_preview_get_image (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_protocol_preview_set_property (GObject * object,
                                           guint property_id,
                                           const GValue * value,
                                           GParamSpec * pspec)
{
	UnityProtocolPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_PREVIEW_TITLE_PROPERTY:
		unity_protocol_preview_set_title (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PREVIEW_SUBTITLE_PROPERTY:
		unity_protocol_preview_set_subtitle (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PREVIEW_DESCRIPTION_PROPERTY:
		unity_protocol_preview_set_description (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PREVIEW_IMAGE_SOURCE_URI_PROPERTY:
		unity_protocol_preview_set_image_source_uri (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PREVIEW_IMAGE_PROPERTY:
		unity_protocol_preview_set_image (self, g_value_get_object (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


UnityProtocolGenericPreview*
unity_protocol_generic_preview_construct (GType object_type)
{
	UnityProtocolGenericPreview * self = NULL;
	self = (UnityProtocolGenericPreview*) g_object_new (object_type, NULL);
	return self;
}


UnityProtocolGenericPreview*
unity_protocol_generic_preview_new (void)
{
	return unity_protocol_generic_preview_construct (UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW);
}


static const gchar*
unity_protocol_generic_preview_real_get_renderer_name (UnityProtocolPreview* base)
{
	UnityProtocolGenericPreview * self;
	const gchar* result = NULL;
	self = (UnityProtocolGenericPreview*) base;
	result = UNITY_PROTOCOL_GENERIC_PREVIEW_RENDERER_NAME;
	return result;
}


static GObject*
_unity_protocol_generic_preview___lambda4_ (GVariant* data)
{
	GObject* result = NULL;
	const gchar* renderer = NULL;
	GVariant* _tmp0_;
	GVariant* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	UnityProtocolGenericPreview* _result_ = NULL;
	gpointer _tmp5_;
	g_return_val_if_fail (data != NULL, NULL);
	_tmp0_ = g_variant_get_child_value (data, (gsize) 0);
	_tmp1_ = _tmp0_;
	_tmp2_ = g_variant_get_string (_tmp1_, NULL);
	_tmp3_ = _tmp2_;
	_g_variant_unref0 (_tmp1_);
	renderer = _tmp3_;
	_tmp4_ = renderer;
	g_warn_if_fail (g_strcmp0 (_tmp4_, UNITY_PROTOCOL_GENERIC_PREVIEW_RENDERER_NAME) == 0);
	_tmp5_ = unity_protocol_preview_deserialize (UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, data, NULL);
	_g_object_unref0 (_result_);
	_result_ = (UnityProtocolGenericPreview*) _tmp5_;
	result = (GObject*) _result_;
	return result;
}


static GObject*
__unity_protocol_generic_preview___lambda4__dee_serializable_parse_func (GVariant* data)
{
	GObject* result;
	result = _unity_protocol_generic_preview___lambda4_ (data);
	return result;
}


static void
unity_protocol_generic_preview_class_init (UnityProtocolGenericPreviewClass * klass)
{
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	unity_protocol_generic_preview_parent_class = g_type_class_peek_parent (klass);
	((UnityProtocolPreviewClass *) klass)->get_renderer_name = (const gchar* (*) (UnityProtocolPreview *)) unity_protocol_generic_preview_real_get_renderer_name;
	_tmp0_ = g_variant_type_new (UNITY_PROTOCOL_PREVIEW_RAW_SIGNATURE);
	_tmp1_ = _tmp0_;
	dee_serializable_register_parser (UNITY_PROTOCOL_TYPE_GENERIC_PREVIEW, _tmp1_, __unity_protocol_generic_preview___lambda4__dee_serializable_parse_func);
	_g_variant_type_free0 (_tmp1_);
}


static void
unity_protocol_generic_preview_instance_init (UnityProtocolGenericPreview * self)
{
}


GType
unity_protocol_generic_preview_get_type (void)
{
	static volatile gsize unity_protocol_generic_preview_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_generic_preview_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityProtocolGenericPreviewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_protocol_generic_preview_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityProtocolGenericPreview), 0, (GInstanceInitFunc) unity_protocol_generic_preview_instance_init, NULL };
		GType unity_protocol_generic_preview_type_id;
		unity_protocol_generic_preview_type_id = g_type_register_static (UNITY_PROTOCOL_TYPE_PREVIEW, "UnityProtocolGenericPreview", &g_define_type_info, 0);
		g_once_init_leave (&unity_protocol_generic_preview_type_id__volatile, unity_protocol_generic_preview_type_id);
	}
	return unity_protocol_generic_preview_type_id__volatile;
}


UnityProtocolApplicationPreview*
unity_protocol_application_preview_construct (GType object_type)
{
	UnityProtocolApplicationPreview * self = NULL;
	self = (UnityProtocolApplicationPreview*) g_object_new (object_type, NULL);
	return self;
}


UnityProtocolApplicationPreview*
unity_protocol_application_preview_new (void)
{
	return unity_protocol_application_preview_construct (UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW);
}


static const gchar*
unity_protocol_application_preview_real_get_renderer_name (UnityProtocolPreview* base)
{
	UnityProtocolApplicationPreview * self;
	const gchar* result = NULL;
	self = (UnityProtocolApplicationPreview*) base;
	result = UNITY_PROTOCOL_APPLICATION_PREVIEW_RENDERER_NAME;
	return result;
}


static GVariant*
_variant_new11 (gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new12 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new13 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new14 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new15 (gdouble value)
{
	return g_variant_ref_sink (g_variant_new_double (value));
}


static GVariant*
_variant_new16 (guint value)
{
	return g_variant_ref_sink (g_variant_new_uint32 (value));
}


static void
unity_protocol_application_preview_real_add_properties (UnityProtocolPreview* base,
                                                        GHashTable* properties)
{
	UnityProtocolApplicationPreview * self;
	GIcon* _tmp0_;
	const gchar* _tmp6_;
	const gchar* _tmp10_;
	const gchar* _tmp14_;
	gfloat _tmp18_;
	guint _tmp22_;
	self = (UnityProtocolApplicationPreview*) base;
	g_return_if_fail (properties != NULL);
	UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_application_preview_parent_class)->add_properties (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview), properties);
	_tmp0_ = self->priv->_app_icon;
	if (_tmp0_ != NULL) {
		gchar* _tmp1_;
		GIcon* _tmp2_;
		gchar* _tmp3_;
		gchar* _tmp4_;
		GVariant* _tmp5_;
		_tmp1_ = g_strdup ("application-icon");
		_tmp2_ = self->priv->_app_icon;
		_tmp3_ = g_icon_to_string (_tmp2_);
		_tmp4_ = _tmp3_;
		_tmp5_ = _variant_new11 (_tmp4_);
		g_hash_table_insert (properties, _tmp1_, _tmp5_);
		_g_free0 (_tmp4_);
	}
	_tmp6_ = self->priv->_license;
	if (_tmp6_ != NULL) {
		gchar* _tmp7_;
		const gchar* _tmp8_;
		GVariant* _tmp9_;
		_tmp7_ = g_strdup ("license");
		_tmp8_ = self->priv->_license;
		_tmp9_ = _variant_new12 (_tmp8_);
		g_hash_table_insert (properties, _tmp7_, _tmp9_);
	}
	_tmp10_ = self->priv->_copyright;
	if (_tmp10_ != NULL) {
		gchar* _tmp11_;
		const gchar* _tmp12_;
		GVariant* _tmp13_;
		_tmp11_ = g_strdup ("copyright");
		_tmp12_ = self->priv->_copyright;
		_tmp13_ = _variant_new13 (_tmp12_);
		g_hash_table_insert (properties, _tmp11_, _tmp13_);
	}
	_tmp14_ = self->priv->_last_update;
	if (_tmp14_ != NULL) {
		gchar* _tmp15_;
		const gchar* _tmp16_;
		GVariant* _tmp17_;
		_tmp15_ = g_strdup ("last-update");
		_tmp16_ = self->priv->_last_update;
		_tmp17_ = _variant_new14 (_tmp16_);
		g_hash_table_insert (properties, _tmp15_, _tmp17_);
	}
	_tmp18_ = self->priv->_rating;
	if (_tmp18_ >= (-1.0f)) {
		gchar* _tmp19_;
		gfloat _tmp20_;
		GVariant* _tmp21_;
		_tmp19_ = g_strdup ("rating");
		_tmp20_ = self->priv->_rating;
		_tmp21_ = _variant_new15 ((gdouble) _tmp20_);
		g_hash_table_insert (properties, _tmp19_, _tmp21_);
	}
	_tmp22_ = self->priv->_num_ratings;
	if (_tmp22_ > ((guint) 0)) {
		gchar* _tmp23_;
		guint _tmp24_;
		GVariant* _tmp25_;
		_tmp23_ = g_strdup ("num-ratings");
		_tmp24_ = self->priv->_num_ratings;
		_tmp25_ = _variant_new16 (_tmp24_);
		g_hash_table_insert (properties, _tmp23_, _tmp25_);
	}
}


GIcon*
unity_protocol_application_preview_get_app_icon (UnityProtocolApplicationPreview* self)
{
	GIcon* result;
	GIcon* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_app_icon;
	result = _tmp0_;
	return result;
}


void
unity_protocol_application_preview_set_app_icon (UnityProtocolApplicationPreview* self,
                                                 GIcon* value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_application_preview_get_app_icon (self) != value) {
		GIcon* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_app_icon);
		self->priv->_app_icon = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_APP_ICON_PROPERTY]);
	}
}


const gchar*
unity_protocol_application_preview_get_license (UnityProtocolApplicationPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_license;
	result = _tmp0_;
	return result;
}


void
unity_protocol_application_preview_set_license (UnityProtocolApplicationPreview* self,
                                                const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_application_preview_get_license (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_license);
		self->priv->_license = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_LICENSE_PROPERTY]);
	}
}


const gchar*
unity_protocol_application_preview_get_copyright (UnityProtocolApplicationPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_copyright;
	result = _tmp0_;
	return result;
}


void
unity_protocol_application_preview_set_copyright (UnityProtocolApplicationPreview* self,
                                                  const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_application_preview_get_copyright (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_copyright);
		self->priv->_copyright = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_COPYRIGHT_PROPERTY]);
	}
}


const gchar*
unity_protocol_application_preview_get_last_update (UnityProtocolApplicationPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_last_update;
	result = _tmp0_;
	return result;
}


void
unity_protocol_application_preview_set_last_update (UnityProtocolApplicationPreview* self,
                                                    const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_application_preview_get_last_update (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_last_update);
		self->priv->_last_update = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_LAST_UPDATE_PROPERTY]);
	}
}


gfloat
unity_protocol_application_preview_get_rating (UnityProtocolApplicationPreview* self)
{
	gfloat result;
	gfloat _tmp0_;
	g_return_val_if_fail (self != NULL, 0.0F);
	_tmp0_ = self->priv->_rating;
	result = _tmp0_;
	return result;
}


void
unity_protocol_application_preview_set_rating (UnityProtocolApplicationPreview* self,
                                               gfloat value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_application_preview_get_rating (self) != value) {
		self->priv->_rating = value;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_RATING_PROPERTY]);
	}
}


guint
unity_protocol_application_preview_get_num_ratings (UnityProtocolApplicationPreview* self)
{
	guint result;
	guint _tmp0_;
	g_return_val_if_fail (self != NULL, 0U);
	_tmp0_ = self->priv->_num_ratings;
	result = _tmp0_;
	return result;
}


void
unity_protocol_application_preview_set_num_ratings (UnityProtocolApplicationPreview* self,
                                                    guint value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_application_preview_get_num_ratings (self) != value) {
		self->priv->_num_ratings = value;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_NUM_RATINGS_PROPERTY]);
	}
}


static Block1Data*
block1_data_ref (Block1Data* _data1_)
{
	g_atomic_int_inc (&_data1_->_ref_count_);
	return _data1_;
}


static void
block1_data_unref (void * _userdata_)
{
	Block1Data* _data1_;
	_data1_ = (Block1Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data1_->_ref_count_)) {
		_g_object_unref0 (_data1_->_result_);
		g_slice_free (Block1Data, _data1_);
	}
}


static void
__lambda6_ (Block1Data* _data1_,
            GVariant* v)
{
	UnityProtocolApplicationPreview* _tmp0_;
	GIcon* _tmp1_;
	GIcon* _tmp2_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data1_->_result_;
	_tmp1_ = unity_protocol_preview_variant_to_icon (v);
	_tmp2_ = _tmp1_;
	unity_protocol_application_preview_set_app_icon (_tmp0_, _tmp2_);
	_g_object_unref0 (_tmp2_);
}


static void
___lambda6__gfunc (gconstpointer data,
                   gpointer self)
{
	__lambda6_ (self, (GVariant*) data);
}


static void
__lambda7_ (Block1Data* _data1_,
            GVariant* v)
{
	UnityProtocolApplicationPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data1_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_application_preview_set_license (_tmp0_, _tmp1_);
}


static void
___lambda7__gfunc (gconstpointer data,
                   gpointer self)
{
	__lambda7_ (self, (GVariant*) data);
}


static void
__lambda8_ (Block1Data* _data1_,
            GVariant* v)
{
	UnityProtocolApplicationPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data1_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_application_preview_set_copyright (_tmp0_, _tmp1_);
}


static void
___lambda8__gfunc (gconstpointer data,
                   gpointer self)
{
	__lambda8_ (self, (GVariant*) data);
}


static void
__lambda9_ (Block1Data* _data1_,
            GVariant* v)
{
	UnityProtocolApplicationPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data1_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_application_preview_set_last_update (_tmp0_, _tmp1_);
}


static void
___lambda9__gfunc (gconstpointer data,
                   gpointer self)
{
	__lambda9_ (self, (GVariant*) data);
}


static void
__lambda10_ (Block1Data* _data1_,
             GVariant* v)
{
	UnityProtocolApplicationPreview* _tmp0_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data1_->_result_;
	unity_protocol_application_preview_set_rating (_tmp0_, (gfloat) g_variant_get_double (v));
}


static void
___lambda10__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda10_ (self, (GVariant*) data);
}


static void
__lambda11_ (Block1Data* _data1_,
             GVariant* v)
{
	UnityProtocolApplicationPreview* _tmp0_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data1_->_result_;
	unity_protocol_application_preview_set_num_ratings (_tmp0_, (guint) g_variant_get_uint32 (v));
}


static void
___lambda11__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda11_ (self, (GVariant*) data);
}


static GObject*
_unity_protocol_application_preview___lambda5_ (GVariant* data)
{
	GObject* result = NULL;
	Block1Data* _data1_;
	const gchar* renderer = NULL;
	GVariant* _tmp0_;
	GVariant* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	GHashTable* properties = NULL;
	GHashTable* _tmp5_ = NULL;
	gpointer _tmp6_;
	GHashTable* _tmp7_;
	gconstpointer _tmp8_;
	GHashTable* _tmp9_;
	gconstpointer _tmp10_;
	GHashTable* _tmp11_;
	gconstpointer _tmp12_;
	GHashTable* _tmp13_;
	gconstpointer _tmp14_;
	GHashTable* _tmp15_;
	gconstpointer _tmp16_;
	GHashTable* _tmp17_;
	gconstpointer _tmp18_;
	UnityProtocolApplicationPreview* _tmp19_;
	GObject* _tmp20_;
	g_return_val_if_fail (data != NULL, NULL);
	_data1_ = g_slice_new0 (Block1Data);
	_data1_->_ref_count_ = 1;
	_tmp0_ = g_variant_get_child_value (data, (gsize) 0);
	_tmp1_ = _tmp0_;
	_tmp2_ = g_variant_get_string (_tmp1_, NULL);
	_tmp3_ = _tmp2_;
	_g_variant_unref0 (_tmp1_);
	renderer = _tmp3_;
	_tmp4_ = renderer;
	g_warn_if_fail (g_strcmp0 (_tmp4_, UNITY_PROTOCOL_APPLICATION_PREVIEW_RENDERER_NAME) == 0);
	_tmp6_ = unity_protocol_preview_deserialize (UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, data, &_tmp5_);
	_g_hash_table_unref0 (properties);
	properties = _tmp5_;
	_data1_->_result_ = (UnityProtocolApplicationPreview*) _tmp6_;
	_tmp7_ = properties;
	_tmp8_ = g_hash_table_lookup (_tmp7_, "application-icon");
	unity_protocol_preview_checked_set ((GVariant*) _tmp8_, ___lambda6__gfunc, _data1_);
	_tmp9_ = properties;
	_tmp10_ = g_hash_table_lookup (_tmp9_, "license");
	unity_protocol_preview_checked_set ((GVariant*) _tmp10_, ___lambda7__gfunc, _data1_);
	_tmp11_ = properties;
	_tmp12_ = g_hash_table_lookup (_tmp11_, "copyright");
	unity_protocol_preview_checked_set ((GVariant*) _tmp12_, ___lambda8__gfunc, _data1_);
	_tmp13_ = properties;
	_tmp14_ = g_hash_table_lookup (_tmp13_, "last-update");
	unity_protocol_preview_checked_set ((GVariant*) _tmp14_, ___lambda9__gfunc, _data1_);
	_tmp15_ = properties;
	_tmp16_ = g_hash_table_lookup (_tmp15_, "rating");
	unity_protocol_preview_checked_set ((GVariant*) _tmp16_, ___lambda10__gfunc, _data1_);
	_tmp17_ = properties;
	_tmp18_ = g_hash_table_lookup (_tmp17_, "num-ratings");
	unity_protocol_preview_checked_set ((GVariant*) _tmp18_, ___lambda11__gfunc, _data1_);
	_tmp19_ = _data1_->_result_;
	_tmp20_ = _g_object_ref0 ((GObject*) _tmp19_);
	result = _tmp20_;
	_g_hash_table_unref0 (properties);
	block1_data_unref (_data1_);
	_data1_ = NULL;
	return result;
}


static GObject*
__unity_protocol_application_preview___lambda5__dee_serializable_parse_func (GVariant* data)
{
	GObject* result;
	result = _unity_protocol_application_preview___lambda5_ (data);
	return result;
}


static void
unity_protocol_application_preview_class_init (UnityProtocolApplicationPreviewClass * klass)
{
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	unity_protocol_application_preview_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityProtocolApplicationPreviewPrivate));
	((UnityProtocolPreviewClass *) klass)->get_renderer_name = (const gchar* (*) (UnityProtocolPreview *)) unity_protocol_application_preview_real_get_renderer_name;
	((UnityProtocolPreviewClass *) klass)->add_properties = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_application_preview_real_add_properties;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_protocol_application_preview_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_protocol_application_preview_set_property;
	G_OBJECT_CLASS (klass)->finalize = unity_protocol_application_preview_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_APPLICATION_PREVIEW_APP_ICON_PROPERTY, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_APP_ICON_PROPERTY] = g_param_spec_object ("app-icon", "app-icon", "app-icon", g_icon_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_APPLICATION_PREVIEW_LICENSE_PROPERTY, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_LICENSE_PROPERTY] = g_param_spec_string ("license", "license", "license", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_APPLICATION_PREVIEW_COPYRIGHT_PROPERTY, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_COPYRIGHT_PROPERTY] = g_param_spec_string ("copyright", "copyright", "copyright", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_APPLICATION_PREVIEW_LAST_UPDATE_PROPERTY, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_LAST_UPDATE_PROPERTY] = g_param_spec_string ("last-update", "last-update", "last-update", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_APPLICATION_PREVIEW_RATING_PROPERTY, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_RATING_PROPERTY] = g_param_spec_float ("rating", "rating", "rating", -G_MAXFLOAT, G_MAXFLOAT, 0.0F, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_APPLICATION_PREVIEW_NUM_RATINGS_PROPERTY, unity_protocol_application_preview_properties[UNITY_PROTOCOL_APPLICATION_PREVIEW_NUM_RATINGS_PROPERTY] = g_param_spec_uint ("num-ratings", "num-ratings", "num-ratings", 0, G_MAXUINT, 0U, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	_tmp0_ = g_variant_type_new (UNITY_PROTOCOL_PREVIEW_RAW_SIGNATURE);
	_tmp1_ = _tmp0_;
	dee_serializable_register_parser (UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, _tmp1_, __unity_protocol_application_preview___lambda5__dee_serializable_parse_func);
	_g_variant_type_free0 (_tmp1_);
}


static void
unity_protocol_application_preview_instance_init (UnityProtocolApplicationPreview * self)
{
	self->priv = UNITY_PROTOCOL_APPLICATION_PREVIEW_GET_PRIVATE (self);
}


static void
unity_protocol_application_preview_finalize (GObject * obj)
{
	UnityProtocolApplicationPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, UnityProtocolApplicationPreview);
	_g_object_unref0 (self->priv->_app_icon);
	_g_free0 (self->priv->_license);
	_g_free0 (self->priv->_copyright);
	_g_free0 (self->priv->_last_update);
	G_OBJECT_CLASS (unity_protocol_application_preview_parent_class)->finalize (obj);
}


GType
unity_protocol_application_preview_get_type (void)
{
	static volatile gsize unity_protocol_application_preview_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_application_preview_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityProtocolApplicationPreviewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_protocol_application_preview_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityProtocolApplicationPreview), 0, (GInstanceInitFunc) unity_protocol_application_preview_instance_init, NULL };
		GType unity_protocol_application_preview_type_id;
		unity_protocol_application_preview_type_id = g_type_register_static (UNITY_PROTOCOL_TYPE_PREVIEW, "UnityProtocolApplicationPreview", &g_define_type_info, 0);
		g_once_init_leave (&unity_protocol_application_preview_type_id__volatile, unity_protocol_application_preview_type_id);
	}
	return unity_protocol_application_preview_type_id__volatile;
}


static void
_vala_unity_protocol_application_preview_get_property (GObject * object,
                                                       guint property_id,
                                                       GValue * value,
                                                       GParamSpec * pspec)
{
	UnityProtocolApplicationPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, UnityProtocolApplicationPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_APP_ICON_PROPERTY:
		g_value_set_object (value, unity_protocol_application_preview_get_app_icon (self));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_LICENSE_PROPERTY:
		g_value_set_string (value, unity_protocol_application_preview_get_license (self));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_COPYRIGHT_PROPERTY:
		g_value_set_string (value, unity_protocol_application_preview_get_copyright (self));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_LAST_UPDATE_PROPERTY:
		g_value_set_string (value, unity_protocol_application_preview_get_last_update (self));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_RATING_PROPERTY:
		g_value_set_float (value, unity_protocol_application_preview_get_rating (self));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_NUM_RATINGS_PROPERTY:
		g_value_set_uint (value, unity_protocol_application_preview_get_num_ratings (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_protocol_application_preview_set_property (GObject * object,
                                                       guint property_id,
                                                       const GValue * value,
                                                       GParamSpec * pspec)
{
	UnityProtocolApplicationPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_APPLICATION_PREVIEW, UnityProtocolApplicationPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_APP_ICON_PROPERTY:
		unity_protocol_application_preview_set_app_icon (self, g_value_get_object (value));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_LICENSE_PROPERTY:
		unity_protocol_application_preview_set_license (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_COPYRIGHT_PROPERTY:
		unity_protocol_application_preview_set_copyright (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_LAST_UPDATE_PROPERTY:
		unity_protocol_application_preview_set_last_update (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_RATING_PROPERTY:
		unity_protocol_application_preview_set_rating (self, g_value_get_float (value));
		break;
		case UNITY_PROTOCOL_APPLICATION_PREVIEW_NUM_RATINGS_PROPERTY:
		unity_protocol_application_preview_set_num_ratings (self, g_value_get_uint (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


GType
unity_protocol_play_state_get_type (void)
{
	static volatile gsize unity_protocol_play_state_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_play_state_type_id__volatile)) {
		static const GEnumValue values[] = {{UNITY_PROTOCOL_PLAY_STATE_STOPPED, "UNITY_PROTOCOL_PLAY_STATE_STOPPED", "stopped"}, {UNITY_PROTOCOL_PLAY_STATE_PLAYING, "UNITY_PROTOCOL_PLAY_STATE_PLAYING", "playing"}, {UNITY_PROTOCOL_PLAY_STATE_PAUSED, "UNITY_PROTOCOL_PLAY_STATE_PAUSED", "paused"}, {0, NULL, NULL}};
		GType unity_protocol_play_state_type_id;
		unity_protocol_play_state_type_id = g_enum_register_static ("UnityProtocolPlayState", values);
		g_once_init_leave (&unity_protocol_play_state_type_id__volatile, unity_protocol_play_state_type_id);
	}
	return unity_protocol_play_state_type_id__volatile;
}


UnityProtocolMusicPreview*
unity_protocol_music_preview_construct (GType object_type)
{
	UnityProtocolMusicPreview * self = NULL;
	self = (UnityProtocolMusicPreview*) g_object_new (object_type, NULL);
	return self;
}


UnityProtocolMusicPreview*
unity_protocol_music_preview_new (void)
{
	return unity_protocol_music_preview_construct (UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW);
}


static const gchar*
unity_protocol_music_preview_real_get_renderer_name (UnityProtocolPreview* base)
{
	UnityProtocolMusicPreview * self;
	const gchar* result = NULL;
	self = (UnityProtocolMusicPreview*) base;
	result = UNITY_PROTOCOL_MUSIC_PREVIEW_RENDERER_NAME;
	return result;
}


static GVariant*
_variant_new17 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new18 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static void
unity_protocol_music_preview_real_add_properties (UnityProtocolPreview* base,
                                                  GHashTable* properties)
{
	UnityProtocolMusicPreview * self;
	const gchar* _tmp0_;
	const gchar* _tmp4_;
	DeeSerializableModel* _tmp8_;
	self = (UnityProtocolMusicPreview*) base;
	g_return_if_fail (properties != NULL);
	UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_music_preview_parent_class)->add_properties (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview), properties);
	_tmp0_ = self->priv->_track_data_swarm_name;
	if (_tmp0_ != NULL) {
		gchar* _tmp1_;
		const gchar* _tmp2_;
		GVariant* _tmp3_;
		_tmp1_ = g_strdup ("track-data-swarm-name");
		_tmp2_ = self->priv->_track_data_swarm_name;
		_tmp3_ = _variant_new17 (_tmp2_);
		g_hash_table_insert (properties, _tmp1_, _tmp3_);
	}
	_tmp4_ = self->priv->_track_data_address;
	if (_tmp4_ != NULL) {
		gchar* _tmp5_;
		const gchar* _tmp6_;
		GVariant* _tmp7_;
		_tmp5_ = g_strdup ("track-data-address");
		_tmp6_ = self->priv->_track_data_address;
		_tmp7_ = _variant_new18 (_tmp6_);
		g_hash_table_insert (properties, _tmp5_, _tmp7_);
	}
	_tmp8_ = self->priv->_track_model;
	if (_tmp8_ != NULL) {
		gchar* _tmp9_;
		DeeSerializableModel* _tmp10_;
		GVariant* _tmp11_;
		_tmp9_ = g_strdup ("track-model");
		_tmp10_ = self->priv->_track_model;
		_tmp11_ = dee_serializable_serialize ((DeeSerializable*) _tmp10_);
		g_hash_table_insert (properties, _tmp9_, _tmp11_);
	}
}


const gchar*
unity_protocol_music_preview_get_track_data_swarm_name (UnityProtocolMusicPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_track_data_swarm_name;
	result = _tmp0_;
	return result;
}


void
unity_protocol_music_preview_set_track_data_swarm_name (UnityProtocolMusicPreview* self,
                                                        const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_music_preview_get_track_data_swarm_name (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_track_data_swarm_name);
		self->priv->_track_data_swarm_name = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_music_preview_properties[UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_SWARM_NAME_PROPERTY]);
	}
}


const gchar*
unity_protocol_music_preview_get_track_data_address (UnityProtocolMusicPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_track_data_address;
	result = _tmp0_;
	return result;
}


void
unity_protocol_music_preview_set_track_data_address (UnityProtocolMusicPreview* self,
                                                     const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_music_preview_get_track_data_address (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_track_data_address);
		self->priv->_track_data_address = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_music_preview_properties[UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_ADDRESS_PROPERTY]);
	}
}


DeeSerializableModel*
unity_protocol_music_preview_get_track_model (UnityProtocolMusicPreview* self)
{
	DeeSerializableModel* result;
	DeeSerializableModel* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_track_model;
	result = _tmp0_;
	return result;
}


void
unity_protocol_music_preview_set_track_model (UnityProtocolMusicPreview* self,
                                              DeeSerializableModel* value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_music_preview_get_track_model (self) != value) {
		DeeSerializableModel* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_track_model);
		self->priv->_track_model = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_music_preview_properties[UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_MODEL_PROPERTY]);
	}
}


static Block2Data*
block2_data_ref (Block2Data* _data2_)
{
	g_atomic_int_inc (&_data2_->_ref_count_);
	return _data2_;
}


static void
block2_data_unref (void * _userdata_)
{
	Block2Data* _data2_;
	_data2_ = (Block2Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data2_->_ref_count_)) {
		_g_object_unref0 (_data2_->_result_);
		g_slice_free (Block2Data, _data2_);
	}
}


static void
__lambda13_ (Block2Data* _data2_,
             GVariant* v)
{
	UnityProtocolMusicPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data2_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_music_preview_set_track_data_swarm_name (_tmp0_, _tmp1_);
}


static void
___lambda13__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda13_ (self, (GVariant*) data);
}


static void
__lambda14_ (Block2Data* _data2_,
             GVariant* v)
{
	UnityProtocolMusicPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data2_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_music_preview_set_track_data_address (_tmp0_, _tmp1_);
}


static void
___lambda14__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda14_ (self, (GVariant*) data);
}


static void
__lambda15_ (Block2Data* _data2_,
             GVariant* v)
{
	GObject* model = NULL;
	GObject* _tmp0_;
	UnityProtocolMusicPreview* _tmp1_;
	GObject* _tmp2_;
	g_return_if_fail (v != NULL);
	_tmp0_ = dee_serializable_parse (v, dee_sequence_model_get_type ());
	model = _tmp0_;
	_tmp1_ = _data2_->_result_;
	_tmp2_ = model;
	unity_protocol_music_preview_set_track_model (_tmp1_, G_TYPE_CHECK_INSTANCE_TYPE (_tmp2_, dee_serializable_model_get_type ()) ? ((DeeSerializableModel*) _tmp2_) : NULL);
	_g_object_unref0 (model);
}


static void
___lambda15__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda15_ (self, (GVariant*) data);
}


static GObject*
_unity_protocol_music_preview___lambda12_ (GVariant* data)
{
	GObject* result = NULL;
	Block2Data* _data2_;
	const gchar* renderer = NULL;
	GVariant* _tmp0_;
	GVariant* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	GHashTable* properties = NULL;
	GHashTable* _tmp5_ = NULL;
	gpointer _tmp6_;
	GHashTable* _tmp7_;
	gconstpointer _tmp8_;
	GHashTable* _tmp9_;
	gconstpointer _tmp10_;
	GHashTable* _tmp11_;
	gconstpointer _tmp12_;
	UnityProtocolMusicPreview* _tmp13_;
	GObject* _tmp14_;
	g_return_val_if_fail (data != NULL, NULL);
	_data2_ = g_slice_new0 (Block2Data);
	_data2_->_ref_count_ = 1;
	_tmp0_ = g_variant_get_child_value (data, (gsize) 0);
	_tmp1_ = _tmp0_;
	_tmp2_ = g_variant_get_string (_tmp1_, NULL);
	_tmp3_ = _tmp2_;
	_g_variant_unref0 (_tmp1_);
	renderer = _tmp3_;
	_tmp4_ = renderer;
	g_warn_if_fail (g_strcmp0 (_tmp4_, UNITY_PROTOCOL_MUSIC_PREVIEW_RENDERER_NAME) == 0);
	_tmp6_ = unity_protocol_preview_deserialize (UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, data, &_tmp5_);
	_g_hash_table_unref0 (properties);
	properties = _tmp5_;
	_data2_->_result_ = (UnityProtocolMusicPreview*) _tmp6_;
	_tmp7_ = properties;
	_tmp8_ = g_hash_table_lookup (_tmp7_, "track-data-swarm-name");
	unity_protocol_preview_checked_set ((GVariant*) _tmp8_, ___lambda13__gfunc, _data2_);
	_tmp9_ = properties;
	_tmp10_ = g_hash_table_lookup (_tmp9_, "track-data-address");
	unity_protocol_preview_checked_set ((GVariant*) _tmp10_, ___lambda14__gfunc, _data2_);
	_tmp11_ = properties;
	_tmp12_ = g_hash_table_lookup (_tmp11_, "track-model");
	unity_protocol_preview_checked_set ((GVariant*) _tmp12_, ___lambda15__gfunc, _data2_);
	_tmp13_ = _data2_->_result_;
	_tmp14_ = _g_object_ref0 ((GObject*) _tmp13_);
	result = _tmp14_;
	_g_hash_table_unref0 (properties);
	block2_data_unref (_data2_);
	_data2_ = NULL;
	return result;
}


static GObject*
__unity_protocol_music_preview___lambda12__dee_serializable_parse_func (GVariant* data)
{
	GObject* result;
	result = _unity_protocol_music_preview___lambda12_ (data);
	return result;
}


static void
unity_protocol_music_preview_class_init (UnityProtocolMusicPreviewClass * klass)
{
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	unity_protocol_music_preview_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityProtocolMusicPreviewPrivate));
	((UnityProtocolPreviewClass *) klass)->get_renderer_name = (const gchar* (*) (UnityProtocolPreview *)) unity_protocol_music_preview_real_get_renderer_name;
	((UnityProtocolPreviewClass *) klass)->add_properties = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_music_preview_real_add_properties;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_protocol_music_preview_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_protocol_music_preview_set_property;
	G_OBJECT_CLASS (klass)->finalize = unity_protocol_music_preview_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_SWARM_NAME_PROPERTY, unity_protocol_music_preview_properties[UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_SWARM_NAME_PROPERTY] = g_param_spec_string ("track-data-swarm-name", "track-data-swarm-name", "track-data-swarm-name", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_ADDRESS_PROPERTY, unity_protocol_music_preview_properties[UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_ADDRESS_PROPERTY] = g_param_spec_string ("track-data-address", "track-data-address", "track-data-address", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_MODEL_PROPERTY, unity_protocol_music_preview_properties[UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_MODEL_PROPERTY] = g_param_spec_object ("track-model", "track-model", "track-model", dee_serializable_model_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	_tmp0_ = g_variant_type_new (UNITY_PROTOCOL_PREVIEW_RAW_SIGNATURE);
	_tmp1_ = _tmp0_;
	dee_serializable_register_parser (UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, _tmp1_, __unity_protocol_music_preview___lambda12__dee_serializable_parse_func);
	_g_variant_type_free0 (_tmp1_);
}


static void
unity_protocol_music_preview_instance_init (UnityProtocolMusicPreview * self)
{
	self->priv = UNITY_PROTOCOL_MUSIC_PREVIEW_GET_PRIVATE (self);
}


static void
unity_protocol_music_preview_finalize (GObject * obj)
{
	UnityProtocolMusicPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, UnityProtocolMusicPreview);
	_g_free0 (self->priv->_track_data_swarm_name);
	_g_free0 (self->priv->_track_data_address);
	_g_object_unref0 (self->priv->_track_model);
	G_OBJECT_CLASS (unity_protocol_music_preview_parent_class)->finalize (obj);
}


GType
unity_protocol_music_preview_get_type (void)
{
	static volatile gsize unity_protocol_music_preview_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_music_preview_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityProtocolMusicPreviewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_protocol_music_preview_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityProtocolMusicPreview), 0, (GInstanceInitFunc) unity_protocol_music_preview_instance_init, NULL };
		GType unity_protocol_music_preview_type_id;
		unity_protocol_music_preview_type_id = g_type_register_static (UNITY_PROTOCOL_TYPE_PREVIEW, "UnityProtocolMusicPreview", &g_define_type_info, 0);
		g_once_init_leave (&unity_protocol_music_preview_type_id__volatile, unity_protocol_music_preview_type_id);
	}
	return unity_protocol_music_preview_type_id__volatile;
}


static void
_vala_unity_protocol_music_preview_get_property (GObject * object,
                                                 guint property_id,
                                                 GValue * value,
                                                 GParamSpec * pspec)
{
	UnityProtocolMusicPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, UnityProtocolMusicPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_SWARM_NAME_PROPERTY:
		g_value_set_string (value, unity_protocol_music_preview_get_track_data_swarm_name (self));
		break;
		case UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_ADDRESS_PROPERTY:
		g_value_set_string (value, unity_protocol_music_preview_get_track_data_address (self));
		break;
		case UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_MODEL_PROPERTY:
		g_value_set_object (value, unity_protocol_music_preview_get_track_model (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_protocol_music_preview_set_property (GObject * object,
                                                 guint property_id,
                                                 const GValue * value,
                                                 GParamSpec * pspec)
{
	UnityProtocolMusicPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_MUSIC_PREVIEW, UnityProtocolMusicPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_SWARM_NAME_PROPERTY:
		unity_protocol_music_preview_set_track_data_swarm_name (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_DATA_ADDRESS_PROPERTY:
		unity_protocol_music_preview_set_track_data_address (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_MUSIC_PREVIEW_TRACK_MODEL_PROPERTY:
		unity_protocol_music_preview_set_track_model (self, g_value_get_object (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


GType
unity_protocol_preview_payment_type_get_type (void)
{
	static volatile gsize unity_protocol_preview_payment_type_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_preview_payment_type_type_id__volatile)) {
		static const GEnumValue values[] = {{UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_APPLICATION, "UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_APPLICATION", "application"}, {UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_MUSIC, "UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_MUSIC", "music"}, {UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_ERROR, "UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_ERROR", "error"}, {0, NULL, NULL}};
		GType unity_protocol_preview_payment_type_type_id;
		unity_protocol_preview_payment_type_type_id = g_enum_register_static ("UnityProtocolPreviewPaymentType", values);
		g_once_init_leave (&unity_protocol_preview_payment_type_type_id__volatile, unity_protocol_preview_payment_type_type_id);
	}
	return unity_protocol_preview_payment_type_type_id__volatile;
}


UnityProtocolPaymentPreview*
unity_protocol_payment_preview_construct (GType object_type)
{
	UnityProtocolPaymentPreview * self = NULL;
	self = (UnityProtocolPaymentPreview*) g_object_new (object_type, NULL);
	return self;
}


UnityProtocolPaymentPreview*
unity_protocol_payment_preview_new (void)
{
	return unity_protocol_payment_preview_construct (UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW);
}


static const gchar*
unity_protocol_payment_preview_real_get_renderer_name (UnityProtocolPreview* base)
{
	UnityProtocolPaymentPreview * self;
	const gchar* result = NULL;
	self = (UnityProtocolPaymentPreview*) base;
	result = UNITY_PROTOCOL_PAYMENT_PREVIEW_RENDERER_NAME;
	return result;
}


static GVariant*
_variant_new19 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new20 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new21 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new22 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new23 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new24 (UnityProtocolPreviewPaymentType value)
{
	return g_variant_ref_sink (g_variant_new_int32 (value));
}


static void
unity_protocol_payment_preview_real_add_properties (UnityProtocolPreview* base,
                                                    GHashTable* properties)
{
	UnityProtocolPaymentPreview * self;
	const gchar* _tmp0_;
	const gchar* _tmp4_;
	const gchar* _tmp8_;
	const gchar* _tmp12_;
	const gchar* _tmp16_;
	gchar* _tmp20_;
	UnityProtocolPreviewPaymentType _tmp21_;
	GVariant* _tmp22_;
	self = (UnityProtocolPaymentPreview*) base;
	g_return_if_fail (properties != NULL);
	UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_payment_preview_parent_class)->add_properties (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview), properties);
	_tmp0_ = self->priv->_header;
	if (_tmp0_ != NULL) {
		gchar* _tmp1_;
		const gchar* _tmp2_;
		GVariant* _tmp3_;
		_tmp1_ = g_strdup ("header");
		_tmp2_ = self->priv->_header;
		_tmp3_ = _variant_new19 (_tmp2_);
		g_hash_table_insert (properties, _tmp1_, _tmp3_);
	}
	_tmp4_ = self->priv->_email;
	if (_tmp4_ != NULL) {
		gchar* _tmp5_;
		const gchar* _tmp6_;
		GVariant* _tmp7_;
		_tmp5_ = g_strdup ("email");
		_tmp6_ = self->priv->_email;
		_tmp7_ = _variant_new20 (_tmp6_);
		g_hash_table_insert (properties, _tmp5_, _tmp7_);
	}
	_tmp8_ = self->priv->_payment_method;
	if (_tmp8_ != NULL) {
		gchar* _tmp9_;
		const gchar* _tmp10_;
		GVariant* _tmp11_;
		_tmp9_ = g_strdup ("payment-method");
		_tmp10_ = self->priv->_payment_method;
		_tmp11_ = _variant_new21 (_tmp10_);
		g_hash_table_insert (properties, _tmp9_, _tmp11_);
	}
	_tmp12_ = self->priv->_purchase_prize;
	if (_tmp12_ != NULL) {
		gchar* _tmp13_;
		const gchar* _tmp14_;
		GVariant* _tmp15_;
		_tmp13_ = g_strdup ("purchase-prize");
		_tmp14_ = self->priv->_purchase_prize;
		_tmp15_ = _variant_new22 (_tmp14_);
		g_hash_table_insert (properties, _tmp13_, _tmp15_);
	}
	_tmp16_ = self->priv->_purchase_type;
	if (_tmp16_ != NULL) {
		gchar* _tmp17_;
		const gchar* _tmp18_;
		GVariant* _tmp19_;
		_tmp17_ = g_strdup ("purchase-type");
		_tmp18_ = self->priv->_purchase_type;
		_tmp19_ = _variant_new23 (_tmp18_);
		g_hash_table_insert (properties, _tmp17_, _tmp19_);
	}
	_tmp20_ = g_strdup ("preview-type");
	_tmp21_ = self->priv->_preview_type;
	_tmp22_ = _variant_new24 (_tmp21_);
	g_hash_table_insert (properties, _tmp20_, _tmp22_);
}


const gchar*
unity_protocol_payment_preview_get_header (UnityProtocolPaymentPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_header;
	result = _tmp0_;
	return result;
}


void
unity_protocol_payment_preview_set_header (UnityProtocolPaymentPreview* self,
                                           const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_payment_preview_get_header (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_header);
		self->priv->_header = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_HEADER_PROPERTY]);
	}
}


const gchar*
unity_protocol_payment_preview_get_email (UnityProtocolPaymentPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_email;
	result = _tmp0_;
	return result;
}


void
unity_protocol_payment_preview_set_email (UnityProtocolPaymentPreview* self,
                                          const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_payment_preview_get_email (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_email);
		self->priv->_email = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_EMAIL_PROPERTY]);
	}
}


const gchar*
unity_protocol_payment_preview_get_payment_method (UnityProtocolPaymentPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_payment_method;
	result = _tmp0_;
	return result;
}


void
unity_protocol_payment_preview_set_payment_method (UnityProtocolPaymentPreview* self,
                                                   const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_payment_preview_get_payment_method (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_payment_method);
		self->priv->_payment_method = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_PAYMENT_METHOD_PROPERTY]);
	}
}


const gchar*
unity_protocol_payment_preview_get_purchase_prize (UnityProtocolPaymentPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_purchase_prize;
	result = _tmp0_;
	return result;
}


void
unity_protocol_payment_preview_set_purchase_prize (UnityProtocolPaymentPreview* self,
                                                   const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_payment_preview_get_purchase_prize (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_purchase_prize);
		self->priv->_purchase_prize = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_PRIZE_PROPERTY]);
	}
}


const gchar*
unity_protocol_payment_preview_get_purchase_type (UnityProtocolPaymentPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_purchase_type;
	result = _tmp0_;
	return result;
}


void
unity_protocol_payment_preview_set_purchase_type (UnityProtocolPaymentPreview* self,
                                                  const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_payment_preview_get_purchase_type (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_purchase_type);
		self->priv->_purchase_type = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_TYPE_PROPERTY]);
	}
}


UnityProtocolPreviewPaymentType
unity_protocol_payment_preview_get_preview_type (UnityProtocolPaymentPreview* self)
{
	UnityProtocolPreviewPaymentType result;
	UnityProtocolPreviewPaymentType _tmp0_;
	g_return_val_if_fail (self != NULL, 0);
	_tmp0_ = self->priv->_preview_type;
	result = _tmp0_;
	return result;
}


void
unity_protocol_payment_preview_set_preview_type (UnityProtocolPaymentPreview* self,
                                                 UnityProtocolPreviewPaymentType value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_payment_preview_get_preview_type (self) != value) {
		self->priv->_preview_type = value;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_PREVIEW_TYPE_PROPERTY]);
	}
}


static Block3Data*
block3_data_ref (Block3Data* _data3_)
{
	g_atomic_int_inc (&_data3_->_ref_count_);
	return _data3_;
}


static void
block3_data_unref (void * _userdata_)
{
	Block3Data* _data3_;
	_data3_ = (Block3Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data3_->_ref_count_)) {
		_g_object_unref0 (_data3_->_result_);
		g_slice_free (Block3Data, _data3_);
	}
}


static void
__lambda17_ (Block3Data* _data3_,
             GVariant* v)
{
	UnityProtocolPaymentPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data3_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_preview_set_title ((UnityProtocolPreview*) _tmp0_, _tmp1_);
}


static void
___lambda17__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda17_ (self, (GVariant*) data);
}


static void
__lambda18_ (Block3Data* _data3_,
             GVariant* v)
{
	UnityProtocolPaymentPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data3_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_preview_set_subtitle ((UnityProtocolPreview*) _tmp0_, _tmp1_);
}


static void
___lambda18__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda18_ (self, (GVariant*) data);
}


static void
__lambda19_ (Block3Data* _data3_,
             GVariant* v)
{
	UnityProtocolPaymentPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data3_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_payment_preview_set_header (_tmp0_, _tmp1_);
}


static void
___lambda19__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda19_ (self, (GVariant*) data);
}


static void
__lambda20_ (Block3Data* _data3_,
             GVariant* v)
{
	UnityProtocolPaymentPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data3_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_payment_preview_set_email (_tmp0_, _tmp1_);
}


static void
___lambda20__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda20_ (self, (GVariant*) data);
}


static void
__lambda21_ (Block3Data* _data3_,
             GVariant* v)
{
	UnityProtocolPaymentPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data3_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_payment_preview_set_payment_method (_tmp0_, _tmp1_);
}


static void
___lambda21__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda21_ (self, (GVariant*) data);
}


static void
__lambda22_ (Block3Data* _data3_,
             GVariant* v)
{
	UnityProtocolPaymentPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data3_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_payment_preview_set_purchase_prize (_tmp0_, _tmp1_);
}


static void
___lambda22__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda22_ (self, (GVariant*) data);
}


static void
__lambda23_ (Block3Data* _data3_,
             GVariant* v)
{
	UnityProtocolPaymentPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data3_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_payment_preview_set_purchase_type (_tmp0_, _tmp1_);
}


static void
___lambda23__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda23_ (self, (GVariant*) data);
}


static void
__lambda24_ (Block3Data* _data3_,
             GVariant* v)
{
	UnityProtocolPaymentPreview* _tmp0_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data3_->_result_;
	unity_protocol_payment_preview_set_preview_type (_tmp0_, (UnityProtocolPreviewPaymentType) g_variant_get_int32 (v));
}


static void
___lambda24__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda24_ (self, (GVariant*) data);
}


static GObject*
_unity_protocol_payment_preview___lambda16_ (GVariant* data)
{
	GObject* result = NULL;
	Block3Data* _data3_;
	const gchar* renderer = NULL;
	GVariant* _tmp0_;
	GVariant* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	GHashTable* properties = NULL;
	GHashTable* _tmp5_ = NULL;
	gpointer _tmp6_;
	GHashTable* _tmp7_;
	gconstpointer _tmp8_;
	GHashTable* _tmp9_;
	gconstpointer _tmp10_;
	GHashTable* _tmp11_;
	gconstpointer _tmp12_;
	GHashTable* _tmp13_;
	gconstpointer _tmp14_;
	GHashTable* _tmp15_;
	gconstpointer _tmp16_;
	GHashTable* _tmp17_;
	gconstpointer _tmp18_;
	GHashTable* _tmp19_;
	gconstpointer _tmp20_;
	GHashTable* _tmp21_;
	gconstpointer _tmp22_;
	UnityProtocolPaymentPreview* _tmp23_;
	GObject* _tmp24_;
	g_return_val_if_fail (data != NULL, NULL);
	_data3_ = g_slice_new0 (Block3Data);
	_data3_->_ref_count_ = 1;
	_tmp0_ = g_variant_get_child_value (data, (gsize) 0);
	_tmp1_ = _tmp0_;
	_tmp2_ = g_variant_get_string (_tmp1_, NULL);
	_tmp3_ = _tmp2_;
	_g_variant_unref0 (_tmp1_);
	renderer = _tmp3_;
	_tmp4_ = renderer;
	g_warn_if_fail (g_strcmp0 (_tmp4_, UNITY_PROTOCOL_PAYMENT_PREVIEW_RENDERER_NAME) == 0);
	_tmp6_ = unity_protocol_preview_deserialize (UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, data, &_tmp5_);
	_g_hash_table_unref0 (properties);
	properties = _tmp5_;
	_data3_->_result_ = (UnityProtocolPaymentPreview*) _tmp6_;
	_tmp7_ = properties;
	_tmp8_ = g_hash_table_lookup (_tmp7_, "title");
	unity_protocol_preview_checked_set ((GVariant*) _tmp8_, ___lambda17__gfunc, _data3_);
	_tmp9_ = properties;
	_tmp10_ = g_hash_table_lookup (_tmp9_, "subtitle");
	unity_protocol_preview_checked_set ((GVariant*) _tmp10_, ___lambda18__gfunc, _data3_);
	_tmp11_ = properties;
	_tmp12_ = g_hash_table_lookup (_tmp11_, "header");
	unity_protocol_preview_checked_set ((GVariant*) _tmp12_, ___lambda19__gfunc, _data3_);
	_tmp13_ = properties;
	_tmp14_ = g_hash_table_lookup (_tmp13_, "email");
	unity_protocol_preview_checked_set ((GVariant*) _tmp14_, ___lambda20__gfunc, _data3_);
	_tmp15_ = properties;
	_tmp16_ = g_hash_table_lookup (_tmp15_, "payment-method");
	unity_protocol_preview_checked_set ((GVariant*) _tmp16_, ___lambda21__gfunc, _data3_);
	_tmp17_ = properties;
	_tmp18_ = g_hash_table_lookup (_tmp17_, "purchase-prize");
	unity_protocol_preview_checked_set ((GVariant*) _tmp18_, ___lambda22__gfunc, _data3_);
	_tmp19_ = properties;
	_tmp20_ = g_hash_table_lookup (_tmp19_, "purchase-type");
	unity_protocol_preview_checked_set ((GVariant*) _tmp20_, ___lambda23__gfunc, _data3_);
	_tmp21_ = properties;
	_tmp22_ = g_hash_table_lookup (_tmp21_, "preview-type");
	unity_protocol_preview_checked_set ((GVariant*) _tmp22_, ___lambda24__gfunc, _data3_);
	_tmp23_ = _data3_->_result_;
	_tmp24_ = _g_object_ref0 ((GObject*) _tmp23_);
	result = _tmp24_;
	_g_hash_table_unref0 (properties);
	block3_data_unref (_data3_);
	_data3_ = NULL;
	return result;
}


static GObject*
__unity_protocol_payment_preview___lambda16__dee_serializable_parse_func (GVariant* data)
{
	GObject* result;
	result = _unity_protocol_payment_preview___lambda16_ (data);
	return result;
}


static void
unity_protocol_payment_preview_class_init (UnityProtocolPaymentPreviewClass * klass)
{
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	unity_protocol_payment_preview_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityProtocolPaymentPreviewPrivate));
	((UnityProtocolPreviewClass *) klass)->get_renderer_name = (const gchar* (*) (UnityProtocolPreview *)) unity_protocol_payment_preview_real_get_renderer_name;
	((UnityProtocolPreviewClass *) klass)->add_properties = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_payment_preview_real_add_properties;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_protocol_payment_preview_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_protocol_payment_preview_set_property;
	G_OBJECT_CLASS (klass)->finalize = unity_protocol_payment_preview_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PAYMENT_PREVIEW_HEADER_PROPERTY, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_HEADER_PROPERTY] = g_param_spec_string ("header", "header", "header", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PAYMENT_PREVIEW_EMAIL_PROPERTY, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_EMAIL_PROPERTY] = g_param_spec_string ("email", "email", "email", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PAYMENT_PREVIEW_PAYMENT_METHOD_PROPERTY, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_PAYMENT_METHOD_PROPERTY] = g_param_spec_string ("payment-method", "payment-method", "payment-method", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_PRIZE_PROPERTY, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_PRIZE_PROPERTY] = g_param_spec_string ("purchase-prize", "purchase-prize", "purchase-prize", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_TYPE_PROPERTY, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_TYPE_PROPERTY] = g_param_spec_string ("purchase-type", "purchase-type", "purchase-type", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_PAYMENT_PREVIEW_PREVIEW_TYPE_PROPERTY, unity_protocol_payment_preview_properties[UNITY_PROTOCOL_PAYMENT_PREVIEW_PREVIEW_TYPE_PROPERTY] = g_param_spec_enum ("preview-type", "preview-type", "preview-type", UNITY_PROTOCOL_TYPE_PREVIEW_PAYMENT_TYPE, UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_MUSIC, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	_tmp0_ = g_variant_type_new (UNITY_PROTOCOL_PREVIEW_RAW_SIGNATURE);
	_tmp1_ = _tmp0_;
	dee_serializable_register_parser (UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, _tmp1_, __unity_protocol_payment_preview___lambda16__dee_serializable_parse_func);
	_g_variant_type_free0 (_tmp1_);
}


static void
unity_protocol_payment_preview_instance_init (UnityProtocolPaymentPreview * self)
{
	self->priv = UNITY_PROTOCOL_PAYMENT_PREVIEW_GET_PRIVATE (self);
	self->priv->_preview_type = UNITY_PROTOCOL_PREVIEW_PAYMENT_TYPE_MUSIC;
}


static void
unity_protocol_payment_preview_finalize (GObject * obj)
{
	UnityProtocolPaymentPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, UnityProtocolPaymentPreview);
	_g_free0 (self->priv->_header);
	_g_free0 (self->priv->_email);
	_g_free0 (self->priv->_payment_method);
	_g_free0 (self->priv->_purchase_prize);
	_g_free0 (self->priv->_purchase_type);
	G_OBJECT_CLASS (unity_protocol_payment_preview_parent_class)->finalize (obj);
}


GType
unity_protocol_payment_preview_get_type (void)
{
	static volatile gsize unity_protocol_payment_preview_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_payment_preview_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityProtocolPaymentPreviewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_protocol_payment_preview_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityProtocolPaymentPreview), 0, (GInstanceInitFunc) unity_protocol_payment_preview_instance_init, NULL };
		GType unity_protocol_payment_preview_type_id;
		unity_protocol_payment_preview_type_id = g_type_register_static (UNITY_PROTOCOL_TYPE_PREVIEW, "UnityProtocolPaymentPreview", &g_define_type_info, 0);
		g_once_init_leave (&unity_protocol_payment_preview_type_id__volatile, unity_protocol_payment_preview_type_id);
	}
	return unity_protocol_payment_preview_type_id__volatile;
}


static void
_vala_unity_protocol_payment_preview_get_property (GObject * object,
                                                   guint property_id,
                                                   GValue * value,
                                                   GParamSpec * pspec)
{
	UnityProtocolPaymentPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, UnityProtocolPaymentPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_HEADER_PROPERTY:
		g_value_set_string (value, unity_protocol_payment_preview_get_header (self));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_EMAIL_PROPERTY:
		g_value_set_string (value, unity_protocol_payment_preview_get_email (self));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_PAYMENT_METHOD_PROPERTY:
		g_value_set_string (value, unity_protocol_payment_preview_get_payment_method (self));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_PRIZE_PROPERTY:
		g_value_set_string (value, unity_protocol_payment_preview_get_purchase_prize (self));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_TYPE_PROPERTY:
		g_value_set_string (value, unity_protocol_payment_preview_get_purchase_type (self));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_PREVIEW_TYPE_PROPERTY:
		g_value_set_enum (value, unity_protocol_payment_preview_get_preview_type (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_protocol_payment_preview_set_property (GObject * object,
                                                   guint property_id,
                                                   const GValue * value,
                                                   GParamSpec * pspec)
{
	UnityProtocolPaymentPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_PAYMENT_PREVIEW, UnityProtocolPaymentPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_HEADER_PROPERTY:
		unity_protocol_payment_preview_set_header (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_EMAIL_PROPERTY:
		unity_protocol_payment_preview_set_email (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_PAYMENT_METHOD_PROPERTY:
		unity_protocol_payment_preview_set_payment_method (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_PRIZE_PROPERTY:
		unity_protocol_payment_preview_set_purchase_prize (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_PURCHASE_TYPE_PROPERTY:
		unity_protocol_payment_preview_set_purchase_type (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_PAYMENT_PREVIEW_PREVIEW_TYPE_PROPERTY:
		unity_protocol_payment_preview_set_preview_type (self, g_value_get_enum (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


UnityProtocolMoviePreview*
unity_protocol_movie_preview_construct (GType object_type)
{
	UnityProtocolMoviePreview * self = NULL;
	self = (UnityProtocolMoviePreview*) g_object_new (object_type, NULL);
	return self;
}


UnityProtocolMoviePreview*
unity_protocol_movie_preview_new (void)
{
	return unity_protocol_movie_preview_construct (UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW);
}


static const gchar*
unity_protocol_movie_preview_real_get_renderer_name (UnityProtocolPreview* base)
{
	UnityProtocolMoviePreview * self;
	const gchar* result = NULL;
	self = (UnityProtocolMoviePreview*) base;
	result = UNITY_PROTOCOL_MOVIE_PREVIEW_RENDERER_NAME;
	return result;
}


static GVariant*
_variant_new25 (gdouble value)
{
	return g_variant_ref_sink (g_variant_new_double (value));
}


static GVariant*
_variant_new26 (guint value)
{
	return g_variant_ref_sink (g_variant_new_uint32 (value));
}


static GVariant*
_variant_new27 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static void
unity_protocol_movie_preview_real_add_properties (UnityProtocolPreview* base,
                                                  GHashTable* properties)
{
	UnityProtocolMoviePreview * self;
	gfloat _tmp0_;
	guint _tmp4_;
	const gchar* _tmp8_;
	self = (UnityProtocolMoviePreview*) base;
	g_return_if_fail (properties != NULL);
	UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_movie_preview_parent_class)->add_properties (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview), properties);
	_tmp0_ = self->priv->_rating;
	if (_tmp0_ >= (-1.0f)) {
		gchar* _tmp1_;
		gfloat _tmp2_;
		GVariant* _tmp3_;
		_tmp1_ = g_strdup ("rating");
		_tmp2_ = self->priv->_rating;
		_tmp3_ = _variant_new25 ((gdouble) _tmp2_);
		g_hash_table_insert (properties, _tmp1_, _tmp3_);
	}
	_tmp4_ = self->priv->_num_ratings;
	if (_tmp4_ > ((guint) 0)) {
		gchar* _tmp5_;
		guint _tmp6_;
		GVariant* _tmp7_;
		_tmp5_ = g_strdup ("num-ratings");
		_tmp6_ = self->priv->_num_ratings;
		_tmp7_ = _variant_new26 (_tmp6_);
		g_hash_table_insert (properties, _tmp5_, _tmp7_);
	}
	_tmp8_ = self->priv->_year;
	if (_tmp8_ != NULL) {
		gchar* _tmp9_;
		const gchar* _tmp10_;
		GVariant* _tmp11_;
		_tmp9_ = g_strdup ("year");
		_tmp10_ = self->priv->_year;
		_tmp11_ = _variant_new27 (_tmp10_);
		g_hash_table_insert (properties, _tmp9_, _tmp11_);
	}
}


const gchar*
unity_protocol_movie_preview_get_year (UnityProtocolMoviePreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_year;
	result = _tmp0_;
	return result;
}


void
unity_protocol_movie_preview_set_year (UnityProtocolMoviePreview* self,
                                       const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_movie_preview_get_year (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_year);
		self->priv->_year = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_movie_preview_properties[UNITY_PROTOCOL_MOVIE_PREVIEW_YEAR_PROPERTY]);
	}
}


gfloat
unity_protocol_movie_preview_get_rating (UnityProtocolMoviePreview* self)
{
	gfloat result;
	gfloat _tmp0_;
	g_return_val_if_fail (self != NULL, 0.0F);
	_tmp0_ = self->priv->_rating;
	result = _tmp0_;
	return result;
}


void
unity_protocol_movie_preview_set_rating (UnityProtocolMoviePreview* self,
                                         gfloat value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_movie_preview_get_rating (self) != value) {
		self->priv->_rating = value;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_movie_preview_properties[UNITY_PROTOCOL_MOVIE_PREVIEW_RATING_PROPERTY]);
	}
}


guint
unity_protocol_movie_preview_get_num_ratings (UnityProtocolMoviePreview* self)
{
	guint result;
	guint _tmp0_;
	g_return_val_if_fail (self != NULL, 0U);
	_tmp0_ = self->priv->_num_ratings;
	result = _tmp0_;
	return result;
}


void
unity_protocol_movie_preview_set_num_ratings (UnityProtocolMoviePreview* self,
                                              guint value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_movie_preview_get_num_ratings (self) != value) {
		self->priv->_num_ratings = value;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_movie_preview_properties[UNITY_PROTOCOL_MOVIE_PREVIEW_NUM_RATINGS_PROPERTY]);
	}
}


static Block4Data*
block4_data_ref (Block4Data* _data4_)
{
	g_atomic_int_inc (&_data4_->_ref_count_);
	return _data4_;
}


static void
block4_data_unref (void * _userdata_)
{
	Block4Data* _data4_;
	_data4_ = (Block4Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data4_->_ref_count_)) {
		_g_object_unref0 (_data4_->_result_);
		g_slice_free (Block4Data, _data4_);
	}
}


static void
__lambda26_ (Block4Data* _data4_,
             GVariant* v)
{
	UnityProtocolMoviePreview* _tmp0_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data4_->_result_;
	unity_protocol_movie_preview_set_rating (_tmp0_, (gfloat) g_variant_get_double (v));
}


static void
___lambda26__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda26_ (self, (GVariant*) data);
}


static void
__lambda27_ (Block4Data* _data4_,
             GVariant* v)
{
	UnityProtocolMoviePreview* _tmp0_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data4_->_result_;
	unity_protocol_movie_preview_set_num_ratings (_tmp0_, (guint) g_variant_get_uint32 (v));
}


static void
___lambda27__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda27_ (self, (GVariant*) data);
}


static void
__lambda28_ (Block4Data* _data4_,
             GVariant* v)
{
	UnityProtocolMoviePreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data4_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_movie_preview_set_year (_tmp0_, _tmp1_);
}


static void
___lambda28__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda28_ (self, (GVariant*) data);
}


static GObject*
_unity_protocol_movie_preview___lambda25_ (GVariant* data)
{
	GObject* result = NULL;
	Block4Data* _data4_;
	const gchar* renderer = NULL;
	GVariant* _tmp0_;
	GVariant* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	GHashTable* properties = NULL;
	GHashTable* _tmp5_ = NULL;
	gpointer _tmp6_;
	GHashTable* _tmp7_;
	gconstpointer _tmp8_;
	GHashTable* _tmp9_;
	gconstpointer _tmp10_;
	GHashTable* _tmp11_;
	gconstpointer _tmp12_;
	UnityProtocolMoviePreview* _tmp13_;
	GObject* _tmp14_;
	g_return_val_if_fail (data != NULL, NULL);
	_data4_ = g_slice_new0 (Block4Data);
	_data4_->_ref_count_ = 1;
	_tmp0_ = g_variant_get_child_value (data, (gsize) 0);
	_tmp1_ = _tmp0_;
	_tmp2_ = g_variant_get_string (_tmp1_, NULL);
	_tmp3_ = _tmp2_;
	_g_variant_unref0 (_tmp1_);
	renderer = _tmp3_;
	_tmp4_ = renderer;
	g_warn_if_fail (g_strcmp0 (_tmp4_, UNITY_PROTOCOL_MOVIE_PREVIEW_RENDERER_NAME) == 0);
	_tmp6_ = unity_protocol_preview_deserialize (UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, data, &_tmp5_);
	_g_hash_table_unref0 (properties);
	properties = _tmp5_;
	_data4_->_result_ = (UnityProtocolMoviePreview*) _tmp6_;
	_tmp7_ = properties;
	_tmp8_ = g_hash_table_lookup (_tmp7_, "rating");
	unity_protocol_preview_checked_set ((GVariant*) _tmp8_, ___lambda26__gfunc, _data4_);
	_tmp9_ = properties;
	_tmp10_ = g_hash_table_lookup (_tmp9_, "num-ratings");
	unity_protocol_preview_checked_set ((GVariant*) _tmp10_, ___lambda27__gfunc, _data4_);
	_tmp11_ = properties;
	_tmp12_ = g_hash_table_lookup (_tmp11_, "year");
	unity_protocol_preview_checked_set ((GVariant*) _tmp12_, ___lambda28__gfunc, _data4_);
	_tmp13_ = _data4_->_result_;
	_tmp14_ = _g_object_ref0 ((GObject*) _tmp13_);
	result = _tmp14_;
	_g_hash_table_unref0 (properties);
	block4_data_unref (_data4_);
	_data4_ = NULL;
	return result;
}


static GObject*
__unity_protocol_movie_preview___lambda25__dee_serializable_parse_func (GVariant* data)
{
	GObject* result;
	result = _unity_protocol_movie_preview___lambda25_ (data);
	return result;
}


static void
unity_protocol_movie_preview_class_init (UnityProtocolMoviePreviewClass * klass)
{
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	unity_protocol_movie_preview_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityProtocolMoviePreviewPrivate));
	((UnityProtocolPreviewClass *) klass)->get_renderer_name = (const gchar* (*) (UnityProtocolPreview *)) unity_protocol_movie_preview_real_get_renderer_name;
	((UnityProtocolPreviewClass *) klass)->add_properties = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_movie_preview_real_add_properties;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_protocol_movie_preview_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_protocol_movie_preview_set_property;
	G_OBJECT_CLASS (klass)->finalize = unity_protocol_movie_preview_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_MOVIE_PREVIEW_YEAR_PROPERTY, unity_protocol_movie_preview_properties[UNITY_PROTOCOL_MOVIE_PREVIEW_YEAR_PROPERTY] = g_param_spec_string ("year", "year", "year", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_MOVIE_PREVIEW_RATING_PROPERTY, unity_protocol_movie_preview_properties[UNITY_PROTOCOL_MOVIE_PREVIEW_RATING_PROPERTY] = g_param_spec_float ("rating", "rating", "rating", -G_MAXFLOAT, G_MAXFLOAT, 0.0F, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_MOVIE_PREVIEW_NUM_RATINGS_PROPERTY, unity_protocol_movie_preview_properties[UNITY_PROTOCOL_MOVIE_PREVIEW_NUM_RATINGS_PROPERTY] = g_param_spec_uint ("num-ratings", "num-ratings", "num-ratings", 0, G_MAXUINT, 0U, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	_tmp0_ = g_variant_type_new (UNITY_PROTOCOL_PREVIEW_RAW_SIGNATURE);
	_tmp1_ = _tmp0_;
	dee_serializable_register_parser (UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, _tmp1_, __unity_protocol_movie_preview___lambda25__dee_serializable_parse_func);
	_g_variant_type_free0 (_tmp1_);
}


static void
unity_protocol_movie_preview_instance_init (UnityProtocolMoviePreview * self)
{
	self->priv = UNITY_PROTOCOL_MOVIE_PREVIEW_GET_PRIVATE (self);
}


static void
unity_protocol_movie_preview_finalize (GObject * obj)
{
	UnityProtocolMoviePreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, UnityProtocolMoviePreview);
	_g_free0 (self->priv->_year);
	G_OBJECT_CLASS (unity_protocol_movie_preview_parent_class)->finalize (obj);
}


GType
unity_protocol_movie_preview_get_type (void)
{
	static volatile gsize unity_protocol_movie_preview_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_movie_preview_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityProtocolMoviePreviewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_protocol_movie_preview_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityProtocolMoviePreview), 0, (GInstanceInitFunc) unity_protocol_movie_preview_instance_init, NULL };
		GType unity_protocol_movie_preview_type_id;
		unity_protocol_movie_preview_type_id = g_type_register_static (UNITY_PROTOCOL_TYPE_PREVIEW, "UnityProtocolMoviePreview", &g_define_type_info, 0);
		g_once_init_leave (&unity_protocol_movie_preview_type_id__volatile, unity_protocol_movie_preview_type_id);
	}
	return unity_protocol_movie_preview_type_id__volatile;
}


static void
_vala_unity_protocol_movie_preview_get_property (GObject * object,
                                                 guint property_id,
                                                 GValue * value,
                                                 GParamSpec * pspec)
{
	UnityProtocolMoviePreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, UnityProtocolMoviePreview);
	switch (property_id) {
		case UNITY_PROTOCOL_MOVIE_PREVIEW_YEAR_PROPERTY:
		g_value_set_string (value, unity_protocol_movie_preview_get_year (self));
		break;
		case UNITY_PROTOCOL_MOVIE_PREVIEW_RATING_PROPERTY:
		g_value_set_float (value, unity_protocol_movie_preview_get_rating (self));
		break;
		case UNITY_PROTOCOL_MOVIE_PREVIEW_NUM_RATINGS_PROPERTY:
		g_value_set_uint (value, unity_protocol_movie_preview_get_num_ratings (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_protocol_movie_preview_set_property (GObject * object,
                                                 guint property_id,
                                                 const GValue * value,
                                                 GParamSpec * pspec)
{
	UnityProtocolMoviePreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_MOVIE_PREVIEW, UnityProtocolMoviePreview);
	switch (property_id) {
		case UNITY_PROTOCOL_MOVIE_PREVIEW_YEAR_PROPERTY:
		unity_protocol_movie_preview_set_year (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_MOVIE_PREVIEW_RATING_PROPERTY:
		unity_protocol_movie_preview_set_rating (self, g_value_get_float (value));
		break;
		case UNITY_PROTOCOL_MOVIE_PREVIEW_NUM_RATINGS_PROPERTY:
		unity_protocol_movie_preview_set_num_ratings (self, g_value_get_uint (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_UnityProtocolSocialPreviewCommentRaw_array_free (UnityProtocolSocialPreviewCommentRaw * array,
                                                       gint array_length)
{
	if (array != NULL) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			unity_protocol_social_preview_comment_raw_destroy (&array[i]);
		}
	}
	g_free (array);
}


UnityProtocolSocialPreview*
unity_protocol_social_preview_construct (GType object_type)
{
	UnityProtocolSocialPreview * self = NULL;
	self = (UnityProtocolSocialPreview*) g_object_new (object_type, NULL);
	return self;
}


UnityProtocolSocialPreview*
unity_protocol_social_preview_new (void)
{
	return unity_protocol_social_preview_construct (UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW);
}


static const gchar*
unity_protocol_social_preview_real_get_renderer_name (UnityProtocolPreview* base)
{
	UnityProtocolSocialPreview * self;
	const gchar* result = NULL;
	self = (UnityProtocolSocialPreview*) base;
	result = UNITY_PROTOCOL_SOCIAL_PREVIEW_RENDERER_NAME;
	return result;
}


static GVariant*
_variant_new28 (UnityProtocolSocialPreviewCommentRaw* value,
                gint value_length1)
{
	UnityProtocolSocialPreviewCommentRaw* _tmp3_;
	GVariantBuilder _tmp4_;
	int _tmp5_;
	_tmp3_ = value;
	g_variant_builder_init (&_tmp4_, G_VARIANT_TYPE ("a(ssss)"));
	for (_tmp5_ = 0; _tmp5_ < value_length1; _tmp5_++) {
		GVariantBuilder _tmp6_;
		g_variant_builder_init (&_tmp6_, G_VARIANT_TYPE_TUPLE);
		g_variant_builder_add_value (&_tmp6_, g_variant_new_string ((*_tmp3_).id));
		g_variant_builder_add_value (&_tmp6_, g_variant_new_string ((*_tmp3_).display_name));
		g_variant_builder_add_value (&_tmp6_, g_variant_new_string ((*_tmp3_).content));
		g_variant_builder_add_value (&_tmp6_, g_variant_new_string ((*_tmp3_).time));
		g_variant_builder_add_value (&_tmp4_, g_variant_builder_end (&_tmp6_));
		_tmp3_++;
	}
	return g_variant_ref_sink (g_variant_builder_end (&_tmp4_));
}


static GVariant*
_variant_new29 (gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new30 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static GVariant*
_variant_new31 (const gchar* value)
{
	return g_variant_ref_sink (g_variant_new_string (value));
}


static void
unity_protocol_social_preview_real_add_properties (UnityProtocolPreview* base,
                                                   GHashTable* properties)
{
	UnityProtocolSocialPreview * self;
	UnityProtocolSocialPreviewCommentRaw* _tmp0_;
	gint _tmp0__length1;
	GIcon* _tmp8_;
	const gchar* _tmp14_;
	const gchar* _tmp18_;
	self = (UnityProtocolSocialPreview*) base;
	g_return_if_fail (properties != NULL);
	UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_social_preview_parent_class)->add_properties (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview), properties);
	_tmp0_ = self->priv->_comments;
	_tmp0__length1 = self->priv->_comments_length1;
	if (_tmp0__length1 > 0) {
		gchar* _tmp1_;
		UnityProtocolSocialPreviewCommentRaw* _tmp2_;
		gint _tmp2__length1;
		GVariant* _tmp7_;
		_tmp1_ = g_strdup ("comments");
		_tmp2_ = self->priv->_comments;
		_tmp2__length1 = self->priv->_comments_length1;
		_tmp7_ = _variant_new28 (_tmp2_, _tmp2__length1);
		g_hash_table_insert (properties, _tmp1_, _tmp7_);
	}
	_tmp8_ = self->priv->_avatar;
	if (_tmp8_ != NULL) {
		gchar* _tmp9_;
		GIcon* _tmp10_;
		gchar* _tmp11_;
		gchar* _tmp12_;
		GVariant* _tmp13_;
		_tmp9_ = g_strdup ("avatar");
		_tmp10_ = self->priv->_avatar;
		_tmp11_ = g_icon_to_string (_tmp10_);
		_tmp12_ = _tmp11_;
		_tmp13_ = _variant_new29 (_tmp12_);
		g_hash_table_insert (properties, _tmp9_, _tmp13_);
		_g_free0 (_tmp12_);
	}
	_tmp14_ = self->priv->_content;
	if (_tmp14_ != NULL) {
		gchar* _tmp15_;
		const gchar* _tmp16_;
		GVariant* _tmp17_;
		_tmp15_ = g_strdup ("content");
		_tmp16_ = self->priv->_content;
		_tmp17_ = _variant_new30 (_tmp16_);
		g_hash_table_insert (properties, _tmp15_, _tmp17_);
	}
	_tmp18_ = self->priv->_sender;
	if (_tmp18_ != NULL) {
		gchar* _tmp19_;
		const gchar* _tmp20_;
		GVariant* _tmp21_;
		_tmp19_ = g_strdup ("sender");
		_tmp20_ = self->priv->_sender;
		_tmp21_ = _variant_new31 (_tmp20_);
		g_hash_table_insert (properties, _tmp19_, _tmp21_);
	}
}


static gpointer
_unity_protocol_social_preview_comment_raw_dup0 (gpointer self)
{
	return self ? unity_protocol_social_preview_comment_raw_dup (self) : NULL;
}


static void
_vala_array_add3 (UnityProtocolSocialPreviewCommentRaw* * array,
                  int* length,
                  int* size,
                  const UnityProtocolSocialPreviewCommentRaw* value)
{
	if ((*length) == (*size)) {
		*size = (*size) ? (2 * (*size)) : 4;
		*array = g_renew (UnityProtocolSocialPreviewCommentRaw, *array, *size);
	}
	(*array)[(*length)++] = *value;
}


void
unity_protocol_social_preview_add_comment (UnityProtocolSocialPreview* self,
                                           const gchar* id,
                                           const gchar* display_name,
                                           const gchar* content,
                                           const gchar* time)
{
	UnityProtocolSocialPreviewCommentRaw* comment = NULL;
	UnityProtocolSocialPreviewCommentRaw _tmp0_ = {0};
	UnityProtocolSocialPreviewCommentRaw _tmp1_;
	UnityProtocolSocialPreviewCommentRaw* _tmp2_;
	UnityProtocolSocialPreviewCommentRaw* _tmp3_;
	UnityProtocolSocialPreviewCommentRaw* _tmp4_;
	gchar* _tmp5_;
	UnityProtocolSocialPreviewCommentRaw* _tmp6_;
	gchar* _tmp7_;
	UnityProtocolSocialPreviewCommentRaw* _tmp8_;
	gchar* _tmp9_;
	UnityProtocolSocialPreviewCommentRaw* _tmp10_;
	gchar* _tmp11_;
	UnityProtocolSocialPreviewCommentRaw* _tmp12_;
	gint _tmp12__length1;
	UnityProtocolSocialPreviewCommentRaw* _tmp13_;
	UnityProtocolSocialPreviewCommentRaw* _tmp14_;
	UnityProtocolSocialPreviewCommentRaw _tmp15_ = {0};
	g_return_if_fail (self != NULL);
	g_return_if_fail (id != NULL);
	g_return_if_fail (display_name != NULL);
	g_return_if_fail (content != NULL);
	g_return_if_fail (time != NULL);
	memset (&_tmp0_, 0, sizeof (UnityProtocolSocialPreviewCommentRaw));
	_tmp1_ = _tmp0_;
	_tmp2_ = _unity_protocol_social_preview_comment_raw_dup0 (&_tmp1_);
	_tmp3_ = _tmp2_;
	unity_protocol_social_preview_comment_raw_destroy (&_tmp1_);
	comment = _tmp3_;
	_tmp4_ = comment;
	_tmp5_ = g_strdup (id);
	_g_free0 ((*_tmp4_).id);
	(*_tmp4_).id = _tmp5_;
	_tmp6_ = comment;
	_tmp7_ = g_strdup (display_name);
	_g_free0 ((*_tmp6_).display_name);
	(*_tmp6_).display_name = _tmp7_;
	_tmp8_ = comment;
	_tmp9_ = g_strdup (content);
	_g_free0 ((*_tmp8_).content);
	(*_tmp8_).content = _tmp9_;
	_tmp10_ = comment;
	_tmp11_ = g_strdup (time);
	_g_free0 ((*_tmp10_).time);
	(*_tmp10_).time = _tmp11_;
	_tmp12_ = self->priv->_comments;
	_tmp12__length1 = self->priv->_comments_length1;
	_tmp13_ = comment;
	comment = NULL;
	_tmp14_ = _tmp13_;
	unity_protocol_social_preview_comment_raw_copy (_tmp14_, &_tmp15_);
	_vala_array_add3 (&self->priv->_comments, &self->priv->_comments_length1, &self->priv->__comments_size_, &_tmp15_);
	_unity_protocol_social_preview_comment_raw_free0 (_tmp14_);
	_unity_protocol_social_preview_comment_raw_free0 (comment);
}


UnityProtocolSocialPreviewCommentRaw*
unity_protocol_social_preview_get_comments (UnityProtocolSocialPreview* self,
                                            int* result_length1)
{
	UnityProtocolSocialPreviewCommentRaw* result = NULL;
	UnityProtocolSocialPreviewCommentRaw* _tmp0_;
	gint _tmp0__length1;
	UnityProtocolSocialPreviewCommentRaw* _tmp1_;
	gint _tmp1__length1;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_comments;
	_tmp0__length1 = self->priv->_comments_length1;
	_tmp1_ = _tmp0_;
	_tmp1__length1 = _tmp0__length1;
	if (result_length1) {
		*result_length1 = _tmp1__length1;
	}
	result = _tmp1_;
	return result;
}


GIcon*
unity_protocol_social_preview_get_avatar (UnityProtocolSocialPreview* self)
{
	GIcon* result;
	GIcon* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_avatar;
	result = _tmp0_;
	return result;
}


void
unity_protocol_social_preview_set_avatar (UnityProtocolSocialPreview* self,
                                          GIcon* value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_social_preview_get_avatar (self) != value) {
		GIcon* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_avatar);
		self->priv->_avatar = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_social_preview_properties[UNITY_PROTOCOL_SOCIAL_PREVIEW_AVATAR_PROPERTY]);
	}
}


const gchar*
unity_protocol_social_preview_get_content (UnityProtocolSocialPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_content;
	result = _tmp0_;
	return result;
}


void
unity_protocol_social_preview_set_content (UnityProtocolSocialPreview* self,
                                           const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_social_preview_get_content (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_content);
		self->priv->_content = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_social_preview_properties[UNITY_PROTOCOL_SOCIAL_PREVIEW_CONTENT_PROPERTY]);
	}
}


const gchar*
unity_protocol_social_preview_get_sender (UnityProtocolSocialPreview* self)
{
	const gchar* result;
	const gchar* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_sender;
	result = _tmp0_;
	return result;
}


void
unity_protocol_social_preview_set_sender (UnityProtocolSocialPreview* self,
                                          const gchar* value)
{
	g_return_if_fail (self != NULL);
	if (g_strcmp0 (value, unity_protocol_social_preview_get_sender (self)) != 0) {
		gchar* _tmp0_;
		_tmp0_ = g_strdup (value);
		_g_free0 (self->priv->_sender);
		self->priv->_sender = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_social_preview_properties[UNITY_PROTOCOL_SOCIAL_PREVIEW_SENDER_PROPERTY]);
	}
}


static Block5Data*
block5_data_ref (Block5Data* _data5_)
{
	g_atomic_int_inc (&_data5_->_ref_count_);
	return _data5_;
}


static void
block5_data_unref (void * _userdata_)
{
	Block5Data* _data5_;
	_data5_ = (Block5Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data5_->_ref_count_)) {
		_g_object_unref0 (_data5_->_result_);
		g_slice_free (Block5Data, _data5_);
	}
}


static void
__lambda30_ (Block5Data* _data5_,
             GVariant* v)
{
	UnityProtocolSocialPreview* _tmp0_;
	GIcon* _tmp1_;
	GIcon* _tmp2_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data5_->_result_;
	_tmp1_ = unity_protocol_preview_variant_to_icon (v);
	_tmp2_ = _tmp1_;
	unity_protocol_social_preview_set_avatar (_tmp0_, _tmp2_);
	_g_object_unref0 (_tmp2_);
}


static void
___lambda30__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda30_ (self, (GVariant*) data);
}


static void
__lambda31_ (Block5Data* _data5_,
             GVariant* v)
{
	UnityProtocolSocialPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data5_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_social_preview_set_content (_tmp0_, _tmp1_);
}


static void
___lambda31__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda31_ (self, (GVariant*) data);
}


static void
__lambda32_ (Block5Data* _data5_,
             GVariant* v)
{
	UnityProtocolSocialPreview* _tmp0_;
	const gchar* _tmp1_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data5_->_result_;
	_tmp1_ = g_variant_get_string (v, NULL);
	unity_protocol_social_preview_set_sender (_tmp0_, _tmp1_);
}


static void
___lambda32__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda32_ (self, (GVariant*) data);
}


static UnityProtocolSocialPreviewCommentRaw*
_variant_get32 (GVariant* value,
                int* result_length1)
{
	UnityProtocolSocialPreviewCommentRaw* _tmp1_;
	int _tmp1__length;
	int _tmp1__size;
	int _tmp1__length1;
	GVariantIter _tmp2_;
	GVariant* _tmp3_;
	_tmp1_ = g_new (UnityProtocolSocialPreviewCommentRaw, 5);
	_tmp1__length = 0;
	_tmp1__size = 4;
	_tmp1__length1 = 0;
	g_variant_iter_init (&_tmp2_, value);
	for (; (_tmp3_ = g_variant_iter_next_value (&_tmp2_)) != NULL; _tmp1__length1++) {
		UnityProtocolSocialPreviewCommentRaw _tmp4_;
		GVariantIter _tmp5_;
		GVariant* _tmp6_;
		GVariant* _tmp7_;
		GVariant* _tmp8_;
		GVariant* _tmp9_;
		if (_tmp1__size == _tmp1__length) {
			_tmp1__size = 2 * _tmp1__size;
			_tmp1_ = g_renew (UnityProtocolSocialPreviewCommentRaw, _tmp1_, _tmp1__size + 1);
		}
		g_variant_iter_init (&_tmp5_, _tmp3_);
		_tmp6_ = g_variant_iter_next_value (&_tmp5_);
		_tmp4_.id = g_variant_dup_string (_tmp6_, NULL);
		g_variant_unref (_tmp6_);
		_tmp7_ = g_variant_iter_next_value (&_tmp5_);
		_tmp4_.display_name = g_variant_dup_string (_tmp7_, NULL);
		g_variant_unref (_tmp7_);
		_tmp8_ = g_variant_iter_next_value (&_tmp5_);
		_tmp4_.content = g_variant_dup_string (_tmp8_, NULL);
		g_variant_unref (_tmp8_);
		_tmp9_ = g_variant_iter_next_value (&_tmp5_);
		_tmp4_.time = g_variant_dup_string (_tmp9_, NULL);
		g_variant_unref (_tmp9_);
		_tmp1_[_tmp1__length++] = _tmp4_;
		g_variant_unref (_tmp3_);
	}
	*result_length1 = _tmp1__length1;
	return _tmp1_;
}


static void
__lambda33_ (Block5Data* _data5_,
             GVariant* v)
{
	UnityProtocolSocialPreviewCommentRaw* comments = NULL;
	UnityProtocolSocialPreviewCommentRaw* _tmp0_ = NULL;
	gint _tmp0__length1 = 0;
	gint comments_length1;
	gint _comments_size_;
	UnityProtocolSocialPreview* _tmp10_;
	UnityProtocolSocialPreviewCommentRaw* _tmp11_;
	gint _tmp11__length1;
	g_return_if_fail (v != NULL);
	_tmp0_ = _variant_get32 (v, &_tmp0__length1);
	comments = _tmp0_;
	comments_length1 = _tmp0__length1;
	_comments_size_ = comments_length1;
	_tmp10_ = _data5_->_result_;
	_tmp11_ = comments;
	_tmp11__length1 = comments_length1;
	comments = NULL;
	comments_length1 = 0;
	_tmp10_->priv->_comments = (_vala_UnityProtocolSocialPreviewCommentRaw_array_free (_tmp10_->priv->_comments, _tmp10_->priv->_comments_length1), NULL);
	_tmp10_->priv->_comments = _tmp11_;
	_tmp10_->priv->_comments_length1 = _tmp11__length1;
	_tmp10_->priv->__comments_size_ = _tmp10_->priv->_comments_length1;
	comments = (_vala_UnityProtocolSocialPreviewCommentRaw_array_free (comments, comments_length1), NULL);
}


static void
___lambda33__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda33_ (self, (GVariant*) data);
}


static GObject*
_unity_protocol_social_preview___lambda29_ (GVariant* data)
{
	GObject* result = NULL;
	Block5Data* _data5_;
	const gchar* renderer = NULL;
	GVariant* _tmp0_;
	GVariant* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	GHashTable* properties = NULL;
	GHashTable* _tmp5_ = NULL;
	gpointer _tmp6_;
	GHashTable* _tmp7_;
	gconstpointer _tmp8_;
	GHashTable* _tmp9_;
	gconstpointer _tmp10_;
	GHashTable* _tmp11_;
	gconstpointer _tmp12_;
	GHashTable* _tmp13_;
	gconstpointer _tmp14_;
	UnityProtocolSocialPreview* _tmp15_;
	GObject* _tmp16_;
	g_return_val_if_fail (data != NULL, NULL);
	_data5_ = g_slice_new0 (Block5Data);
	_data5_->_ref_count_ = 1;
	_tmp0_ = g_variant_get_child_value (data, (gsize) 0);
	_tmp1_ = _tmp0_;
	_tmp2_ = g_variant_get_string (_tmp1_, NULL);
	_tmp3_ = _tmp2_;
	_g_variant_unref0 (_tmp1_);
	renderer = _tmp3_;
	_tmp4_ = renderer;
	g_warn_if_fail (g_strcmp0 (_tmp4_, UNITY_PROTOCOL_SOCIAL_PREVIEW_RENDERER_NAME) == 0);
	_tmp6_ = unity_protocol_preview_deserialize (UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, data, &_tmp5_);
	_g_hash_table_unref0 (properties);
	properties = _tmp5_;
	_data5_->_result_ = (UnityProtocolSocialPreview*) _tmp6_;
	_tmp7_ = properties;
	_tmp8_ = g_hash_table_lookup (_tmp7_, "avatar");
	unity_protocol_preview_checked_set ((GVariant*) _tmp8_, ___lambda30__gfunc, _data5_);
	_tmp9_ = properties;
	_tmp10_ = g_hash_table_lookup (_tmp9_, "content");
	unity_protocol_preview_checked_set ((GVariant*) _tmp10_, ___lambda31__gfunc, _data5_);
	_tmp11_ = properties;
	_tmp12_ = g_hash_table_lookup (_tmp11_, "sender");
	unity_protocol_preview_checked_set ((GVariant*) _tmp12_, ___lambda32__gfunc, _data5_);
	_tmp13_ = properties;
	_tmp14_ = g_hash_table_lookup (_tmp13_, "comments");
	unity_protocol_preview_checked_set ((GVariant*) _tmp14_, ___lambda33__gfunc, _data5_);
	_tmp15_ = _data5_->_result_;
	_tmp16_ = _g_object_ref0 ((GObject*) _tmp15_);
	result = _tmp16_;
	_g_hash_table_unref0 (properties);
	block5_data_unref (_data5_);
	_data5_ = NULL;
	return result;
}


static GObject*
__unity_protocol_social_preview___lambda29__dee_serializable_parse_func (GVariant* data)
{
	GObject* result;
	result = _unity_protocol_social_preview___lambda29_ (data);
	return result;
}


void
unity_protocol_social_preview_comment_raw_copy (const UnityProtocolSocialPreviewCommentRaw* self,
                                                UnityProtocolSocialPreviewCommentRaw* dest)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	const gchar* _tmp6_;
	gchar* _tmp7_;
	_tmp0_ = (*self).id;
	_tmp1_ = g_strdup (_tmp0_);
	_g_free0 ((*dest).id);
	(*dest).id = _tmp1_;
	_tmp2_ = (*self).display_name;
	_tmp3_ = g_strdup (_tmp2_);
	_g_free0 ((*dest).display_name);
	(*dest).display_name = _tmp3_;
	_tmp4_ = (*self).content;
	_tmp5_ = g_strdup (_tmp4_);
	_g_free0 ((*dest).content);
	(*dest).content = _tmp5_;
	_tmp6_ = (*self).time;
	_tmp7_ = g_strdup (_tmp6_);
	_g_free0 ((*dest).time);
	(*dest).time = _tmp7_;
}


void
unity_protocol_social_preview_comment_raw_destroy (UnityProtocolSocialPreviewCommentRaw* self)
{
	_g_free0 ((*self).id);
	_g_free0 ((*self).display_name);
	_g_free0 ((*self).content);
	_g_free0 ((*self).time);
}


UnityProtocolSocialPreviewCommentRaw*
unity_protocol_social_preview_comment_raw_dup (const UnityProtocolSocialPreviewCommentRaw* self)
{
	UnityProtocolSocialPreviewCommentRaw* dup;
	dup = g_new0 (UnityProtocolSocialPreviewCommentRaw, 1);
	unity_protocol_social_preview_comment_raw_copy (self, dup);
	return dup;
}


void
unity_protocol_social_preview_comment_raw_free (UnityProtocolSocialPreviewCommentRaw* self)
{
	unity_protocol_social_preview_comment_raw_destroy (self);
	g_free (self);
}


GType
unity_protocol_social_preview_comment_raw_get_type (void)
{
	static volatile gsize unity_protocol_social_preview_comment_raw_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_social_preview_comment_raw_type_id__volatile)) {
		GType unity_protocol_social_preview_comment_raw_type_id;
		unity_protocol_social_preview_comment_raw_type_id = g_boxed_type_register_static ("UnityProtocolSocialPreviewCommentRaw", (GBoxedCopyFunc) unity_protocol_social_preview_comment_raw_dup, (GBoxedFreeFunc) unity_protocol_social_preview_comment_raw_free);
		g_once_init_leave (&unity_protocol_social_preview_comment_raw_type_id__volatile, unity_protocol_social_preview_comment_raw_type_id);
	}
	return unity_protocol_social_preview_comment_raw_type_id__volatile;
}


static void
unity_protocol_social_preview_class_init (UnityProtocolSocialPreviewClass * klass)
{
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	unity_protocol_social_preview_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityProtocolSocialPreviewPrivate));
	((UnityProtocolPreviewClass *) klass)->get_renderer_name = (const gchar* (*) (UnityProtocolPreview *)) unity_protocol_social_preview_real_get_renderer_name;
	((UnityProtocolPreviewClass *) klass)->add_properties = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_social_preview_real_add_properties;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_protocol_social_preview_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_protocol_social_preview_set_property;
	G_OBJECT_CLASS (klass)->finalize = unity_protocol_social_preview_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_SOCIAL_PREVIEW_AVATAR_PROPERTY, unity_protocol_social_preview_properties[UNITY_PROTOCOL_SOCIAL_PREVIEW_AVATAR_PROPERTY] = g_param_spec_object ("avatar", "avatar", "avatar", g_icon_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_SOCIAL_PREVIEW_CONTENT_PROPERTY, unity_protocol_social_preview_properties[UNITY_PROTOCOL_SOCIAL_PREVIEW_CONTENT_PROPERTY] = g_param_spec_string ("content", "content", "content", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_SOCIAL_PREVIEW_SENDER_PROPERTY, unity_protocol_social_preview_properties[UNITY_PROTOCOL_SOCIAL_PREVIEW_SENDER_PROPERTY] = g_param_spec_string ("sender", "sender", "sender", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	_tmp0_ = g_variant_type_new (UNITY_PROTOCOL_PREVIEW_RAW_SIGNATURE);
	_tmp1_ = _tmp0_;
	dee_serializable_register_parser (UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, _tmp1_, __unity_protocol_social_preview___lambda29__dee_serializable_parse_func);
	_g_variant_type_free0 (_tmp1_);
}


static void
unity_protocol_social_preview_instance_init (UnityProtocolSocialPreview * self)
{
	self->priv = UNITY_PROTOCOL_SOCIAL_PREVIEW_GET_PRIVATE (self);
	self->priv->_comments = NULL;
	self->priv->_comments_length1 = 0;
	self->priv->__comments_size_ = self->priv->_comments_length1;
}


static void
unity_protocol_social_preview_finalize (GObject * obj)
{
	UnityProtocolSocialPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, UnityProtocolSocialPreview);
	_g_object_unref0 (self->priv->_avatar);
	_g_free0 (self->priv->_content);
	_g_free0 (self->priv->_sender);
	self->comments = (_vala_UnityProtocolSocialPreviewCommentRaw_array_free (self->comments, self->comments_length1), NULL);
	self->priv->_comments = (_vala_UnityProtocolSocialPreviewCommentRaw_array_free (self->priv->_comments, self->priv->_comments_length1), NULL);
	G_OBJECT_CLASS (unity_protocol_social_preview_parent_class)->finalize (obj);
}


GType
unity_protocol_social_preview_get_type (void)
{
	static volatile gsize unity_protocol_social_preview_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_social_preview_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityProtocolSocialPreviewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_protocol_social_preview_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityProtocolSocialPreview), 0, (GInstanceInitFunc) unity_protocol_social_preview_instance_init, NULL };
		GType unity_protocol_social_preview_type_id;
		unity_protocol_social_preview_type_id = g_type_register_static (UNITY_PROTOCOL_TYPE_PREVIEW, "UnityProtocolSocialPreview", &g_define_type_info, 0);
		g_once_init_leave (&unity_protocol_social_preview_type_id__volatile, unity_protocol_social_preview_type_id);
	}
	return unity_protocol_social_preview_type_id__volatile;
}


static void
_vala_unity_protocol_social_preview_get_property (GObject * object,
                                                  guint property_id,
                                                  GValue * value,
                                                  GParamSpec * pspec)
{
	UnityProtocolSocialPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, UnityProtocolSocialPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_SOCIAL_PREVIEW_AVATAR_PROPERTY:
		g_value_set_object (value, unity_protocol_social_preview_get_avatar (self));
		break;
		case UNITY_PROTOCOL_SOCIAL_PREVIEW_CONTENT_PROPERTY:
		g_value_set_string (value, unity_protocol_social_preview_get_content (self));
		break;
		case UNITY_PROTOCOL_SOCIAL_PREVIEW_SENDER_PROPERTY:
		g_value_set_string (value, unity_protocol_social_preview_get_sender (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_protocol_social_preview_set_property (GObject * object,
                                                  guint property_id,
                                                  const GValue * value,
                                                  GParamSpec * pspec)
{
	UnityProtocolSocialPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_SOCIAL_PREVIEW, UnityProtocolSocialPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_SOCIAL_PREVIEW_AVATAR_PROPERTY:
		unity_protocol_social_preview_set_avatar (self, g_value_get_object (value));
		break;
		case UNITY_PROTOCOL_SOCIAL_PREVIEW_CONTENT_PROPERTY:
		unity_protocol_social_preview_set_content (self, g_value_get_string (value));
		break;
		case UNITY_PROTOCOL_SOCIAL_PREVIEW_SENDER_PROPERTY:
		unity_protocol_social_preview_set_sender (self, g_value_get_string (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


void
unity_protocol_series_item_raw_copy (const UnityProtocolSeriesItemRaw* self,
                                     UnityProtocolSeriesItemRaw* dest)
{
	const gchar* _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	_tmp0_ = (*self).uri;
	_tmp1_ = g_strdup (_tmp0_);
	_g_free0 ((*dest).uri);
	(*dest).uri = _tmp1_;
	_tmp2_ = (*self).title;
	_tmp3_ = g_strdup (_tmp2_);
	_g_free0 ((*dest).title);
	(*dest).title = _tmp3_;
	_tmp4_ = (*self).icon_hint;
	_tmp5_ = g_strdup (_tmp4_);
	_g_free0 ((*dest).icon_hint);
	(*dest).icon_hint = _tmp5_;
}


void
unity_protocol_series_item_raw_destroy (UnityProtocolSeriesItemRaw* self)
{
	_g_free0 ((*self).uri);
	_g_free0 ((*self).title);
	_g_free0 ((*self).icon_hint);
}


UnityProtocolSeriesItemRaw*
unity_protocol_series_item_raw_dup (const UnityProtocolSeriesItemRaw* self)
{
	UnityProtocolSeriesItemRaw* dup;
	dup = g_new0 (UnityProtocolSeriesItemRaw, 1);
	unity_protocol_series_item_raw_copy (self, dup);
	return dup;
}


void
unity_protocol_series_item_raw_free (UnityProtocolSeriesItemRaw* self)
{
	unity_protocol_series_item_raw_destroy (self);
	g_free (self);
}


GType
unity_protocol_series_item_raw_get_type (void)
{
	static volatile gsize unity_protocol_series_item_raw_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_series_item_raw_type_id__volatile)) {
		GType unity_protocol_series_item_raw_type_id;
		unity_protocol_series_item_raw_type_id = g_boxed_type_register_static ("UnityProtocolSeriesItemRaw", (GBoxedCopyFunc) unity_protocol_series_item_raw_dup, (GBoxedFreeFunc) unity_protocol_series_item_raw_free);
		g_once_init_leave (&unity_protocol_series_item_raw_type_id__volatile, unity_protocol_series_item_raw_type_id);
	}
	return unity_protocol_series_item_raw_type_id__volatile;
}


static void
_vala_UnityProtocolSeriesItemRaw_array_free (UnityProtocolSeriesItemRaw * array,
                                             gint array_length)
{
	if (array != NULL) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			unity_protocol_series_item_raw_destroy (&array[i]);
		}
	}
	g_free (array);
}


UnityProtocolSeriesPreview*
unity_protocol_series_preview_construct (GType object_type)
{
	UnityProtocolSeriesPreview * self = NULL;
	self = (UnityProtocolSeriesPreview*) g_object_new (object_type, NULL);
	return self;
}


UnityProtocolSeriesPreview*
unity_protocol_series_preview_new (void)
{
	return unity_protocol_series_preview_construct (UNITY_PROTOCOL_TYPE_SERIES_PREVIEW);
}


static GVariant*
_variant_new33 (gint value)
{
	return g_variant_ref_sink (g_variant_new_int32 (value));
}


static void
___lambda34_ (UnityProtocolSeriesPreview* self)
{
	gint _tmp0_;
	GVariant* _tmp1_;
	_tmp0_ = self->priv->_selected_item;
	_tmp1_ = _variant_new33 (_tmp0_);
	unity_protocol_preview_add_update ((UnityProtocolPreview*) self, "series-active-index", _tmp1_);
	_g_variant_unref0 (_tmp1_);
}


static void
____lambda34__g_object_notify (GObject* _sender,
                               GParamSpec* pspec,
                               gpointer self)
{
	___lambda34_ ((UnityProtocolSeriesPreview*) self);
}


static void
unity_protocol_series_preview_real_begin_updates (UnityProtocolPreview* base)
{
	UnityProtocolSeriesPreview * self;
	gulong _tmp0_;
	self = (UnityProtocolSeriesPreview*) base;
	UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_series_preview_parent_class)->begin_updates (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview));
	_tmp0_ = self->priv->_selected_item_sig_id;
	if (_tmp0_ == ((gulong) 0)) {
		gulong _tmp1_;
		_tmp1_ = g_signal_connect_object ((GObject*) self, "notify::selected-item", (GCallback) ____lambda34__g_object_notify, self, 0);
		self->priv->_selected_item_sig_id = _tmp1_;
	}
}


static GHashTable*
unity_protocol_series_preview_real_end_updates_as_hashtable (UnityProtocolPreview* base)
{
	UnityProtocolSeriesPreview * self;
	GHashTable* result = NULL;
	gulong _tmp0_;
	GHashTable* _tmp2_;
	self = (UnityProtocolSeriesPreview*) base;
	_tmp0_ = self->priv->_selected_item_sig_id;
	if (_tmp0_ > ((gulong) 0)) {
		gulong _tmp1_;
		_tmp1_ = self->priv->_selected_item_sig_id;
		g_signal_handler_disconnect (self, _tmp1_);
		self->priv->_selected_item_sig_id = (gulong) 0;
	}
	_tmp2_ = UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_series_preview_parent_class)->end_updates_as_hashtable (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview));
	result = _tmp2_;
	return result;
}


static gpointer
_unity_protocol_series_item_raw_dup0 (gpointer self)
{
	return self ? unity_protocol_series_item_raw_dup (self) : NULL;
}


static void
_vala_array_add4 (UnityProtocolSeriesItemRaw* * array,
                  int* length,
                  int* size,
                  const UnityProtocolSeriesItemRaw* value)
{
	if ((*length) == (*size)) {
		*size = (*size) ? (2 * (*size)) : 4;
		*array = g_renew (UnityProtocolSeriesItemRaw, *array, *size);
	}
	(*array)[(*length)++] = *value;
}


void
unity_protocol_series_preview_add_series_item (UnityProtocolSeriesPreview* self,
                                               const gchar* title,
                                               const gchar* uri,
                                               GIcon* icon)
{
	UnityProtocolSeriesItemRaw* item = NULL;
	UnityProtocolSeriesItemRaw _tmp0_ = {0};
	UnityProtocolSeriesItemRaw _tmp1_;
	UnityProtocolSeriesItemRaw* _tmp2_;
	UnityProtocolSeriesItemRaw* _tmp3_;
	UnityProtocolSeriesItemRaw* _tmp4_;
	gchar* _tmp5_;
	UnityProtocolSeriesItemRaw* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_ = NULL;
	UnityProtocolSeriesItemRaw* _tmp11_;
	gchar* _tmp12_;
	UnityProtocolSeriesItemRaw* _tmp13_;
	gint _tmp13__length1;
	UnityProtocolSeriesItemRaw* _tmp14_;
	UnityProtocolSeriesItemRaw* _tmp15_;
	UnityProtocolSeriesItemRaw _tmp16_ = {0};
	g_return_if_fail (self != NULL);
	g_return_if_fail (title != NULL);
	g_return_if_fail (uri != NULL);
	memset (&_tmp0_, 0, sizeof (UnityProtocolSeriesItemRaw));
	_tmp1_ = _tmp0_;
	_tmp2_ = _unity_protocol_series_item_raw_dup0 (&_tmp1_);
	_tmp3_ = _tmp2_;
	unity_protocol_series_item_raw_destroy (&_tmp1_);
	item = _tmp3_;
	_tmp4_ = item;
	_tmp5_ = g_strdup (uri);
	_g_free0 ((*_tmp4_).uri);
	(*_tmp4_).uri = _tmp5_;
	_tmp6_ = item;
	_tmp7_ = g_strdup (title);
	_g_free0 ((*_tmp6_).title);
	(*_tmp6_).title = _tmp7_;
	if (icon != NULL) {
		gchar* _tmp9_;
		_tmp9_ = g_icon_to_string (icon);
		_g_free0 (_tmp8_);
		_tmp8_ = _tmp9_;
	} else {
		gchar* _tmp10_;
		_tmp10_ = g_strdup ("");
		_g_free0 (_tmp8_);
		_tmp8_ = _tmp10_;
	}
	_tmp11_ = item;
	_tmp12_ = g_strdup (_tmp8_);
	_g_free0 ((*_tmp11_).icon_hint);
	(*_tmp11_).icon_hint = _tmp12_;
	_tmp13_ = self->priv->_items;
	_tmp13__length1 = self->priv->_items_length1;
	_tmp14_ = item;
	item = NULL;
	_tmp15_ = _tmp14_;
	unity_protocol_series_item_raw_copy (_tmp15_, &_tmp16_);
	_vala_array_add4 (&self->priv->_items, &self->priv->_items_length1, &self->priv->__items_size_, &_tmp16_);
	_unity_protocol_series_item_raw_free0 (_tmp15_);
	_g_free0 (_tmp8_);
	_unity_protocol_series_item_raw_free0 (item);
}


UnityProtocolSeriesItemRaw*
unity_protocol_series_preview_get_items (UnityProtocolSeriesPreview* self,
                                         int* result_length1)
{
	UnityProtocolSeriesItemRaw* result = NULL;
	UnityProtocolSeriesItemRaw* _tmp0_;
	gint _tmp0__length1;
	UnityProtocolSeriesItemRaw* _tmp1_;
	gint _tmp1__length1;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_items;
	_tmp0__length1 = self->priv->_items_length1;
	_tmp1_ = _tmp0_;
	_tmp1__length1 = _tmp0__length1;
	if (result_length1) {
		*result_length1 = _tmp1__length1;
	}
	result = _tmp1_;
	return result;
}


static const gchar*
unity_protocol_series_preview_real_get_renderer_name (UnityProtocolPreview* base)
{
	UnityProtocolSeriesPreview * self;
	const gchar* result = NULL;
	self = (UnityProtocolSeriesPreview*) base;
	result = UNITY_PROTOCOL_SERIES_PREVIEW_RENDERER_NAME;
	return result;
}


static void
unity_protocol_series_preview_real_update_property (UnityProtocolPreview* base,
                                                    GHashTable* properties)
{
	UnityProtocolSeriesPreview * self;
	self = (UnityProtocolSeriesPreview*) base;
	g_return_if_fail (properties != NULL);
	UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_series_preview_parent_class)->update_property (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview), properties);
	if (g_hash_table_contains (properties, "series-active-index")) {
		gconstpointer _tmp0_;
		_tmp0_ = g_hash_table_lookup (properties, "series-active-index");
		unity_protocol_series_preview_set_selected_item (self, (gint) g_variant_get_int32 ((GVariant*) _tmp0_));
	}
}


static GVariant*
_variant_new34 (UnityProtocolSeriesItemRaw* value,
                gint value_length1)
{
	UnityProtocolSeriesItemRaw* _tmp3_;
	GVariantBuilder _tmp4_;
	int _tmp5_;
	_tmp3_ = value;
	g_variant_builder_init (&_tmp4_, G_VARIANT_TYPE ("a(sss)"));
	for (_tmp5_ = 0; _tmp5_ < value_length1; _tmp5_++) {
		GVariantBuilder _tmp6_;
		g_variant_builder_init (&_tmp6_, G_VARIANT_TYPE_TUPLE);
		g_variant_builder_add_value (&_tmp6_, g_variant_new_string ((*_tmp3_).uri));
		g_variant_builder_add_value (&_tmp6_, g_variant_new_string ((*_tmp3_).title));
		g_variant_builder_add_value (&_tmp6_, g_variant_new_string ((*_tmp3_).icon_hint));
		g_variant_builder_add_value (&_tmp4_, g_variant_builder_end (&_tmp6_));
		_tmp3_++;
	}
	return g_variant_ref_sink (g_variant_builder_end (&_tmp4_));
}


static GVariant*
_variant_new35 (gint value)
{
	return g_variant_ref_sink (g_variant_new_int32 (value));
}


static void
unity_protocol_series_preview_real_add_properties (UnityProtocolPreview* base,
                                                   GHashTable* properties)
{
	UnityProtocolSeriesPreview * self;
	UnityProtocolSeriesItemRaw* _tmp0_;
	gint _tmp0__length1;
	UnityProtocolPreview* _tmp8_;
	gint _tmp12_;
	self = (UnityProtocolSeriesPreview*) base;
	g_return_if_fail (properties != NULL);
	UNITY_PROTOCOL_PREVIEW_CLASS (unity_protocol_series_preview_parent_class)->add_properties (G_TYPE_CHECK_INSTANCE_CAST (self, UNITY_PROTOCOL_TYPE_PREVIEW, UnityProtocolPreview), properties);
	_tmp0_ = self->priv->_items;
	_tmp0__length1 = self->priv->_items_length1;
	if (_tmp0__length1 > 0) {
		gchar* _tmp1_;
		UnityProtocolSeriesItemRaw* _tmp2_;
		gint _tmp2__length1;
		GVariant* _tmp7_;
		_tmp1_ = g_strdup ("series-items");
		_tmp2_ = self->priv->_items;
		_tmp2__length1 = self->priv->_items_length1;
		_tmp7_ = _variant_new34 (_tmp2_, _tmp2__length1);
		g_hash_table_insert (properties, _tmp1_, _tmp7_);
	}
	_tmp8_ = self->priv->_child_preview;
	if (_tmp8_ != NULL) {
		gchar* _tmp9_;
		UnityProtocolPreview* _tmp10_;
		GVariant* _tmp11_;
		_tmp9_ = g_strdup ("current-preview");
		_tmp10_ = self->priv->_child_preview;
		_tmp11_ = dee_serializable_serialize ((DeeSerializable*) _tmp10_);
		g_hash_table_insert (properties, _tmp9_, _tmp11_);
	}
	_tmp12_ = self->priv->_selected_item;
	if (_tmp12_ >= 0) {
		gchar* _tmp13_;
		gint _tmp14_;
		GVariant* _tmp15_;
		_tmp13_ = g_strdup ("series-active-index");
		_tmp14_ = self->priv->_selected_item;
		_tmp15_ = _variant_new35 (_tmp14_);
		g_hash_table_insert (properties, _tmp13_, _tmp15_);
	}
}


gint
unity_protocol_series_preview_get_selected_item (UnityProtocolSeriesPreview* self)
{
	gint result;
	gint _tmp0_;
	g_return_val_if_fail (self != NULL, 0);
	_tmp0_ = self->priv->_selected_item;
	result = _tmp0_;
	return result;
}


void
unity_protocol_series_preview_set_selected_item (UnityProtocolSeriesPreview* self,
                                                 gint value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_series_preview_get_selected_item (self) != value) {
		self->priv->_selected_item = value;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_series_preview_properties[UNITY_PROTOCOL_SERIES_PREVIEW_SELECTED_ITEM_PROPERTY]);
	}
}


UnityProtocolPreview*
unity_protocol_series_preview_get_child_preview (UnityProtocolSeriesPreview* self)
{
	UnityProtocolPreview* result;
	UnityProtocolPreview* _tmp0_;
	g_return_val_if_fail (self != NULL, NULL);
	_tmp0_ = self->priv->_child_preview;
	result = _tmp0_;
	return result;
}


void
unity_protocol_series_preview_set_child_preview (UnityProtocolSeriesPreview* self,
                                                 UnityProtocolPreview* value)
{
	g_return_if_fail (self != NULL);
	if (unity_protocol_series_preview_get_child_preview (self) != value) {
		UnityProtocolPreview* _tmp0_;
		_tmp0_ = _g_object_ref0 (value);
		_g_object_unref0 (self->priv->_child_preview);
		self->priv->_child_preview = _tmp0_;
		g_object_notify_by_pspec ((GObject *) self, unity_protocol_series_preview_properties[UNITY_PROTOCOL_SERIES_PREVIEW_CHILD_PREVIEW_PROPERTY]);
	}
}


static Block6Data*
block6_data_ref (Block6Data* _data6_)
{
	g_atomic_int_inc (&_data6_->_ref_count_);
	return _data6_;
}


static void
block6_data_unref (void * _userdata_)
{
	Block6Data* _data6_;
	_data6_ = (Block6Data*) _userdata_;
	if (g_atomic_int_dec_and_test (&_data6_->_ref_count_)) {
		_g_object_unref0 (_data6_->_result_);
		g_slice_free (Block6Data, _data6_);
	}
}


static UnityProtocolSeriesItemRaw*
_variant_get36 (GVariant* value,
                int* result_length1)
{
	UnityProtocolSeriesItemRaw* _tmp1_;
	int _tmp1__length;
	int _tmp1__size;
	int _tmp1__length1;
	GVariantIter _tmp2_;
	GVariant* _tmp3_;
	_tmp1_ = g_new (UnityProtocolSeriesItemRaw, 5);
	_tmp1__length = 0;
	_tmp1__size = 4;
	_tmp1__length1 = 0;
	g_variant_iter_init (&_tmp2_, value);
	for (; (_tmp3_ = g_variant_iter_next_value (&_tmp2_)) != NULL; _tmp1__length1++) {
		UnityProtocolSeriesItemRaw _tmp4_;
		GVariantIter _tmp5_;
		GVariant* _tmp6_;
		GVariant* _tmp7_;
		GVariant* _tmp8_;
		if (_tmp1__size == _tmp1__length) {
			_tmp1__size = 2 * _tmp1__size;
			_tmp1_ = g_renew (UnityProtocolSeriesItemRaw, _tmp1_, _tmp1__size + 1);
		}
		g_variant_iter_init (&_tmp5_, _tmp3_);
		_tmp6_ = g_variant_iter_next_value (&_tmp5_);
		_tmp4_.uri = g_variant_dup_string (_tmp6_, NULL);
		g_variant_unref (_tmp6_);
		_tmp7_ = g_variant_iter_next_value (&_tmp5_);
		_tmp4_.title = g_variant_dup_string (_tmp7_, NULL);
		g_variant_unref (_tmp7_);
		_tmp8_ = g_variant_iter_next_value (&_tmp5_);
		_tmp4_.icon_hint = g_variant_dup_string (_tmp8_, NULL);
		g_variant_unref (_tmp8_);
		_tmp1_[_tmp1__length++] = _tmp4_;
		g_variant_unref (_tmp3_);
	}
	*result_length1 = _tmp1__length1;
	return _tmp1_;
}


static void
__lambda36_ (Block6Data* _data6_,
             GVariant* v)
{
	UnityProtocolSeriesItemRaw* items = NULL;
	UnityProtocolSeriesItemRaw* _tmp0_ = NULL;
	gint _tmp0__length1 = 0;
	gint items_length1;
	gint _items_size_;
	UnityProtocolSeriesPreview* _tmp9_;
	UnityProtocolSeriesItemRaw* _tmp10_;
	gint _tmp10__length1;
	g_return_if_fail (v != NULL);
	_tmp0_ = _variant_get36 (v, &_tmp0__length1);
	items = _tmp0_;
	items_length1 = _tmp0__length1;
	_items_size_ = items_length1;
	_tmp9_ = _data6_->_result_;
	_tmp10_ = items;
	_tmp10__length1 = items_length1;
	items = NULL;
	items_length1 = 0;
	_tmp9_->priv->_items = (_vala_UnityProtocolSeriesItemRaw_array_free (_tmp9_->priv->_items, _tmp9_->priv->_items_length1), NULL);
	_tmp9_->priv->_items = _tmp10_;
	_tmp9_->priv->_items_length1 = _tmp10__length1;
	_tmp9_->priv->__items_size_ = _tmp9_->priv->_items_length1;
	items = (_vala_UnityProtocolSeriesItemRaw_array_free (items, items_length1), NULL);
}


static void
___lambda36__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda36_ (self, (GVariant*) data);
}


static void
__lambda37_ (Block6Data* _data6_,
             GVariant* v)
{
	UnityProtocolSeriesPreview* _tmp0_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data6_->_result_;
	unity_protocol_series_preview_set_selected_item (_tmp0_, (gint) g_variant_get_int32 (v));
}


static void
___lambda37__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda37_ (self, (GVariant*) data);
}


static void
__lambda38_ (Block6Data* _data6_,
             GVariant* v)
{
	UnityProtocolSeriesPreview* _tmp0_;
	UnityProtocolPreview* _tmp1_;
	UnityProtocolPreview* _tmp2_;
	g_return_if_fail (v != NULL);
	_tmp0_ = _data6_->_result_;
	_tmp1_ = unity_protocol_preview_parse (v);
	_tmp2_ = _tmp1_;
	unity_protocol_series_preview_set_child_preview (_tmp0_, _tmp2_);
	_g_object_unref0 (_tmp2_);
}


static void
___lambda38__gfunc (gconstpointer data,
                    gpointer self)
{
	__lambda38_ (self, (GVariant*) data);
}


static GObject*
_unity_protocol_series_preview___lambda35_ (GVariant* data)
{
	GObject* result = NULL;
	Block6Data* _data6_;
	const gchar* renderer = NULL;
	GVariant* _tmp0_;
	GVariant* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	GHashTable* properties = NULL;
	GHashTable* _tmp5_ = NULL;
	gpointer _tmp6_;
	GHashTable* _tmp7_;
	gconstpointer _tmp8_;
	GHashTable* _tmp9_;
	gconstpointer _tmp10_;
	GHashTable* _tmp11_;
	gconstpointer _tmp12_;
	UnityProtocolSeriesPreview* _tmp13_;
	GObject* _tmp14_;
	g_return_val_if_fail (data != NULL, NULL);
	_data6_ = g_slice_new0 (Block6Data);
	_data6_->_ref_count_ = 1;
	_tmp0_ = g_variant_get_child_value (data, (gsize) 0);
	_tmp1_ = _tmp0_;
	_tmp2_ = g_variant_get_string (_tmp1_, NULL);
	_tmp3_ = _tmp2_;
	_g_variant_unref0 (_tmp1_);
	renderer = _tmp3_;
	_tmp4_ = renderer;
	g_warn_if_fail (g_strcmp0 (_tmp4_, UNITY_PROTOCOL_SERIES_PREVIEW_RENDERER_NAME) == 0);
	_tmp6_ = unity_protocol_preview_deserialize (UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, data, &_tmp5_);
	_g_hash_table_unref0 (properties);
	properties = _tmp5_;
	_data6_->_result_ = (UnityProtocolSeriesPreview*) _tmp6_;
	_tmp7_ = properties;
	_tmp8_ = g_hash_table_lookup (_tmp7_, "series-items");
	unity_protocol_preview_checked_set ((GVariant*) _tmp8_, ___lambda36__gfunc, _data6_);
	_tmp9_ = properties;
	_tmp10_ = g_hash_table_lookup (_tmp9_, "series-active-index");
	unity_protocol_preview_checked_set ((GVariant*) _tmp10_, ___lambda37__gfunc, _data6_);
	_tmp11_ = properties;
	_tmp12_ = g_hash_table_lookup (_tmp11_, "current-preview");
	unity_protocol_preview_checked_set ((GVariant*) _tmp12_, ___lambda38__gfunc, _data6_);
	_tmp13_ = _data6_->_result_;
	_tmp14_ = _g_object_ref0 ((GObject*) _tmp13_);
	result = _tmp14_;
	_g_hash_table_unref0 (properties);
	block6_data_unref (_data6_);
	_data6_ = NULL;
	return result;
}


static GObject*
__unity_protocol_series_preview___lambda35__dee_serializable_parse_func (GVariant* data)
{
	GObject* result;
	result = _unity_protocol_series_preview___lambda35_ (data);
	return result;
}


static void
unity_protocol_series_preview_class_init (UnityProtocolSeriesPreviewClass * klass)
{
	GVariantType* _tmp0_;
	GVariantType* _tmp1_;
	unity_protocol_series_preview_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityProtocolSeriesPreviewPrivate));
	((UnityProtocolPreviewClass *) klass)->begin_updates = (void (*) (UnityProtocolPreview *)) unity_protocol_series_preview_real_begin_updates;
	((UnityProtocolPreviewClass *) klass)->end_updates_as_hashtable = (GHashTable* (*) (UnityProtocolPreview *)) unity_protocol_series_preview_real_end_updates_as_hashtable;
	((UnityProtocolPreviewClass *) klass)->get_renderer_name = (const gchar* (*) (UnityProtocolPreview *)) unity_protocol_series_preview_real_get_renderer_name;
	((UnityProtocolPreviewClass *) klass)->update_property = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_series_preview_real_update_property;
	((UnityProtocolPreviewClass *) klass)->add_properties = (void (*) (UnityProtocolPreview *, GHashTable*)) unity_protocol_series_preview_real_add_properties;
	G_OBJECT_CLASS (klass)->get_property = _vala_unity_protocol_series_preview_get_property;
	G_OBJECT_CLASS (klass)->set_property = _vala_unity_protocol_series_preview_set_property;
	G_OBJECT_CLASS (klass)->finalize = unity_protocol_series_preview_finalize;
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_SERIES_PREVIEW_SELECTED_ITEM_PROPERTY, unity_protocol_series_preview_properties[UNITY_PROTOCOL_SERIES_PREVIEW_SELECTED_ITEM_PROPERTY] = g_param_spec_int ("selected-item", "selected-item", "selected-item", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	g_object_class_install_property (G_OBJECT_CLASS (klass), UNITY_PROTOCOL_SERIES_PREVIEW_CHILD_PREVIEW_PROPERTY, unity_protocol_series_preview_properties[UNITY_PROTOCOL_SERIES_PREVIEW_CHILD_PREVIEW_PROPERTY] = g_param_spec_object ("child-preview", "child-preview", "child-preview", UNITY_PROTOCOL_TYPE_PREVIEW, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
	_tmp0_ = g_variant_type_new (UNITY_PROTOCOL_PREVIEW_RAW_SIGNATURE);
	_tmp1_ = _tmp0_;
	dee_serializable_register_parser (UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, _tmp1_, __unity_protocol_series_preview___lambda35__dee_serializable_parse_func);
	_g_variant_type_free0 (_tmp1_);
}


static void
unity_protocol_series_preview_instance_init (UnityProtocolSeriesPreview * self)
{
	self->priv = UNITY_PROTOCOL_SERIES_PREVIEW_GET_PRIVATE (self);
	self->priv->_items = NULL;
	self->priv->_items_length1 = 0;
	self->priv->__items_size_ = self->priv->_items_length1;
	self->priv->_selected_item_sig_id = (gulong) 0;
}


static void
unity_protocol_series_preview_finalize (GObject * obj)
{
	UnityProtocolSeriesPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, UnityProtocolSeriesPreview);
	_g_object_unref0 (self->priv->_child_preview);
	self->priv->_items = (_vala_UnityProtocolSeriesItemRaw_array_free (self->priv->_items, self->priv->_items_length1), NULL);
	G_OBJECT_CLASS (unity_protocol_series_preview_parent_class)->finalize (obj);
}


GType
unity_protocol_series_preview_get_type (void)
{
	static volatile gsize unity_protocol_series_preview_type_id__volatile = 0;
	if (g_once_init_enter (&unity_protocol_series_preview_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityProtocolSeriesPreviewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_protocol_series_preview_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityProtocolSeriesPreview), 0, (GInstanceInitFunc) unity_protocol_series_preview_instance_init, NULL };
		GType unity_protocol_series_preview_type_id;
		unity_protocol_series_preview_type_id = g_type_register_static (UNITY_PROTOCOL_TYPE_PREVIEW, "UnityProtocolSeriesPreview", &g_define_type_info, 0);
		g_once_init_leave (&unity_protocol_series_preview_type_id__volatile, unity_protocol_series_preview_type_id);
	}
	return unity_protocol_series_preview_type_id__volatile;
}


static void
_vala_unity_protocol_series_preview_get_property (GObject * object,
                                                  guint property_id,
                                                  GValue * value,
                                                  GParamSpec * pspec)
{
	UnityProtocolSeriesPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, UnityProtocolSeriesPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_SERIES_PREVIEW_SELECTED_ITEM_PROPERTY:
		g_value_set_int (value, unity_protocol_series_preview_get_selected_item (self));
		break;
		case UNITY_PROTOCOL_SERIES_PREVIEW_CHILD_PREVIEW_PROPERTY:
		g_value_set_object (value, unity_protocol_series_preview_get_child_preview (self));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}


static void
_vala_unity_protocol_series_preview_set_property (GObject * object,
                                                  guint property_id,
                                                  const GValue * value,
                                                  GParamSpec * pspec)
{
	UnityProtocolSeriesPreview * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, UNITY_PROTOCOL_TYPE_SERIES_PREVIEW, UnityProtocolSeriesPreview);
	switch (property_id) {
		case UNITY_PROTOCOL_SERIES_PREVIEW_SELECTED_ITEM_PROPERTY:
		unity_protocol_series_preview_set_selected_item (self, g_value_get_int (value));
		break;
		case UNITY_PROTOCOL_SERIES_PREVIEW_CHILD_PREVIEW_PROPERTY:
		unity_protocol_series_preview_set_child_preview (self, g_value_get_object (value));
		break;
		default:
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
		break;
	}
}



