/* ShareDialog.c generated by valac 0.40.11, the Vala compiler
 * generated from ShareDialog.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <gtksourceview/gtksource.h>
#include <stdlib.h>
#include <string.h>
#include <gee.h>
#include <glib/gi18n-lib.h>
#include <gdk/gdk.h>


#define DIALOGS_TYPE_SHARE_DIALOG (dialogs_share_dialog_get_type ())
#define DIALOGS_SHARE_DIALOG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialog))
#define DIALOGS_SHARE_DIALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialogClass))
#define DIALOGS_IS_SHARE_DIALOG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_TYPE_SHARE_DIALOG))
#define DIALOGS_IS_SHARE_DIALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_TYPE_SHARE_DIALOG))
#define DIALOGS_SHARE_DIALOG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialogClass))

typedef struct _DialogsShareDialog DialogsShareDialog;
typedef struct _DialogsShareDialogClass DialogsShareDialogClass;
typedef struct _DialogsShareDialogPrivate DialogsShareDialogPrivate;
enum  {
	DIALOGS_SHARE_DIALOG_0_PROPERTY,
	DIALOGS_SHARE_DIALOG_PROJECT_PROPERTY,
	DIALOGS_SHARE_DIALOG_INBOX_PROPERTY,
	DIALOGS_SHARE_DIALOG_TODAY_PROPERTY,
	DIALOGS_SHARE_DIALOG_UPCOMING_PROPERTY,
	DIALOGS_SHARE_DIALOG_TASK_PROPERTY,
	DIALOGS_SHARE_DIALOG_NUM_PROPERTIES
};
static GParamSpec* dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define TYPE_MAIN_WINDOW (main_window_get_type ())
#define MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MAIN_WINDOW, MainWindow))
#define MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_MAIN_WINDOW, MainWindowClass))
#define IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MAIN_WINDOW))
#define IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_MAIN_WINDOW))
#define MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MAIN_WINDOW, MainWindowClass))

typedef struct _MainWindow MainWindow;
typedef struct _MainWindowClass MainWindowClass;
#define _g_free0(var) (var = (g_free (var), NULL))

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;

#define SERVICES_TYPE_DATABASE (services_database_get_type ())
#define SERVICES_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_DATABASE, ServicesDatabase))
#define SERVICES_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))
#define SERVICES_IS_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_DATABASE))
#define SERVICES_IS_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_DATABASE))
#define SERVICES_DATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))

typedef struct _ServicesDatabase ServicesDatabase;
typedef struct _ServicesDatabaseClass ServicesDatabaseClass;

#define OBJECTS_TYPE_TASK (objects_task_get_type ())
#define OBJECTS_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_TASK, ObjectsTask))
#define OBJECTS_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_TASK, ObjectsTaskClass))
#define OBJECTS_IS_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_TASK))
#define OBJECTS_IS_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_TASK))
#define OBJECTS_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_TASK, ObjectsTaskClass))

typedef struct _ObjectsTask ObjectsTask;
typedef struct _ObjectsTaskClass ObjectsTaskClass;
typedef struct _ObjectsProjectPrivate ObjectsProjectPrivate;
typedef struct _ObjectsTaskPrivate ObjectsTaskPrivate;

#define TYPE_UTILS (utils_get_type ())
#define UTILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTILS, Utils))
#define UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTILS, UtilsClass))
#define IS_UTILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTILS))
#define IS_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTILS))
#define UTILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTILS, UtilsClass))

typedef struct _Utils Utils;
typedef struct _UtilsClass UtilsClass;
#define _objects_task_unref0(var) ((var == NULL) ? NULL : (var = (objects_task_unref (var), NULL)))
#define _objects_project_unref0(var) ((var == NULL) ? NULL : (var = (objects_project_unref (var), NULL)))
#define _g_time_zone_unref0(var) ((var == NULL) ? NULL : (var = (g_time_zone_unref (var), NULL)))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))

#define SERVICES_TYPE_NOTIFICATIONS (services_notifications_get_type ())
#define SERVICES_NOTIFICATIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_NOTIFICATIONS, ServicesNotifications))
#define SERVICES_NOTIFICATIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_NOTIFICATIONS, ServicesNotificationsClass))
#define SERVICES_IS_NOTIFICATIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_NOTIFICATIONS))
#define SERVICES_IS_NOTIFICATIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_NOTIFICATIONS))
#define SERVICES_NOTIFICATIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_NOTIFICATIONS, ServicesNotificationsClass))

typedef struct _ServicesNotifications ServicesNotifications;
typedef struct _ServicesNotificationsClass ServicesNotificationsClass;

struct _DialogsShareDialog {
	GtkDialog parent_instance;
	DialogsShareDialogPrivate * priv;
};

struct _DialogsShareDialogClass {
	GtkDialogClass parent_class;
};

struct _DialogsShareDialogPrivate {
	GtkSourceView* source_view;
};

struct _ObjectsProject {
	GTypeInstance parent_instance;
	volatile int ref_count;
	ObjectsProjectPrivate * priv;
	gint id;
	gchar* name;
	gchar* note;
	gchar* deadline;
	gint item_order;
	gint is_deleted;
	gchar* color;
};

struct _ObjectsProjectClass {
	GTypeClass parent_class;
	void (*finalize) (ObjectsProject *self);
};

struct _ObjectsTask {
	GTypeInstance parent_instance;
	volatile int ref_count;
	ObjectsTaskPrivate * priv;
	gint id;
	gint checked;
	gint project_id;
	gint list_id;
	gint task_order;
	gint is_inbox;
	gint has_reminder;
	gint sidebar_width;
	gint was_notified;
	gchar* content;
	gchar* note;
	gchar* when_date_utc;
	gchar* reminder_time;
	gchar* labels;
	gchar* checklist;
};

struct _ObjectsTaskClass {
	GTypeClass parent_class;
	void (*finalize) (ObjectsTask *self);
};


static gpointer dialogs_share_dialog_parent_class = NULL;
extern ServicesDatabase* application_database;
extern Utils* application_utils;
extern ServicesNotifications* application_notification;

GType dialogs_share_dialog_get_type (void) G_GNUC_CONST;
#define DIALOGS_SHARE_DIALOG_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialogPrivate))
GType main_window_get_type (void) G_GNUC_CONST;
DialogsShareDialog* dialogs_share_dialog_new (MainWindow* parent);
DialogsShareDialog* dialogs_share_dialog_construct (GType object_type,
                                                    MainWindow* parent);
static void dialogs_share_dialog_add_line (DialogsShareDialog* self,
                                    const gchar* text);
void dialogs_share_dialog_set_project (DialogsShareDialog* self,
                                       gint value);
gpointer objects_project_ref (gpointer instance);
void objects_project_unref (gpointer instance);
GParamSpec* objects_param_spec_project (const gchar* name,
                                        const gchar* nick,
                                        const gchar* blurb,
                                        GType object_type,
                                        GParamFlags flags);
void objects_value_set_project (GValue* value,
                                gpointer v_object);
void objects_value_take_project (GValue* value,
                                 gpointer v_object);
gpointer objects_value_get_project (const GValue* value);
GType objects_project_get_type (void) G_GNUC_CONST;
GType services_database_get_type (void) G_GNUC_CONST;
ObjectsProject* services_database_get_project (ServicesDatabase* self,
                                               gint id);
gpointer objects_task_ref (gpointer instance);
void objects_task_unref (gpointer instance);
GParamSpec* objects_param_spec_task (const gchar* name,
                                     const gchar* nick,
                                     const gchar* blurb,
                                     GType object_type,
                                     GParamFlags flags);
void objects_value_set_task (GValue* value,
                             gpointer v_object);
void objects_value_take_task (GValue* value,
                              gpointer v_object);
gpointer objects_value_get_task (const GValue* value);
GType objects_task_get_type (void) G_GNUC_CONST;
GeeArrayList* services_database_get_all_tasks_by_project (ServicesDatabase* self,
                                                          gint id);
GType utils_get_type (void) G_GNUC_CONST;
gchar* utils_get_default_date_format (Utils* self,
                                      const gchar* date_string);
void dialogs_share_dialog_set_inbox (DialogsShareDialog* self,
                                     gboolean value);
GeeArrayList* services_database_get_all_inbox_tasks (ServicesDatabase* self);
void dialogs_share_dialog_set_today (DialogsShareDialog* self,
                                     gboolean value);
GeeArrayList* services_database_get_all_today_tasks (ServicesDatabase* self);
void dialogs_share_dialog_set_upcoming (DialogsShareDialog* self,
                                        gboolean value);
GeeArrayList* services_database_get_all_upcoming_tasks (ServicesDatabase* self);
static gint _dialogs_share_dialog_upcoming___lambda72_ (DialogsShareDialog* self,
                                                 ObjectsTask* task_1,
                                                 ObjectsTask* task_2);
static gint __dialogs_share_dialog_upcoming___lambda72__gcompare_data_func (gconstpointer a,
                                                                     gconstpointer b,
                                                                     gpointer self);
void dialogs_share_dialog_set_task (DialogsShareDialog* self,
                                    gint value);
ObjectsTask* services_database_get_task (ServicesDatabase* self,
                                         gint id);
static GObject * dialogs_share_dialog_constructor (GType type,
                                            guint n_construct_properties,
                                            GObjectConstructParam * construct_properties);
static void _dialogs_share_dialog___lambda73_ (DialogsShareDialog* self);
static void __dialogs_share_dialog___lambda73__gtk_button_clicked (GtkButton* _sender,
                                                            gpointer self);
static void _dialogs_share_dialog___lambda74_ (DialogsShareDialog* self);
GType services_notifications_get_type (void) G_GNUC_CONST;
static void __dialogs_share_dialog___lambda74__gtk_button_clicked (GtkButton* _sender,
                                                            gpointer self);
static void dialogs_share_dialog_finalize (GObject * obj);
static void _vala_dialogs_share_dialog_set_property (GObject * object,
                                              guint property_id,
                                              const GValue * value,
                                              GParamSpec * pspec);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);
static gint _vala_array_length (gpointer array);


DialogsShareDialog*
dialogs_share_dialog_construct (GType object_type,
                                MainWindow* parent)
{
	DialogsShareDialog * self = NULL;
#line 154 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_return_val_if_fail (parent != NULL, NULL);
#line 155 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	self = (DialogsShareDialog*) g_object_new (object_type, "transient-for", parent, "deletable", FALSE, "resizable", FALSE, "destroy-with-parent", TRUE, "window-position", GTK_WIN_POS_CENTER_ON_PARENT, NULL);
#line 154 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	return self;
#line 288 "ShareDialog.c"
}


DialogsShareDialog*
dialogs_share_dialog_new (MainWindow* parent)
{
#line 154 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	return dialogs_share_dialog_construct (DIALOGS_TYPE_SHARE_DIALOG, parent);
#line 297 "ShareDialog.c"
}


static void
dialogs_share_dialog_add_line (DialogsShareDialog* self,
                               const gchar* text)
{
	GtkSourceView* _tmp0_;
	GtkTextBuffer* _tmp1_;
	GtkTextBuffer* _tmp2_;
	GtkSourceView* _tmp3_;
	GtkTextBuffer* _tmp4_;
	GtkTextBuffer* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	gchar* _tmp12_;
#line 226 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_return_if_fail (self != NULL);
#line 226 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_return_if_fail (text != NULL);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = self->priv->source_view;
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = gtk_text_view_get_buffer ((GtkTextView*) _tmp0_);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = _tmp1_;
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = self->priv->source_view;
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = gtk_text_view_get_buffer ((GtkTextView*) _tmp3_);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = _tmp4_;
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_get (_tmp5_, "text", &_tmp6_, NULL);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp7_ = _tmp6_;
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp8_ = _tmp7_;
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp9_ = g_strdup_printf ("%s\n", text);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp10_ = _tmp9_;
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp11_ = g_strconcat (_tmp8_, _tmp10_, NULL);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp12_ = _tmp11_;
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_set (_tmp2_, "text", _tmp12_, NULL);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_free0 (_tmp12_);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_free0 (_tmp10_);
#line 227 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_free0 (_tmp8_);
#line 356 "ShareDialog.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	return self ? g_object_ref (self) : NULL;
#line 365 "ShareDialog.c"
}


void
dialogs_share_dialog_set_project (DialogsShareDialog* self,
                                  gint value)
{
	ObjectsProject* project = NULL;
	ServicesDatabase* _tmp0_;
	ObjectsProject* _tmp1_;
	GeeArrayList* tasks = NULL;
	ServicesDatabase* _tmp2_;
	GeeArrayList* _tmp3_;
	GtkSourceView* _tmp4_;
	GtkTextBuffer* _tmp5_;
	GtkTextBuffer* _tmp6_;
	ObjectsProject* _tmp7_;
	const gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	ObjectsProject* _tmp11_;
	const gchar* _tmp12_;
#line 26 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_return_if_fail (self != NULL);
#line 27 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = application_database;
#line 27 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = services_database_get_project (_tmp0_, value);
#line 27 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	project = _tmp1_;
#line 28 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = application_database;
#line 28 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = services_database_get_all_tasks_by_project (_tmp2_, value);
#line 28 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	tasks = _tmp3_;
#line 29 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = self->priv->source_view;
#line 29 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = gtk_text_view_get_buffer ((GtkTextView*) _tmp4_);
#line 29 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp6_ = _tmp5_;
#line 29 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_set (_tmp6_, "text", "", NULL);
#line 31 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp7_ = project;
#line 31 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp8_ = _tmp7_->name;
#line 31 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp9_ = g_strdup_printf ("# %s", _tmp8_);
#line 31 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp10_ = _tmp9_;
#line 31 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, _tmp10_);
#line 31 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_free0 (_tmp10_);
#line 32 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, "");
#line 34 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp11_ = project;
#line 34 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp12_ = _tmp11_->note;
#line 34 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	if (g_strcmp0 (_tmp12_, "") != 0) {
#line 430 "ShareDialog.c"
		ObjectsProject* _tmp13_;
		const gchar* _tmp14_;
		gchar* _tmp15_;
		gchar* _tmp16_;
#line 35 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp13_ = project;
#line 35 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp14_ = _tmp13_->note;
#line 35 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp15_ = g_strdup_printf ("%s", _tmp14_);
#line 35 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp16_ = _tmp15_;
#line 35 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_add_line (self, _tmp16_);
#line 35 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_free0 (_tmp16_);
#line 36 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_add_line (self, "");
#line 449 "ShareDialog.c"
	}
	{
		GeeArrayList* _task_list = NULL;
		GeeArrayList* _tmp17_;
		GeeArrayList* _tmp18_;
		gint _task_size = 0;
		GeeArrayList* _tmp19_;
		gint _tmp20_;
		gint _tmp21_;
		gint _task_index = 0;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp17_ = tasks;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp18_ = _g_object_ref0 (_tmp17_);
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_list = _tmp18_;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp19_ = _task_list;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp20_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp19_);
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp21_ = _tmp20_;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_size = _tmp21_;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_index = -1;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		while (TRUE) {
#line 478 "ShareDialog.c"
			gint _tmp22_;
			gint _tmp23_;
			gint _tmp24_;
			ObjectsTask* task = NULL;
			GeeArrayList* _tmp25_;
			gint _tmp26_;
			gpointer _tmp27_;
			ObjectsTask* _tmp28_;
			gint _tmp29_;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp22_ = _task_index;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_task_index = _tmp22_ + 1;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp23_ = _task_index;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp24_ = _task_size;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			if (!(_tmp23_ < _tmp24_)) {
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				break;
#line 500 "ShareDialog.c"
			}
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp25_ = _task_list;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp26_ = _task_index;
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp27_ = gee_abstract_list_get ((GeeAbstractList*) _tmp25_, _tmp26_);
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			task = (ObjectsTask*) _tmp27_;
#line 40 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp28_ = task;
#line 40 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp29_ = _tmp28_->checked;
#line 40 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			if (_tmp29_ != 1) {
#line 516 "ShareDialog.c"
				ObjectsTask* _tmp30_;
				const gchar* _tmp31_;
#line 41 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp30_ = task;
#line 41 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp31_ = _tmp30_->when_date_utc;
#line 41 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				if (g_strcmp0 (_tmp31_, "") == 0) {
#line 525 "ShareDialog.c"
					ObjectsTask* _tmp32_;
					const gchar* _tmp33_;
					gchar* _tmp34_;
					gchar* _tmp35_;
#line 42 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp32_ = task;
#line 42 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp33_ = _tmp32_->content;
#line 42 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp34_ = g_strdup_printf ("- [ ] %s", _tmp33_);
#line 42 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp35_ = _tmp34_;
#line 42 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					dialogs_share_dialog_add_line (self, _tmp35_);
#line 42 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_g_free0 (_tmp35_);
#line 542 "ShareDialog.c"
				} else {
					Utils* _tmp36_;
					ObjectsTask* _tmp37_;
					const gchar* _tmp38_;
					gchar* _tmp39_;
					gchar* _tmp40_;
					ObjectsTask* _tmp41_;
					const gchar* _tmp42_;
					gchar* _tmp43_;
					gchar* _tmp44_;
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp36_ = application_utils;
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp37_ = task;
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp38_ = _tmp37_->when_date_utc;
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp39_ = utils_get_default_date_format (_tmp36_, _tmp38_);
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp40_ = _tmp39_;
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp41_ = task;
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp42_ = _tmp41_->content;
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp43_ = g_strdup_printf ("- [ ] [%s] %s", _tmp40_, _tmp42_);
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp44_ = _tmp43_;
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					dialogs_share_dialog_add_line (self, _tmp44_);
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_g_free0 (_tmp44_);
#line 44 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_g_free0 (_tmp40_);
#line 577 "ShareDialog.c"
				}
			}
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_objects_task_unref0 (task);
#line 582 "ShareDialog.c"
		}
#line 39 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_object_unref0 (_task_list);
#line 586 "ShareDialog.c"
	}
#line 49 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 26 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (tasks);
#line 26 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_objects_project_unref0 (project);
#line 26 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_PROJECT_PROPERTY]);
#line 596 "ShareDialog.c"
}


void
dialogs_share_dialog_set_inbox (DialogsShareDialog* self,
                                gboolean value)
{
	GtkSourceView* _tmp0_;
	GtkTextBuffer* _tmp1_;
	GtkTextBuffer* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	GeeArrayList* tasks = NULL;
	ServicesDatabase* _tmp5_;
	GeeArrayList* _tmp6_;
#line 54 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_return_if_fail (self != NULL);
#line 55 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = self->priv->source_view;
#line 55 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = gtk_text_view_get_buffer ((GtkTextView*) _tmp0_);
#line 55 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = _tmp1_;
#line 55 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_set (_tmp2_, "text", "", NULL);
#line 57 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = g_strdup_printf ("# %s", _ ("Inbox"));
#line 57 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = _tmp3_;
#line 57 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, _tmp4_);
#line 57 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_free0 (_tmp4_);
#line 58 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, "");
#line 60 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = application_database;
#line 60 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp6_ = services_database_get_all_inbox_tasks (_tmp5_);
#line 60 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	tasks = _tmp6_;
#line 638 "ShareDialog.c"
	{
		GeeArrayList* _task_list = NULL;
		GeeArrayList* _tmp7_;
		GeeArrayList* _tmp8_;
		gint _task_size = 0;
		GeeArrayList* _tmp9_;
		gint _tmp10_;
		gint _tmp11_;
		gint _task_index = 0;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp7_ = tasks;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp8_ = _g_object_ref0 (_tmp7_);
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_list = _tmp8_;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp9_ = _task_list;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp10_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp9_);
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp11_ = _tmp10_;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_size = _tmp11_;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_index = -1;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		while (TRUE) {
#line 666 "ShareDialog.c"
			gint _tmp12_;
			gint _tmp13_;
			gint _tmp14_;
			ObjectsTask* task = NULL;
			GeeArrayList* _tmp15_;
			gint _tmp16_;
			gpointer _tmp17_;
			ObjectsTask* _tmp18_;
			gint _tmp19_;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp12_ = _task_index;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_task_index = _tmp12_ + 1;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp13_ = _task_index;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp14_ = _task_size;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			if (!(_tmp13_ < _tmp14_)) {
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				break;
#line 688 "ShareDialog.c"
			}
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp15_ = _task_list;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp16_ = _task_index;
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp17_ = gee_abstract_list_get ((GeeAbstractList*) _tmp15_, _tmp16_);
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			task = (ObjectsTask*) _tmp17_;
#line 63 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp18_ = task;
#line 63 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp19_ = _tmp18_->checked;
#line 63 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			if (_tmp19_ != 1) {
#line 704 "ShareDialog.c"
				ObjectsTask* _tmp20_;
				const gchar* _tmp21_;
#line 64 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp20_ = task;
#line 64 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp21_ = _tmp20_->when_date_utc;
#line 64 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				if (g_strcmp0 (_tmp21_, "") == 0) {
#line 713 "ShareDialog.c"
					ObjectsTask* _tmp22_;
					const gchar* _tmp23_;
					gchar* _tmp24_;
					gchar* _tmp25_;
#line 65 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp22_ = task;
#line 65 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp23_ = _tmp22_->content;
#line 65 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp24_ = g_strdup_printf ("- [ ] %s", _tmp23_);
#line 65 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp25_ = _tmp24_;
#line 65 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					dialogs_share_dialog_add_line (self, _tmp25_);
#line 65 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_g_free0 (_tmp25_);
#line 730 "ShareDialog.c"
				} else {
					Utils* _tmp26_;
					ObjectsTask* _tmp27_;
					const gchar* _tmp28_;
					gchar* _tmp29_;
					gchar* _tmp30_;
					ObjectsTask* _tmp31_;
					const gchar* _tmp32_;
					gchar* _tmp33_;
					gchar* _tmp34_;
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp26_ = application_utils;
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp27_ = task;
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp28_ = _tmp27_->when_date_utc;
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp29_ = utils_get_default_date_format (_tmp26_, _tmp28_);
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp30_ = _tmp29_;
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp31_ = task;
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp32_ = _tmp31_->content;
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp33_ = g_strdup_printf ("- [ ] [%s] %s", _tmp30_, _tmp32_);
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp34_ = _tmp33_;
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					dialogs_share_dialog_add_line (self, _tmp34_);
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_g_free0 (_tmp34_);
#line 67 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_g_free0 (_tmp30_);
#line 765 "ShareDialog.c"
				}
			}
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_objects_task_unref0 (task);
#line 770 "ShareDialog.c"
		}
#line 62 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_object_unref0 (_task_list);
#line 774 "ShareDialog.c"
	}
#line 72 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 54 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (tasks);
#line 54 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_INBOX_PROPERTY]);
#line 782 "ShareDialog.c"
}


void
dialogs_share_dialog_set_today (DialogsShareDialog* self,
                                gboolean value)
{
	GtkSourceView* _tmp0_;
	GtkTextBuffer* _tmp1_;
	GtkTextBuffer* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	GeeArrayList* tasks = NULL;
	ServicesDatabase* _tmp5_;
	GeeArrayList* _tmp6_;
#line 77 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_return_if_fail (self != NULL);
#line 78 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = self->priv->source_view;
#line 78 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = gtk_text_view_get_buffer ((GtkTextView*) _tmp0_);
#line 78 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = _tmp1_;
#line 78 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_set (_tmp2_, "text", "", NULL);
#line 80 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = g_strdup_printf ("# %s", _ ("Today"));
#line 80 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = _tmp3_;
#line 80 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, _tmp4_);
#line 80 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_free0 (_tmp4_);
#line 81 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, "");
#line 83 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = application_database;
#line 83 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp6_ = services_database_get_all_today_tasks (_tmp5_);
#line 83 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	tasks = _tmp6_;
#line 824 "ShareDialog.c"
	{
		GeeArrayList* _task_list = NULL;
		GeeArrayList* _tmp7_;
		GeeArrayList* _tmp8_;
		gint _task_size = 0;
		GeeArrayList* _tmp9_;
		gint _tmp10_;
		gint _tmp11_;
		gint _task_index = 0;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp7_ = tasks;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp8_ = _g_object_ref0 (_tmp7_);
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_list = _tmp8_;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp9_ = _task_list;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp10_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp9_);
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp11_ = _tmp10_;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_size = _tmp11_;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_index = -1;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		while (TRUE) {
#line 852 "ShareDialog.c"
			gint _tmp12_;
			gint _tmp13_;
			gint _tmp14_;
			ObjectsTask* task = NULL;
			GeeArrayList* _tmp15_;
			gint _tmp16_;
			gpointer _tmp17_;
			ObjectsTask* _tmp18_;
			gint _tmp19_;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp12_ = _task_index;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_task_index = _tmp12_ + 1;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp13_ = _task_index;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp14_ = _task_size;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			if (!(_tmp13_ < _tmp14_)) {
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				break;
#line 874 "ShareDialog.c"
			}
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp15_ = _task_list;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp16_ = _task_index;
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp17_ = gee_abstract_list_get ((GeeAbstractList*) _tmp15_, _tmp16_);
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			task = (ObjectsTask*) _tmp17_;
#line 86 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp18_ = task;
#line 86 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp19_ = _tmp18_->checked;
#line 86 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			if (_tmp19_ != 1) {
#line 890 "ShareDialog.c"
				Utils* _tmp20_;
				ObjectsTask* _tmp21_;
				const gchar* _tmp22_;
				gchar* _tmp23_;
				gchar* _tmp24_;
				ObjectsTask* _tmp25_;
				const gchar* _tmp26_;
				gchar* _tmp27_;
				gchar* _tmp28_;
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp20_ = application_utils;
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp21_ = task;
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp22_ = _tmp21_->when_date_utc;
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp23_ = utils_get_default_date_format (_tmp20_, _tmp22_);
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp24_ = _tmp23_;
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp25_ = task;
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp26_ = _tmp25_->content;
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp27_ = g_strdup_printf ("- [ ] [%s] %s", _tmp24_, _tmp26_);
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp28_ = _tmp27_;
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				dialogs_share_dialog_add_line (self, _tmp28_);
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_g_free0 (_tmp28_);
#line 87 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_g_free0 (_tmp24_);
#line 924 "ShareDialog.c"
			}
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_objects_task_unref0 (task);
#line 928 "ShareDialog.c"
		}
#line 85 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_object_unref0 (_task_list);
#line 932 "ShareDialog.c"
	}
#line 91 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 77 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (tasks);
#line 77 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_TODAY_PROPERTY]);
#line 940 "ShareDialog.c"
}


static gint
_dialogs_share_dialog_upcoming___lambda72_ (DialogsShareDialog* self,
                                            ObjectsTask* task_1,
                                            ObjectsTask* task_2)
{
	gint result = 0;
	GDateTime* date1 = NULL;
	const gchar* _tmp0_;
	GTimeZone* _tmp1_;
	GTimeZone* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	GDateTime* date2 = NULL;
	const gchar* _tmp5_;
	GTimeZone* _tmp6_;
	GTimeZone* _tmp7_;
	GDateTime* _tmp8_;
	GDateTime* _tmp9_;
#line 104 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = task_1->when_date_utc;
#line 104 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = g_time_zone_new_local ();
#line 104 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = _tmp1_;
#line 104 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = g_date_time_new_from_iso8601 (_tmp0_, _tmp2_);
#line 104 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = _tmp3_;
#line 104 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_time_zone_unref0 (_tmp2_);
#line 104 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	date1 = _tmp4_;
#line 105 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = task_2->when_date_utc;
#line 105 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp6_ = g_time_zone_new_local ();
#line 105 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp7_ = _tmp6_;
#line 105 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp8_ = g_date_time_new_from_iso8601 (_tmp5_, _tmp7_);
#line 105 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp9_ = _tmp8_;
#line 105 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_time_zone_unref0 (_tmp7_);
#line 105 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	date2 = _tmp9_;
#line 107 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	result = g_date_time_compare (date1, date2);
#line 107 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_date_time_unref0 (date2);
#line 107 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_date_time_unref0 (date1);
#line 107 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	return result;
#line 998 "ShareDialog.c"
}


static gint
__dialogs_share_dialog_upcoming___lambda72__gcompare_data_func (gconstpointer a,
                                                                gconstpointer b,
                                                                gpointer self)
{
	gint result;
	result = _dialogs_share_dialog_upcoming___lambda72_ ((DialogsShareDialog*) self, (ObjectsTask*) a, (ObjectsTask*) b);
#line 103 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	return result;
#line 1011 "ShareDialog.c"
}


void
dialogs_share_dialog_set_upcoming (DialogsShareDialog* self,
                                   gboolean value)
{
	GtkSourceView* _tmp0_;
	GtkTextBuffer* _tmp1_;
	GtkTextBuffer* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	GeeArrayList* tasks = NULL;
	ServicesDatabase* _tmp5_;
	GeeArrayList* _tmp6_;
	GeeArrayList* _tmp7_;
#line 96 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_return_if_fail (self != NULL);
#line 97 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = self->priv->source_view;
#line 97 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = gtk_text_view_get_buffer ((GtkTextView*) _tmp0_);
#line 97 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = _tmp1_;
#line 97 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_set (_tmp2_, "text", "", NULL);
#line 99 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = g_strdup_printf ("# %s", _ ("Upcoming"));
#line 99 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = _tmp3_;
#line 99 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, _tmp4_);
#line 99 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_free0 (_tmp4_);
#line 100 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, "");
#line 102 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = application_database;
#line 102 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp6_ = services_database_get_all_upcoming_tasks (_tmp5_);
#line 102 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	tasks = _tmp6_;
#line 103 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp7_ = tasks;
#line 103 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gee_list_sort ((GeeList*) _tmp7_, __dialogs_share_dialog_upcoming___lambda72__gcompare_data_func, g_object_ref (self), g_object_unref);
#line 1058 "ShareDialog.c"
	{
		GeeArrayList* _task_list = NULL;
		GeeArrayList* _tmp8_;
		GeeArrayList* _tmp9_;
		gint _task_size = 0;
		GeeArrayList* _tmp10_;
		gint _tmp11_;
		gint _tmp12_;
		gint _task_index = 0;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp8_ = tasks;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp9_ = _g_object_ref0 (_tmp8_);
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_list = _tmp9_;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp10_ = _task_list;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp11_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp10_);
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp12_ = _tmp11_;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_size = _tmp12_;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_task_index = -1;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		while (TRUE) {
#line 1086 "ShareDialog.c"
			gint _tmp13_;
			gint _tmp14_;
			gint _tmp15_;
			ObjectsTask* task = NULL;
			GeeArrayList* _tmp16_;
			gint _tmp17_;
			gpointer _tmp18_;
			ObjectsTask* _tmp19_;
			gint _tmp20_;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp13_ = _task_index;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_task_index = _tmp13_ + 1;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp14_ = _task_index;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp15_ = _task_size;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			if (!(_tmp14_ < _tmp15_)) {
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				break;
#line 1108 "ShareDialog.c"
			}
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp16_ = _task_list;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp17_ = _task_index;
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp18_ = gee_abstract_list_get ((GeeAbstractList*) _tmp16_, _tmp17_);
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			task = (ObjectsTask*) _tmp18_;
#line 111 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp19_ = task;
#line 111 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp20_ = _tmp19_->checked;
#line 111 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			if (_tmp20_ != 1) {
#line 1124 "ShareDialog.c"
				Utils* _tmp21_;
				ObjectsTask* _tmp22_;
				const gchar* _tmp23_;
				gchar* _tmp24_;
				gchar* _tmp25_;
				ObjectsTask* _tmp26_;
				const gchar* _tmp27_;
				gchar* _tmp28_;
				gchar* _tmp29_;
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp21_ = application_utils;
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp22_ = task;
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp23_ = _tmp22_->when_date_utc;
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp24_ = utils_get_default_date_format (_tmp21_, _tmp23_);
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp25_ = _tmp24_;
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp26_ = task;
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp27_ = _tmp26_->content;
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp28_ = g_strdup_printf ("- [ ] [%s] %s", _tmp25_, _tmp27_);
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp29_ = _tmp28_;
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				dialogs_share_dialog_add_line (self, _tmp29_);
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_g_free0 (_tmp29_);
#line 112 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_g_free0 (_tmp25_);
#line 1158 "ShareDialog.c"
			}
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_objects_task_unref0 (task);
#line 1162 "ShareDialog.c"
		}
#line 110 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_object_unref0 (_task_list);
#line 1166 "ShareDialog.c"
	}
#line 116 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 96 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (tasks);
#line 96 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_UPCOMING_PROPERTY]);
#line 1174 "ShareDialog.c"
}


static glong
string_strnlen (gchar* str,
                glong maxlen)
{
	glong result = 0L;
	gchar* end = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
#line 1392 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = memchr (str, 0, (gsize) maxlen);
#line 1392 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	end = _tmp0_;
#line 1393 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = end;
#line 1393 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (_tmp1_ == NULL) {
#line 1394 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = maxlen;
#line 1394 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 1198 "ShareDialog.c"
	} else {
		gchar* _tmp2_;
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp2_ = end;
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = (glong) (_tmp2_ - str);
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 1207 "ShareDialog.c"
	}
}


static gchar*
string_substring (const gchar* self,
                  glong offset,
                  glong len)
{
	gchar* result = NULL;
	glong string_length = 0L;
	gboolean _tmp0_ = FALSE;
	glong _tmp6_;
	gchar* _tmp7_;
#line 1403 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (offset >= ((glong) 0)) {
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = len >= ((glong) 0);
#line 1228 "ShareDialog.c"
	} else {
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = FALSE;
#line 1232 "ShareDialog.c"
	}
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (_tmp0_) {
#line 1407 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		string_length = string_strnlen ((gchar*) self, offset + len);
#line 1238 "ShareDialog.c"
	} else {
		gint _tmp1_;
		gint _tmp2_;
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp1_ = strlen (self);
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp2_ = _tmp1_;
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		string_length = (glong) _tmp2_;
#line 1248 "ShareDialog.c"
	}
#line 1412 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (offset < ((glong) 0)) {
#line 1252 "ShareDialog.c"
		glong _tmp3_;
#line 1413 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp3_ = string_length;
#line 1413 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		offset = _tmp3_ + offset;
#line 1414 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		g_return_val_if_fail (offset >= ((glong) 0), NULL);
#line 1260 "ShareDialog.c"
	} else {
		glong _tmp4_;
#line 1416 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp4_ = string_length;
#line 1416 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		g_return_val_if_fail (offset <= _tmp4_, NULL);
#line 1267 "ShareDialog.c"
	}
#line 1418 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (len < ((glong) 0)) {
#line 1271 "ShareDialog.c"
		glong _tmp5_;
#line 1419 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp5_ = string_length;
#line 1419 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		len = _tmp5_ - offset;
#line 1277 "ShareDialog.c"
	}
#line 1421 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp6_ = string_length;
#line 1421 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail ((offset + len) <= _tmp6_, NULL);
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp7_ = g_strndup (((gchar*) self) + offset, (gsize) len);
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp7_;
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 1289 "ShareDialog.c"
}


void
dialogs_share_dialog_set_task (DialogsShareDialog* self,
                               gint value)
{
	ObjectsTask* _task = NULL;
	ServicesDatabase* _tmp0_;
	ObjectsTask* _tmp1_;
	GtkSourceView* _tmp2_;
	GtkTextBuffer* _tmp3_;
	GtkTextBuffer* _tmp4_;
	ObjectsTask* _tmp5_;
	const gchar* _tmp6_;
	ObjectsTask* _tmp20_;
	const gchar* _tmp21_;
	gchar** checklist_array = NULL;
	ObjectsTask* _tmp26_;
	const gchar* _tmp27_;
	gchar** _tmp28_;
	gchar** _tmp29_;
	gint checklist_array_length1;
	gint _checklist_array_size_;
	gchar** _tmp30_;
	gint _tmp30__length1;
#line 121 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_return_if_fail (self != NULL);
#line 122 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = application_database;
#line 122 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = services_database_get_task (_tmp0_, value);
#line 122 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_task = _tmp1_;
#line 123 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = self->priv->source_view;
#line 123 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = gtk_text_view_get_buffer ((GtkTextView*) _tmp2_);
#line 123 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = _tmp3_;
#line 123 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_set (_tmp4_, "text", "", NULL);
#line 125 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = _task;
#line 125 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp6_ = _tmp5_->when_date_utc;
#line 125 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	if (g_strcmp0 (_tmp6_, "") == 0) {
#line 1338 "ShareDialog.c"
		ObjectsTask* _tmp7_;
		const gchar* _tmp8_;
		gchar* _tmp9_;
		gchar* _tmp10_;
#line 126 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp7_ = _task;
#line 126 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp8_ = _tmp7_->content;
#line 126 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp9_ = g_strdup_printf ("# %s", _tmp8_);
#line 126 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp10_ = _tmp9_;
#line 126 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_add_line (self, _tmp10_);
#line 126 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_free0 (_tmp10_);
#line 1355 "ShareDialog.c"
	} else {
		Utils* _tmp11_;
		ObjectsTask* _tmp12_;
		const gchar* _tmp13_;
		gchar* _tmp14_;
		gchar* _tmp15_;
		ObjectsTask* _tmp16_;
		const gchar* _tmp17_;
		gchar* _tmp18_;
		gchar* _tmp19_;
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp11_ = application_utils;
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp12_ = _task;
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp13_ = _tmp12_->when_date_utc;
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp14_ = utils_get_default_date_format (_tmp11_, _tmp13_);
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp15_ = _tmp14_;
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp16_ = _task;
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp17_ = _tmp16_->content;
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp18_ = g_strdup_printf ("# [%s] %s", _tmp15_, _tmp17_);
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp19_ = _tmp18_;
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_add_line (self, _tmp19_);
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_free0 (_tmp19_);
#line 128 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_free0 (_tmp15_);
#line 1390 "ShareDialog.c"
	}
#line 131 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_add_line (self, "");
#line 133 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp20_ = _task;
#line 133 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp21_ = _tmp20_->note;
#line 133 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	if (g_strcmp0 (_tmp21_, "") != 0) {
#line 1400 "ShareDialog.c"
		ObjectsTask* _tmp22_;
		const gchar* _tmp23_;
		gchar* _tmp24_;
		gchar* _tmp25_;
#line 134 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp22_ = _task;
#line 134 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp23_ = _tmp22_->note;
#line 134 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp24_ = g_strdup_printf ("%s", _tmp23_);
#line 134 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_tmp25_ = _tmp24_;
#line 134 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_add_line (self, _tmp25_);
#line 134 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		_g_free0 (_tmp25_);
#line 135 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_add_line (self, "");
#line 1419 "ShareDialog.c"
	}
#line 138 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp26_ = _task;
#line 138 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp27_ = _tmp26_->checklist;
#line 138 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp29_ = _tmp28_ = g_strsplit (_tmp27_, ";", 0);
#line 138 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	checklist_array = _tmp29_;
#line 138 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	checklist_array_length1 = _vala_array_length (_tmp28_);
#line 138 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_checklist_array_size_ = checklist_array_length1;
#line 140 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp30_ = checklist_array;
#line 140 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp30__length1 = checklist_array_length1;
#line 1437 "ShareDialog.c"
	{
		gchar** str_collection = NULL;
		gint str_collection_length1 = 0;
		gint _str_collection_size_ = 0;
		gint str_it = 0;
#line 140 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		str_collection = _tmp30_;
#line 140 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		str_collection_length1 = _tmp30__length1;
#line 140 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		for (str_it = 0; str_it < _tmp30__length1; str_it = str_it + 1) {
#line 1449 "ShareDialog.c"
			gchar* _tmp31_;
			gchar* str = NULL;
#line 140 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			_tmp31_ = g_strdup (str_collection[str_it]);
#line 140 "/run/build/planner/src/Dialogs/ShareDialog.vala"
			str = _tmp31_;
#line 1456 "ShareDialog.c"
			{
				const gchar* _tmp32_;
#line 141 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_tmp32_ = str;
#line 141 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				if (g_strcmp0 (_tmp32_, "") != 0) {
#line 1463 "ShareDialog.c"
					gchar* check_name = NULL;
					const gchar* _tmp33_;
					gchar* _tmp34_;
					const gchar* _tmp35_;
					gchar* _tmp36_;
					gchar* _tmp37_;
					gboolean _tmp38_;
#line 142 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp33_ = str;
#line 142 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp34_ = string_substring (_tmp33_, (glong) 1, (glong) -1);
#line 142 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					check_name = _tmp34_;
#line 144 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp35_ = str;
#line 144 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp36_ = string_substring (_tmp35_, (glong) 0, (glong) 1);
#line 144 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp37_ = _tmp36_;
#line 144 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_tmp38_ = g_strcmp0 (_tmp37_, "0") == 0;
#line 144 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_g_free0 (_tmp37_);
#line 144 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					if (_tmp38_) {
#line 1489 "ShareDialog.c"
						const gchar* _tmp39_;
						gchar* _tmp40_;
						gchar* _tmp41_;
#line 145 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						_tmp39_ = check_name;
#line 145 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						_tmp40_ = g_strdup_printf ("- [ ] %s", _tmp39_);
#line 145 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						_tmp41_ = _tmp40_;
#line 145 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						dialogs_share_dialog_add_line (self, _tmp41_);
#line 145 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						_g_free0 (_tmp41_);
#line 1503 "ShareDialog.c"
					} else {
						const gchar* _tmp42_;
						gchar* _tmp43_;
						gchar* _tmp44_;
#line 147 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						_tmp42_ = check_name;
#line 147 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						_tmp43_ = g_strdup_printf ("- [x] %s", _tmp42_);
#line 147 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						_tmp44_ = _tmp43_;
#line 147 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						dialogs_share_dialog_add_line (self, _tmp44_);
#line 147 "/run/build/planner/src/Dialogs/ShareDialog.vala"
						_g_free0 (_tmp44_);
#line 1518 "ShareDialog.c"
					}
#line 141 "/run/build/planner/src/Dialogs/ShareDialog.vala"
					_g_free0 (check_name);
#line 1522 "ShareDialog.c"
				}
#line 140 "/run/build/planner/src/Dialogs/ShareDialog.vala"
				_g_free0 (str);
#line 1526 "ShareDialog.c"
			}
		}
	}
#line 121 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	checklist_array = (_vala_array_free (checklist_array, checklist_array_length1, (GDestroyNotify) g_free), NULL);
#line 121 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_objects_task_unref0 (_task);
#line 121 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_notify_by_pspec ((GObject *) self, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_TASK_PROPERTY]);
#line 1536 "ShareDialog.c"
}


static void
_dialogs_share_dialog___lambda73_ (DialogsShareDialog* self)
{
#line 197 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_destroy ((GtkWidget*) self);
#line 1545 "ShareDialog.c"
}


static void
__dialogs_share_dialog___lambda73__gtk_button_clicked (GtkButton* _sender,
                                                       gpointer self)
{
#line 196 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_dialogs_share_dialog___lambda73_ ((DialogsShareDialog*) self);
#line 1555 "ShareDialog.c"
}


static void
_dialogs_share_dialog___lambda74_ (DialogsShareDialog* self)
{
	GdkDisplay* display = NULL;
	GdkDisplay* _tmp0_;
	GdkDisplay* _tmp1_;
	GtkClipboard* clipboard = NULL;
	GdkDisplay* _tmp2_;
	GtkClipboard* _tmp3_;
	GtkClipboard* _tmp4_;
	GtkClipboard* _tmp5_;
	GtkSourceView* _tmp6_;
	GtkTextBuffer* _tmp7_;
	GtkTextBuffer* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	ServicesNotifications* _tmp12_;
#line 206 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = gdk_display_get_default ();
#line 206 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = _g_object_ref0 (_tmp0_);
#line 206 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	display = _tmp1_;
#line 207 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = display;
#line 207 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = gtk_clipboard_get_for_display (_tmp2_, GDK_SELECTION_CLIPBOARD);
#line 207 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = _g_object_ref0 (_tmp3_);
#line 207 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	clipboard = _tmp4_;
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = clipboard;
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp6_ = self->priv->source_view;
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp7_ = gtk_text_view_get_buffer ((GtkTextView*) _tmp6_);
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp8_ = _tmp7_;
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_get (_tmp8_, "text", &_tmp9_, NULL);
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp10_ = _tmp9_;
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp11_ = _tmp10_;
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_clipboard_set_text (_tmp5_, _tmp11_, -1);
#line 209 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_free0 (_tmp11_);
#line 211 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp12_ = application_notification;
#line 211 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_signal_emit_by_name (_tmp12_, "send-local-notification", _ ("Your project is ready to share"), _ ("Copy to clipboard"), "edit-copy", 4, FALSE);
#line 219 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_destroy ((GtkWidget*) self);
#line 205 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (clipboard);
#line 205 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (display);
#line 1619 "ShareDialog.c"
}


static void
__dialogs_share_dialog___lambda74__gtk_button_clicked (GtkButton* _sender,
                                                       gpointer self)
{
#line 205 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_dialogs_share_dialog___lambda74_ ((DialogsShareDialog*) self);
#line 1629 "ShareDialog.c"
}


static GObject *
dialogs_share_dialog_constructor (GType type,
                                  guint n_construct_properties,
                                  GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	DialogsShareDialog * self;
	GtkSourceView* _tmp0_;
	GtkSourceView* _tmp1_;
	GtkSourceView* _tmp2_;
	GtkSourceView* _tmp3_;
	GtkScrolledWindow* scrolled_window = NULL;
	GtkScrolledWindow* _tmp4_;
	GtkScrolledWindow* _tmp5_;
	GtkSourceView* _tmp6_;
	GtkFrame* main_frame = NULL;
	GtkFrame* _tmp7_;
	GtkFrame* _tmp8_;
	GtkStyleContext* _tmp9_;
	GtkFrame* _tmp10_;
	GtkScrolledWindow* _tmp11_;
	GtkGrid* content_grid = NULL;
	GtkGrid* _tmp12_;
	GtkGrid* _tmp13_;
	GtkGrid* _tmp14_;
	GtkGrid* _tmp15_;
	GtkGrid* _tmp16_;
	GtkGrid* _tmp17_;
	GtkFrame* _tmp18_;
	GtkBox* _tmp19_;
	GtkGrid* _tmp20_;
	GtkButton* close_button = NULL;
	GtkButton* _tmp21_;
	GtkButton* _tmp22_;
	GtkButton* _tmp23_;
	GtkStyleContext* _tmp24_;
	GtkButton* _tmp25_;
	GtkButton* _tmp26_;
	GtkButton* _tmp27_;
	GtkButton* copy_button = NULL;
	GtkButton* _tmp28_;
	GtkButton* _tmp29_;
	GtkButton* _tmp30_;
	GtkButton* _tmp31_;
	GtkButton* _tmp32_;
	GtkButton* _tmp33_;
	GtkButton* _tmp34_;
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	parent_class = G_OBJECT_CLASS (dialogs_share_dialog_parent_class);
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialog);
#line 165 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_window_set_title ((GtkWindow*) self, _ ("Share"));
#line 166 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_size_request ((GtkWidget*) self, 640, 494);
#line 168 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp0_ = (GtkSourceView*) gtk_source_view_new ();
#line 168 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_ref_sink (_tmp0_);
#line 168 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (self->priv->source_view);
#line 168 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	self->priv->source_view = _tmp0_;
#line 169 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp1_ = self->priv->source_view;
#line 169 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_set ((GtkWidget*) _tmp1_, "margin", 6, NULL);
#line 171 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp2_ = self->priv->source_view;
#line 171 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_text_view_set_monospace ((GtkTextView*) _tmp2_, TRUE);
#line 172 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp3_ = self->priv->source_view;
#line 172 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_set ((GtkWidget*) _tmp3_, "expand", TRUE, NULL);
#line 174 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp4_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 174 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_ref_sink (_tmp4_);
#line 174 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	scrolled_window = _tmp4_;
#line 175 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp5_ = scrolled_window;
#line 175 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp6_ = self->priv->source_view;
#line 175 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_container_add ((GtkContainer*) _tmp5_, (GtkWidget*) _tmp6_);
#line 177 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp7_ = (GtkFrame*) gtk_frame_new (NULL);
#line 177 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_ref_sink (_tmp7_);
#line 177 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	main_frame = _tmp7_;
#line 178 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp8_ = main_frame;
#line 178 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp9_ = gtk_widget_get_style_context ((GtkWidget*) _tmp8_);
#line 178 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_style_context_add_class (_tmp9_, GTK_STYLE_CLASS_VIEW);
#line 179 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp10_ = main_frame;
#line 179 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp11_ = scrolled_window;
#line 179 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_container_add ((GtkContainer*) _tmp10_, (GtkWidget*) _tmp11_);
#line 181 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp12_ = (GtkGrid*) gtk_grid_new ();
#line 181 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_ref_sink (_tmp12_);
#line 181 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	content_grid = _tmp12_;
#line 182 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp13_ = content_grid;
#line 182 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp13_, 12);
#line 183 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp14_ = content_grid;
#line 183 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp14_, 12);
#line 184 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp15_ = content_grid;
#line 184 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp15_, 6);
#line 185 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp16_ = content_grid;
#line 185 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp16_, GTK_ORIENTATION_VERTICAL);
#line 186 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp17_ = content_grid;
#line 186 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp18_ = main_frame;
#line 186 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_container_add ((GtkContainer*) _tmp17_, (GtkWidget*) _tmp18_);
#line 188 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp19_ = gtk_dialog_get_content_area ((GtkDialog*) self);
#line 188 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp20_ = content_grid;
#line 188 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_container_add (G_TYPE_CHECK_INSTANCE_CAST (_tmp19_, gtk_container_get_type (), GtkContainer), (GtkWidget*) _tmp20_);
#line 190 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp21_ = (GtkButton*) gtk_button_new_with_label (_ ("Close"));
#line 190 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_ref_sink (_tmp21_);
#line 190 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	close_button = _tmp21_;
#line 191 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp22_ = close_button;
#line 191 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp22_, GTK_ALIGN_END);
#line 192 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp23_ = close_button;
#line 192 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp24_ = gtk_widget_get_style_context ((GtkWidget*) _tmp23_);
#line 192 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_style_context_add_class (_tmp24_, "suggested-action");
#line 193 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp25_ = close_button;
#line 193 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp25_, 6);
#line 194 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp26_ = close_button;
#line 194 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp26_, 6);
#line 196 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp27_ = close_button;
#line 196 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_signal_connect_object (_tmp27_, "clicked", (GCallback) __dialogs_share_dialog___lambda73__gtk_button_clicked, self, 0);
#line 200 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp28_ = (GtkButton*) gtk_button_new_with_label (_ ("Copy to clipboard"));
#line 200 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_ref_sink (_tmp28_);
#line 200 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	copy_button = _tmp28_;
#line 201 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp29_ = copy_button;
#line 201 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp29_, GTK_ALIGN_END);
#line 202 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp30_ = copy_button;
#line 202 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp30_, 6);
#line 203 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp31_ = copy_button;
#line 203 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp31_, 6);
#line 205 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp32_ = copy_button;
#line 205 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_signal_connect_object (_tmp32_, "clicked", (GCallback) __dialogs_share_dialog___lambda74__gtk_button_clicked, self, 0);
#line 222 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp33_ = copy_button;
#line 222 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_dialog_add_action_widget ((GtkDialog*) self, (GtkWidget*) _tmp33_, 0);
#line 223 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_tmp34_ = close_button;
#line 223 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	gtk_dialog_add_action_widget ((GtkDialog*) self, (GtkWidget*) _tmp34_, 1);
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (copy_button);
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (close_button);
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (content_grid);
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (main_frame);
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (scrolled_window);
#line 164 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	return obj;
#line 1845 "ShareDialog.c"
}


static void
dialogs_share_dialog_class_init (DialogsShareDialogClass * klass)
{
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	dialogs_share_dialog_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_type_class_add_private (klass, sizeof (DialogsShareDialogPrivate));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_dialogs_share_dialog_set_property;
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	G_OBJECT_CLASS (klass)->constructor = dialogs_share_dialog_constructor;
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	G_OBJECT_CLASS (klass)->finalize = dialogs_share_dialog_finalize;
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SHARE_DIALOG_PROJECT_PROPERTY, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_PROJECT_PROPERTY] = g_param_spec_int ("project", "project", "project", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_WRITABLE));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SHARE_DIALOG_INBOX_PROPERTY, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_INBOX_PROPERTY] = g_param_spec_boolean ("inbox", "inbox", "inbox", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_WRITABLE));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SHARE_DIALOG_TODAY_PROPERTY, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_TODAY_PROPERTY] = g_param_spec_boolean ("today", "today", "today", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_WRITABLE));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SHARE_DIALOG_UPCOMING_PROPERTY, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_UPCOMING_PROPERTY] = g_param_spec_boolean ("upcoming", "upcoming", "upcoming", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_WRITABLE));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), DIALOGS_SHARE_DIALOG_TASK_PROPERTY, dialogs_share_dialog_properties[DIALOGS_SHARE_DIALOG_TASK_PROPERTY] = g_param_spec_int ("task", "task", "task", G_MININT, G_MAXINT, 0, G_PARAM_STATIC_STRINGS | G_PARAM_WRITABLE));
#line 1872 "ShareDialog.c"
}


static void
dialogs_share_dialog_instance_init (DialogsShareDialog * self)
{
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	self->priv = DIALOGS_SHARE_DIALOG_GET_PRIVATE (self);
#line 1881 "ShareDialog.c"
}


static void
dialogs_share_dialog_finalize (GObject * obj)
{
	DialogsShareDialog * self;
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialog);
#line 23 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	_g_object_unref0 (self->priv->source_view);
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	G_OBJECT_CLASS (dialogs_share_dialog_parent_class)->finalize (obj);
#line 1895 "ShareDialog.c"
}


GType
dialogs_share_dialog_get_type (void)
{
	static volatile gsize dialogs_share_dialog_type_id__volatile = 0;
	if (g_once_init_enter (&dialogs_share_dialog_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (DialogsShareDialogClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) dialogs_share_dialog_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (DialogsShareDialog), 0, (GInstanceInitFunc) dialogs_share_dialog_instance_init, NULL };
		GType dialogs_share_dialog_type_id;
		dialogs_share_dialog_type_id = g_type_register_static (gtk_dialog_get_type (), "DialogsShareDialog", &g_define_type_info, 0);
		g_once_init_leave (&dialogs_share_dialog_type_id__volatile, dialogs_share_dialog_type_id);
	}
	return dialogs_share_dialog_type_id__volatile;
}


static void
_vala_dialogs_share_dialog_set_property (GObject * object,
                                         guint property_id,
                                         const GValue * value,
                                         GParamSpec * pspec)
{
	DialogsShareDialog * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialog);
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
	switch (property_id) {
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		case DIALOGS_SHARE_DIALOG_PROJECT_PROPERTY:
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_set_project (self, g_value_get_int (value));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		break;
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		case DIALOGS_SHARE_DIALOG_INBOX_PROPERTY:
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_set_inbox (self, g_value_get_boolean (value));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		break;
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		case DIALOGS_SHARE_DIALOG_TODAY_PROPERTY:
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_set_today (self, g_value_get_boolean (value));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		break;
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		case DIALOGS_SHARE_DIALOG_UPCOMING_PROPERTY:
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_set_upcoming (self, g_value_get_boolean (value));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		break;
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		case DIALOGS_SHARE_DIALOG_TASK_PROPERTY:
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		dialogs_share_dialog_set_task (self, g_value_get_int (value));
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		break;
#line 1953 "ShareDialog.c"
		default:
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "/run/build/planner/src/Dialogs/ShareDialog.vala"
		break;
#line 1959 "ShareDialog.c"
	}
}


static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}


static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}


static gint
_vala_array_length (gpointer array)
{
	int length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}



