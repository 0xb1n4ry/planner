/* unity-internal.h generated by valac 0.40.11, the Vala compiler, do not modify */


#ifndef __UNITY_INTERNAL_H__
#define __UNITY_INTERNAL_H__

#include <glib.h>
#include <stdlib.h>
#include <string.h>
#include <glib-object.h>
#include <gio/gio.h>
#include <float.h>
#include <math.h>
#include <dee.h>
#include <libdbusmenu-glib/client.h>
#include <libdbusmenu-glib/dbusmenu-glib.h>
#include <libdbusmenu-glib/enum-types.h>
#include <libdbusmenu-glib/menuitem-proxy.h>
#include <libdbusmenu-glib/menuitem.h>
#include <libdbusmenu-glib/server.h>
#include <libdbusmenu-glib/types.h>
#include <unity-protocol.h>

G_BEGIN_DECLS

typedef struct _UnityStringArrayWrapper UnityStringArrayWrapper;

#define UNITY_TYPE_APP_INFO_MANAGER (unity_app_info_manager_get_type ())
#define UNITY_APP_INFO_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_APP_INFO_MANAGER, UnityAppInfoManager))
#define UNITY_APP_INFO_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_APP_INFO_MANAGER, UnityAppInfoManagerClass))
#define UNITY_IS_APP_INFO_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_APP_INFO_MANAGER))
#define UNITY_IS_APP_INFO_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_APP_INFO_MANAGER))
#define UNITY_APP_INFO_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_APP_INFO_MANAGER, UnityAppInfoManagerClass))

typedef struct _UnityAppInfoManager UnityAppInfoManager;
typedef struct _UnityAppInfoManagerClass UnityAppInfoManagerClass;
typedef struct _UnityAppInfoManagerPrivate UnityAppInfoManagerPrivate;

#define UNITY_TYPE_CATEGORY_TYPE (unity_category_type_get_type ())

#define UNITY_TYPE_ICON_SIZE_HINT (unity_icon_size_hint_get_type ())

#define UNITY_TYPE_ANNOTATED_ICON (unity_annotated_icon_get_type ())
#define UNITY_ANNOTATED_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_ANNOTATED_ICON, UnityAnnotatedIcon))
#define UNITY_ANNOTATED_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_ANNOTATED_ICON, UnityAnnotatedIconClass))
#define UNITY_IS_ANNOTATED_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_ANNOTATED_ICON))
#define UNITY_IS_ANNOTATED_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_ANNOTATED_ICON))
#define UNITY_ANNOTATED_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_ANNOTATED_ICON, UnityAnnotatedIconClass))

typedef struct _UnityAnnotatedIcon UnityAnnotatedIcon;
typedef struct _UnityAnnotatedIconClass UnityAnnotatedIconClass;
typedef struct _UnityAnnotatedIconPrivate UnityAnnotatedIconPrivate;

#define UNITY_TYPE_INSPECTOR (unity_inspector_get_type ())
#define UNITY_INSPECTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_INSPECTOR, UnityInspector))
#define UNITY_INSPECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_INSPECTOR, UnityInspectorClass))
#define UNITY_IS_INSPECTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_INSPECTOR))
#define UNITY_IS_INSPECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_INSPECTOR))
#define UNITY_INSPECTOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_INSPECTOR, UnityInspectorClass))

typedef struct _UnityInspector UnityInspector;
typedef struct _UnityInspectorClass UnityInspectorClass;
typedef struct _UnityInspectorPrivate UnityInspectorPrivate;

#define UNITY_TYPE_LAUNCHER_ENTRY_DBUS_IMPL (unity_launcher_entry_dbus_impl_get_type ())
#define UNITY_LAUNCHER_ENTRY_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_LAUNCHER_ENTRY_DBUS_IMPL, UnityLauncherEntryDBusImpl))
#define UNITY_LAUNCHER_ENTRY_DBUS_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_LAUNCHER_ENTRY_DBUS_IMPL, UnityLauncherEntryDBusImplClass))
#define UNITY_IS_LAUNCHER_ENTRY_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_LAUNCHER_ENTRY_DBUS_IMPL))
#define UNITY_IS_LAUNCHER_ENTRY_DBUS_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_LAUNCHER_ENTRY_DBUS_IMPL))
#define UNITY_LAUNCHER_ENTRY_DBUS_IMPL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_LAUNCHER_ENTRY_DBUS_IMPL, UnityLauncherEntryDBusImplClass))

typedef struct _UnityLauncherEntryDBusImpl UnityLauncherEntryDBusImpl;
typedef struct _UnityLauncherEntryDBusImplClass UnityLauncherEntryDBusImplClass;
typedef struct _UnityLauncherEntryDBusImplPrivate UnityLauncherEntryDBusImplPrivate;

#define UNITY_TYPE_LAUNCHER_ENTRY (unity_launcher_entry_get_type ())
#define UNITY_LAUNCHER_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_LAUNCHER_ENTRY, UnityLauncherEntry))
#define UNITY_LAUNCHER_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_LAUNCHER_ENTRY, UnityLauncherEntryClass))
#define UNITY_IS_LAUNCHER_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_LAUNCHER_ENTRY))
#define UNITY_IS_LAUNCHER_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_LAUNCHER_ENTRY))
#define UNITY_LAUNCHER_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_LAUNCHER_ENTRY, UnityLauncherEntryClass))

typedef struct _UnityLauncherEntry UnityLauncherEntry;
typedef struct _UnityLauncherEntryClass UnityLauncherEntryClass;
typedef struct _UnityLauncherEntryPrivate UnityLauncherEntryPrivate;

#define UNITY_TYPE_LAUNCHER_FAVORITES (unity_launcher_favorites_get_type ())
#define UNITY_LAUNCHER_FAVORITES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_LAUNCHER_FAVORITES, UnityLauncherFavorites))
#define UNITY_LAUNCHER_FAVORITES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_LAUNCHER_FAVORITES, UnityLauncherFavoritesClass))
#define UNITY_IS_LAUNCHER_FAVORITES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_LAUNCHER_FAVORITES))
#define UNITY_IS_LAUNCHER_FAVORITES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_LAUNCHER_FAVORITES))
#define UNITY_LAUNCHER_FAVORITES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_LAUNCHER_FAVORITES, UnityLauncherFavoritesClass))

typedef struct _UnityLauncherFavorites UnityLauncherFavorites;
typedef struct _UnityLauncherFavoritesClass UnityLauncherFavoritesClass;
typedef struct _UnityLauncherFavoritesPrivate UnityLauncherFavoritesPrivate;

#define UNITY_TYPE_CATEGORY_RENDERER (unity_category_renderer_get_type ())

#define UNITY_TYPE_CATEGORY_CONTENT_TYPE (unity_category_content_type_get_type ())

#define UNITY_TYPE_METADATA_PROVIDER (unity_metadata_provider_get_type ())
#define UNITY_METADATA_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_METADATA_PROVIDER, UnityMetadataProvider))
#define UNITY_METADATA_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_METADATA_PROVIDER, UnityMetadataProviderClass))
#define UNITY_IS_METADATA_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_METADATA_PROVIDER))
#define UNITY_IS_METADATA_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_METADATA_PROVIDER))
#define UNITY_METADATA_PROVIDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_METADATA_PROVIDER, UnityMetadataProviderClass))

typedef struct _UnityMetadataProvider UnityMetadataProvider;
typedef struct _UnityMetadataProviderClass UnityMetadataProviderClass;
typedef struct _UnityMetadataProviderPrivate UnityMetadataProviderPrivate;

#define UNITY_TYPE_PROGRESS_SOURCE_PROVIDER (unity_progress_source_provider_get_type ())
#define UNITY_PROGRESS_SOURCE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PROGRESS_SOURCE_PROVIDER, UnityProgressSourceProvider))
#define UNITY_PROGRESS_SOURCE_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PROGRESS_SOURCE_PROVIDER, UnityProgressSourceProviderClass))
#define UNITY_IS_PROGRESS_SOURCE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PROGRESS_SOURCE_PROVIDER))
#define UNITY_IS_PROGRESS_SOURCE_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PROGRESS_SOURCE_PROVIDER))
#define UNITY_PROGRESS_SOURCE_PROVIDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PROGRESS_SOURCE_PROVIDER, UnityProgressSourceProviderClass))

typedef struct _UnityProgressSourceProvider UnityProgressSourceProvider;
typedef struct _UnityProgressSourceProviderClass UnityProgressSourceProviderClass;
typedef struct _UnityProgressSourceProviderPrivate UnityProgressSourceProviderPrivate;

#define UNITY_TYPE_CATEGORY (unity_category_get_type ())
#define UNITY_CATEGORY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_CATEGORY, UnityCategory))
#define UNITY_CATEGORY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_CATEGORY, UnityCategoryClass))
#define UNITY_IS_CATEGORY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_CATEGORY))
#define UNITY_IS_CATEGORY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_CATEGORY))
#define UNITY_CATEGORY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_CATEGORY, UnityCategoryClass))

typedef struct _UnityCategory UnityCategory;
typedef struct _UnityCategoryClass UnityCategoryClass;
typedef struct _UnityCategoryPrivate UnityCategoryPrivate;

#define UNITY_TYPE_FILTER_RENDERER (unity_filter_renderer_get_type ())

#define UNITY_TYPE_FILTER (unity_filter_get_type ())
#define UNITY_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_FILTER, UnityFilter))
#define UNITY_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_FILTER, UnityFilterClass))
#define UNITY_IS_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_FILTER))
#define UNITY_IS_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_FILTER))
#define UNITY_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_FILTER, UnityFilterClass))

typedef struct _UnityFilter UnityFilter;
typedef struct _UnityFilterClass UnityFilterClass;
typedef struct _UnityFilterPrivate UnityFilterPrivate;

#define UNITY_TYPE_FILTER_OPTION (unity_filter_option_get_type ())
#define UNITY_FILTER_OPTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_FILTER_OPTION, UnityFilterOption))
#define UNITY_FILTER_OPTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_FILTER_OPTION, UnityFilterOptionClass))
#define UNITY_IS_FILTER_OPTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_FILTER_OPTION))
#define UNITY_IS_FILTER_OPTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_FILTER_OPTION))
#define UNITY_FILTER_OPTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_FILTER_OPTION, UnityFilterOptionClass))

typedef struct _UnityFilterOption UnityFilterOption;
typedef struct _UnityFilterOptionClass UnityFilterOptionClass;
typedef struct _UnityFilterOptionPrivate UnityFilterOptionPrivate;

#define UNITY_TYPE_OPTIONS_FILTER (unity_options_filter_get_type ())
#define UNITY_OPTIONS_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_OPTIONS_FILTER, UnityOptionsFilter))
#define UNITY_OPTIONS_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_OPTIONS_FILTER, UnityOptionsFilterClass))
#define UNITY_IS_OPTIONS_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_OPTIONS_FILTER))
#define UNITY_IS_OPTIONS_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_OPTIONS_FILTER))
#define UNITY_OPTIONS_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_OPTIONS_FILTER, UnityOptionsFilterClass))

typedef struct _UnityOptionsFilter UnityOptionsFilter;
typedef struct _UnityOptionsFilterClass UnityOptionsFilterClass;
typedef struct _UnityOptionsFilterPrivate UnityOptionsFilterPrivate;

#define UNITY_OPTIONS_FILTER_TYPE_SORT_TYPE (unity_options_filter_sort_type_get_type ())

#define UNITY_TYPE_RADIO_OPTION_FILTER (unity_radio_option_filter_get_type ())
#define UNITY_RADIO_OPTION_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_RADIO_OPTION_FILTER, UnityRadioOptionFilter))
#define UNITY_RADIO_OPTION_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_RADIO_OPTION_FILTER, UnityRadioOptionFilterClass))
#define UNITY_IS_RADIO_OPTION_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_RADIO_OPTION_FILTER))
#define UNITY_IS_RADIO_OPTION_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_RADIO_OPTION_FILTER))
#define UNITY_RADIO_OPTION_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_RADIO_OPTION_FILTER, UnityRadioOptionFilterClass))

typedef struct _UnityRadioOptionFilter UnityRadioOptionFilter;
typedef struct _UnityRadioOptionFilterClass UnityRadioOptionFilterClass;
typedef struct _UnityRadioOptionFilterPrivate UnityRadioOptionFilterPrivate;

#define UNITY_TYPE_CHECK_OPTION_FILTER (unity_check_option_filter_get_type ())
#define UNITY_CHECK_OPTION_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_CHECK_OPTION_FILTER, UnityCheckOptionFilter))
#define UNITY_CHECK_OPTION_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_CHECK_OPTION_FILTER, UnityCheckOptionFilterClass))
#define UNITY_IS_CHECK_OPTION_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_CHECK_OPTION_FILTER))
#define UNITY_IS_CHECK_OPTION_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_CHECK_OPTION_FILTER))
#define UNITY_CHECK_OPTION_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_CHECK_OPTION_FILTER, UnityCheckOptionFilterClass))

typedef struct _UnityCheckOptionFilter UnityCheckOptionFilter;
typedef struct _UnityCheckOptionFilterClass UnityCheckOptionFilterClass;
typedef struct _UnityCheckOptionFilterPrivate UnityCheckOptionFilterPrivate;

#define UNITY_TYPE_CHECK_OPTION_FILTER_COMPACT (unity_check_option_filter_compact_get_type ())
#define UNITY_CHECK_OPTION_FILTER_COMPACT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_CHECK_OPTION_FILTER_COMPACT, UnityCheckOptionFilterCompact))
#define UNITY_CHECK_OPTION_FILTER_COMPACT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_CHECK_OPTION_FILTER_COMPACT, UnityCheckOptionFilterCompactClass))
#define UNITY_IS_CHECK_OPTION_FILTER_COMPACT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_CHECK_OPTION_FILTER_COMPACT))
#define UNITY_IS_CHECK_OPTION_FILTER_COMPACT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_CHECK_OPTION_FILTER_COMPACT))
#define UNITY_CHECK_OPTION_FILTER_COMPACT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_CHECK_OPTION_FILTER_COMPACT, UnityCheckOptionFilterCompactClass))

typedef struct _UnityCheckOptionFilterCompact UnityCheckOptionFilterCompact;
typedef struct _UnityCheckOptionFilterCompactClass UnityCheckOptionFilterCompactClass;
typedef struct _UnityCheckOptionFilterCompactPrivate UnityCheckOptionFilterCompactPrivate;

#define UNITY_TYPE_RATINGS_FILTER (unity_ratings_filter_get_type ())
#define UNITY_RATINGS_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_RATINGS_FILTER, UnityRatingsFilter))
#define UNITY_RATINGS_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_RATINGS_FILTER, UnityRatingsFilterClass))
#define UNITY_IS_RATINGS_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_RATINGS_FILTER))
#define UNITY_IS_RATINGS_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_RATINGS_FILTER))
#define UNITY_RATINGS_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_RATINGS_FILTER, UnityRatingsFilterClass))

typedef struct _UnityRatingsFilter UnityRatingsFilter;
typedef struct _UnityRatingsFilterClass UnityRatingsFilterClass;
typedef struct _UnityRatingsFilterPrivate UnityRatingsFilterPrivate;

#define UNITY_TYPE_MULTI_RANGE_FILTER (unity_multi_range_filter_get_type ())
#define UNITY_MULTI_RANGE_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MULTI_RANGE_FILTER, UnityMultiRangeFilter))
#define UNITY_MULTI_RANGE_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MULTI_RANGE_FILTER, UnityMultiRangeFilterClass))
#define UNITY_IS_MULTI_RANGE_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MULTI_RANGE_FILTER))
#define UNITY_IS_MULTI_RANGE_FILTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MULTI_RANGE_FILTER))
#define UNITY_MULTI_RANGE_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MULTI_RANGE_FILTER, UnityMultiRangeFilterClass))

typedef struct _UnityMultiRangeFilter UnityMultiRangeFilter;
typedef struct _UnityMultiRangeFilterClass UnityMultiRangeFilterClass;
typedef struct _UnityMultiRangeFilterPrivate UnityMultiRangeFilterPrivate;

#define UNITY_TYPE_PREFERENCES_MANAGER (unity_preferences_manager_get_type ())
#define UNITY_PREFERENCES_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PREFERENCES_MANAGER, UnityPreferencesManager))
#define UNITY_PREFERENCES_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PREFERENCES_MANAGER, UnityPreferencesManagerClass))
#define UNITY_IS_PREFERENCES_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PREFERENCES_MANAGER))
#define UNITY_IS_PREFERENCES_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PREFERENCES_MANAGER))
#define UNITY_PREFERENCES_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PREFERENCES_MANAGER, UnityPreferencesManagerClass))

typedef struct _UnityPreferencesManager UnityPreferencesManager;
typedef struct _UnityPreferencesManagerClass UnityPreferencesManagerClass;
typedef struct _UnityPreferencesManagerPrivate UnityPreferencesManagerPrivate;

#define UNITY_PREFERENCES_MANAGER_TYPE_REMOTE_CONTENT (unity_preferences_manager_remote_content_get_type ())

#define UNITY_INTERNAL_TYPE_MERGE_STRATEGY (unity_internal_merge_strategy_get_type ())
#define UNITY_INTERNAL_MERGE_STRATEGY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_MERGE_STRATEGY, UnityInternalMergeStrategy))
#define UNITY_INTERNAL_IS_MERGE_STRATEGY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_MERGE_STRATEGY))
#define UNITY_INTERNAL_MERGE_STRATEGY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_INTERNAL_TYPE_MERGE_STRATEGY, UnityInternalMergeStrategyIface))

typedef struct _UnityInternalMergeStrategy UnityInternalMergeStrategy;
typedef struct _UnityInternalMergeStrategyIface UnityInternalMergeStrategyIface;

#define UNITY_TYPE_RESULT_SET (unity_result_set_get_type ())
#define UNITY_RESULT_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_RESULT_SET, UnityResultSet))
#define UNITY_RESULT_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_RESULT_SET, UnityResultSetClass))
#define UNITY_IS_RESULT_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_RESULT_SET))
#define UNITY_IS_RESULT_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_RESULT_SET))
#define UNITY_RESULT_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_RESULT_SET, UnityResultSetClass))

typedef struct _UnityResultSet UnityResultSet;
typedef struct _UnityResultSetClass UnityResultSetClass;
typedef struct _UnityResultSetPrivate UnityResultSetPrivate;

#define UNITY_TYPE_SCOPE_RESULT (unity_scope_result_get_type ())

#define UNITY_TYPE_RESULT_TYPE (unity_result_type_get_type ())
typedef struct _UnityScopeResult UnityScopeResult;

#define UNITY_INTERNAL_TYPE_DEE_RESULT_SET (unity_internal_dee_result_set_get_type ())
#define UNITY_INTERNAL_DEE_RESULT_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEE_RESULT_SET, UnityInternalDeeResultSet))
#define UNITY_INTERNAL_DEE_RESULT_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_DEE_RESULT_SET, UnityInternalDeeResultSetClass))
#define UNITY_INTERNAL_IS_DEE_RESULT_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEE_RESULT_SET))
#define UNITY_INTERNAL_IS_DEE_RESULT_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_DEE_RESULT_SET))
#define UNITY_INTERNAL_DEE_RESULT_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_DEE_RESULT_SET, UnityInternalDeeResultSetClass))

typedef struct _UnityInternalDeeResultSet UnityInternalDeeResultSet;
typedef struct _UnityInternalDeeResultSetClass UnityInternalDeeResultSetClass;
typedef struct _UnityInternalDeeResultSetPrivate UnityInternalDeeResultSetPrivate;

#define UNITY_INTERNAL_TYPE_DIFF_MODEL (unity_internal_diff_model_get_type ())
#define UNITY_INTERNAL_DIFF_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DIFF_MODEL, UnityInternalDiffModel))
#define UNITY_INTERNAL_DIFF_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_DIFF_MODEL, UnityInternalDiffModelClass))
#define UNITY_INTERNAL_IS_DIFF_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DIFF_MODEL))
#define UNITY_INTERNAL_IS_DIFF_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_DIFF_MODEL))
#define UNITY_INTERNAL_DIFF_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_DIFF_MODEL, UnityInternalDiffModelClass))

typedef struct _UnityInternalDiffModel UnityInternalDiffModel;
typedef struct _UnityInternalDiffModelClass UnityInternalDiffModelClass;
typedef struct _UnityInternalDiffModelPrivate UnityInternalDiffModelPrivate;

#define UNITY_TYPE_CANCELLABLE (unity_cancellable_get_type ())
#define UNITY_CANCELLABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_CANCELLABLE, UnityCancellable))
#define UNITY_CANCELLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_CANCELLABLE, UnityCancellableClass))
#define UNITY_IS_CANCELLABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_CANCELLABLE))
#define UNITY_IS_CANCELLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_CANCELLABLE))
#define UNITY_CANCELLABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_CANCELLABLE, UnityCancellableClass))

typedef struct _UnityCancellable UnityCancellable;
typedef struct _UnityCancellableClass UnityCancellableClass;
typedef struct _UnityCancellablePrivate UnityCancellablePrivate;

#define UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE (unity_internal_glib_cancellable_get_type ())
#define UNITY_INTERNAL_GLIB_CANCELLABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE, UnityInternalGLibCancellable))
#define UNITY_INTERNAL_GLIB_CANCELLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE, UnityInternalGLibCancellableClass))
#define UNITY_INTERNAL_IS_GLIB_CANCELLABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE))
#define UNITY_INTERNAL_IS_GLIB_CANCELLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE))
#define UNITY_INTERNAL_GLIB_CANCELLABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_GLIB_CANCELLABLE, UnityInternalGLibCancellableClass))

typedef struct _UnityInternalGLibCancellable UnityInternalGLibCancellable;
typedef struct _UnityInternalGLibCancellableClass UnityInternalGLibCancellableClass;
typedef struct _UnityInternalGLibCancellablePrivate UnityInternalGLibCancellablePrivate;

#define UNITY_TYPE_SCOPE_SEARCH_BASE (unity_scope_search_base_get_type ())
#define UNITY_SCOPE_SEARCH_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SCOPE_SEARCH_BASE, UnityScopeSearchBase))
#define UNITY_SCOPE_SEARCH_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_SCOPE_SEARCH_BASE, UnityScopeSearchBaseClass))
#define UNITY_IS_SCOPE_SEARCH_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SCOPE_SEARCH_BASE))
#define UNITY_IS_SCOPE_SEARCH_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_SCOPE_SEARCH_BASE))
#define UNITY_SCOPE_SEARCH_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_SCOPE_SEARCH_BASE, UnityScopeSearchBaseClass))

typedef struct _UnityScopeSearchBase UnityScopeSearchBase;
typedef struct _UnityScopeSearchBaseClass UnityScopeSearchBaseClass;
typedef struct _UnityScopeSearchBasePrivate UnityScopeSearchBasePrivate;

#define UNITY_TYPE_SEARCH_CONTEXT (unity_search_context_get_type ())

#define UNITY_TYPE_SEARCH_TYPE (unity_search_type_get_type ())

#define UNITY_TYPE_FILTER_SET (unity_filter_set_get_type ())
#define UNITY_FILTER_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_FILTER_SET, UnityFilterSet))
#define UNITY_FILTER_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_FILTER_SET, UnityFilterSetClass))
#define UNITY_IS_FILTER_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_FILTER_SET))
#define UNITY_IS_FILTER_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_FILTER_SET))
#define UNITY_FILTER_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_FILTER_SET, UnityFilterSetClass))

typedef struct _UnityFilterSet UnityFilterSet;
typedef struct _UnityFilterSetClass UnityFilterSetClass;

#define UNITY_TYPE_SEARCH_METADATA (unity_search_metadata_get_type ())
#define UNITY_SEARCH_METADATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SEARCH_METADATA, UnitySearchMetadata))
#define UNITY_SEARCH_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_SEARCH_METADATA, UnitySearchMetadataClass))
#define UNITY_IS_SEARCH_METADATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SEARCH_METADATA))
#define UNITY_IS_SEARCH_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_SEARCH_METADATA))
#define UNITY_SEARCH_METADATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_SEARCH_METADATA, UnitySearchMetadataClass))

typedef struct _UnitySearchMetadata UnitySearchMetadata;
typedef struct _UnitySearchMetadataClass UnitySearchMetadataClass;
typedef struct _UnitySearchContext UnitySearchContext;

#define UNITY_TYPE_DEPRECATED_SCOPE_SEARCH (unity_deprecated_scope_search_get_type ())
#define UNITY_DEPRECATED_SCOPE_SEARCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, UnityDeprecatedScopeSearch))
#define UNITY_DEPRECATED_SCOPE_SEARCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, UnityDeprecatedScopeSearchClass))
#define UNITY_IS_DEPRECATED_SCOPE_SEARCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_DEPRECATED_SCOPE_SEARCH))
#define UNITY_IS_DEPRECATED_SCOPE_SEARCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_DEPRECATED_SCOPE_SEARCH))
#define UNITY_DEPRECATED_SCOPE_SEARCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_DEPRECATED_SCOPE_SEARCH, UnityDeprecatedScopeSearchClass))

typedef struct _UnityDeprecatedScopeSearch UnityDeprecatedScopeSearch;
typedef struct _UnityDeprecatedScopeSearchClass UnityDeprecatedScopeSearchClass;
typedef struct _UnityDeprecatedScopeSearchPrivate UnityDeprecatedScopeSearchPrivate;

#define UNITY_TYPE_DEPRECATED_SCOPE_BASE (unity_deprecated_scope_base_get_type ())
#define UNITY_DEPRECATED_SCOPE_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_DEPRECATED_SCOPE_BASE, UnityDeprecatedScopeBase))
#define UNITY_DEPRECATED_SCOPE_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_DEPRECATED_SCOPE_BASE, UnityDeprecatedScopeBaseClass))
#define UNITY_IS_DEPRECATED_SCOPE_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_DEPRECATED_SCOPE_BASE))
#define UNITY_IS_DEPRECATED_SCOPE_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_DEPRECATED_SCOPE_BASE))
#define UNITY_DEPRECATED_SCOPE_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_DEPRECATED_SCOPE_BASE, UnityDeprecatedScopeBaseClass))

typedef struct _UnityDeprecatedScopeBase UnityDeprecatedScopeBase;
typedef struct _UnityDeprecatedScopeBaseClass UnityDeprecatedScopeBaseClass;

#define UNITY_TYPE_DEPRECATED_SCOPE (unity_deprecated_scope_get_type ())
#define UNITY_DEPRECATED_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_DEPRECATED_SCOPE, UnityDeprecatedScope))
#define UNITY_DEPRECATED_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_DEPRECATED_SCOPE, UnityDeprecatedScopeClass))
#define UNITY_IS_DEPRECATED_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_DEPRECATED_SCOPE))
#define UNITY_IS_DEPRECATED_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_DEPRECATED_SCOPE))
#define UNITY_DEPRECATED_SCOPE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_DEPRECATED_SCOPE, UnityDeprecatedScopeClass))

typedef struct _UnityDeprecatedScope UnityDeprecatedScope;
typedef struct _UnityDeprecatedScopeClass UnityDeprecatedScopeClass;

#define UNITY_TYPE_AGGREGATED_SCOPE_SEARCH (unity_aggregated_scope_search_get_type ())
#define UNITY_AGGREGATED_SCOPE_SEARCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_AGGREGATED_SCOPE_SEARCH, UnityAggregatedScopeSearch))
#define UNITY_AGGREGATED_SCOPE_SEARCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_AGGREGATED_SCOPE_SEARCH, UnityAggregatedScopeSearchClass))
#define UNITY_IS_AGGREGATED_SCOPE_SEARCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_AGGREGATED_SCOPE_SEARCH))
#define UNITY_IS_AGGREGATED_SCOPE_SEARCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_AGGREGATED_SCOPE_SEARCH))
#define UNITY_AGGREGATED_SCOPE_SEARCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_AGGREGATED_SCOPE_SEARCH, UnityAggregatedScopeSearchClass))

typedef struct _UnityAggregatedScopeSearch UnityAggregatedScopeSearch;
typedef struct _UnityAggregatedScopeSearchClass UnityAggregatedScopeSearchClass;
typedef struct _UnityAggregatedScopeSearchPrivate UnityAggregatedScopeSearchPrivate;

#define UNITY_TYPE_AGGREGATOR_SCOPE (unity_aggregator_scope_get_type ())
#define UNITY_AGGREGATOR_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_AGGREGATOR_SCOPE, UnityAggregatorScope))
#define UNITY_AGGREGATOR_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_AGGREGATOR_SCOPE, UnityAggregatorScopeClass))
#define UNITY_IS_AGGREGATOR_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_AGGREGATOR_SCOPE))
#define UNITY_IS_AGGREGATOR_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_AGGREGATOR_SCOPE))
#define UNITY_AGGREGATOR_SCOPE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_AGGREGATOR_SCOPE, UnityAggregatorScopeClass))

typedef struct _UnityAggregatorScope UnityAggregatorScope;
typedef struct _UnityAggregatorScopeClass UnityAggregatorScopeClass;

#define UNITY_INTERNAL_TYPE_RESULTS_SYNCHRONIZER (unity_internal_results_synchronizer_get_type ())
#define UNITY_INTERNAL_RESULTS_SYNCHRONIZER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_RESULTS_SYNCHRONIZER, UnityInternalResultsSynchronizer))
#define UNITY_INTERNAL_RESULTS_SYNCHRONIZER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_RESULTS_SYNCHRONIZER, UnityInternalResultsSynchronizerClass))
#define UNITY_INTERNAL_IS_RESULTS_SYNCHRONIZER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_RESULTS_SYNCHRONIZER))
#define UNITY_INTERNAL_IS_RESULTS_SYNCHRONIZER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_RESULTS_SYNCHRONIZER))
#define UNITY_INTERNAL_RESULTS_SYNCHRONIZER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_RESULTS_SYNCHRONIZER, UnityInternalResultsSynchronizerClass))

typedef struct _UnityInternalResultsSynchronizer UnityInternalResultsSynchronizer;
typedef struct _UnityInternalResultsSynchronizerClass UnityInternalResultsSynchronizerClass;
typedef struct _UnityInternalResultsSynchronizerPrivate UnityInternalResultsSynchronizerPrivate;

#define UNITY_TYPE_ABSTRACT_PREVIEW (unity_abstract_preview_get_type ())
#define UNITY_ABSTRACT_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_ABSTRACT_PREVIEW, UnityAbstractPreview))
#define UNITY_ABSTRACT_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_ABSTRACT_PREVIEW, UnityAbstractPreviewClass))
#define UNITY_IS_ABSTRACT_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_ABSTRACT_PREVIEW))
#define UNITY_IS_ABSTRACT_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_ABSTRACT_PREVIEW))
#define UNITY_ABSTRACT_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_ABSTRACT_PREVIEW, UnityAbstractPreviewClass))

typedef struct _UnityAbstractPreview UnityAbstractPreview;
typedef struct _UnityAbstractPreviewClass UnityAbstractPreviewClass;
typedef struct _UnityAbstractPreviewPrivate UnityAbstractPreviewPrivate;

#define UNITY_TYPE_SERIALIZATION_TYPE (unity_serialization_type_get_type ())

#define UNITY_TYPE_PREVIEW (unity_preview_get_type ())
#define UNITY_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PREVIEW, UnityPreview))
#define UNITY_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PREVIEW, UnityPreviewClass))
#define UNITY_IS_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PREVIEW))
#define UNITY_IS_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PREVIEW))
#define UNITY_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PREVIEW, UnityPreviewClass))

typedef struct _UnityPreview UnityPreview;
typedef struct _UnityPreviewClass UnityPreviewClass;
typedef struct _UnityPreviewPrivate UnityPreviewPrivate;

#define UNITY_TYPE_PREVIEW_ACTION (unity_preview_action_get_type ())
#define UNITY_PREVIEW_ACTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PREVIEW_ACTION, UnityPreviewAction))
#define UNITY_PREVIEW_ACTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PREVIEW_ACTION, UnityPreviewActionClass))
#define UNITY_IS_PREVIEW_ACTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PREVIEW_ACTION))
#define UNITY_IS_PREVIEW_ACTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PREVIEW_ACTION))
#define UNITY_PREVIEW_ACTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PREVIEW_ACTION, UnityPreviewActionClass))

typedef struct _UnityPreviewAction UnityPreviewAction;
typedef struct _UnityPreviewActionClass UnityPreviewActionClass;

#define UNITY_TYPE_INFO_HINT (unity_info_hint_get_type ())
#define UNITY_INFO_HINT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_INFO_HINT, UnityInfoHint))
#define UNITY_INFO_HINT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_INFO_HINT, UnityInfoHintClass))
#define UNITY_IS_INFO_HINT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_INFO_HINT))
#define UNITY_IS_INFO_HINT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_INFO_HINT))
#define UNITY_INFO_HINT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_INFO_HINT, UnityInfoHintClass))

typedef struct _UnityInfoHint UnityInfoHint;
typedef struct _UnityInfoHintClass UnityInfoHintClass;

#define UNITY_TYPE_LAYOUT_HINT (unity_layout_hint_get_type ())
typedef struct _UnityPreviewActionPrivate UnityPreviewActionPrivate;
typedef struct _UnityInfoHintPrivate UnityInfoHintPrivate;

#define UNITY_TYPE_GENERIC_PREVIEW (unity_generic_preview_get_type ())
#define UNITY_GENERIC_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_GENERIC_PREVIEW, UnityGenericPreview))
#define UNITY_GENERIC_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_GENERIC_PREVIEW, UnityGenericPreviewClass))
#define UNITY_IS_GENERIC_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_GENERIC_PREVIEW))
#define UNITY_IS_GENERIC_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_GENERIC_PREVIEW))
#define UNITY_GENERIC_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_GENERIC_PREVIEW, UnityGenericPreviewClass))

typedef struct _UnityGenericPreview UnityGenericPreview;
typedef struct _UnityGenericPreviewClass UnityGenericPreviewClass;
typedef struct _UnityGenericPreviewPrivate UnityGenericPreviewPrivate;

#define UNITY_TYPE_APPLICATION_PREVIEW (unity_application_preview_get_type ())
#define UNITY_APPLICATION_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_APPLICATION_PREVIEW, UnityApplicationPreview))
#define UNITY_APPLICATION_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_APPLICATION_PREVIEW, UnityApplicationPreviewClass))
#define UNITY_IS_APPLICATION_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_APPLICATION_PREVIEW))
#define UNITY_IS_APPLICATION_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_APPLICATION_PREVIEW))
#define UNITY_APPLICATION_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_APPLICATION_PREVIEW, UnityApplicationPreviewClass))

typedef struct _UnityApplicationPreview UnityApplicationPreview;
typedef struct _UnityApplicationPreviewClass UnityApplicationPreviewClass;
typedef struct _UnityApplicationPreviewPrivate UnityApplicationPreviewPrivate;

#define UNITY_TYPE_MUSIC_PREVIEW (unity_music_preview_get_type ())
#define UNITY_MUSIC_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MUSIC_PREVIEW, UnityMusicPreview))
#define UNITY_MUSIC_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MUSIC_PREVIEW, UnityMusicPreviewClass))
#define UNITY_IS_MUSIC_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MUSIC_PREVIEW))
#define UNITY_IS_MUSIC_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MUSIC_PREVIEW))
#define UNITY_MUSIC_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MUSIC_PREVIEW, UnityMusicPreviewClass))

typedef struct _UnityMusicPreview UnityMusicPreview;
typedef struct _UnityMusicPreviewClass UnityMusicPreviewClass;
typedef struct _UnityMusicPreviewPrivate UnityMusicPreviewPrivate;

#define UNITY_MUSIC_PREVIEW_TYPE_TRACK_STATE (unity_music_preview_track_state_get_type ())

#define UNITY_TYPE_TRACK_METADATA (unity_track_metadata_get_type ())
#define UNITY_TRACK_METADATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_TRACK_METADATA, UnityTrackMetadata))
#define UNITY_TRACK_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_TRACK_METADATA, UnityTrackMetadataClass))
#define UNITY_IS_TRACK_METADATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_TRACK_METADATA))
#define UNITY_IS_TRACK_METADATA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_TRACK_METADATA))
#define UNITY_TRACK_METADATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_TRACK_METADATA, UnityTrackMetadataClass))

typedef struct _UnityTrackMetadata UnityTrackMetadata;
typedef struct _UnityTrackMetadataClass UnityTrackMetadataClass;

#define UNITY_TYPE_PAYMENT_PREVIEW (unity_payment_preview_get_type ())
#define UNITY_PAYMENT_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PAYMENT_PREVIEW, UnityPaymentPreview))
#define UNITY_PAYMENT_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PAYMENT_PREVIEW, UnityPaymentPreviewClass))
#define UNITY_IS_PAYMENT_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PAYMENT_PREVIEW))
#define UNITY_IS_PAYMENT_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PAYMENT_PREVIEW))
#define UNITY_PAYMENT_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PAYMENT_PREVIEW, UnityPaymentPreviewClass))

typedef struct _UnityPaymentPreview UnityPaymentPreview;
typedef struct _UnityPaymentPreviewClass UnityPaymentPreviewClass;
typedef struct _UnityPaymentPreviewPrivate UnityPaymentPreviewPrivate;

#define UNITY_PAYMENT_PREVIEW_TYPE_TYPE (unity_payment_preview_type_get_type ())

#define UNITY_TYPE_MOVIE_PREVIEW (unity_movie_preview_get_type ())
#define UNITY_MOVIE_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MOVIE_PREVIEW, UnityMoviePreview))
#define UNITY_MOVIE_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MOVIE_PREVIEW, UnityMoviePreviewClass))
#define UNITY_IS_MOVIE_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MOVIE_PREVIEW))
#define UNITY_IS_MOVIE_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MOVIE_PREVIEW))
#define UNITY_MOVIE_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MOVIE_PREVIEW, UnityMoviePreviewClass))

typedef struct _UnityMoviePreview UnityMoviePreview;
typedef struct _UnityMoviePreviewClass UnityMoviePreviewClass;
typedef struct _UnityMoviePreviewPrivate UnityMoviePreviewPrivate;

#define UNITY_TYPE_SOCIAL_PREVIEW (unity_social_preview_get_type ())
#define UNITY_SOCIAL_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SOCIAL_PREVIEW, UnitySocialPreview))
#define UNITY_SOCIAL_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_SOCIAL_PREVIEW, UnitySocialPreviewClass))
#define UNITY_IS_SOCIAL_PREVIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SOCIAL_PREVIEW))
#define UNITY_IS_SOCIAL_PREVIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_SOCIAL_PREVIEW))
#define UNITY_SOCIAL_PREVIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_SOCIAL_PREVIEW, UnitySocialPreviewClass))

typedef struct _UnitySocialPreview UnitySocialPreview;
typedef struct _UnitySocialPreviewClass UnitySocialPreviewClass;
typedef struct _UnitySocialPreviewPrivate UnitySocialPreviewPrivate;

#define UNITY_SOCIAL_PREVIEW_TYPE_COMMENT (unity_social_preview_comment_get_type ())
#define UNITY_SOCIAL_PREVIEW_COMMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_SOCIAL_PREVIEW_TYPE_COMMENT, UnitySocialPreviewComment))
#define UNITY_SOCIAL_PREVIEW_COMMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_SOCIAL_PREVIEW_TYPE_COMMENT, UnitySocialPreviewCommentClass))
#define UNITY_SOCIAL_PREVIEW_IS_COMMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_SOCIAL_PREVIEW_TYPE_COMMENT))
#define UNITY_SOCIAL_PREVIEW_IS_COMMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_SOCIAL_PREVIEW_TYPE_COMMENT))
#define UNITY_SOCIAL_PREVIEW_COMMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_SOCIAL_PREVIEW_TYPE_COMMENT, UnitySocialPreviewCommentClass))

typedef struct _UnitySocialPreviewComment UnitySocialPreviewComment;
typedef struct _UnitySocialPreviewCommentClass UnitySocialPreviewCommentClass;
typedef struct _UnitySocialPreviewCommentPrivate UnitySocialPreviewCommentPrivate;

#define UNITY_TYPE_HANDLED_TYPE (unity_handled_type_get_type ())

#define UNITY_TYPE_ACTIVATION_RESPONSE (unity_activation_response_get_type ())
#define UNITY_ACTIVATION_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_ACTIVATION_RESPONSE, UnityActivationResponse))
#define UNITY_ACTIVATION_RESPONSE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_ACTIVATION_RESPONSE, UnityActivationResponseClass))
#define UNITY_IS_ACTIVATION_RESPONSE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_ACTIVATION_RESPONSE))
#define UNITY_IS_ACTIVATION_RESPONSE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_ACTIVATION_RESPONSE))
#define UNITY_ACTIVATION_RESPONSE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_ACTIVATION_RESPONSE, UnityActivationResponseClass))

typedef struct _UnityActivationResponse UnityActivationResponse;
typedef struct _UnityActivationResponseClass UnityActivationResponseClass;
typedef struct _UnityActivationResponsePrivate UnityActivationResponsePrivate;

#define UNITY_TYPE_AGGREGATOR_ACTIVATION (unity_aggregator_activation_get_type ())
#define UNITY_AGGREGATOR_ACTIVATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_AGGREGATOR_ACTIVATION, UnityAggregatorActivation))
#define UNITY_AGGREGATOR_ACTIVATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_AGGREGATOR_ACTIVATION, UnityAggregatorActivationClass))
#define UNITY_IS_AGGREGATOR_ACTIVATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_AGGREGATOR_ACTIVATION))
#define UNITY_IS_AGGREGATOR_ACTIVATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_AGGREGATOR_ACTIVATION))
#define UNITY_AGGREGATOR_ACTIVATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_AGGREGATOR_ACTIVATION, UnityAggregatorActivationClass))

typedef struct _UnityAggregatorActivation UnityAggregatorActivation;
typedef struct _UnityAggregatorActivationClass UnityAggregatorActivationClass;
typedef struct _UnityAggregatorActivationPrivate UnityAggregatorActivationPrivate;

#define UNITY_TYPE_ABSTRACT_SCOPE (unity_abstract_scope_get_type ())
#define UNITY_ABSTRACT_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_ABSTRACT_SCOPE, UnityAbstractScope))
#define UNITY_ABSTRACT_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_ABSTRACT_SCOPE, UnityAbstractScopeClass))
#define UNITY_IS_ABSTRACT_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_ABSTRACT_SCOPE))
#define UNITY_IS_ABSTRACT_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_ABSTRACT_SCOPE))
#define UNITY_ABSTRACT_SCOPE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_ABSTRACT_SCOPE, UnityAbstractScopeClass))

typedef struct _UnityAbstractScope UnityAbstractScope;
typedef struct _UnityAbstractScopeClass UnityAbstractScopeClass;
typedef struct _UnityFilterSetPrivate UnityFilterSetPrivate;

#define UNITY_TYPE_CATEGORY_SET (unity_category_set_get_type ())
#define UNITY_CATEGORY_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_CATEGORY_SET, UnityCategorySet))
#define UNITY_CATEGORY_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_CATEGORY_SET, UnityCategorySetClass))
#define UNITY_IS_CATEGORY_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_CATEGORY_SET))
#define UNITY_IS_CATEGORY_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_CATEGORY_SET))
#define UNITY_CATEGORY_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_CATEGORY_SET, UnityCategorySetClass))

typedef struct _UnityCategorySet UnityCategorySet;
typedef struct _UnityCategorySetClass UnityCategorySetClass;
typedef struct _UnityCategorySetPrivate UnityCategorySetPrivate;

#define UNITY_TYPE_SCHEMA (unity_schema_get_type ())
#define UNITY_SCHEMA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SCHEMA, UnitySchema))
#define UNITY_SCHEMA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_SCHEMA, UnitySchemaClass))
#define UNITY_IS_SCHEMA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SCHEMA))
#define UNITY_IS_SCHEMA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_SCHEMA))
#define UNITY_SCHEMA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_SCHEMA, UnitySchemaClass))

typedef struct _UnitySchema UnitySchema;
typedef struct _UnitySchemaClass UnitySchemaClass;
typedef struct _UnitySchemaPrivate UnitySchemaPrivate;

#define UNITY_SCHEMA_TYPE_FIELD_TYPE (unity_schema_field_type_get_type ())

#define UNITY_SCHEMA_TYPE_FIELD_INFO (unity_schema_field_info_get_type ())
typedef struct _UnitySchemaFieldInfo UnitySchemaFieldInfo;

#define UNITY_TYPE_RESULT_PREVIEWER (unity_result_previewer_get_type ())
#define UNITY_RESULT_PREVIEWER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_RESULT_PREVIEWER, UnityResultPreviewer))
#define UNITY_RESULT_PREVIEWER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_RESULT_PREVIEWER, UnityResultPreviewerClass))
#define UNITY_IS_RESULT_PREVIEWER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_RESULT_PREVIEWER))
#define UNITY_IS_RESULT_PREVIEWER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_RESULT_PREVIEWER))
#define UNITY_RESULT_PREVIEWER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_RESULT_PREVIEWER, UnityResultPreviewerClass))

typedef struct _UnityResultPreviewer UnityResultPreviewer;
typedef struct _UnityResultPreviewerClass UnityResultPreviewerClass;
typedef struct _UnityResultPreviewerPrivate UnityResultPreviewerPrivate;
typedef struct _UnitySearchMetadataPrivate UnitySearchMetadataPrivate;

#define UNITY_TYPE_GEO_COORDINATE (unity_geo_coordinate_get_type ())
#define UNITY_GEO_COORDINATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_GEO_COORDINATE, UnityGeoCoordinate))
#define UNITY_GEO_COORDINATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_GEO_COORDINATE, UnityGeoCoordinateClass))
#define UNITY_IS_GEO_COORDINATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_GEO_COORDINATE))
#define UNITY_IS_GEO_COORDINATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_GEO_COORDINATE))
#define UNITY_GEO_COORDINATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_GEO_COORDINATE, UnityGeoCoordinateClass))

typedef struct _UnityGeoCoordinate UnityGeoCoordinate;
typedef struct _UnityGeoCoordinateClass UnityGeoCoordinateClass;
typedef struct _UnityGeoCoordinatePrivate UnityGeoCoordinatePrivate;
typedef struct _UnityAbstractScopePrivate UnityAbstractScopePrivate;

#define UNITY_TYPE_SCOPE_DBUS_CONNECTOR (unity_scope_dbus_connector_get_type ())
#define UNITY_SCOPE_DBUS_CONNECTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SCOPE_DBUS_CONNECTOR, UnityScopeDBusConnector))
#define UNITY_SCOPE_DBUS_CONNECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_SCOPE_DBUS_CONNECTOR, UnityScopeDBusConnectorClass))
#define UNITY_IS_SCOPE_DBUS_CONNECTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SCOPE_DBUS_CONNECTOR))
#define UNITY_IS_SCOPE_DBUS_CONNECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_SCOPE_DBUS_CONNECTOR))
#define UNITY_SCOPE_DBUS_CONNECTOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_SCOPE_DBUS_CONNECTOR, UnityScopeDBusConnectorClass))

typedef struct _UnityScopeDBusConnector UnityScopeDBusConnector;
typedef struct _UnityScopeDBusConnectorClass UnityScopeDBusConnectorClass;
typedef struct _UnityScopeDBusConnectorPrivate UnityScopeDBusConnectorPrivate;

#define UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL (unity_internal_scope_dbus_impl_get_type ())
#define UNITY_INTERNAL_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL, UnityInternalScopeDBusImpl))
#define UNITY_INTERNAL_IS_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL))
#define UNITY_INTERNAL_SCOPE_DBUS_IMPL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_IMPL, UnityInternalScopeDBusImplIface))

typedef struct _UnityInternalScopeDBusImpl UnityInternalScopeDBusImpl;
typedef struct _UnityInternalScopeDBusImplIface UnityInternalScopeDBusImplIface;

#define UNITY_INTERNAL_TYPE_DEFAULT_SCOPE_DBUS_IMPL (unity_internal_default_scope_dbus_impl_get_type ())
#define UNITY_INTERNAL_DEFAULT_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEFAULT_SCOPE_DBUS_IMPL, UnityInternalDefaultScopeDBusImpl))
#define UNITY_INTERNAL_DEFAULT_SCOPE_DBUS_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_DEFAULT_SCOPE_DBUS_IMPL, UnityInternalDefaultScopeDBusImplClass))
#define UNITY_INTERNAL_IS_DEFAULT_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEFAULT_SCOPE_DBUS_IMPL))
#define UNITY_INTERNAL_IS_DEFAULT_SCOPE_DBUS_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_DEFAULT_SCOPE_DBUS_IMPL))
#define UNITY_INTERNAL_DEFAULT_SCOPE_DBUS_IMPL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_DEFAULT_SCOPE_DBUS_IMPL, UnityInternalDefaultScopeDBusImplClass))

typedef struct _UnityInternalDefaultScopeDBusImpl UnityInternalDefaultScopeDBusImpl;
typedef struct _UnityInternalDefaultScopeDBusImplClass UnityInternalDefaultScopeDBusImplClass;
typedef struct _UnityInternalDefaultScopeDBusImplPrivate UnityInternalDefaultScopeDBusImplPrivate;

#define UNITY_INTERNAL_TYPE_OWNED_NAME (unity_internal_owned_name_get_type ())
typedef struct _UnityInternalOwnedName UnityInternalOwnedName;

#define UNITY_INTERNAL_TYPE_SCOPE_DBUS_NAME_MANAGER (unity_internal_scope_dbus_name_manager_get_type ())
#define UNITY_INTERNAL_SCOPE_DBUS_NAME_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_NAME_MANAGER, UnityInternalScopeDBusNameManager))
#define UNITY_INTERNAL_SCOPE_DBUS_NAME_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_SCOPE_DBUS_NAME_MANAGER, UnityInternalScopeDBusNameManagerClass))
#define UNITY_INTERNAL_IS_SCOPE_DBUS_NAME_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_NAME_MANAGER))
#define UNITY_INTERNAL_IS_SCOPE_DBUS_NAME_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_SCOPE_DBUS_NAME_MANAGER))
#define UNITY_INTERNAL_SCOPE_DBUS_NAME_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_SCOPE_DBUS_NAME_MANAGER, UnityInternalScopeDBusNameManagerClass))

typedef struct _UnityInternalScopeDBusNameManager UnityInternalScopeDBusNameManager;
typedef struct _UnityInternalScopeDBusNameManagerClass UnityInternalScopeDBusNameManagerClass;
typedef struct _UnityInternalScopeDBusNameManagerPrivate UnityInternalScopeDBusNameManagerPrivate;

#define UNITY_INTERNAL_TYPE_CHANNEL_STATE (unity_internal_channel_state_get_type ())

#define UNITY_INTERNAL_TYPE_SCOPE_CHANNEL (unity_internal_scope_channel_get_type ())
#define UNITY_INTERNAL_SCOPE_CHANNEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL, UnityInternalScopeChannel))
#define UNITY_INTERNAL_SCOPE_CHANNEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL, UnityInternalScopeChannelClass))
#define UNITY_INTERNAL_IS_SCOPE_CHANNEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL))
#define UNITY_INTERNAL_IS_SCOPE_CHANNEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL))
#define UNITY_INTERNAL_SCOPE_CHANNEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_SCOPE_CHANNEL, UnityInternalScopeChannelClass))

typedef struct _UnityInternalScopeChannel UnityInternalScopeChannel;
typedef struct _UnityInternalScopeChannelClass UnityInternalScopeChannelClass;
typedef struct _UnityInternalScopeChannelPrivate UnityInternalScopeChannelPrivate;

#define UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX (unity_internal_utils_async_mutex_get_type ())
#define UNITY_INTERNAL_UTILS_ASYNC_MUTEX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX, UnityInternalUtilsAsyncMutex))
#define UNITY_INTERNAL_UTILS_ASYNC_MUTEX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX, UnityInternalUtilsAsyncMutexClass))
#define UNITY_INTERNAL_UTILS_IS_ASYNC_MUTEX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX))
#define UNITY_INTERNAL_UTILS_IS_ASYNC_MUTEX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX))
#define UNITY_INTERNAL_UTILS_ASYNC_MUTEX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_MUTEX, UnityInternalUtilsAsyncMutexClass))

typedef struct _UnityInternalUtilsAsyncMutex UnityInternalUtilsAsyncMutex;
typedef struct _UnityInternalUtilsAsyncMutexClass UnityInternalUtilsAsyncMutexClass;
typedef struct _UnityDeprecatedScopeBasePrivate UnityDeprecatedScopeBasePrivate;
typedef struct _UnityDeprecatedScopePrivate UnityDeprecatedScopePrivate;

#define UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL (unity_internal_deprecated_scope_dbus_impl_get_type ())
#define UNITY_INTERNAL_DEPRECATED_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL, UnityInternalDeprecatedScopeDBusImpl))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_DBUS_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_DBUS_IMPL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_DBUS_IMPL, UnityInternalDeprecatedScopeDBusImplIface))

typedef struct _UnityInternalDeprecatedScopeDBusImpl UnityInternalDeprecatedScopeDBusImpl;
typedef struct _UnityInternalDeprecatedScopeDBusImplIface UnityInternalDeprecatedScopeDBusImplIface;

#define UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL (unity_internal_deprecated_scope_impl_get_type ())
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImpl))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImplClass))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL))
#define UNITY_INTERNAL_IS_DEPRECATED_SCOPE_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL))
#define UNITY_INTERNAL_DEPRECATED_SCOPE_IMPL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_DEPRECATED_SCOPE_IMPL, UnityInternalDeprecatedScopeImplClass))

typedef struct _UnityInternalDeprecatedScopeImpl UnityInternalDeprecatedScopeImpl;
typedef struct _UnityInternalDeprecatedScopeImplClass UnityInternalDeprecatedScopeImplClass;
typedef struct _UnityInternalDeprecatedScopeImplPrivate UnityInternalDeprecatedScopeImplPrivate;
typedef struct _UnityAggregatorScopePrivate UnityAggregatorScopePrivate;

#define UNITY_AGGREGATOR_SCOPE_TYPE_SORT_FLAGS (unity_aggregator_scope_sort_flags_get_type ())

#define UNITY_AGGREGATOR_SCOPE_TYPE_MERGE_MODE (unity_aggregator_scope_merge_mode_get_type ())

#define UNITY_INTERNAL_TYPE_AGGREGATOR_SCOPE_IMPL (unity_internal_aggregator_scope_impl_get_type ())
#define UNITY_INTERNAL_AGGREGATOR_SCOPE_IMPL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_AGGREGATOR_SCOPE_IMPL, UnityInternalAggregatorScopeImpl))
#define UNITY_INTERNAL_AGGREGATOR_SCOPE_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_AGGREGATOR_SCOPE_IMPL, UnityInternalAggregatorScopeImplClass))
#define UNITY_INTERNAL_IS_AGGREGATOR_SCOPE_IMPL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_AGGREGATOR_SCOPE_IMPL))
#define UNITY_INTERNAL_IS_AGGREGATOR_SCOPE_IMPL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_AGGREGATOR_SCOPE_IMPL))
#define UNITY_INTERNAL_AGGREGATOR_SCOPE_IMPL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_AGGREGATOR_SCOPE_IMPL, UnityInternalAggregatorScopeImplClass))

typedef struct _UnityInternalAggregatorScopeImpl UnityInternalAggregatorScopeImpl;
typedef struct _UnityInternalAggregatorScopeImplClass UnityInternalAggregatorScopeImplClass;
typedef struct _UnityInternalAggregatorScopeImplPrivate UnityInternalAggregatorScopeImplPrivate;

#define UNITY_TYPE_MASTER_SCOPE (unity_master_scope_get_type ())
#define UNITY_MASTER_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MASTER_SCOPE, UnityMasterScope))
#define UNITY_MASTER_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MASTER_SCOPE, UnityMasterScopeClass))
#define UNITY_IS_MASTER_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MASTER_SCOPE))
#define UNITY_IS_MASTER_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MASTER_SCOPE))
#define UNITY_MASTER_SCOPE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MASTER_SCOPE, UnityMasterScopeClass))

typedef struct _UnityMasterScope UnityMasterScope;
typedef struct _UnityMasterScopeClass UnityMasterScopeClass;
typedef struct _UnityMasterScopePrivate UnityMasterScopePrivate;

#define UNITY_TYPE_SIMPLE_SCOPE (unity_simple_scope_get_type ())
#define UNITY_SIMPLE_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SIMPLE_SCOPE, UnitySimpleScope))
#define UNITY_SIMPLE_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_SIMPLE_SCOPE, UnitySimpleScopeClass))
#define UNITY_IS_SIMPLE_SCOPE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SIMPLE_SCOPE))
#define UNITY_IS_SIMPLE_SCOPE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_SIMPLE_SCOPE))
#define UNITY_SIMPLE_SCOPE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_SIMPLE_SCOPE, UnitySimpleScopeClass))

typedef struct _UnitySimpleScope UnitySimpleScope;
typedef struct _UnitySimpleScopeClass UnitySimpleScopeClass;
typedef struct _UnitySimpleScopePrivate UnitySimpleScopePrivate;

#define UNITY_TYPE_SCOPE_LOADER (unity_scope_loader_get_type ())
#define UNITY_SCOPE_LOADER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SCOPE_LOADER, UnityScopeLoader))
#define UNITY_SCOPE_LOADER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_SCOPE_LOADER, UnityScopeLoaderClass))
#define UNITY_IS_SCOPE_LOADER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SCOPE_LOADER))
#define UNITY_IS_SCOPE_LOADER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_SCOPE_LOADER))
#define UNITY_SCOPE_LOADER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_SCOPE_LOADER, UnityScopeLoaderClass))

typedef struct _UnityScopeLoader UnityScopeLoader;
typedef struct _UnityScopeLoaderClass UnityScopeLoaderClass;
typedef struct _UnityScopeLoaderPrivate UnityScopeLoaderPrivate;

#define UNITY_INTERNAL_TYPE_CHANNEL_UPDATE_FLAGS (unity_internal_channel_update_flags_get_type ())

#define UNITY_INTERNAL_TYPE_SCOPE_TRACKER (unity_internal_scope_tracker_get_type ())
#define UNITY_INTERNAL_SCOPE_TRACKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_TYPE_SCOPE_TRACKER, UnityInternalScopeTracker))
#define UNITY_INTERNAL_SCOPE_TRACKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_TYPE_SCOPE_TRACKER, UnityInternalScopeTrackerClass))
#define UNITY_INTERNAL_IS_SCOPE_TRACKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_TYPE_SCOPE_TRACKER))
#define UNITY_INTERNAL_IS_SCOPE_TRACKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_TYPE_SCOPE_TRACKER))
#define UNITY_INTERNAL_SCOPE_TRACKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_TYPE_SCOPE_TRACKER, UnityInternalScopeTrackerClass))

typedef struct _UnityInternalScopeTracker UnityInternalScopeTracker;
typedef struct _UnityInternalScopeTrackerClass UnityInternalScopeTrackerClass;
typedef struct _UnityInternalScopeTrackerPrivate UnityInternalScopeTrackerPrivate;
typedef struct _UnityTrackMetadataPrivate UnityTrackMetadataPrivate;

#define UNITY_TYPE_PLAYLIST (unity_playlist_get_type ())
#define UNITY_PLAYLIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PLAYLIST, UnityPlaylist))
#define UNITY_PLAYLIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PLAYLIST, UnityPlaylistClass))
#define UNITY_IS_PLAYLIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PLAYLIST))
#define UNITY_IS_PLAYLIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PLAYLIST))
#define UNITY_PLAYLIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PLAYLIST, UnityPlaylistClass))

typedef struct _UnityPlaylist UnityPlaylist;
typedef struct _UnityPlaylistClass UnityPlaylistClass;
typedef struct _UnityPlaylistPrivate UnityPlaylistPrivate;

#define UNITY_TYPE_PLAYBACK_STATE (unity_playback_state_get_type ())

#define UNITY_TYPE_MUSIC_PLAYER (unity_music_player_get_type ())
#define UNITY_MUSIC_PLAYER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MUSIC_PLAYER, UnityMusicPlayer))
#define UNITY_MUSIC_PLAYER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MUSIC_PLAYER, UnityMusicPlayerClass))
#define UNITY_IS_MUSIC_PLAYER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MUSIC_PLAYER))
#define UNITY_IS_MUSIC_PLAYER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MUSIC_PLAYER))
#define UNITY_MUSIC_PLAYER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MUSIC_PLAYER, UnityMusicPlayerClass))

typedef struct _UnityMusicPlayer UnityMusicPlayer;
typedef struct _UnityMusicPlayerClass UnityMusicPlayerClass;
typedef struct _UnityMusicPlayerPrivate UnityMusicPlayerPrivate;

#define UNITY_TYPE_MPRIS_GATEWAY (unity_mpris_gateway_get_type ())
#define UNITY_MPRIS_GATEWAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MPRIS_GATEWAY, UnityMPRISGateway))
#define UNITY_MPRIS_GATEWAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MPRIS_GATEWAY, UnityMPRISGatewayClass))
#define UNITY_IS_MPRIS_GATEWAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MPRIS_GATEWAY))
#define UNITY_IS_MPRIS_GATEWAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MPRIS_GATEWAY))
#define UNITY_MPRIS_GATEWAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MPRIS_GATEWAY, UnityMPRISGatewayClass))

typedef struct _UnityMPRISGateway UnityMPRISGateway;
typedef struct _UnityMPRISGatewayClass UnityMPRISGatewayClass;
typedef struct _UnityMPRISGatewayPrivate UnityMPRISGatewayPrivate;

#define UNITY_TYPE_SPECIFIC_ITEM_MANAGER (unity_specific_item_manager_get_type ())
#define UNITY_SPECIFIC_ITEM_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SPECIFIC_ITEM_MANAGER, UnitySpecificItemManager))
#define UNITY_SPECIFIC_ITEM_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_SPECIFIC_ITEM_MANAGER, UnitySpecificItemManagerClass))
#define UNITY_IS_SPECIFIC_ITEM_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SPECIFIC_ITEM_MANAGER))
#define UNITY_IS_SPECIFIC_ITEM_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_SPECIFIC_ITEM_MANAGER))
#define UNITY_SPECIFIC_ITEM_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_SPECIFIC_ITEM_MANAGER, UnitySpecificItemManagerClass))

typedef struct _UnitySpecificItemManager UnitySpecificItemManager;
typedef struct _UnitySpecificItemManagerClass UnitySpecificItemManagerClass;
typedef struct _UnitySpecificItemManagerPrivate UnitySpecificItemManagerPrivate;

#define UNITY_TYPE_PROPERTY_UPDATE_MANAGER (unity_property_update_manager_get_type ())
#define UNITY_PROPERTY_UPDATE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PROPERTY_UPDATE_MANAGER, UnityPropertyUpdateManager))
#define UNITY_PROPERTY_UPDATE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PROPERTY_UPDATE_MANAGER, UnityPropertyUpdateManagerClass))
#define UNITY_IS_PROPERTY_UPDATE_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PROPERTY_UPDATE_MANAGER))
#define UNITY_IS_PROPERTY_UPDATE_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PROPERTY_UPDATE_MANAGER))
#define UNITY_PROPERTY_UPDATE_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PROPERTY_UPDATE_MANAGER, UnityPropertyUpdateManagerClass))

typedef struct _UnityPropertyUpdateManager UnityPropertyUpdateManager;
typedef struct _UnityPropertyUpdateManagerClass UnityPropertyUpdateManagerClass;
typedef struct _UnityPropertyUpdateManagerPrivate UnityPropertyUpdateManagerPrivate;

#define UNITY_TYPE_BLACKLIST_MANAGER (unity_blacklist_manager_get_type ())
#define UNITY_BLACKLIST_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_BLACKLIST_MANAGER, UnityBlacklistManager))
#define UNITY_BLACKLIST_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_BLACKLIST_MANAGER, UnityBlacklistManagerClass))
#define UNITY_IS_BLACKLIST_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_BLACKLIST_MANAGER))
#define UNITY_IS_BLACKLIST_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_BLACKLIST_MANAGER))
#define UNITY_BLACKLIST_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_BLACKLIST_MANAGER, UnityBlacklistManagerClass))

typedef struct _UnityBlacklistManager UnityBlacklistManager;
typedef struct _UnityBlacklistManagerClass UnityBlacklistManagerClass;
typedef struct _UnityBlacklistManagerPrivate UnityBlacklistManagerPrivate;

#define UNITY_TYPE_SOUND_SERVICE_INTERFACE (unity_sound_service_interface_get_type ())
#define UNITY_SOUND_SERVICE_INTERFACE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SOUND_SERVICE_INTERFACE, UnitySoundServiceInterface))
#define UNITY_IS_SOUND_SERVICE_INTERFACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SOUND_SERVICE_INTERFACE))
#define UNITY_SOUND_SERVICE_INTERFACE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_TYPE_SOUND_SERVICE_INTERFACE, UnitySoundServiceInterfaceIface))

typedef struct _UnitySoundServiceInterface UnitySoundServiceInterface;
typedef struct _UnitySoundServiceInterfaceIface UnitySoundServiceInterfaceIface;

#define UNITY_TYPE_SOUND_SERVICE_INTERFACE_PROXY (unity_sound_service_interface_proxy_get_type ())

#define UNITY_TYPE_MPRIS_ROOT (unity_mpris_root_get_type ())
#define UNITY_MPRIS_ROOT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MPRIS_ROOT, UnityMprisRoot))
#define UNITY_MPRIS_ROOT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MPRIS_ROOT, UnityMprisRootClass))
#define UNITY_IS_MPRIS_ROOT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MPRIS_ROOT))
#define UNITY_IS_MPRIS_ROOT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MPRIS_ROOT))
#define UNITY_MPRIS_ROOT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MPRIS_ROOT, UnityMprisRootClass))

typedef struct _UnityMprisRoot UnityMprisRoot;
typedef struct _UnityMprisRootClass UnityMprisRootClass;
typedef struct _UnityMprisRootPrivate UnityMprisRootPrivate;

#define UNITY_TYPE_MPRIS_PLAYER (unity_mpris_player_get_type ())
#define UNITY_MPRIS_PLAYER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MPRIS_PLAYER, UnityMprisPlayer))
#define UNITY_MPRIS_PLAYER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MPRIS_PLAYER, UnityMprisPlayerClass))
#define UNITY_IS_MPRIS_PLAYER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MPRIS_PLAYER))
#define UNITY_IS_MPRIS_PLAYER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MPRIS_PLAYER))
#define UNITY_MPRIS_PLAYER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MPRIS_PLAYER, UnityMprisPlayerClass))

typedef struct _UnityMprisPlayer UnityMprisPlayer;
typedef struct _UnityMprisPlayerClass UnityMprisPlayerClass;
typedef struct _UnityMprisPlayerPrivate UnityMprisPlayerPrivate;

#define UNITY_TYPE_PLAYLIST_DETAILS (unity_playlist_details_get_type ())
typedef struct _UnityPlaylistDetails UnityPlaylistDetails;

#define UNITY_TYPE_ACTIVE_PLAYLIST_CONTAINER (unity_active_playlist_container_get_type ())
typedef struct _UnityActivePlaylistContainer UnityActivePlaylistContainer;

#define UNITY_TYPE_MPRIS_PLAYLISTS (unity_mpris_playlists_get_type ())
#define UNITY_MPRIS_PLAYLISTS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_MPRIS_PLAYLISTS, UnityMprisPlaylists))
#define UNITY_MPRIS_PLAYLISTS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_MPRIS_PLAYLISTS, UnityMprisPlaylistsClass))
#define UNITY_IS_MPRIS_PLAYLISTS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_MPRIS_PLAYLISTS))
#define UNITY_IS_MPRIS_PLAYLISTS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_MPRIS_PLAYLISTS))
#define UNITY_MPRIS_PLAYLISTS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_MPRIS_PLAYLISTS, UnityMprisPlaylistsClass))

typedef struct _UnityMprisPlaylists UnityMprisPlaylists;
typedef struct _UnityMprisPlaylistsClass UnityMprisPlaylistsClass;
typedef struct _UnityMprisPlaylistsPrivate UnityMprisPlaylistsPrivate;

#define UNITY_INTERNAL_TYPE_CATEGORY_COLUMN (unity_internal_category_column_get_type ())

#define UNITY_INTERNAL_TYPE_FILTER_COLUMN (unity_internal_filter_column_get_type ())

#define UNITY_INTERNAL_TYPE_RESULT_COLUMN (unity_internal_result_column_get_type ())
typedef struct _UnityInternalUtilsDelegateWrapper UnityInternalUtilsDelegateWrapper;

#define UNITY_INTERNAL_UTILS_TYPE_ASYNC_ONCE (unity_internal_utils_async_once_get_type ())
#define UNITY_INTERNAL_UTILS_ASYNC_ONCE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_ONCE, UnityInternalUtilsAsyncOnce))
#define UNITY_INTERNAL_UTILS_ASYNC_ONCE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_INTERNAL_UTILS_TYPE_ASYNC_ONCE, UnityInternalUtilsAsyncOnceClass))
#define UNITY_INTERNAL_UTILS_IS_ASYNC_ONCE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_ONCE))
#define UNITY_INTERNAL_UTILS_IS_ASYNC_ONCE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_INTERNAL_UTILS_TYPE_ASYNC_ONCE))
#define UNITY_INTERNAL_UTILS_ASYNC_ONCE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_INTERNAL_UTILS_TYPE_ASYNC_ONCE, UnityInternalUtilsAsyncOnceClass))

typedef struct _UnityInternalUtilsAsyncOnce UnityInternalUtilsAsyncOnce;
typedef struct _UnityInternalUtilsAsyncOnceClass UnityInternalUtilsAsyncOnceClass;
typedef struct _UnityInternalUtilsAsyncOncePrivate UnityInternalUtilsAsyncOncePrivate;
typedef struct _UnityInternalUtilsAsyncMutexPrivate UnityInternalUtilsAsyncMutexPrivate;

#define UNITY_INTERNAL_UTILS_DIFF_TYPE_CONTEXT (unity_internal_utils_diff_context_get_type ())
typedef struct _UnityInternalUtilsDiffContext UnityInternalUtilsDiffContext;

#define UNITY_INTERNAL_UTILS_DIFF_TYPE_PARTITION (unity_internal_utils_diff_partition_get_type ())
typedef struct _UnityInternalUtilsDiffPartition UnityInternalUtilsDiffPartition;

#define UNITY_INTERNAL_UTILS_DIFF_TYPE_CHANGE (unity_internal_utils_diff_change_get_type ())
typedef struct _UnityInternalUtilsDiffChange UnityInternalUtilsDiffChange;

struct _UnityStringArrayWrapper {
	gchar** strings;
	gint strings_length1;
	gint _strings_size_;
};

struct _UnityAppInfoManager {
	GObject parent_instance;
	UnityAppInfoManagerPrivate * priv;
};

struct _UnityAppInfoManagerClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_CATEGORY_TYPE_NONE,
	UNITY_CATEGORY_TYPE_APPLICATION,
	UNITY_CATEGORY_TYPE_BOOK,
	UNITY_CATEGORY_TYPE_MUSIC,
	UNITY_CATEGORY_TYPE_MOVIE,
	UNITY_CATEGORY_TYPE_GAMES,
	UNITY_CATEGORY_TYPE_ELECTRONICS,
	UNITY_CATEGORY_TYPE_COMPUTERS,
	UNITY_CATEGORY_TYPE_OFFICE,
	UNITY_CATEGORY_TYPE_HOME,
	UNITY_CATEGORY_TYPE_GARDEN,
	UNITY_CATEGORY_TYPE_PETS,
	UNITY_CATEGORY_TYPE_TOYS,
	UNITY_CATEGORY_TYPE_CHILDREN,
	UNITY_CATEGORY_TYPE_BABY,
	UNITY_CATEGORY_TYPE_CLOTHES,
	UNITY_CATEGORY_TYPE_SHOES,
	UNITY_CATEGORY_TYPE_WATCHES,
	UNITY_CATEGORY_TYPE_SPORTS,
	UNITY_CATEGORY_TYPE_OUTDOORS,
	UNITY_CATEGORY_TYPE_GROCERY,
	UNITY_CATEGORY_TYPE_HEALTH,
	UNITY_CATEGORY_TYPE_BEAUTY,
	UNITY_CATEGORY_TYPE_DIY,
	UNITY_CATEGORY_TYPE_TOOLS,
	UNITY_CATEGORY_TYPE_CAR,
	UNITY_CATEGORY_TYPE_N_CATEGORIES
} UnityCategoryType;

typedef enum  {
	UNITY_ICON_SIZE_HINT_DEFAULT,
	UNITY_ICON_SIZE_HINT_SMALL,
	UNITY_ICON_SIZE_HINT_LARGE
} UnityIconSizeHint;

struct _UnityAnnotatedIcon {
	GObject parent_instance;
	UnityAnnotatedIconPrivate * priv;
};

struct _UnityAnnotatedIconClass {
	GObjectClass parent_class;
};

struct _UnityInspector {
	GObject parent_instance;
	UnityInspectorPrivate * priv;
};

struct _UnityInspectorClass {
	GObjectClass parent_class;
};

struct _UnityLauncherEntryDBusImpl {
	GObject parent_instance;
	UnityLauncherEntryDBusImplPrivate * priv;
	UnityLauncherEntry* owner;
};

struct _UnityLauncherEntryDBusImplClass {
	GObjectClass parent_class;
};

struct _UnityLauncherEntry {
	GObject parent_instance;
	UnityLauncherEntryPrivate * priv;
	char* _object_path;
};

struct _UnityLauncherEntryClass {
	GObjectClass parent_class;
};

struct _UnityLauncherFavorites {
	GObject parent_instance;
	UnityLauncherFavoritesPrivate * priv;
};

struct _UnityLauncherFavoritesClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_CATEGORY_RENDERER_DEFAULT = 0,
	UNITY_CATEGORY_RENDERER_GRID = 1,
	UNITY_CATEGORY_RENDERER_CAROUSEL = 2,
	UNITY_CATEGORY_RENDERER_LIST = 3,
	UNITY_CATEGORY_RENDERER_DYNAMIC = 1000,
	UNITY_CATEGORY_RENDERER_SPECIAL = 1001,
	UNITY_CATEGORY_RENDERER_VERTICAL_TILE = 0,
	UNITY_CATEGORY_RENDERER_HORIZONTAL_TILE = 1
} UnityCategoryRenderer;

typedef enum  {
	UNITY_CATEGORY_CONTENT_TYPE_DEFAULT,
	UNITY_CATEGORY_CONTENT_TYPE_APPLICATIONS,
	UNITY_CATEGORY_CONTENT_TYPE_MUSIC,
	UNITY_CATEGORY_CONTENT_TYPE_VIDEO,
	UNITY_CATEGORY_CONTENT_TYPE_PLACES,
	UNITY_CATEGORY_CONTENT_TYPE_SOCIAL,
	UNITY_CATEGORY_CONTENT_TYPE_WEATHER
} UnityCategoryContentType;

struct _UnityMetadataProvider {
	GObject parent_instance;
	UnityMetadataProviderPrivate * priv;
};

struct _UnityMetadataProviderClass {
	GObjectClass parent_class;
	void (*update_hints) (UnityMetadataProvider* self, GHashTable* hints);
};

struct _UnityProgressSourceProvider {
	UnityMetadataProvider parent_instance;
	UnityProgressSourceProviderPrivate * priv;
};

struct _UnityProgressSourceProviderClass {
	UnityMetadataProviderClass parent_class;
};

struct _UnityCategory {
	GObject parent_instance;
	UnityCategoryPrivate * priv;
};

struct _UnityCategoryClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_FILTER_RENDERER_CHECK_OPTIONS,
	UNITY_FILTER_RENDERER_RADIO_OPTIONS,
	UNITY_FILTER_RENDERER_MULTIRANGE,
	UNITY_FILTER_RENDERER_RATINGS,
	UNITY_FILTER_RENDERER_CHECK_OPTIONS_COMPACT
} UnityFilterRenderer;

struct _UnityFilter {
	GObject parent_instance;
	UnityFilterPrivate * priv;
};

struct _UnityFilterClass {
	GObjectClass parent_class;
	GHashTable* (*get_hints) (UnityFilter* self);
	void (*update) (UnityFilter* self, GVariant* properties);
};

struct _UnityFilterOption {
	GObject parent_instance;
	UnityFilterOptionPrivate * priv;
};

struct _UnityFilterOptionClass {
	GObjectClass parent_class;
};

struct _UnityOptionsFilter {
	UnityFilter parent_instance;
	UnityOptionsFilterPrivate * priv;
	GList* options;
};

struct _UnityOptionsFilterClass {
	UnityFilterClass parent_class;
};

typedef enum  {
	UNITY_OPTIONS_FILTER_SORT_TYPE_MANUAL,
	UNITY_OPTIONS_FILTER_SORT_TYPE_DISPLAY_NAME,
	UNITY_OPTIONS_FILTER_SORT_TYPE_ID
} UnityOptionsFilterSortType;

struct _UnityRadioOptionFilter {
	UnityOptionsFilter parent_instance;
	UnityRadioOptionFilterPrivate * priv;
};

struct _UnityRadioOptionFilterClass {
	UnityOptionsFilterClass parent_class;
};

struct _UnityCheckOptionFilter {
	UnityOptionsFilter parent_instance;
	UnityCheckOptionFilterPrivate * priv;
};

struct _UnityCheckOptionFilterClass {
	UnityOptionsFilterClass parent_class;
};

struct _UnityCheckOptionFilterCompact {
	UnityOptionsFilter parent_instance;
	UnityCheckOptionFilterCompactPrivate * priv;
};

struct _UnityCheckOptionFilterCompactClass {
	UnityOptionsFilterClass parent_class;
};

struct _UnityRatingsFilter {
	UnityFilter parent_instance;
	UnityRatingsFilterPrivate * priv;
};

struct _UnityRatingsFilterClass {
	UnityFilterClass parent_class;
};

struct _UnityMultiRangeFilter {
	UnityOptionsFilter parent_instance;
	UnityMultiRangeFilterPrivate * priv;
};

struct _UnityMultiRangeFilterClass {
	UnityOptionsFilterClass parent_class;
};

struct _UnityPreferencesManager {
	GObject parent_instance;
	UnityPreferencesManagerPrivate * priv;
};

struct _UnityPreferencesManagerClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_PREFERENCES_MANAGER_REMOTE_CONTENT_ALL,
	UNITY_PREFERENCES_MANAGER_REMOTE_CONTENT_NONE
} UnityPreferencesManagerRemoteContent;

struct _UnityInternalMergeStrategyIface {
	GTypeInterface parent_iface;
	DeeModelIter* (*merge_result) (UnityInternalMergeStrategy* self, const gchar* source_scope_id, DeeModel* target, GVariant** row, int row_length1);
};

typedef enum  {
	UNITY_RESULT_TYPE_DEFAULT,
	UNITY_RESULT_TYPE_PERSONAL,
	UNITY_RESULT_TYPE_SEMI_PERSONAL
} UnityResultType;

struct _UnityScopeResult {
	gchar* uri;
	gchar* icon_hint;
	guint category;
	UnityResultType result_type;
	gchar* mimetype;
	gchar* title;
	gchar* comment;
	gchar* dnd_uri;
	GHashTable* metadata;
};

struct _UnityResultSet {
	GObject parent_instance;
	UnityResultSetPrivate * priv;
	gint ttl;
};

struct _UnityResultSetClass {
	GObjectClass parent_class;
	void (*add_result) (UnityResultSet* self, UnityScopeResult* _result_);
	void (*add_result_from_variant) (UnityResultSet* self, GVariant* variant);
	void (*flush) (UnityResultSet* self);
};

struct _UnityInternalDeeResultSet {
	UnityResultSet parent_instance;
	UnityInternalDeeResultSetPrivate * priv;
};

struct _UnityInternalDeeResultSetClass {
	UnityResultSetClass parent_class;
};

struct _UnityInternalDiffModel {
	DeeSharedModel parent_instance;
	UnityInternalDiffModelPrivate * priv;
};

struct _UnityInternalDiffModelClass {
	DeeSharedModelClass parent_class;
};

struct _UnityCancellable {
	GObject parent_instance;
	UnityCancellablePrivate * priv;
};

struct _UnityCancellableClass {
	GObjectClass parent_class;
	void (*cancel) (UnityCancellable* self);
	gboolean (*is_cancelled) (UnityCancellable* self);
	GCancellable* (*get_gcancellable) (UnityCancellable* self);
};

struct _UnityInternalGLibCancellable {
	UnityCancellable parent_instance;
	UnityInternalGLibCancellablePrivate * priv;
};

struct _UnityInternalGLibCancellableClass {
	UnityCancellableClass parent_class;
};

typedef void (*UnityScopeSearchBaseCallback) (UnityScopeSearchBase* instance, gpointer user_data);
typedef enum  {
	UNITY_SEARCH_TYPE_DEFAULT,
	UNITY_SEARCH_TYPE_GLOBAL,
	UNITY_SEARCH_TYPE_N_TYPES
} UnitySearchType;

struct _UnitySearchContext {
	gchar* search_query;
	UnitySearchType search_type;
	UnityFilterSet* filter_state;
	UnitySearchMetadata* search_metadata;
	UnityResultSet* result_set;
	UnityCancellable* cancellable;
};

struct _UnityScopeSearchBase {
	GObject parent_instance;
	UnityScopeSearchBasePrivate * priv;
	UnitySearchContext* search_context;
};

struct _UnityScopeSearchBaseClass {
	GObjectClass parent_class;
	void (*run) (UnityScopeSearchBase* self);
	void (*run_async) (UnityScopeSearchBase* self, UnityScopeSearchBaseCallback async_callback, gpointer async_callback_target);
	void (*set_search_context) (UnityScopeSearchBase* self, UnitySearchContext* ctx);
};

struct _UnityDeprecatedScopeSearch {
	UnityScopeSearchBase parent_instance;
	UnityDeprecatedScopeSearchPrivate * priv;
};

struct _UnityDeprecatedScopeSearchClass {
	UnityScopeSearchBaseClass parent_class;
};

struct _UnityAggregatedScopeSearch {
	UnityDeprecatedScopeSearch parent_instance;
	UnityAggregatedScopeSearchPrivate * priv;
};

struct _UnityAggregatedScopeSearchClass {
	UnityDeprecatedScopeSearchClass parent_class;
};

struct _UnityInternalResultsSynchronizer {
	GObject parent_instance;
	UnityInternalResultsSynchronizerPrivate * priv;
};

struct _UnityInternalResultsSynchronizerClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_SERIALIZATION_TYPE_BINARY,
	UNITY_SERIALIZATION_TYPE_JSON
} UnitySerializationType;

struct _UnityAbstractPreview {
	GObject parent_instance;
	UnityAbstractPreviewPrivate * priv;
};

struct _UnityAbstractPreviewClass {
	GObjectClass parent_class;
	guint8* (*serialize_as) (UnityAbstractPreview* self, UnitySerializationType serialization_type, int* result_length1);
};

struct _UnityPreview {
	UnityAbstractPreview parent_instance;
	UnityPreviewPrivate * priv;
};

struct _UnityPreviewClass {
	UnityAbstractPreviewClass parent_class;
	GObject* (*create_raw) (UnityPreview* self);
};

typedef enum  {
	UNITY_LAYOUT_HINT_NONE,
	UNITY_LAYOUT_HINT_LEFT,
	UNITY_LAYOUT_HINT_RIGHT,
	UNITY_LAYOUT_HINT_TOP,
	UNITY_LAYOUT_HINT_BOTTOM
} UnityLayoutHint;

struct _UnityPreviewAction {
	GObject parent_instance;
	UnityPreviewActionPrivate * priv;
};

struct _UnityPreviewActionClass {
	GObjectClass parent_class;
};

struct _UnityInfoHint {
	GInitiallyUnowned parent_instance;
	UnityInfoHintPrivate * priv;
};

struct _UnityInfoHintClass {
	GInitiallyUnownedClass parent_class;
};

struct _UnityGenericPreview {
	UnityPreview parent_instance;
	UnityGenericPreviewPrivate * priv;
};

struct _UnityGenericPreviewClass {
	UnityPreviewClass parent_class;
};

struct _UnityApplicationPreview {
	UnityPreview parent_instance;
	UnityApplicationPreviewPrivate * priv;
};

struct _UnityApplicationPreviewClass {
	UnityPreviewClass parent_class;
};

struct _UnityMusicPreview {
	UnityPreview parent_instance;
	UnityMusicPreviewPrivate * priv;
};

struct _UnityMusicPreviewClass {
	UnityPreviewClass parent_class;
};

typedef enum  {
	UNITY_MUSIC_PREVIEW_TRACK_STATE_STOPPED,
	UNITY_MUSIC_PREVIEW_TRACK_STATE_PLAYING,
	UNITY_MUSIC_PREVIEW_TRACK_STATE_PAUSED
} UnityMusicPreviewTrackState;

struct _UnityPaymentPreview {
	UnityPreview parent_instance;
	UnityPaymentPreviewPrivate * priv;
};

struct _UnityPaymentPreviewClass {
	UnityPreviewClass parent_class;
};

typedef enum  {
	UNITY_PAYMENT_PREVIEW_TYPE_APPLICATION,
	UNITY_PAYMENT_PREVIEW_TYPE_MUSIC,
	UNITY_PAYMENT_PREVIEW_TYPE_ERROR
} UnityPaymentPreviewType;

struct _UnityMoviePreview {
	UnityPreview parent_instance;
	UnityMoviePreviewPrivate * priv;
};

struct _UnityMoviePreviewClass {
	UnityPreviewClass parent_class;
};

struct _UnitySocialPreview {
	UnityPreview parent_instance;
	UnitySocialPreviewPrivate * priv;
};

struct _UnitySocialPreviewClass {
	UnityPreviewClass parent_class;
};

struct _UnitySocialPreviewComment {
	GInitiallyUnowned parent_instance;
	UnitySocialPreviewCommentPrivate * priv;
};

struct _UnitySocialPreviewCommentClass {
	GInitiallyUnownedClass parent_class;
};

typedef enum  {
	UNITY_HANDLED_TYPE_NOT_HANDLED,
	UNITY_HANDLED_TYPE_SHOW_DASH,
	UNITY_HANDLED_TYPE_HIDE_DASH,
	UNITY_HANDLED_TYPE_GOTO_DASH_URI,
	UNITY_HANDLED_TYPE_SHOW_PREVIEW,
	UNITY_HANDLED_TYPE_PERFORM_SEARCH
} UnityHandledType;

struct _UnityActivationResponse {
	GObject parent_instance;
	UnityActivationResponsePrivate * priv;
};

struct _UnityActivationResponseClass {
	GObjectClass parent_class;
};

struct _UnityAggregatorActivation {
	GObject parent_instance;
	UnityAggregatorActivationPrivate * priv;
};

struct _UnityAggregatorActivationClass {
	GObjectClass parent_class;
};

struct _UnityFilterSet {
	GObject parent_instance;
	UnityFilterSetPrivate * priv;
};

struct _UnityFilterSetClass {
	GObjectClass parent_class;
	void (*add) (UnityFilterSet* self, UnityFilter* filter);
	UnityFilter* (*get_filter_by_id) (UnityFilterSet* self, const gchar* filter_id);
	GList* (*get_filters) (UnityFilterSet* self);
};

struct _UnityCategorySet {
	GObject parent_instance;
	UnityCategorySetPrivate * priv;
};

struct _UnityCategorySetClass {
	GObjectClass parent_class;
	void (*add) (UnityCategorySet* self, UnityCategory* category);
	GList* (*get_categories) (UnityCategorySet* self);
};

typedef enum  {
	UNITY_SCHEMA_FIELD_TYPE_OPTIONAL,
	UNITY_SCHEMA_FIELD_TYPE_REQUIRED
} UnitySchemaFieldType;

struct _UnitySchemaFieldInfo {
	gchar* name;
	gchar* schema;
	UnitySchemaFieldType type;
};

struct _UnitySchema {
	GObject parent_instance;
	UnitySchemaPrivate * priv;
};

struct _UnitySchemaClass {
	GObjectClass parent_class;
	void (*add_field) (UnitySchema* self, const gchar* name, const gchar* schema, UnitySchemaFieldType type);
	GList* (*get_fields) (UnitySchema* self);
};

typedef void (*UnityAbstractPreviewCallback) (UnityResultPreviewer* previewer, UnityAbstractPreview* preview, gpointer user_data);
struct _UnityResultPreviewer {
	GObject parent_instance;
	UnityResultPreviewerPrivate * priv;
	UnityScopeResult result;
	UnitySearchMetadata* metadata;
	UnityCancellable* cancellable;
};

struct _UnityResultPreviewerClass {
	GObjectClass parent_class;
	UnityAbstractPreview* (*run) (UnityResultPreviewer* self);
	void (*run_async) (UnityResultPreviewer* self, UnityAbstractPreviewCallback async_callback, gpointer async_callback_target);
};

struct _UnitySearchMetadata {
	GObject parent_instance;
	UnitySearchMetadataPrivate * priv;
};

struct _UnitySearchMetadataClass {
	GObjectClass parent_class;
};

struct _UnityGeoCoordinate {
	GObject parent_instance;
	UnityGeoCoordinatePrivate * priv;
	gdouble latitude;
	gdouble longitude;
	gdouble altitude;
};

struct _UnityGeoCoordinateClass {
	GObjectClass parent_class;
};

struct _UnityAbstractScope {
	GObject parent_instance;
	UnityAbstractScopePrivate * priv;
};

struct _UnityAbstractScopeClass {
	GObjectClass parent_class;
	UnityScopeSearchBase* (*create_search_for_query) (UnityAbstractScope* self, UnitySearchContext* search_context);
	UnityResultPreviewer* (*create_previewer) (UnityAbstractScope* self, UnityScopeResult* _result_, UnitySearchMetadata* metadata);
	UnityCategorySet* (*get_categories) (UnityAbstractScope* self);
	UnityFilterSet* (*get_filters) (UnityAbstractScope* self);
	UnitySchema* (*get_schema) (UnityAbstractScope* self);
	gchar* (*get_search_hint) (UnityAbstractScope* self);
	gchar* (*get_group_name) (UnityAbstractScope* self);
	gchar* (*get_unique_name) (UnityAbstractScope* self);
	UnityActivationResponse* (*activate) (UnityAbstractScope* self, UnityScopeResult* _result_, UnitySearchMetadata* metadata, const gchar* action_id);
	gchar* (*normalize_search_query) (UnityAbstractScope* self, const gchar* search_query);
};

struct _UnityScopeDBusConnector {
	GObject parent_instance;
	UnityScopeDBusConnectorPrivate * priv;
};

struct _UnityScopeDBusConnectorClass {
	GObjectClass parent_class;
};

struct _UnityInternalScopeDBusImplIface {
	GTypeInterface parent_iface;
	void (*export) (UnityInternalScopeDBusImpl* self, GError** error);
	void (*unexport) (UnityInternalScopeDBusImpl* self);
	void (*queue_property_notification) (UnityInternalScopeDBusImpl* self, const gchar* prop_name, GVariant* prop_value);
	DeeSerializableModel* (*get_categories_model) (UnityInternalScopeDBusImpl* self);
	void (*set_categories_model) (UnityInternalScopeDBusImpl* self, DeeSerializableModel* value);
	DeeSerializableModel* (*get_filters_model) (UnityInternalScopeDBusImpl* self);
	void (*set_filters_model) (UnityInternalScopeDBusImpl* self, DeeSerializableModel* value);
};

struct _UnityInternalDefaultScopeDBusImpl {
	GObject parent_instance;
	UnityInternalDefaultScopeDBusImplPrivate * priv;
};

struct _UnityInternalDefaultScopeDBusImplClass {
	GObjectClass parent_class;
};

struct _UnityInternalOwnedName {
	gint ref_count;
	guint bus_name_own_handle;
};

struct _UnityInternalScopeDBusNameManager {
	GObject parent_instance;
	UnityInternalScopeDBusNameManagerPrivate * priv;
};

struct _UnityInternalScopeDBusNameManagerClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_INTERNAL_CHANNEL_STATE_IDLE,
	UNITY_INTERNAL_CHANNEL_STATE_SEARCH_ACTIVE
} UnityInternalChannelState;

struct _UnityInternalScopeChannel {
	GObject parent_instance;
	UnityInternalScopeChannelPrivate * priv;
	UnityInternalUtilsAsyncMutex* model_lock;
	DeeSharedModel* transfer_model;
	DeeSerializableModel* backend_model;
	UnityFilterSet* filters;
	UnityProtocolChannelType channel_type;
	gchar* id;
	UnityScopeSearchBase* last_search;
	guint last_search_tag;
};

struct _UnityInternalScopeChannelClass {
	GObjectClass parent_class;
};

struct _UnityDeprecatedScopeBase {
	GObject parent_instance;
	UnityDeprecatedScopeBasePrivate * priv;
	UnityCategorySet* _categories;
	UnityFilterSet* _filters;
};

struct _UnityDeprecatedScopeBaseClass {
	GObjectClass parent_class;
	GObject* (*create_impl) (UnityDeprecatedScopeBase* self);
};

struct _UnityDeprecatedScope {
	UnityDeprecatedScopeBase parent_instance;
	UnityDeprecatedScopePrivate * priv;
};

struct _UnityDeprecatedScopeClass {
	UnityDeprecatedScopeBaseClass parent_class;
	void (*preview_result) (UnityDeprecatedScope* self, UnityScopeResult* _result_, GAsyncReadyCallback _callback_, gpointer _user_data_);
	UnityPreview* (*preview_result_finish) (UnityDeprecatedScope* self, GAsyncResult* _res_);
	void (*activate_result) (UnityDeprecatedScope* self, UnityScopeResult* _result_, GAsyncReadyCallback _callback_, gpointer _user_data_);
	UnityActivationResponse* (*activate_result_finish) (UnityDeprecatedScope* self, GAsyncResult* _res_);
};

struct _UnityInternalDeprecatedScopeDBusImplIface {
	GTypeInterface parent_iface;
	void (*set_categories) (UnityInternalDeprecatedScopeDBusImpl* self, GList* categories);
	void (*set_filters) (UnityInternalDeprecatedScopeDBusImpl* self, GList* filters);
};

struct _UnityInternalDeprecatedScopeImpl {
	GObject parent_instance;
	UnityInternalDeprecatedScopeImplPrivate * priv;
};

struct _UnityInternalDeprecatedScopeImplClass {
	GObjectClass parent_class;
};

struct _UnityAggregatorScope {
	UnityDeprecatedScopeBase parent_instance;
	UnityAggregatorScopePrivate * priv;
};

struct _UnityAggregatorScopeClass {
	UnityDeprecatedScopeBaseClass parent_class;
	gint (*category_index_for_scope_id) (UnityAggregatorScope* self, const gchar* scope_id);
	void (*search) (UnityAggregatorScope* self, UnityAggregatedScopeSearch* scope_search, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*search_finish) (UnityAggregatorScope* self, GAsyncResult* _res_);
	void (*activate) (UnityAggregatorScope* self, UnityAggregatorActivation* activation, GAsyncReadyCallback _callback_, gpointer _user_data_);
	UnityActivationResponse* (*activate_finish) (UnityAggregatorScope* self, GAsyncResult* _res_);
};

typedef enum  {
	UNITY_AGGREGATOR_SCOPE_SORT_FLAGS_ASCENDING,
	UNITY_AGGREGATOR_SCOPE_SORT_FLAGS_DESCENDING,
	UNITY_AGGREGATOR_SCOPE_SORT_FLAGS_CASE_INSENSITIVE = 1 << 10
} UnityAggregatorScopeSortFlags;

typedef enum  {
	UNITY_AGGREGATOR_SCOPE_MERGE_MODE_CATEGORY_ID,
	UNITY_AGGREGATOR_SCOPE_MERGE_MODE_OWNER_SCOPE
} UnityAggregatorScopeMergeMode;

struct _UnityInternalAggregatorScopeImpl {
	GObject parent_instance;
	UnityInternalAggregatorScopeImplPrivate * priv;
};

struct _UnityInternalAggregatorScopeImplClass {
	GObjectClass parent_class;
};

struct _UnityMasterScope {
	UnityAggregatorScope parent_instance;
	UnityMasterScopePrivate * priv;
};

struct _UnityMasterScopeClass {
	UnityAggregatorScopeClass parent_class;
};

struct _UnitySimpleScope {
	UnityAbstractScope parent_instance;
	UnitySimpleScopePrivate * priv;
};

struct _UnitySimpleScopeClass {
	UnityAbstractScopeClass parent_class;
};

typedef void (*UnitySimpleScopeSearchRunFunc) (UnityScopeSearchBase* search, gpointer user_data);
typedef void (*UnitySimpleScopeSearchRunAsyncFunc) (UnityScopeSearchBase* search, UnityScopeSearchBaseCallback cb, gpointer cb_target, gpointer user_data);
typedef UnityActivationResponse* (*UnitySimpleScopeActivateFunc) (UnityScopeResult* _result_, UnitySearchMetadata* metadata, const gchar* action_id, gpointer user_data);
typedef UnityAbstractPreview* (*UnitySimpleScopePreviewRunFunc) (UnityResultPreviewer* previewer, gpointer user_data);
typedef void (*UnitySimpleScopePreviewRunAsyncFunc) (UnityResultPreviewer* previewer, UnityAbstractPreviewCallback cb, gpointer cb_target, gpointer user_data);
typedef GList* (*UnityLoadScopesFunction) (GError** error);
typedef gint (*UnityGetVersionFunction) ();
struct _UnityScopeLoader {
	GObject parent_instance;
	UnityScopeLoaderPrivate * priv;
};

struct _UnityScopeLoaderClass {
	GObjectClass parent_class;
	GList* (*get_scopes) (UnityScopeLoader* self, const gchar* module_name, const gchar* module_type, GError** error);
	void (*export_scopes) (UnityScopeLoader* self, GList* scopes, GError** error);
};

typedef enum  {
	UNITY_INTERNAL_CHANNEL_UPDATE_FLAGS_NONE = 0,
	UNITY_INTERNAL_CHANNEL_UPDATE_FLAGS_DEFAULT = 1 << 0,
	UNITY_INTERNAL_CHANNEL_UPDATE_FLAGS_GLOBAL = 1 << 1
} UnityInternalChannelUpdateFlags;

struct _UnityInternalScopeTracker {
	GObject parent_instance;
	UnityInternalScopeTrackerPrivate * priv;
};

struct _UnityInternalScopeTrackerClass {
	GObjectClass parent_class;
};

struct _UnityTrackMetadata {
	GObject parent_instance;
	UnityTrackMetadataPrivate * priv;
};

struct _UnityTrackMetadataClass {
	GObjectClass parent_class;
};

struct _UnityPlaylist {
	GObject parent_instance;
	UnityPlaylistPrivate * priv;
};

struct _UnityPlaylistClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_PLAYBACK_STATE_PLAYING,
	UNITY_PLAYBACK_STATE_PAUSED
} UnityPlaybackState;

struct _UnityMusicPlayer {
	GObject parent_instance;
	UnityMusicPlayerPrivate * priv;
};

struct _UnityMusicPlayerClass {
	GObjectClass parent_class;
};

struct _UnityMPRISGateway {
	GObject parent_instance;
	UnityMPRISGatewayPrivate * priv;
};

struct _UnityMPRISGatewayClass {
	GObjectClass parent_class;
};

struct _UnitySpecificItemManager {
	GObject parent_instance;
	UnitySpecificItemManagerPrivate * priv;
	char* _player_specific_object_path;
	char* _track_specific_object_path;
};

struct _UnitySpecificItemManagerClass {
	GObjectClass parent_class;
};

struct _UnityPropertyUpdateManager {
	GObject parent_instance;
	UnityPropertyUpdateManagerPrivate * priv;
};

struct _UnityPropertyUpdateManagerClass {
	GObjectClass parent_class;
};

struct _UnityBlacklistManager {
	GObject parent_instance;
	UnityBlacklistManagerPrivate * priv;
};

struct _UnityBlacklistManagerClass {
	GObjectClass parent_class;
};

struct _UnitySoundServiceInterfaceIface {
	GTypeInterface parent_iface;
	void (*EnableTrackSpecificItems) (UnitySoundServiceInterface* self, const char* object_path, const gchar* desktop_id, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*EnableTrackSpecificItems_finish) (UnitySoundServiceInterface* self, GAsyncResult* _res_, GError** error);
	void (*EnablePlayerSpecificItems) (UnitySoundServiceInterface* self, const char* object_path, const gchar* desktop_id, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*EnablePlayerSpecificItems_finish) (UnitySoundServiceInterface* self, GAsyncResult* _res_, GError** error);
};

struct _UnityMprisRoot {
	GObject parent_instance;
	UnityMprisRootPrivate * priv;
};

struct _UnityMprisRootClass {
	GObjectClass parent_class;
};

struct _UnityMprisPlayer {
	GObject parent_instance;
	UnityMprisPlayerPrivate * priv;
};

struct _UnityMprisPlayerClass {
	GObjectClass parent_class;
};

struct _UnityPlaylistDetails {
	char* id;
	gchar* name;
	gchar* icon_name;
};

struct _UnityActivePlaylistContainer {
	gboolean valid;
	UnityPlaylistDetails details;
};

struct _UnityMprisPlaylists {
	GObject parent_instance;
	UnityMprisPlaylistsPrivate * priv;
};

struct _UnityMprisPlaylistsClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_INTERNAL_CATEGORY_COLUMN_ID,
	UNITY_INTERNAL_CATEGORY_COLUMN_DISPLAY_NAME,
	UNITY_INTERNAL_CATEGORY_COLUMN_ICON_HINT,
	UNITY_INTERNAL_CATEGORY_COLUMN_RENDERER_NAME,
	UNITY_INTERNAL_CATEGORY_COLUMN_HINTS,
	UNITY_INTERNAL_CATEGORY_COLUMN_N_COLUMNS
} UnityInternalCategoryColumn;

typedef enum  {
	UNITY_INTERNAL_FILTER_COLUMN_ID,
	UNITY_INTERNAL_FILTER_COLUMN_DISPLAY_NAME,
	UNITY_INTERNAL_FILTER_COLUMN_ICON_HINT,
	UNITY_INTERNAL_FILTER_COLUMN_RENDERER_NAME,
	UNITY_INTERNAL_FILTER_COLUMN_RENDERER_STATE,
	UNITY_INTERNAL_FILTER_COLUMN_VISIBLE,
	UNITY_INTERNAL_FILTER_COLUMN_COLLAPSED,
	UNITY_INTERNAL_FILTER_COLUMN_FILTERING,
	UNITY_INTERNAL_FILTER_COLUMN_N_COLUMNS
} UnityInternalFilterColumn;

typedef enum  {
	UNITY_INTERNAL_RESULT_COLUMN_URI,
	UNITY_INTERNAL_RESULT_COLUMN_ICON_HINT,
	UNITY_INTERNAL_RESULT_COLUMN_CATEGORY,
	UNITY_INTERNAL_RESULT_COLUMN_RESULT_TYPE,
	UNITY_INTERNAL_RESULT_COLUMN_MIMETYPE,
	UNITY_INTERNAL_RESULT_COLUMN_TITLE,
	UNITY_INTERNAL_RESULT_COLUMN_COMMENT,
	UNITY_INTERNAL_RESULT_COLUMN_DND_URI,
	UNITY_INTERNAL_RESULT_COLUMN_METADATA,
	UNITY_INTERNAL_RESULT_COLUMN_N_COLUMNS
} UnityInternalResultColumn;

struct _UnityInternalUtilsDelegateWrapper {
	GSourceFunc callback;
	gpointer callback_target;
	GDestroyNotify callback_target_destroy_notify;
};

struct _UnityInternalUtilsAsyncOnce {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityInternalUtilsAsyncOncePrivate * priv;
};

struct _UnityInternalUtilsAsyncOnceClass {
	GTypeClass parent_class;
	void (*finalize) (UnityInternalUtilsAsyncOnce *self);
};

struct _UnityInternalUtilsAsyncMutex {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityInternalUtilsAsyncMutexPrivate * priv;
};

struct _UnityInternalUtilsAsyncMutexClass {
	GTypeClass parent_class;
	void (*finalize) (UnityInternalUtilsAsyncMutex *self);
};

typedef gboolean (*UnityInternalUtilsDiffResultSetCompareFunc) (gint index_a, gint index_b, gpointer user_data);
struct _UnityInternalUtilsDiffContext {
	gint x_length;
	gint y_length;
	gint* real_diag;
	gint real_diag_length1;
	gint _real_diag_size_;
	gint* f_diag;
	gint* b_diag;
	gint max_cost;
	guint8* real_changes;
	gint real_changes_length1;
	gint _real_changes_size_;
	guint8* x_changes;
	guint8* y_changes;
};

struct _UnityInternalUtilsDiffPartition {
	gint x_mid;
	gint y_mid;
	gboolean lo_minimal;
	gboolean hi_minimal;
};

struct _UnityInternalUtilsDiffChange {
	gint x_offset;
	gint y_offset;
	gint inserted;
	gint deleted;
};


void unity_string_array_wrapper_free (UnityStringArrayWrapper * self);
void unity_string_array_wrapper_take_strings (UnityStringArrayWrapper* self,
                                              gchar** str_arr,
                                              int str_arr_length1);
UnityStringArrayWrapper* unity_string_array_wrapper_new (void);
GType unity_app_info_manager_get_type (void) G_GNUC_CONST;
UnityAppInfoManager* unity_app_info_manager_get_instance (void) G_GNUC_DEPRECATED;
UnityAppInfoManager* unity_app_info_manager_get_default (void);
GAppInfo* unity_app_info_manager_lookup (UnityAppInfoManager* self,
                                         const gchar* id);
gchar** unity_app_info_manager_get_categories (UnityAppInfoManager* self,
                                               const gchar* id,
                                               int* result_length1);
gchar** unity_app_info_manager_get_keywords (UnityAppInfoManager* self,
                                             const gchar* id,
                                             int* result_length1);
gchar* unity_app_info_manager_get_path (UnityAppInfoManager* self,
                                        const gchar* id);
void unity_app_info_manager_lookup_async (UnityAppInfoManager* self,
                                          const gchar* id,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
GAppInfo* unity_app_info_manager_lookup_finish (UnityAppInfoManager* self,
                                                GAsyncResult* _res_,
                                                GError** error);
void unity_app_info_manager_clear (UnityAppInfoManager* self);
GType unity_category_type_get_type (void) G_GNUC_CONST;
GType unity_icon_size_hint_get_type (void) G_GNUC_CONST;
GType unity_annotated_icon_get_type (void) G_GNUC_CONST;
void unity_annotated_icon_set_colorize_rgba (UnityAnnotatedIcon* self,
                                             gdouble r,
                                             gdouble g,
                                             gdouble b,
                                             gdouble a);
UnityAnnotatedIcon* unity_annotated_icon_new (GIcon* base_icon);
UnityAnnotatedIcon* unity_annotated_icon_construct (GType object_type,
                                                    GIcon* base_icon);
gchar* unity_annotated_icon_to_string (UnityAnnotatedIcon* self);
GIcon* unity_annotated_icon_get_icon (UnityAnnotatedIcon* self);
void unity_annotated_icon_set_icon (UnityAnnotatedIcon* self,
                                    GIcon* value);
const gchar* unity_annotated_icon_get_ribbon (UnityAnnotatedIcon* self);
void unity_annotated_icon_set_ribbon (UnityAnnotatedIcon* self,
                                      const gchar* value);
UnityCategoryType unity_annotated_icon_get_category (UnityAnnotatedIcon* self);
void unity_annotated_icon_set_category (UnityAnnotatedIcon* self,
                                        UnityCategoryType value);
UnityIconSizeHint unity_annotated_icon_get_size_hint (UnityAnnotatedIcon* self);
void unity_annotated_icon_set_size_hint (UnityAnnotatedIcon* self,
                                         UnityIconSizeHint value);
GType unity_inspector_get_type (void) G_GNUC_CONST;
UnityInspector* unity_inspector_get_default (void);
gboolean unity_inspector_get_unity_running (UnityInspector* self);
const gchar* unity_inspector_get_unity_bus_name (UnityInspector* self);
void unity_internal_io_read_stream_async (GInputStream* input,
                                          gint io_priority,
                                          GCancellable* cancellable,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
void unity_internal_io_read_stream_finish (GAsyncResult* _res_,
                                           guint8** data,
                                           int* data_length1,
                                           gsize* size,
                                           GError** error);
void unity_internal_io_open_from_dirs (const gchar* filename,
                                       gchar** dirs,
                                       int dirs_length1,
                                       GAsyncReadyCallback _callback_,
                                       gpointer _user_data_);
GFileInputStream* unity_internal_io_open_from_dirs_finish (GAsyncResult* _res_,
                                                           GError** error);
void unity_internal_io_open_from_data_dirs (const gchar* filename,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_);
GFileInputStream* unity_internal_io_open_from_data_dirs_finish (GAsyncResult* _res_,
                                                                GError** error);
extern gchar** unity_internal_io_system_data_dirs;
extern gint unity_internal_io_system_data_dirs_length1;
gchar** unity_internal_io_get_system_data_dirs (int* result_length1);
#define UNITY_APP_PREFIX "application://"
#define UNITY_FILE_PREFIX "file://"
GType unity_launcher_entry_dbus_impl_get_type (void) G_GNUC_CONST;
guint unity_launcher_entry_dbus_impl_register_object (void* object,
                                                      GDBusConnection* connection,
                                                      const gchar* path,
                                                      GError** error);
GType unity_launcher_entry_get_type (void) G_GNUC_CONST;
UnityLauncherEntryDBusImpl* unity_launcher_entry_dbus_impl_new (GDBusConnection* conn,
                                                                const char* object_path,
                                                                UnityLauncherEntry* owner);
UnityLauncherEntryDBusImpl* unity_launcher_entry_dbus_impl_construct (GType object_type,
                                                                      GDBusConnection* conn,
                                                                      const char* object_path,
                                                                      UnityLauncherEntry* owner);
GHashTable* unity_launcher_entry_dbus_impl_query (UnityLauncherEntryDBusImpl* self);
UnityLauncherEntry* unity_launcher_entry_get_for_app_uri (const gchar* app_uri);
UnityLauncherEntry* unity_launcher_entry_get_for_desktop_id (const gchar* desktop_id);
UnityLauncherEntry* unity_launcher_entry_get_for_desktop_file (const gchar* desktop_file);
const gchar* unity_launcher_entry_get_app_uri (UnityLauncherEntry* self);
void unity_launcher_entry_set_app_uri (UnityLauncherEntry* self,
                                       const gchar* value);
gint64 unity_launcher_entry_get_count (UnityLauncherEntry* self);
void unity_launcher_entry_set_count (UnityLauncherEntry* self,
                                     gint64 value);
gboolean unity_launcher_entry_get_count_visible (UnityLauncherEntry* self);
void unity_launcher_entry_set_count_visible (UnityLauncherEntry* self,
                                             gboolean value);
gdouble unity_launcher_entry_get_progress (UnityLauncherEntry* self);
void unity_launcher_entry_set_progress (UnityLauncherEntry* self,
                                        gdouble value);
gboolean unity_launcher_entry_get_progress_visible (UnityLauncherEntry* self);
void unity_launcher_entry_set_progress_visible (UnityLauncherEntry* self,
                                                gboolean value);
gboolean unity_launcher_entry_get_urgent (UnityLauncherEntry* self);
void unity_launcher_entry_set_urgent (UnityLauncherEntry* self,
                                      gboolean value);
DbusmenuMenuitem* unity_launcher_entry_get_quicklist (UnityLauncherEntry* self);
void unity_launcher_entry_set_quicklist (UnityLauncherEntry* self,
                                         DbusmenuMenuitem* value);
GHashTable* unity_collect_launcher_entry_properties (UnityLauncherEntry* l);
GType unity_launcher_favorites_get_type (void) G_GNUC_CONST;
UnityLauncherFavorites* unity_launcher_favorites_get_default (void);
gboolean unity_launcher_favorites_has_app_info (UnityLauncherFavorites* self,
                                                GAppInfo* appinfo);
gboolean unity_launcher_favorites_has_app_id (UnityLauncherFavorites* self,
                                              const gchar* app_id);
GAppInfo* unity_launcher_favorites_lookup (UnityLauncherFavorites* self,
                                           const gchar* app_id);
gchar** unity_launcher_favorites_enumerate_ids (UnityLauncherFavorites* self,
                                                int* result_length1);
GAppInfo** unity_launcher_favorites_enumerate_app_infos (UnityLauncherFavorites* self,
                                                         int* result_length1);
GType unity_category_renderer_get_type (void) G_GNUC_CONST;
UnityCategoryRenderer unity_category_renderer_from_string (const gchar* renderer_name);
const gchar* unity_category_renderer_to_string (UnityCategoryRenderer val);
GType unity_category_content_type_get_type (void) G_GNUC_CONST;
UnityCategoryContentType unity_category_content_type_from_string (const gchar* content_type);
const gchar* unity_category_content_type_to_string (UnityCategoryContentType val);
GType unity_metadata_provider_get_type (void) G_GNUC_CONST;
void unity_metadata_provider_update_hints (UnityMetadataProvider* self,
                                           GHashTable* hints);
UnityMetadataProvider* unity_metadata_provider_construct (GType object_type);
GType unity_progress_source_provider_get_type (void) G_GNUC_CONST;
UnityProgressSourceProvider* unity_progress_source_provider_new (const gchar* dbus_name,
                                                                 const gchar* dbus_path);
UnityProgressSourceProvider* unity_progress_source_provider_construct (GType object_type,
                                                                       const gchar* dbus_name,
                                                                       const gchar* dbus_path);
const gchar* unity_progress_source_provider_get_dbus_name (UnityProgressSourceProvider* self);
const gchar* unity_progress_source_provider_get_dbus_path (UnityProgressSourceProvider* self);
GType unity_category_get_type (void) G_GNUC_CONST;
UnityCategory* unity_category_new (const gchar* id,
                                   const gchar* name,
                                   GIcon* icon_hint,
                                   UnityCategoryRenderer renderer);
UnityCategory* unity_category_construct (GType object_type,
                                         const gchar* id,
                                         const gchar* name,
                                         GIcon* icon_hint,
                                         UnityCategoryRenderer renderer);
void unity_category_add_metadata_provider (UnityCategory* self,
                                           UnityMetadataProvider* provider);
GHashTable* unity_category_get_hints (UnityCategory* self);
const gchar* unity_category_get_id (UnityCategory* self);
const gchar* unity_category_get_name (UnityCategory* self);
GIcon* unity_category_get_icon_hint (UnityCategory* self);
UnityCategoryRenderer unity_category_get_default_renderer (UnityCategory* self);
UnityCategoryContentType unity_category_get_content_type (UnityCategory* self);
void unity_category_set_content_type (UnityCategory* self,
                                      UnityCategoryContentType value);
const gchar* unity_category_get_renderer_hint (UnityCategory* self);
void unity_category_set_renderer_hint (UnityCategory* self,
                                       const gchar* value);
const gchar* unity_category_get_renderer (UnityCategory* self);
GType unity_filter_renderer_get_type (void) G_GNUC_CONST;
const gchar* unity_filter_renderer_to_string (UnityFilterRenderer renderer);
UnityFilterRenderer unity_filter_renderer_from_string (const gchar* renderer_name);
GType unity_filter_get_type (void) G_GNUC_CONST;
void unity_filter_set_model_and_iter (UnityFilter* self,
                                      DeeModel* model,
                                      DeeModelIter* iter);
GHashTable* unity_filter_get_hints (UnityFilter* self);
void unity_filter_update (UnityFilter* self,
                          GVariant* properties);
UnityFilter* unity_filter_for_filter_model_row (DeeModel* model,
                                                DeeModelIter* iter);
UnityFilter* unity_filter_construct (GType object_type);
const gchar* unity_filter_get_id (UnityFilter* self);
const gchar* unity_filter_get_display_name (UnityFilter* self);
void unity_filter_set_display_name (UnityFilter* self,
                                    const gchar* value);
GIcon* unity_filter_get_icon_hint (UnityFilter* self);
UnityFilterRenderer unity_filter_get_renderer (UnityFilter* self);
gboolean unity_filter_get_visible (UnityFilter* self);
void unity_filter_set_visible (UnityFilter* self,
                               gboolean value);
gboolean unity_filter_get_collapsed (UnityFilter* self);
void unity_filter_set_collapsed (UnityFilter* self,
                                 gboolean value);
gboolean unity_filter_get_filtering (UnityFilter* self);
void unity_filter_set_filtering (UnityFilter* self,
                                 gboolean value);
GType unity_filter_option_get_type (void) G_GNUC_CONST;
UnityFilterOption* unity_filter_option_new (const gchar* id,
                                            const gchar* display_name,
                                            GIcon* icon_hint,
                                            gboolean active);
UnityFilterOption* unity_filter_option_construct (GType object_type,
                                                  const gchar* id,
                                                  const gchar* display_name,
                                                  GIcon* icon_hint,
                                                  gboolean active);
const gchar* unity_filter_option_get_id (UnityFilterOption* self);
const gchar* unity_filter_option_get_display_name (UnityFilterOption* self);
GIcon* unity_filter_option_get_icon_hint (UnityFilterOption* self);
gboolean unity_filter_option_get_active (UnityFilterOption* self);
void unity_filter_option_set_active (UnityFilterOption* self,
                                     gboolean value);
GType unity_options_filter_get_type (void) G_GNUC_CONST;
GType unity_options_filter_sort_type_get_type (void) G_GNUC_CONST;
UnityFilterOption* unity_options_filter_add_option (UnityOptionsFilter* self,
                                                    const gchar* id,
                                                    const gchar* display_name,
                                                    GIcon* icon_hint);
UnityFilterOption* unity_options_filter_get_option (UnityOptionsFilter* self,
                                                    const gchar* id);
gboolean unity_options_filter_remove_option (UnityOptionsFilter* self,
                                             const gchar* id);
void unity_options_filter_load_or_update_options (UnityOptionsFilter* self,
                                                  GVariant* array);
void unity_options_filter_find_and_update_option (UnityOptionsFilter* self,
                                                  const gchar* id,
                                                  const gchar* name,
                                                  const gchar* icon_hint_s,
                                                  gboolean active);
UnityOptionsFilter* unity_options_filter_new (void);
UnityOptionsFilter* unity_options_filter_construct (GType object_type);
UnityOptionsFilterSortType unity_options_filter_get_sort_type (UnityOptionsFilter* self);
void unity_options_filter_set_sort_type (UnityOptionsFilter* self,
                                         UnityOptionsFilterSortType value);
gboolean unity_options_filter_get_show_all_button (UnityOptionsFilter* self);
void unity_options_filter_set_show_all_button (UnityOptionsFilter* self,
                                               gboolean value);
GType unity_radio_option_filter_get_type (void) G_GNUC_CONST;
UnityRadioOptionFilter* unity_radio_option_filter_new (const gchar* id,
                                                       const gchar* display_name,
                                                       GIcon* icon_hint,
                                                       gboolean collapsed);
UnityRadioOptionFilter* unity_radio_option_filter_construct (GType object_type,
                                                             const gchar* id,
                                                             const gchar* display_name,
                                                             GIcon* icon_hint,
                                                             gboolean collapsed);
UnityFilterOption* unity_radio_option_filter_get_active_option (UnityRadioOptionFilter* self);
GType unity_check_option_filter_get_type (void) G_GNUC_CONST;
UnityCheckOptionFilter* unity_check_option_filter_new (const gchar* id,
                                                       const gchar* display_name,
                                                       GIcon* icon_hint,
                                                       gboolean collapsed);
UnityCheckOptionFilter* unity_check_option_filter_construct (GType object_type,
                                                             const gchar* id,
                                                             const gchar* display_name,
                                                             GIcon* icon_hint,
                                                             gboolean collapsed);
GType unity_check_option_filter_compact_get_type (void) G_GNUC_CONST;
UnityCheckOptionFilterCompact* unity_check_option_filter_compact_new (const gchar* id,
                                                                      const gchar* display_name,
                                                                      GIcon* icon_hint,
                                                                      gboolean collapsed);
UnityCheckOptionFilterCompact* unity_check_option_filter_compact_construct (GType object_type,
                                                                            const gchar* id,
                                                                            const gchar* display_name,
                                                                            GIcon* icon_hint,
                                                                            gboolean collapsed);
GType unity_ratings_filter_get_type (void) G_GNUC_CONST;
UnityRatingsFilter* unity_ratings_filter_new (const gchar* id,
                                              const gchar* display_name,
                                              GIcon* icon_hint,
                                              gboolean collapsed);
UnityRatingsFilter* unity_ratings_filter_construct (GType object_type,
                                                    const gchar* id,
                                                    const gchar* display_name,
                                                    GIcon* icon_hint,
                                                    gboolean collapsed);
gfloat unity_ratings_filter_get_rating (UnityRatingsFilter* self);
void unity_ratings_filter_set_rating (UnityRatingsFilter* self,
                                      gfloat value);
GType unity_multi_range_filter_get_type (void) G_GNUC_CONST;
UnityMultiRangeFilter* unity_multi_range_filter_new (const gchar* id,
                                                     const gchar* display_name,
                                                     GIcon* icon_hint,
                                                     gboolean collapsed);
UnityMultiRangeFilter* unity_multi_range_filter_construct (GType object_type,
                                                           const gchar* id,
                                                           const gchar* display_name,
                                                           GIcon* icon_hint,
                                                           gboolean collapsed);
UnityFilterOption* unity_multi_range_filter_get_first_active (UnityMultiRangeFilter* self);
UnityFilterOption* unity_multi_range_filter_get_last_active (UnityMultiRangeFilter* self);
GType unity_preferences_manager_get_type (void) G_GNUC_CONST;
GType unity_preferences_manager_remote_content_get_type (void) G_GNUC_CONST;
UnityPreferencesManager* unity_preferences_manager_get_default (void);
UnityPreferencesManagerRemoteContent unity_preferences_manager_get_remote_content_search (UnityPreferencesManager* self);
void unity_preferences_manager_set_remote_content_search (UnityPreferencesManager* self,
                                                          UnityPreferencesManagerRemoteContent value);
gchar** unity_preferences_manager_get_always_search (UnityPreferencesManager* self,
                                                     int* result_length1);
void unity_preferences_manager_set_always_search (UnityPreferencesManager* self,
                                                  gchar** value,
                                                  int value_length1);
gchar** unity_preferences_manager_get_home_lens_priority (UnityPreferencesManager* self,
                                                          int* result_length1);
void unity_preferences_manager_set_home_lens_priority (UnityPreferencesManager* self,
                                                       gchar** value,
                                                       int value_length1);
gchar** unity_preferences_manager_get_home_lens_default_view (UnityPreferencesManager* self,
                                                              int* result_length1);
void unity_preferences_manager_set_home_lens_default_view (UnityPreferencesManager* self,
                                                           gchar** value,
                                                           int value_length1);
gchar** unity_preferences_manager_get_disabled_scopes (UnityPreferencesManager* self,
                                                       int* result_length1);
void unity_preferences_manager_set_disabled_scopes (UnityPreferencesManager* self,
                                                    gchar** value,
                                                    int value_length1);
GType unity_internal_merge_strategy_get_type (void) G_GNUC_CONST;
DeeModelIter* unity_internal_merge_strategy_merge_result (UnityInternalMergeStrategy* self,
                                                          const gchar* source_scope_id,
                                                          DeeModel* target,
                                                          GVariant** row,
                                                          int row_length1);
GType unity_result_set_get_type (void) G_GNUC_CONST;
GType unity_scope_result_get_type (void) G_GNUC_CONST;
GType unity_result_type_get_type (void) G_GNUC_CONST;
UnityScopeResult* unity_scope_result_dup (const UnityScopeResult* self);
void unity_scope_result_free (UnityScopeResult* self);
void unity_scope_result_copy (const UnityScopeResult* self,
                              UnityScopeResult* dest);
void unity_scope_result_destroy (UnityScopeResult* self);
GType unity_internal_dee_result_set_get_type (void) G_GNUC_CONST;
UnityInternalDeeResultSet* unity_internal_dee_result_set_new (void);
UnityInternalDeeResultSet* unity_internal_dee_result_set_construct (GType object_type);
UnityInternalDeeResultSet* unity_internal_dee_result_set_new_with_model (DeeSerializableModel* model);
UnityInternalDeeResultSet* unity_internal_dee_result_set_construct_with_model (GType object_type,
                                                                               DeeSerializableModel* model);
DeeSerializableModel* unity_internal_dee_result_set_get_results_model (UnityInternalDeeResultSet* self);
void unity_internal_dee_result_set_set_results_model (UnityInternalDeeResultSet* self,
                                                      DeeSerializableModel* value);
DeeSerializableModel* unity_internal_dee_result_set_get_flush_model (UnityInternalDeeResultSet* self);
void unity_internal_dee_result_set_set_flush_model (UnityInternalDeeResultSet* self,
                                                    DeeSerializableModel* value);
GType unity_internal_diff_model_get_type (void) G_GNUC_CONST;
UnityInternalDiffModel* unity_internal_diff_model_new (DeePeer* peer,
                                                       DeeModel* target);
UnityInternalDiffModel* unity_internal_diff_model_construct (GType object_type,
                                                             DeePeer* peer,
                                                             DeeModel* target);
void unity_internal_diff_model_commit_changes (UnityInternalDiffModel* self);
DeeModel* unity_internal_diff_model_get_target_model (UnityInternalDiffModel* self);
void unity_internal_diff_model_set_target_model (UnityInternalDiffModel* self,
                                                 DeeModel* value);
GType unity_cancellable_get_type (void) G_GNUC_CONST;
GType unity_internal_glib_cancellable_get_type (void) G_GNUC_CONST;
UnityInternalGLibCancellable* unity_internal_glib_cancellable_new (void);
UnityInternalGLibCancellable* unity_internal_glib_cancellable_construct (GType object_type);
GType unity_scope_search_base_get_type (void) G_GNUC_CONST;
GType unity_search_context_get_type (void) G_GNUC_CONST;
GType unity_search_type_get_type (void) G_GNUC_CONST;
GType unity_filter_set_get_type (void) G_GNUC_CONST;
GType unity_search_metadata_get_type (void) G_GNUC_CONST;
UnitySearchContext* unity_search_context_dup (const UnitySearchContext* self);
void unity_search_context_free (UnitySearchContext* self);
void unity_search_context_copy (const UnitySearchContext* self,
                                UnitySearchContext* dest);
void unity_search_context_destroy (UnitySearchContext* self);
GType unity_deprecated_scope_search_get_type (void) G_GNUC_CONST;
GType unity_deprecated_scope_base_get_type (void) G_GNUC_CONST;
GType unity_deprecated_scope_get_type (void) G_GNUC_CONST;
UnityDeprecatedScopeSearch* unity_deprecated_scope_search_new (UnityDeprecatedScope* owner,
                                                               const gchar* channel_id,
                                                               GHashTable* hints,
                                                               DeeSerializableModel* results_model);
UnityDeprecatedScopeSearch* unity_deprecated_scope_search_construct (GType object_type,
                                                                     UnityDeprecatedScope* owner,
                                                                     const gchar* channel_id,
                                                                     GHashTable* hints,
                                                                     DeeSerializableModel* results_model);
void unity_deprecated_scope_search_set_reply_hint (UnityDeprecatedScopeSearch* self,
                                                   const gchar* key,
                                                   GVariant* variant);
GHashTable* unity_deprecated_scope_search_get_reply_hints (UnityDeprecatedScopeSearch* self);
UnityFilter* unity_deprecated_scope_search_get_filter (UnityDeprecatedScopeSearch* self,
                                                       const gchar* filter_id);
gboolean unity_deprecated_scope_search_equals (UnityDeprecatedScopeSearch* self,
                                               UnityDeprecatedScopeSearch* other);
const gchar* unity_deprecated_scope_search_get_channel_id (UnityDeprecatedScopeSearch* self);
const gchar* unity_deprecated_scope_search_get_search_string (UnityDeprecatedScopeSearch* self);
UnitySearchType unity_deprecated_scope_search_get_search_type (UnityDeprecatedScopeSearch* self);
GHashTable* unity_deprecated_scope_search_get_hints (UnityDeprecatedScopeSearch* self);
DeeSerializableModel* unity_deprecated_scope_search_get_results_model (UnityDeprecatedScopeSearch* self);
UnityDeprecatedScopeBase* unity_deprecated_scope_search_get_owner (UnityDeprecatedScopeSearch* self);
GType unity_aggregated_scope_search_get_type (void) G_GNUC_CONST;
GType unity_aggregator_scope_get_type (void) G_GNUC_CONST;
UnityAggregatedScopeSearch* unity_aggregated_scope_search_new (UnityAggregatorScope* owner,
                                                               const gchar* channel_id,
                                                               GHashTable* hints,
                                                               DeeSerializableModel* results_model);
UnityAggregatedScopeSearch* unity_aggregated_scope_search_construct (GType object_type,
                                                                     UnityAggregatorScope* owner,
                                                                     const gchar* channel_id,
                                                                     GHashTable* hints,
                                                                     DeeSerializableModel* results_model);
void unity_aggregated_scope_search_search_scope (UnityAggregatedScopeSearch* self,
                                                 const gchar* scope_id,
                                                 const gchar* search_string,
                                                 UnitySearchType search_type,
                                                 GHashTable* hints,
                                                 GAsyncReadyCallback _callback_,
                                                 gpointer _user_data_);
GHashTable* unity_aggregated_scope_search_search_scope_finish (UnityAggregatedScopeSearch* self,
                                                               GAsyncResult* _res_,
                                                               GError** error);
void unity_aggregated_scope_search_push_results (UnityAggregatedScopeSearch* self,
                                                 const gchar* scope_id,
                                                 DeeSerializableModel* results_model,
                                                 gchar** category_ids,
                                                 int category_ids_length1,
                                                 GAsyncReadyCallback _callback_,
                                                 gpointer _user_data_);
void unity_aggregated_scope_search_push_results_finish (UnityAggregatedScopeSearch* self,
                                                        GAsyncResult* _res_);
void unity_aggregated_scope_search_push_filter_settings (UnityAggregatedScopeSearch* self,
                                                         UnityFilterSet* filters);
GType unity_internal_results_synchronizer_get_type (void) G_GNUC_CONST;
UnityInternalResultsSynchronizer* unity_internal_results_synchronizer_new (DeeModel* receiver,
                                                                           const gchar* scope_id);
UnityInternalResultsSynchronizer* unity_internal_results_synchronizer_construct (GType object_type,
                                                                                 DeeModel* receiver,
                                                                                 const gchar* scope_id);
void unity_internal_results_synchronizer_clear (UnityInternalResultsSynchronizer* self);
void unity_internal_results_synchronizer_add_provider (UnityInternalResultsSynchronizer* self,
                                                       DeeModel* provider,
                                                       const gchar* scope_id);
void unity_internal_results_synchronizer_remove_provider (UnityInternalResultsSynchronizer* self,
                                                          const gchar* scope_id);
void unity_internal_results_synchronizer_disable_all_providers (UnityInternalResultsSynchronizer* self);
void unity_internal_results_synchronizer_disable_provider (UnityInternalResultsSynchronizer* self,
                                                           const gchar* scope_id);
void unity_internal_results_synchronizer_enable_provider (UnityInternalResultsSynchronizer* self,
                                                          const gchar* scope_id);
GVariant** unity_internal_results_synchronizer_prepare_row_buf (UnityInternalResultsSynchronizer* self,
                                                                DeeModel* provider,
                                                                DeeModelIter* iter,
                                                                int* result_length1);
void unity_internal_results_synchronizer_copy_model (UnityInternalResultsSynchronizer* self,
                                                     DeeModel* provider);
DeeModel* unity_internal_results_synchronizer_get_receiver (UnityInternalResultsSynchronizer* self);
const gchar* unity_internal_results_synchronizer_get_owner_scope_id (UnityInternalResultsSynchronizer* self);
UnityInternalMergeStrategy* unity_internal_results_synchronizer_get_merge_strategy (UnityInternalResultsSynchronizer* self);
void unity_internal_results_synchronizer_set_merge_strategy (UnityInternalResultsSynchronizer* self,
                                                             UnityInternalMergeStrategy* value);
GType unity_abstract_preview_get_type (void) G_GNUC_CONST;
GType unity_serialization_type_get_type (void) G_GNUC_CONST;
GType unity_preview_get_type (void) G_GNUC_CONST;
UnityProtocolPreview* unity_preview_get_raw (UnityPreview* self);
GObject* unity_preview_create_raw (UnityPreview* self);
GType unity_preview_action_get_type (void) G_GNUC_CONST;
void unity_preview_add_action (UnityPreview* self,
                               UnityPreviewAction* action);
GType unity_info_hint_get_type (void) G_GNUC_CONST;
void unity_preview_add_info (UnityPreview* self,
                             UnityInfoHint* info_hint);
GPtrArray* unity_preview_get_actions (UnityPreview* self);
UnityPreview* unity_preview_construct (GType object_type);
const gchar* unity_preview_get_title (UnityPreview* self);
void unity_preview_set_title (UnityPreview* self,
                              const gchar* value);
const gchar* unity_preview_get_subtitle (UnityPreview* self);
void unity_preview_set_subtitle (UnityPreview* self,
                                 const gchar* value);
const gchar* unity_preview_get_description_markup (UnityPreview* self);
void unity_preview_set_description_markup (UnityPreview* self,
                                           const gchar* value);
const gchar* unity_preview_get_image_source_uri (UnityPreview* self);
void unity_preview_set_image_source_uri (UnityPreview* self,
                                         const gchar* value);
GIcon* unity_preview_get_image (UnityPreview* self);
void unity_preview_set_image (UnityPreview* self,
                              GIcon* value);
GType unity_layout_hint_get_type (void) G_GNUC_CONST;
UnityPreviewAction* unity_preview_action_new (const gchar* id,
                                              const gchar* display_name,
                                              GIcon* icon_hint);
UnityPreviewAction* unity_preview_action_construct (GType object_type,
                                                    const gchar* id,
                                                    const gchar* display_name,
                                                    GIcon* icon_hint);
UnityPreviewAction* unity_preview_action_new_with_layout_hint (const gchar* id,
                                                               const gchar* display_name,
                                                               GIcon* icon_hint,
                                                               UnityLayoutHint layout);
UnityPreviewAction* unity_preview_action_construct_with_layout_hint (GType object_type,
                                                                     const gchar* id,
                                                                     const gchar* display_name,
                                                                     GIcon* icon_hint,
                                                                     UnityLayoutHint layout);
UnityPreviewAction* unity_preview_action_new_with_uri (const gchar* uri,
                                                       const gchar* display_name,
                                                       GIcon* icon_hint);
UnityPreviewAction* unity_preview_action_construct_with_uri (GType object_type,
                                                             const gchar* uri,
                                                             const gchar* display_name,
                                                             GIcon* icon_hint);
GHashTable* unity_preview_action_get_hints_internal (UnityPreviewAction* self);
const gchar* unity_preview_action_get_id (UnityPreviewAction* self);
const gchar* unity_preview_action_get_display_name (UnityPreviewAction* self);
const gchar* unity_preview_action_get_extra_text (UnityPreviewAction* self);
void unity_preview_action_set_extra_text (UnityPreviewAction* self,
                                          const gchar* value);
GIcon* unity_preview_action_get_icon_hint (UnityPreviewAction* self);
UnityLayoutHint unity_preview_action_get_layout_hint (UnityPreviewAction* self);
GHashTable* unity_preview_action_get_hints (UnityPreviewAction* self);
UnityInfoHint* unity_info_hint_new (const gchar* id,
                                    const gchar* display_name,
                                    GIcon* icon_hint,
                                    const gchar* data);
UnityInfoHint* unity_info_hint_construct (GType object_type,
                                          const gchar* id,
                                          const gchar* display_name,
                                          GIcon* icon_hint,
                                          const gchar* data);
UnityInfoHint* unity_info_hint_new_with_variant (const gchar* id,
                                                 const gchar* display_name,
                                                 GIcon* icon_hint,
                                                 GVariant* data);
UnityInfoHint* unity_info_hint_construct_with_variant (GType object_type,
                                                       const gchar* id,
                                                       const gchar* display_name,
                                                       GIcon* icon_hint,
                                                       GVariant* data);
const gchar* unity_info_hint_get_id (UnityInfoHint* self);
const gchar* unity_info_hint_get_display_name (UnityInfoHint* self);
GIcon* unity_info_hint_get_icon_hint (UnityInfoHint* self);
GVariant* unity_info_hint_get_data (UnityInfoHint* self);
GType unity_generic_preview_get_type (void) G_GNUC_CONST;
UnityGenericPreview* unity_generic_preview_new (const gchar* title,
                                                const gchar* description,
                                                GIcon* image);
UnityGenericPreview* unity_generic_preview_construct (GType object_type,
                                                      const gchar* title,
                                                      const gchar* description,
                                                      GIcon* image);
UnityGenericPreview* unity_generic_preview_empty (void);
GType unity_application_preview_get_type (void) G_GNUC_CONST;
UnityApplicationPreview* unity_application_preview_new (const gchar* title,
                                                        const gchar* subtitle,
                                                        const gchar* description,
                                                        GIcon* icon,
                                                        GIcon* screenshot);
UnityApplicationPreview* unity_application_preview_construct (GType object_type,
                                                              const gchar* title,
                                                              const gchar* subtitle,
                                                              const gchar* description,
                                                              GIcon* icon,
                                                              GIcon* screenshot);
void unity_application_preview_set_rating (UnityApplicationPreview* self,
                                           gfloat rating,
                                           guint num_ratings);
GIcon* unity_application_preview_get_app_icon (UnityApplicationPreview* self);
void unity_application_preview_set_app_icon (UnityApplicationPreview* self,
                                             GIcon* value);
const gchar* unity_application_preview_get_license (UnityApplicationPreview* self);
void unity_application_preview_set_license (UnityApplicationPreview* self,
                                            const gchar* value);
const gchar* unity_application_preview_get_copyright (UnityApplicationPreview* self);
void unity_application_preview_set_copyright (UnityApplicationPreview* self,
                                              const gchar* value);
const gchar* unity_application_preview_get_last_update (UnityApplicationPreview* self);
void unity_application_preview_set_last_update (UnityApplicationPreview* self,
                                                const gchar* value);
GType unity_music_preview_get_type (void) G_GNUC_CONST;
GType unity_music_preview_track_state_get_type (void) G_GNUC_CONST;
UnityMusicPreview* unity_music_preview_new (const gchar* title,
                                            const gchar* subtitle,
                                            GIcon* image);
UnityMusicPreview* unity_music_preview_construct (GType object_type,
                                                  const gchar* title,
                                                  const gchar* subtitle,
                                                  GIcon* image);
GType unity_track_metadata_get_type (void) G_GNUC_CONST;
void unity_music_preview_add_track (UnityMusicPreview* self,
                                    UnityTrackMetadata* track);
GType unity_payment_preview_get_type (void) G_GNUC_CONST;
GType unity_payment_preview_type_get_type (void) G_GNUC_CONST;
UnityPaymentPreview* unity_payment_preview_new (const gchar* title,
                                                const gchar* subtitle,
                                                GIcon* image);
UnityPaymentPreview* unity_payment_preview_construct (GType object_type,
                                                      const gchar* title,
                                                      const gchar* subtitle,
                                                      GIcon* image);
UnityPaymentPreview* unity_payment_preview_new_for_type (const gchar* title,
                                                         const gchar* subtitle,
                                                         GIcon* image,
                                                         UnityPaymentPreviewType type);
UnityPaymentPreview* unity_payment_preview_construct_for_type (GType object_type,
                                                               const gchar* title,
                                                               const gchar* subtitle,
                                                               GIcon* image,
                                                               UnityPaymentPreviewType type);
UnityPaymentPreview* unity_payment_preview_new_for_application (const gchar* title,
                                                                const gchar* subtitle,
                                                                GIcon* image);
UnityPaymentPreview* unity_payment_preview_construct_for_application (GType object_type,
                                                                      const gchar* title,
                                                                      const gchar* subtitle,
                                                                      GIcon* image);
UnityPaymentPreview* unity_payment_preview_new_for_music (const gchar* title,
                                                          const gchar* subtitle,
                                                          GIcon* image);
UnityPaymentPreview* unity_payment_preview_construct_for_music (GType object_type,
                                                                const gchar* title,
                                                                const gchar* subtitle,
                                                                GIcon* image);
UnityPaymentPreview* unity_payment_preview_new_for_error (const gchar* title,
                                                          const gchar* subtitle,
                                                          GIcon* image);
UnityPaymentPreview* unity_payment_preview_construct_for_error (GType object_type,
                                                                const gchar* title,
                                                                const gchar* subtitle,
                                                                GIcon* image);
const gchar* unity_payment_preview_get_header (UnityPaymentPreview* self);
void unity_payment_preview_set_header (UnityPaymentPreview* self,
                                       const gchar* value);
const gchar* unity_payment_preview_get_email (UnityPaymentPreview* self);
void unity_payment_preview_set_email (UnityPaymentPreview* self,
                                      const gchar* value);
const gchar* unity_payment_preview_get_payment_method (UnityPaymentPreview* self);
void unity_payment_preview_set_payment_method (UnityPaymentPreview* self,
                                               const gchar* value);
const gchar* unity_payment_preview_get_purchase_prize (UnityPaymentPreview* self);
void unity_payment_preview_set_purchase_prize (UnityPaymentPreview* self,
                                               const gchar* value);
const gchar* unity_payment_preview_get_purchase_type (UnityPaymentPreview* self);
void unity_payment_preview_set_purchase_type (UnityPaymentPreview* self,
                                              const gchar* value);
UnityPaymentPreviewType unity_payment_preview_get_preview_type (UnityPaymentPreview* self);
void unity_payment_preview_set_preview_type (UnityPaymentPreview* self,
                                             UnityPaymentPreviewType value);
GType unity_movie_preview_get_type (void) G_GNUC_CONST;
UnityMoviePreview* unity_movie_preview_new (const gchar* title,
                                            const gchar* subtitle,
                                            const gchar* description,
                                            GIcon* image);
UnityMoviePreview* unity_movie_preview_construct (GType object_type,
                                                  const gchar* title,
                                                  const gchar* subtitle,
                                                  const gchar* description,
                                                  GIcon* image);
void unity_movie_preview_set_rating (UnityMoviePreview* self,
                                     gfloat rating,
                                     guint num_ratings);
const gchar* unity_movie_preview_get_year (UnityMoviePreview* self);
void unity_movie_preview_set_year (UnityMoviePreview* self,
                                   const gchar* value);
GType unity_social_preview_get_type (void) G_GNUC_CONST;
UnitySocialPreview* unity_social_preview_new (const gchar* sender,
                                              const gchar* subtitle,
                                              const gchar* content,
                                              GIcon* avatar);
UnitySocialPreview* unity_social_preview_construct (GType object_type,
                                                    const gchar* sender,
                                                    const gchar* subtitle,
                                                    const gchar* content,
                                                    GIcon* avatar);
GType unity_social_preview_comment_get_type (void) G_GNUC_CONST;
void unity_social_preview_add_comment (UnitySocialPreview* self,
                                       UnitySocialPreviewComment* comment);
GIcon* unity_social_preview_get_avatar (UnitySocialPreview* self);
void unity_social_preview_set_avatar (UnitySocialPreview* self,
                                      GIcon* value);
const gchar* unity_social_preview_get_content (UnitySocialPreview* self);
void unity_social_preview_set_content (UnitySocialPreview* self,
                                       const gchar* value);
const gchar* unity_social_preview_get_sender (UnitySocialPreview* self);
void unity_social_preview_set_sender (UnitySocialPreview* self,
                                      const gchar* value);
UnitySocialPreviewComment* unity_social_preview_comment_new (const gchar* id,
                                                             const gchar* name,
                                                             const gchar* text,
                                                             const gchar* time);
UnitySocialPreviewComment* unity_social_preview_comment_construct (GType object_type,
                                                                   const gchar* id,
                                                                   const gchar* name,
                                                                   const gchar* text,
                                                                   const gchar* time);
const gchar* unity_social_preview_comment_get_id (UnitySocialPreviewComment* self);
const gchar* unity_social_preview_comment_get_name (UnitySocialPreviewComment* self);
const gchar* unity_social_preview_comment_get_text (UnitySocialPreviewComment* self);
const gchar* unity_social_preview_comment_get_time (UnitySocialPreviewComment* self);
GType unity_handled_type_get_type (void) G_GNUC_CONST;
GType unity_activation_response_get_type (void) G_GNUC_CONST;
UnityActivationResponse* unity_activation_response_new (UnityHandledType handled,
                                                        const gchar* goto_uri);
UnityActivationResponse* unity_activation_response_construct (GType object_type,
                                                              UnityHandledType handled,
                                                              const gchar* goto_uri);
UnityActivationResponse* unity_activation_response_new_with_search (const gchar* search_string,
                                                                    UnityFilterSet* filter_set,
                                                                    UnitySearchMetadata* search_metadata);
UnityActivationResponse* unity_activation_response_construct_with_search (GType object_type,
                                                                          const gchar* search_string,
                                                                          UnityFilterSet* filter_set,
                                                                          UnitySearchMetadata* search_metadata);
UnityActivationResponse* unity_activation_response_new_with_preview (UnityPreview* preview);
UnityActivationResponse* unity_activation_response_construct_with_preview (GType object_type,
                                                                           UnityPreview* preview);
GHashTable* unity_activation_response_get_hints (UnityActivationResponse* self);
void unity_activation_response_set_preview (UnityActivationResponse* self,
                                            UnityPreview* preview);
UnityPreview* unity_activation_response_get_preview (UnityActivationResponse* self);
UnityHandledType unity_activation_response_get_handled (UnityActivationResponse* self);
const gchar* unity_activation_response_get_goto_uri (UnityActivationResponse* self);
void unity_activation_response_set_goto_uri (UnityActivationResponse* self,
                                             const gchar* value);
GType unity_aggregator_activation_get_type (void) G_GNUC_CONST;
UnityAggregatorActivation* unity_aggregator_activation_new (const gchar* channel_id,
                                                            const gchar* scope_id,
                                                            guint action_type,
                                                            UnityScopeResult* _result_);
UnityAggregatorActivation* unity_aggregator_activation_construct (GType object_type,
                                                                  const gchar* channel_id,
                                                                  const gchar* scope_id,
                                                                  guint action_type,
                                                                  UnityScopeResult* _result_);
const gchar* unity_aggregator_activation_get_channel_id (UnityAggregatorActivation* self);
void unity_aggregator_activation_set_channel_id (UnityAggregatorActivation* self,
                                                 const gchar* value);
const gchar* unity_aggregator_activation_get_scope_id (UnityAggregatorActivation* self);
void unity_aggregator_activation_set_scope_id (UnityAggregatorActivation* self,
                                               const gchar* value);
guint unity_aggregator_activation_get_action_type (UnityAggregatorActivation* self);
void unity_aggregator_activation_set_action_type (UnityAggregatorActivation* self,
                                                  guint value);
UnityScopeResult* unity_aggregator_activation_get_scope_result (UnityAggregatorActivation* self);
void unity_aggregator_activation_set_scope_result (UnityAggregatorActivation* self,
                                                   UnityScopeResult* value);
GHashTable* unity_aggregator_activation_get_hints (UnityAggregatorActivation* self);
void unity_aggregator_activation_set_hints (UnityAggregatorActivation* self,
                                            GHashTable* value);
#define UNITY_SCOPE_API_VERSION 7
gint unity_scope_module_get_version (void);
GType unity_abstract_scope_get_type (void) G_GNUC_CONST;
GList* unity_scope_module_load_scopes (GError** error);
void unity_filter_set_add (UnityFilterSet* self,
                           UnityFilter* filter);
UnityFilter* unity_filter_set_get_filter_by_id (UnityFilterSet* self,
                                                const gchar* filter_id);
GList* unity_filter_set_get_filters (UnityFilterSet* self);
UnityFilterSet* unity_filter_set_new (void);
UnityFilterSet* unity_filter_set_construct (GType object_type);
GType unity_category_set_get_type (void) G_GNUC_CONST;
void unity_category_set_add (UnityCategorySet* self,
                             UnityCategory* category);
GList* unity_category_set_get_categories (UnityCategorySet* self);
UnityCategorySet* unity_category_set_new (void);
UnityCategorySet* unity_category_set_construct (GType object_type);
GType unity_schema_get_type (void) G_GNUC_CONST;
GType unity_schema_field_type_get_type (void) G_GNUC_CONST;
GType unity_schema_field_info_get_type (void) G_GNUC_CONST;
UnitySchemaFieldInfo* unity_schema_field_info_dup (const UnitySchemaFieldInfo* self);
void unity_schema_field_info_free (UnitySchemaFieldInfo* self);
void unity_schema_field_info_copy (const UnitySchemaFieldInfo* self,
                                   UnitySchemaFieldInfo* dest);
void unity_schema_field_info_destroy (UnitySchemaFieldInfo* self);
void unity_schema_add_field (UnitySchema* self,
                             const gchar* name,
                             const gchar* schema,
                             UnitySchemaFieldType type);
GList* unity_schema_get_fields (UnitySchema* self);
UnitySchema* unity_schema_new (void);
UnitySchema* unity_schema_construct (GType object_type);
UnityScopeResult* unity_scope_result_create (const gchar* uri,
                                             const gchar* icon_hint,
                                             guint category,
                                             UnityResultType result_type,
                                             const gchar* mimetype,
                                             const gchar* title,
                                             const gchar* comment,
                                             const gchar* dnd_uri,
                                             GHashTable* metadata);
UnityScopeResult* unity_scope_result_create_from_variant (GVariant* variant);
void unity_cancellable_cancel (UnityCancellable* self);
gboolean unity_cancellable_is_cancelled (UnityCancellable* self);
UnityCancellable* unity_cancellable_create (void);
GCancellable* unity_cancellable_get_gcancellable (UnityCancellable* self);
UnityCancellable* unity_cancellable_construct (GType object_type);
void unity_scope_search_base_run (UnityScopeSearchBase* self);
void unity_scope_search_base_run_async (UnityScopeSearchBase* self,
                                        UnityScopeSearchBaseCallback async_callback,
                                        gpointer async_callback_target);
void unity_scope_search_base_set_search_context (UnityScopeSearchBase* self,
                                                 UnitySearchContext* ctx);
UnityScopeSearchBase* unity_scope_search_base_construct (GType object_type);
void unity_result_set_add_result (UnityResultSet* self,
                                  UnityScopeResult* _result_);
void unity_result_set_add_result_from_variant (UnityResultSet* self,
                                               GVariant* variant);
void unity_result_set_flush (UnityResultSet* self);
UnityResultSet* unity_result_set_construct (GType object_type);
guint8* unity_abstract_preview_serialize_as (UnityAbstractPreview* self,
                                             UnitySerializationType serialization_type,
                                             int* result_length1);
UnityAbstractPreview* unity_abstract_preview_construct (GType object_type);
GType unity_result_previewer_get_type (void) G_GNUC_CONST;
UnityAbstractPreview* unity_result_previewer_run (UnityResultPreviewer* self);
void unity_result_previewer_run_async (UnityResultPreviewer* self,
                                       UnityAbstractPreviewCallback async_callback,
                                       gpointer async_callback_target);
void unity_result_previewer_set_scope_result (UnityResultPreviewer* self,
                                              UnityScopeResult* scope_result);
void unity_result_previewer_set_search_metadata (UnityResultPreviewer* self,
                                                 UnitySearchMetadata* search_metadata);
UnityResultPreviewer* unity_result_previewer_construct (GType object_type);
UnitySearchMetadata* unity_search_metadata_create (GHashTable* metadata);
UnitySearchMetadata* unity_search_metadata_create_from_variant (GVariant* metadata);
UnitySearchMetadata* unity_search_metadata_new (void);
UnitySearchMetadata* unity_search_metadata_construct (GType object_type);
const gchar* unity_search_metadata_get_locale (UnitySearchMetadata* self);
const gchar* unity_search_metadata_get_form_factor (UnitySearchMetadata* self);
GType unity_geo_coordinate_get_type (void) G_GNUC_CONST;
UnityGeoCoordinate* unity_search_metadata_get_location (UnitySearchMetadata* self);
UnityGeoCoordinate* unity_geo_coordinate_new (gdouble latitude_,
                                              gdouble longitude_);
UnityGeoCoordinate* unity_geo_coordinate_construct (GType object_type,
                                                    gdouble latitude_,
                                                    gdouble longitude_);
UnityGeoCoordinate* unity_geo_coordinate_new_with_altitude (gdouble latitude_,
                                                            gdouble longitude_,
                                                            gdouble altitude_);
UnityGeoCoordinate* unity_geo_coordinate_construct_with_altitude (GType object_type,
                                                                  gdouble latitude_,
                                                                  gdouble longitude_,
                                                                  gdouble altitude_);
gboolean unity_geo_coordinate_has_valid_altitude (UnityGeoCoordinate* self);
UnitySearchContext* unity_search_context_create (const gchar* search_query,
                                                 UnitySearchType search_type,
                                                 UnityFilterSet* filter_state,
                                                 GHashTable* metadata,
                                                 UnityResultSet* result_set,
                                                 UnityCancellable* cancellable);
void unity_search_context_set_search_metadata (UnitySearchContext *self,
                                               UnitySearchMetadata* metadata);
UnityScopeSearchBase* unity_abstract_scope_create_search_for_query (UnityAbstractScope* self,
                                                                    UnitySearchContext* search_context);
UnityResultPreviewer* unity_abstract_scope_create_previewer (UnityAbstractScope* self,
                                                             UnityScopeResult* _result_,
                                                             UnitySearchMetadata* metadata);
UnityCategorySet* unity_abstract_scope_get_categories (UnityAbstractScope* self);
UnityFilterSet* unity_abstract_scope_get_filters (UnityAbstractScope* self);
UnitySchema* unity_abstract_scope_get_schema (UnityAbstractScope* self);
gchar* unity_abstract_scope_get_search_hint (UnityAbstractScope* self);
gchar* unity_abstract_scope_get_group_name (UnityAbstractScope* self);
gchar* unity_abstract_scope_get_unique_name (UnityAbstractScope* self);
UnityActivationResponse* unity_abstract_scope_activate (UnityAbstractScope* self,
                                                        UnityScopeResult* _result_,
                                                        UnitySearchMetadata* metadata,
                                                        const gchar* action_id);
gchar* unity_abstract_scope_normalize_search_query (UnityAbstractScope* self,
                                                    const gchar* search_query);
void unity_abstract_scope_results_invalidated (UnityAbstractScope* self,
                                               UnitySearchType search_type);
UnityAbstractScope* unity_abstract_scope_construct (GType object_type);
GType unity_scope_dbus_connector_get_type (void) G_GNUC_CONST;
UnityScopeDBusConnector* unity_scope_dbus_connector_new (UnityAbstractScope* scope);
UnityScopeDBusConnector* unity_scope_dbus_connector_construct (GType object_type,
                                                               UnityAbstractScope* scope);
void unity_scope_dbus_connector_export (UnityScopeDBusConnector* self,
                                        GError** error);
void unity_scope_dbus_connector_unexport (UnityScopeDBusConnector* self);
void unity_scope_dbus_connector_run (void);
void unity_scope_dbus_connector_quit (void);
UnityAbstractScope* unity_scope_dbus_connector_get_scope (UnityScopeDBusConnector* self);
extern gint unity_internal_PROCESS_TIMEOUT_SEC;
void unity_internal_update_process_timeout (gint new_timeout);
GType unity_internal_scope_dbus_impl_get_type (void) G_GNUC_CONST;
void unity_internal_scope_dbus_impl_export (UnityInternalScopeDBusImpl* self,
                                            GError** error);
void unity_internal_scope_dbus_impl_unexport (UnityInternalScopeDBusImpl* self);
void unity_internal_scope_dbus_impl_queue_property_notification (UnityInternalScopeDBusImpl* self,
                                                                 const gchar* prop_name,
                                                                 GVariant* prop_value);
DeeSerializableModel* unity_internal_scope_dbus_impl_get_categories_model (UnityInternalScopeDBusImpl* self);
void unity_internal_scope_dbus_impl_set_categories_model (UnityInternalScopeDBusImpl* self,
                                                          DeeSerializableModel* value);
DeeSerializableModel* unity_internal_scope_dbus_impl_get_filters_model (UnityInternalScopeDBusImpl* self);
void unity_internal_scope_dbus_impl_set_filters_model (UnityInternalScopeDBusImpl* self,
                                                       DeeSerializableModel* value);
GType unity_internal_default_scope_dbus_impl_get_type (void) G_GNUC_CONST;
UnityInternalDefaultScopeDBusImpl* unity_internal_default_scope_dbus_impl_new (UnityAbstractScope* owner);
UnityInternalDefaultScopeDBusImpl* unity_internal_default_scope_dbus_impl_construct (GType object_type,
                                                                                     UnityAbstractScope* owner);
void unity_internal_default_scope_dbus_impl_start_unexport_timer (UnityInternalDefaultScopeDBusImpl* self);
void unity_internal_default_scope_dbus_impl_set_categories (UnityInternalDefaultScopeDBusImpl* self,
                                                            GList* categories);
void unity_internal_default_scope_dbus_impl_set_filters (UnityInternalDefaultScopeDBusImpl* self,
                                                         GList* filters);
void unity_internal_default_scope_dbus_impl_preview_internal (UnityInternalDefaultScopeDBusImpl* self,
                                                              UnityScopeResult* scope_result,
                                                              UnitySearchMetadata* metadata,
                                                              GAsyncReadyCallback _callback_,
                                                              gpointer _user_data_);
UnityPreview* unity_internal_default_scope_dbus_impl_preview_internal_finish (UnityInternalDefaultScopeDBusImpl* self,
                                                                              GAsyncResult* _res_);
void unity_internal_default_scope_dbus_impl_set_active_sources (UnityInternalDefaultScopeDBusImpl* self,
                                                                const gchar* channel_id,
                                                                gchar** sources,
                                                                int sources_length1,
                                                                GCancellable* cancellable,
                                                                GAsyncReadyCallback _callback_,
                                                                gpointer _user_data_);
void unity_internal_default_scope_dbus_impl_set_active_sources_finish (UnityInternalDefaultScopeDBusImpl* self,
                                                                       GAsyncResult* _res_,
                                                                       GError** error);
UnityProtocolViewType unity_internal_default_scope_dbus_impl_get_view_type (UnityInternalDefaultScopeDBusImpl* self);
void unity_internal_default_scope_dbus_impl_set_view_type (UnityInternalDefaultScopeDBusImpl* self,
                                                           UnityProtocolViewType value);
GType unity_internal_owned_name_get_type (void) G_GNUC_CONST;
UnityInternalOwnedName* unity_internal_owned_name_dup (const UnityInternalOwnedName* self);
void unity_internal_owned_name_free (UnityInternalOwnedName* self);
GType unity_internal_scope_dbus_name_manager_get_type (void) G_GNUC_CONST;
UnityInternalScopeDBusNameManager* unity_internal_scope_dbus_name_manager_get_default (void);
void unity_internal_scope_dbus_name_manager_own_name (UnityInternalScopeDBusNameManager* self,
                                                      const gchar* dbus_name);
void unity_internal_scope_dbus_name_manager_unown_name (UnityInternalScopeDBusNameManager* self,
                                                        const gchar* dbus_name);
void unity_internal_scope_dbus_name_manager_acquire_names (UnityInternalScopeDBusNameManager* self,
                                                           GAsyncReadyCallback _callback_,
                                                           gpointer _user_data_);
gboolean unity_internal_scope_dbus_name_manager_acquire_names_finish (UnityInternalScopeDBusNameManager* self,
                                                                      GAsyncResult* _res_);
GType unity_internal_channel_state_get_type (void) G_GNUC_CONST;
GType unity_internal_scope_channel_get_type (void) G_GNUC_CONST;
gpointer unity_internal_utils_async_mutex_ref (gpointer instance);
void unity_internal_utils_async_mutex_unref (gpointer instance);
GParamSpec* unity_internal_utils_param_spec_async_mutex (const gchar* name,
                                                         const gchar* nick,
                                                         const gchar* blurb,
                                                         GType object_type,
                                                         GParamFlags flags);
void unity_internal_utils_value_set_async_mutex (GValue* value,
                                                 gpointer v_object);
void unity_internal_utils_value_take_async_mutex (GValue* value,
                                                  gpointer v_object);
gpointer unity_internal_utils_value_get_async_mutex (const GValue* value);
GType unity_internal_utils_async_mutex_get_type (void) G_GNUC_CONST;
UnityInternalScopeChannel* unity_internal_scope_channel_new (UnityProtocolChannelType channel_type_);
UnityInternalScopeChannel* unity_internal_scope_channel_construct (GType object_type,
                                                                   UnityProtocolChannelType channel_type_);
UnitySearchType unity_internal_scope_channel_get_search_type (UnityInternalScopeChannel* self);
gchar* unity_internal_scope_channel_create_channel (UnityInternalScopeChannel* self,
                                                    const gchar* swarm_name,
                                                    GHashTable* metadata_schema,
                                                    GHashTable* optional_metadata,
                                                    DeeSerializableModel* filter_model,
                                                    UnityProtocolChannelFlags flags);
void unity_internal_scope_channel_set_filter_base (UnityInternalScopeChannel* self,
                                                   DeeSerializableModel* filter_model);
UnityFilter* unity_internal_scope_channel_get_filter_by_id (UnityInternalScopeChannel* self,
                                                            const gchar* filter_id);
void unity_internal_scope_channel_wait_for_search (UnityInternalScopeChannel* self,
                                                   GAsyncReadyCallback _callback_,
                                                   gpointer _user_data_);
void unity_internal_scope_channel_wait_for_search_finish (UnityInternalScopeChannel* self,
                                                          GAsyncResult* _res_);
void unity_internal_scope_channel_set_state (UnityInternalScopeChannel* self,
                                             UnityInternalChannelState new_state);
gboolean unity_internal_scope_channel_is_search_running (UnityInternalScopeChannel* self);
guint64 unity_internal_scope_channel_get_last_seqnum (UnityInternalScopeChannel* self);
void unity_internal_scope_channel_register_pushed_model (UnityInternalScopeChannel* self,
                                                         const gchar* search_string,
                                                         DeeSerializableModel* model);
GList* unity_internal_scope_channel_get_pushed_models (UnityInternalScopeChannel* self,
                                                       const gchar* search_string);
void unity_internal_scope_channel_watch_owner (UnityInternalScopeChannel* self,
                                               GDBusConnection* connection,
                                               const char* owner);
UnityDeprecatedScopeBase* unity_deprecated_scope_base_construct (GType object_type,
                                                                 const gchar* dbus_path_,
                                                                 const gchar* id_);
GObject* unity_deprecated_scope_base_create_impl (UnityDeprecatedScopeBase* self);
GObject* unity_deprecated_scope_base_get_impl (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_export (UnityDeprecatedScopeBase* self,
                                         GError** error);
void unity_deprecated_scope_base_unexport (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_set_view_type_internal (UnityDeprecatedScopeBase* self,
                                                         UnityProtocolViewType view_type);
void unity_deprecated_scope_base_set_active_sources_internal (UnityDeprecatedScopeBase* self,
                                                              gchar** active_sources_,
                                                              int active_sources__length1);
void unity_deprecated_scope_base_handle_search (UnityDeprecatedScopeBase* self,
                                                const gchar* channel_id,
                                                const gchar* search_string,
                                                GHashTable* hints,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
GHashTable* unity_deprecated_scope_base_handle_search_finish (UnityDeprecatedScopeBase* self,
                                                              GAsyncResult* _res_,
                                                              GError** error);
const gchar* unity_deprecated_scope_base_get_id (UnityDeprecatedScopeBase* self);
const gchar* unity_deprecated_scope_base_get_dbus_path (UnityDeprecatedScopeBase* self);
gboolean unity_deprecated_scope_base_get_search_in_global (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_set_search_in_global (UnityDeprecatedScopeBase* self,
                                                       gboolean value);
gboolean unity_deprecated_scope_base_get_visible (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_set_visible (UnityDeprecatedScopeBase* self,
                                              gboolean value);
gboolean unity_deprecated_scope_base_get_is_master (UnityDeprecatedScopeBase* self);
const gchar* unity_deprecated_scope_base_get_search_hint (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_set_search_hint (UnityDeprecatedScopeBase* self,
                                                  const gchar* value);
UnityOptionsFilter* unity_deprecated_scope_base_get_sources (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_set_sources (UnityDeprecatedScopeBase* self,
                                              UnityOptionsFilter* value);
UnityCategorySet* unity_deprecated_scope_base_get_categories (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_set_categories (UnityDeprecatedScopeBase* self,
                                                 UnityCategorySet* value);
UnityFilterSet* unity_deprecated_scope_base_get_filters (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_set_filters (UnityDeprecatedScopeBase* self,
                                              UnityFilterSet* value);
UnitySchema* unity_deprecated_scope_base_get_schema (UnityDeprecatedScopeBase* self);
void unity_deprecated_scope_base_set_schema (UnityDeprecatedScopeBase* self,
                                             UnitySchema* value);
void unity_deprecated_scope_preview_result (UnityDeprecatedScope* self,
                                            UnityScopeResult* _result_,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_);
UnityPreview* unity_deprecated_scope_preview_result_finish (UnityDeprecatedScope* self,
                                                            GAsyncResult* _res_);
void unity_deprecated_scope_activate_result (UnityDeprecatedScope* self,
                                             UnityScopeResult* _result_,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_);
UnityActivationResponse* unity_deprecated_scope_activate_result_finish (UnityDeprecatedScope* self,
                                                                        GAsyncResult* _res_);
UnityDeprecatedScope* unity_deprecated_scope_new (const gchar* dbus_path_,
                                                  const gchar* id_);
UnityDeprecatedScope* unity_deprecated_scope_construct (GType object_type,
                                                        const gchar* dbus_path_,
                                                        const gchar* id_);
void unity_deprecated_scope_queue_search_changed (UnityDeprecatedScope* self,
                                                  UnitySearchType search_type);
GType unity_internal_deprecated_scope_dbus_impl_get_type (void) G_GNUC_CONST;
void unity_internal_deprecated_scope_dbus_impl_set_categories (UnityInternalDeprecatedScopeDBusImpl* self,
                                                               GList* categories);
void unity_internal_deprecated_scope_dbus_impl_set_filters (UnityInternalDeprecatedScopeDBusImpl* self,
                                                            GList* filters);
GType unity_internal_deprecated_scope_impl_get_type (void) G_GNUC_CONST;
UnityInternalDeprecatedScopeImpl* unity_internal_deprecated_scope_impl_new (UnityDeprecatedScope* owner);
UnityInternalDeprecatedScopeImpl* unity_internal_deprecated_scope_impl_construct (GType object_type,
                                                                                  UnityDeprecatedScope* owner);
void unity_internal_deprecated_scope_impl_queue_search_for_type (UnityInternalDeprecatedScopeImpl* self,
                                                                 UnitySearchType search_type);
UnityActivationResponse* unity_internal_deprecated_scope_impl_activate_action (UnityInternalDeprecatedScopeImpl* self,
                                                                               const gchar* action_id,
                                                                               const gchar* uri,
                                                                               GHashTable* hints);
void unity_internal_deprecated_scope_impl_set_active_sources (UnityInternalDeprecatedScopeImpl* self,
                                                              const gchar* channel_id,
                                                              gchar** sources,
                                                              int sources_length1,
                                                              GCancellable* cancellable,
                                                              GAsyncReadyCallback _callback_,
                                                              gpointer _user_data_);
void unity_internal_deprecated_scope_impl_set_active_sources_finish (UnityInternalDeprecatedScopeImpl* self,
                                                                     GAsyncResult* _res_,
                                                                     GError** error);
UnityProtocolViewType unity_internal_deprecated_scope_impl_get_view_type (UnityInternalDeprecatedScopeImpl* self);
void unity_internal_deprecated_scope_impl_set_view_type (UnityInternalDeprecatedScopeImpl* self,
                                                         UnityProtocolViewType value);
GType unity_aggregator_scope_sort_flags_get_type (void) G_GNUC_CONST;
GType unity_aggregator_scope_merge_mode_get_type (void) G_GNUC_CONST;
gint unity_aggregator_scope_category_index_for_scope_id (UnityAggregatorScope* self,
                                                         const gchar* scope_id);
UnityAggregatorScope* unity_aggregator_scope_construct (GType object_type,
                                                        const gchar* dbus_path_,
                                                        const gchar* id_,
                                                        UnityAggregatorScopeMergeMode merge_mode,
                                                        gboolean proxy_filter_hints);
void unity_aggregator_scope_add_sorter (UnityAggregatorScope* self,
                                        guint category_index,
                                        const gchar* field,
                                        UnityAggregatorScopeSortFlags flags);
void unity_aggregator_scope_add_constraint (UnityAggregatorScope* self,
                                            gint category_index,
                                            const gchar* field);
void unity_aggregator_scope_search (UnityAggregatorScope* self,
                                    UnityAggregatedScopeSearch* scope_search,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_);
void unity_aggregator_scope_search_finish (UnityAggregatorScope* self,
                                           GAsyncResult* _res_);
void unity_aggregator_scope_activate (UnityAggregatorScope* self,
                                      UnityAggregatorActivation* activation,
                                      GAsyncReadyCallback _callback_,
                                      gpointer _user_data_);
UnityActivationResponse* unity_aggregator_scope_activate_finish (UnityAggregatorScope* self,
                                                                 GAsyncResult* _res_);
void unity_aggregator_scope_search_scope (UnityAggregatorScope* self,
                                          UnityAggregatedScopeSearch* search,
                                          const gchar* scope_id,
                                          const gchar* search_query,
                                          UnitySearchType search_type,
                                          GHashTable* hints,
                                          GCancellable* cancellable,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
GHashTable* unity_aggregator_scope_search_scope_finish (UnityAggregatorScope* self,
                                                        GAsyncResult* _res_,
                                                        GError** error);
void unity_aggregator_scope_push_results (UnityAggregatorScope* self,
                                          const gchar* channel_id,
                                          const gchar* search_string,
                                          const gchar* scope_id,
                                          DeeSerializableModel* results_model,
                                          gchar** category_ids,
                                          int category_ids_length1,
                                          GCancellable* cancellable,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
void unity_aggregator_scope_push_results_finish (UnityAggregatorScope* self,
                                                 GAsyncResult* _res_);
void unity_aggregator_scope_push_filter_settings (UnityAggregatorScope* self,
                                                  const gchar* channel_id,
                                                  UnityFilterSet* filters);
UnityAggregatorScopeMergeMode unity_aggregator_scope_get_merge_mode (UnityAggregatorScope* self);
void unity_aggregator_scope_set_merge_mode (UnityAggregatorScope* self,
                                            UnityAggregatorScopeMergeMode value);
gboolean unity_aggregator_scope_get_proxy_filter_hints (UnityAggregatorScope* self);
void unity_aggregator_scope_set_proxy_filter_hints (UnityAggregatorScope* self,
                                                    gboolean value);
gboolean unity_aggregator_scope_get_automatic_flushing (UnityAggregatorScope* self);
void unity_aggregator_scope_set_automatic_flushing (UnityAggregatorScope* self,
                                                    gboolean value);
GType unity_internal_aggregator_scope_impl_get_type (void) G_GNUC_CONST;
UnityInternalAggregatorScopeImpl* unity_internal_aggregator_scope_impl_new (UnityAggregatorScope* owner);
UnityInternalAggregatorScopeImpl* unity_internal_aggregator_scope_impl_construct (GType object_type,
                                                                                  UnityAggregatorScope* owner);
GList* unity_internal_aggregator_scope_impl_subscope_ids (UnityInternalAggregatorScopeImpl* self);
void unity_internal_aggregator_scope_impl_queue_search_for_type (UnityInternalAggregatorScopeImpl* self,
                                                                 UnitySearchType search_type);
void unity_internal_aggregator_scope_impl_invalidate_search (UnityInternalAggregatorScopeImpl* self,
                                                             UnitySearchType search_type);
void unity_internal_aggregator_scope_impl_add_sorter (UnityInternalAggregatorScopeImpl* self,
                                                      guint category_index,
                                                      const gchar* field,
                                                      UnityAggregatorScopeSortFlags flags);
void unity_internal_aggregator_scope_impl_add_constraint (UnityInternalAggregatorScopeImpl* self,
                                                          gint category_index,
                                                          const gchar* field);
void unity_internal_aggregator_scope_impl_search_scope (UnityInternalAggregatorScopeImpl* self,
                                                        UnityAggregatedScopeSearch* search,
                                                        const gchar* scope_id,
                                                        const gchar* search_string,
                                                        UnitySearchType search_type,
                                                        GHashTable* hints,
                                                        GCancellable* cancellable,
                                                        GAsyncReadyCallback _callback_,
                                                        gpointer _user_data_);
GHashTable* unity_internal_aggregator_scope_impl_search_scope_finish (UnityInternalAggregatorScopeImpl* self,
                                                                      GAsyncResult* _res_,
                                                                      GError** error);
void unity_internal_aggregator_scope_impl_push_results_to_scope (UnityInternalAggregatorScopeImpl* self,
                                                                 const gchar* channel_id,
                                                                 const gchar* search_string,
                                                                 const gchar* scope_id,
                                                                 DeeSerializableModel* results_model,
                                                                 gchar** category_ids,
                                                                 int category_ids_length1,
                                                                 GCancellable* cancellable,
                                                                 GAsyncReadyCallback _callback_,
                                                                 gpointer _user_data_);
void unity_internal_aggregator_scope_impl_push_results_to_scope_finish (UnityInternalAggregatorScopeImpl* self,
                                                                        GAsyncResult* _res_,
                                                                        GError** error);
void unity_internal_aggregator_scope_impl_push_filter_settings (UnityInternalAggregatorScopeImpl* self,
                                                                const gchar* channel_id,
                                                                UnityFilterSet* filters);
void unity_internal_aggregator_scope_impl_set_active_sources (UnityInternalAggregatorScopeImpl* self,
                                                              const gchar* channel_id,
                                                              gchar** sources,
                                                              int sources_length1,
                                                              GCancellable* cancellable,
                                                              GAsyncReadyCallback _callback_,
                                                              gpointer _user_data_);
void unity_internal_aggregator_scope_impl_set_active_sources_finish (UnityInternalAggregatorScopeImpl* self,
                                                                     GAsyncResult* _res_,
                                                                     GError** error);
UnityInternalMergeStrategy* unity_internal_aggregator_scope_impl_get_merge_strategy (UnityInternalAggregatorScopeImpl* self);
void unity_internal_aggregator_scope_impl_set_merge_strategy (UnityInternalAggregatorScopeImpl* self,
                                                              UnityInternalMergeStrategy* value);
UnityProtocolViewType unity_internal_aggregator_scope_impl_get_view_type (UnityInternalAggregatorScopeImpl* self);
void unity_internal_aggregator_scope_impl_set_view_type (UnityInternalAggregatorScopeImpl* self,
                                                         UnityProtocolViewType value);
GType unity_master_scope_get_type (void) G_GNUC_CONST;
UnityMasterScope* unity_master_scope_new (const gchar* dbus_path_,
                                          const gchar* id_);
UnityMasterScope* unity_master_scope_construct (GType object_type,
                                                const gchar* dbus_path_,
                                                const gchar* id_);
const gchar* unity_master_scope_get_no_content_hint (UnityMasterScope* self);
void unity_master_scope_set_no_content_hint (UnityMasterScope* self,
                                             const gchar* value);
GType unity_simple_scope_get_type (void) G_GNUC_CONST;
void unity_simple_scope_set_search_func (UnitySimpleScope* self,
                                         UnitySimpleScopeSearchRunFunc func,
                                         gpointer func_target,
                                         GDestroyNotify func_target_destroy_notify);
void unity_simple_scope_set_search_async_func (UnitySimpleScope* self,
                                               UnitySimpleScopeSearchRunAsyncFunc func,
                                               gpointer func_target,
                                               GDestroyNotify func_target_destroy_notify);
void unity_simple_scope_set_activate_func (UnitySimpleScope* self,
                                           UnitySimpleScopeActivateFunc func,
                                           gpointer func_target,
                                           GDestroyNotify func_target_destroy_notify);
void unity_simple_scope_set_preview_func (UnitySimpleScope* self,
                                          UnitySimpleScopePreviewRunFunc func,
                                          gpointer func_target,
                                          GDestroyNotify func_target_destroy_notify);
void unity_simple_scope_set_preview_async_func (UnitySimpleScope* self,
                                                UnitySimpleScopePreviewRunAsyncFunc func,
                                                gpointer func_target,
                                                GDestroyNotify func_target_destroy_notify);
UnitySimpleScope* unity_simple_scope_new (void);
UnitySimpleScope* unity_simple_scope_construct (GType object_type);
UnityFilterSet* unity_simple_scope_get_filter_set (UnitySimpleScope* self);
void unity_simple_scope_set_filter_set (UnitySimpleScope* self,
                                        UnityFilterSet* value);
UnityCategorySet* unity_simple_scope_get_category_set (UnitySimpleScope* self);
void unity_simple_scope_set_category_set (UnitySimpleScope* self,
                                          UnityCategorySet* value);
UnitySchema* unity_simple_scope_get_schema (UnitySimpleScope* self);
void unity_simple_scope_set_schema (UnitySimpleScope* self,
                                    UnitySchema* value);
const gchar* unity_simple_scope_get_search_hint (UnitySimpleScope* self);
void unity_simple_scope_set_search_hint (UnitySimpleScope* self,
                                         const gchar* value);
const gchar* unity_simple_scope_get_group_name (UnitySimpleScope* self);
void unity_simple_scope_set_group_name (UnitySimpleScope* self,
                                        const gchar* value);
const gchar* unity_simple_scope_get_unique_name (UnitySimpleScope* self);
void unity_simple_scope_set_unique_name (UnitySimpleScope* self,
                                         const gchar* value);
GType unity_scope_loader_get_type (void) G_GNUC_CONST;
UnityScopeLoader* unity_scope_loader_new (void);
UnityScopeLoader* unity_scope_loader_construct (GType object_type);
GList* unity_scope_loader_get_scopes (UnityScopeLoader* self,
                                      const gchar* module_name,
                                      const gchar* module_type,
                                      GError** error);
void unity_scope_loader_export_scopes (UnityScopeLoader* self,
                                       GList* scopes,
                                       GError** error);
void unity_scope_loader_load_group (UnityScopeLoader* self,
                                    const gchar* group_name,
                                    GError** error);
void unity_scope_loader_load_scope (UnityScopeLoader* self,
                                    const gchar* scope_id,
                                    GError** error);
void unity_scope_loader_load_module (UnityScopeLoader* self,
                                     const gchar* module,
                                     const gchar* module_type,
                                     GError** error);
GType unity_internal_channel_update_flags_get_type (void) G_GNUC_CONST;
GType unity_internal_scope_tracker_get_type (void) G_GNUC_CONST;
extern GQuark unity_internal_scope_tracker_DEDUP_MODEL_QUARK;
UnityInternalScopeTracker* unity_internal_scope_tracker_new (void);
UnityInternalScopeTracker* unity_internal_scope_tracker_construct (GType object_type);
GList* unity_internal_scope_tracker_scope_ids_for_proxies (UnityInternalScopeTracker* self);
UnityProtocolScopeProxy* unity_internal_scope_tracker_get_proxy_for_scope_id (UnityInternalScopeTracker* self,
                                                                              const gchar* scope_id);
gchar* unity_internal_scope_tracker_get_scope_id_for_proxy (UnityInternalScopeTracker* self,
                                                            UnityProtocolScopeProxy* proxy);
UnityInternalResultsSynchronizer* unity_internal_scope_tracker_get_synchronizer (UnityInternalScopeTracker* self,
                                                                                 const gchar* channel_id);
void unity_internal_scope_tracker_create_proxy (UnityInternalScopeTracker* self,
                                                UnityProtocolScopeRegistryScopeMetadata* metadata,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
UnityProtocolScopeProxy* unity_internal_scope_tracker_create_proxy_finish (UnityInternalScopeTracker* self,
                                                                           GAsyncResult* _res_,
                                                                           GError** error);
void unity_internal_scope_tracker_register_channel (UnityInternalScopeTracker* self,
                                                    const gchar* owner_scope_id,
                                                    const gchar* master_channel_id,
                                                    DeeSerializableModel* model,
                                                    UnityInternalMergeStrategy* merge_strategy);
void unity_internal_scope_tracker_unregister_channel (UnityInternalScopeTracker* self,
                                                      const gchar* master_channel_id);
void unity_internal_scope_tracker_activate_wrapper (UnityInternalScopeTracker* self,
                                                    UnityInternalScopeChannel* master_channel,
                                                    const gchar* scope_id,
                                                    GVariant** result_arr,
                                                    int result_arr_length1,
                                                    guint action_type,
                                                    GHashTable* hints,
                                                    GCancellable* cancellable,
                                                    GAsyncReadyCallback _callback_,
                                                    gpointer _user_data_);
void unity_internal_scope_tracker_activate_wrapper_finish (UnityInternalScopeTracker* self,
                                                           GAsyncResult* _res_,
                                                           UnityProtocolActivationReplyRaw* result,
                                                           GError** error);
void unity_internal_scope_tracker_search_wrapper (UnityInternalScopeTracker* self,
                                                  UnityInternalScopeChannel* master_channel,
                                                  UnityProtocolChannelType channel_type,
                                                  const gchar* search_string,
                                                  GHashTable* hints,
                                                  const gchar* scope_id,
                                                  GCancellable* cancellable,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_);
GHashTable* unity_internal_scope_tracker_search_wrapper_finish (UnityInternalScopeTracker* self,
                                                                GAsyncResult* _res_,
                                                                GError** error);
void unity_internal_scope_tracker_push_wrapper (UnityInternalScopeTracker* self,
                                                UnityInternalScopeChannel* parent_channel,
                                                const gchar* search_string,
                                                UnityProtocolChannelType channel_type,
                                                const gchar* master_scope_id,
                                                const gchar* scope_id,
                                                DeeSerializableModel* results_model,
                                                gchar** categories,
                                                int categories_length1,
                                                GCancellable* cancellable,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
void unity_internal_scope_tracker_push_wrapper_finish (UnityInternalScopeTracker* self,
                                                       GAsyncResult* _res_,
                                                       GError** error);
UnityTrackMetadata* unity_track_metadata_new (void);
UnityTrackMetadata* unity_track_metadata_construct (GType object_type);
UnityTrackMetadata* unity_track_metadata_new_full (const gchar* uri,
                                                   gint track_no,
                                                   const gchar* title,
                                                   const gchar* artist,
                                                   const gchar* album,
                                                   guint length);
UnityTrackMetadata* unity_track_metadata_construct_full (GType object_type,
                                                         const gchar* uri,
                                                         gint track_no,
                                                         const gchar* title,
                                                         const gchar* artist,
                                                         const gchar* album,
                                                         guint length);
const gchar* unity_track_metadata_get_uri (UnityTrackMetadata* self);
void unity_track_metadata_set_uri (UnityTrackMetadata* self,
                                   const gchar* value);
gint unity_track_metadata_get_track_no (UnityTrackMetadata* self);
void unity_track_metadata_set_track_no (UnityTrackMetadata* self,
                                        gint value);
const gchar* unity_track_metadata_get_artist (UnityTrackMetadata* self);
void unity_track_metadata_set_artist (UnityTrackMetadata* self,
                                      const gchar* value);
const gchar* unity_track_metadata_get_title (UnityTrackMetadata* self);
void unity_track_metadata_set_title (UnityTrackMetadata* self,
                                     const gchar* value);
const gchar* unity_track_metadata_get_album (UnityTrackMetadata* self);
void unity_track_metadata_set_album (UnityTrackMetadata* self,
                                     const gchar* value);
guint unity_track_metadata_get_length (UnityTrackMetadata* self);
void unity_track_metadata_set_length (UnityTrackMetadata* self,
                                      guint value);
GFile* unity_track_metadata_get_art_location (UnityTrackMetadata* self);
void unity_track_metadata_set_art_location (UnityTrackMetadata* self,
                                            GFile* value);
GIcon* unity_track_metadata_get_art_icon (UnityTrackMetadata* self);
void unity_track_metadata_set_art_icon (UnityTrackMetadata* self,
                                        GIcon* value);
GType unity_playlist_get_type (void) G_GNUC_CONST;
UnityPlaylist* unity_playlist_new (const gchar* id);
UnityPlaylist* unity_playlist_construct (GType object_type,
                                         const gchar* id);
const gchar* unity_playlist_get_id (UnityPlaylist* self);
const gchar* unity_playlist_get_name (UnityPlaylist* self);
void unity_playlist_set_name (UnityPlaylist* self,
                              const gchar* value);
GIcon* unity_playlist_get_icon (UnityPlaylist* self);
void unity_playlist_set_icon (UnityPlaylist* self,
                              GIcon* value);
GDateTime* unity_playlist_get_creation_date (UnityPlaylist* self);
void unity_playlist_set_creation_date (UnityPlaylist* self,
                                       GDateTime* value);
GDateTime* unity_playlist_get_modification_date (UnityPlaylist* self);
void unity_playlist_set_modification_date (UnityPlaylist* self,
                                           GDateTime* value);
GDateTime* unity_playlist_get_last_play_date (UnityPlaylist* self);
void unity_playlist_set_last_play_date (UnityPlaylist* self,
                                        GDateTime* value);
GType unity_playback_state_get_type (void) G_GNUC_CONST;
GType unity_music_player_get_type (void) G_GNUC_CONST;
UnityMusicPlayer* unity_music_player_new (const gchar* desktop);
UnityMusicPlayer* unity_music_player_construct (GType object_type,
                                                const gchar* desktop);
void unity_music_player_export (UnityMusicPlayer* self);
void unity_music_player_unexport (UnityMusicPlayer* self);
gboolean unity_music_player_add_playlist (UnityMusicPlayer* self,
                                          UnityPlaylist* p);
gboolean unity_music_player_remove_playlist (UnityMusicPlayer* self,
                                             UnityPlaylist* p);
UnityPlaylist** unity_music_player_get_playlists (UnityMusicPlayer* self,
                                                  int* result_length1);
void unity_music_player_edit_playlist_name (UnityMusicPlayer* self,
                                            const gchar* id,
                                            const gchar* name);
GAppInfo* unity_music_player_get_app_info (UnityMusicPlayer* self);
const gchar* unity_music_player_get_desktop_file_name (UnityMusicPlayer* self);
gboolean unity_music_player_get_is_blacklisted (UnityMusicPlayer* self);
void unity_music_player_set_is_blacklisted (UnityMusicPlayer* self,
                                            gboolean value);
const gchar* unity_music_player_get_title (UnityMusicPlayer* self);
void unity_music_player_set_title (UnityMusicPlayer* self,
                                   const gchar* value);
gboolean unity_music_player_get_can_go_next (UnityMusicPlayer* self);
void unity_music_player_set_can_go_next (UnityMusicPlayer* self,
                                         gboolean value);
gboolean unity_music_player_get_can_go_previous (UnityMusicPlayer* self);
void unity_music_player_set_can_go_previous (UnityMusicPlayer* self,
                                             gboolean value);
gboolean unity_music_player_get_can_play (UnityMusicPlayer* self);
void unity_music_player_set_can_play (UnityMusicPlayer* self,
                                      gboolean value);
gboolean unity_music_player_get_can_pause (UnityMusicPlayer* self);
void unity_music_player_set_can_pause (UnityMusicPlayer* self,
                                       gboolean value);
UnityTrackMetadata* unity_music_player_get_current_track (UnityMusicPlayer* self);
void unity_music_player_set_current_track (UnityMusicPlayer* self,
                                           UnityTrackMetadata* value);
UnityPlaybackState unity_music_player_get_playback_state (UnityMusicPlayer* self);
void unity_music_player_set_playback_state (UnityMusicPlayer* self,
                                            UnityPlaybackState value);
UnityPlaylist* unity_music_player_get_current_playlist (UnityMusicPlayer* self);
void unity_music_player_set_current_playlist (UnityMusicPlayer* self,
                                              UnityPlaylist* value);
DbusmenuMenuitem* unity_music_player_get_track_menu (UnityMusicPlayer* self);
void unity_music_player_set_track_menu (UnityMusicPlayer* self,
                                        DbusmenuMenuitem* value);
DbusmenuMenuitem* unity_music_player_get_player_menu (UnityMusicPlayer* self);
void unity_music_player_set_player_menu (UnityMusicPlayer* self,
                                         DbusmenuMenuitem* value);
#define UNITY_MPRIS_INTERFACE_ROOT_PATH "/org/mpris/MediaPlayer2"
#define UNITY_MPRIS_INTERFACE_ROOT "org.mpris.MediaPlayer2"
#define UNITY_MPRIS_INTERFACE_PREFIX "org.mpris.MediaPlayer2."
#define UNITY_MPRIS_INTERFACE_PLAYER "org.mpris.MediaPlayer2.Player"
#define UNITY_MPRIS_INTERFACE_PLAYLISTS "org.mpris.MediaPlayer2.Playlists"
GType unity_mpris_gateway_get_type (void) G_GNUC_CONST;
UnityMPRISGateway* unity_mpris_gateway_new (UnityMusicPlayer* client);
UnityMPRISGateway* unity_mpris_gateway_construct (GType object_type,
                                                  UnityMusicPlayer* client);
void unity_mpris_gateway_export (UnityMPRISGateway* self);
void unity_mpris_gateway_unexport (UnityMPRISGateway* self);
void unity_mpris_gateway_ensure_playlist_interface_is_raised (UnityMPRISGateway* self);
UnityMusicPlayer* unity_mpris_gateway_get_consumer (UnityMPRISGateway* self);
UnityPlaylist* unity_mpris_gateway_get_edited_playlist (UnityMPRISGateway* self);
void unity_mpris_gateway_set_edited_playlist (UnityMPRISGateway* self,
                                              UnityPlaylist* value);
gint unity_mpris_gateway_get_playlist_count (UnityMPRISGateway* self);
void unity_mpris_gateway_set_playlist_count (UnityMPRISGateway* self,
                                             gint value);
GType unity_specific_item_manager_get_type (void) G_GNUC_CONST;
UnitySpecificItemManager* unity_specific_item_manager_new (UnityMusicPlayer* client);
UnitySpecificItemManager* unity_specific_item_manager_construct (GType object_type,
                                                                 UnityMusicPlayer* client);
UnityMusicPlayer* unity_specific_item_manager_get_consumer (UnitySpecificItemManager* self);
GType unity_property_update_manager_get_type (void) G_GNUC_CONST;
UnityPropertyUpdateManager* unity_property_update_manager_new (GDBusConnection* conn);
UnityPropertyUpdateManager* unity_property_update_manager_construct (GType object_type,
                                                                     GDBusConnection* conn);
void unity_property_update_manager_queue_property_update (UnityPropertyUpdateManager* self,
                                                          const gchar* prop_name,
                                                          GVariant* update,
                                                          const gchar* interface_name);
void unity_property_update_manager_emit_dbus_signal (UnityPropertyUpdateManager* self,
                                                     const gchar* interface_name,
                                                     const gchar* signal_name,
                                                     GVariant* payload);
GDBusConnection* unity_property_update_manager_get_connection (UnityPropertyUpdateManager* self);
GType unity_blacklist_manager_get_type (void) G_GNUC_CONST;
UnityBlacklistManager* unity_blacklist_manager_new (UnityMusicPlayer* client);
UnityBlacklistManager* unity_blacklist_manager_construct (GType object_type,
                                                          UnityMusicPlayer* client);
gboolean unity_blacklist_manager_check_presence (UnityBlacklistManager* self);
GType unity_sound_service_interface_proxy_get_type (void) G_GNUC_CONST;
guint unity_sound_service_interface_register_object (void* object,
                                                     GDBusConnection* connection,
                                                     const gchar* path,
                                                     GError** error);
GType unity_sound_service_interface_get_type (void) G_GNUC_CONST;
void unity_sound_service_interface_EnableTrackSpecificItems (UnitySoundServiceInterface* self,
                                                             const char* object_path,
                                                             const gchar* desktop_id,
                                                             GAsyncReadyCallback _callback_,
                                                             gpointer _user_data_);
void unity_sound_service_interface_EnableTrackSpecificItems_finish (UnitySoundServiceInterface* self,
                                                                    GAsyncResult* _res_,
                                                                    GError** error);
void unity_sound_service_interface_EnablePlayerSpecificItems (UnitySoundServiceInterface* self,
                                                              const char* object_path,
                                                              const gchar* desktop_id,
                                                              GAsyncReadyCallback _callback_,
                                                              gpointer _user_data_);
void unity_sound_service_interface_EnablePlayerSpecificItems_finish (UnitySoundServiceInterface* self,
                                                                     GAsyncResult* _res_,
                                                                     GError** error);
GType unity_mpris_root_get_type (void) G_GNUC_CONST;
guint unity_mpris_root_register_object (void* object,
                                        GDBusConnection* connection,
                                        const gchar* path,
                                        GError** error);
UnityMprisRoot* unity_mpris_root_new (UnityMusicPlayer* client,
                                      UnityPropertyUpdateManager* prop_mgr);
UnityMprisRoot* unity_mpris_root_construct (GType object_type,
                                            UnityMusicPlayer* client,
                                            UnityPropertyUpdateManager* prop_mgr);
void unity_mpris_root_raise (UnityMprisRoot* self,
                             GAsyncReadyCallback _callback_,
                             gpointer _user_data_);
void unity_mpris_root_raise_finish (UnityMprisRoot* self,
                                    GAsyncResult* _res_,
                                    GError** error);
gboolean unity_mpris_root_get_has_tracklist (UnityMprisRoot* self);
gboolean unity_mpris_root_get_can_quit (UnityMprisRoot* self);
gboolean unity_mpris_root_get_can_raise (UnityMprisRoot* self);
const gchar* unity_mpris_root_get_identity (UnityMprisRoot* self);
const gchar* unity_mpris_root_get_desktop_entry (UnityMprisRoot* self);
GType unity_mpris_player_get_type (void) G_GNUC_CONST;
guint unity_mpris_player_register_object (void* object,
                                          GDBusConnection* connection,
                                          const gchar* path,
                                          GError** error);
UnityMprisPlayer* unity_mpris_player_new (UnityMusicPlayer* client,
                                          UnityPropertyUpdateManager* prop_mgr);
UnityMprisPlayer* unity_mpris_player_construct (GType object_type,
                                                UnityMusicPlayer* client,
                                                UnityPropertyUpdateManager* prop_mgr);
void unity_mpris_player_on_metadata_update (UnityMprisPlayer* self,
                                            GParamSpec* pspec);
void unity_mpris_player_play_pause (UnityMprisPlayer* self,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_);
void unity_mpris_player_play_pause_finish (UnityMprisPlayer* self,
                                           GAsyncResult* _res_,
                                           GError** error);
void unity_mpris_player_next (UnityMprisPlayer* self,
                              GAsyncReadyCallback _callback_,
                              gpointer _user_data_);
void unity_mpris_player_next_finish (UnityMprisPlayer* self,
                                     GAsyncResult* _res_,
                                     GError** error);
void unity_mpris_player_previous (UnityMprisPlayer* self,
                                  GAsyncReadyCallback _callback_,
                                  gpointer _user_data_);
void unity_mpris_player_previous_finish (UnityMprisPlayer* self,
                                         GAsyncResult* _res_,
                                         GError** error);
GHashTable* unity_mpris_player_get_metadata (UnityMprisPlayer* self);
const gchar* unity_mpris_player_get_playback_status (UnityMprisPlayer* self);
gboolean unity_mpris_player_get_can_control (UnityMprisPlayer* self);
gboolean unity_mpris_player_get_can_go_next (UnityMprisPlayer* self);
gboolean unity_mpris_player_get_can_go_previous (UnityMprisPlayer* self);
gboolean unity_mpris_player_get_can_play (UnityMprisPlayer* self);
gboolean unity_mpris_player_get_can_pause (UnityMprisPlayer* self);
GType unity_playlist_details_get_type (void) G_GNUC_CONST;
UnityPlaylistDetails* unity_playlist_details_dup (const UnityPlaylistDetails* self);
void unity_playlist_details_free (UnityPlaylistDetails* self);
void unity_playlist_details_copy (const UnityPlaylistDetails* self,
                                  UnityPlaylistDetails* dest);
void unity_playlist_details_destroy (UnityPlaylistDetails* self);
GType unity_active_playlist_container_get_type (void) G_GNUC_CONST;
UnityActivePlaylistContainer* unity_active_playlist_container_dup (const UnityActivePlaylistContainer* self);
void unity_active_playlist_container_free (UnityActivePlaylistContainer* self);
void unity_active_playlist_container_copy (const UnityActivePlaylistContainer* self,
                                           UnityActivePlaylistContainer* dest);
void unity_active_playlist_container_destroy (UnityActivePlaylistContainer* self);
GType unity_mpris_playlists_get_type (void) G_GNUC_CONST;
guint unity_mpris_playlists_register_object (void* object,
                                             GDBusConnection* connection,
                                             const gchar* path,
                                             GError** error);
UnityMprisPlaylists* unity_mpris_playlists_new (UnityMusicPlayer* consumer,
                                                UnityPropertyUpdateManager* prop_mgr,
                                                UnityMPRISGateway* gw);
UnityMprisPlaylists* unity_mpris_playlists_construct (GType object_type,
                                                      UnityMusicPlayer* consumer,
                                                      UnityPropertyUpdateManager* prop_mgr,
                                                      UnityMPRISGateway* gw);
void unity_mpris_playlists_activate_playlist (UnityMprisPlaylists* self,
                                              const char* playlist_id,
                                              GAsyncReadyCallback _callback_,
                                              gpointer _user_data_);
void unity_mpris_playlists_activate_playlist_finish (UnityMprisPlaylists* self,
                                                     GAsyncResult* _res_,
                                                     GError** error);
void unity_mpris_playlists_get_playlists (UnityMprisPlaylists* self,
                                          guint32 index,
                                          guint32 max_count,
                                          const gchar* order,
                                          gboolean reverse_order,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
UnityPlaylistDetails* unity_mpris_playlists_get_playlists_finish (UnityMprisPlaylists* self,
                                                                  GAsyncResult* _res_,
                                                                  int* result_length1,
                                                                  GError** error);
gchar** unity_mpris_playlists_get_orderings (UnityMprisPlaylists* self,
                                             int* result_length1);
guint32 unity_mpris_playlists_get_playlist_count (UnityMprisPlaylists* self);
void unity_mpris_playlists_get_active_playlist (UnityMprisPlaylists* self,
                                                UnityActivePlaylistContainer * result);
void unity_object_unref (void* object);
GType unity_internal_category_column_get_type (void) G_GNUC_CONST;
GType unity_internal_filter_column_get_type (void) G_GNUC_CONST;
GType unity_internal_result_column_get_type (void) G_GNUC_CONST;
#define UNITY_INTERNAL_VAR_MEASURED_SEARCHES "LIBUNITY_TIME_SEARCHES"
#define UNITY_INTERNAL_VAR_SYNC_DBUS_SEARCHES "LIBUNITY_SYNC_DBUS"
#define UNITY_INTERNAL_SEARCH_FILTER_ROW_HINT "changed-filter-row"
#define UNITY_INTERNAL_SEARCH_SEQNUM_HINT "model-seqnum"
#define UNITY_INTERNAL_SEARCH_TIME_HINT "search-time"
#define UNITY_INTERNAL_SEARCH_SUBSCOPES_HINT "subscopes-filter"
#define UNITY_INTERNAL_SEARCH_NO_RESULTS_HINT "no-results-hint"
#define UNITY_INTERNAL_ACTIVATE_PREVIEW_ACTION_HINT "preview-action-id"
void unity_internal_utils_delegate_wrapper_free (UnityInternalUtilsDelegateWrapper * self);
UnityInternalUtilsDelegateWrapper* unity_internal_utils_delegate_wrapper_new (GSourceFunc cb,
                                                                              gpointer cb_target,
                                                                              GDestroyNotify cb_target_destroy_notify);
gpointer unity_internal_utils_async_once_ref (gpointer instance);
void unity_internal_utils_async_once_unref (gpointer instance);
GParamSpec* unity_internal_utils_param_spec_async_once (const gchar* name,
                                                        const gchar* nick,
                                                        const gchar* blurb,
                                                        GType object_type,
                                                        GParamFlags flags);
void unity_internal_utils_value_set_async_once (GValue* value,
                                                gpointer v_object);
void unity_internal_utils_value_take_async_once (GValue* value,
                                                 gpointer v_object);
gpointer unity_internal_utils_value_get_async_once (const GValue* value);
GType unity_internal_utils_async_once_get_type (void) G_GNUC_CONST;
UnityInternalUtilsAsyncOnce* unity_internal_utils_async_once_new (GType g_type,
                                                                  GBoxedCopyFunc g_dup_func,
                                                                  GDestroyNotify g_destroy_func);
UnityInternalUtilsAsyncOnce* unity_internal_utils_async_once_construct (GType object_type,
                                                                        GType g_type,
                                                                        GBoxedCopyFunc g_dup_func,
                                                                        GDestroyNotify g_destroy_func);
gconstpointer unity_internal_utils_async_once_get_data (UnityInternalUtilsAsyncOnce* self);
gboolean unity_internal_utils_async_once_is_initialized (UnityInternalUtilsAsyncOnce* self);
void unity_internal_utils_async_once_enter (UnityInternalUtilsAsyncOnce* self,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_);
gboolean unity_internal_utils_async_once_enter_finish (UnityInternalUtilsAsyncOnce* self,
                                                       GAsyncResult* _res_);
void unity_internal_utils_async_once_leave (UnityInternalUtilsAsyncOnce* self,
                                            gconstpointer _result_);
void unity_internal_utils_async_once_reset (UnityInternalUtilsAsyncOnce* self);
UnityInternalUtilsAsyncMutex* unity_internal_utils_async_mutex_new (void);
UnityInternalUtilsAsyncMutex* unity_internal_utils_async_mutex_construct (GType object_type);
gboolean unity_internal_utils_async_mutex_try_lock (UnityInternalUtilsAsyncMutex* self);
void unity_internal_utils_async_mutex_lock (UnityInternalUtilsAsyncMutex* self,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_);
void unity_internal_utils_async_mutex_lock_finish (UnityInternalUtilsAsyncMutex* self,
                                                   GAsyncResult* _res_);
void unity_internal_utils_async_mutex_unlock (UnityInternalUtilsAsyncMutex* self);
void unity_internal_utils_wait_for_model_synchronization (DeeSharedModel* model,
                                                          GAsyncReadyCallback _callback_,
                                                          gpointer _user_data_);
void unity_internal_utils_wait_for_model_synchronization_finish (GAsyncResult* _res_);
GVariant* unity_internal_utils_hash_table_to_asv (GHashTable* hash);
gchar* unity_internal_utils_icon_to_string (GIcon* icon);
GType unity_internal_utils_diff_context_get_type (void) G_GNUC_CONST;
UnityInternalUtilsDiffContext* unity_internal_utils_diff_context_dup (const UnityInternalUtilsDiffContext* self);
void unity_internal_utils_diff_context_free (UnityInternalUtilsDiffContext* self);
void unity_internal_utils_diff_context_copy (const UnityInternalUtilsDiffContext* self,
                                             UnityInternalUtilsDiffContext* dest);
void unity_internal_utils_diff_context_destroy (UnityInternalUtilsDiffContext* self);
GType unity_internal_utils_diff_partition_get_type (void) G_GNUC_CONST;
UnityInternalUtilsDiffPartition* unity_internal_utils_diff_partition_dup (const UnityInternalUtilsDiffPartition* self);
void unity_internal_utils_diff_partition_free (UnityInternalUtilsDiffPartition* self);
GType unity_internal_utils_diff_change_get_type (void) G_GNUC_CONST;
UnityInternalUtilsDiffChange* unity_internal_utils_diff_change_dup (const UnityInternalUtilsDiffChange* self);
void unity_internal_utils_diff_change_free (UnityInternalUtilsDiffChange* self);
GSList* unity_internal_utils_diff_run (gint x_set_length,
                                       gint y_set_length,
                                       UnityInternalUtilsDiffResultSetCompareFunc cmp_func,
                                       gpointer cmp_func_target);
GSList* unity_internal_utils_diff_build_edit_script (UnityInternalUtilsDiffContext* ctx);
void unity_internal_utils_diff_find_diag (gint x_offset,
                                          gint x_limit,
                                          gint y_offset,
                                          gint y_limit,
                                          UnityInternalUtilsDiffResultSetCompareFunc equal_func,
                                          gpointer equal_func_target,
                                          UnityInternalUtilsDiffContext* ctx,
                                          UnityInternalUtilsDiffPartition* partition);
gboolean unity_internal_utils_diff_compare_sequences (gint x_offset,
                                                      gint x_limit,
                                                      gint y_offset,
                                                      gint y_limit,
                                                      gboolean find_minimal,
                                                      UnityInternalUtilsDiffContext* ctx,
                                                      UnityInternalUtilsDiffResultSetCompareFunc equal_func,
                                                      gpointer equal_func_target);

extern const gchar* UNITY_INTERNAL_CATEGORIES_SCHEMA[5];
extern const gchar* UNITY_INTERNAL_FILTERS_SCHEMA[8];
extern const gchar* UNITY_INTERNAL_RESULTS_SCHEMA[9];
extern const gchar* UNITY_INTERNAL_RESULTS_COLUMN_NAMES[9];

G_END_DECLS

#endif
