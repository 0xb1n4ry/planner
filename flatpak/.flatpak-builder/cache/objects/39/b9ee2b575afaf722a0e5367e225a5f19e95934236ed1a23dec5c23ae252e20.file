/* utils.c generated by valac 0.40.11, the Vala compiler
 * generated from utils.vala, do not modify */

/*
 * Copyright (C) 2010 Collabora Ltd.
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors:
 *       Philip Withnall <philip.withnall@collabora.co.uk>
 */


#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include <gee.h>
#include <folks/folks.h>
#include <stdarg.h>
#include <gio/gio.h>
#include <gobject/gvaluecollector.h>


#define FOLKS_INSPECT_TYPE_UTILS (folks_inspect_utils_get_type ())
#define FOLKS_INSPECT_UTILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_TYPE_UTILS, FolksInspectUtils))
#define FOLKS_INSPECT_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_TYPE_UTILS, FolksInspectUtilsClass))
#define FOLKS_INSPECT_IS_UTILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_TYPE_UTILS))
#define FOLKS_INSPECT_IS_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_TYPE_UTILS))
#define FOLKS_INSPECT_UTILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_TYPE_UTILS, FolksInspectUtilsClass))

typedef struct _FolksInspectUtils FolksInspectUtils;
typedef struct _FolksInspectUtilsClass FolksInspectUtilsClass;
typedef struct _FolksInspectUtilsPrivate FolksInspectUtilsPrivate;

#define FOLKS_INSPECT_TYPE_COMMAND (folks_inspect_command_get_type ())
#define FOLKS_INSPECT_COMMAND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommand))
#define FOLKS_INSPECT_COMMAND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommandClass))
#define FOLKS_INSPECT_IS_COMMAND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_TYPE_COMMAND))
#define FOLKS_INSPECT_IS_COMMAND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_TYPE_COMMAND))
#define FOLKS_INSPECT_COMMAND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommandClass))

typedef struct _FolksInspectCommand FolksInspectCommand;
typedef struct _FolksInspectCommandClass FolksInspectCommandClass;
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define FOLKS_INSPECT_TYPE_CLIENT (folks_inspect_client_get_type ())
#define FOLKS_INSPECT_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClient))
#define FOLKS_INSPECT_CLIENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClientClass))
#define FOLKS_INSPECT_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_TYPE_CLIENT))
#define FOLKS_INSPECT_IS_CLIENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_TYPE_CLIENT))
#define FOLKS_INSPECT_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClientClass))

typedef struct _FolksInspectClient FolksInspectClient;
typedef struct _FolksInspectClientClass FolksInspectClientClass;
typedef struct _FolksInspectClientPrivate FolksInspectClientPrivate;
typedef struct _FolksInspectParamSpecUtils FolksInspectParamSpecUtils;
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _FolksInspectUtils {
	GTypeInstance parent_instance;
	volatile int ref_count;
	FolksInspectUtilsPrivate * priv;
};

struct _FolksInspectUtilsClass {
	GTypeClass parent_class;
	void (*finalize) (FolksInspectUtils *self);
};

struct _FolksInspectClient {
	GObject parent_instance;
	FolksInspectClientPrivate * priv;
	GeeHashMap* commands;
};

struct _FolksInspectClientClass {
	GObjectClass parent_class;
};

struct _FolksInspectParamSpecUtils {
	GParamSpec parent_instance;
};


static gpointer folks_inspect_utils_parent_class = NULL;
static guint folks_inspect_utils_indentation;
static guint folks_inspect_utils_indentation = (guint) 0;
static gchar* folks_inspect_utils_indentation_string;
static gchar* folks_inspect_utils_indentation_string = NULL;
extern FILE* folks_inspect_utils_output_filestream;
FILE* folks_inspect_utils_output_filestream = NULL;
static GeeMapIterator* folks_inspect_utils_command_name_iter;
static GeeMapIterator* folks_inspect_utils_command_name_iter = NULL;
static GeeMapIterator* folks_inspect_utils_individual_id_iter;
static GeeMapIterator* folks_inspect_utils_individual_id_iter = NULL;
static GeeIterator* folks_inspect_utils_persona_uid_iter;
static GeeIterator* folks_inspect_utils_persona_uid_iter = NULL;
static GeeIterator* folks_inspect_utils_backend_name_iter;
static GeeIterator* folks_inspect_utils_backend_name_iter = NULL;
static GeeMapIterator* folks_inspect_utils_persona_store_id_iter;
static GeeMapIterator* folks_inspect_utils_persona_store_id_iter = NULL;
extern FolksInspectClient* main_client;

gpointer folks_inspect_utils_ref (gpointer instance);
void folks_inspect_utils_unref (gpointer instance);
GParamSpec* folks_inspect_param_spec_utils (const gchar* name,
                                            const gchar* nick,
                                            const gchar* blurb,
                                            GType object_type,
                                            GParamFlags flags);
void folks_inspect_value_set_utils (GValue* value,
                                    gpointer v_object);
void folks_inspect_value_take_utils (GValue* value,
                                     gpointer v_object);
gpointer folks_inspect_value_get_utils (const GValue* value);
GType folks_inspect_utils_get_type (void) G_GNUC_CONST;
gpointer folks_inspect_command_ref (gpointer instance);
void folks_inspect_command_unref (gpointer instance);
GParamSpec* folks_inspect_param_spec_command (const gchar* name,
                                              const gchar* nick,
                                              const gchar* blurb,
                                              GType object_type,
                                              GParamFlags flags);
void folks_inspect_value_set_command (GValue* value,
                                      gpointer v_object);
void folks_inspect_value_take_command (GValue* value,
                                       gpointer v_object);
gpointer folks_inspect_value_get_command (const GValue* value);
GType folks_inspect_command_get_type (void) G_GNUC_CONST;
void folks_inspect_utils_init (void);
static void folks_inspect_utils_transform_object_to_string (GValue* src,
                                                     GValue* dest);
static void _folks_inspect_utils_transform_object_to_string_gvalue_transform (GValue* src_value,
                                                                       GValue* dest_value);
static void folks_inspect_utils_transform_persona_store_to_string (GValue* src,
                                                            GValue* dest);
static void _folks_inspect_utils_transform_persona_store_to_string_gvalue_transform (GValue* src_value,
                                                                              GValue* dest_value);
static void folks_inspect_utils_transform_string_array_to_string (GValue* src,
                                                           GValue* dest);
static void _folks_inspect_utils_transform_string_array_to_string_gvalue_transform (GValue* src_value,
                                                                             GValue* dest_value);
static void folks_inspect_utils_transform_date_time_to_string (GValue* src,
                                                        GValue* dest);
static void _folks_inspect_utils_transform_date_time_to_string_gvalue_transform (GValue* src_value,
                                                                          GValue* dest_value);
void folks_inspect_utils_indent (void);
void folks_inspect_utils_unindent (void);
void folks_inspect_utils_print_line (const gchar* format,
                                     ...) G_GNUC_PRINTF(1,2);
void folks_inspect_utils_print_blank_line (void);
void folks_inspect_utils_print_individual (FolksIndividual* individual,
                                           gboolean show_personas);
static gchar* folks_inspect_utils_property_to_string (GType object_type,
                                               const gchar* prop_name,
                                               GValue* prop_value);
void folks_inspect_utils_print_persona (FolksPersona* persona);
void folks_inspect_utils_print_persona_store (FolksPersonaStore* store,
                                              gboolean show_personas);
gchar* folks_inspect_utils_transform_value_to_string (GValue* prop_value);
gchar* folks_inspect_utils_command_name_completion_cb (const gchar* word,
                                                       gint state);
GType folks_inspect_client_get_type (void) G_GNUC_CONST;
gchar* folks_inspect_utils_individual_id_completion_cb (const gchar* word,
                                                        gint state);
FolksIndividualAggregator* folks_inspect_client_get_aggregator (FolksInspectClient* self);
gchar* folks_inspect_utils_persona_uid_completion_cb (const gchar* word,
                                                      gint state);
gchar* folks_inspect_utils_backend_name_completion_cb (const gchar* word,
                                                       gint state);
FolksBackendStore* folks_inspect_client_get_backend_store (FolksInspectClient* self);
gchar* folks_inspect_utils_persona_store_id_completion_cb (const gchar* word,
                                                           gint state);
gboolean folks_inspect_utils_validate_subcommand (const gchar* command,
                                                  const gchar* command_string,
                                                  const gchar* subcommand,
                                                  gchar** valid_subcommands,
                                                  int valid_subcommands_length1);
static gboolean _vala_string_array_contains (gchar* * stack,
                                      int stack_length,
                                      gchar* needle);
FolksInspectUtils* folks_inspect_utils_new (void);
FolksInspectUtils* folks_inspect_utils_construct (GType object_type);
static void folks_inspect_utils_finalize (FolksInspectUtils * obj);


static void
_folks_inspect_utils_transform_object_to_string_gvalue_transform (GValue* src_value,
                                                                  GValue* dest_value)
{
#line 41 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_transform_object_to_string (src_value, dest_value);
#line 211 "utils.c"
}


static void
_folks_inspect_utils_transform_persona_store_to_string_gvalue_transform (GValue* src_value,
                                                                         GValue* dest_value)
{
#line 43 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_transform_persona_store_to_string (src_value, dest_value);
#line 221 "utils.c"
}


static void
_folks_inspect_utils_transform_string_array_to_string_gvalue_transform (GValue* src_value,
                                                                        GValue* dest_value)
{
#line 45 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_transform_string_array_to_string (src_value, dest_value);
#line 231 "utils.c"
}


static void
_folks_inspect_utils_transform_date_time_to_string_gvalue_transform (GValue* src_value,
                                                                     GValue* dest_value)
{
#line 47 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_transform_date_time_to_string (src_value, dest_value);
#line 241 "utils.c"
}


void
folks_inspect_utils_init (void)
{
	gchar* _tmp0_;
	FILE* _tmp1_;
#line 36 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = g_strdup ("");
#line 36 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (folks_inspect_utils_indentation_string);
#line 36 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indentation_string = _tmp0_;
#line 37 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indentation = (guint) 0;
#line 38 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = stdout;
#line 38 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_output_filestream = _tmp1_;
#line 41 "/run/build/folks/tools/inspect/utils.vala"
	g_value_register_transform_func (G_TYPE_OBJECT, G_TYPE_STRING, _folks_inspect_utils_transform_object_to_string_gvalue_transform);
#line 43 "/run/build/folks/tools/inspect/utils.vala"
	g_value_register_transform_func (FOLKS_TYPE_PERSONA_STORE, G_TYPE_STRING, _folks_inspect_utils_transform_persona_store_to_string_gvalue_transform);
#line 45 "/run/build/folks/tools/inspect/utils.vala"
	g_value_register_transform_func (G_TYPE_STRV, G_TYPE_STRING, _folks_inspect_utils_transform_string_array_to_string_gvalue_transform);
#line 47 "/run/build/folks/tools/inspect/utils.vala"
	g_value_register_transform_func (G_TYPE_DATE_TIME, G_TYPE_STRING, _folks_inspect_utils_transform_date_time_to_string_gvalue_transform);
#line 270 "utils.c"
}


static void
folks_inspect_utils_transform_object_to_string (GValue* src,
                                                GValue* dest)
{
	GValue _vala_dest = {0};
	gchar* output = NULL;
	GObject* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	GValue _tmp3_ = {0};
#line 51 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (src != NULL);
#line 54 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = g_value_get_object (src);
#line 54 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = g_strdup_printf ("%p", _tmp0_);
#line 54 "/run/build/folks/tools/inspect/utils.vala"
	output = _tmp1_;
#line 55 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = output;
#line 55 "/run/build/folks/tools/inspect/utils.vala"
	output = NULL;
#line 55 "/run/build/folks/tools/inspect/utils.vala"
	g_value_init (&_tmp3_, G_TYPE_STRING);
#line 55 "/run/build/folks/tools/inspect/utils.vala"
	g_value_take_string (&_tmp3_, _tmp2_);
#line 55 "/run/build/folks/tools/inspect/utils.vala"
	G_IS_VALUE (&_vala_dest) ? (g_value_unset (&_vala_dest), NULL) : NULL;
#line 55 "/run/build/folks/tools/inspect/utils.vala"
	_vala_dest = _tmp3_;
#line 51 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (output);
#line 51 "/run/build/folks/tools/inspect/utils.vala"
	if (dest) {
#line 51 "/run/build/folks/tools/inspect/utils.vala"
		*dest = _vala_dest;
#line 310 "utils.c"
	} else {
#line 51 "/run/build/folks/tools/inspect/utils.vala"
		G_IS_VALUE (&_vala_dest) ? (g_value_unset (&_vala_dest), NULL) : NULL;
#line 314 "utils.c"
	}
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 61 "/run/build/folks/tools/inspect/utils.vala"
	return self ? g_object_ref (self) : NULL;
#line 324 "utils.c"
}


static void
folks_inspect_utils_transform_persona_store_to_string (GValue* src,
                                                       GValue* dest)
{
	GValue _vala_dest = {0};
	FolksPersonaStore* store = NULL;
	GValue _tmp0_;
	FolksPersonaStore* _tmp1_;
	gchar* output = NULL;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* _tmp9_;
	GValue _tmp10_ = {0};
#line 58 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (src != NULL);
#line 61 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = *src;
#line 61 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = _g_object_ref0 (g_value_get_object (&_tmp0_));
#line 61 "/run/build/folks/tools/inspect/utils.vala"
	store = _tmp1_;
#line 62 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = folks_persona_store_get_type_id (store);
#line 62 "/run/build/folks/tools/inspect/utils.vala"
	_tmp3_ = _tmp2_;
#line 62 "/run/build/folks/tools/inspect/utils.vala"
	_tmp4_ = folks_persona_store_get_id (store);
#line 62 "/run/build/folks/tools/inspect/utils.vala"
	_tmp5_ = _tmp4_;
#line 62 "/run/build/folks/tools/inspect/utils.vala"
	_tmp6_ = folks_persona_store_get_display_name (store);
#line 62 "/run/build/folks/tools/inspect/utils.vala"
	_tmp7_ = _tmp6_;
#line 62 "/run/build/folks/tools/inspect/utils.vala"
	_tmp8_ = g_strdup_printf ("%p: %s, %s (%s)", store, _tmp3_, _tmp5_, _tmp7_);
#line 62 "/run/build/folks/tools/inspect/utils.vala"
	output = _tmp8_;
#line 64 "/run/build/folks/tools/inspect/utils.vala"
	_tmp9_ = output;
#line 64 "/run/build/folks/tools/inspect/utils.vala"
	output = NULL;
#line 64 "/run/build/folks/tools/inspect/utils.vala"
	g_value_init (&_tmp10_, G_TYPE_STRING);
#line 64 "/run/build/folks/tools/inspect/utils.vala"
	g_value_take_string (&_tmp10_, _tmp9_);
#line 64 "/run/build/folks/tools/inspect/utils.vala"
	G_IS_VALUE (&_vala_dest) ? (g_value_unset (&_vala_dest), NULL) : NULL;
#line 64 "/run/build/folks/tools/inspect/utils.vala"
	_vala_dest = _tmp10_;
#line 58 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (output);
#line 58 "/run/build/folks/tools/inspect/utils.vala"
	_g_object_unref0 (store);
#line 58 "/run/build/folks/tools/inspect/utils.vala"
	if (dest) {
#line 58 "/run/build/folks/tools/inspect/utils.vala"
		*dest = _vala_dest;
#line 390 "utils.c"
	} else {
#line 58 "/run/build/folks/tools/inspect/utils.vala"
		G_IS_VALUE (&_vala_dest) ? (g_value_unset (&_vala_dest), NULL) : NULL;
#line 394 "utils.c"
	}
}


static void
folks_inspect_utils_transform_string_array_to_string (GValue* src,
                                                      GValue* dest)
{
	GValue _vala_dest = {0};
	gchar** array = NULL;
	GValue _tmp0_;
	gint array_length1;
	gint _array_size_;
	gchar* output = NULL;
	gchar* _tmp1_;
	gboolean first = FALSE;
	gchar** _tmp2_;
	gint _tmp2__length1;
	const gchar* _tmp12_;
	gchar* _tmp13_;
	gchar* _tmp14_;
	GValue _tmp15_ = {0};
#line 67 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (src != NULL);
#line 70 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = *src;
#line 70 "/run/build/folks/tools/inspect/utils.vala"
	array = g_value_get_boxed (&_tmp0_);
#line 70 "/run/build/folks/tools/inspect/utils.vala"
	array_length1 = g_strv_length (g_value_get_boxed (&_tmp0_));
#line 70 "/run/build/folks/tools/inspect/utils.vala"
	_array_size_ = array_length1;
#line 71 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = g_strdup ("{ ");
#line 71 "/run/build/folks/tools/inspect/utils.vala"
	output = _tmp1_;
#line 72 "/run/build/folks/tools/inspect/utils.vala"
	first = TRUE;
#line 73 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = array;
#line 73 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2__length1 = array_length1;
#line 437 "utils.c"
	{
		gchar** element_collection = NULL;
		gint element_collection_length1 = 0;
		gint _element_collection_size_ = 0;
		gint element_it = 0;
#line 73 "/run/build/folks/tools/inspect/utils.vala"
		element_collection = _tmp2_;
#line 73 "/run/build/folks/tools/inspect/utils.vala"
		element_collection_length1 = _tmp2__length1;
#line 73 "/run/build/folks/tools/inspect/utils.vala"
		for (element_it = 0; element_it < _tmp2__length1; element_it = element_it + 1) {
#line 449 "utils.c"
			gchar* _tmp3_;
			gchar* element = NULL;
#line 73 "/run/build/folks/tools/inspect/utils.vala"
			_tmp3_ = g_strdup (element_collection[element_it]);
#line 73 "/run/build/folks/tools/inspect/utils.vala"
			element = _tmp3_;
#line 456 "utils.c"
			{
				gboolean _tmp4_;
				const gchar* _tmp7_;
				const gchar* _tmp8_;
				gchar* _tmp9_;
				gchar* _tmp10_;
				gchar* _tmp11_;
#line 75 "/run/build/folks/tools/inspect/utils.vala"
				_tmp4_ = first;
#line 75 "/run/build/folks/tools/inspect/utils.vala"
				if (_tmp4_ == FALSE) {
#line 468 "utils.c"
					const gchar* _tmp5_;
					gchar* _tmp6_;
#line 76 "/run/build/folks/tools/inspect/utils.vala"
					_tmp5_ = output;
#line 76 "/run/build/folks/tools/inspect/utils.vala"
					_tmp6_ = g_strconcat (_tmp5_, ", ", NULL);
#line 76 "/run/build/folks/tools/inspect/utils.vala"
					_g_free0 (output);
#line 76 "/run/build/folks/tools/inspect/utils.vala"
					output = _tmp6_;
#line 479 "utils.c"
				}
#line 77 "/run/build/folks/tools/inspect/utils.vala"
				_tmp7_ = output;
#line 77 "/run/build/folks/tools/inspect/utils.vala"
				_tmp8_ = element;
#line 77 "/run/build/folks/tools/inspect/utils.vala"
				_tmp9_ = g_strdup_printf ("'%s'", _tmp8_);
#line 77 "/run/build/folks/tools/inspect/utils.vala"
				_tmp10_ = _tmp9_;
#line 77 "/run/build/folks/tools/inspect/utils.vala"
				_tmp11_ = g_strconcat (_tmp7_, _tmp10_, NULL);
#line 77 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output);
#line 77 "/run/build/folks/tools/inspect/utils.vala"
				output = _tmp11_;
#line 77 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (_tmp10_);
#line 78 "/run/build/folks/tools/inspect/utils.vala"
				first = FALSE;
#line 73 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (element);
#line 501 "utils.c"
			}
		}
	}
#line 80 "/run/build/folks/tools/inspect/utils.vala"
	_tmp12_ = output;
#line 80 "/run/build/folks/tools/inspect/utils.vala"
	_tmp13_ = g_strconcat (_tmp12_, " }", NULL);
#line 80 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (output);
#line 80 "/run/build/folks/tools/inspect/utils.vala"
	output = _tmp13_;
#line 81 "/run/build/folks/tools/inspect/utils.vala"
	_tmp14_ = output;
#line 81 "/run/build/folks/tools/inspect/utils.vala"
	output = NULL;
#line 81 "/run/build/folks/tools/inspect/utils.vala"
	g_value_init (&_tmp15_, G_TYPE_STRING);
#line 81 "/run/build/folks/tools/inspect/utils.vala"
	g_value_take_string (&_tmp15_, _tmp14_);
#line 81 "/run/build/folks/tools/inspect/utils.vala"
	G_IS_VALUE (&_vala_dest) ? (g_value_unset (&_vala_dest), NULL) : NULL;
#line 81 "/run/build/folks/tools/inspect/utils.vala"
	_vala_dest = _tmp15_;
#line 67 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (output);
#line 67 "/run/build/folks/tools/inspect/utils.vala"
	if (dest) {
#line 67 "/run/build/folks/tools/inspect/utils.vala"
		*dest = _vala_dest;
#line 531 "utils.c"
	} else {
#line 67 "/run/build/folks/tools/inspect/utils.vala"
		G_IS_VALUE (&_vala_dest) ? (g_value_unset (&_vala_dest), NULL) : NULL;
#line 535 "utils.c"
	}
}


static void
folks_inspect_utils_transform_date_time_to_string (GValue* src,
                                                   GValue* dest)
{
	GValue _vala_dest = {0};
	GDateTime* date_time = NULL;
	GValue _tmp0_;
	gchar* output = NULL;
	gchar* _tmp1_;
	GDateTime* _tmp2_;
	gchar* _tmp5_;
	GValue _tmp6_ = {0};
#line 84 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (src != NULL);
#line 86 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = *src;
#line 86 "/run/build/folks/tools/inspect/utils.vala"
	date_time = g_value_get_boxed (&_tmp0_);
#line 87 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = g_strdup ("(null)");
#line 87 "/run/build/folks/tools/inspect/utils.vala"
	output = _tmp1_;
#line 88 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = date_time;
#line 88 "/run/build/folks/tools/inspect/utils.vala"
	if (_tmp2_ != NULL) {
#line 566 "utils.c"
		GDateTime* _tmp3_;
		gchar* _tmp4_;
#line 90 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = date_time;
#line 90 "/run/build/folks/tools/inspect/utils.vala"
		_tmp4_ = g_date_time_format ((GDateTime*) _tmp3_, "%FT%T%z");
#line 90 "/run/build/folks/tools/inspect/utils.vala"
		_g_free0 (output);
#line 90 "/run/build/folks/tools/inspect/utils.vala"
		output = _tmp4_;
#line 577 "utils.c"
	}
#line 93 "/run/build/folks/tools/inspect/utils.vala"
	_tmp5_ = output;
#line 93 "/run/build/folks/tools/inspect/utils.vala"
	output = NULL;
#line 93 "/run/build/folks/tools/inspect/utils.vala"
	g_value_init (&_tmp6_, G_TYPE_STRING);
#line 93 "/run/build/folks/tools/inspect/utils.vala"
	g_value_take_string (&_tmp6_, _tmp5_);
#line 93 "/run/build/folks/tools/inspect/utils.vala"
	G_IS_VALUE (&_vala_dest) ? (g_value_unset (&_vala_dest), NULL) : NULL;
#line 93 "/run/build/folks/tools/inspect/utils.vala"
	_vala_dest = _tmp6_;
#line 84 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (output);
#line 84 "/run/build/folks/tools/inspect/utils.vala"
	if (dest) {
#line 84 "/run/build/folks/tools/inspect/utils.vala"
		*dest = _vala_dest;
#line 597 "utils.c"
	} else {
#line 84 "/run/build/folks/tools/inspect/utils.vala"
		G_IS_VALUE (&_vala_dest) ? (g_value_unset (&_vala_dest), NULL) : NULL;
#line 601 "utils.c"
	}
}


void
folks_inspect_utils_indent (void)
{
	guint _tmp0_;
	guint _tmp1_;
	gchar* _tmp2_;
#line 99 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = folks_inspect_utils_indentation;
#line 99 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indentation = _tmp0_ + 2;
#line 100 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = folks_inspect_utils_indentation;
#line 100 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = g_strnfill ((gsize) _tmp1_, ' ');
#line 100 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (folks_inspect_utils_indentation_string);
#line 100 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indentation_string = _tmp2_;
#line 624 "utils.c"
}


void
folks_inspect_utils_unindent (void)
{
	guint _tmp0_;
	guint _tmp1_;
	gchar* _tmp2_;
#line 105 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = folks_inspect_utils_indentation;
#line 105 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indentation = _tmp0_ - 2;
#line 106 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = folks_inspect_utils_indentation;
#line 106 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = g_strnfill ((gsize) _tmp1_, ' ');
#line 106 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (folks_inspect_utils_indentation_string);
#line 106 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indentation_string = _tmp2_;
#line 646 "utils.c"
}


void
folks_inspect_utils_print_line (const gchar* format,
                                ...)
{
	va_list valist = {0};
	gchar* output = NULL;
	gchar* _tmp0_;
	gchar* str = NULL;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	FILE* _tmp3_;
#line 110 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (format != NULL);
#line 113 "/run/build/folks/tools/inspect/utils.vala"
	va_start (valist, format);
#line 114 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = g_strdup_vprintf (format, valist);
#line 114 "/run/build/folks/tools/inspect/utils.vala"
	output = _tmp0_;
#line 115 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = folks_inspect_utils_indentation_string;
#line 115 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = g_strdup_printf ("%s%s", _tmp1_, output);
#line 115 "/run/build/folks/tools/inspect/utils.vala"
	str = _tmp2_;
#line 116 "/run/build/folks/tools/inspect/utils.vala"
	_tmp3_ = folks_inspect_utils_output_filestream;
#line 116 "/run/build/folks/tools/inspect/utils.vala"
	fputs (str, _tmp3_);
#line 110 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (str);
#line 110 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (output);
#line 110 "/run/build/folks/tools/inspect/utils.vala"
	va_end (valist);
#line 685 "utils.c"
}


void
folks_inspect_utils_print_blank_line (void)
{
	FILE* _tmp0_;
#line 121 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = folks_inspect_utils_output_filestream;
#line 121 "/run/build/folks/tools/inspect/utils.vala"
	fputs ("", _tmp0_);
#line 697 "utils.c"
}


void
folks_inspect_utils_print_individual (FolksIndividual* individual,
                                      gboolean show_personas)
{
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	GeeSet* _tmp2_;
	GeeSet* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	GParamSpec** properties = NULL;
	GObjectClass* _tmp6_;
	guint _tmp7_;
	GParamSpec** _tmp8_;
	gint properties_length1;
	gint _properties_size_;
	GParamSpec** _tmp9_;
	gint _tmp9__length1;
#line 124 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (individual != NULL);
#line 127 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = folks_individual_get_id (individual);
#line 127 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = _tmp0_;
#line 127 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = folks_individual_get_personas (individual);
#line 127 "/run/build/folks/tools/inspect/utils.vala"
	_tmp3_ = _tmp2_;
#line 127 "/run/build/folks/tools/inspect/utils.vala"
	_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 127 "/run/build/folks/tools/inspect/utils.vala"
	_tmp5_ = _tmp4_;
#line 127 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_print_line ("Individual '%s' with %u personas:", _tmp1_, (guint) _tmp5_);
#line 131 "/run/build/folks/tools/inspect/utils.vala"
	_tmp6_ = G_OBJECT_GET_CLASS ((GObject*) individual);
#line 131 "/run/build/folks/tools/inspect/utils.vala"
	_tmp8_ = g_object_class_list_properties (_tmp6_, &_tmp7_);
#line 131 "/run/build/folks/tools/inspect/utils.vala"
	properties = _tmp8_;
#line 131 "/run/build/folks/tools/inspect/utils.vala"
	properties_length1 = _tmp7_;
#line 131 "/run/build/folks/tools/inspect/utils.vala"
	_properties_size_ = properties_length1;
#line 133 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indent ();
#line 134 "/run/build/folks/tools/inspect/utils.vala"
	_tmp9_ = properties;
#line 134 "/run/build/folks/tools/inspect/utils.vala"
	_tmp9__length1 = properties_length1;
#line 751 "utils.c"
	{
		GParamSpec** pspec_collection = NULL;
		gint pspec_collection_length1 = 0;
		gint _pspec_collection_size_ = 0;
		gint pspec_it = 0;
#line 134 "/run/build/folks/tools/inspect/utils.vala"
		pspec_collection = _tmp9_;
#line 134 "/run/build/folks/tools/inspect/utils.vala"
		pspec_collection_length1 = _tmp9__length1;
#line 134 "/run/build/folks/tools/inspect/utils.vala"
		for (pspec_it = 0; pspec_it < _tmp9__length1; pspec_it = pspec_it + 1) {
#line 763 "utils.c"
			GParamSpec* pspec = NULL;
#line 134 "/run/build/folks/tools/inspect/utils.vala"
			pspec = pspec_collection[pspec_it];
#line 767 "utils.c"
			{
				GValue prop_value = {0};
				gchar* output_string = NULL;
				gboolean _tmp10_ = FALSE;
				GParamSpec* _tmp13_;
				GType _tmp14_;
				GValue _tmp15_ = {0};
				GValue _tmp16_;
				GParamSpec* _tmp17_;
				const gchar* _tmp18_;
				GParamSpec* _tmp19_;
				const gchar* _tmp20_;
				GValue _tmp21_;
				gchar* _tmp22_;
				GParamSpec* _tmp23_;
				const gchar* _tmp24_;
				const gchar* _tmp25_;
#line 140 "/run/build/folks/tools/inspect/utils.vala"
				if (show_personas == TRUE) {
#line 787 "utils.c"
					GParamSpec* _tmp11_;
					const gchar* _tmp12_;
#line 140 "/run/build/folks/tools/inspect/utils.vala"
					_tmp11_ = pspec;
#line 140 "/run/build/folks/tools/inspect/utils.vala"
					_tmp12_ = g_param_spec_get_name (_tmp11_);
#line 140 "/run/build/folks/tools/inspect/utils.vala"
					_tmp10_ = g_strcmp0 (_tmp12_, "personas") == 0;
#line 796 "utils.c"
				} else {
#line 140 "/run/build/folks/tools/inspect/utils.vala"
					_tmp10_ = FALSE;
#line 800 "utils.c"
				}
#line 140 "/run/build/folks/tools/inspect/utils.vala"
				if (_tmp10_) {
#line 141 "/run/build/folks/tools/inspect/utils.vala"
					_g_free0 (output_string);
#line 141 "/run/build/folks/tools/inspect/utils.vala"
					G_IS_VALUE (&prop_value) ? (g_value_unset (&prop_value), NULL) : NULL;
#line 141 "/run/build/folks/tools/inspect/utils.vala"
					continue;
#line 810 "utils.c"
				}
#line 143 "/run/build/folks/tools/inspect/utils.vala"
				_tmp13_ = pspec;
#line 143 "/run/build/folks/tools/inspect/utils.vala"
				_tmp14_ = _tmp13_->value_type;
#line 143 "/run/build/folks/tools/inspect/utils.vala"
				g_value_init (&_tmp15_, _tmp14_);
#line 143 "/run/build/folks/tools/inspect/utils.vala"
				G_IS_VALUE (&prop_value) ? (g_value_unset (&prop_value), NULL) : NULL;
#line 143 "/run/build/folks/tools/inspect/utils.vala"
				prop_value = _tmp15_;
#line 143 "/run/build/folks/tools/inspect/utils.vala"
				_tmp16_ = prop_value;
#line 144 "/run/build/folks/tools/inspect/utils.vala"
				_tmp17_ = pspec;
#line 144 "/run/build/folks/tools/inspect/utils.vala"
				_tmp18_ = g_param_spec_get_name (_tmp17_);
#line 144 "/run/build/folks/tools/inspect/utils.vala"
				g_object_get_property ((GObject*) individual, _tmp18_, &prop_value);
#line 146 "/run/build/folks/tools/inspect/utils.vala"
				_tmp19_ = pspec;
#line 146 "/run/build/folks/tools/inspect/utils.vala"
				_tmp20_ = g_param_spec_get_name (_tmp19_);
#line 146 "/run/build/folks/tools/inspect/utils.vala"
				_tmp21_ = prop_value;
#line 146 "/run/build/folks/tools/inspect/utils.vala"
				_tmp22_ = folks_inspect_utils_property_to_string (G_TYPE_FROM_INSTANCE ((GObject*) individual), _tmp20_, &_tmp21_);
#line 146 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output_string);
#line 146 "/run/build/folks/tools/inspect/utils.vala"
				output_string = _tmp22_;
#line 149 "/run/build/folks/tools/inspect/utils.vala"
				_tmp23_ = pspec;
#line 149 "/run/build/folks/tools/inspect/utils.vala"
				_tmp24_ = g_param_spec_get_nick (_tmp23_);
#line 149 "/run/build/folks/tools/inspect/utils.vala"
				_tmp25_ = output_string;
#line 149 "/run/build/folks/tools/inspect/utils.vala"
				folks_inspect_utils_print_line ("%-20s  %s", _tmp24_, _tmp25_);
#line 134 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output_string);
#line 134 "/run/build/folks/tools/inspect/utils.vala"
				G_IS_VALUE (&prop_value) ? (g_value_unset (&prop_value), NULL) : NULL;
#line 854 "utils.c"
			}
		}
	}
#line 152 "/run/build/folks/tools/inspect/utils.vala"
	if (show_personas == TRUE) {
#line 154 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_print_blank_line ();
#line 155 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_print_line ("Personas:");
#line 157 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_indent ();
#line 866 "utils.c"
		{
			GeeIterator* _persona_it = NULL;
			GeeSet* _tmp26_;
			GeeSet* _tmp27_;
			GeeIterator* _tmp28_;
#line 158 "/run/build/folks/tools/inspect/utils.vala"
			_tmp26_ = folks_individual_get_personas (individual);
#line 158 "/run/build/folks/tools/inspect/utils.vala"
			_tmp27_ = _tmp26_;
#line 158 "/run/build/folks/tools/inspect/utils.vala"
			_tmp28_ = gee_iterable_iterator ((GeeIterable*) _tmp27_);
#line 158 "/run/build/folks/tools/inspect/utils.vala"
			_persona_it = _tmp28_;
#line 158 "/run/build/folks/tools/inspect/utils.vala"
			while (TRUE) {
#line 882 "utils.c"
				GeeIterator* _tmp29_;
				FolksPersona* persona = NULL;
				GeeIterator* _tmp30_;
				gpointer _tmp31_;
				FolksPersona* _tmp32_;
#line 158 "/run/build/folks/tools/inspect/utils.vala"
				_tmp29_ = _persona_it;
#line 158 "/run/build/folks/tools/inspect/utils.vala"
				if (!gee_iterator_next (_tmp29_)) {
#line 158 "/run/build/folks/tools/inspect/utils.vala"
					break;
#line 894 "utils.c"
				}
#line 158 "/run/build/folks/tools/inspect/utils.vala"
				_tmp30_ = _persona_it;
#line 158 "/run/build/folks/tools/inspect/utils.vala"
				_tmp31_ = gee_iterator_get (_tmp30_);
#line 158 "/run/build/folks/tools/inspect/utils.vala"
				persona = (FolksPersona*) _tmp31_;
#line 159 "/run/build/folks/tools/inspect/utils.vala"
				_tmp32_ = persona;
#line 159 "/run/build/folks/tools/inspect/utils.vala"
				folks_inspect_utils_print_persona (_tmp32_);
#line 158 "/run/build/folks/tools/inspect/utils.vala"
				_g_object_unref0 (persona);
#line 908 "utils.c"
			}
#line 158 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (_persona_it);
#line 912 "utils.c"
		}
#line 160 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_unindent ();
#line 916 "utils.c"
	}
#line 162 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_unindent ();
#line 124 "/run/build/folks/tools/inspect/utils.vala"
	properties = (g_free (properties), NULL);
#line 922 "utils.c"
}


void
folks_inspect_utils_print_persona (FolksPersona* persona)
{
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	GParamSpec** properties = NULL;
	GObjectClass* _tmp2_;
	guint _tmp3_;
	GParamSpec** _tmp4_;
	gint properties_length1;
	gint _properties_size_;
	GParamSpec** _tmp5_;
	gint _tmp5__length1;
#line 165 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (persona != NULL);
#line 167 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = folks_persona_get_uid (persona);
#line 167 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = _tmp0_;
#line 167 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_print_line ("Persona '%s':", _tmp1_);
#line 170 "/run/build/folks/tools/inspect/utils.vala"
	_tmp2_ = G_OBJECT_GET_CLASS ((GObject*) persona);
#line 170 "/run/build/folks/tools/inspect/utils.vala"
	_tmp4_ = g_object_class_list_properties (_tmp2_, &_tmp3_);
#line 170 "/run/build/folks/tools/inspect/utils.vala"
	properties = _tmp4_;
#line 170 "/run/build/folks/tools/inspect/utils.vala"
	properties_length1 = _tmp3_;
#line 170 "/run/build/folks/tools/inspect/utils.vala"
	_properties_size_ = properties_length1;
#line 172 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indent ();
#line 173 "/run/build/folks/tools/inspect/utils.vala"
	_tmp5_ = properties;
#line 173 "/run/build/folks/tools/inspect/utils.vala"
	_tmp5__length1 = properties_length1;
#line 963 "utils.c"
	{
		GParamSpec** pspec_collection = NULL;
		gint pspec_collection_length1 = 0;
		gint _pspec_collection_size_ = 0;
		gint pspec_it = 0;
#line 173 "/run/build/folks/tools/inspect/utils.vala"
		pspec_collection = _tmp5_;
#line 173 "/run/build/folks/tools/inspect/utils.vala"
		pspec_collection_length1 = _tmp5__length1;
#line 173 "/run/build/folks/tools/inspect/utils.vala"
		for (pspec_it = 0; pspec_it < _tmp5__length1; pspec_it = pspec_it + 1) {
#line 975 "utils.c"
			GParamSpec* pspec = NULL;
#line 173 "/run/build/folks/tools/inspect/utils.vala"
			pspec = pspec_collection[pspec_it];
#line 979 "utils.c"
			{
				GValue prop_value = {0};
				gchar* output_string = NULL;
				GParamSpec* _tmp6_;
				GType _tmp7_;
				GValue _tmp8_ = {0};
				GValue _tmp9_;
				GParamSpec* _tmp10_;
				const gchar* _tmp11_;
				GParamSpec* _tmp12_;
				const gchar* _tmp13_;
				GValue _tmp14_;
				gchar* _tmp15_;
				GParamSpec* _tmp16_;
				const gchar* _tmp17_;
				const gchar* _tmp18_;
#line 178 "/run/build/folks/tools/inspect/utils.vala"
				_tmp6_ = pspec;
#line 178 "/run/build/folks/tools/inspect/utils.vala"
				_tmp7_ = _tmp6_->value_type;
#line 178 "/run/build/folks/tools/inspect/utils.vala"
				g_value_init (&_tmp8_, _tmp7_);
#line 178 "/run/build/folks/tools/inspect/utils.vala"
				G_IS_VALUE (&prop_value) ? (g_value_unset (&prop_value), NULL) : NULL;
#line 178 "/run/build/folks/tools/inspect/utils.vala"
				prop_value = _tmp8_;
#line 178 "/run/build/folks/tools/inspect/utils.vala"
				_tmp9_ = prop_value;
#line 179 "/run/build/folks/tools/inspect/utils.vala"
				_tmp10_ = pspec;
#line 179 "/run/build/folks/tools/inspect/utils.vala"
				_tmp11_ = g_param_spec_get_name (_tmp10_);
#line 179 "/run/build/folks/tools/inspect/utils.vala"
				g_object_get_property ((GObject*) persona, _tmp11_, &prop_value);
#line 181 "/run/build/folks/tools/inspect/utils.vala"
				_tmp12_ = pspec;
#line 181 "/run/build/folks/tools/inspect/utils.vala"
				_tmp13_ = g_param_spec_get_name (_tmp12_);
#line 181 "/run/build/folks/tools/inspect/utils.vala"
				_tmp14_ = prop_value;
#line 181 "/run/build/folks/tools/inspect/utils.vala"
				_tmp15_ = folks_inspect_utils_property_to_string (G_TYPE_FROM_INSTANCE ((GObject*) persona), _tmp13_, &_tmp14_);
#line 181 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output_string);
#line 181 "/run/build/folks/tools/inspect/utils.vala"
				output_string = _tmp15_;
#line 184 "/run/build/folks/tools/inspect/utils.vala"
				_tmp16_ = pspec;
#line 184 "/run/build/folks/tools/inspect/utils.vala"
				_tmp17_ = g_param_spec_get_nick (_tmp16_);
#line 184 "/run/build/folks/tools/inspect/utils.vala"
				_tmp18_ = output_string;
#line 184 "/run/build/folks/tools/inspect/utils.vala"
				folks_inspect_utils_print_line ("%-20s  %s", _tmp17_, _tmp18_);
#line 173 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output_string);
#line 173 "/run/build/folks/tools/inspect/utils.vala"
				G_IS_VALUE (&prop_value) ? (g_value_unset (&prop_value), NULL) : NULL;
#line 1038 "utils.c"
			}
		}
	}
#line 186 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_unindent ();
#line 165 "/run/build/folks/tools/inspect/utils.vala"
	properties = (g_free (properties), NULL);
#line 1046 "utils.c"
}


void
folks_inspect_utils_print_persona_store (FolksPersonaStore* store,
                                         gboolean show_personas)
{
	gboolean _tmp0_;
	gboolean _tmp1_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
	GeeMap* _tmp6_;
	GeeMap* _tmp7_;
	gint _tmp8_;
	gint _tmp9_;
	GParamSpec** properties = NULL;
	GObjectClass* _tmp10_;
	guint _tmp11_;
	GParamSpec** _tmp12_;
	gint properties_length1;
	gint _properties_size_;
	GParamSpec** _tmp13_;
	gint _tmp13__length1;
#line 189 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (store != NULL);
#line 192 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = folks_persona_store_get_is_prepared (store);
#line 192 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = _tmp0_;
#line 192 "/run/build/folks/tools/inspect/utils.vala"
	if (_tmp1_ == FALSE) {
#line 1078 "utils.c"
		const gchar* _tmp2_;
		const gchar* _tmp3_;
#line 194 "/run/build/folks/tools/inspect/utils.vala"
		_tmp2_ = folks_persona_store_get_id (store);
#line 194 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = _tmp2_;
#line 194 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_print_line ("Persona store '%s':", _tmp3_);
#line 195 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_indent ();
#line 196 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_print_line ("Not prepared.");
#line 197 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_unindent ();
#line 199 "/run/build/folks/tools/inspect/utils.vala"
		return;
#line 1095 "utils.c"
	}
#line 202 "/run/build/folks/tools/inspect/utils.vala"
	_tmp4_ = folks_persona_store_get_id (store);
#line 202 "/run/build/folks/tools/inspect/utils.vala"
	_tmp5_ = _tmp4_;
#line 202 "/run/build/folks/tools/inspect/utils.vala"
	_tmp6_ = folks_persona_store_get_personas (store);
#line 202 "/run/build/folks/tools/inspect/utils.vala"
	_tmp7_ = _tmp6_;
#line 202 "/run/build/folks/tools/inspect/utils.vala"
	_tmp8_ = gee_map_get_size (_tmp7_);
#line 202 "/run/build/folks/tools/inspect/utils.vala"
	_tmp9_ = _tmp8_;
#line 202 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_print_line ("Persona store '%s' with %u personas:", _tmp5_, (guint) _tmp9_);
#line 206 "/run/build/folks/tools/inspect/utils.vala"
	_tmp10_ = G_OBJECT_GET_CLASS ((GObject*) store);
#line 206 "/run/build/folks/tools/inspect/utils.vala"
	_tmp12_ = g_object_class_list_properties (_tmp10_, &_tmp11_);
#line 206 "/run/build/folks/tools/inspect/utils.vala"
	properties = _tmp12_;
#line 206 "/run/build/folks/tools/inspect/utils.vala"
	properties_length1 = _tmp11_;
#line 206 "/run/build/folks/tools/inspect/utils.vala"
	_properties_size_ = properties_length1;
#line 208 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indent ();
#line 209 "/run/build/folks/tools/inspect/utils.vala"
	_tmp13_ = properties;
#line 209 "/run/build/folks/tools/inspect/utils.vala"
	_tmp13__length1 = properties_length1;
#line 1127 "utils.c"
	{
		GParamSpec** pspec_collection = NULL;
		gint pspec_collection_length1 = 0;
		gint _pspec_collection_size_ = 0;
		gint pspec_it = 0;
#line 209 "/run/build/folks/tools/inspect/utils.vala"
		pspec_collection = _tmp13_;
#line 209 "/run/build/folks/tools/inspect/utils.vala"
		pspec_collection_length1 = _tmp13__length1;
#line 209 "/run/build/folks/tools/inspect/utils.vala"
		for (pspec_it = 0; pspec_it < _tmp13__length1; pspec_it = pspec_it + 1) {
#line 1139 "utils.c"
			GParamSpec* pspec = NULL;
#line 209 "/run/build/folks/tools/inspect/utils.vala"
			pspec = pspec_collection[pspec_it];
#line 1143 "utils.c"
			{
				GValue prop_value = {0};
				gchar* output_string = NULL;
				gboolean _tmp14_ = FALSE;
				GParamSpec* _tmp17_;
				GType _tmp18_;
				GValue _tmp19_ = {0};
				GValue _tmp20_;
				GParamSpec* _tmp21_;
				const gchar* _tmp22_;
				GParamSpec* _tmp23_;
				const gchar* _tmp24_;
				GValue _tmp25_;
				gchar* _tmp26_;
				GParamSpec* _tmp27_;
				const gchar* _tmp28_;
				const gchar* _tmp29_;
#line 215 "/run/build/folks/tools/inspect/utils.vala"
				if (show_personas == TRUE) {
#line 1163 "utils.c"
					GParamSpec* _tmp15_;
					const gchar* _tmp16_;
#line 215 "/run/build/folks/tools/inspect/utils.vala"
					_tmp15_ = pspec;
#line 215 "/run/build/folks/tools/inspect/utils.vala"
					_tmp16_ = g_param_spec_get_name (_tmp15_);
#line 215 "/run/build/folks/tools/inspect/utils.vala"
					_tmp14_ = g_strcmp0 (_tmp16_, "personas") == 0;
#line 1172 "utils.c"
				} else {
#line 215 "/run/build/folks/tools/inspect/utils.vala"
					_tmp14_ = FALSE;
#line 1176 "utils.c"
				}
#line 215 "/run/build/folks/tools/inspect/utils.vala"
				if (_tmp14_) {
#line 216 "/run/build/folks/tools/inspect/utils.vala"
					_g_free0 (output_string);
#line 216 "/run/build/folks/tools/inspect/utils.vala"
					G_IS_VALUE (&prop_value) ? (g_value_unset (&prop_value), NULL) : NULL;
#line 216 "/run/build/folks/tools/inspect/utils.vala"
					continue;
#line 1186 "utils.c"
				}
#line 218 "/run/build/folks/tools/inspect/utils.vala"
				_tmp17_ = pspec;
#line 218 "/run/build/folks/tools/inspect/utils.vala"
				_tmp18_ = _tmp17_->value_type;
#line 218 "/run/build/folks/tools/inspect/utils.vala"
				g_value_init (&_tmp19_, _tmp18_);
#line 218 "/run/build/folks/tools/inspect/utils.vala"
				G_IS_VALUE (&prop_value) ? (g_value_unset (&prop_value), NULL) : NULL;
#line 218 "/run/build/folks/tools/inspect/utils.vala"
				prop_value = _tmp19_;
#line 218 "/run/build/folks/tools/inspect/utils.vala"
				_tmp20_ = prop_value;
#line 219 "/run/build/folks/tools/inspect/utils.vala"
				_tmp21_ = pspec;
#line 219 "/run/build/folks/tools/inspect/utils.vala"
				_tmp22_ = g_param_spec_get_name (_tmp21_);
#line 219 "/run/build/folks/tools/inspect/utils.vala"
				g_object_get_property ((GObject*) store, _tmp22_, &prop_value);
#line 221 "/run/build/folks/tools/inspect/utils.vala"
				_tmp23_ = pspec;
#line 221 "/run/build/folks/tools/inspect/utils.vala"
				_tmp24_ = g_param_spec_get_name (_tmp23_);
#line 221 "/run/build/folks/tools/inspect/utils.vala"
				_tmp25_ = prop_value;
#line 221 "/run/build/folks/tools/inspect/utils.vala"
				_tmp26_ = folks_inspect_utils_property_to_string (G_TYPE_FROM_INSTANCE ((GObject*) store), _tmp24_, &_tmp25_);
#line 221 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output_string);
#line 221 "/run/build/folks/tools/inspect/utils.vala"
				output_string = _tmp26_;
#line 224 "/run/build/folks/tools/inspect/utils.vala"
				_tmp27_ = pspec;
#line 224 "/run/build/folks/tools/inspect/utils.vala"
				_tmp28_ = g_param_spec_get_nick (_tmp27_);
#line 224 "/run/build/folks/tools/inspect/utils.vala"
				_tmp29_ = output_string;
#line 224 "/run/build/folks/tools/inspect/utils.vala"
				folks_inspect_utils_print_line ("%-20s  %s", _tmp28_, _tmp29_);
#line 209 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output_string);
#line 209 "/run/build/folks/tools/inspect/utils.vala"
				G_IS_VALUE (&prop_value) ? (g_value_unset (&prop_value), NULL) : NULL;
#line 1230 "utils.c"
			}
		}
	}
#line 227 "/run/build/folks/tools/inspect/utils.vala"
	if (show_personas == TRUE) {
#line 229 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_print_blank_line ();
#line 230 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_print_line ("Personas:");
#line 232 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_indent ();
#line 1242 "utils.c"
		{
			GeeIterator* _persona_it = NULL;
			GeeMap* _tmp30_;
			GeeMap* _tmp31_;
			GeeCollection* _tmp32_;
			GeeCollection* _tmp33_;
			GeeCollection* _tmp34_;
			GeeIterator* _tmp35_;
			GeeIterator* _tmp36_;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_tmp30_ = folks_persona_store_get_personas (store);
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_tmp31_ = _tmp30_;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_tmp32_ = gee_map_get_values (_tmp31_);
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_tmp33_ = _tmp32_;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_tmp34_ = _tmp33_;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_tmp35_ = gee_iterable_iterator ((GeeIterable*) _tmp34_);
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_tmp36_ = _tmp35_;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (_tmp34_);
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_persona_it = _tmp36_;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			while (TRUE) {
#line 1272 "utils.c"
				GeeIterator* _tmp37_;
				FolksPersona* persona = NULL;
				GeeIterator* _tmp38_;
				gpointer _tmp39_;
				FolksPersona* _tmp40_;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
				_tmp37_ = _persona_it;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
				if (!gee_iterator_next (_tmp37_)) {
#line 233 "/run/build/folks/tools/inspect/utils.vala"
					break;
#line 1284 "utils.c"
				}
#line 233 "/run/build/folks/tools/inspect/utils.vala"
				_tmp38_ = _persona_it;
#line 233 "/run/build/folks/tools/inspect/utils.vala"
				_tmp39_ = gee_iterator_get (_tmp38_);
#line 233 "/run/build/folks/tools/inspect/utils.vala"
				persona = (FolksPersona*) _tmp39_;
#line 235 "/run/build/folks/tools/inspect/utils.vala"
				_tmp40_ = persona;
#line 235 "/run/build/folks/tools/inspect/utils.vala"
				folks_inspect_utils_print_persona (_tmp40_);
#line 233 "/run/build/folks/tools/inspect/utils.vala"
				_g_object_unref0 (persona);
#line 1298 "utils.c"
			}
#line 233 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (_persona_it);
#line 1302 "utils.c"
		}
#line 237 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_unindent ();
#line 1306 "utils.c"
	}
#line 239 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_unindent ();
#line 189 "/run/build/folks/tools/inspect/utils.vala"
	properties = (g_free (properties), NULL);
#line 1312 "utils.c"
}


static gchar*
g_date_time_to_string (GDateTime* self)
{
	gchar* result = NULL;
	gchar* _tmp0_;
#line 3009 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_date_time_format (self, "%FT%H:%M:%S%z");
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp0_;
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 1329 "utils.c"
}


static gchar*
folks_inspect_utils_property_to_string (GType object_type,
                                        const gchar* prop_name,
                                        GValue* prop_value)
{
	gchar* result = NULL;
	gchar* output_string = NULL;
	gboolean _tmp0_ = FALSE;
	GValue _tmp189_;
	gchar* _tmp190_;
#line 242 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (prop_name != NULL, NULL);
#line 242 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (prop_value != NULL, NULL);
#line 249 "/run/build/folks/tools/inspect/utils.vala"
	if (g_type_is_a (object_type, FOLKS_TYPE_INDIVIDUAL)) {
#line 249 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = g_strcmp0 (prop_name, "personas") == 0;
#line 1351 "utils.c"
	} else {
#line 249 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = FALSE;
#line 1355 "utils.c"
	}
#line 249 "/run/build/folks/tools/inspect/utils.vala"
	if (_tmp0_) {
#line 1359 "utils.c"
		GeeSet* personas = NULL;
		GObject* _tmp1_;
		GeeSet* _tmp2_;
		GeeSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gchar* _tmp6_;
#line 251 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = g_value_get_object (prop_value);
#line 251 "/run/build/folks/tools/inspect/utils.vala"
		_tmp2_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp1_, GEE_TYPE_SET, GeeSet));
#line 251 "/run/build/folks/tools/inspect/utils.vala"
		personas = _tmp2_;
#line 252 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = personas;
#line 252 "/run/build/folks/tools/inspect/utils.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 252 "/run/build/folks/tools/inspect/utils.vala"
		_tmp5_ = _tmp4_;
#line 252 "/run/build/folks/tools/inspect/utils.vala"
		_tmp6_ = g_strdup_printf ("List of %u personas", (guint) _tmp5_);
#line 252 "/run/build/folks/tools/inspect/utils.vala"
		result = _tmp6_;
#line 252 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (personas);
#line 252 "/run/build/folks/tools/inspect/utils.vala"
		_g_free0 (output_string);
#line 252 "/run/build/folks/tools/inspect/utils.vala"
		return result;
#line 1389 "utils.c"
	} else {
		gboolean _tmp7_ = FALSE;
#line 254 "/run/build/folks/tools/inspect/utils.vala"
		if (g_type_is_a (object_type, FOLKS_TYPE_PERSONA_STORE)) {
#line 255 "/run/build/folks/tools/inspect/utils.vala"
			_tmp7_ = g_strcmp0 (prop_name, "personas") == 0;
#line 1396 "utils.c"
		} else {
#line 254 "/run/build/folks/tools/inspect/utils.vala"
			_tmp7_ = FALSE;
#line 1400 "utils.c"
		}
#line 254 "/run/build/folks/tools/inspect/utils.vala"
		if (_tmp7_) {
#line 1404 "utils.c"
			GeeMap* personas = NULL;
			GObject* _tmp8_;
			GeeMap* _tmp9_;
			GeeMap* _tmp10_;
			gint _tmp11_;
			gint _tmp12_;
			gchar* _tmp13_;
#line 257 "/run/build/folks/tools/inspect/utils.vala"
			_tmp8_ = g_value_get_object (prop_value);
#line 257 "/run/build/folks/tools/inspect/utils.vala"
			_tmp9_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp8_, GEE_TYPE_MAP, GeeMap));
#line 257 "/run/build/folks/tools/inspect/utils.vala"
			personas = _tmp9_;
#line 259 "/run/build/folks/tools/inspect/utils.vala"
			_tmp10_ = personas;
#line 259 "/run/build/folks/tools/inspect/utils.vala"
			_tmp11_ = gee_map_get_size (_tmp10_);
#line 259 "/run/build/folks/tools/inspect/utils.vala"
			_tmp12_ = _tmp11_;
#line 259 "/run/build/folks/tools/inspect/utils.vala"
			_tmp13_ = g_strdup_printf ("Set of %u personas", (guint) _tmp12_);
#line 259 "/run/build/folks/tools/inspect/utils.vala"
			result = _tmp13_;
#line 259 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (personas);
#line 259 "/run/build/folks/tools/inspect/utils.vala"
			_g_free0 (output_string);
#line 259 "/run/build/folks/tools/inspect/utils.vala"
			return result;
#line 1434 "utils.c"
		} else {
			gboolean _tmp14_ = FALSE;
			gboolean _tmp15_ = FALSE;
			gboolean _tmp16_ = FALSE;
#line 261 "/run/build/folks/tools/inspect/utils.vala"
			if (g_strcmp0 (prop_name, "groups") == 0) {
#line 261 "/run/build/folks/tools/inspect/utils.vala"
				_tmp16_ = TRUE;
#line 1443 "utils.c"
			} else {
#line 262 "/run/build/folks/tools/inspect/utils.vala"
				_tmp16_ = g_strcmp0 (prop_name, "local-ids") == 0;
#line 1447 "utils.c"
			}
#line 261 "/run/build/folks/tools/inspect/utils.vala"
			if (_tmp16_) {
#line 261 "/run/build/folks/tools/inspect/utils.vala"
				_tmp15_ = TRUE;
#line 1453 "utils.c"
			} else {
#line 263 "/run/build/folks/tools/inspect/utils.vala"
				_tmp15_ = g_strcmp0 (prop_name, "supported-fields") == 0;
#line 1457 "utils.c"
			}
#line 261 "/run/build/folks/tools/inspect/utils.vala"
			if (_tmp15_) {
#line 261 "/run/build/folks/tools/inspect/utils.vala"
				_tmp14_ = TRUE;
#line 1463 "utils.c"
			} else {
#line 264 "/run/build/folks/tools/inspect/utils.vala"
				_tmp14_ = g_strcmp0 (prop_name, "anti-links") == 0;
#line 1467 "utils.c"
			}
#line 261 "/run/build/folks/tools/inspect/utils.vala"
			if (_tmp14_) {
#line 1471 "utils.c"
				GeeSet* groups = NULL;
				GObject* _tmp17_;
				GeeSet* _tmp18_;
				gchar* _tmp19_;
				gboolean first = FALSE;
				const gchar* _tmp33_;
				gchar* _tmp34_;
#line 266 "/run/build/folks/tools/inspect/utils.vala"
				_tmp17_ = g_value_get_object (prop_value);
#line 266 "/run/build/folks/tools/inspect/utils.vala"
				_tmp18_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp17_, GEE_TYPE_SET, GeeSet));
#line 266 "/run/build/folks/tools/inspect/utils.vala"
				groups = _tmp18_;
#line 267 "/run/build/folks/tools/inspect/utils.vala"
				_tmp19_ = g_strdup ("{ ");
#line 267 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output_string);
#line 267 "/run/build/folks/tools/inspect/utils.vala"
				output_string = _tmp19_;
#line 268 "/run/build/folks/tools/inspect/utils.vala"
				first = TRUE;
#line 1493 "utils.c"
				{
					GeeIterator* _group_it = NULL;
					GeeSet* _tmp20_;
					GeeIterator* _tmp21_;
#line 270 "/run/build/folks/tools/inspect/utils.vala"
					_tmp20_ = groups;
#line 270 "/run/build/folks/tools/inspect/utils.vala"
					_tmp21_ = gee_iterable_iterator ((GeeIterable*) _tmp20_);
#line 270 "/run/build/folks/tools/inspect/utils.vala"
					_group_it = _tmp21_;
#line 270 "/run/build/folks/tools/inspect/utils.vala"
					while (TRUE) {
#line 1506 "utils.c"
						GeeIterator* _tmp22_;
						gchar* group = NULL;
						GeeIterator* _tmp23_;
						gpointer _tmp24_;
						gboolean _tmp25_;
						const gchar* _tmp28_;
						const gchar* _tmp29_;
						gchar* _tmp30_;
						gchar* _tmp31_;
						gchar* _tmp32_;
#line 270 "/run/build/folks/tools/inspect/utils.vala"
						_tmp22_ = _group_it;
#line 270 "/run/build/folks/tools/inspect/utils.vala"
						if (!gee_iterator_next (_tmp22_)) {
#line 270 "/run/build/folks/tools/inspect/utils.vala"
							break;
#line 1523 "utils.c"
						}
#line 270 "/run/build/folks/tools/inspect/utils.vala"
						_tmp23_ = _group_it;
#line 270 "/run/build/folks/tools/inspect/utils.vala"
						_tmp24_ = gee_iterator_get (_tmp23_);
#line 270 "/run/build/folks/tools/inspect/utils.vala"
						group = (gchar*) _tmp24_;
#line 272 "/run/build/folks/tools/inspect/utils.vala"
						_tmp25_ = first;
#line 272 "/run/build/folks/tools/inspect/utils.vala"
						if (_tmp25_ == FALSE) {
#line 1535 "utils.c"
							const gchar* _tmp26_;
							gchar* _tmp27_;
#line 273 "/run/build/folks/tools/inspect/utils.vala"
							_tmp26_ = output_string;
#line 273 "/run/build/folks/tools/inspect/utils.vala"
							_tmp27_ = g_strconcat (_tmp26_, ", ", NULL);
#line 273 "/run/build/folks/tools/inspect/utils.vala"
							_g_free0 (output_string);
#line 273 "/run/build/folks/tools/inspect/utils.vala"
							output_string = _tmp27_;
#line 1546 "utils.c"
						}
#line 274 "/run/build/folks/tools/inspect/utils.vala"
						_tmp28_ = output_string;
#line 274 "/run/build/folks/tools/inspect/utils.vala"
						_tmp29_ = group;
#line 274 "/run/build/folks/tools/inspect/utils.vala"
						_tmp30_ = g_strdup_printf ("'%s'", _tmp29_);
#line 274 "/run/build/folks/tools/inspect/utils.vala"
						_tmp31_ = _tmp30_;
#line 274 "/run/build/folks/tools/inspect/utils.vala"
						_tmp32_ = g_strconcat (_tmp28_, _tmp31_, NULL);
#line 274 "/run/build/folks/tools/inspect/utils.vala"
						_g_free0 (output_string);
#line 274 "/run/build/folks/tools/inspect/utils.vala"
						output_string = _tmp32_;
#line 274 "/run/build/folks/tools/inspect/utils.vala"
						_g_free0 (_tmp31_);
#line 275 "/run/build/folks/tools/inspect/utils.vala"
						first = FALSE;
#line 270 "/run/build/folks/tools/inspect/utils.vala"
						_g_free0 (group);
#line 1568 "utils.c"
					}
#line 270 "/run/build/folks/tools/inspect/utils.vala"
					_g_object_unref0 (_group_it);
#line 1572 "utils.c"
				}
#line 278 "/run/build/folks/tools/inspect/utils.vala"
				_tmp33_ = output_string;
#line 278 "/run/build/folks/tools/inspect/utils.vala"
				_tmp34_ = g_strconcat (_tmp33_, " }", NULL);
#line 278 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (output_string);
#line 278 "/run/build/folks/tools/inspect/utils.vala"
				output_string = _tmp34_;
#line 279 "/run/build/folks/tools/inspect/utils.vala"
				result = output_string;
#line 279 "/run/build/folks/tools/inspect/utils.vala"
				_g_object_unref0 (groups);
#line 279 "/run/build/folks/tools/inspect/utils.vala"
				return result;
#line 1588 "utils.c"
			} else {
#line 281 "/run/build/folks/tools/inspect/utils.vala"
				if (g_strcmp0 (prop_name, "avatar") == 0) {
#line 1592 "utils.c"
					gchar* ret = NULL;
					GLoadableIcon* avatar = NULL;
					GObject* _tmp35_;
					GLoadableIcon* _tmp36_;
					gboolean _tmp37_ = FALSE;
					gboolean _tmp38_ = FALSE;
					GLoadableIcon* _tmp39_;
#line 283 "/run/build/folks/tools/inspect/utils.vala"
					ret = NULL;
#line 284 "/run/build/folks/tools/inspect/utils.vala"
					_tmp35_ = g_value_get_object (prop_value);
#line 284 "/run/build/folks/tools/inspect/utils.vala"
					_tmp36_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp35_, g_loadable_icon_get_type (), GLoadableIcon));
#line 284 "/run/build/folks/tools/inspect/utils.vala"
					avatar = _tmp36_;
#line 286 "/run/build/folks/tools/inspect/utils.vala"
					_tmp39_ = avatar;
#line 286 "/run/build/folks/tools/inspect/utils.vala"
					if (_tmp39_ != NULL) {
#line 1612 "utils.c"
						GLoadableIcon* _tmp40_;
#line 287 "/run/build/folks/tools/inspect/utils.vala"
						_tmp40_ = avatar;
#line 287 "/run/build/folks/tools/inspect/utils.vala"
						_tmp38_ = G_TYPE_CHECK_INSTANCE_TYPE (_tmp40_, g_file_icon_get_type ());
#line 1618 "utils.c"
					} else {
#line 286 "/run/build/folks/tools/inspect/utils.vala"
						_tmp38_ = FALSE;
#line 1622 "utils.c"
					}
#line 286 "/run/build/folks/tools/inspect/utils.vala"
					if (_tmp38_) {
#line 1626 "utils.c"
						GLoadableIcon* _tmp41_;
						GFile* _tmp42_;
#line 287 "/run/build/folks/tools/inspect/utils.vala"
						_tmp41_ = avatar;
#line 287 "/run/build/folks/tools/inspect/utils.vala"
						_tmp42_ = g_file_icon_get_file (G_TYPE_CHECK_INSTANCE_CAST (_tmp41_, g_file_icon_get_type (), GFileIcon));
#line 287 "/run/build/folks/tools/inspect/utils.vala"
						_tmp37_ = _tmp42_ != NULL;
#line 1635 "utils.c"
					} else {
#line 286 "/run/build/folks/tools/inspect/utils.vala"
						_tmp37_ = FALSE;
#line 1639 "utils.c"
					}
#line 286 "/run/build/folks/tools/inspect/utils.vala"
					if (_tmp37_) {
#line 1643 "utils.c"
						GLoadableIcon* _tmp43_;
						GLoadableIcon* _tmp44_;
						GFile* _tmp45_;
						gchar* _tmp46_;
						gchar* _tmp47_;
						gchar* _tmp48_;
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						_tmp43_ = avatar;
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						_tmp44_ = avatar;
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						_tmp45_ = g_file_icon_get_file (G_TYPE_CHECK_INSTANCE_CAST (_tmp44_, g_file_icon_get_type (), GFileIcon));
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						_tmp46_ = g_file_get_uri (_tmp45_);
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						_tmp47_ = _tmp46_;
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						_tmp48_ = g_strdup_printf ("%p (file: %s)", _tmp43_, _tmp47_);
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						_g_free0 (ret);
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						ret = _tmp48_;
#line 289 "/run/build/folks/tools/inspect/utils.vala"
						_g_free0 (_tmp47_);
#line 1668 "utils.c"
					} else {
						GLoadableIcon* _tmp49_;
#line 292 "/run/build/folks/tools/inspect/utils.vala"
						_tmp49_ = avatar;
#line 292 "/run/build/folks/tools/inspect/utils.vala"
						if (_tmp49_ != NULL) {
#line 1675 "utils.c"
							GLoadableIcon* _tmp50_;
							gchar* _tmp51_;
#line 294 "/run/build/folks/tools/inspect/utils.vala"
							_tmp50_ = avatar;
#line 294 "/run/build/folks/tools/inspect/utils.vala"
							_tmp51_ = g_strdup_printf ("%p", _tmp50_);
#line 294 "/run/build/folks/tools/inspect/utils.vala"
							_g_free0 (ret);
#line 294 "/run/build/folks/tools/inspect/utils.vala"
							ret = _tmp51_;
#line 1686 "utils.c"
						}
					}
#line 297 "/run/build/folks/tools/inspect/utils.vala"
					result = ret;
#line 297 "/run/build/folks/tools/inspect/utils.vala"
					_g_object_unref0 (avatar);
#line 297 "/run/build/folks/tools/inspect/utils.vala"
					_g_free0 (output_string);
#line 297 "/run/build/folks/tools/inspect/utils.vala"
					return result;
#line 1697 "utils.c"
				} else {
#line 299 "/run/build/folks/tools/inspect/utils.vala"
					if (g_strcmp0 (prop_name, "file") == 0) {
#line 1701 "utils.c"
						gchar* ret = NULL;
						GFile* file = NULL;
						GObject* _tmp52_;
						GFile* _tmp53_;
						GFile* _tmp54_;
#line 301 "/run/build/folks/tools/inspect/utils.vala"
						ret = NULL;
#line 302 "/run/build/folks/tools/inspect/utils.vala"
						_tmp52_ = g_value_get_object (prop_value);
#line 302 "/run/build/folks/tools/inspect/utils.vala"
						_tmp53_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp52_, g_file_get_type (), GFile));
#line 302 "/run/build/folks/tools/inspect/utils.vala"
						file = _tmp53_;
#line 304 "/run/build/folks/tools/inspect/utils.vala"
						_tmp54_ = file;
#line 304 "/run/build/folks/tools/inspect/utils.vala"
						if (_tmp54_ != NULL) {
#line 1719 "utils.c"
							GFile* _tmp55_;
							GFile* _tmp56_;
							gchar* _tmp57_;
							gchar* _tmp58_;
							gchar* _tmp59_;
#line 306 "/run/build/folks/tools/inspect/utils.vala"
							_tmp55_ = file;
#line 306 "/run/build/folks/tools/inspect/utils.vala"
							_tmp56_ = file;
#line 306 "/run/build/folks/tools/inspect/utils.vala"
							_tmp57_ = g_file_get_uri (_tmp56_);
#line 306 "/run/build/folks/tools/inspect/utils.vala"
							_tmp58_ = _tmp57_;
#line 306 "/run/build/folks/tools/inspect/utils.vala"
							_tmp59_ = g_strdup_printf ("%p (file: %s)", _tmp55_, _tmp58_);
#line 306 "/run/build/folks/tools/inspect/utils.vala"
							_g_free0 (ret);
#line 306 "/run/build/folks/tools/inspect/utils.vala"
							ret = _tmp59_;
#line 306 "/run/build/folks/tools/inspect/utils.vala"
							_g_free0 (_tmp58_);
#line 1741 "utils.c"
						}
#line 309 "/run/build/folks/tools/inspect/utils.vala"
						result = ret;
#line 309 "/run/build/folks/tools/inspect/utils.vala"
						_g_object_unref0 (file);
#line 309 "/run/build/folks/tools/inspect/utils.vala"
						_g_free0 (output_string);
#line 309 "/run/build/folks/tools/inspect/utils.vala"
						return result;
#line 1751 "utils.c"
					} else {
						gboolean _tmp60_ = FALSE;
#line 311 "/run/build/folks/tools/inspect/utils.vala"
						if (g_strcmp0 (prop_name, "im-addresses") == 0) {
#line 311 "/run/build/folks/tools/inspect/utils.vala"
							_tmp60_ = TRUE;
#line 1758 "utils.c"
						} else {
#line 312 "/run/build/folks/tools/inspect/utils.vala"
							_tmp60_ = g_strcmp0 (prop_name, "web-service-addresses") == 0;
#line 1762 "utils.c"
						}
#line 311 "/run/build/folks/tools/inspect/utils.vala"
						if (_tmp60_) {
#line 1766 "utils.c"
							GeeMultiMap* prop_list = NULL;
							GObject* _tmp61_;
							GeeMultiMap* _tmp62_;
							gchar* _tmp63_;
							gboolean first = FALSE;
							const gchar* _tmp100_;
							gchar* _tmp101_;
#line 314 "/run/build/folks/tools/inspect/utils.vala"
							_tmp61_ = g_value_get_object (prop_value);
#line 314 "/run/build/folks/tools/inspect/utils.vala"
							_tmp62_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp61_, GEE_TYPE_MULTI_MAP, GeeMultiMap));
#line 314 "/run/build/folks/tools/inspect/utils.vala"
							prop_list = _tmp62_;
#line 317 "/run/build/folks/tools/inspect/utils.vala"
							_tmp63_ = g_strdup ("{ ");
#line 317 "/run/build/folks/tools/inspect/utils.vala"
							_g_free0 (output_string);
#line 317 "/run/build/folks/tools/inspect/utils.vala"
							output_string = _tmp63_;
#line 318 "/run/build/folks/tools/inspect/utils.vala"
							first = TRUE;
#line 1788 "utils.c"
							{
								GeeIterator* _k_it = NULL;
								GeeMultiMap* _tmp64_;
								GeeSet* _tmp65_;
								GeeSet* _tmp66_;
								GeeIterator* _tmp67_;
								GeeIterator* _tmp68_;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								_tmp64_ = prop_list;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								_tmp65_ = gee_multi_map_get_keys (_tmp64_);
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								_tmp66_ = _tmp65_;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								_tmp67_ = gee_iterable_iterator ((GeeIterable*) _tmp66_);
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								_tmp68_ = _tmp67_;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								_g_object_unref0 (_tmp66_);
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								_k_it = _tmp68_;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								while (TRUE) {
#line 1812 "utils.c"
									GeeIterator* _tmp69_;
									gchar* k = NULL;
									GeeIterator* _tmp70_;
									gpointer _tmp71_;
									gboolean _tmp72_;
									const gchar* _tmp75_;
									const gchar* _tmp76_;
									gchar* _tmp77_;
									gchar* _tmp78_;
									gchar* _tmp79_;
									GeeCollection* v = NULL;
									GeeMultiMap* _tmp80_;
									const gchar* _tmp81_;
									GeeCollection* _tmp82_;
									gboolean _first = FALSE;
									const gchar* _tmp98_;
									gchar* _tmp99_;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
									_tmp69_ = _k_it;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
									if (!gee_iterator_next (_tmp69_)) {
#line 320 "/run/build/folks/tools/inspect/utils.vala"
										break;
#line 1836 "utils.c"
									}
#line 320 "/run/build/folks/tools/inspect/utils.vala"
									_tmp70_ = _k_it;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
									_tmp71_ = gee_iterator_get (_tmp70_);
#line 320 "/run/build/folks/tools/inspect/utils.vala"
									k = (gchar*) _tmp71_;
#line 322 "/run/build/folks/tools/inspect/utils.vala"
									_tmp72_ = first;
#line 322 "/run/build/folks/tools/inspect/utils.vala"
									if (_tmp72_ == FALSE) {
#line 1848 "utils.c"
										const gchar* _tmp73_;
										gchar* _tmp74_;
#line 323 "/run/build/folks/tools/inspect/utils.vala"
										_tmp73_ = output_string;
#line 323 "/run/build/folks/tools/inspect/utils.vala"
										_tmp74_ = g_strconcat (_tmp73_, ", ", NULL);
#line 323 "/run/build/folks/tools/inspect/utils.vala"
										_g_free0 (output_string);
#line 323 "/run/build/folks/tools/inspect/utils.vala"
										output_string = _tmp74_;
#line 1859 "utils.c"
									}
#line 324 "/run/build/folks/tools/inspect/utils.vala"
									_tmp75_ = output_string;
#line 324 "/run/build/folks/tools/inspect/utils.vala"
									_tmp76_ = k;
#line 324 "/run/build/folks/tools/inspect/utils.vala"
									_tmp77_ = g_strdup_printf ("'%s' : { ", _tmp76_);
#line 324 "/run/build/folks/tools/inspect/utils.vala"
									_tmp78_ = _tmp77_;
#line 324 "/run/build/folks/tools/inspect/utils.vala"
									_tmp79_ = g_strconcat (_tmp75_, _tmp78_, NULL);
#line 324 "/run/build/folks/tools/inspect/utils.vala"
									_g_free0 (output_string);
#line 324 "/run/build/folks/tools/inspect/utils.vala"
									output_string = _tmp79_;
#line 324 "/run/build/folks/tools/inspect/utils.vala"
									_g_free0 (_tmp78_);
#line 325 "/run/build/folks/tools/inspect/utils.vala"
									first = FALSE;
#line 327 "/run/build/folks/tools/inspect/utils.vala"
									_tmp80_ = prop_list;
#line 327 "/run/build/folks/tools/inspect/utils.vala"
									_tmp81_ = k;
#line 327 "/run/build/folks/tools/inspect/utils.vala"
									_tmp82_ = gee_multi_map_get (_tmp80_, _tmp81_);
#line 327 "/run/build/folks/tools/inspect/utils.vala"
									v = _tmp82_;
#line 328 "/run/build/folks/tools/inspect/utils.vala"
									_first = TRUE;
#line 1889 "utils.c"
									{
										GeeIterator* _a_it = NULL;
										GeeCollection* _tmp83_;
										GeeIterator* _tmp84_;
#line 329 "/run/build/folks/tools/inspect/utils.vala"
										_tmp83_ = v;
#line 329 "/run/build/folks/tools/inspect/utils.vala"
										_tmp84_ = gee_iterable_iterator ((GeeIterable*) _tmp83_);
#line 329 "/run/build/folks/tools/inspect/utils.vala"
										_a_it = _tmp84_;
#line 329 "/run/build/folks/tools/inspect/utils.vala"
										while (TRUE) {
#line 1902 "utils.c"
											GeeIterator* _tmp85_;
											FolksAbstractFieldDetails* a = NULL;
											GeeIterator* _tmp86_;
											gpointer _tmp87_;
											gboolean _tmp88_;
											const gchar* _tmp91_;
											FolksAbstractFieldDetails* _tmp92_;
											gconstpointer _tmp93_;
											const gchar* _tmp94_;
											gchar* _tmp95_;
											gchar* _tmp96_;
											gchar* _tmp97_;
#line 329 "/run/build/folks/tools/inspect/utils.vala"
											_tmp85_ = _a_it;
#line 329 "/run/build/folks/tools/inspect/utils.vala"
											if (!gee_iterator_next (_tmp85_)) {
#line 329 "/run/build/folks/tools/inspect/utils.vala"
												break;
#line 1921 "utils.c"
											}
#line 329 "/run/build/folks/tools/inspect/utils.vala"
											_tmp86_ = _a_it;
#line 329 "/run/build/folks/tools/inspect/utils.vala"
											_tmp87_ = gee_iterator_get (_tmp86_);
#line 329 "/run/build/folks/tools/inspect/utils.vala"
											a = (FolksAbstractFieldDetails*) _tmp87_;
#line 331 "/run/build/folks/tools/inspect/utils.vala"
											_tmp88_ = _first;
#line 331 "/run/build/folks/tools/inspect/utils.vala"
											if (_tmp88_ == FALSE) {
#line 1933 "utils.c"
												const gchar* _tmp89_;
												gchar* _tmp90_;
#line 332 "/run/build/folks/tools/inspect/utils.vala"
												_tmp89_ = output_string;
#line 332 "/run/build/folks/tools/inspect/utils.vala"
												_tmp90_ = g_strconcat (_tmp89_, ", ", NULL);
#line 332 "/run/build/folks/tools/inspect/utils.vala"
												_g_free0 (output_string);
#line 332 "/run/build/folks/tools/inspect/utils.vala"
												output_string = _tmp90_;
#line 1944 "utils.c"
											}
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_tmp91_ = output_string;
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_tmp92_ = a;
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_tmp93_ = folks_abstract_field_details_get_value (_tmp92_);
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_tmp94_ = _tmp93_;
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_tmp95_ = g_strdup_printf ("'%s'", (const gchar*) _tmp94_);
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_tmp96_ = _tmp95_;
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_tmp97_ = g_strconcat (_tmp91_, _tmp96_, NULL);
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_g_free0 (output_string);
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											output_string = _tmp97_;
#line 333 "/run/build/folks/tools/inspect/utils.vala"
											_g_free0 (_tmp96_);
#line 334 "/run/build/folks/tools/inspect/utils.vala"
											_first = FALSE;
#line 329 "/run/build/folks/tools/inspect/utils.vala"
											_g_object_unref0 (a);
#line 1970 "utils.c"
										}
#line 329 "/run/build/folks/tools/inspect/utils.vala"
										_g_object_unref0 (_a_it);
#line 1974 "utils.c"
									}
#line 337 "/run/build/folks/tools/inspect/utils.vala"
									_tmp98_ = output_string;
#line 337 "/run/build/folks/tools/inspect/utils.vala"
									_tmp99_ = g_strconcat (_tmp98_, " }", NULL);
#line 337 "/run/build/folks/tools/inspect/utils.vala"
									_g_free0 (output_string);
#line 337 "/run/build/folks/tools/inspect/utils.vala"
									output_string = _tmp99_;
#line 320 "/run/build/folks/tools/inspect/utils.vala"
									_g_object_unref0 (v);
#line 320 "/run/build/folks/tools/inspect/utils.vala"
									_g_free0 (k);
#line 1988 "utils.c"
								}
#line 320 "/run/build/folks/tools/inspect/utils.vala"
								_g_object_unref0 (_k_it);
#line 1992 "utils.c"
							}
#line 340 "/run/build/folks/tools/inspect/utils.vala"
							_tmp100_ = output_string;
#line 340 "/run/build/folks/tools/inspect/utils.vala"
							_tmp101_ = g_strconcat (_tmp100_, " }", NULL);
#line 340 "/run/build/folks/tools/inspect/utils.vala"
							_g_free0 (output_string);
#line 340 "/run/build/folks/tools/inspect/utils.vala"
							output_string = _tmp101_;
#line 341 "/run/build/folks/tools/inspect/utils.vala"
							result = output_string;
#line 341 "/run/build/folks/tools/inspect/utils.vala"
							_g_object_unref0 (prop_list);
#line 341 "/run/build/folks/tools/inspect/utils.vala"
							return result;
#line 2008 "utils.c"
						} else {
							gboolean _tmp102_ = FALSE;
							gboolean _tmp103_ = FALSE;
#line 343 "/run/build/folks/tools/inspect/utils.vala"
							if (g_strcmp0 (prop_name, "email-addresses") == 0) {
#line 343 "/run/build/folks/tools/inspect/utils.vala"
								_tmp103_ = TRUE;
#line 2016 "utils.c"
							} else {
#line 344 "/run/build/folks/tools/inspect/utils.vala"
								_tmp103_ = g_strcmp0 (prop_name, "phone-numbers") == 0;
#line 2020 "utils.c"
							}
#line 343 "/run/build/folks/tools/inspect/utils.vala"
							if (_tmp103_) {
#line 343 "/run/build/folks/tools/inspect/utils.vala"
								_tmp102_ = TRUE;
#line 2026 "utils.c"
							} else {
#line 345 "/run/build/folks/tools/inspect/utils.vala"
								_tmp102_ = g_strcmp0 (prop_name, "urls") == 0;
#line 2030 "utils.c"
							}
#line 343 "/run/build/folks/tools/inspect/utils.vala"
							if (_tmp102_) {
#line 2034 "utils.c"
								gchar* _tmp104_;
								gboolean first = FALSE;
								GeeSet* prop_list = NULL;
								GObject* _tmp105_;
								GeeSet* _tmp106_;
								const gchar* _tmp120_;
								gchar* _tmp121_;
#line 347 "/run/build/folks/tools/inspect/utils.vala"
								_tmp104_ = g_strdup ("{ ");
#line 347 "/run/build/folks/tools/inspect/utils.vala"
								_g_free0 (output_string);
#line 347 "/run/build/folks/tools/inspect/utils.vala"
								output_string = _tmp104_;
#line 348 "/run/build/folks/tools/inspect/utils.vala"
								first = TRUE;
#line 349 "/run/build/folks/tools/inspect/utils.vala"
								_tmp105_ = g_value_get_object (prop_value);
#line 349 "/run/build/folks/tools/inspect/utils.vala"
								_tmp106_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp105_, GEE_TYPE_SET, GeeSet));
#line 349 "/run/build/folks/tools/inspect/utils.vala"
								prop_list = _tmp106_;
#line 2056 "utils.c"
								{
									GeeIterator* _p_it = NULL;
									GeeSet* _tmp107_;
									GeeIterator* _tmp108_;
#line 352 "/run/build/folks/tools/inspect/utils.vala"
									_tmp107_ = prop_list;
#line 352 "/run/build/folks/tools/inspect/utils.vala"
									_tmp108_ = gee_iterable_iterator ((GeeIterable*) _tmp107_);
#line 352 "/run/build/folks/tools/inspect/utils.vala"
									_p_it = _tmp108_;
#line 352 "/run/build/folks/tools/inspect/utils.vala"
									while (TRUE) {
#line 2069 "utils.c"
										GeeIterator* _tmp109_;
										FolksAbstractFieldDetails* p = NULL;
										GeeIterator* _tmp110_;
										gpointer _tmp111_;
										gboolean _tmp112_;
										const gchar* _tmp115_;
										FolksAbstractFieldDetails* _tmp116_;
										gconstpointer _tmp117_;
										const gchar* _tmp118_;
										gchar* _tmp119_;
#line 352 "/run/build/folks/tools/inspect/utils.vala"
										_tmp109_ = _p_it;
#line 352 "/run/build/folks/tools/inspect/utils.vala"
										if (!gee_iterator_next (_tmp109_)) {
#line 352 "/run/build/folks/tools/inspect/utils.vala"
											break;
#line 2086 "utils.c"
										}
#line 352 "/run/build/folks/tools/inspect/utils.vala"
										_tmp110_ = _p_it;
#line 352 "/run/build/folks/tools/inspect/utils.vala"
										_tmp111_ = gee_iterator_get (_tmp110_);
#line 352 "/run/build/folks/tools/inspect/utils.vala"
										p = (FolksAbstractFieldDetails*) _tmp111_;
#line 354 "/run/build/folks/tools/inspect/utils.vala"
										_tmp112_ = first;
#line 354 "/run/build/folks/tools/inspect/utils.vala"
										if (!_tmp112_) {
#line 2098 "utils.c"
											const gchar* _tmp113_;
											gchar* _tmp114_;
#line 356 "/run/build/folks/tools/inspect/utils.vala"
											_tmp113_ = output_string;
#line 356 "/run/build/folks/tools/inspect/utils.vala"
											_tmp114_ = g_strconcat (_tmp113_, ", ", NULL);
#line 356 "/run/build/folks/tools/inspect/utils.vala"
											_g_free0 (output_string);
#line 356 "/run/build/folks/tools/inspect/utils.vala"
											output_string = _tmp114_;
#line 2109 "utils.c"
										}
#line 358 "/run/build/folks/tools/inspect/utils.vala"
										_tmp115_ = output_string;
#line 358 "/run/build/folks/tools/inspect/utils.vala"
										_tmp116_ = p;
#line 358 "/run/build/folks/tools/inspect/utils.vala"
										_tmp117_ = folks_abstract_field_details_get_value (_tmp116_);
#line 358 "/run/build/folks/tools/inspect/utils.vala"
										_tmp118_ = _tmp117_;
#line 358 "/run/build/folks/tools/inspect/utils.vala"
										_tmp119_ = g_strconcat (_tmp115_, (const gchar*) _tmp118_, NULL);
#line 358 "/run/build/folks/tools/inspect/utils.vala"
										_g_free0 (output_string);
#line 358 "/run/build/folks/tools/inspect/utils.vala"
										output_string = _tmp119_;
#line 359 "/run/build/folks/tools/inspect/utils.vala"
										first = FALSE;
#line 352 "/run/build/folks/tools/inspect/utils.vala"
										_g_object_unref0 (p);
#line 2129 "utils.c"
									}
#line 352 "/run/build/folks/tools/inspect/utils.vala"
									_g_object_unref0 (_p_it);
#line 2133 "utils.c"
								}
#line 361 "/run/build/folks/tools/inspect/utils.vala"
								_tmp120_ = output_string;
#line 361 "/run/build/folks/tools/inspect/utils.vala"
								_tmp121_ = g_strconcat (_tmp120_, " }", NULL);
#line 361 "/run/build/folks/tools/inspect/utils.vala"
								_g_free0 (output_string);
#line 361 "/run/build/folks/tools/inspect/utils.vala"
								output_string = _tmp121_;
#line 363 "/run/build/folks/tools/inspect/utils.vala"
								result = output_string;
#line 363 "/run/build/folks/tools/inspect/utils.vala"
								_g_object_unref0 (prop_list);
#line 363 "/run/build/folks/tools/inspect/utils.vala"
								return result;
#line 2149 "utils.c"
							} else {
#line 365 "/run/build/folks/tools/inspect/utils.vala"
								if (g_strcmp0 (prop_name, "birthday") == 0) {
#line 2153 "utils.c"
									GDateTime* dobj = NULL;
									void* _tmp122_;
									GDateTime* _tmp123_;
#line 367 "/run/build/folks/tools/inspect/utils.vala"
									_tmp122_ = g_value_get_boxed (prop_value);
#line 367 "/run/build/folks/tools/inspect/utils.vala"
									dobj = (GDateTime*) _tmp122_;
#line 368 "/run/build/folks/tools/inspect/utils.vala"
									_tmp123_ = dobj;
#line 368 "/run/build/folks/tools/inspect/utils.vala"
									if (_tmp123_ != NULL) {
#line 2165 "utils.c"
										GDateTime* _tmp124_;
										gchar* _tmp125_;
#line 369 "/run/build/folks/tools/inspect/utils.vala"
										_tmp124_ = dobj;
#line 369 "/run/build/folks/tools/inspect/utils.vala"
										_tmp125_ = g_date_time_to_string (_tmp124_);
#line 369 "/run/build/folks/tools/inspect/utils.vala"
										result = _tmp125_;
#line 369 "/run/build/folks/tools/inspect/utils.vala"
										_g_free0 (output_string);
#line 369 "/run/build/folks/tools/inspect/utils.vala"
										return result;
#line 2178 "utils.c"
									} else {
										gchar* _tmp126_;
#line 371 "/run/build/folks/tools/inspect/utils.vala"
										_tmp126_ = g_strdup ("");
#line 371 "/run/build/folks/tools/inspect/utils.vala"
										result = _tmp126_;
#line 371 "/run/build/folks/tools/inspect/utils.vala"
										_g_free0 (output_string);
#line 371 "/run/build/folks/tools/inspect/utils.vala"
										return result;
#line 2189 "utils.c"
									}
								} else {
#line 373 "/run/build/folks/tools/inspect/utils.vala"
									if (g_strcmp0 (prop_name, "postal-addresses") == 0) {
#line 2194 "utils.c"
										gchar* _tmp127_;
										gboolean first = FALSE;
										GeeSet* prop_list = NULL;
										GObject* _tmp128_;
										GeeSet* _tmp129_;
										const gchar* _tmp145_;
										gchar* _tmp146_;
#line 375 "/run/build/folks/tools/inspect/utils.vala"
										_tmp127_ = g_strdup ("{ ");
#line 375 "/run/build/folks/tools/inspect/utils.vala"
										_g_free0 (output_string);
#line 375 "/run/build/folks/tools/inspect/utils.vala"
										output_string = _tmp127_;
#line 376 "/run/build/folks/tools/inspect/utils.vala"
										first = TRUE;
#line 377 "/run/build/folks/tools/inspect/utils.vala"
										_tmp128_ = g_value_get_object (prop_value);
#line 377 "/run/build/folks/tools/inspect/utils.vala"
										_tmp129_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp128_, GEE_TYPE_SET, GeeSet));
#line 377 "/run/build/folks/tools/inspect/utils.vala"
										prop_list = _tmp129_;
#line 2216 "utils.c"
										{
											GeeIterator* _p_it = NULL;
											GeeSet* _tmp130_;
											GeeIterator* _tmp131_;
#line 380 "/run/build/folks/tools/inspect/utils.vala"
											_tmp130_ = prop_list;
#line 380 "/run/build/folks/tools/inspect/utils.vala"
											_tmp131_ = gee_iterable_iterator ((GeeIterable*) _tmp130_);
#line 380 "/run/build/folks/tools/inspect/utils.vala"
											_p_it = _tmp131_;
#line 380 "/run/build/folks/tools/inspect/utils.vala"
											while (TRUE) {
#line 2229 "utils.c"
												GeeIterator* _tmp132_;
												FolksPostalAddressFieldDetails* p = NULL;
												GeeIterator* _tmp133_;
												gpointer _tmp134_;
												gboolean _tmp135_;
												const gchar* _tmp138_;
												FolksPostalAddressFieldDetails* _tmp139_;
												gconstpointer _tmp140_;
												FolksPostalAddress* _tmp141_;
												gchar* _tmp142_;
												gchar* _tmp143_;
												gchar* _tmp144_;
#line 380 "/run/build/folks/tools/inspect/utils.vala"
												_tmp132_ = _p_it;
#line 380 "/run/build/folks/tools/inspect/utils.vala"
												if (!gee_iterator_next (_tmp132_)) {
#line 380 "/run/build/folks/tools/inspect/utils.vala"
													break;
#line 2248 "utils.c"
												}
#line 380 "/run/build/folks/tools/inspect/utils.vala"
												_tmp133_ = _p_it;
#line 380 "/run/build/folks/tools/inspect/utils.vala"
												_tmp134_ = gee_iterator_get (_tmp133_);
#line 380 "/run/build/folks/tools/inspect/utils.vala"
												p = (FolksPostalAddressFieldDetails*) _tmp134_;
#line 382 "/run/build/folks/tools/inspect/utils.vala"
												_tmp135_ = first;
#line 382 "/run/build/folks/tools/inspect/utils.vala"
												if (!_tmp135_) {
#line 2260 "utils.c"
													const gchar* _tmp136_;
													gchar* _tmp137_;
#line 384 "/run/build/folks/tools/inspect/utils.vala"
													_tmp136_ = output_string;
#line 384 "/run/build/folks/tools/inspect/utils.vala"
													_tmp137_ = g_strconcat (_tmp136_, ". ", NULL);
#line 384 "/run/build/folks/tools/inspect/utils.vala"
													_g_free0 (output_string);
#line 384 "/run/build/folks/tools/inspect/utils.vala"
													output_string = _tmp137_;
#line 2271 "utils.c"
												}
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_tmp138_ = output_string;
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_tmp139_ = p;
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_tmp140_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp139_);
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_tmp141_ = _tmp140_;
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_tmp142_ = folks_postal_address_to_string ((FolksPostalAddress*) _tmp141_);
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_tmp143_ = _tmp142_;
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_tmp144_ = g_strconcat (_tmp138_, _tmp143_, NULL);
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_g_free0 (output_string);
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												output_string = _tmp144_;
#line 386 "/run/build/folks/tools/inspect/utils.vala"
												_g_free0 (_tmp143_);
#line 387 "/run/build/folks/tools/inspect/utils.vala"
												first = FALSE;
#line 380 "/run/build/folks/tools/inspect/utils.vala"
												_g_object_unref0 (p);
#line 2297 "utils.c"
											}
#line 380 "/run/build/folks/tools/inspect/utils.vala"
											_g_object_unref0 (_p_it);
#line 2301 "utils.c"
										}
#line 389 "/run/build/folks/tools/inspect/utils.vala"
										_tmp145_ = output_string;
#line 389 "/run/build/folks/tools/inspect/utils.vala"
										_tmp146_ = g_strconcat (_tmp145_, " }", NULL);
#line 389 "/run/build/folks/tools/inspect/utils.vala"
										_g_free0 (output_string);
#line 389 "/run/build/folks/tools/inspect/utils.vala"
										output_string = _tmp146_;
#line 391 "/run/build/folks/tools/inspect/utils.vala"
										result = output_string;
#line 391 "/run/build/folks/tools/inspect/utils.vala"
										_g_object_unref0 (prop_list);
#line 391 "/run/build/folks/tools/inspect/utils.vala"
										return result;
#line 2317 "utils.c"
									} else {
#line 393 "/run/build/folks/tools/inspect/utils.vala"
										if (g_strcmp0 (prop_name, "notes") == 0) {
#line 2321 "utils.c"
											GeeSet* notes = NULL;
											GObject* _tmp147_;
											GeeSet* _tmp148_;
											gchar* _tmp149_;
											gboolean first = FALSE;
											const gchar* _tmp163_;
											gchar* _tmp164_;
#line 395 "/run/build/folks/tools/inspect/utils.vala"
											_tmp147_ = g_value_get_object (prop_value);
#line 395 "/run/build/folks/tools/inspect/utils.vala"
											_tmp148_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp147_, GEE_TYPE_SET) ? ((GeeSet*) _tmp147_) : NULL);
#line 395 "/run/build/folks/tools/inspect/utils.vala"
											notes = _tmp148_;
#line 398 "/run/build/folks/tools/inspect/utils.vala"
											_tmp149_ = g_strdup ("{ ");
#line 398 "/run/build/folks/tools/inspect/utils.vala"
											_g_free0 (output_string);
#line 398 "/run/build/folks/tools/inspect/utils.vala"
											output_string = _tmp149_;
#line 399 "/run/build/folks/tools/inspect/utils.vala"
											first = TRUE;
#line 2343 "utils.c"
											{
												GeeIterator* _note_it = NULL;
												GeeSet* _tmp150_;
												GeeIterator* _tmp151_;
#line 401 "/run/build/folks/tools/inspect/utils.vala"
												_tmp150_ = notes;
#line 401 "/run/build/folks/tools/inspect/utils.vala"
												_tmp151_ = gee_iterable_iterator ((GeeIterable*) _tmp150_);
#line 401 "/run/build/folks/tools/inspect/utils.vala"
												_note_it = _tmp151_;
#line 401 "/run/build/folks/tools/inspect/utils.vala"
												while (TRUE) {
#line 2356 "utils.c"
													GeeIterator* _tmp152_;
													FolksNoteFieldDetails* note = NULL;
													GeeIterator* _tmp153_;
													gpointer _tmp154_;
													gboolean _tmp155_;
													const gchar* _tmp158_;
													FolksNoteFieldDetails* _tmp159_;
													const gchar* _tmp160_;
													const gchar* _tmp161_;
													gchar* _tmp162_;
#line 401 "/run/build/folks/tools/inspect/utils.vala"
													_tmp152_ = _note_it;
#line 401 "/run/build/folks/tools/inspect/utils.vala"
													if (!gee_iterator_next (_tmp152_)) {
#line 401 "/run/build/folks/tools/inspect/utils.vala"
														break;
#line 2373 "utils.c"
													}
#line 401 "/run/build/folks/tools/inspect/utils.vala"
													_tmp153_ = _note_it;
#line 401 "/run/build/folks/tools/inspect/utils.vala"
													_tmp154_ = gee_iterator_get (_tmp153_);
#line 401 "/run/build/folks/tools/inspect/utils.vala"
													note = (FolksNoteFieldDetails*) _tmp154_;
#line 403 "/run/build/folks/tools/inspect/utils.vala"
													_tmp155_ = first;
#line 403 "/run/build/folks/tools/inspect/utils.vala"
													if (!_tmp155_) {
#line 2385 "utils.c"
														const gchar* _tmp156_;
														gchar* _tmp157_;
#line 405 "/run/build/folks/tools/inspect/utils.vala"
														_tmp156_ = output_string;
#line 405 "/run/build/folks/tools/inspect/utils.vala"
														_tmp157_ = g_strconcat (_tmp156_, ", ", NULL);
#line 405 "/run/build/folks/tools/inspect/utils.vala"
														_g_free0 (output_string);
#line 405 "/run/build/folks/tools/inspect/utils.vala"
														output_string = _tmp157_;
#line 2396 "utils.c"
													}
#line 407 "/run/build/folks/tools/inspect/utils.vala"
													_tmp158_ = output_string;
#line 407 "/run/build/folks/tools/inspect/utils.vala"
													_tmp159_ = note;
#line 407 "/run/build/folks/tools/inspect/utils.vala"
													_tmp160_ = folks_abstract_field_details_get_id ((FolksAbstractFieldDetails*) _tmp159_);
#line 407 "/run/build/folks/tools/inspect/utils.vala"
													_tmp161_ = _tmp160_;
#line 407 "/run/build/folks/tools/inspect/utils.vala"
													_tmp162_ = g_strconcat (_tmp158_, _tmp161_, NULL);
#line 407 "/run/build/folks/tools/inspect/utils.vala"
													_g_free0 (output_string);
#line 407 "/run/build/folks/tools/inspect/utils.vala"
													output_string = _tmp162_;
#line 408 "/run/build/folks/tools/inspect/utils.vala"
													first = FALSE;
#line 401 "/run/build/folks/tools/inspect/utils.vala"
													_g_object_unref0 (note);
#line 2416 "utils.c"
												}
#line 401 "/run/build/folks/tools/inspect/utils.vala"
												_g_object_unref0 (_note_it);
#line 2420 "utils.c"
											}
#line 410 "/run/build/folks/tools/inspect/utils.vala"
											_tmp163_ = output_string;
#line 410 "/run/build/folks/tools/inspect/utils.vala"
											_tmp164_ = g_strconcat (_tmp163_, " }", NULL);
#line 410 "/run/build/folks/tools/inspect/utils.vala"
											_g_free0 (output_string);
#line 410 "/run/build/folks/tools/inspect/utils.vala"
											output_string = _tmp164_;
#line 412 "/run/build/folks/tools/inspect/utils.vala"
											result = output_string;
#line 412 "/run/build/folks/tools/inspect/utils.vala"
											_g_object_unref0 (notes);
#line 412 "/run/build/folks/tools/inspect/utils.vala"
											return result;
#line 2436 "utils.c"
										} else {
#line 414 "/run/build/folks/tools/inspect/utils.vala"
											if (g_strcmp0 (prop_name, "roles") == 0) {
#line 2440 "utils.c"
												GeeSet* roles = NULL;
												GObject* _tmp165_;
												GeeSet* _tmp166_;
												gchar* _tmp167_;
												gboolean first = FALSE;
												const gchar* _tmp183_;
												gchar* _tmp184_;
#line 416 "/run/build/folks/tools/inspect/utils.vala"
												_tmp165_ = g_value_get_object (prop_value);
#line 416 "/run/build/folks/tools/inspect/utils.vala"
												_tmp166_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp165_, GEE_TYPE_SET, GeeSet));
#line 416 "/run/build/folks/tools/inspect/utils.vala"
												roles = _tmp166_;
#line 418 "/run/build/folks/tools/inspect/utils.vala"
												_tmp167_ = g_strdup ("{ ");
#line 418 "/run/build/folks/tools/inspect/utils.vala"
												_g_free0 (output_string);
#line 418 "/run/build/folks/tools/inspect/utils.vala"
												output_string = _tmp167_;
#line 419 "/run/build/folks/tools/inspect/utils.vala"
												first = TRUE;
#line 2462 "utils.c"
												{
													GeeIterator* _role_it = NULL;
													GeeSet* _tmp168_;
													GeeIterator* _tmp169_;
#line 421 "/run/build/folks/tools/inspect/utils.vala"
													_tmp168_ = roles;
#line 421 "/run/build/folks/tools/inspect/utils.vala"
													_tmp169_ = gee_iterable_iterator ((GeeIterable*) _tmp168_);
#line 421 "/run/build/folks/tools/inspect/utils.vala"
													_role_it = _tmp169_;
#line 421 "/run/build/folks/tools/inspect/utils.vala"
													while (TRUE) {
#line 2475 "utils.c"
														GeeIterator* _tmp170_;
														FolksRoleFieldDetails* role = NULL;
														GeeIterator* _tmp171_;
														gpointer _tmp172_;
														gboolean _tmp173_;
														const gchar* _tmp176_;
														FolksRoleFieldDetails* _tmp177_;
														gconstpointer _tmp178_;
														FolksRole* _tmp179_;
														gchar* _tmp180_;
														gchar* _tmp181_;
														gchar* _tmp182_;
#line 421 "/run/build/folks/tools/inspect/utils.vala"
														_tmp170_ = _role_it;
#line 421 "/run/build/folks/tools/inspect/utils.vala"
														if (!gee_iterator_next (_tmp170_)) {
#line 421 "/run/build/folks/tools/inspect/utils.vala"
															break;
#line 2494 "utils.c"
														}
#line 421 "/run/build/folks/tools/inspect/utils.vala"
														_tmp171_ = _role_it;
#line 421 "/run/build/folks/tools/inspect/utils.vala"
														_tmp172_ = gee_iterator_get (_tmp171_);
#line 421 "/run/build/folks/tools/inspect/utils.vala"
														role = (FolksRoleFieldDetails*) _tmp172_;
#line 423 "/run/build/folks/tools/inspect/utils.vala"
														_tmp173_ = first;
#line 423 "/run/build/folks/tools/inspect/utils.vala"
														if (!_tmp173_) {
#line 2506 "utils.c"
															const gchar* _tmp174_;
															gchar* _tmp175_;
#line 425 "/run/build/folks/tools/inspect/utils.vala"
															_tmp174_ = output_string;
#line 425 "/run/build/folks/tools/inspect/utils.vala"
															_tmp175_ = g_strconcat (_tmp174_, ", ", NULL);
#line 425 "/run/build/folks/tools/inspect/utils.vala"
															_g_free0 (output_string);
#line 425 "/run/build/folks/tools/inspect/utils.vala"
															output_string = _tmp175_;
#line 2517 "utils.c"
														}
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_tmp176_ = output_string;
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_tmp177_ = role;
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_tmp178_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp177_);
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_tmp179_ = _tmp178_;
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_tmp180_ = folks_role_to_string ((FolksRole*) _tmp179_);
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_tmp181_ = _tmp180_;
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_tmp182_ = g_strconcat (_tmp176_, _tmp181_, NULL);
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_g_free0 (output_string);
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														output_string = _tmp182_;
#line 427 "/run/build/folks/tools/inspect/utils.vala"
														_g_free0 (_tmp181_);
#line 428 "/run/build/folks/tools/inspect/utils.vala"
														first = FALSE;
#line 421 "/run/build/folks/tools/inspect/utils.vala"
														_g_object_unref0 (role);
#line 2543 "utils.c"
													}
#line 421 "/run/build/folks/tools/inspect/utils.vala"
													_g_object_unref0 (_role_it);
#line 2547 "utils.c"
												}
#line 430 "/run/build/folks/tools/inspect/utils.vala"
												_tmp183_ = output_string;
#line 430 "/run/build/folks/tools/inspect/utils.vala"
												_tmp184_ = g_strconcat (_tmp183_, " }", NULL);
#line 430 "/run/build/folks/tools/inspect/utils.vala"
												_g_free0 (output_string);
#line 430 "/run/build/folks/tools/inspect/utils.vala"
												output_string = _tmp184_;
#line 432 "/run/build/folks/tools/inspect/utils.vala"
												result = output_string;
#line 432 "/run/build/folks/tools/inspect/utils.vala"
												_g_object_unref0 (roles);
#line 432 "/run/build/folks/tools/inspect/utils.vala"
												return result;
#line 2563 "utils.c"
											} else {
#line 434 "/run/build/folks/tools/inspect/utils.vala"
												if (g_strcmp0 (prop_name, "structured-name") == 0) {
#line 2567 "utils.c"
													FolksStructuredName* sn = NULL;
													GObject* _tmp185_;
													gchar* ret = NULL;
													FolksStructuredName* _tmp186_;
#line 436 "/run/build/folks/tools/inspect/utils.vala"
													_tmp185_ = g_value_get_object (prop_value);
#line 436 "/run/build/folks/tools/inspect/utils.vala"
													sn = G_TYPE_CHECK_INSTANCE_CAST (_tmp185_, FOLKS_TYPE_STRUCTURED_NAME, FolksStructuredName);
#line 437 "/run/build/folks/tools/inspect/utils.vala"
													ret = NULL;
#line 438 "/run/build/folks/tools/inspect/utils.vala"
													_tmp186_ = sn;
#line 438 "/run/build/folks/tools/inspect/utils.vala"
													if (_tmp186_ != NULL) {
#line 2582 "utils.c"
														FolksStructuredName* _tmp187_;
														gchar* _tmp188_;
#line 439 "/run/build/folks/tools/inspect/utils.vala"
														_tmp187_ = sn;
#line 439 "/run/build/folks/tools/inspect/utils.vala"
														_tmp188_ = folks_structured_name_to_string (_tmp187_);
#line 439 "/run/build/folks/tools/inspect/utils.vala"
														_g_free0 (ret);
#line 439 "/run/build/folks/tools/inspect/utils.vala"
														ret = _tmp188_;
#line 2593 "utils.c"
													}
#line 440 "/run/build/folks/tools/inspect/utils.vala"
													result = ret;
#line 440 "/run/build/folks/tools/inspect/utils.vala"
													_g_free0 (output_string);
#line 440 "/run/build/folks/tools/inspect/utils.vala"
													return result;
#line 2601 "utils.c"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
#line 443 "/run/build/folks/tools/inspect/utils.vala"
	_tmp189_ = *prop_value;
#line 443 "/run/build/folks/tools/inspect/utils.vala"
	_tmp190_ = folks_inspect_utils_transform_value_to_string (&_tmp189_);
#line 443 "/run/build/folks/tools/inspect/utils.vala"
	result = _tmp190_;
#line 443 "/run/build/folks/tools/inspect/utils.vala"
	_g_free0 (output_string);
#line 443 "/run/build/folks/tools/inspect/utils.vala"
	return result;
#line 2624 "utils.c"
}


gchar*
folks_inspect_utils_transform_value_to_string (GValue* prop_value)
{
	gchar* result = NULL;
#line 446 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (prop_value != NULL, NULL);
#line 448 "/run/build/folks/tools/inspect/utils.vala"
	if (g_value_type_transformable (G_VALUE_TYPE (prop_value), G_TYPE_STRING)) {
#line 2636 "utils.c"
		GValue string_value = {0};
		GValue _tmp0_ = {0};
		const gchar* _tmp1_;
		gchar* _tmp2_;
#line 451 "/run/build/folks/tools/inspect/utils.vala"
		g_value_init (&_tmp0_, G_TYPE_STRING);
#line 451 "/run/build/folks/tools/inspect/utils.vala"
		string_value = _tmp0_;
#line 452 "/run/build/folks/tools/inspect/utils.vala"
		g_value_transform (prop_value, &string_value);
#line 453 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = g_value_get_string (&string_value);
#line 453 "/run/build/folks/tools/inspect/utils.vala"
		_tmp2_ = g_strdup (_tmp1_);
#line 453 "/run/build/folks/tools/inspect/utils.vala"
		result = _tmp2_;
#line 453 "/run/build/folks/tools/inspect/utils.vala"
		G_IS_VALUE (&string_value) ? (g_value_unset (&string_value), NULL) : NULL;
#line 453 "/run/build/folks/tools/inspect/utils.vala"
		return result;
#line 2657 "utils.c"
	} else {
		const gchar* _tmp3_;
		const gchar* _tmp4_;
		gchar* _tmp5_;
#line 458 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = g_type_name (G_VALUE_TYPE (prop_value));
#line 458 "/run/build/folks/tools/inspect/utils.vala"
		_tmp4_ = g_type_name (G_TYPE_STRING);
#line 458 "/run/build/folks/tools/inspect/utils.vala"
		_tmp5_ = g_strdup_printf ("Can't convert from type '%s' to '%s'", _tmp3_, _tmp4_);
#line 458 "/run/build/folks/tools/inspect/utils.vala"
		result = _tmp5_;
#line 458 "/run/build/folks/tools/inspect/utils.vala"
		return result;
#line 2672 "utils.c"
	}
}


gchar*
folks_inspect_utils_command_name_completion_cb (const gchar* word,
                                                gint state)
{
	gchar* result = NULL;
#line 468 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (word != NULL, NULL);
#line 472 "/run/build/folks/tools/inspect/utils.vala"
	if (state == 0) {
#line 2686 "utils.c"
		FolksInspectClient* _tmp0_;
		GeeHashMap* _tmp1_;
		GeeMapIterator* _tmp2_;
#line 473 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = main_client;
#line 473 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = _tmp0_->commands;
#line 473 "/run/build/folks/tools/inspect/utils.vala"
		_tmp2_ = gee_abstract_map_map_iterator ((GeeAbstractMap*) _tmp1_);
#line 473 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_command_name_iter);
#line 473 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_command_name_iter = _tmp2_;
#line 2700 "utils.c"
	}
#line 475 "/run/build/folks/tools/inspect/utils.vala"
	while (TRUE) {
#line 2704 "utils.c"
		GeeMapIterator* _tmp3_;
		gchar* command_name = NULL;
		GeeMapIterator* _tmp4_;
		gpointer _tmp5_;
		const gchar* _tmp6_;
#line 475 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = folks_inspect_utils_command_name_iter;
#line 475 "/run/build/folks/tools/inspect/utils.vala"
		if (!(gee_map_iterator_next (_tmp3_) == TRUE)) {
#line 475 "/run/build/folks/tools/inspect/utils.vala"
			break;
#line 2716 "utils.c"
		}
#line 477 "/run/build/folks/tools/inspect/utils.vala"
		_tmp4_ = folks_inspect_utils_command_name_iter;
#line 477 "/run/build/folks/tools/inspect/utils.vala"
		_tmp5_ = gee_map_iterator_get_key (_tmp4_);
#line 477 "/run/build/folks/tools/inspect/utils.vala"
		command_name = (gchar*) _tmp5_;
#line 478 "/run/build/folks/tools/inspect/utils.vala"
		_tmp6_ = command_name;
#line 478 "/run/build/folks/tools/inspect/utils.vala"
		if (g_str_has_prefix (_tmp6_, word)) {
#line 479 "/run/build/folks/tools/inspect/utils.vala"
			result = command_name;
#line 479 "/run/build/folks/tools/inspect/utils.vala"
			return result;
#line 2732 "utils.c"
		}
#line 475 "/run/build/folks/tools/inspect/utils.vala"
		_g_free0 (command_name);
#line 2736 "utils.c"
	}
#line 483 "/run/build/folks/tools/inspect/utils.vala"
	_g_object_unref0 (folks_inspect_utils_command_name_iter);
#line 483 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_command_name_iter = NULL;
#line 484 "/run/build/folks/tools/inspect/utils.vala"
	result = NULL;
#line 484 "/run/build/folks/tools/inspect/utils.vala"
	return result;
#line 2746 "utils.c"
}


gchar*
folks_inspect_utils_individual_id_completion_cb (const gchar* word,
                                                 gint state)
{
	gchar* result = NULL;
#line 492 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (word != NULL, NULL);
#line 496 "/run/build/folks/tools/inspect/utils.vala"
	if (state == 0) {
#line 2759 "utils.c"
		FolksInspectClient* _tmp0_;
		FolksIndividualAggregator* _tmp1_;
		FolksIndividualAggregator* _tmp2_;
		GeeMap* _tmp3_;
		GeeMap* _tmp4_;
		GeeMapIterator* _tmp5_;
#line 498 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = main_client;
#line 498 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = folks_inspect_client_get_aggregator (_tmp0_);
#line 498 "/run/build/folks/tools/inspect/utils.vala"
		_tmp2_ = _tmp1_;
#line 498 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = folks_individual_aggregator_get_individuals (_tmp2_);
#line 498 "/run/build/folks/tools/inspect/utils.vala"
		_tmp4_ = _tmp3_;
#line 498 "/run/build/folks/tools/inspect/utils.vala"
		_tmp5_ = gee_map_map_iterator (_tmp4_);
#line 498 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_individual_id_iter);
#line 498 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_individual_id_iter = _tmp5_;
#line 2782 "utils.c"
	}
#line 502 "/run/build/folks/tools/inspect/utils.vala"
	while (TRUE) {
#line 2786 "utils.c"
		GeeMapIterator* _tmp6_;
		gchar* id = NULL;
		GeeMapIterator* _tmp7_;
		gpointer _tmp8_;
		const gchar* _tmp9_;
#line 502 "/run/build/folks/tools/inspect/utils.vala"
		_tmp6_ = folks_inspect_utils_individual_id_iter;
#line 502 "/run/build/folks/tools/inspect/utils.vala"
		if (!(gee_map_iterator_next (_tmp6_) == TRUE)) {
#line 502 "/run/build/folks/tools/inspect/utils.vala"
			break;
#line 2798 "utils.c"
		}
#line 504 "/run/build/folks/tools/inspect/utils.vala"
		_tmp7_ = folks_inspect_utils_individual_id_iter;
#line 504 "/run/build/folks/tools/inspect/utils.vala"
		_tmp8_ = gee_map_iterator_get_key (_tmp7_);
#line 504 "/run/build/folks/tools/inspect/utils.vala"
		id = (gchar*) _tmp8_;
#line 505 "/run/build/folks/tools/inspect/utils.vala"
		_tmp9_ = id;
#line 505 "/run/build/folks/tools/inspect/utils.vala"
		if (g_str_has_prefix (_tmp9_, word)) {
#line 506 "/run/build/folks/tools/inspect/utils.vala"
			result = id;
#line 506 "/run/build/folks/tools/inspect/utils.vala"
			return result;
#line 2814 "utils.c"
		}
#line 502 "/run/build/folks/tools/inspect/utils.vala"
		_g_free0 (id);
#line 2818 "utils.c"
	}
#line 510 "/run/build/folks/tools/inspect/utils.vala"
	_g_object_unref0 (folks_inspect_utils_individual_id_iter);
#line 510 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_individual_id_iter = NULL;
#line 511 "/run/build/folks/tools/inspect/utils.vala"
	result = NULL;
#line 511 "/run/build/folks/tools/inspect/utils.vala"
	return result;
#line 2828 "utils.c"
}


gchar*
folks_inspect_utils_persona_uid_completion_cb (const gchar* word,
                                               gint state)
{
	gchar* result = NULL;
#line 519 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (word != NULL, NULL);
#line 523 "/run/build/folks/tools/inspect/utils.vala"
	if (state == 0) {
#line 2841 "utils.c"
		FolksInspectClient* _tmp0_;
		FolksIndividualAggregator* _tmp1_;
		FolksIndividualAggregator* _tmp2_;
		GeeMap* _tmp3_;
		GeeMap* _tmp4_;
		GeeMapIterator* _tmp5_;
#line 525 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = main_client;
#line 525 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = folks_inspect_client_get_aggregator (_tmp0_);
#line 525 "/run/build/folks/tools/inspect/utils.vala"
		_tmp2_ = _tmp1_;
#line 525 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = folks_individual_aggregator_get_individuals (_tmp2_);
#line 525 "/run/build/folks/tools/inspect/utils.vala"
		_tmp4_ = _tmp3_;
#line 525 "/run/build/folks/tools/inspect/utils.vala"
		_tmp5_ = gee_map_map_iterator (_tmp4_);
#line 525 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_individual_id_iter);
#line 525 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_individual_id_iter = _tmp5_;
#line 527 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_persona_uid_iter);
#line 527 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_persona_uid_iter = NULL;
#line 2868 "utils.c"
	}
#line 530 "/run/build/folks/tools/inspect/utils.vala"
	while (TRUE) {
#line 2872 "utils.c"
		gboolean _tmp6_ = FALSE;
		GeeIterator* _tmp7_;
		FolksIndividual* individual = NULL;
		GeeMapIterator* _tmp9_;
		gpointer _tmp10_;
		GeeIterator* _tmp11_;
#line 530 "/run/build/folks/tools/inspect/utils.vala"
		_tmp7_ = folks_inspect_utils_persona_uid_iter;
#line 530 "/run/build/folks/tools/inspect/utils.vala"
		if (_tmp7_ != NULL) {
#line 530 "/run/build/folks/tools/inspect/utils.vala"
			_tmp6_ = TRUE;
#line 2885 "utils.c"
		} else {
			GeeMapIterator* _tmp8_;
#line 531 "/run/build/folks/tools/inspect/utils.vala"
			_tmp8_ = folks_inspect_utils_individual_id_iter;
#line 531 "/run/build/folks/tools/inspect/utils.vala"
			_tmp6_ = gee_map_iterator_next (_tmp8_) == TRUE;
#line 2892 "utils.c"
		}
#line 530 "/run/build/folks/tools/inspect/utils.vala"
		if (!_tmp6_) {
#line 530 "/run/build/folks/tools/inspect/utils.vala"
			break;
#line 2898 "utils.c"
		}
#line 533 "/run/build/folks/tools/inspect/utils.vala"
		_tmp9_ = folks_inspect_utils_individual_id_iter;
#line 533 "/run/build/folks/tools/inspect/utils.vala"
		_tmp10_ = gee_map_iterator_get_value (_tmp9_);
#line 533 "/run/build/folks/tools/inspect/utils.vala"
		individual = (FolksIndividual*) _tmp10_;
#line 535 "/run/build/folks/tools/inspect/utils.vala"
		_tmp11_ = folks_inspect_utils_persona_uid_iter;
#line 535 "/run/build/folks/tools/inspect/utils.vala"
		if (_tmp11_ == NULL) {
#line 2910 "utils.c"
			FolksIndividual* _tmp12_;
			FolksIndividual* _tmp13_;
			GeeSet* _tmp14_;
			GeeSet* _tmp15_;
			GeeIterator* _tmp16_;
#line 537 "/run/build/folks/tools/inspect/utils.vala"
			_tmp12_ = individual;
#line 537 "/run/build/folks/tools/inspect/utils.vala"
			_vala_assert (_tmp12_ != NULL, "individual != null");
#line 538 "/run/build/folks/tools/inspect/utils.vala"
			_tmp13_ = individual;
#line 538 "/run/build/folks/tools/inspect/utils.vala"
			_tmp14_ = folks_individual_get_personas (_tmp13_);
#line 538 "/run/build/folks/tools/inspect/utils.vala"
			_tmp15_ = _tmp14_;
#line 538 "/run/build/folks/tools/inspect/utils.vala"
			_tmp16_ = gee_iterable_iterator ((GeeIterable*) _tmp15_);
#line 538 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (folks_inspect_utils_persona_uid_iter);
#line 538 "/run/build/folks/tools/inspect/utils.vala"
			folks_inspect_utils_persona_uid_iter = _tmp16_;
#line 2932 "utils.c"
		}
#line 541 "/run/build/folks/tools/inspect/utils.vala"
		while (TRUE) {
#line 2936 "utils.c"
			GeeIterator* _tmp17_;
			FolksPersona* persona = NULL;
			GeeIterator* _tmp18_;
			gpointer _tmp19_;
			FolksPersona* _tmp20_;
			const gchar* _tmp21_;
			const gchar* _tmp22_;
#line 541 "/run/build/folks/tools/inspect/utils.vala"
			_tmp17_ = folks_inspect_utils_persona_uid_iter;
#line 541 "/run/build/folks/tools/inspect/utils.vala"
			if (!gee_iterator_next (_tmp17_)) {
#line 541 "/run/build/folks/tools/inspect/utils.vala"
				break;
#line 2950 "utils.c"
			}
#line 543 "/run/build/folks/tools/inspect/utils.vala"
			_tmp18_ = folks_inspect_utils_persona_uid_iter;
#line 543 "/run/build/folks/tools/inspect/utils.vala"
			_tmp19_ = gee_iterator_get (_tmp18_);
#line 543 "/run/build/folks/tools/inspect/utils.vala"
			persona = (FolksPersona*) _tmp19_;
#line 544 "/run/build/folks/tools/inspect/utils.vala"
			_tmp20_ = persona;
#line 544 "/run/build/folks/tools/inspect/utils.vala"
			_tmp21_ = folks_persona_get_uid (_tmp20_);
#line 544 "/run/build/folks/tools/inspect/utils.vala"
			_tmp22_ = _tmp21_;
#line 544 "/run/build/folks/tools/inspect/utils.vala"
			if (g_str_has_prefix (_tmp22_, word)) {
#line 2966 "utils.c"
				FolksPersona* _tmp23_;
				const gchar* _tmp24_;
				const gchar* _tmp25_;
				gchar* _tmp26_;
#line 545 "/run/build/folks/tools/inspect/utils.vala"
				_tmp23_ = persona;
#line 545 "/run/build/folks/tools/inspect/utils.vala"
				_tmp24_ = folks_persona_get_uid (_tmp23_);
#line 545 "/run/build/folks/tools/inspect/utils.vala"
				_tmp25_ = _tmp24_;
#line 545 "/run/build/folks/tools/inspect/utils.vala"
				_tmp26_ = g_strdup (_tmp25_);
#line 545 "/run/build/folks/tools/inspect/utils.vala"
				result = _tmp26_;
#line 545 "/run/build/folks/tools/inspect/utils.vala"
				_g_object_unref0 (persona);
#line 545 "/run/build/folks/tools/inspect/utils.vala"
				_g_object_unref0 (individual);
#line 545 "/run/build/folks/tools/inspect/utils.vala"
				return result;
#line 2987 "utils.c"
			}
#line 541 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (persona);
#line 2991 "utils.c"
		}
#line 549 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_persona_uid_iter);
#line 549 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_persona_uid_iter = NULL;
#line 530 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (individual);
#line 2999 "utils.c"
	}
#line 553 "/run/build/folks/tools/inspect/utils.vala"
	_g_object_unref0 (folks_inspect_utils_individual_id_iter);
#line 553 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_individual_id_iter = NULL;
#line 554 "/run/build/folks/tools/inspect/utils.vala"
	result = NULL;
#line 554 "/run/build/folks/tools/inspect/utils.vala"
	return result;
#line 3009 "utils.c"
}


gchar*
folks_inspect_utils_backend_name_completion_cb (const gchar* word,
                                                gint state)
{
	gchar* result = NULL;
#line 562 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (word != NULL, NULL);
#line 566 "/run/build/folks/tools/inspect/utils.vala"
	if (state == 0) {
#line 3022 "utils.c"
		FolksInspectClient* _tmp0_;
		FolksBackendStore* _tmp1_;
		FolksBackendStore* _tmp2_;
		GeeCollection* _tmp3_;
		GeeCollection* _tmp4_;
		GeeIterator* _tmp5_;
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = main_client;
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = folks_inspect_client_get_backend_store (_tmp0_);
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		_tmp2_ = _tmp1_;
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = folks_backend_store_list_backends (_tmp2_);
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		_tmp4_ = _tmp3_;
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		_tmp5_ = gee_iterable_iterator ((GeeIterable*) _tmp4_);
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_backend_name_iter);
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_backend_name_iter = _tmp5_;
#line 568 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (_tmp4_);
#line 3047 "utils.c"
	}
#line 572 "/run/build/folks/tools/inspect/utils.vala"
	while (TRUE) {
#line 3051 "utils.c"
		GeeIterator* _tmp6_;
		FolksBackend* backend = NULL;
		GeeIterator* _tmp7_;
		gpointer _tmp8_;
		FolksBackend* _tmp9_;
		const gchar* _tmp10_;
		const gchar* _tmp11_;
#line 572 "/run/build/folks/tools/inspect/utils.vala"
		_tmp6_ = folks_inspect_utils_backend_name_iter;
#line 572 "/run/build/folks/tools/inspect/utils.vala"
		if (!(gee_iterator_next (_tmp6_) == TRUE)) {
#line 572 "/run/build/folks/tools/inspect/utils.vala"
			break;
#line 3065 "utils.c"
		}
#line 574 "/run/build/folks/tools/inspect/utils.vala"
		_tmp7_ = folks_inspect_utils_backend_name_iter;
#line 574 "/run/build/folks/tools/inspect/utils.vala"
		_tmp8_ = gee_iterator_get (_tmp7_);
#line 574 "/run/build/folks/tools/inspect/utils.vala"
		backend = (FolksBackend*) _tmp8_;
#line 575 "/run/build/folks/tools/inspect/utils.vala"
		_tmp9_ = backend;
#line 575 "/run/build/folks/tools/inspect/utils.vala"
		_tmp10_ = folks_backend_get_name (_tmp9_);
#line 575 "/run/build/folks/tools/inspect/utils.vala"
		_tmp11_ = _tmp10_;
#line 575 "/run/build/folks/tools/inspect/utils.vala"
		if (g_str_has_prefix (_tmp11_, word)) {
#line 3081 "utils.c"
			FolksBackend* _tmp12_;
			const gchar* _tmp13_;
			const gchar* _tmp14_;
			gchar* _tmp15_;
#line 576 "/run/build/folks/tools/inspect/utils.vala"
			_tmp12_ = backend;
#line 576 "/run/build/folks/tools/inspect/utils.vala"
			_tmp13_ = folks_backend_get_name (_tmp12_);
#line 576 "/run/build/folks/tools/inspect/utils.vala"
			_tmp14_ = _tmp13_;
#line 576 "/run/build/folks/tools/inspect/utils.vala"
			_tmp15_ = g_strdup (_tmp14_);
#line 576 "/run/build/folks/tools/inspect/utils.vala"
			result = _tmp15_;
#line 576 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (backend);
#line 576 "/run/build/folks/tools/inspect/utils.vala"
			return result;
#line 3100 "utils.c"
		}
#line 572 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (backend);
#line 3104 "utils.c"
	}
#line 580 "/run/build/folks/tools/inspect/utils.vala"
	_g_object_unref0 (folks_inspect_utils_backend_name_iter);
#line 580 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_backend_name_iter = NULL;
#line 581 "/run/build/folks/tools/inspect/utils.vala"
	result = NULL;
#line 581 "/run/build/folks/tools/inspect/utils.vala"
	return result;
#line 3114 "utils.c"
}


gchar*
folks_inspect_utils_persona_store_id_completion_cb (const gchar* word,
                                                    gint state)
{
	gchar* result = NULL;
#line 590 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (word != NULL, NULL);
#line 594 "/run/build/folks/tools/inspect/utils.vala"
	if (state == 0) {
#line 3127 "utils.c"
		FolksInspectClient* _tmp0_;
		FolksBackendStore* _tmp1_;
		FolksBackendStore* _tmp2_;
		GeeCollection* _tmp3_;
		GeeCollection* _tmp4_;
		GeeIterator* _tmp5_;
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = main_client;
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = folks_inspect_client_get_backend_store (_tmp0_);
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		_tmp2_ = _tmp1_;
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		_tmp3_ = folks_backend_store_list_backends (_tmp2_);
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		_tmp4_ = _tmp3_;
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		_tmp5_ = gee_iterable_iterator ((GeeIterable*) _tmp4_);
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_backend_name_iter);
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_backend_name_iter = _tmp5_;
#line 596 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (_tmp4_);
#line 598 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_persona_store_id_iter);
#line 598 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_persona_store_id_iter = NULL;
#line 3156 "utils.c"
	}
#line 601 "/run/build/folks/tools/inspect/utils.vala"
	while (TRUE) {
#line 3160 "utils.c"
		gboolean _tmp6_ = FALSE;
		GeeMapIterator* _tmp7_;
		GeeMapIterator* _tmp9_;
#line 601 "/run/build/folks/tools/inspect/utils.vala"
		_tmp7_ = folks_inspect_utils_persona_store_id_iter;
#line 601 "/run/build/folks/tools/inspect/utils.vala"
		if (_tmp7_ != NULL) {
#line 601 "/run/build/folks/tools/inspect/utils.vala"
			_tmp6_ = TRUE;
#line 3170 "utils.c"
		} else {
			GeeIterator* _tmp8_;
#line 602 "/run/build/folks/tools/inspect/utils.vala"
			_tmp8_ = folks_inspect_utils_backend_name_iter;
#line 602 "/run/build/folks/tools/inspect/utils.vala"
			_tmp6_ = gee_iterator_next (_tmp8_) == TRUE;
#line 3177 "utils.c"
		}
#line 601 "/run/build/folks/tools/inspect/utils.vala"
		if (!_tmp6_) {
#line 601 "/run/build/folks/tools/inspect/utils.vala"
			break;
#line 3183 "utils.c"
		}
#line 604 "/run/build/folks/tools/inspect/utils.vala"
		_tmp9_ = folks_inspect_utils_persona_store_id_iter;
#line 604 "/run/build/folks/tools/inspect/utils.vala"
		if (_tmp9_ == NULL) {
#line 3189 "utils.c"
			FolksBackend* backend = NULL;
			GeeIterator* _tmp10_;
			gpointer _tmp11_;
			FolksBackend* _tmp12_;
			GeeMap* _tmp13_;
			GeeMap* _tmp14_;
			GeeMapIterator* _tmp15_;
#line 606 "/run/build/folks/tools/inspect/utils.vala"
			_tmp10_ = folks_inspect_utils_backend_name_iter;
#line 606 "/run/build/folks/tools/inspect/utils.vala"
			_tmp11_ = gee_iterator_get (_tmp10_);
#line 606 "/run/build/folks/tools/inspect/utils.vala"
			backend = (FolksBackend*) _tmp11_;
#line 607 "/run/build/folks/tools/inspect/utils.vala"
			_tmp12_ = backend;
#line 607 "/run/build/folks/tools/inspect/utils.vala"
			_tmp13_ = folks_backend_get_persona_stores (_tmp12_);
#line 607 "/run/build/folks/tools/inspect/utils.vala"
			_tmp14_ = _tmp13_;
#line 607 "/run/build/folks/tools/inspect/utils.vala"
			_tmp15_ = gee_map_map_iterator (_tmp14_);
#line 607 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (folks_inspect_utils_persona_store_id_iter);
#line 607 "/run/build/folks/tools/inspect/utils.vala"
			folks_inspect_utils_persona_store_id_iter = _tmp15_;
#line 604 "/run/build/folks/tools/inspect/utils.vala"
			_g_object_unref0 (backend);
#line 3217 "utils.c"
		}
#line 611 "/run/build/folks/tools/inspect/utils.vala"
		while (TRUE) {
#line 3221 "utils.c"
			GeeMapIterator* _tmp16_;
			gchar* id = NULL;
			GeeMapIterator* _tmp17_;
			gpointer _tmp18_;
			const gchar* _tmp19_;
#line 611 "/run/build/folks/tools/inspect/utils.vala"
			_tmp16_ = folks_inspect_utils_persona_store_id_iter;
#line 611 "/run/build/folks/tools/inspect/utils.vala"
			if (!(gee_map_iterator_next (_tmp16_) == TRUE)) {
#line 611 "/run/build/folks/tools/inspect/utils.vala"
				break;
#line 3233 "utils.c"
			}
#line 613 "/run/build/folks/tools/inspect/utils.vala"
			_tmp17_ = folks_inspect_utils_persona_store_id_iter;
#line 613 "/run/build/folks/tools/inspect/utils.vala"
			_tmp18_ = gee_map_iterator_get_key (_tmp17_);
#line 613 "/run/build/folks/tools/inspect/utils.vala"
			id = (gchar*) _tmp18_;
#line 614 "/run/build/folks/tools/inspect/utils.vala"
			_tmp19_ = id;
#line 614 "/run/build/folks/tools/inspect/utils.vala"
			if (g_str_has_prefix (_tmp19_, word)) {
#line 615 "/run/build/folks/tools/inspect/utils.vala"
				result = id;
#line 615 "/run/build/folks/tools/inspect/utils.vala"
				return result;
#line 3249 "utils.c"
			}
#line 611 "/run/build/folks/tools/inspect/utils.vala"
			_g_free0 (id);
#line 3253 "utils.c"
		}
#line 619 "/run/build/folks/tools/inspect/utils.vala"
		_g_object_unref0 (folks_inspect_utils_persona_store_id_iter);
#line 619 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_persona_store_id_iter = NULL;
#line 3259 "utils.c"
	}
#line 623 "/run/build/folks/tools/inspect/utils.vala"
	_g_object_unref0 (folks_inspect_utils_backend_name_iter);
#line 623 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_backend_name_iter = NULL;
#line 624 "/run/build/folks/tools/inspect/utils.vala"
	result = NULL;
#line 624 "/run/build/folks/tools/inspect/utils.vala"
	return result;
#line 3269 "utils.c"
}


static gboolean
_vala_string_array_contains (gchar* * stack,
                             int stack_length,
                             gchar* needle)
{
	int i;
#line 632 "/run/build/folks/tools/inspect/utils.vala"
	for (i = 0; i < stack_length; i++) {
#line 632 "/run/build/folks/tools/inspect/utils.vala"
		if (g_strcmp0 (stack[i], needle) == 0) {
#line 632 "/run/build/folks/tools/inspect/utils.vala"
			return TRUE;
#line 3285 "utils.c"
		}
	}
#line 632 "/run/build/folks/tools/inspect/utils.vala"
	return FALSE;
#line 3290 "utils.c"
}


gboolean
folks_inspect_utils_validate_subcommand (const gchar* command,
                                         const gchar* command_string,
                                         const gchar* subcommand,
                                         gchar** valid_subcommands,
                                         int valid_subcommands_length1)
{
	gboolean result = FALSE;
	gboolean _tmp0_ = FALSE;
	const gchar* _tmp1_ = NULL;
#line 629 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (command != NULL, FALSE);
#line 632 "/run/build/folks/tools/inspect/utils.vala"
	if (subcommand != NULL) {
#line 632 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = _vala_string_array_contains (valid_subcommands, valid_subcommands_length1, subcommand);
#line 3310 "utils.c"
	} else {
#line 632 "/run/build/folks/tools/inspect/utils.vala"
		_tmp0_ = FALSE;
#line 3314 "utils.c"
	}
#line 632 "/run/build/folks/tools/inspect/utils.vala"
	if (_tmp0_) {
#line 633 "/run/build/folks/tools/inspect/utils.vala"
		result = TRUE;
#line 633 "/run/build/folks/tools/inspect/utils.vala"
		return result;
#line 3322 "utils.c"
	}
#line 637 "/run/build/folks/tools/inspect/utils.vala"
	if (command_string != NULL) {
#line 637 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = command_string;
#line 3328 "utils.c"
	} else {
#line 637 "/run/build/folks/tools/inspect/utils.vala"
		_tmp1_ = "";
#line 3332 "utils.c"
	}
#line 636 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_print_line ("Unrecognised '%s' command '%s'.", command, _tmp1_);
#line 639 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_print_line ("Valid commands:");
#line 640 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indent ();
#line 3340 "utils.c"
	{
		gchar** c_collection = NULL;
		gint c_collection_length1 = 0;
		gint _c_collection_size_ = 0;
		gint c_it = 0;
#line 641 "/run/build/folks/tools/inspect/utils.vala"
		c_collection = valid_subcommands;
#line 641 "/run/build/folks/tools/inspect/utils.vala"
		c_collection_length1 = valid_subcommands_length1;
#line 641 "/run/build/folks/tools/inspect/utils.vala"
		for (c_it = 0; c_it < valid_subcommands_length1; c_it = c_it + 1) {
#line 3352 "utils.c"
			gchar* _tmp2_;
			gchar* c = NULL;
#line 641 "/run/build/folks/tools/inspect/utils.vala"
			_tmp2_ = g_strdup (c_collection[c_it]);
#line 641 "/run/build/folks/tools/inspect/utils.vala"
			c = _tmp2_;
#line 3359 "utils.c"
			{
				const gchar* _tmp3_;
#line 642 "/run/build/folks/tools/inspect/utils.vala"
				_tmp3_ = c;
#line 642 "/run/build/folks/tools/inspect/utils.vala"
				folks_inspect_utils_print_line ("%s", _tmp3_);
#line 641 "/run/build/folks/tools/inspect/utils.vala"
				_g_free0 (c);
#line 3368 "utils.c"
			}
		}
	}
#line 643 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_unindent ();
#line 645 "/run/build/folks/tools/inspect/utils.vala"
	result = FALSE;
#line 645 "/run/build/folks/tools/inspect/utils.vala"
	return result;
#line 3378 "utils.c"
}


FolksInspectUtils*
folks_inspect_utils_construct (GType object_type)
{
	FolksInspectUtils* self = NULL;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	self = (FolksInspectUtils*) g_type_create_instance (object_type);
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	return self;
#line 3390 "utils.c"
}


FolksInspectUtils*
folks_inspect_utils_new (void)
{
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	return folks_inspect_utils_construct (FOLKS_INSPECT_TYPE_UTILS);
#line 3399 "utils.c"
}


static void
folks_inspect_value_utils_init (GValue* value)
{
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	value->data[0].v_pointer = NULL;
#line 3408 "utils.c"
}


static void
folks_inspect_value_utils_free_value (GValue* value)
{
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (value->data[0].v_pointer) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_unref (value->data[0].v_pointer);
#line 3419 "utils.c"
	}
}


static void
folks_inspect_value_utils_copy_value (const GValue* src_value,
                                      GValue* dest_value)
{
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (src_value->data[0].v_pointer) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		dest_value->data[0].v_pointer = folks_inspect_utils_ref (src_value->data[0].v_pointer);
#line 3432 "utils.c"
	} else {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		dest_value->data[0].v_pointer = NULL;
#line 3436 "utils.c"
	}
}


static gpointer
folks_inspect_value_utils_peek_pointer (const GValue* value)
{
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	return value->data[0].v_pointer;
#line 3446 "utils.c"
}


static gchar*
folks_inspect_value_utils_collect_value (GValue* value,
                                         guint n_collect_values,
                                         GTypeCValue* collect_values,
                                         guint collect_flags)
{
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (collect_values[0].v_pointer) {
#line 3458 "utils.c"
		FolksInspectUtils * object;
		object = collect_values[0].v_pointer;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		if (object->parent_instance.g_class == NULL) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
			return g_strconcat ("invalid unclassed object pointer for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 3465 "utils.c"
		} else if (!g_value_type_compatible (G_TYPE_FROM_INSTANCE (object), G_VALUE_TYPE (value))) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
			return g_strconcat ("invalid object type `", g_type_name (G_TYPE_FROM_INSTANCE (object)), "' for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 3469 "utils.c"
		}
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		value->data[0].v_pointer = folks_inspect_utils_ref (object);
#line 3473 "utils.c"
	} else {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		value->data[0].v_pointer = NULL;
#line 3477 "utils.c"
	}
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	return NULL;
#line 3481 "utils.c"
}


static gchar*
folks_inspect_value_utils_lcopy_value (const GValue* value,
                                       guint n_collect_values,
                                       GTypeCValue* collect_values,
                                       guint collect_flags)
{
	FolksInspectUtils ** object_p;
	object_p = collect_values[0].v_pointer;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (!object_p) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		return g_strdup_printf ("value location for `%s' passed as NULL", G_VALUE_TYPE_NAME (value));
#line 3497 "utils.c"
	}
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (!value->data[0].v_pointer) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		*object_p = NULL;
#line 3503 "utils.c"
	} else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		*object_p = value->data[0].v_pointer;
#line 3507 "utils.c"
	} else {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		*object_p = folks_inspect_utils_ref (value->data[0].v_pointer);
#line 3511 "utils.c"
	}
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	return NULL;
#line 3515 "utils.c"
}


GParamSpec*
folks_inspect_param_spec_utils (const gchar* name,
                                const gchar* nick,
                                const gchar* blurb,
                                GType object_type,
                                GParamFlags flags)
{
	FolksInspectParamSpecUtils* spec;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (g_type_is_a (object_type, FOLKS_INSPECT_TYPE_UTILS), NULL);
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	spec = g_param_spec_internal (G_TYPE_PARAM_OBJECT, name, nick, blurb, flags);
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	G_PARAM_SPEC (spec)->value_type = object_type;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	return G_PARAM_SPEC (spec);
#line 3535 "utils.c"
}


gpointer
folks_inspect_value_get_utils (const GValue* value)
{
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	g_return_val_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, FOLKS_INSPECT_TYPE_UTILS), NULL);
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	return value->data[0].v_pointer;
#line 3546 "utils.c"
}


void
folks_inspect_value_set_utils (GValue* value,
                               gpointer v_object)
{
	FolksInspectUtils * old;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, FOLKS_INSPECT_TYPE_UTILS));
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	old = value->data[0].v_pointer;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (v_object) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, FOLKS_INSPECT_TYPE_UTILS));
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		value->data[0].v_pointer = v_object;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_ref (value->data[0].v_pointer);
#line 3569 "utils.c"
	} else {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		value->data[0].v_pointer = NULL;
#line 3573 "utils.c"
	}
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (old) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_unref (old);
#line 3579 "utils.c"
	}
}


void
folks_inspect_value_take_utils (GValue* value,
                                gpointer v_object)
{
	FolksInspectUtils * old;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, FOLKS_INSPECT_TYPE_UTILS));
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	old = value->data[0].v_pointer;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (v_object) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, FOLKS_INSPECT_TYPE_UTILS));
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		value->data[0].v_pointer = v_object;
#line 3601 "utils.c"
	} else {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		value->data[0].v_pointer = NULL;
#line 3605 "utils.c"
	}
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (old) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		folks_inspect_utils_unref (old);
#line 3611 "utils.c"
	}
}


static void
folks_inspect_utils_class_init (FolksInspectUtilsClass * klass)
{
	gchar* _tmp0_;
	FILE* _tmp1_;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_parent_class = g_type_class_peek_parent (klass);
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	((FolksInspectUtilsClass *) klass)->finalize = folks_inspect_utils_finalize;
#line 29 "/run/build/folks/tools/inspect/utils.vala"
	_tmp0_ = g_strdup ("");
#line 29 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_indentation_string = _tmp0_;
#line 32 "/run/build/folks/tools/inspect/utils.vala"
	_tmp1_ = stdout;
#line 32 "/run/build/folks/tools/inspect/utils.vala"
	folks_inspect_utils_output_filestream = _tmp1_;
#line 3633 "utils.c"
}


static void
folks_inspect_utils_instance_init (FolksInspectUtils * self)
{
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	self->ref_count = 1;
#line 3642 "utils.c"
}


static void
folks_inspect_utils_finalize (FolksInspectUtils * obj)
{
	FolksInspectUtils * self;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_INSPECT_TYPE_UTILS, FolksInspectUtils);
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	g_signal_handlers_destroy (self);
#line 3654 "utils.c"
}


GType
folks_inspect_utils_get_type (void)
{
	static volatile gsize folks_inspect_utils_type_id__volatile = 0;
	if (g_once_init_enter (&folks_inspect_utils_type_id__volatile)) {
		static const GTypeValueTable g_define_type_value_table = { folks_inspect_value_utils_init, folks_inspect_value_utils_free_value, folks_inspect_value_utils_copy_value, folks_inspect_value_utils_peek_pointer, "p", folks_inspect_value_utils_collect_value, "p", folks_inspect_value_utils_lcopy_value };
		static const GTypeInfo g_define_type_info = { sizeof (FolksInspectUtilsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_inspect_utils_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksInspectUtils), 0, (GInstanceInitFunc) folks_inspect_utils_instance_init, &g_define_type_value_table };
		static const GTypeFundamentalInfo g_define_type_fundamental_info = { (G_TYPE_FLAG_CLASSED | G_TYPE_FLAG_INSTANTIATABLE | G_TYPE_FLAG_DERIVABLE | G_TYPE_FLAG_DEEP_DERIVABLE) };
		GType folks_inspect_utils_type_id;
		folks_inspect_utils_type_id = g_type_register_fundamental (g_type_fundamental_next (), "FolksInspectUtils", &g_define_type_info, &g_define_type_fundamental_info, 0);
		g_once_init_leave (&folks_inspect_utils_type_id__volatile, folks_inspect_utils_type_id);
	}
	return folks_inspect_utils_type_id__volatile;
}


gpointer
folks_inspect_utils_ref (gpointer instance)
{
	FolksInspectUtils * self;
	self = instance;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	g_atomic_int_inc (&self->ref_count);
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	return instance;
#line 3683 "utils.c"
}


void
folks_inspect_utils_unref (gpointer instance)
{
	FolksInspectUtils * self;
	self = instance;
#line 25 "/run/build/folks/tools/inspect/utils.vala"
	if (g_atomic_int_dec_and_test (&self->ref_count)) {
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		FOLKS_INSPECT_UTILS_GET_CLASS (self)->finalize (self);
#line 25 "/run/build/folks/tools/inspect/utils.vala"
		g_type_free_instance ((GTypeInstance *) self);
#line 3698 "utils.c"
	}
}



