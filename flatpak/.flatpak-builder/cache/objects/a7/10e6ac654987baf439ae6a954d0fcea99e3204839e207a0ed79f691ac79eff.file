/* TaskMenu.c generated by valac 0.40.11, the Vala compiler
 * generated from TaskMenu.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <glib/gi18n-lib.h>
#include <stdlib.h>
#include <string.h>


#define WIDGETS_POPOVERS_TYPE_TASK_MENU (widgets_popovers_task_menu_get_type ())
#define WIDGETS_POPOVERS_TASK_MENU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_POPOVERS_TYPE_TASK_MENU, WidgetsPopoversTaskMenu))
#define WIDGETS_POPOVERS_TASK_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_POPOVERS_TYPE_TASK_MENU, WidgetsPopoversTaskMenuClass))
#define WIDGETS_POPOVERS_IS_TASK_MENU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_POPOVERS_TYPE_TASK_MENU))
#define WIDGETS_POPOVERS_IS_TASK_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_POPOVERS_TYPE_TASK_MENU))
#define WIDGETS_POPOVERS_TASK_MENU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_POPOVERS_TYPE_TASK_MENU, WidgetsPopoversTaskMenuClass))

typedef struct _WidgetsPopoversTaskMenu WidgetsPopoversTaskMenu;
typedef struct _WidgetsPopoversTaskMenuClass WidgetsPopoversTaskMenuClass;
typedef struct _WidgetsPopoversTaskMenuPrivate WidgetsPopoversTaskMenuPrivate;
enum  {
	WIDGETS_POPOVERS_TASK_MENU_0_PROPERTY,
	WIDGETS_POPOVERS_TASK_MENU_NUM_PROPERTIES
};
static GParamSpec* widgets_popovers_task_menu_properties[WIDGETS_POPOVERS_TASK_MENU_NUM_PROPERTIES];

#define WIDGETS_TYPE_MODEL_BUTTON (widgets_model_button_get_type ())
#define WIDGETS_MODEL_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_MODEL_BUTTON, WidgetsModelButton))
#define WIDGETS_MODEL_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_MODEL_BUTTON, WidgetsModelButtonClass))
#define WIDGETS_IS_MODEL_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_MODEL_BUTTON))
#define WIDGETS_IS_MODEL_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_MODEL_BUTTON))
#define WIDGETS_MODEL_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_MODEL_BUTTON, WidgetsModelButtonClass))

typedef struct _WidgetsModelButton WidgetsModelButton;
typedef struct _WidgetsModelButtonClass WidgetsModelButtonClass;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
enum  {
	WIDGETS_POPOVERS_TASK_MENU_ON_SELECTED_MENU_SIGNAL,
	WIDGETS_POPOVERS_TASK_MENU_NUM_SIGNALS
};
static guint widgets_popovers_task_menu_signals[WIDGETS_POPOVERS_TASK_MENU_NUM_SIGNALS] = {0};

struct _WidgetsPopoversTaskMenu {
	GtkPopover parent_instance;
	WidgetsPopoversTaskMenuPrivate * priv;
};

struct _WidgetsPopoversTaskMenuClass {
	GtkPopoverClass parent_class;
};


static gpointer widgets_popovers_task_menu_parent_class = NULL;

GType widgets_popovers_task_menu_get_type (void) G_GNUC_CONST;
WidgetsPopoversTaskMenu* widgets_popovers_task_menu_new (GtkWidget* relative);
WidgetsPopoversTaskMenu* widgets_popovers_task_menu_construct (GType object_type,
                                                               GtkWidget* relative);
static GObject * widgets_popovers_task_menu_constructor (GType type,
                                                  guint n_construct_properties,
                                                  GObjectConstructParam * construct_properties);
GType widgets_model_button_get_type (void) G_GNUC_CONST;
WidgetsModelButton* widgets_model_button_new (const gchar* _text,
                                              const gchar* _icon,
                                              const gchar* _tooltip);
WidgetsModelButton* widgets_model_button_construct (GType object_type,
                                                    const gchar* _text,
                                                    const gchar* _icon,
                                                    const gchar* _tooltip);
static void _widgets_popovers_task_menu___lambda66_ (WidgetsPopoversTaskMenu* self);
static void __widgets_popovers_task_menu___lambda66__gtk_button_clicked (GtkButton* _sender,
                                                                  gpointer self);
static void _widgets_popovers_task_menu___lambda67_ (WidgetsPopoversTaskMenu* self);
static void __widgets_popovers_task_menu___lambda67__gtk_button_clicked (GtkButton* _sender,
                                                                  gpointer self);
static void _widgets_popovers_task_menu___lambda68_ (WidgetsPopoversTaskMenu* self);
static void __widgets_popovers_task_menu___lambda68__gtk_button_clicked (GtkButton* _sender,
                                                                  gpointer self);


WidgetsPopoversTaskMenu*
widgets_popovers_task_menu_construct (GType object_type,
                                      GtkWidget* relative)
{
	WidgetsPopoversTaskMenu * self = NULL;
#line 25 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_return_val_if_fail (relative != NULL, NULL);
#line 26 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	self = (WidgetsPopoversTaskMenu*) g_object_new (object_type, "relative-to", relative, "modal", TRUE, "position", GTK_POS_TOP, NULL);
#line 25 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	return self;
#line 116 "TaskMenu.c"
}


WidgetsPopoversTaskMenu*
widgets_popovers_task_menu_new (GtkWidget* relative)
{
#line 25 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	return widgets_popovers_task_menu_construct (WIDGETS_POPOVERS_TYPE_TASK_MENU, relative);
#line 125 "TaskMenu.c"
}


static void
_widgets_popovers_task_menu___lambda66_ (WidgetsPopoversTaskMenu* self)
{
#line 58 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_popover_popdown ((GtkPopover*) self);
#line 59 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_signal_emit (self, widgets_popovers_task_menu_signals[WIDGETS_POPOVERS_TASK_MENU_ON_SELECTED_MENU_SIGNAL], 0, 0);
#line 136 "TaskMenu.c"
}


static void
__widgets_popovers_task_menu___lambda66__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self)
{
#line 57 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_widgets_popovers_task_menu___lambda66_ ((WidgetsPopoversTaskMenu*) self);
#line 146 "TaskMenu.c"
}


static void
_widgets_popovers_task_menu___lambda67_ (WidgetsPopoversTaskMenu* self)
{
#line 63 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_popover_popdown ((GtkPopover*) self);
#line 64 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_signal_emit (self, widgets_popovers_task_menu_signals[WIDGETS_POPOVERS_TASK_MENU_ON_SELECTED_MENU_SIGNAL], 0, 1);
#line 157 "TaskMenu.c"
}


static void
__widgets_popovers_task_menu___lambda67__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self)
{
#line 62 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_widgets_popovers_task_menu___lambda67_ ((WidgetsPopoversTaskMenu*) self);
#line 167 "TaskMenu.c"
}


static void
_widgets_popovers_task_menu___lambda68_ (WidgetsPopoversTaskMenu* self)
{
#line 68 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_popover_popdown ((GtkPopover*) self);
#line 69 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_signal_emit (self, widgets_popovers_task_menu_signals[WIDGETS_POPOVERS_TASK_MENU_ON_SELECTED_MENU_SIGNAL], 0, 2);
#line 178 "TaskMenu.c"
}


static void
__widgets_popovers_task_menu___lambda68__gtk_button_clicked (GtkButton* _sender,
                                                             gpointer self)
{
#line 67 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_widgets_popovers_task_menu___lambda68_ ((WidgetsPopoversTaskMenu*) self);
#line 188 "TaskMenu.c"
}


static GObject *
widgets_popovers_task_menu_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsPopoversTaskMenu * self;
	WidgetsModelButton* convert_menu = NULL;
	WidgetsModelButton* _tmp0_;
	WidgetsModelButton* duplicate_menu = NULL;
	WidgetsModelButton* _tmp1_;
	WidgetsModelButton* share_menu = NULL;
	WidgetsModelButton* _tmp2_;
	GtkSeparator* separator_1 = NULL;
	GtkSeparator* _tmp3_;
	GtkSeparator* _tmp4_;
	GtkSeparator* _tmp5_;
	GtkSeparator* _tmp6_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp7_;
	GtkGrid* _tmp8_;
	GtkGrid* _tmp9_;
	GtkGrid* _tmp10_;
	GtkGrid* _tmp11_;
	GtkGrid* _tmp12_;
	WidgetsModelButton* _tmp13_;
	GtkGrid* _tmp14_;
	GtkSeparator* _tmp15_;
	GtkGrid* _tmp16_;
	WidgetsModelButton* _tmp17_;
	GtkGrid* _tmp18_;
	WidgetsModelButton* _tmp19_;
	WidgetsModelButton* _tmp20_;
	WidgetsModelButton* _tmp21_;
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	parent_class = G_OBJECT_CLASS (widgets_popovers_task_menu_parent_class);
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_POPOVERS_TYPE_TASK_MENU, WidgetsPopoversTaskMenu);
#line 34 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp0_ = widgets_model_button_new (_ ("Convert"), "planner-startup-symbolic", _ ("Convert to Project"));
#line 34 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_object_ref_sink (_tmp0_);
#line 34 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	convert_menu = _tmp0_;
#line 35 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp1_ = widgets_model_button_new (_ ("Duplicate"), "edit-copy-symbolic", _ ("Duplicate task"));
#line 35 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_object_ref_sink (_tmp1_);
#line 35 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	duplicate_menu = _tmp1_;
#line 36 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp2_ = widgets_model_button_new (_ ("Share"), "emblem-shared-symbolic", _ ("Share task"));
#line 36 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_object_ref_sink (_tmp2_);
#line 36 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	share_menu = _tmp2_;
#line 38 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp3_ = (GtkSeparator*) gtk_separator_new (GTK_ORIENTATION_HORIZONTAL);
#line 38 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_object_ref_sink (_tmp3_);
#line 38 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	separator_1 = _tmp3_;
#line 39 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp4_ = separator_1;
#line 39 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp4_, 3);
#line 40 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp5_ = separator_1;
#line 40 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp5_, 3);
#line 41 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp6_ = separator_1;
#line 41 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_object_set ((GtkWidget*) _tmp6_, "expand", TRUE, NULL);
#line 43 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp7_ = (GtkGrid*) gtk_grid_new ();
#line 43 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_object_ref_sink (_tmp7_);
#line 43 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	main_grid = _tmp7_;
#line 44 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp8_ = main_grid;
#line 44 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp8_, 6);
#line 45 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp9_ = main_grid;
#line 45 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp9_, 6);
#line 46 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp10_ = main_grid;
#line 46 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp10_, GTK_ORIENTATION_VERTICAL);
#line 47 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp11_ = main_grid;
#line 47 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_object_set ((GtkWidget*) _tmp11_, "width-request", 200, NULL);
#line 50 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp12_ = main_grid;
#line 50 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp13_ = duplicate_menu;
#line 50 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_container_add ((GtkContainer*) _tmp12_, (GtkWidget*) _tmp13_);
#line 51 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp14_ = main_grid;
#line 51 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp15_ = separator_1;
#line 51 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_container_add ((GtkContainer*) _tmp14_, (GtkWidget*) _tmp15_);
#line 52 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp16_ = main_grid;
#line 52 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp17_ = share_menu;
#line 52 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_container_add ((GtkContainer*) _tmp16_, (GtkWidget*) _tmp17_);
#line 54 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp18_ = main_grid;
#line 54 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp18_);
#line 57 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp19_ = convert_menu;
#line 57 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_signal_connect_object ((GtkButton*) _tmp19_, "clicked", (GCallback) __widgets_popovers_task_menu___lambda66__gtk_button_clicked, self, 0);
#line 62 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp20_ = duplicate_menu;
#line 62 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_signal_connect_object ((GtkButton*) _tmp20_, "clicked", (GCallback) __widgets_popovers_task_menu___lambda67__gtk_button_clicked, self, 0);
#line 67 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_tmp21_ = share_menu;
#line 67 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	g_signal_connect_object ((GtkButton*) _tmp21_, "clicked", (GCallback) __widgets_popovers_task_menu___lambda68__gtk_button_clicked, self, 0);
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_g_object_unref0 (main_grid);
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_g_object_unref0 (separator_1);
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_g_object_unref0 (share_menu);
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_g_object_unref0 (duplicate_menu);
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	_g_object_unref0 (convert_menu);
#line 33 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	return obj;
#line 337 "TaskMenu.c"
}


static void
widgets_popovers_task_menu_class_init (WidgetsPopoversTaskMenuClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	widgets_popovers_task_menu_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_popovers_task_menu_constructor;
#line 22 "/run/build/planner/src/Widgets/Popovers/TaskMenu.vala"
	widgets_popovers_task_menu_signals[WIDGETS_POPOVERS_TASK_MENU_ON_SELECTED_MENU_SIGNAL] = g_signal_new ("on-selected-menu", WIDGETS_POPOVERS_TYPE_TASK_MENU, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__INT, G_TYPE_NONE, 1, G_TYPE_INT);
#line 350 "TaskMenu.c"
}


static void
widgets_popovers_task_menu_instance_init (WidgetsPopoversTaskMenu * self)
{
}


GType
widgets_popovers_task_menu_get_type (void)
{
	static volatile gsize widgets_popovers_task_menu_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_popovers_task_menu_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsPopoversTaskMenuClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_popovers_task_menu_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsPopoversTaskMenu), 0, (GInstanceInitFunc) widgets_popovers_task_menu_instance_init, NULL };
		GType widgets_popovers_task_menu_type_id;
		widgets_popovers_task_menu_type_id = g_type_register_static (gtk_popover_get_type (), "WidgetsPopoversTaskMenu", &g_define_type_info, 0);
		g_once_init_leave (&widgets_popovers_task_menu_type_id__volatile, widgets_popovers_task_menu_type_id);
	}
	return widgets_popovers_task_menu_type_id__volatile;
}



