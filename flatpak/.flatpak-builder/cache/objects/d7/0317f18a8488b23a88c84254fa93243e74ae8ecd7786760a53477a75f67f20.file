/* GridDay.c generated by valac 0.40.11, the Vala compiler
 * generated from GridDay.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2011-2015 Maya Developers (http://launchpad.net/maya)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by: Maxwell Barvian
 *              Corentin NoÃ«l <corentin@elementaryos.org>
 */


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <gdk/gdk.h>
#include "elementary-calendar.h"
#include <libecal/libecal.h>
#include <libical/ical.h>
#include <libedataserver/libedataserver.h>


#define MAYA_VIEW_TYPE_GRID_DAY (maya_view_grid_day_get_type ())
#define MAYA_VIEW_GRID_DAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDay))
#define MAYA_VIEW_GRID_DAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDayClass))
#define MAYA_VIEW_IS_GRID_DAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_VIEW_TYPE_GRID_DAY))
#define MAYA_VIEW_IS_GRID_DAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_VIEW_TYPE_GRID_DAY))
#define MAYA_VIEW_GRID_DAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDayClass))

typedef struct _MayaViewGridDay MayaViewGridDay;
typedef struct _MayaViewGridDayClass MayaViewGridDayClass;
typedef struct _MayaViewGridDayPrivate MayaViewGridDayPrivate;

#define MAYA_VIEW_TYPE_VAUTO_HIDER (maya_view_vauto_hider_get_type ())
#define MAYA_VIEW_VAUTO_HIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_VIEW_TYPE_VAUTO_HIDER, MayaViewVAutoHider))
#define MAYA_VIEW_VAUTO_HIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_VIEW_TYPE_VAUTO_HIDER, MayaViewVAutoHiderClass))
#define MAYA_VIEW_IS_VAUTO_HIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_VIEW_TYPE_VAUTO_HIDER))
#define MAYA_VIEW_IS_VAUTO_HIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_VIEW_TYPE_VAUTO_HIDER))
#define MAYA_VIEW_VAUTO_HIDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_VIEW_TYPE_VAUTO_HIDER, MayaViewVAutoHiderClass))

typedef struct _MayaViewVAutoHider MayaViewVAutoHider;
typedef struct _MayaViewVAutoHiderClass MayaViewVAutoHiderClass;

#define MAYA_VIEW_TYPE_EVENT_BUTTON (maya_view_event_button_get_type ())
#define MAYA_VIEW_EVENT_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_VIEW_TYPE_EVENT_BUTTON, MayaViewEventButton))
#define MAYA_VIEW_EVENT_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_VIEW_TYPE_EVENT_BUTTON, MayaViewEventButtonClass))
#define MAYA_VIEW_IS_EVENT_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_VIEW_TYPE_EVENT_BUTTON))
#define MAYA_VIEW_IS_EVENT_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_VIEW_TYPE_EVENT_BUTTON))
#define MAYA_VIEW_EVENT_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_VIEW_TYPE_EVENT_BUTTON, MayaViewEventButtonClass))

typedef struct _MayaViewEventButton MayaViewEventButton;
typedef struct _MayaViewEventButtonClass MayaViewEventButtonClass;
enum  {
	MAYA_VIEW_GRID_DAY_0_PROPERTY,
	MAYA_VIEW_GRID_DAY_DATE_PROPERTY,
	MAYA_VIEW_GRID_DAY_IN_CURRENT_MONTH_PROPERTY,
	MAYA_VIEW_GRID_DAY_NUM_PROPERTIES
};
static GParamSpec* maya_view_grid_day_properties[MAYA_VIEW_GRID_DAY_NUM_PROPERTIES];
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
typedef struct _Block19Data Block19Data;
enum  {
	MAYA_VIEW_GRID_DAY_ON_EVENT_ADD_SIGNAL,
	MAYA_VIEW_GRID_DAY_NUM_SIGNALS
};
static guint maya_view_grid_day_signals[MAYA_VIEW_GRID_DAY_NUM_SIGNALS] = {0};

struct _MayaViewGridDay {
	GtkEventBox parent_instance;
	MayaViewGridDayPrivate * priv;
	gboolean draw_left_border;
};

struct _MayaViewGridDayClass {
	GtkEventBoxClass parent_class;
};

struct _MayaViewGridDayPrivate {
	GDateTime* _date;
	GtkLabel* label;
	GtkGrid* container_grid;
	MayaViewVAutoHider* event_box;
	GHashTable* event_buttons;
	GRecMutex __lock_event_buttons;
};

struct _Block19Data {
	int _ref_count_;
	MayaViewGridDay* self;
	MayaViewEventButton* button;
};


static gpointer maya_view_grid_day_parent_class = NULL;

GType maya_view_grid_day_get_type (void) G_GNUC_CONST;
GType maya_view_vauto_hider_get_type (void) G_GNUC_CONST;
GType maya_view_event_button_get_type (void) G_GNUC_CONST;
#define MAYA_VIEW_GRID_DAY_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDayPrivate))
#define MAYA_VIEW_GRID_DAY_EVENT_MARGIN 3
MayaViewGridDay* maya_view_grid_day_new (GDateTime* date);
MayaViewGridDay* maya_view_grid_day_construct (GType object_type,
                                               GDateTime* date);
static void maya_view_grid_day_set_date (MayaViewGridDay* self,
                                  GDateTime* value);
static void _g_free0_ (gpointer var);
static void _g_object_unref0_ (gpointer var);
MayaViewVAutoHider* maya_view_vauto_hider_new (void);
MayaViewVAutoHider* maya_view_vauto_hider_construct (GType object_type);
static gboolean maya_view_grid_day_on_button_press (MayaViewGridDay* self,
                                             GdkEventButton* event);
static gboolean _maya_view_grid_day_on_button_press_gtk_widget_button_press_event (GtkWidget* _sender,
                                                                            GdkEventButton* event,
                                                                            gpointer self);
static gboolean maya_view_grid_day_on_key_press (MayaViewGridDay* self,
                                          GdkEventKey* event);
static gboolean _maya_view_grid_day_on_key_press_gtk_widget_key_press_event (GtkWidget* _sender,
                                                                      GdkEventKey* event,
                                                                      gpointer self);
static gboolean __lambda34_ (MayaViewGridDay* self,
                      GdkEventScroll* event);
static gboolean ___lambda34__gtk_widget_scroll_event (GtkWidget* _sender,
                                               GdkEventScroll* event,
                                               gpointer self);
static gboolean maya_view_grid_day_real_drag_drop (GtkWidget* base,
                                            GdkDragContext* context,
                                            gint x,
                                            gint y,
                                            guint time_);
static void maya_view_grid_day_real_drag_data_received (GtkWidget* base,
                                                 GdkDragContext* context,
                                                 gint x,
                                                 gint y,
                                                 GtkSelectionData* selection_data,
                                                 guint info,
                                                 guint time_);
GDateTime* maya_view_grid_day_get_date (MayaViewGridDay* self);
void maya_view_grid_day_add_event_button (MayaViewGridDay* self,
                                          MayaViewEventButton* button);
ECalComponent* maya_view_event_button_get_comp (MayaViewEventButton* self);
gboolean maya_view_grid_day_update_event (MayaViewGridDay* self,
                                          ECalComponent* comp);
void maya_view_event_button_update (MayaViewEventButton* self,
                                    ECalComponent* event);
void maya_view_vauto_hider_update (MayaViewVAutoHider* self,
                                   GtkWidget* widget);
void maya_view_grid_day_remove_event (MayaViewGridDay* self,
                                      ECalComponent* comp);
static void maya_view_grid_day_destroy_button (MayaViewGridDay* self,
                                        MayaViewEventButton* button);
void maya_view_grid_day_clear_events (MayaViewGridDay* self);
static Block19Data* block19_data_ref (Block19Data* _data19_);
static void block19_data_unref (void * _userdata_);
static gboolean __lambda35_ (Block19Data* _data19_);
static gboolean ___lambda35__gsource_func (gpointer self);
void maya_view_grid_day_update_date (MayaViewGridDay* self,
                                     GDateTime* date);
void maya_view_grid_day_set_selected (MayaViewGridDay* self,
                                      gboolean selected);
void maya_view_grid_day_set_in_current_month (MayaViewGridDay* self,
                                              gboolean value);
static void maya_view_grid_day_finalize (GObject * obj);
static void _vala_maya_view_grid_day_get_property (GObject * object,
                                            guint property_id,
                                            GValue * value,
                                            GParamSpec * pspec);
static void _vala_maya_view_grid_day_set_property (GObject * object,
                                            guint property_id,
                                            const GValue * value,
                                            GParamSpec * pspec);


static void
_g_free0_ (gpointer var)
{
#line 56 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	var = (g_free (var), NULL);
#line 197 "GridDay.c"
}


static void
_g_object_unref0_ (gpointer var)
{
#line 56 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	(var == NULL) ? NULL : (var = (g_object_unref (var), NULL));
#line 206 "GridDay.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 68 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return self ? g_object_ref (self) : NULL;
#line 215 "GridDay.c"
}


static gboolean
_maya_view_grid_day_on_button_press_gtk_widget_button_press_event (GtkWidget* _sender,
                                                                   GdkEventButton* event,
                                                                   gpointer self)
{
	gboolean result;
	result = maya_view_grid_day_on_button_press ((MayaViewGridDay*) self, event);
#line 85 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 228 "GridDay.c"
}


static gboolean
_maya_view_grid_day_on_key_press_gtk_widget_key_press_event (GtkWidget* _sender,
                                                             GdkEventKey* event,
                                                             gpointer self)
{
	gboolean result;
	result = maya_view_grid_day_on_key_press ((MayaViewGridDay*) self, event);
#line 86 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 241 "GridDay.c"
}


static gboolean
__lambda34_ (MayaViewGridDay* self,
             GdkEventScroll* event)
{
	gboolean result = FALSE;
#line 87 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 87 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	result = maya_gestures_utils_on_scroll_event (event);
#line 87 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 256 "GridDay.c"
}


static gboolean
___lambda34__gtk_widget_scroll_event (GtkWidget* _sender,
                                      GdkEventScroll* event,
                                      gpointer self)
{
	gboolean result;
	result = __lambda34_ ((MayaViewGridDay*) self, event);
#line 87 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 269 "GridDay.c"
}


MayaViewGridDay*
maya_view_grid_day_construct (GType object_type,
                              GDateTime* date)
{
	MayaViewGridDay * self = NULL;
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	GtkGrid* _tmp3_;
	GtkLabel* _tmp4_;
	MayaViewVAutoHider* _tmp5_;
	MayaViewVAutoHider* _tmp6_;
	GdkEventMask _tmp7_;
	GdkEventMask _tmp8_;
	GdkEventMask _tmp9_;
	GdkEventMask _tmp10_;
	GdkEventMask _tmp11_;
	GdkEventMask _tmp12_;
	GtkCssProvider* style_provider = NULL;
	GtkCssProvider* _tmp13_;
	GtkCssProvider* _tmp14_;
	GtkStyleContext* _tmp15_;
	GtkStyleContext* _tmp16_;
	GtkLabel* _tmp17_;
	GtkLabel* _tmp18_;
	GtkStyleContext* _tmp19_;
	GtkLabel* _tmp20_;
	GtkLabel* _tmp21_;
	GtkWidget* _tmp22_;
	GtkWidget* _tmp23_;
	MayaViewVAutoHider* _tmp24_;
	GtkWidget* _tmp25_;
	GtkWidget* _tmp26_;
	GtkGrid* _tmp27_;
	GtkLabel* _tmp28_;
	GtkGrid* _tmp29_;
	MayaViewVAutoHider* _tmp30_;
	GtkGrid* _tmp31_;
	GtkGrid* _tmp32_;
	GtkTargetEntry dnd = {0};
	GtkTargetEntry _tmp33_ = {0};
	GtkTargetEntry _tmp34_;
	GtkTargetEntry* _tmp35_;
	GtkTargetEntry* _tmp36_;
	gint _tmp36__length1;
#line 54 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (date != NULL, NULL);
#line 54 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self = (MayaViewGridDay*) g_object_new (object_type, NULL);
#line 55 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	maya_view_grid_day_set_date (self, date);
#line 56 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = g_str_hash;
#line 56 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = g_str_equal;
#line 56 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp2_ = g_hash_table_new_full (_tmp0_, _tmp1_, _g_free0_, _g_object_unref0_);
#line 56 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_hash_table_unref0 (self->priv->event_buttons);
#line 56 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self->priv->event_buttons = _tmp2_;
#line 58 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp3_ = (GtkGrid*) gtk_grid_new ();
#line 58 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_object_ref_sink (_tmp3_);
#line 58 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (self->priv->container_grid);
#line 58 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self->priv->container_grid = _tmp3_;
#line 59 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp4_ = (GtkLabel*) gtk_label_new ("");
#line 59 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_object_ref_sink (_tmp4_);
#line 59 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (self->priv->label);
#line 59 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self->priv->label = _tmp4_;
#line 60 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp5_ = maya_view_vauto_hider_new ();
#line 60 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_object_ref_sink (_tmp5_);
#line 60 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (self->priv->event_box);
#line 60 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self->priv->event_box = _tmp5_;
#line 61 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp6_ = self->priv->event_box;
#line 61 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_object_set ((GtkWidget*) _tmp6_, "expand", TRUE, NULL);
#line 64 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_set_can_focus ((GtkWidget*) self, TRUE);
#line 65 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp7_ = gtk_widget_get_events ((GtkWidget*) self);
#line 65 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp8_ = _tmp7_;
#line 65 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_set_events ((GtkWidget*) self, _tmp8_ | GDK_BUTTON_PRESS_MASK);
#line 66 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp9_ = gtk_widget_get_events ((GtkWidget*) self);
#line 66 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp10_ = _tmp9_;
#line 66 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_set_events ((GtkWidget*) self, _tmp10_ | GDK_KEY_PRESS_MASK);
#line 67 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp11_ = gtk_widget_get_events ((GtkWidget*) self);
#line 67 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp12_ = _tmp11_;
#line 67 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_set_events ((GtkWidget*) self, _tmp12_ | GDK_SMOOTH_SCROLL_MASK);
#line 68 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp13_ = maya_util_css_get_css_provider ();
#line 68 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp14_ = _g_object_ref0 (_tmp13_);
#line 68 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	style_provider = _tmp14_;
#line 69 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp15_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 69 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_style_context_add_provider (_tmp15_, (GtkStyleProvider*) style_provider, (guint) 600);
#line 70 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp16_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 70 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_style_context_add_class (_tmp16_, "cell");
#line 72 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp17_ = self->priv->label;
#line 72 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp17_, GTK_ALIGN_END);
#line 73 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp18_ = self->priv->label;
#line 73 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp19_ = gtk_widget_get_style_context ((GtkWidget*) _tmp18_);
#line 73 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_style_context_add_provider (_tmp19_, (GtkStyleProvider*) style_provider, (guint) 600);
#line 74 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp20_ = self->priv->label;
#line 74 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_set_name ((GtkWidget*) _tmp20_, "date");
#line 76 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp21_ = self->priv->label;
#line 76 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp22_ = maya_util_set_margins ((GtkWidget*) _tmp21_, MAYA_VIEW_GRID_DAY_EVENT_MARGIN, MAYA_VIEW_GRID_DAY_EVENT_MARGIN, 0, MAYA_VIEW_GRID_DAY_EVENT_MARGIN);
#line 76 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp23_ = _tmp22_;
#line 76 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (_tmp23_);
#line 77 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp24_ = self->priv->event_box;
#line 77 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp25_ = maya_util_set_margins ((GtkWidget*) _tmp24_, 0, MAYA_VIEW_GRID_DAY_EVENT_MARGIN, MAYA_VIEW_GRID_DAY_EVENT_MARGIN, MAYA_VIEW_GRID_DAY_EVENT_MARGIN);
#line 77 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp26_ = _tmp25_;
#line 77 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (_tmp26_);
#line 78 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp27_ = self->priv->container_grid;
#line 78 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp28_ = self->priv->label;
#line 78 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_grid_attach (_tmp27_, (GtkWidget*) _tmp28_, 0, 0, 1, 1);
#line 79 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp29_ = self->priv->container_grid;
#line 79 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp30_ = self->priv->event_box;
#line 79 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_grid_attach (_tmp29_, (GtkWidget*) _tmp30_, 0, 1, 1, 1);
#line 81 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp31_ = self->priv->container_grid;
#line 81 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp31_);
#line 82 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp32_ = self->priv->container_grid;
#line 82 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp32_);
#line 85 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_signal_connect_object ((GtkWidget*) self, "button-press-event", (GCallback) _maya_view_grid_day_on_button_press_gtk_widget_button_press_event, self, 0);
#line 86 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_signal_connect_object ((GtkWidget*) self, "key-press-event", (GCallback) _maya_view_grid_day_on_key_press_gtk_widget_key_press_event, self, 0);
#line 87 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_signal_connect_object ((GtkWidget*) self, "scroll-event", (GCallback) ___lambda34__gtk_widget_scroll_event, self, 0);
#line 89 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp33_.target = "binary/calendar";
#line 89 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp33_.flags = (guint) 0;
#line 89 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp33_.info = (guint) 0;
#line 89 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	dnd = _tmp33_;
#line 90 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp34_ = dnd;
#line 90 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp35_ = g_new0 (GtkTargetEntry, 1);
#line 90 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp35_[0] = _tmp34_;
#line 90 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp36_ = _tmp35_;
#line 90 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp36__length1 = 1;
#line 90 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_drag_dest_set ((GtkWidget*) self, GTK_DEST_DEFAULT_MOTION, _tmp36_, 1, GDK_ACTION_MOVE);
#line 90 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp36_ = (g_free (_tmp36_), NULL);
#line 54 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (style_provider);
#line 54 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return self;
#line 478 "GridDay.c"
}


MayaViewGridDay*
maya_view_grid_day_new (GDateTime* date)
{
#line 54 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return maya_view_grid_day_construct (MAYA_VIEW_TYPE_GRID_DAY, date);
#line 487 "GridDay.c"
}


static gboolean
maya_view_grid_day_real_drag_drop (GtkWidget* base,
                                   GdkDragContext* context,
                                   gint x,
                                   gint y,
                                   guint time_)
{
	MayaViewGridDay * self;
	gboolean result = FALSE;
	GdkAtom atom = 0U;
	GtkTargetList* _tmp0_;
#line 93 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self = (MayaViewGridDay*) base;
#line 93 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (context != NULL, FALSE);
#line 94 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_drag_finish (context, TRUE, FALSE, (guint32) time_);
#line 95 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = gtk_drag_dest_get_target_list ((GtkWidget*) self);
#line 95 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	atom = gtk_drag_dest_find_target ((GtkWidget*) self, context, _tmp0_);
#line 96 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_drag_get_data ((GtkWidget*) self, context, atom, (guint32) time_);
#line 97 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	result = TRUE;
#line 97 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 518 "GridDay.c"
}


static void
maya_view_grid_day_real_drag_data_received (GtkWidget* base,
                                            GdkDragContext* context,
                                            gint x,
                                            gint y,
                                            GtkSelectionData* selection_data,
                                            guint info,
                                            guint time_)
{
	MayaViewGridDay * self;
	MayaModelCalendarModel* calmodel = NULL;
	MayaModelCalendarModel* _tmp0_;
	ECalComponent* comp = NULL;
	MayaModelCalendarModel* _tmp1_;
	ECalComponent* _tmp2_;
	ECalComponent* _tmp3_;
	ECalComponent* _tmp4_;
	icalcomponent* icalcomp = NULL;
	ECalComponent* _tmp5_;
	icalcomponent* _tmp6_;
	ESource* src = NULL;
	ECalComponent* _tmp7_;
	gconstpointer _tmp8_;
	ESource* _tmp9_;
	struct icaltimetype start = {0};
	icalcomponent* _tmp10_;
	struct icaltimetype end = {0};
	icalcomponent* _tmp11_;
	gint gap = 0;
	GDateTime* _tmp12_;
	struct icaltimetype _tmp13_;
	gint _tmp14_;
	gint _tmp15_;
	gint _tmp16_;
	icalcomponent* _tmp21_;
	struct icaltimetype _tmp22_;
	MayaModelCalendarModel* _tmp23_;
	ESource* _tmp24_;
	ECalComponent* _tmp25_;
#line 100 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self = (MayaViewGridDay*) base;
#line 100 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (context != NULL);
#line 100 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (selection_data != NULL);
#line 101 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = maya_model_calendar_model_get_default ();
#line 101 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	calmodel = _tmp0_;
#line 102 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = calmodel;
#line 102 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp2_ = maya_model_calendar_model_get_drag_component (_tmp1_);
#line 102 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp3_ = _tmp2_;
#line 102 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp4_ = _g_object_ref0 (_tmp3_);
#line 102 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	comp = _tmp4_;
#line 103 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp5_ = comp;
#line 103 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp6_ = e_cal_component_get_icalcomponent (_tmp5_);
#line 103 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	icalcomp = _tmp6_;
#line 104 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp7_ = comp;
#line 104 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp8_ = g_object_get_data ((GObject*) _tmp7_, "source");
#line 104 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp9_ = _g_object_ref0 ((ESource*) _tmp8_);
#line 104 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	src = _tmp9_;
#line 105 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp10_ = icalcomp;
#line 105 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	start = icalcomponent_get_dtstart (_tmp10_);
#line 106 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp11_ = icalcomp;
#line 106 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	end = icalcomponent_get_dtend (_tmp11_);
#line 107 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp12_ = self->priv->_date;
#line 107 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp13_ = start;
#line 107 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp14_ = _tmp13_.day;
#line 107 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gap = g_date_time_get_day_of_month (_tmp12_) - _tmp14_;
#line 108 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp15_ = start.day;
#line 108 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp16_ = gap;
#line 108 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	start.day = _tmp15_ + _tmp16_;
#line 110 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (icaltime_is_null_time (end) == 0) {
#line 619 "GridDay.c"
		gint _tmp17_;
		gint _tmp18_;
		icalcomponent* _tmp19_;
		struct icaltimetype _tmp20_;
#line 111 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp17_ = end.day;
#line 111 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp18_ = gap;
#line 111 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		end.day = _tmp17_ + _tmp18_;
#line 112 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp19_ = icalcomp;
#line 112 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp20_ = end;
#line 112 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		icalcomponent_set_dtend (_tmp19_, _tmp20_);
#line 636 "GridDay.c"
	}
#line 115 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp21_ = icalcomp;
#line 115 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp22_ = start;
#line 115 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	icalcomponent_set_dtstart (_tmp21_, _tmp22_);
#line 116 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp23_ = calmodel;
#line 116 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp24_ = src;
#line 116 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp25_ = comp;
#line 116 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	maya_model_calendar_model_update_event (_tmp23_, _tmp24_, _tmp25_, E_CAL_OBJ_MOD_ALL);
#line 100 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (src);
#line 100 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (comp);
#line 100 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (calmodel);
#line 658 "GridDay.c"
}


void
maya_view_grid_day_add_event_button (MayaViewGridDay* self,
                                     MayaViewEventButton* button)
{
	icalcomponent* calcomp = NULL;
	ECalComponent* _tmp0_;
	ECalComponent* _tmp1_;
	icalcomponent* _tmp2_;
	gchar* uid = NULL;
	icalcomponent* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	GtkContainer* _tmp15_;
	MayaViewVAutoHider* _tmp16_;
	GError * _inner_error_ = NULL;
#line 119 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (self != NULL);
#line 119 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (button != NULL);
#line 120 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = maya_view_event_button_get_comp (button);
#line 120 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = _tmp0_;
#line 120 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp2_ = e_cal_component_get_icalcomponent (_tmp1_);
#line 120 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	calcomp = _tmp2_;
#line 121 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp3_ = calcomp;
#line 121 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp4_ = icalcomponent_get_uid (_tmp3_);
#line 121 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp5_ = g_strdup (_tmp4_);
#line 121 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	uid = _tmp5_;
#line 697 "GridDay.c"
	{
		GHashTable* _tmp6_;
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp6_ = self->priv->event_buttons;
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		g_rec_mutex_lock (&self->priv->__lock_event_buttons);
#line 704 "GridDay.c"
		{
			GHashTable* _tmp7_;
			const gchar* _tmp8_;
			GHashTable* _tmp10_;
			const gchar* _tmp11_;
			gchar* _tmp12_;
			MayaViewEventButton* _tmp13_;
#line 123 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp7_ = self->priv->event_buttons;
#line 123 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp8_ = uid;
#line 123 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			if (g_hash_table_contains (_tmp7_, _tmp8_)) {
#line 718 "GridDay.c"
				{
					GHashTable* _tmp9_;
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
					_tmp9_ = self->priv->event_buttons;
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
					g_rec_mutex_unlock (&self->priv->__lock_event_buttons);
#line 725 "GridDay.c"
				}
#line 124 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				_g_free0 (uid);
#line 124 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				return;
#line 731 "GridDay.c"
			}
#line 127 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp10_ = self->priv->event_buttons;
#line 127 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp11_ = uid;
#line 127 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp12_ = g_strdup (_tmp11_);
#line 127 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp13_ = _g_object_ref0 (button);
#line 127 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_hash_table_insert (_tmp10_, _tmp12_, _tmp13_);
#line 743 "GridDay.c"
		}
		__finally14:
		{
			GHashTable* _tmp14_;
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp14_ = self->priv->event_buttons;
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_rec_mutex_unlock (&self->priv->__lock_event_buttons);
#line 752 "GridDay.c"
		}
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_g_free0 (uid);
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_clear_error (&_inner_error_);
#line 122 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			return;
#line 764 "GridDay.c"
		}
	}
#line 130 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp15_ = gtk_widget_get_parent ((GtkWidget*) button);
#line 130 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (_tmp15_ != NULL) {
#line 131 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		gtk_widget_unparent ((GtkWidget*) button);
#line 773 "GridDay.c"
	}
#line 134 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp16_ = self->priv->event_box;
#line 134 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_container_add ((GtkContainer*) _tmp16_, (GtkWidget*) button);
#line 135 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_show_all ((GtkWidget*) button);
#line 119 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_free0 (uid);
#line 783 "GridDay.c"
}


gboolean
maya_view_grid_day_update_event (MayaViewGridDay* self,
                                 ECalComponent* comp)
{
	gboolean result = FALSE;
	icalcomponent* calcomp = NULL;
	icalcomponent* _tmp0_;
	gchar* uid = NULL;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	GError * _inner_error_ = NULL;
#line 139 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 139 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (comp != NULL, FALSE);
#line 140 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = e_cal_component_get_icalcomponent (comp);
#line 140 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	calcomp = _tmp0_;
#line 141 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = icalcomponent_get_uid (calcomp);
#line 141 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp2_ = g_strdup (_tmp1_);
#line 141 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	uid = _tmp2_;
#line 812 "GridDay.c"
	{
		GHashTable* _tmp3_;
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp3_ = self->priv->event_buttons;
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		g_rec_mutex_lock (&self->priv->__lock_event_buttons);
#line 819 "GridDay.c"
		{
			MayaViewEventButton* button = NULL;
			GHashTable* _tmp4_;
			gconstpointer _tmp5_;
			MayaViewEventButton* _tmp6_;
#line 144 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp4_ = self->priv->event_buttons;
#line 144 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp5_ = g_hash_table_lookup (_tmp4_, uid);
#line 144 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp6_ = _g_object_ref0 ((MayaViewEventButton*) _tmp5_);
#line 144 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			button = _tmp6_;
#line 145 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			if (button != NULL) {
#line 835 "GridDay.c"
				MayaViewVAutoHider* _tmp7_;
#line 146 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				maya_view_event_button_update (button, comp);
#line 147 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				_tmp7_ = self->priv->event_box;
#line 147 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				maya_view_vauto_hider_update (_tmp7_, (GtkWidget*) button);
#line 843 "GridDay.c"
			} else {
#line 149 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				result = FALSE;
#line 149 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				_g_object_unref0 (button);
#line 849 "GridDay.c"
				{
					GHashTable* _tmp8_;
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
					_tmp8_ = self->priv->event_buttons;
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
					g_rec_mutex_unlock (&self->priv->__lock_event_buttons);
#line 856 "GridDay.c"
				}
#line 149 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				_g_free0 (uid);
#line 149 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				return result;
#line 862 "GridDay.c"
			}
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_g_object_unref0 (button);
#line 866 "GridDay.c"
		}
		__finally15:
		{
			GHashTable* _tmp9_;
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp9_ = self->priv->event_buttons;
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_rec_mutex_unlock (&self->priv->__lock_event_buttons);
#line 875 "GridDay.c"
		}
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 879 "GridDay.c"
			gboolean _tmp10_ = FALSE;
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_g_free0 (uid);
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_clear_error (&_inner_error_);
#line 143 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			return _tmp10_;
#line 889 "GridDay.c"
		}
	}
#line 153 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	result = TRUE;
#line 153 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_free0 (uid);
#line 153 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 898 "GridDay.c"
}


void
maya_view_grid_day_remove_event (MayaViewGridDay* self,
                                 ECalComponent* comp)
{
	icalcomponent* calcomp = NULL;
	icalcomponent* _tmp0_;
	gchar* uid = NULL;
	icalcomponent* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	GError * _inner_error_ = NULL;
#line 156 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (self != NULL);
#line 156 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (comp != NULL);
#line 157 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = e_cal_component_get_icalcomponent (comp);
#line 157 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	calcomp = _tmp0_;
#line 158 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = calcomp;
#line 158 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp2_ = icalcomponent_get_uid (_tmp1_);
#line 158 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp3_ = g_strdup (_tmp2_);
#line 158 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	uid = _tmp3_;
#line 929 "GridDay.c"
	{
		GHashTable* _tmp4_;
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp4_ = self->priv->event_buttons;
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		g_rec_mutex_lock (&self->priv->__lock_event_buttons);
#line 936 "GridDay.c"
		{
			MayaViewEventButton* button = NULL;
			GHashTable* _tmp5_;
			const gchar* _tmp6_;
			gconstpointer _tmp7_;
			MayaViewEventButton* _tmp8_;
			MayaViewEventButton* _tmp9_;
#line 160 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp5_ = self->priv->event_buttons;
#line 160 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp6_ = uid;
#line 160 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp7_ = g_hash_table_lookup (_tmp5_, _tmp6_);
#line 160 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp8_ = _g_object_ref0 ((MayaViewEventButton*) _tmp7_);
#line 160 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			button = _tmp8_;
#line 161 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp9_ = button;
#line 161 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			if (_tmp9_ != NULL) {
#line 958 "GridDay.c"
				GHashTable* _tmp10_;
				const gchar* _tmp11_;
				MayaViewEventButton* _tmp12_;
#line 162 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				_tmp10_ = self->priv->event_buttons;
#line 162 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				_tmp11_ = uid;
#line 162 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				g_hash_table_remove (_tmp10_, _tmp11_);
#line 163 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				_tmp12_ = button;
#line 163 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				maya_view_grid_day_destroy_button (self, _tmp12_);
#line 972 "GridDay.c"
			}
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_g_object_unref0 (button);
#line 976 "GridDay.c"
		}
		__finally16:
		{
			GHashTable* _tmp13_;
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_tmp13_ = self->priv->event_buttons;
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_rec_mutex_unlock (&self->priv->__lock_event_buttons);
#line 985 "GridDay.c"
		}
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			_g_free0 (uid);
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			g_clear_error (&_inner_error_);
#line 159 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			return;
#line 997 "GridDay.c"
		}
	}
#line 156 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_free0 (uid);
#line 1002 "GridDay.c"
}


void
maya_view_grid_day_clear_events (MayaViewGridDay* self)
{
	GHashTable* _tmp0_;
	GList* _tmp1_;
	GHashTable* _tmp3_;
#line 168 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (self != NULL);
#line 169 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = self->priv->event_buttons;
#line 169 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = g_hash_table_get_values (_tmp0_);
#line 1018 "GridDay.c"
	{
		GList* button_collection = NULL;
		GList* button_it = NULL;
#line 169 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		button_collection = _tmp1_;
#line 169 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		for (button_it = button_collection; button_it != NULL; button_it = button_it->next) {
#line 1026 "GridDay.c"
			MayaViewEventButton* button = NULL;
#line 169 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
			button = (MayaViewEventButton*) button_it->data;
#line 1030 "GridDay.c"
			{
				MayaViewEventButton* _tmp2_;
#line 170 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				_tmp2_ = button;
#line 170 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
				maya_view_grid_day_destroy_button (self, _tmp2_);
#line 1037 "GridDay.c"
			}
		}
#line 169 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		(button_collection == NULL) ? NULL : (button_collection = (g_list_free (button_collection), NULL));
#line 1042 "GridDay.c"
	}
#line 173 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp3_ = self->priv->event_buttons;
#line 173 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_hash_table_remove_all (_tmp3_);
#line 1048 "GridDay.c"
}


static Block19Data*
block19_data_ref (Block19Data* _data19_)
{
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_atomic_int_inc (&_data19_->_ref_count_);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return _data19_;
#line 1059 "GridDay.c"
}


static void
block19_data_unref (void * _userdata_)
{
	Block19Data* _data19_;
	_data19_ = (Block19Data*) _userdata_;
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (g_atomic_int_dec_and_test (&_data19_->_ref_count_)) {
#line 1070 "GridDay.c"
		MayaViewGridDay* self;
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		self = _data19_->self;
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_g_object_unref0 (_data19_->button);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_g_object_unref0 (self);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		g_slice_free (Block19Data, _data19_);
#line 1080 "GridDay.c"
	}
}


static gboolean
__lambda35_ (Block19Data* _data19_)
{
	MayaViewGridDay* self;
	gboolean result = FALSE;
#line 178 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self = _data19_->self;
#line 179 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_destroy ((GtkWidget*) _data19_->button);
#line 180 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	result = FALSE;
#line 180 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 1098 "GridDay.c"
}


static gboolean
___lambda35__gsource_func (gpointer self)
{
	gboolean result;
	result = __lambda35_ (self);
#line 178 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 1109 "GridDay.c"
}


static void
maya_view_grid_day_destroy_button (MayaViewGridDay* self,
                                   MayaViewEventButton* button)
{
	Block19Data* _data19_;
	MayaViewEventButton* _tmp0_;
	guint _tmp1_;
	guint _tmp2_;
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (self != NULL);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (button != NULL);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_data19_ = g_slice_new0 (Block19Data);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_data19_->_ref_count_ = 1;
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_data19_->self = g_object_ref (self);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = _g_object_ref0 (button);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (_data19_->button);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_data19_->button = _tmp0_;
#line 177 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_revealer_set_reveal_child ((GtkRevealer*) _data19_->button, FALSE);
#line 178 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = gtk_revealer_get_transition_duration ((GtkRevealer*) _data19_->button);
#line 178 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp2_ = _tmp1_;
#line 178 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp2_, ___lambda35__gsource_func, block19_data_ref (_data19_), block19_data_unref);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	block19_data_unref (_data19_);
#line 176 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_data19_ = NULL;
#line 1149 "GridDay.c"
}


void
maya_view_grid_day_update_date (MayaViewGridDay* self,
                                GDateTime* date)
{
	GtkLabel* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
#line 184 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (self != NULL);
#line 184 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (date != NULL);
#line 185 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	maya_view_grid_day_set_date (self, date);
#line 186 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = self->priv->label;
#line 186 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = g_strdup_printf ("%i", g_date_time_get_day_of_month (date));
#line 186 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp2_ = _tmp1_;
#line 186 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_label_set_label (_tmp0_, _tmp2_);
#line 186 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_free0 (_tmp2_);
#line 1176 "GridDay.c"
}


void
maya_view_grid_day_set_selected (MayaViewGridDay* self,
                                 gboolean selected)
{
#line 189 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (self != NULL);
#line 190 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (selected) {
#line 191 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		gtk_widget_set_state_flags ((GtkWidget*) self, GTK_STATE_FLAG_SELECTED, TRUE);
#line 1190 "GridDay.c"
	} else {
#line 193 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		gtk_widget_set_state_flags ((GtkWidget*) self, GTK_STATE_FLAG_NORMAL, TRUE);
#line 1194 "GridDay.c"
	}
}


static gboolean
maya_view_grid_day_on_button_press (MayaViewGridDay* self,
                                    GdkEventButton* event)
{
	gboolean result = FALSE;
	gboolean _tmp0_ = FALSE;
	GdkEventType _tmp1_;
#line 197 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 197 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 198 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp1_ = event->type;
#line 198 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (_tmp1_ == GDK_2BUTTON_PRESS) {
#line 1214 "GridDay.c"
		guint _tmp2_;
#line 198 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp2_ = event->button;
#line 198 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp0_ = _tmp2_ == ((guint) GDK_BUTTON_PRIMARY);
#line 1220 "GridDay.c"
	} else {
#line 198 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp0_ = FALSE;
#line 1224 "GridDay.c"
	}
#line 198 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (_tmp0_) {
#line 1228 "GridDay.c"
		GDateTime* _tmp3_;
#line 199 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp3_ = self->priv->_date;
#line 199 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		g_signal_emit (self, maya_view_grid_day_signals[MAYA_VIEW_GRID_DAY_ON_EVENT_ADD_SIGNAL], 0, _tmp3_);
#line 1234 "GridDay.c"
	}
#line 201 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	gtk_widget_grab_focus ((GtkWidget*) self);
#line 202 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	result = FALSE;
#line 202 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 1242 "GridDay.c"
}


static gboolean
maya_view_grid_day_on_key_press (MayaViewGridDay* self,
                                 GdkEventKey* event)
{
	gboolean result = FALSE;
	guint _tmp0_;
#line 205 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 205 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 206 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = event->keyval;
#line 206 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (_tmp0_ == gdk_keyval_from_name ("Return")) {
#line 1260 "GridDay.c"
		GDateTime* _tmp1_;
#line 207 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp1_ = self->priv->_date;
#line 207 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		g_signal_emit (self, maya_view_grid_day_signals[MAYA_VIEW_GRID_DAY_ON_EVENT_ADD_SIGNAL], 0, _tmp1_);
#line 208 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		result = TRUE;
#line 208 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		return result;
#line 1270 "GridDay.c"
	}
#line 211 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	result = FALSE;
#line 211 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 1276 "GridDay.c"
}


GDateTime*
maya_view_grid_day_get_date (MayaViewGridDay* self)
{
	GDateTime* result;
	GDateTime* _tmp0_;
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_tmp0_ = self->priv->_date;
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	result = _tmp0_;
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return result;
#line 1293 "GridDay.c"
}


static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 1302 "GridDay.c"
}


static void
maya_view_grid_day_set_date (MayaViewGridDay* self,
                             GDateTime* value)
{
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (self != NULL);
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (maya_view_grid_day_get_date (self) != value) {
#line 1314 "GridDay.c"
		GDateTime* _tmp0_;
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp0_ = _g_date_time_ref0 (value);
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_g_date_time_unref0 (self->priv->_date);
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		self->priv->_date = _tmp0_;
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		g_object_notify_by_pspec ((GObject *) self, maya_view_grid_day_properties[MAYA_VIEW_GRID_DAY_DATE_PROPERTY]);
#line 1324 "GridDay.c"
	}
}


void
maya_view_grid_day_set_in_current_month (MayaViewGridDay* self,
                                         gboolean value)
{
#line 41 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_return_if_fail (self != NULL);
#line 42 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	if (value) {
#line 1337 "GridDay.c"
		GtkStyleContext* _tmp0_;
		GtkStyleContext* _tmp1_;
#line 43 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 43 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		gtk_style_context_remove_class (_tmp0_, "other_month");
#line 44 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp1_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 44 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		gtk_style_context_remove_class (_tmp1_, GTK_STYLE_CLASS_DIM_LABEL);
#line 1348 "GridDay.c"
	} else {
		GtkStyleContext* _tmp2_;
		GtkStyleContext* _tmp3_;
#line 46 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp2_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 46 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		gtk_style_context_add_class (_tmp2_, "other_month");
#line 47 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		_tmp3_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 47 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		gtk_style_context_add_class (_tmp3_, GTK_STYLE_CLASS_DIM_LABEL);
#line 1360 "GridDay.c"
	}
#line 41 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_object_notify_by_pspec ((GObject *) self, maya_view_grid_day_properties[MAYA_VIEW_GRID_DAY_IN_CURRENT_MONTH_PROPERTY]);
#line 1364 "GridDay.c"
}


static void
maya_view_grid_day_class_init (MayaViewGridDayClass * klass)
{
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	maya_view_grid_day_parent_class = g_type_class_peek_parent (klass);
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_type_class_add_private (klass, sizeof (MayaViewGridDayPrivate));
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	((GtkWidgetClass *) klass)->drag_drop = (gboolean (*) (GtkWidget *, GdkDragContext*, gint, gint, guint)) maya_view_grid_day_real_drag_drop;
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	((GtkWidgetClass *) klass)->drag_data_received = (void (*) (GtkWidget *, GdkDragContext*, gint, gint, GtkSelectionData*, guint, guint)) maya_view_grid_day_real_drag_data_received;
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_maya_view_grid_day_get_property;
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_maya_view_grid_day_set_property;
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	G_OBJECT_CLASS (klass)->finalize = maya_view_grid_day_finalize;
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), MAYA_VIEW_GRID_DAY_DATE_PROPERTY, maya_view_grid_day_properties[MAYA_VIEW_GRID_DAY_DATE_PROPERTY] = g_param_spec_boxed ("date", "date", "date", G_TYPE_DATE_TIME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), MAYA_VIEW_GRID_DAY_IN_CURRENT_MONTH_PROPERTY, maya_view_grid_day_properties[MAYA_VIEW_GRID_DAY_IN_CURRENT_MONTH_PROPERTY] = g_param_spec_boolean ("in-current-month", "in-current-month", "in-current-month", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_WRITABLE));
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	maya_view_grid_day_signals[MAYA_VIEW_GRID_DAY_ON_EVENT_ADD_SIGNAL] = g_signal_new ("on-event-add", MAYA_VIEW_TYPE_GRID_DAY, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__BOXED, G_TYPE_NONE, 1, G_TYPE_DATE_TIME);
#line 1391 "GridDay.c"
}


static void
maya_view_grid_day_instance_init (MayaViewGridDay * self)
{
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self->priv = MAYA_VIEW_GRID_DAY_GET_PRIVATE (self);
#line 34 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self->draw_left_border = TRUE;
#line 38 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_rec_mutex_init (&self->priv->__lock_event_buttons);
#line 1404 "GridDay.c"
}


static void
maya_view_grid_day_finalize (GObject * obj)
{
	MayaViewGridDay * self;
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDay);
#line 32 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_date_time_unref0 (self->priv->_date);
#line 35 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (self->priv->label);
#line 36 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (self->priv->container_grid);
#line 37 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_object_unref0 (self->priv->event_box);
#line 38 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	g_rec_mutex_clear (&self->priv->__lock_event_buttons);
#line 38 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	_g_hash_table_unref0 (self->priv->event_buttons);
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	G_OBJECT_CLASS (maya_view_grid_day_parent_class)->finalize (obj);
#line 1428 "GridDay.c"
}


/**
 * Represents a single day on the grid.
 */
GType
maya_view_grid_day_get_type (void)
{
	static volatile gsize maya_view_grid_day_type_id__volatile = 0;
	if (g_once_init_enter (&maya_view_grid_day_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (MayaViewGridDayClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maya_view_grid_day_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MayaViewGridDay), 0, (GInstanceInitFunc) maya_view_grid_day_instance_init, NULL };
		GType maya_view_grid_day_type_id;
		maya_view_grid_day_type_id = g_type_register_static (gtk_event_box_get_type (), "MayaViewGridDay", &g_define_type_info, 0);
		g_once_init_leave (&maya_view_grid_day_type_id__volatile, maya_view_grid_day_type_id);
	}
	return maya_view_grid_day_type_id__volatile;
}


static void
_vala_maya_view_grid_day_get_property (GObject * object,
                                       guint property_id,
                                       GValue * value,
                                       GParamSpec * pspec)
{
	MayaViewGridDay * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDay);
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	switch (property_id) {
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		case MAYA_VIEW_GRID_DAY_DATE_PROPERTY:
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		g_value_set_boxed (value, maya_view_grid_day_get_date (self));
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		break;
#line 1465 "GridDay.c"
		default:
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		break;
#line 1471 "GridDay.c"
	}
}


static void
_vala_maya_view_grid_day_set_property (GObject * object,
                                       guint property_id,
                                       const GValue * value,
                                       GParamSpec * pspec)
{
	MayaViewGridDay * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDay);
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
	switch (property_id) {
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		case MAYA_VIEW_GRID_DAY_DATE_PROPERTY:
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		maya_view_grid_day_set_date (self, g_value_get_boxed (value));
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		break;
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		case MAYA_VIEW_GRID_DAY_IN_CURRENT_MONTH_PROPERTY:
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		maya_view_grid_day_set_in_current_month (self, g_value_get_boolean (value));
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		break;
#line 1498 "GridDay.c"
		default:
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 25 "/run/build/io.elementary.calendar/src/Grid/GridDay.vala"
		break;
#line 1504 "GridDay.c"
	}
}



