/* Utils.c generated by valac 0.40.11, the Vala compiler
 * generated from Utils.vala, do not modify */

/*  This program is free software: you can redistribute it and/or modify*/
/*  it under the terms of the GNU General Public License as published by*/
/*  the Free Software Foundation, either version 3 of the License, or*/
/*  (at your option) any later version.*/
/**/
/*  This program is distributed in the hope that it will be useful,*/
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of*/
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the*/
/*  GNU General Public License for more details.*/
/**/
/*  You should have received a copy of the GNU General Public License*/
/*  along with this program.  If not, see <http://www.gnu.org/licenses/>.*/
/**/


#include <glib.h>
#include <glib-object.h>
#include <libecal/libecal.h>
#include <libical/ical.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>
#include <gee.h>
#include <libedataserver/libedataserver.h>
#include <gtk/gtk.h>
#include <glib/gi18n-lib.h>
#include <gio/gio.h>
#include <granite.h>
#include <gobject/gvaluecollector.h>

#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_time_zone_unref0(var) ((var == NULL) ? NULL : (var = (g_time_zone_unref (var), NULL)))

#define MAYA_UTIL_TYPE_DATE_RANGE (maya_util_date_range_get_type ())
#define MAYA_UTIL_DATE_RANGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_UTIL_TYPE_DATE_RANGE, MayaUtilDateRange))
#define MAYA_UTIL_DATE_RANGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_UTIL_TYPE_DATE_RANGE, MayaUtilDateRangeClass))
#define MAYA_UTIL_IS_DATE_RANGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_UTIL_TYPE_DATE_RANGE))
#define MAYA_UTIL_IS_DATE_RANGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_UTIL_TYPE_DATE_RANGE))
#define MAYA_UTIL_DATE_RANGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_UTIL_TYPE_DATE_RANGE, MayaUtilDateRangeClass))

typedef struct _MayaUtilDateRange MayaUtilDateRange;
typedef struct _MayaUtilDateRangeClass MayaUtilDateRangeClass;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _Block12Data Block12Data;
typedef struct _Block13Data Block13Data;

#define MAYA_UTIL_TYPE_CSS (maya_util_css_get_type ())
#define MAYA_UTIL_CSS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_UTIL_TYPE_CSS, MayaUtilCss))
#define MAYA_UTIL_CSS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_UTIL_TYPE_CSS, MayaUtilCssClass))
#define MAYA_UTIL_IS_CSS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_UTIL_TYPE_CSS))
#define MAYA_UTIL_IS_CSS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_UTIL_TYPE_CSS))
#define MAYA_UTIL_CSS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_UTIL_TYPE_CSS, MayaUtilCssClass))

typedef struct _MayaUtilCss MayaUtilCss;
typedef struct _MayaUtilCssClass MayaUtilCssClass;
typedef struct _MayaUtilCssPrivate MayaUtilCssPrivate;
typedef struct _MayaUtilParamSpecCss MayaUtilParamSpecCss;

#define MAYA_MODEL_TYPE_CALENDAR_MODEL (maya_model_calendar_model_get_type ())
#define MAYA_MODEL_CALENDAR_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_MODEL_TYPE_CALENDAR_MODEL, MayaModelCalendarModel))
#define MAYA_MODEL_CALENDAR_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_MODEL_TYPE_CALENDAR_MODEL, MayaModelCalendarModelClass))
#define MAYA_MODEL_IS_CALENDAR_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_MODEL_TYPE_CALENDAR_MODEL))
#define MAYA_MODEL_IS_CALENDAR_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_MODEL_TYPE_CALENDAR_MODEL))
#define MAYA_MODEL_CALENDAR_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_MODEL_TYPE_CALENDAR_MODEL, MayaModelCalendarModelClass))

typedef struct _MayaModelCalendarModel MayaModelCalendarModel;
typedef struct _MayaModelCalendarModelClass MayaModelCalendarModelClass;
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
#define _g_string_free0(var) ((var == NULL) ? NULL : (var = (g_string_free (var, TRUE), NULL)))
#define _g_settings_schema_unref0(var) ((var == NULL) ? NULL : (var = (g_settings_schema_unref (var), NULL)))

#define MAYA_SETTINGS_TYPE_SAVED_STATE (maya_settings_saved_state_get_type ())
#define MAYA_SETTINGS_SAVED_STATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_SETTINGS_TYPE_SAVED_STATE, MayaSettingsSavedState))
#define MAYA_SETTINGS_SAVED_STATE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_SETTINGS_TYPE_SAVED_STATE, MayaSettingsSavedStateClass))
#define MAYA_SETTINGS_IS_SAVED_STATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_SETTINGS_TYPE_SAVED_STATE))
#define MAYA_SETTINGS_IS_SAVED_STATE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_SETTINGS_TYPE_SAVED_STATE))
#define MAYA_SETTINGS_SAVED_STATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_SETTINGS_TYPE_SAVED_STATE, MayaSettingsSavedStateClass))

typedef struct _MayaSettingsSavedState MayaSettingsSavedState;
typedef struct _MayaSettingsSavedStateClass MayaSettingsSavedStateClass;

struct _Block12Data {
	int _ref_count_;
	GeeLinkedList* dateranges;
};

struct _Block13Data {
	int _ref_count_;
	Block12Data * _data12_;
	GDateTime* date;
};

struct _MayaUtilCss {
	GTypeInstance parent_instance;
	volatile int ref_count;
	MayaUtilCssPrivate * priv;
};

struct _MayaUtilCssClass {
	GTypeClass parent_class;
	void (*finalize) (MayaUtilCss *self);
};

struct _MayaUtilParamSpecCss {
	GParamSpec parent_instance;
};


static gpointer maya_util_css_parent_class = NULL;
static GtkCssProvider* maya_util_css__css_provider;
static GtkCssProvider* maya_util_css__css_provider = NULL;

gint maya_util_compare_events (ECalComponent* comp1,
                               ECalComponent* comp2);
GDateTime* maya_util_ical_to_date_time (struct icaltimetype date);
struct icaltimetype maya_util_date_time_to_ical (GDateTime* date,
                                                 GDateTime* time_local,
                                                 const gchar* timezone);
GTimeZone* maya_util_timezone_from_ical (struct icaltimetype date);
void maya_util_get_local_datetimes_from_icalcomponent (icalcomponent* comp,
                                                       GDateTime* * start_date,
                                                       GDateTime* * end_date);
gboolean maya_util_is_all_day (GDateTime* dtstart,
                               GDateTime* dtend);
GType maya_util_date_range_get_type (void) G_GNUC_CONST;
gboolean maya_util_is_event_in_range (icalcomponent* comp,
                                      MayaUtilDateRange* view_range);
GDateTime* maya_util_date_range_get_first_dt (MayaUtilDateRange* self);
GDateTime* maya_util_date_range_get_last_dt (MayaUtilDateRange* self);
gboolean maya_util_is_day_in_range (GDateTime* day,
                                    MayaUtilDateRange* range);
GeeCollection* maya_util_event_date_ranges (icalcomponent* comp,
                                            MayaUtilDateRange* view_range);
static Block12Data* block12_data_ref (Block12Data* _data12_);
static void block12_data_unref (void * _userdata_);
GDateTime* maya_util_strip_time (GDateTime* datetime);
MayaUtilDateRange* maya_util_date_range_new (GDateTime* first,
                                             GDateTime* last);
MayaUtilDateRange* maya_util_date_range_construct (GType object_type,
                                                   GDateTime* first,
                                                   GDateTime* last);
void maya_util_generate_week_reccurence (GeeLinkedList* dateranges,
                                         MayaUtilDateRange* view_range,
                                         struct icalrecurrencetype rrule,
                                         GDateTime* start_,
                                         GDateTime* end_);
void maya_util_generate_month_reccurence (GeeLinkedList* dateranges,
                                          MayaUtilDateRange* view_range,
                                          struct icalrecurrencetype rrule,
                                          GDateTime* start,
                                          GDateTime* end);
void maya_util_generate_year_reccurence (GeeLinkedList* dateranges,
                                         MayaUtilDateRange* view_range,
                                         struct icalrecurrencetype rrule,
                                         GDateTime* start,
                                         GDateTime* end);
void maya_util_generate_day_reccurence (GeeLinkedList* dateranges,
                                        MayaUtilDateRange* view_range,
                                        struct icalrecurrencetype rrule,
                                        GDateTime* start,
                                        GDateTime* end);
static Block13Data* block13_data_ref (Block13Data* _data13_);
static void block13_data_unref (void * _userdata_);
static gboolean ___lambda306_ (Block13Data* _data13_,
                        MayaUtilDateRange* daterange);
static gboolean ____lambda306__gee_forall_func (gpointer g,
                                         gpointer self);
gboolean maya_util_date_range_contains (MayaUtilDateRange* self,
                                        GDateTime* time);
GDateTime* maya_util_get_date_from_ical_day (GDateTime* date,
                                             gshort day);
gboolean maya_util_is_multiday_event (icalcomponent* comp);
GDateTime* maya_util_get_start_of_month (GDateTime* date);
guint maya_util_source_hash_func (ESource* key);
gboolean maya_util_datetime_equal_func (GDateTime* a,
                                        GDateTime* b);
gboolean maya_util_calcomponent_equal_func (ECalComponent* a,
                                            ECalComponent* b);
gboolean maya_util_source_equal_func (ESource* a,
                                      ESource* b);
gpointer maya_util_css_ref (gpointer instance);
void maya_util_css_unref (gpointer instance);
GParamSpec* maya_util_param_spec_css (const gchar* name,
                                      const gchar* nick,
                                      const gchar* blurb,
                                      GType object_type,
                                      GParamFlags flags);
void maya_util_value_set_css (GValue* value,
                              gpointer v_object);
void maya_util_value_take_css (GValue* value,
                               gpointer v_object);
gpointer maya_util_value_get_css (const GValue* value);
GType maya_util_css_get_type (void) G_GNUC_CONST;
GtkCssProvider* maya_util_css_get_css_provider (void);
MayaUtilCss* maya_util_css_new (void);
MayaUtilCss* maya_util_css_construct (GType object_type);
static void maya_util_css_finalize (MayaUtilCss * obj);
gchar* maya_util_get_source_location (ESource* source);
GType maya_model_calendar_model_get_type (void) G_GNUC_CONST;
MayaModelCalendarModel* maya_model_calendar_model_get_default (void);
ESourceRegistry* maya_model_calendar_model_get_registry (MayaModelCalendarModel* self);
void maya_util_save_temp_selected_calendars (void);
GeeCollection* maya_model_calendar_model_get_events (MayaModelCalendarModel* self);
#define MAYA_UTIL_SHOW_WEEKS_SCHEMA "io.elementary.desktop.wingpanel.datetime"
gboolean maya_util_show_weeks (void);
GType maya_settings_saved_state_get_type (void) G_GNUC_CONST;
MayaSettingsSavedState* maya_settings_saved_state_get_default (void);
gboolean maya_settings_saved_state_get_show_weeks (MayaSettingsSavedState* self);
void maya_util_toggle_show_weeks (void);
void maya_settings_saved_state_set_show_weeks (MayaSettingsSavedState* self,
                                               gboolean value);
void maya_util_style_calendar_color (GtkWidget* widget,
                                     const gchar* color,
                                     gboolean background);


gint
maya_util_compare_events (ECalComponent* comp1,
                          ECalComponent* comp2)
{
	gint result = 0;
	GDateTime* date1 = NULL;
	icalcomponent* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* date2 = NULL;
	icalcomponent* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	GDateTime* _tmp5_;
	ECalComponentText summary1 = {0};
	ECalComponentText _tmp8_ = {0};
	ECalComponentText summary2 = {0};
	ECalComponentText _tmp9_ = {0};
	ECalComponentText _tmp10_;
	const gchar* _tmp11_;
	ECalComponentText _tmp12_;
	const gchar* _tmp13_;
	ECalComponentText _tmp14_;
	const gchar* _tmp15_;
	ECalComponentText _tmp16_;
	const gchar* _tmp17_;
#line 17 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (comp1 != NULL, 0);
#line 17 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (comp2 != NULL, 0);
#line 19 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = e_cal_component_get_icalcomponent (comp1);
#line 19 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = maya_util_ical_to_date_time (icalcomponent_get_dtstart (_tmp0_));
#line 19 "/run/build/planner/src/Services/Calendar/Utils.vala"
	date1 = _tmp1_;
#line 20 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = e_cal_component_get_icalcomponent (comp2);
#line 20 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = maya_util_ical_to_date_time (icalcomponent_get_dtstart (_tmp2_));
#line 20 "/run/build/planner/src/Services/Calendar/Utils.vala"
	date2 = _tmp3_;
#line 22 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = date1;
#line 22 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = date2;
#line 22 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (g_date_time_compare (_tmp4_, _tmp5_) != 0) {
#line 270 "Utils.c"
		GDateTime* _tmp6_;
		GDateTime* _tmp7_;
#line 23 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp6_ = date1;
#line 23 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp7_ = date2;
#line 23 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = g_date_time_compare (_tmp6_, _tmp7_);
#line 23 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (date2);
#line 23 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (date1);
#line 23 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 285 "Utils.c"
	}
#line 26 "/run/build/planner/src/Services/Calendar/Utils.vala"
	e_cal_component_get_summary (comp1, &_tmp8_);
#line 26 "/run/build/planner/src/Services/Calendar/Utils.vala"
	summary1 = _tmp8_;
#line 27 "/run/build/planner/src/Services/Calendar/Utils.vala"
	e_cal_component_get_summary (comp2, &_tmp9_);
#line 27 "/run/build/planner/src/Services/Calendar/Utils.vala"
	summary2 = _tmp9_;
#line 29 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp10_ = summary1;
#line 29 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp11_ = _tmp10_.value;
#line 29 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp12_ = summary2;
#line 29 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp13_ = _tmp12_.value;
#line 29 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (g_strcmp0 (_tmp11_, _tmp13_) < 0) {
#line 30 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = -1;
#line 30 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (date2);
#line 30 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (date1);
#line 30 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 313 "Utils.c"
	}
#line 31 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp14_ = summary1;
#line 31 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp15_ = _tmp14_.value;
#line 31 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp16_ = summary2;
#line 31 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp17_ = _tmp16_.value;
#line 31 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (g_strcmp0 (_tmp15_, _tmp17_) > 0) {
#line 32 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = 1;
#line 32 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (date2);
#line 32 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (date1);
#line 32 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 333 "Utils.c"
	}
#line 33 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = 0;
#line 33 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (date2);
#line 33 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (date1);
#line 33 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 343 "Utils.c"
}


/**
     * Converts two datetimes to one TimeType. The first contains the date,
     * its time settings are ignored. The second one contains the time itself.
     * XXX: We need to convert to UTC because of some bugs with the Google backend…
     */
struct icaltimetype
maya_util_date_time_to_ical (GDateTime* date,
                             GDateTime* time_local,
                             const gchar* timezone)
{
	struct icaltimetype result = {0};
	struct icaltimetype _result_ = {0};
	struct icaltimetype _tmp0_;
#line 45 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = icaltime_from_day_of_year (g_date_time_get_day_of_year (date), g_date_time_get_year (date));
#line 45 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_result_ = _tmp0_;
#line 46 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (time_local != NULL) {
#line 366 "Utils.c"
		icalarray* tzs = NULL;
		icalarray* _tmp1_;
#line 47 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp1_ = icaltimezone_get_builtin_timezones ();
#line 47 "/run/build/planner/src/Services/Calendar/Utils.vala"
		tzs = _tmp1_;
#line 373 "Utils.c"
		{
			gint i = 0;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
			i = 0;
#line 378 "Utils.c"
			{
				gboolean _tmp2_ = FALSE;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp2_ = TRUE;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
				while (TRUE) {
#line 385 "Utils.c"
					gint _tmp4_;
					icalarray* _tmp5_;
					guint _tmp6_;
					icaltimezone* tz = NULL;
					icalarray* _tmp7_;
					gint _tmp8_;
					gpointer _tmp9_;
					icaltimezone* _tmp10_;
					const gchar* _tmp11_;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (!_tmp2_) {
#line 397 "Utils.c"
						gint _tmp3_;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp3_ = i;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
						i = _tmp3_ + 1;
#line 403 "Utils.c"
					}
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp2_ = FALSE;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp4_ = i;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp5_ = tzs;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp6_ = _tmp5_->num_elements;
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (!(((guint) _tmp4_) < _tmp6_)) {
#line 48 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 417 "Utils.c"
					}
#line 49 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp7_ = tzs;
#line 49 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp8_ = i;
#line 49 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp9_ = icalarray_element_at (_tmp7_, _tmp8_);
#line 49 "/run/build/planner/src/Services/Calendar/Utils.vala"
					tz = (icaltimezone*) _tmp9_;
#line 50 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp10_ = tz;
#line 50 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp11_ = icaltimezone_get_display_name (_tmp10_);
#line 50 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (g_strcmp0 (_tmp11_, timezone) == 0) {
#line 433 "Utils.c"
						icaltimezone* _tmp12_;
#line 51 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp12_ = tz;
#line 51 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_result_.zone = _tmp12_;
#line 52 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 441 "Utils.c"
					}
				}
			}
		}
#line 56 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_result_.is_date = 0;
#line 57 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_result_.hour = g_date_time_get_hour (time_local);
#line 58 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_result_.minute = g_date_time_get_minute (time_local);
#line 59 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_result_.second = g_date_time_get_second (time_local);
#line 454 "Utils.c"
	} else {
#line 61 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_result_.is_date = 1;
#line 62 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_result_.hour = 0;
#line 63 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_result_.minute = 0;
#line 64 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_result_.second = 0;
#line 464 "Utils.c"
	}
#line 67 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _result_;
#line 67 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 470 "Utils.c"
}


/**
     * Converts the given TimeType to a DateTime.
     */
GTimeZone*
maya_util_timezone_from_ical (struct icaltimetype date)
{
	GTimeZone* result = NULL;
	gint interval = 0;
	icaltimezone* _tmp0_;
	gint _tmp1_;
	gint hours = 0;
	gint _tmp2_;
	gchar* hour_string = NULL;
	gchar* _tmp3_;
	gint _tmp4_;
	gint _tmp6_;
	gint _tmp7_;
	gint minutes = 0;
	gint _tmp14_;
	gint _tmp15_;
	const gchar* _tmp22_;
	GTimeZone* _tmp23_;
#line 74 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = date.zone;
#line 74 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = date.is_daylight;
#line 74 "/run/build/planner/src/Services/Calendar/Utils.vala"
	interval = icaltimezone_get_utc_offset (_tmp0_, &date, _tmp1_);
#line 75 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = interval;
#line 75 "/run/build/planner/src/Services/Calendar/Utils.vala"
	hours = _tmp2_ / 3600;
#line 76 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = g_strdup ("-");
#line 76 "/run/build/planner/src/Services/Calendar/Utils.vala"
	hour_string = _tmp3_;
#line 77 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = hours;
#line 77 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp4_ >= 0) {
#line 514 "Utils.c"
		gchar* _tmp5_;
#line 78 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp5_ = g_strdup ("+");
#line 78 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (hour_string);
#line 78 "/run/build/planner/src/Services/Calendar/Utils.vala"
		hour_string = _tmp5_;
#line 522 "Utils.c"
	}
#line 81 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp6_ = hours;
#line 81 "/run/build/planner/src/Services/Calendar/Utils.vala"
	hours = abs (_tmp6_);
#line 82 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp7_ = hours;
#line 82 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp7_ > 9) {
#line 532 "Utils.c"
		const gchar* _tmp8_;
		gint _tmp9_;
		gchar* _tmp10_;
#line 83 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp8_ = hour_string;
#line 83 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp9_ = hours;
#line 83 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp10_ = g_strdup_printf ("%s%d", _tmp8_, _tmp9_);
#line 83 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (hour_string);
#line 83 "/run/build/planner/src/Services/Calendar/Utils.vala"
		hour_string = _tmp10_;
#line 546 "Utils.c"
	} else {
		const gchar* _tmp11_;
		gint _tmp12_;
		gchar* _tmp13_;
#line 85 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp11_ = hour_string;
#line 85 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp12_ = hours;
#line 85 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp13_ = g_strdup_printf ("%s0%d", _tmp11_, _tmp12_);
#line 85 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (hour_string);
#line 85 "/run/build/planner/src/Services/Calendar/Utils.vala"
		hour_string = _tmp13_;
#line 561 "Utils.c"
	}
#line 88 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp14_ = interval;
#line 88 "/run/build/planner/src/Services/Calendar/Utils.vala"
	minutes = (abs (_tmp14_) % 3600) / 60;
#line 89 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp15_ = minutes;
#line 89 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp15_ > 9) {
#line 571 "Utils.c"
		const gchar* _tmp16_;
		gint _tmp17_;
		gchar* _tmp18_;
#line 90 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp16_ = hour_string;
#line 90 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp17_ = minutes;
#line 90 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp18_ = g_strdup_printf ("%s:%d", _tmp16_, _tmp17_);
#line 90 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (hour_string);
#line 90 "/run/build/planner/src/Services/Calendar/Utils.vala"
		hour_string = _tmp18_;
#line 585 "Utils.c"
	} else {
		const gchar* _tmp19_;
		gint _tmp20_;
		gchar* _tmp21_;
#line 92 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp19_ = hour_string;
#line 92 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp20_ = minutes;
#line 92 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp21_ = g_strdup_printf ("%s:0%d", _tmp19_, _tmp20_);
#line 92 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (hour_string);
#line 92 "/run/build/planner/src/Services/Calendar/Utils.vala"
		hour_string = _tmp21_;
#line 600 "Utils.c"
	}
#line 95 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp22_ = hour_string;
#line 95 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp23_ = g_time_zone_new (_tmp22_);
#line 95 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp23_;
#line 95 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_free0 (hour_string);
#line 95 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 612 "Utils.c"
}


/**
     * Converts the given TimeType to a DateTime.
     * XXX : Track next versions of evolution in order to convert iCal.Timezone to GLib.TimeZone with a dedicated function…
     */
GDateTime*
maya_util_ical_to_date_time (struct icaltimetype date)
{
	GDateTime* result = NULL;
	GTimeZone* _tmp0_;
	GTimeZone* _tmp1_;
	gint _tmp2_;
	gint _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	gint _tmp7_;
	GDateTime* _tmp8_;
	GDateTime* _tmp9_;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = maya_util_timezone_from_ical (date);
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = _tmp0_;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = date.year;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = date.month;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = date.day;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = date.hour;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp6_ = date.minute;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp7_ = date.second;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp8_ = g_date_time_new (_tmp1_, _tmp2_, _tmp3_, _tmp4_, _tmp5_, _tmp6_, (gdouble) _tmp7_);
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp9_ = _tmp8_;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_time_zone_unref0 (_tmp1_);
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp9_;
#line 103 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 660 "Utils.c"
}


static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 115 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 669 "Utils.c"
}


void
maya_util_get_local_datetimes_from_icalcomponent (icalcomponent* comp,
                                                  GDateTime* * start_date,
                                                  GDateTime* * end_date)
{
	GDateTime* _vala_start_date = NULL;
	GDateTime* _vala_end_date = NULL;
	struct icaltimetype dt_start = {0};
	struct icaltimetype dt_end = {0};
	struct icaltimetype _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp9_;
	GDateTime* _tmp10_;
#line 107 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (comp != NULL);
#line 108 "/run/build/planner/src/Services/Calendar/Utils.vala"
	dt_start = icalcomponent_get_dtstart (comp);
#line 109 "/run/build/planner/src/Services/Calendar/Utils.vala"
	dt_end = icalcomponent_get_dtend (comp);
#line 110 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = dt_start;
#line 110 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = maya_util_ical_to_date_time (_tmp0_);
#line 110 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (_vala_start_date);
#line 110 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_vala_start_date = _tmp1_;
#line 112 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (icaltime_is_null_time (dt_end) == 0) {
#line 702 "Utils.c"
		struct icaltimetype _tmp2_;
		GDateTime* _tmp3_;
#line 113 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp2_ = dt_end;
#line 113 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp3_ = maya_util_ical_to_date_time (_tmp2_);
#line 113 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (_vala_end_date);
#line 113 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_vala_end_date = _tmp3_;
#line 713 "Utils.c"
	} else {
#line 114 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (icaltime_is_date (dt_start) == 0) {
#line 717 "Utils.c"
			GDateTime* _tmp4_;
			GDateTime* _tmp5_;
#line 115 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp4_ = _vala_start_date;
#line 115 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp5_ = _g_date_time_ref0 (_tmp4_);
#line 115 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_date_time_unref0 (_vala_end_date);
#line 115 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_vala_end_date = _tmp5_;
#line 728 "Utils.c"
		} else {
#line 116 "/run/build/planner/src/Services/Calendar/Utils.vala"
			if (icaldurationtype_is_null_duration (icalcomponent_get_duration (comp)) == 0) {
#line 732 "Utils.c"
				GDateTime* _tmp6_;
#line 117 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp6_ = maya_util_ical_to_date_time (icaltime_add (dt_start, icalcomponent_get_duration (comp)));
#line 117 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (_vala_end_date);
#line 117 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_vala_end_date = _tmp6_;
#line 740 "Utils.c"
			} else {
				GDateTime* _tmp7_;
				GDateTime* _tmp8_;
#line 119 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp7_ = _vala_start_date;
#line 119 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp8_ = g_date_time_add_days (_tmp7_, 1);
#line 119 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (_vala_end_date);
#line 119 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_vala_end_date = _tmp8_;
#line 752 "Utils.c"
			}
		}
	}
#line 122 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp9_ = _vala_start_date;
#line 122 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp10_ = _vala_end_date;
#line 122 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (maya_util_is_all_day (_tmp9_, _tmp10_)) {
#line 762 "Utils.c"
		GDateTime* _tmp11_;
		GDateTime* _tmp12_;
#line 123 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp11_ = _vala_end_date;
#line 123 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp12_ = g_date_time_add_days (_tmp11_, -1);
#line 123 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (_vala_end_date);
#line 123 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_vala_end_date = _tmp12_;
#line 773 "Utils.c"
	}
#line 107 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (start_date) {
#line 107 "/run/build/planner/src/Services/Calendar/Utils.vala"
		*start_date = _vala_start_date;
#line 779 "Utils.c"
	} else {
#line 107 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (_vala_start_date);
#line 783 "Utils.c"
	}
#line 107 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (end_date) {
#line 107 "/run/build/planner/src/Services/Calendar/Utils.vala"
		*end_date = _vala_end_date;
#line 789 "Utils.c"
	} else {
#line 107 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (_vala_end_date);
#line 793 "Utils.c"
	}
}


gboolean
maya_util_is_event_in_range (icalcomponent* comp,
                             MayaUtilDateRange* view_range)
{
	gboolean result = FALSE;
	GDateTime* start = NULL;
	GDateTime* end = NULL;
	GDateTime* _tmp0_ = NULL;
	GDateTime* _tmp1_ = NULL;
	gint c1 = 0;
	GDateTime* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	gint c2 = 0;
	GDateTime* _tmp5_;
	GDateTime* _tmp6_;
	GDateTime* _tmp7_;
	gint c3 = 0;
	GDateTime* _tmp8_;
	GDateTime* _tmp9_;
	GDateTime* _tmp10_;
	gint c4 = 0;
	GDateTime* _tmp11_;
	GDateTime* _tmp12_;
	GDateTime* _tmp13_;
	gboolean _tmp14_ = FALSE;
	gint _tmp15_;
	gboolean _tmp17_ = FALSE;
	gint _tmp18_;
	gboolean _tmp20_ = FALSE;
	gint _tmp21_;
	gboolean _tmp23_ = FALSE;
	gint _tmp24_;
#line 127 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (comp != NULL, FALSE);
#line 127 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (view_range != NULL, FALSE);
#line 129 "/run/build/planner/src/Services/Calendar/Utils.vala"
	maya_util_get_local_datetimes_from_icalcomponent (comp, &_tmp0_, &_tmp1_);
#line 129 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (start);
#line 129 "/run/build/planner/src/Services/Calendar/Utils.vala"
	start = _tmp0_;
#line 129 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (end);
#line 129 "/run/build/planner/src/Services/Calendar/Utils.vala"
	end = _tmp1_;
#line 131 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = start;
#line 131 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = maya_util_date_range_get_first_dt (view_range);
#line 131 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = _tmp3_;
#line 131 "/run/build/planner/src/Services/Calendar/Utils.vala"
	c1 = g_date_time_compare (_tmp2_, _tmp4_);
#line 132 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = start;
#line 132 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp6_ = maya_util_date_range_get_last_dt (view_range);
#line 132 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp7_ = _tmp6_;
#line 132 "/run/build/planner/src/Services/Calendar/Utils.vala"
	c2 = g_date_time_compare (_tmp5_, _tmp7_);
#line 133 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp8_ = end;
#line 133 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp9_ = maya_util_date_range_get_first_dt (view_range);
#line 133 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp10_ = _tmp9_;
#line 133 "/run/build/planner/src/Services/Calendar/Utils.vala"
	c3 = g_date_time_compare (_tmp8_, _tmp10_);
#line 134 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp11_ = end;
#line 134 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp12_ = maya_util_date_range_get_last_dt (view_range);
#line 134 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp13_ = _tmp12_;
#line 134 "/run/build/planner/src/Services/Calendar/Utils.vala"
	c4 = g_date_time_compare (_tmp11_, _tmp13_);
#line 136 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp15_ = c1;
#line 136 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp15_ <= 0) {
#line 881 "Utils.c"
		gint _tmp16_;
#line 136 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp16_ = c3;
#line 136 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp14_ = _tmp16_ > 0;
#line 887 "Utils.c"
	} else {
#line 136 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp14_ = FALSE;
#line 891 "Utils.c"
	}
#line 136 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp14_) {
#line 137 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = TRUE;
#line 137 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (end);
#line 137 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (start);
#line 137 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 903 "Utils.c"
	}
#line 139 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp18_ = c2;
#line 139 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp18_ < 0) {
#line 909 "Utils.c"
		gint _tmp19_;
#line 139 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp19_ = c4;
#line 139 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp17_ = _tmp19_ > 0;
#line 915 "Utils.c"
	} else {
#line 139 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp17_ = FALSE;
#line 919 "Utils.c"
	}
#line 139 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp17_) {
#line 140 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = TRUE;
#line 140 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (end);
#line 140 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (start);
#line 140 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 931 "Utils.c"
	}
#line 142 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp21_ = c1;
#line 142 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp21_ >= 0) {
#line 937 "Utils.c"
		gint _tmp22_;
#line 142 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp22_ = c2;
#line 142 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp20_ = _tmp22_ < 0;
#line 943 "Utils.c"
	} else {
#line 142 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp20_ = FALSE;
#line 947 "Utils.c"
	}
#line 142 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp20_) {
#line 143 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = TRUE;
#line 143 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (end);
#line 143 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (start);
#line 143 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 959 "Utils.c"
	}
#line 145 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp24_ = c3;
#line 145 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp24_ > 0) {
#line 965 "Utils.c"
		gint _tmp25_;
#line 145 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp25_ = c4;
#line 145 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp23_ = _tmp25_ < 0;
#line 971 "Utils.c"
	} else {
#line 145 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp23_ = FALSE;
#line 975 "Utils.c"
	}
#line 145 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp23_) {
#line 146 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = TRUE;
#line 146 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (end);
#line 146 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (start);
#line 146 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 987 "Utils.c"
	}
#line 149 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = FALSE;
#line 149 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (end);
#line 149 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (start);
#line 149 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 997 "Utils.c"
}


gboolean
maya_util_is_day_in_range (GDateTime* day,
                           MayaUtilDateRange* range)
{
	gboolean result = FALSE;
	gint date = 0;
#line 152 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (day != NULL, FALSE);
#line 152 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (range != NULL, FALSE);
#line 153 "/run/build/planner/src/Services/Calendar/Utils.vala"
	date = g_date_time_get_day_of_year (day);
#line 1013 "Utils.c"
	{
		GeeIterator* _dt_it = NULL;
		GeeIterator* _tmp0_;
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp0_ = gee_iterable_iterator ((GeeIterable*) range);
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_dt_it = _tmp0_;
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
		while (TRUE) {
#line 1023 "Utils.c"
			GeeIterator* _tmp1_;
			GDateTime* dt = NULL;
			GeeIterator* _tmp2_;
			gpointer _tmp3_;
			gboolean _tmp4_ = FALSE;
			GDateTime* _tmp5_;
			gint _tmp6_;
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp1_ = _dt_it;
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
			if (!gee_iterator_next (_tmp1_)) {
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
				break;
#line 1037 "Utils.c"
			}
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp2_ = _dt_it;
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp3_ = gee_iterator_get (_tmp2_);
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
			dt = (GDateTime*) _tmp3_;
#line 156 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp5_ = dt;
#line 156 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp6_ = date;
#line 156 "/run/build/planner/src/Services/Calendar/Utils.vala"
			if (g_date_time_get_day_of_year (_tmp5_) == _tmp6_) {
#line 1051 "Utils.c"
				GDateTime* _tmp7_;
#line 156 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp7_ = dt;
#line 156 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp4_ = g_date_time_get_year (_tmp7_) == g_date_time_get_year (day);
#line 1057 "Utils.c"
			} else {
#line 156 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp4_ = FALSE;
#line 1061 "Utils.c"
			}
#line 156 "/run/build/planner/src/Services/Calendar/Utils.vala"
			if (_tmp4_) {
#line 157 "/run/build/planner/src/Services/Calendar/Utils.vala"
				result = TRUE;
#line 157 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (dt);
#line 157 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (_dt_it);
#line 157 "/run/build/planner/src/Services/Calendar/Utils.vala"
				return result;
#line 1073 "Utils.c"
			}
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_date_time_unref0 (dt);
#line 1077 "Utils.c"
		}
#line 155 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (_dt_it);
#line 1081 "Utils.c"
	}
#line 160 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = FALSE;
#line 160 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 1087 "Utils.c"
}


static Block12Data*
block12_data_ref (Block12Data* _data12_)
{
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_atomic_int_inc (&_data12_->_ref_count_);
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return _data12_;
#line 1098 "Utils.c"
}


static void
block12_data_unref (void * _userdata_)
{
	Block12Data* _data12_;
	_data12_ = (Block12Data*) _userdata_;
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (g_atomic_int_dec_and_test (&_data12_->_ref_count_)) {
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (_data12_->dateranges);
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_slice_free (Block12Data, _data12_);
#line 1113 "Utils.c"
	}
}


static Block13Data*
block13_data_ref (Block13Data* _data13_)
{
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_atomic_int_inc (&_data13_->_ref_count_);
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return _data13_;
#line 1125 "Utils.c"
}


static void
block13_data_unref (void * _userdata_)
{
	Block13Data* _data13_;
	_data13_ = (Block13Data*) _userdata_;
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (g_atomic_int_dec_and_test (&_data13_->_ref_count_)) {
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (_data13_->date);
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		block12_data_unref (_data13_->_data12_);
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_data13_->_data12_ = NULL;
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_slice_free (Block13Data, _data13_);
#line 1144 "Utils.c"
	}
}


static gboolean
___lambda306_ (Block13Data* _data13_,
               MayaUtilDateRange* daterange)
{
	Block12Data* _data12_;
	gboolean result = FALSE;
	GDateTime* first = NULL;
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
	GDateTime* last = NULL;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	GDateTime* _tmp5_;
	gboolean _tmp6_ = FALSE;
	GDateTime* _tmp7_;
	GDateTime* _tmp8_;
#line 198 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_data12_ = _data13_->_data12_;
#line 198 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (daterange != NULL, FALSE);
#line 199 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = maya_util_date_range_get_first_dt (daterange);
#line 199 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = _tmp0_;
#line 199 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = _g_date_time_ref0 (_tmp1_);
#line 199 "/run/build/planner/src/Services/Calendar/Utils.vala"
	first = _tmp2_;
#line 200 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = maya_util_date_range_get_last_dt (daterange);
#line 200 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = _tmp3_;
#line 200 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = _g_date_time_ref0 (_tmp4_);
#line 200 "/run/build/planner/src/Services/Calendar/Utils.vala"
	last = _tmp5_;
#line 201 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp7_ = first;
#line 201 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp8_ = _data13_->date;
#line 201 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (g_date_time_get_year (_tmp7_) <= g_date_time_get_year (_tmp8_)) {
#line 1192 "Utils.c"
		GDateTime* _tmp9_;
		GDateTime* _tmp10_;
#line 201 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp9_ = last;
#line 201 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp10_ = _data13_->date;
#line 201 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp6_ = g_date_time_get_year (_tmp9_) >= g_date_time_get_year (_tmp10_);
#line 1201 "Utils.c"
	} else {
#line 201 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp6_ = FALSE;
#line 1205 "Utils.c"
	}
#line 201 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp6_) {
#line 1209 "Utils.c"
		gboolean _tmp11_ = FALSE;
		GDateTime* _tmp12_;
		GDateTime* _tmp13_;
#line 202 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp12_ = first;
#line 202 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp13_ = _data13_->date;
#line 202 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (g_date_time_get_day_of_year (_tmp12_) <= g_date_time_get_day_of_year (_tmp13_)) {
#line 1219 "Utils.c"
			GDateTime* _tmp14_;
			GDateTime* _tmp15_;
#line 202 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp14_ = last;
#line 202 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp15_ = _data13_->date;
#line 202 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp11_ = g_date_time_get_day_of_year (_tmp14_) >= g_date_time_get_day_of_year (_tmp15_);
#line 1228 "Utils.c"
		} else {
#line 202 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp11_ = FALSE;
#line 1232 "Utils.c"
		}
#line 202 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (_tmp11_) {
#line 1236 "Utils.c"
			GeeLinkedList* _tmp16_;
#line 203 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp16_ = _data12_->dateranges;
#line 203 "/run/build/planner/src/Services/Calendar/Utils.vala"
			gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp16_, daterange);
#line 204 "/run/build/planner/src/Services/Calendar/Utils.vala"
			result = FALSE;
#line 204 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_date_time_unref0 (last);
#line 204 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_date_time_unref0 (first);
#line 204 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_object_unref0 (daterange);
#line 204 "/run/build/planner/src/Services/Calendar/Utils.vala"
			return result;
#line 1252 "Utils.c"
		}
	}
#line 208 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = TRUE;
#line 208 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (last);
#line 208 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (first);
#line 208 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (daterange);
#line 208 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 1265 "Utils.c"
}


static gboolean
____lambda306__gee_forall_func (gpointer g,
                                gpointer self)
{
	gboolean result;
	result = ___lambda306_ (self, (MayaUtilDateRange*) g);
#line 198 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 1277 "Utils.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return self ? g_object_ref (self) : NULL;
#line 1286 "Utils.c"
}


GeeCollection*
maya_util_event_date_ranges (icalcomponent* comp,
                             MayaUtilDateRange* view_range)
{
	GeeCollection* result = NULL;
	Block12Data* _data12_;
	GeeLinkedList* _tmp0_;
	GDateTime* start = NULL;
	GDateTime* end = NULL;
	GDateTime* _tmp1_ = NULL;
	GDateTime* _tmp2_ = NULL;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	GDateTime* _tmp5_;
	GDateTime* _tmp6_;
	GeeLinkedList* _tmp7_;
	GDateTime* _tmp8_;
	GDateTime* _tmp9_;
	MayaUtilDateRange* _tmp10_;
	MayaUtilDateRange* _tmp11_;
	icalproperty* property = NULL;
	icalproperty* _tmp12_;
	icalproperty* _tmp13_;
	icalproperty* _tmp33_;
	GeeLinkedList* _tmp40_;
	GeeCollection* _tmp41_;
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (comp != NULL, NULL);
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (view_range != NULL, NULL);
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_data12_ = g_slice_new0 (Block12Data);
#line 163 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_data12_->_ref_count_ = 1;
#line 164 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = gee_linked_list_new (MAYA_UTIL_TYPE_DATE_RANGE, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 164 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_data12_->dateranges = _tmp0_;
#line 167 "/run/build/planner/src/Services/Calendar/Utils.vala"
	maya_util_get_local_datetimes_from_icalcomponent (comp, &_tmp1_, &_tmp2_);
#line 167 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (start);
#line 167 "/run/build/planner/src/Services/Calendar/Utils.vala"
	start = _tmp1_;
#line 167 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (end);
#line 167 "/run/build/planner/src/Services/Calendar/Utils.vala"
	end = _tmp2_;
#line 169 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = start;
#line 169 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = maya_util_strip_time (_tmp3_);
#line 169 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (start);
#line 169 "/run/build/planner/src/Services/Calendar/Utils.vala"
	start = _tmp4_;
#line 170 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = end;
#line 170 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp6_ = maya_util_strip_time (_tmp5_);
#line 170 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (end);
#line 170 "/run/build/planner/src/Services/Calendar/Utils.vala"
	end = _tmp6_;
#line 171 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp7_ = _data12_->dateranges;
#line 171 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp8_ = start;
#line 171 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp9_ = end;
#line 171 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp10_ = maya_util_date_range_new (_tmp8_, _tmp9_);
#line 171 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp11_ = _tmp10_;
#line 171 "/run/build/planner/src/Services/Calendar/Utils.vala"
	gee_abstract_collection_add ((GeeAbstractCollection*) _tmp7_, _tmp11_);
#line 171 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (_tmp11_);
#line 174 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp12_ = icalcomponent_get_first_property (comp, ICAL_RRULE_PROPERTY);
#line 174 "/run/build/planner/src/Services/Calendar/Utils.vala"
	property = _tmp12_;
#line 175 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp13_ = property;
#line 175 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp13_ != NULL) {
#line 1376 "Utils.c"
		struct icalrecurrencetype rrule = {0};
		icalproperty* _tmp14_;
		struct icalrecurrencetype _tmp15_;
		icalrecurrencetype_frequency _tmp16_;
#line 176 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp14_ = property;
#line 176 "/run/build/planner/src/Services/Calendar/Utils.vala"
		rrule = icalproperty_get_rrule (_tmp14_);
#line 177 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp15_ = rrule;
#line 177 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp16_ = _tmp15_.freq;
#line 177 "/run/build/planner/src/Services/Calendar/Utils.vala"
		switch (_tmp16_) {
#line 177 "/run/build/planner/src/Services/Calendar/Utils.vala"
			case ICAL_WEEKLY_RECURRENCE:
#line 1393 "Utils.c"
			{
				GeeLinkedList* _tmp17_;
				struct icalrecurrencetype _tmp18_;
				GDateTime* _tmp19_;
				GDateTime* _tmp20_;
#line 179 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp17_ = _data12_->dateranges;
#line 179 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp18_ = rrule;
#line 179 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp19_ = start;
#line 179 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp20_ = end;
#line 179 "/run/build/planner/src/Services/Calendar/Utils.vala"
				maya_util_generate_week_reccurence (_tmp17_, view_range, _tmp18_, _tmp19_, _tmp20_);
#line 180 "/run/build/planner/src/Services/Calendar/Utils.vala"
				break;
#line 1411 "Utils.c"
			}
#line 177 "/run/build/planner/src/Services/Calendar/Utils.vala"
			case ICAL_MONTHLY_RECURRENCE:
#line 1415 "Utils.c"
			{
				GeeLinkedList* _tmp21_;
				struct icalrecurrencetype _tmp22_;
				GDateTime* _tmp23_;
				GDateTime* _tmp24_;
#line 182 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp21_ = _data12_->dateranges;
#line 182 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp22_ = rrule;
#line 182 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp23_ = start;
#line 182 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp24_ = end;
#line 182 "/run/build/planner/src/Services/Calendar/Utils.vala"
				maya_util_generate_month_reccurence (_tmp21_, view_range, _tmp22_, _tmp23_, _tmp24_);
#line 183 "/run/build/planner/src/Services/Calendar/Utils.vala"
				break;
#line 1433 "Utils.c"
			}
#line 177 "/run/build/planner/src/Services/Calendar/Utils.vala"
			case ICAL_YEARLY_RECURRENCE:
#line 1437 "Utils.c"
			{
				GeeLinkedList* _tmp25_;
				struct icalrecurrencetype _tmp26_;
				GDateTime* _tmp27_;
				GDateTime* _tmp28_;
#line 185 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp25_ = _data12_->dateranges;
#line 185 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp26_ = rrule;
#line 185 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp27_ = start;
#line 185 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp28_ = end;
#line 185 "/run/build/planner/src/Services/Calendar/Utils.vala"
				maya_util_generate_year_reccurence (_tmp25_, view_range, _tmp26_, _tmp27_, _tmp28_);
#line 186 "/run/build/planner/src/Services/Calendar/Utils.vala"
				break;
#line 1455 "Utils.c"
			}
			default:
			{
				GeeLinkedList* _tmp29_;
				struct icalrecurrencetype _tmp30_;
				GDateTime* _tmp31_;
				GDateTime* _tmp32_;
#line 188 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp29_ = _data12_->dateranges;
#line 188 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp30_ = rrule;
#line 188 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp31_ = start;
#line 188 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp32_ = end;
#line 188 "/run/build/planner/src/Services/Calendar/Utils.vala"
				maya_util_generate_day_reccurence (_tmp29_, view_range, _tmp30_, _tmp31_, _tmp32_);
#line 189 "/run/build/planner/src/Services/Calendar/Utils.vala"
				break;
#line 1475 "Utils.c"
			}
		}
	}
#line 194 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp33_ = icalcomponent_get_first_property (comp, ICAL_EXDATE_PROPERTY);
#line 194 "/run/build/planner/src/Services/Calendar/Utils.vala"
	property = _tmp33_;
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
	while (TRUE) {
#line 1485 "Utils.c"
		Block13Data* _data13_;
		icalproperty* _tmp34_;
		struct icaltimetype exdate = {0};
		icalproperty* _tmp35_;
		struct icaltimetype _tmp36_;
		GDateTime* _tmp37_;
		GeeLinkedList* _tmp38_;
		icalproperty* _tmp39_;
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_data13_ = g_slice_new0 (Block13Data);
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_data13_->_ref_count_ = 1;
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_data13_->_data12_ = block12_data_ref (_data12_);
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp34_ = property;
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (!(_tmp34_ != NULL)) {
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
			block13_data_unref (_data13_);
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_data13_ = NULL;
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 1510 "Utils.c"
		}
#line 196 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp35_ = property;
#line 196 "/run/build/planner/src/Services/Calendar/Utils.vala"
		exdate = icalproperty_get_exdate (_tmp35_);
#line 197 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp36_ = exdate;
#line 197 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp37_ = maya_util_ical_to_date_time (_tmp36_);
#line 197 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_data13_->date = _tmp37_;
#line 198 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp38_ = _data12_->dateranges;
#line 198 "/run/build/planner/src/Services/Calendar/Utils.vala"
		gee_abstract_collection_foreach ((GeeAbstractCollection*) _tmp38_, ____lambda306__gee_forall_func, _data13_);
#line 211 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp39_ = icalcomponent_get_next_property (comp, ICAL_EXDATE_PROPERTY);
#line 211 "/run/build/planner/src/Services/Calendar/Utils.vala"
		property = _tmp39_;
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		block13_data_unref (_data13_);
#line 195 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_data13_ = NULL;
#line 1534 "Utils.c"
	}
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp40_ = _data12_->dateranges;
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp41_ = _g_object_ref0 ((GeeCollection*) _tmp40_);
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp41_;
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (end);
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (start);
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	block12_data_unref (_data12_);
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_data12_ = NULL;
#line 214 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 1552 "Utils.c"
}


void
maya_util_generate_day_reccurence (GeeLinkedList* dateranges,
                                   MayaUtilDateRange* view_range,
                                   struct icalrecurrencetype rrule,
                                   GDateTime* start,
                                   GDateTime* end)
{
#line 217 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (dateranges != NULL);
#line 217 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (view_range != NULL);
#line 217 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (start != NULL);
#line 217 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (end != NULL);
#line 219 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (icaltime_is_null_time (rrule.until) == 0) {
#line 1573 "Utils.c"
		{
			gint i = 0;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
			i = 1;
#line 1578 "Utils.c"
			{
				gboolean _tmp0_ = FALSE;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp0_ = TRUE;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
				while (TRUE) {
#line 1585 "Utils.c"
					gint _tmp2_;
					struct icaltimetype _tmp3_;
					gint _tmp4_;
					gshort _tmp5_;
					gint n = 0;
					gint _tmp6_;
					gshort _tmp7_;
					gboolean _tmp8_ = FALSE;
					gint _tmp9_;
					GDateTime* _tmp10_;
					GDateTime* _tmp11_;
					gboolean _tmp12_;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (!_tmp0_) {
#line 1600 "Utils.c"
						gint _tmp1_;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp1_ = i;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
						i = _tmp1_ + 1;
#line 1606 "Utils.c"
					}
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp0_ = FALSE;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp2_ = i;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp3_ = rrule.until;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp4_ = _tmp3_.day;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp5_ = rrule.interval;
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (!(_tmp2_ <= ((gint) (_tmp4_ / _tmp5_)))) {
#line 220 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 1622 "Utils.c"
					}
#line 221 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp6_ = i;
#line 221 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp7_ = rrule.interval;
#line 221 "/run/build/planner/src/Services/Calendar/Utils.vala"
					n = _tmp6_ * _tmp7_;
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp9_ = n;
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp10_ = g_date_time_add_days (start, _tmp9_);
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp11_ = _tmp10_;
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp12_ = maya_util_date_range_contains (view_range, _tmp11_);
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_g_date_time_unref0 (_tmp11_);
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (_tmp12_) {
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp8_ = TRUE;
#line 1644 "Utils.c"
					} else {
						gint _tmp13_;
						GDateTime* _tmp14_;
						GDateTime* _tmp15_;
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp13_ = n;
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp14_ = g_date_time_add_days (end, _tmp13_);
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp15_ = _tmp14_;
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp8_ = maya_util_date_range_contains (view_range, _tmp15_);
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (_tmp15_);
#line 1659 "Utils.c"
					}
#line 222 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (_tmp8_) {
#line 1663 "Utils.c"
						gint _tmp16_;
						GDateTime* _tmp17_;
						GDateTime* _tmp18_;
						gint _tmp19_;
						GDateTime* _tmp20_;
						GDateTime* _tmp21_;
						MayaUtilDateRange* _tmp22_;
						MayaUtilDateRange* _tmp23_;
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp16_ = n;
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp17_ = g_date_time_add_days (start, _tmp16_);
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp18_ = _tmp17_;
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp19_ = n;
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp20_ = g_date_time_add_days (end, _tmp19_);
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp21_ = _tmp20_;
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp22_ = maya_util_date_range_new (_tmp18_, _tmp21_);
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp23_ = _tmp22_;
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp23_);
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_object_unref0 (_tmp23_);
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (_tmp21_);
#line 223 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (_tmp18_);
#line 1696 "Utils.c"
					}
				}
			}
		}
	} else {
		gint _tmp24_;
#line 225 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp24_ = rrule.count;
#line 225 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (_tmp24_ > 0) {
#line 1707 "Utils.c"
			{
				gint i = 0;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
				i = 1;
#line 1712 "Utils.c"
				{
					gboolean _tmp25_ = FALSE;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp25_ = TRUE;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
					while (TRUE) {
#line 1719 "Utils.c"
						gint _tmp27_;
						gint _tmp28_;
						gint n = 0;
						gint _tmp29_;
						gshort _tmp30_;
						gboolean _tmp31_ = FALSE;
						gint _tmp32_;
						GDateTime* _tmp33_;
						GDateTime* _tmp34_;
						gboolean _tmp35_;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (!_tmp25_) {
#line 1732 "Utils.c"
							gint _tmp26_;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp26_ = i;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
							i = _tmp26_ + 1;
#line 1738 "Utils.c"
						}
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp25_ = FALSE;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp27_ = i;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp28_ = rrule.count;
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (!(_tmp27_ <= _tmp28_)) {
#line 226 "/run/build/planner/src/Services/Calendar/Utils.vala"
							break;
#line 1750 "Utils.c"
						}
#line 227 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp29_ = i;
#line 227 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp30_ = rrule.interval;
#line 227 "/run/build/planner/src/Services/Calendar/Utils.vala"
						n = _tmp29_ * _tmp30_;
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp32_ = n;
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp33_ = g_date_time_add_days (start, _tmp32_);
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp34_ = _tmp33_;
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp35_ = maya_util_date_range_contains (view_range, _tmp34_);
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (_tmp34_);
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (_tmp35_) {
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp31_ = TRUE;
#line 1772 "Utils.c"
						} else {
							gint _tmp36_;
							GDateTime* _tmp37_;
							GDateTime* _tmp38_;
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp36_ = n;
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp37_ = g_date_time_add_days (end, _tmp36_);
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp38_ = _tmp37_;
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp31_ = maya_util_date_range_contains (view_range, _tmp38_);
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (_tmp38_);
#line 1787 "Utils.c"
						}
#line 228 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (_tmp31_) {
#line 1791 "Utils.c"
							gint _tmp39_;
							GDateTime* _tmp40_;
							GDateTime* _tmp41_;
							gint _tmp42_;
							GDateTime* _tmp43_;
							GDateTime* _tmp44_;
							MayaUtilDateRange* _tmp45_;
							MayaUtilDateRange* _tmp46_;
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp39_ = n;
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp40_ = g_date_time_add_days (start, _tmp39_);
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp41_ = _tmp40_;
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp42_ = n;
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp43_ = g_date_time_add_days (end, _tmp42_);
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp44_ = _tmp43_;
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp45_ = maya_util_date_range_new (_tmp41_, _tmp44_);
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp46_ = _tmp45_;
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp46_);
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_object_unref0 (_tmp46_);
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (_tmp44_);
#line 229 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (_tmp41_);
#line 1824 "Utils.c"
						}
					}
				}
			}
		} else {
			gint i = 0;
			gint n = 0;
			gint _tmp47_;
			gshort _tmp48_;
#line 232 "/run/build/planner/src/Services/Calendar/Utils.vala"
			i = 1;
#line 233 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp47_ = i;
#line 233 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp48_ = rrule.interval;
#line 233 "/run/build/planner/src/Services/Calendar/Utils.vala"
			n = _tmp47_ * _tmp48_;
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
			while (TRUE) {
#line 1844 "Utils.c"
				GDateTime* _tmp49_;
				GDateTime* _tmp50_;
				gint _tmp51_;
				GDateTime* _tmp52_;
				GDateTime* _tmp53_;
				gboolean _tmp54_;
				gint _tmp55_;
				GDateTime* _tmp56_;
				GDateTime* _tmp57_;
				gint _tmp58_;
				GDateTime* _tmp59_;
				GDateTime* _tmp60_;
				MayaUtilDateRange* _tmp61_;
				MayaUtilDateRange* _tmp62_;
				gint _tmp63_;
				gint _tmp64_;
				gshort _tmp65_;
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp49_ = maya_util_date_range_get_last_dt (view_range);
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp50_ = _tmp49_;
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp51_ = n;
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp52_ = g_date_time_add_days (start, _tmp51_);
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp53_ = _tmp52_;
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp54_ = !(g_date_time_compare (_tmp50_, _tmp53_) > 0);
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (_tmp53_);
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (_tmp54_) {
#line 234 "/run/build/planner/src/Services/Calendar/Utils.vala"
					break;
#line 1880 "Utils.c"
				}
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp55_ = n;
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp56_ = g_date_time_add_days (start, _tmp55_);
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp57_ = _tmp56_;
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp58_ = n;
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp59_ = g_date_time_add_days (end, _tmp58_);
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp60_ = _tmp59_;
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp61_ = maya_util_date_range_new (_tmp57_, _tmp60_);
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp62_ = _tmp61_;
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp62_);
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (_tmp62_);
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (_tmp60_);
#line 235 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (_tmp57_);
#line 236 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp63_ = i;
#line 236 "/run/build/planner/src/Services/Calendar/Utils.vala"
				i = _tmp63_ + 1;
#line 237 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp64_ = i;
#line 237 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp65_ = rrule.interval;
#line 237 "/run/build/planner/src/Services/Calendar/Utils.vala"
				n = _tmp64_ * _tmp65_;
#line 1916 "Utils.c"
			}
		}
	}
}


void
maya_util_generate_year_reccurence (GeeLinkedList* dateranges,
                                    MayaUtilDateRange* view_range,
                                    struct icalrecurrencetype rrule,
                                    GDateTime* start,
                                    GDateTime* end)
{
#line 242 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (dateranges != NULL);
#line 242 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (view_range != NULL);
#line 242 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (start != NULL);
#line 242 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (end != NULL);
#line 244 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (icaltime_is_null_time (rrule.until) == 0) {
#line 1940 "Utils.c"
	} else {
		gint _tmp0_;
#line 250 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp0_ = rrule.count;
#line 250 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (_tmp0_ > 0) {
#line 1947 "Utils.c"
			{
				gint i = 0;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
				i = 1;
#line 1952 "Utils.c"
				{
					gboolean _tmp1_ = FALSE;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp1_ = TRUE;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
					while (TRUE) {
#line 1959 "Utils.c"
						gint _tmp3_;
						gint _tmp4_;
						gint n = 0;
						gint _tmp5_;
						gshort _tmp6_;
						gboolean _tmp7_ = FALSE;
						gint _tmp8_;
						GDateTime* _tmp9_;
						GDateTime* _tmp10_;
						gboolean _tmp11_;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (!_tmp1_) {
#line 1972 "Utils.c"
							gint _tmp2_;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp2_ = i;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
							i = _tmp2_ + 1;
#line 1978 "Utils.c"
						}
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp1_ = FALSE;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp3_ = i;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp4_ = rrule.count;
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (!(_tmp3_ <= _tmp4_)) {
#line 251 "/run/build/planner/src/Services/Calendar/Utils.vala"
							break;
#line 1990 "Utils.c"
						}
#line 252 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp5_ = i;
#line 252 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp6_ = rrule.interval;
#line 252 "/run/build/planner/src/Services/Calendar/Utils.vala"
						n = _tmp5_ * _tmp6_;
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp8_ = n;
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp9_ = g_date_time_add_years (start, _tmp8_);
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp10_ = _tmp9_;
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp11_ = maya_util_date_range_contains (view_range, _tmp10_);
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (_tmp10_);
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (_tmp11_) {
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp7_ = TRUE;
#line 2012 "Utils.c"
						} else {
							gint _tmp12_;
							GDateTime* _tmp13_;
							GDateTime* _tmp14_;
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp12_ = n;
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp13_ = g_date_time_add_years (end, _tmp12_);
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp14_ = _tmp13_;
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp7_ = maya_util_date_range_contains (view_range, _tmp14_);
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (_tmp14_);
#line 2027 "Utils.c"
						}
#line 253 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (_tmp7_) {
#line 2031 "Utils.c"
							gint _tmp15_;
							GDateTime* _tmp16_;
							GDateTime* _tmp17_;
							gint _tmp18_;
							GDateTime* _tmp19_;
							GDateTime* _tmp20_;
							MayaUtilDateRange* _tmp21_;
							MayaUtilDateRange* _tmp22_;
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp15_ = n;
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp16_ = g_date_time_add_years (start, _tmp15_);
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp17_ = _tmp16_;
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp18_ = n;
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp19_ = g_date_time_add_years (end, _tmp18_);
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp20_ = _tmp19_;
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp21_ = maya_util_date_range_new (_tmp17_, _tmp20_);
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp22_ = _tmp21_;
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp22_);
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_object_unref0 (_tmp22_);
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (_tmp20_);
#line 254 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (_tmp17_);
#line 2064 "Utils.c"
						}
					}
				}
			}
		} else {
			gint i = 0;
			gint n = 0;
			gint _tmp23_;
			gshort _tmp24_;
			gboolean is_null_time = FALSE;
			GDateTime* temp_start = NULL;
			gint _tmp25_;
			GDateTime* _tmp26_;
#line 257 "/run/build/planner/src/Services/Calendar/Utils.vala"
			i = 1;
#line 258 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp23_ = i;
#line 258 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp24_ = rrule.interval;
#line 258 "/run/build/planner/src/Services/Calendar/Utils.vala"
			n = _tmp23_ * _tmp24_;
#line 259 "/run/build/planner/src/Services/Calendar/Utils.vala"
			is_null_time = icaltime_is_null_time (rrule.until) == 1;
#line 260 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp25_ = n;
#line 260 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp26_ = g_date_time_add_years (start, _tmp25_);
#line 260 "/run/build/planner/src/Services/Calendar/Utils.vala"
			temp_start = _tmp26_;
#line 261 "/run/build/planner/src/Services/Calendar/Utils.vala"
			while (TRUE) {
#line 2096 "Utils.c"
				GDateTime* _tmp27_;
				GDateTime* _tmp28_;
				GDateTime* _tmp29_;
				gboolean _tmp30_;
				GDateTime* _tmp52_;
				gint _tmp53_;
				GDateTime* _tmp54_;
				GDateTime* _tmp55_;
				MayaUtilDateRange* _tmp56_;
				MayaUtilDateRange* _tmp57_;
				gint _tmp58_;
				gint _tmp59_;
				gshort _tmp60_;
				gint _tmp61_;
				GDateTime* _tmp62_;
#line 261 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp27_ = maya_util_date_range_get_last_dt (view_range);
#line 261 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp28_ = _tmp27_;
#line 261 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp29_ = temp_start;
#line 261 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (!(g_date_time_compare (_tmp28_, _tmp29_) > 0)) {
#line 261 "/run/build/planner/src/Services/Calendar/Utils.vala"
					break;
#line 2122 "Utils.c"
				}
#line 262 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp30_ = is_null_time;
#line 262 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (_tmp30_ == FALSE) {
#line 2128 "Utils.c"
					GDateTime* _tmp31_;
					struct icaltimetype _tmp32_;
					gint _tmp33_;
#line 263 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp31_ = temp_start;
#line 263 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp32_ = rrule.until;
#line 263 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp33_ = _tmp32_.year;
#line 263 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (g_date_time_get_year (_tmp31_) > _tmp33_) {
#line 264 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 2142 "Utils.c"
					} else {
						gboolean _tmp34_ = FALSE;
						GDateTime* _tmp35_;
						struct icaltimetype _tmp36_;
						gint _tmp37_;
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp35_ = temp_start;
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp36_ = rrule.until;
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp37_ = _tmp36_.year;
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (g_date_time_get_year (_tmp35_) == _tmp37_) {
#line 2156 "Utils.c"
							GDateTime* _tmp38_;
							struct icaltimetype _tmp39_;
							gint _tmp40_;
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp38_ = temp_start;
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp39_ = rrule.until;
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp40_ = _tmp39_.month;
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp34_ = g_date_time_get_month (_tmp38_) > _tmp40_;
#line 2168 "Utils.c"
						} else {
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp34_ = FALSE;
#line 2172 "Utils.c"
						}
#line 265 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (_tmp34_) {
#line 266 "/run/build/planner/src/Services/Calendar/Utils.vala"
							break;
#line 2178 "Utils.c"
						} else {
							gboolean _tmp41_ = FALSE;
							gboolean _tmp42_ = FALSE;
							GDateTime* _tmp43_;
							struct icaltimetype _tmp44_;
							gint _tmp45_;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp43_ = temp_start;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp44_ = rrule.until;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp45_ = _tmp44_.year;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (g_date_time_get_year (_tmp43_) == _tmp45_) {
#line 2193 "Utils.c"
								GDateTime* _tmp46_;
								struct icaltimetype _tmp47_;
								gint _tmp48_;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp46_ = temp_start;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp47_ = rrule.until;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp48_ = _tmp47_.month;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp42_ = g_date_time_get_month (_tmp46_) == _tmp48_;
#line 2205 "Utils.c"
							} else {
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp42_ = FALSE;
#line 2209 "Utils.c"
							}
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (_tmp42_) {
#line 2213 "Utils.c"
								GDateTime* _tmp49_;
								struct icaltimetype _tmp50_;
								gint _tmp51_;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp49_ = temp_start;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp50_ = rrule.until;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp51_ = _tmp50_.day;
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp41_ = g_date_time_get_day_of_month (_tmp49_) > _tmp51_;
#line 2225 "Utils.c"
							} else {
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp41_ = FALSE;
#line 2229 "Utils.c"
							}
#line 267 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (_tmp41_) {
#line 268 "/run/build/planner/src/Services/Calendar/Utils.vala"
								break;
#line 2235 "Utils.c"
							}
						}
					}
				}
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp52_ = temp_start;
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp53_ = n;
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp54_ = g_date_time_add_years (end, _tmp53_);
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp55_ = _tmp54_;
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp56_ = maya_util_date_range_new (_tmp52_, _tmp55_);
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp57_ = _tmp56_;
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp57_);
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (_tmp57_);
#line 271 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (_tmp55_);
#line 272 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp58_ = i;
#line 272 "/run/build/planner/src/Services/Calendar/Utils.vala"
				i = _tmp58_ + 1;
#line 273 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp59_ = i;
#line 273 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp60_ = rrule.interval;
#line 273 "/run/build/planner/src/Services/Calendar/Utils.vala"
				n = _tmp59_ * _tmp60_;
#line 274 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp61_ = n;
#line 274 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp62_ = g_date_time_add_years (start, _tmp61_);
#line 274 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (temp_start);
#line 274 "/run/build/planner/src/Services/Calendar/Utils.vala"
				temp_start = _tmp62_;
#line 2276 "Utils.c"
			}
#line 250 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_date_time_unref0 (temp_start);
#line 2280 "Utils.c"
		}
	}
}


void
maya_util_generate_month_reccurence (GeeLinkedList* dateranges,
                                     MayaUtilDateRange* view_range,
                                     struct icalrecurrencetype rrule,
                                     GDateTime* start,
                                     GDateTime* end)
{
	gshort* _tmp106_;
	gint _tmp106__length1;
	gshort _tmp107_;
#line 279 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (dateranges != NULL);
#line 279 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (view_range != NULL);
#line 279 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (start != NULL);
#line 279 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (end != NULL);
#line 2304 "Utils.c"
	{
		gint k = 0;
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
		k = 0;
#line 2309 "Utils.c"
		{
			gboolean _tmp0_ = FALSE;
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp0_ = TRUE;
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
			while (TRUE) {
#line 2316 "Utils.c"
				gint _tmp2_;
				gshort* _tmp3_;
				gint _tmp3__length1;
				gint _tmp4_;
				gshort _tmp5_;
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (!_tmp0_) {
#line 2324 "Utils.c"
					gint _tmp1_;
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp1_ = k;
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
					k = _tmp1_ + 1;
#line 2330 "Utils.c"
				}
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp0_ = FALSE;
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp2_ = k;
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (!(_tmp2_ <= ICAL_BY_DAY_SIZE)) {
#line 282 "/run/build/planner/src/Services/Calendar/Utils.vala"
					break;
#line 2340 "Utils.c"
				}
#line 283 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp3_ = rrule.by_day;
#line 283 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp3__length1 = -1;
#line 283 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp4_ = k;
#line 283 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp5_ = _tmp3_[_tmp4_];
#line 283 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (((gint) _tmp5_) < ICAL_BY_DAY_SIZE) {
#line 2352 "Utils.c"
					gint _tmp6_;
#line 284 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp6_ = rrule.count;
#line 284 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (_tmp6_ > 0) {
#line 2358 "Utils.c"
						{
							gint i = 0;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
							i = 1;
#line 2363 "Utils.c"
							{
								gboolean _tmp7_ = FALSE;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp7_ = TRUE;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
								while (TRUE) {
#line 2370 "Utils.c"
									gint _tmp9_;
									gint _tmp10_;
									gint n = 0;
									gint _tmp11_;
									gshort _tmp12_;
									GDateTime* start_ical_day = NULL;
									gint _tmp13_;
									GDateTime* _tmp14_;
									GDateTime* _tmp15_;
									gshort* _tmp16_;
									gint _tmp16__length1;
									gint _tmp17_;
									gshort _tmp18_;
									GDateTime* _tmp19_;
									GDateTime* _tmp20_;
									gint interval = 0;
									GDateTime* _tmp21_;
									GDateTime* _tmp22_;
									gint _tmp23_;
									GDateTime* _tmp24_;
									GDateTime* _tmp25_;
									gint _tmp26_;
									GDateTime* _tmp27_;
									GDateTime* _tmp28_;
									MayaUtilDateRange* _tmp29_;
									MayaUtilDateRange* _tmp30_;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
									if (!_tmp7_) {
#line 2399 "Utils.c"
										gint _tmp8_;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp8_ = i;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
										i = _tmp8_ + 1;
#line 2405 "Utils.c"
									}
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp7_ = FALSE;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp9_ = i;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp10_ = rrule.count;
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
									if (!(_tmp9_ <= _tmp10_)) {
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
										break;
#line 2417 "Utils.c"
									}
#line 286 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp11_ = i;
#line 286 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp12_ = rrule.interval;
#line 286 "/run/build/planner/src/Services/Calendar/Utils.vala"
									n = _tmp11_ * _tmp12_;
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp13_ = n;
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp14_ = g_date_time_add_months (start, _tmp13_);
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp15_ = _tmp14_;
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp16_ = rrule.by_day;
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp16__length1 = -1;
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp17_ = k;
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp18_ = _tmp16_[_tmp17_];
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp19_ = maya_util_get_date_from_ical_day (_tmp15_, _tmp18_);
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp20_ = _tmp19_;
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_date_time_unref0 (_tmp15_);
#line 287 "/run/build/planner/src/Services/Calendar/Utils.vala"
									start_ical_day = _tmp20_;
#line 288 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp21_ = start_ical_day;
#line 288 "/run/build/planner/src/Services/Calendar/Utils.vala"
									interval = g_date_time_get_day_of_month (_tmp21_) - g_date_time_get_day_of_month (start);
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp22_ = start_ical_day;
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp23_ = n;
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp24_ = g_date_time_add_months (end, _tmp23_);
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp25_ = _tmp24_;
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp26_ = interval;
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp27_ = g_date_time_add_days (_tmp25_, _tmp26_);
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp28_ = _tmp27_;
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp29_ = maya_util_date_range_new (_tmp22_, _tmp28_);
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp30_ = _tmp29_;
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp30_);
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_object_unref0 (_tmp30_);
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_date_time_unref0 (_tmp28_);
#line 289 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_date_time_unref0 (_tmp25_);
#line 285 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_date_time_unref0 (start_ical_day);
#line 2479 "Utils.c"
								}
							}
						}
					} else {
						gint i = 0;
						gboolean is_null_time = FALSE;
						gboolean is_last = FALSE;
						gshort* _tmp31_;
						gint _tmp31__length1;
						gint _tmp32_;
						gshort _tmp33_;
						GDateTime* start_ical_day = NULL;
						GDateTime* _tmp34_;
						GDateTime* end_ical_day = NULL;
						GDateTime* _tmp35_;
						gint days = 0;
						gint start_week = 0;
#line 292 "/run/build/planner/src/Services/Calendar/Utils.vala"
						i = 1;
#line 293 "/run/build/planner/src/Services/Calendar/Utils.vala"
						is_null_time = icaltime_is_null_time (rrule.until) == 1;
#line 294 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp31_ = rrule.by_day;
#line 294 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp31__length1 = -1;
#line 294 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp32_ = k;
#line 294 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp33_ = _tmp31_[_tmp32_];
#line 294 "/run/build/planner/src/Services/Calendar/Utils.vala"
						is_last = ((gint) _tmp33_) < 0;
#line 295 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp34_ = _g_date_time_ref0 (start);
#line 295 "/run/build/planner/src/Services/Calendar/Utils.vala"
						start_ical_day = _tmp34_;
#line 296 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp35_ = _g_date_time_ref0 (end);
#line 296 "/run/build/planner/src/Services/Calendar/Utils.vala"
						end_ical_day = _tmp35_;
#line 297 "/run/build/planner/src/Services/Calendar/Utils.vala"
						days = g_date_time_get_day_of_month (end) - g_date_time_get_day_of_month (start);
#line 298 "/run/build/planner/src/Services/Calendar/Utils.vala"
						start_week = (gint) ceil (((gdouble) g_date_time_get_day_of_month (start)) / 7);
#line 301 "/run/build/planner/src/Services/Calendar/Utils.vala"
						while (TRUE) {
#line 2525 "Utils.c"
							GDateTime* _tmp36_;
							GDateTime* _tmp37_;
							GDateTime* _tmp38_;
							gboolean _tmp39_;
							GDateTime* start_ical_day_new = NULL;
							gint _tmp61_;
							GDateTime* _tmp62_;
							GDateTime* _tmp63_;
							gshort* _tmp64_;
							gint _tmp64__length1;
							gint _tmp65_;
							gshort _tmp66_;
							GDateTime* _tmp67_;
							GDateTime* _tmp68_;
							gint month = 0;
							gint _tmp69_;
							GDateTime* _tmp70_;
							GDateTime* _tmp71_;
							gint _tmp72_;
							gint week = 0;
							gint _tmp73_;
							gboolean _tmp74_ = FALSE;
							gboolean _tmp75_;
							GDateTime* _tmp88_;
							gint _tmp89_;
							gint _tmp90_;
							GDateTime* _tmp91_;
							GDateTime* _tmp92_;
							gint _tmp93_;
							gint _tmp105_;
#line 301 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp36_ = maya_util_date_range_get_last_dt (view_range);
#line 301 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp37_ = _tmp36_;
#line 301 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp38_ = start_ical_day;
#line 301 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (!(g_date_time_compare (_tmp37_, _tmp38_) > 0)) {
#line 301 "/run/build/planner/src/Services/Calendar/Utils.vala"
								break;
#line 2566 "Utils.c"
							}
#line 302 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp39_ = is_null_time;
#line 302 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (_tmp39_ == FALSE) {
#line 2572 "Utils.c"
								GDateTime* _tmp40_;
								struct icaltimetype _tmp41_;
								gint _tmp42_;
#line 303 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp40_ = start_ical_day;
#line 303 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp41_ = rrule.until;
#line 303 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp42_ = _tmp41_.year;
#line 303 "/run/build/planner/src/Services/Calendar/Utils.vala"
								if (g_date_time_get_year (_tmp40_) > _tmp42_) {
#line 304 "/run/build/planner/src/Services/Calendar/Utils.vala"
									break;
#line 2586 "Utils.c"
								} else {
									gboolean _tmp43_ = FALSE;
									GDateTime* _tmp44_;
									struct icaltimetype _tmp45_;
									gint _tmp46_;
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp44_ = start_ical_day;
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp45_ = rrule.until;
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp46_ = _tmp45_.year;
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
									if (g_date_time_get_year (_tmp44_) == _tmp46_) {
#line 2600 "Utils.c"
										GDateTime* _tmp47_;
										struct icaltimetype _tmp48_;
										gint _tmp49_;
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp47_ = start_ical_day;
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp48_ = rrule.until;
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp49_ = _tmp48_.month;
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp43_ = g_date_time_get_month (_tmp47_) > _tmp49_;
#line 2612 "Utils.c"
									} else {
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp43_ = FALSE;
#line 2616 "Utils.c"
									}
#line 305 "/run/build/planner/src/Services/Calendar/Utils.vala"
									if (_tmp43_) {
#line 306 "/run/build/planner/src/Services/Calendar/Utils.vala"
										break;
#line 2622 "Utils.c"
									} else {
										gboolean _tmp50_ = FALSE;
										gboolean _tmp51_ = FALSE;
										GDateTime* _tmp52_;
										struct icaltimetype _tmp53_;
										gint _tmp54_;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp52_ = start_ical_day;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp53_ = rrule.until;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp54_ = _tmp53_.year;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
										if (g_date_time_get_year (_tmp52_) == _tmp54_) {
#line 2637 "Utils.c"
											GDateTime* _tmp55_;
											struct icaltimetype _tmp56_;
											gint _tmp57_;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp55_ = start_ical_day;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp56_ = rrule.until;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp57_ = _tmp56_.month;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp51_ = g_date_time_get_month (_tmp55_) == _tmp57_;
#line 2649 "Utils.c"
										} else {
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp51_ = FALSE;
#line 2653 "Utils.c"
										}
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
										if (_tmp51_) {
#line 2657 "Utils.c"
											GDateTime* _tmp58_;
											struct icaltimetype _tmp59_;
											gint _tmp60_;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp58_ = start_ical_day;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp59_ = rrule.until;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp60_ = _tmp59_.day;
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp50_ = g_date_time_get_day_of_month (_tmp58_) > _tmp60_;
#line 2669 "Utils.c"
										} else {
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp50_ = FALSE;
#line 2673 "Utils.c"
										}
#line 307 "/run/build/planner/src/Services/Calendar/Utils.vala"
										if (_tmp50_) {
#line 308 "/run/build/planner/src/Services/Calendar/Utils.vala"
											break;
#line 2679 "Utils.c"
										}
									}
								}
							}
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp61_ = i;
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp62_ = g_date_time_add_months (start, _tmp61_);
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp63_ = _tmp62_;
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp64_ = rrule.by_day;
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp64__length1 = -1;
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp65_ = k;
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp66_ = _tmp64_[_tmp65_];
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp67_ = maya_util_get_date_from_ical_day (_tmp63_, _tmp66_);
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp68_ = _tmp67_;
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (_tmp63_);
#line 311 "/run/build/planner/src/Services/Calendar/Utils.vala"
							start_ical_day_new = _tmp68_;
#line 312 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp69_ = i;
#line 312 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp70_ = g_date_time_add_months (start, _tmp69_);
#line 312 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp71_ = _tmp70_;
#line 312 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp72_ = g_date_time_get_month (_tmp71_);
#line 312 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (_tmp71_);
#line 312 "/run/build/planner/src/Services/Calendar/Utils.vala"
							month = _tmp72_;
#line 313 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp73_ = start_week;
#line 313 "/run/build/planner/src/Services/Calendar/Utils.vala"
							week = _tmp73_;
#line 316 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp75_ = is_last;
#line 316 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (_tmp75_) {
#line 2726 "Utils.c"
								GDateTime* _tmp76_;
								gint _tmp77_;
#line 316 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp76_ = start_ical_day_new;
#line 316 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp77_ = month;
#line 316 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp74_ = g_date_time_get_month (_tmp76_) != _tmp77_;
#line 2735 "Utils.c"
							} else {
#line 316 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp74_ = FALSE;
#line 2739 "Utils.c"
							}
#line 316 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (_tmp74_) {
#line 2743 "Utils.c"
								GDateTime* _tmp78_;
								GDateTime* _tmp79_;
#line 317 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp78_ = start_ical_day_new;
#line 317 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp79_ = g_date_time_add_weeks (_tmp78_, -1);
#line 317 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_g_date_time_unref0 (start_ical_day_new);
#line 317 "/run/build/planner/src/Services/Calendar/Utils.vala"
								start_ical_day_new = _tmp79_;
#line 2754 "Utils.c"
							} else {
								gboolean _tmp80_;
#line 320 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp80_ = is_last;
#line 320 "/run/build/planner/src/Services/Calendar/Utils.vala"
								if (!_tmp80_) {
#line 2761 "Utils.c"
									gboolean _tmp81_ = FALSE;
									GDateTime* _tmp82_;
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp82_ = start_ical_day_new;
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
									if (g_date_time_get_day_of_month (_tmp82_) <= 7) {
#line 2768 "Utils.c"
										GDateTime* _tmp83_;
										GDateTime* _tmp84_;
										GDateTime* _tmp85_;
										gint _tmp86_;
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp83_ = start_ical_day_new;
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp84_ = g_date_time_add_weeks (_tmp83_, -1);
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp85_ = _tmp84_;
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp86_ = month;
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp81_ = g_date_time_get_month (_tmp85_) == _tmp86_;
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_g_date_time_unref0 (_tmp85_);
#line 2785 "Utils.c"
									} else {
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp81_ = FALSE;
#line 2789 "Utils.c"
									}
#line 321 "/run/build/planner/src/Services/Calendar/Utils.vala"
									if (_tmp81_) {
#line 322 "/run/build/planner/src/Services/Calendar/Utils.vala"
										week = 2;
#line 2795 "Utils.c"
									} else {
										GDateTime* _tmp87_;
#line 325 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp87_ = start_ical_day_new;
#line 325 "/run/build/planner/src/Services/Calendar/Utils.vala"
										week = (gint) ceil (((gdouble) g_date_time_get_day_of_month (_tmp87_)) / 7);
#line 2802 "Utils.c"
									}
								}
							}
#line 329 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp88_ = start_ical_day_new;
#line 329 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp89_ = start_week;
#line 329 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp90_ = week;
#line 329 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp91_ = g_date_time_add_weeks (_tmp88_, _tmp89_ - _tmp90_);
#line 329 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (start_ical_day_new);
#line 329 "/run/build/planner/src/Services/Calendar/Utils.vala"
							start_ical_day_new = _tmp91_;
#line 330 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp92_ = start_ical_day_new;
#line 330 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp93_ = month;
#line 330 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (g_date_time_get_month (_tmp92_) != _tmp93_) {
#line 2824 "Utils.c"
								gint _tmp94_;
								GDateTime* _tmp95_;
#line 331 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp94_ = i;
#line 331 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp95_ = g_date_time_add_months (start, _tmp94_);
#line 331 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_g_date_time_unref0 (start_ical_day);
#line 331 "/run/build/planner/src/Services/Calendar/Utils.vala"
								start_ical_day = _tmp95_;
#line 2835 "Utils.c"
							} else {
								GDateTime* _tmp96_;
								GDateTime* _tmp97_;
								GDateTime* _tmp98_;
								gint _tmp99_;
								GDateTime* _tmp100_;
								GDateTime* _tmp101_;
								GDateTime* _tmp102_;
								MayaUtilDateRange* _tmp103_;
								MayaUtilDateRange* _tmp104_;
#line 334 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp96_ = start_ical_day_new;
#line 334 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp97_ = _g_date_time_ref0 (_tmp96_);
#line 334 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_g_date_time_unref0 (start_ical_day);
#line 334 "/run/build/planner/src/Services/Calendar/Utils.vala"
								start_ical_day = _tmp97_;
#line 335 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp98_ = start_ical_day;
#line 335 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp99_ = days;
#line 335 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp100_ = g_date_time_add_days (_tmp98_, _tmp99_);
#line 335 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_g_date_time_unref0 (end_ical_day);
#line 335 "/run/build/planner/src/Services/Calendar/Utils.vala"
								end_ical_day = _tmp100_;
#line 336 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp101_ = start_ical_day;
#line 336 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp102_ = end_ical_day;
#line 336 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp103_ = maya_util_date_range_new (_tmp101_, _tmp102_);
#line 336 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp104_ = _tmp103_;
#line 336 "/run/build/planner/src/Services/Calendar/Utils.vala"
								gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp104_);
#line 336 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_g_object_unref0 (_tmp104_);
#line 2876 "Utils.c"
							}
#line 339 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp105_ = i;
#line 339 "/run/build/planner/src/Services/Calendar/Utils.vala"
							i = _tmp105_ + 1;
#line 301 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_g_date_time_unref0 (start_ical_day_new);
#line 2884 "Utils.c"
						}
#line 284 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (end_ical_day);
#line 284 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (start_ical_day);
#line 2890 "Utils.c"
					}
				} else {
#line 343 "/run/build/planner/src/Services/Calendar/Utils.vala"
					break;
#line 2895 "Utils.c"
				}
			}
		}
	}
#line 348 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp106_ = rrule.by_month_day;
#line 348 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp106__length1 = -1;
#line 348 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp107_ = _tmp106_[0];
#line 348 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (((gint) _tmp107_) < ICAL_BY_MONTHDAY_SIZE) {
#line 2908 "Utils.c"
		gint _tmp108_;
#line 349 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp108_ = rrule.count;
#line 349 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (_tmp108_ > 0) {
#line 2914 "Utils.c"
			{
				gint i = 0;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
				i = 1;
#line 2919 "Utils.c"
				{
					gboolean _tmp109_ = FALSE;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp109_ = TRUE;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
					while (TRUE) {
#line 2926 "Utils.c"
						gint _tmp111_;
						gint _tmp112_;
						gint n = 0;
						gint _tmp113_;
						gshort _tmp114_;
						gint _tmp115_;
						GDateTime* _tmp116_;
						GDateTime* _tmp117_;
						gint _tmp118_;
						GDateTime* _tmp119_;
						GDateTime* _tmp120_;
						MayaUtilDateRange* _tmp121_;
						MayaUtilDateRange* _tmp122_;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (!_tmp109_) {
#line 2942 "Utils.c"
							gint _tmp110_;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp110_ = i;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
							i = _tmp110_ + 1;
#line 2948 "Utils.c"
						}
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp109_ = FALSE;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp111_ = i;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp112_ = rrule.count;
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (!(_tmp111_ <= _tmp112_)) {
#line 350 "/run/build/planner/src/Services/Calendar/Utils.vala"
							break;
#line 2960 "Utils.c"
						}
#line 351 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp113_ = i;
#line 351 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp114_ = rrule.interval;
#line 351 "/run/build/planner/src/Services/Calendar/Utils.vala"
						n = _tmp113_ * _tmp114_;
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp115_ = n;
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp116_ = g_date_time_add_months (start, _tmp115_);
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp117_ = _tmp116_;
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp118_ = n;
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp119_ = g_date_time_add_months (end, _tmp118_);
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp120_ = _tmp119_;
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp121_ = maya_util_date_range_new (_tmp117_, _tmp120_);
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp122_ = _tmp121_;
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp122_);
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_object_unref0 (_tmp122_);
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (_tmp120_);
#line 352 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (_tmp117_);
#line 2992 "Utils.c"
					}
				}
			}
		} else {
			gint i = 0;
			gint n = 0;
			gint _tmp123_;
			gshort _tmp124_;
			gboolean is_null_time = FALSE;
			GDateTime* temp_start = NULL;
			gint _tmp125_;
			GDateTime* _tmp126_;
#line 355 "/run/build/planner/src/Services/Calendar/Utils.vala"
			i = 1;
#line 356 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp123_ = i;
#line 356 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp124_ = rrule.interval;
#line 356 "/run/build/planner/src/Services/Calendar/Utils.vala"
			n = _tmp123_ * _tmp124_;
#line 357 "/run/build/planner/src/Services/Calendar/Utils.vala"
			is_null_time = icaltime_is_null_time (rrule.until) == 1;
#line 358 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp125_ = n;
#line 358 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp126_ = g_date_time_add_months (start, _tmp125_);
#line 358 "/run/build/planner/src/Services/Calendar/Utils.vala"
			temp_start = _tmp126_;
#line 359 "/run/build/planner/src/Services/Calendar/Utils.vala"
			while (TRUE) {
#line 3023 "Utils.c"
				GDateTime* _tmp127_;
				GDateTime* _tmp128_;
				GDateTime* _tmp129_;
				gboolean _tmp130_;
				GDateTime* _tmp152_;
				gint _tmp153_;
				GDateTime* _tmp154_;
				GDateTime* _tmp155_;
				MayaUtilDateRange* _tmp156_;
				MayaUtilDateRange* _tmp157_;
				gint _tmp158_;
				gint _tmp159_;
				gshort _tmp160_;
				gint _tmp161_;
				GDateTime* _tmp162_;
#line 359 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp127_ = maya_util_date_range_get_last_dt (view_range);
#line 359 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp128_ = _tmp127_;
#line 359 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp129_ = temp_start;
#line 359 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (!(g_date_time_compare (_tmp128_, _tmp129_) > 0)) {
#line 359 "/run/build/planner/src/Services/Calendar/Utils.vala"
					break;
#line 3049 "Utils.c"
				}
#line 360 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp130_ = is_null_time;
#line 360 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (_tmp130_ == FALSE) {
#line 3055 "Utils.c"
					GDateTime* _tmp131_;
					struct icaltimetype _tmp132_;
					gint _tmp133_;
#line 361 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp131_ = temp_start;
#line 361 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp132_ = rrule.until;
#line 361 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp133_ = _tmp132_.year;
#line 361 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (g_date_time_get_year (_tmp131_) > _tmp133_) {
#line 362 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 3069 "Utils.c"
					} else {
						gboolean _tmp134_ = FALSE;
						GDateTime* _tmp135_;
						struct icaltimetype _tmp136_;
						gint _tmp137_;
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp135_ = temp_start;
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp136_ = rrule.until;
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp137_ = _tmp136_.year;
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (g_date_time_get_year (_tmp135_) == _tmp137_) {
#line 3083 "Utils.c"
							GDateTime* _tmp138_;
							struct icaltimetype _tmp139_;
							gint _tmp140_;
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp138_ = temp_start;
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp139_ = rrule.until;
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp140_ = _tmp139_.month;
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp134_ = g_date_time_get_month (_tmp138_) > _tmp140_;
#line 3095 "Utils.c"
						} else {
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp134_ = FALSE;
#line 3099 "Utils.c"
						}
#line 363 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (_tmp134_) {
#line 364 "/run/build/planner/src/Services/Calendar/Utils.vala"
							break;
#line 3105 "Utils.c"
						} else {
							gboolean _tmp141_ = FALSE;
							gboolean _tmp142_ = FALSE;
							GDateTime* _tmp143_;
							struct icaltimetype _tmp144_;
							gint _tmp145_;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp143_ = temp_start;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp144_ = rrule.until;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp145_ = _tmp144_.year;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (g_date_time_get_year (_tmp143_) == _tmp145_) {
#line 3120 "Utils.c"
								GDateTime* _tmp146_;
								struct icaltimetype _tmp147_;
								gint _tmp148_;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp146_ = temp_start;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp147_ = rrule.until;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp148_ = _tmp147_.month;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp142_ = g_date_time_get_month (_tmp146_) == _tmp148_;
#line 3132 "Utils.c"
							} else {
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp142_ = FALSE;
#line 3136 "Utils.c"
							}
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (_tmp142_) {
#line 3140 "Utils.c"
								GDateTime* _tmp149_;
								struct icaltimetype _tmp150_;
								gint _tmp151_;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp149_ = temp_start;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp150_ = rrule.until;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp151_ = _tmp150_.day;
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp141_ = g_date_time_get_day_of_month (_tmp149_) > _tmp151_;
#line 3152 "Utils.c"
							} else {
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp141_ = FALSE;
#line 3156 "Utils.c"
							}
#line 365 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (_tmp141_) {
#line 366 "/run/build/planner/src/Services/Calendar/Utils.vala"
								break;
#line 3162 "Utils.c"
							}
						}
					}
				}
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp152_ = temp_start;
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp153_ = n;
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp154_ = g_date_time_add_months (end, _tmp153_);
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp155_ = _tmp154_;
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp156_ = maya_util_date_range_new (_tmp152_, _tmp155_);
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp157_ = _tmp156_;
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp157_);
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (_tmp157_);
#line 370 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (_tmp155_);
#line 371 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp158_ = i;
#line 371 "/run/build/planner/src/Services/Calendar/Utils.vala"
				i = _tmp158_ + 1;
#line 372 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp159_ = i;
#line 372 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp160_ = rrule.interval;
#line 372 "/run/build/planner/src/Services/Calendar/Utils.vala"
				n = _tmp159_ * _tmp160_;
#line 373 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp161_ = n;
#line 373 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp162_ = g_date_time_add_months (start, _tmp161_);
#line 373 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (temp_start);
#line 373 "/run/build/planner/src/Services/Calendar/Utils.vala"
				temp_start = _tmp162_;
#line 3203 "Utils.c"
			}
#line 349 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_date_time_unref0 (temp_start);
#line 3207 "Utils.c"
		}
	}
}


void
maya_util_generate_week_reccurence (GeeLinkedList* dateranges,
                                    MayaUtilDateRange* view_range,
                                    struct icalrecurrencetype rrule,
                                    GDateTime* start_,
                                    GDateTime* end_)
{
	GDateTime* start = NULL;
	GDateTime* _tmp0_;
	GDateTime* end = NULL;
	GDateTime* _tmp1_;
#line 379 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (dateranges != NULL);
#line 379 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (view_range != NULL);
#line 379 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (start_ != NULL);
#line 379 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (end_ != NULL);
#line 381 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = _g_date_time_ref0 (start_);
#line 381 "/run/build/planner/src/Services/Calendar/Utils.vala"
	start = _tmp0_;
#line 382 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = _g_date_time_ref0 (end_);
#line 382 "/run/build/planner/src/Services/Calendar/Utils.vala"
	end = _tmp1_;
#line 3240 "Utils.c"
	{
		gint k = 0;
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
		k = 0;
#line 3245 "Utils.c"
		{
			gboolean _tmp2_ = FALSE;
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp2_ = TRUE;
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
			while (TRUE) {
#line 3252 "Utils.c"
				gint _tmp4_;
				gshort* _tmp5_;
				gint _tmp5__length1;
				gint _tmp6_;
				gshort _tmp7_;
				gint day_to_add = 0;
				gshort* _tmp8_;
				gint _tmp8__length1;
				gint _tmp9_;
				gshort _tmp10_;
				GDateTime* _tmp18_;
				gint _tmp19_;
				GDateTime* _tmp20_;
				GDateTime* _tmp21_;
				gint _tmp22_;
				GDateTime* _tmp23_;
				gint _tmp24_;
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (!_tmp2_) {
#line 3272 "Utils.c"
					gint _tmp3_;
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp3_ = k;
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
					k = _tmp3_ + 1;
#line 3278 "Utils.c"
				}
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp2_ = FALSE;
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp4_ = k;
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (!(_tmp4_ <= ICAL_BY_DAY_SIZE)) {
#line 383 "/run/build/planner/src/Services/Calendar/Utils.vala"
					break;
#line 3288 "Utils.c"
				}
#line 384 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp5_ = rrule.by_day;
#line 384 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp5__length1 = -1;
#line 384 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp6_ = k;
#line 384 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp7_ = _tmp5_[_tmp6_];
#line 384 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (((gint) _tmp7_) > 7) {
#line 385 "/run/build/planner/src/Services/Calendar/Utils.vala"
					break;
#line 3302 "Utils.c"
				}
#line 387 "/run/build/planner/src/Services/Calendar/Utils.vala"
				day_to_add = 0;
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp8_ = rrule.by_day;
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp8__length1 = -1;
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp9_ = k;
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp10_ = _tmp8_[_tmp9_];
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
				switch (_tmp10_) {
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
					case 1:
#line 3318 "Utils.c"
					{
						GDateTime* _tmp11_;
#line 390 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp11_ = start;
#line 390 "/run/build/planner/src/Services/Calendar/Utils.vala"
						day_to_add = 7 - g_date_time_get_day_of_week (_tmp11_);
#line 391 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 3327 "Utils.c"
					}
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
					case 2:
#line 3331 "Utils.c"
					{
						GDateTime* _tmp12_;
#line 393 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp12_ = start;
#line 393 "/run/build/planner/src/Services/Calendar/Utils.vala"
						day_to_add = 1 - g_date_time_get_day_of_week (_tmp12_);
#line 394 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 3340 "Utils.c"
					}
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
					case 3:
#line 3344 "Utils.c"
					{
						GDateTime* _tmp13_;
#line 396 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp13_ = start;
#line 396 "/run/build/planner/src/Services/Calendar/Utils.vala"
						day_to_add = 2 - g_date_time_get_day_of_week (_tmp13_);
#line 397 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 3353 "Utils.c"
					}
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
					case 4:
#line 3357 "Utils.c"
					{
						GDateTime* _tmp14_;
#line 399 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp14_ = start;
#line 399 "/run/build/planner/src/Services/Calendar/Utils.vala"
						day_to_add = 3 - g_date_time_get_day_of_week (_tmp14_);
#line 400 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 3366 "Utils.c"
					}
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
					case 5:
#line 3370 "Utils.c"
					{
						GDateTime* _tmp15_;
#line 402 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp15_ = start;
#line 402 "/run/build/planner/src/Services/Calendar/Utils.vala"
						day_to_add = 4 - g_date_time_get_day_of_week (_tmp15_);
#line 403 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 3379 "Utils.c"
					}
#line 388 "/run/build/planner/src/Services/Calendar/Utils.vala"
					case 6:
#line 3383 "Utils.c"
					{
						GDateTime* _tmp16_;
#line 405 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp16_ = start;
#line 405 "/run/build/planner/src/Services/Calendar/Utils.vala"
						day_to_add = 5 - g_date_time_get_day_of_week (_tmp16_);
#line 406 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 3392 "Utils.c"
					}
					default:
					{
						GDateTime* _tmp17_;
#line 408 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp17_ = start;
#line 408 "/run/build/planner/src/Services/Calendar/Utils.vala"
						day_to_add = 6 - g_date_time_get_day_of_week (_tmp17_);
#line 409 "/run/build/planner/src/Services/Calendar/Utils.vala"
						break;
#line 3403 "Utils.c"
					}
				}
#line 412 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp18_ = start;
#line 412 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp19_ = day_to_add;
#line 412 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp20_ = g_date_time_add_days (_tmp18_, _tmp19_);
#line 412 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (start);
#line 412 "/run/build/planner/src/Services/Calendar/Utils.vala"
				start = _tmp20_;
#line 413 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp21_ = end;
#line 413 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp22_ = day_to_add;
#line 413 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp23_ = g_date_time_add_days (_tmp21_, _tmp22_);
#line 413 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_date_time_unref0 (end);
#line 413 "/run/build/planner/src/Services/Calendar/Utils.vala"
				end = _tmp23_;
#line 415 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp24_ = rrule.count;
#line 415 "/run/build/planner/src/Services/Calendar/Utils.vala"
				if (_tmp24_ > 0) {
#line 3430 "Utils.c"
					gboolean _tmp25_ = FALSE;
					gint _tmp26_;
#line 416 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp26_ = day_to_add;
#line 416 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (_tmp26_ > 0) {
#line 3437 "Utils.c"
						gint _tmp27_;
#line 416 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp27_ = day_to_add;
#line 416 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp25_ = (_tmp27_ + g_date_time_get_day_of_week (start_)) < 7;
#line 3443 "Utils.c"
					} else {
#line 416 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp25_ = FALSE;
#line 3447 "Utils.c"
					}
#line 416 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (_tmp25_) {
#line 3451 "Utils.c"
						GDateTime* _tmp28_;
						GDateTime* _tmp29_;
						MayaUtilDateRange* _tmp30_;
						MayaUtilDateRange* _tmp31_;
#line 417 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp28_ = start;
#line 417 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp29_ = end;
#line 417 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp30_ = maya_util_date_range_new (_tmp28_, _tmp29_);
#line 417 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp31_ = _tmp30_;
#line 417 "/run/build/planner/src/Services/Calendar/Utils.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp31_);
#line 417 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_object_unref0 (_tmp31_);
#line 3468 "Utils.c"
					}
					{
						gint i = 0;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
						i = 1;
#line 3474 "Utils.c"
						{
							gboolean _tmp32_ = FALSE;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp32_ = TRUE;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
							while (TRUE) {
#line 3481 "Utils.c"
								gint _tmp34_;
								gint _tmp35_;
								gint n = 0;
								gint _tmp36_;
								gshort _tmp37_;
								gboolean _tmp38_ = FALSE;
								GDateTime* _tmp39_;
								gint _tmp40_;
								GDateTime* _tmp41_;
								GDateTime* _tmp42_;
								gboolean _tmp43_;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
								if (!_tmp32_) {
#line 3495 "Utils.c"
									gint _tmp33_;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp33_ = i;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
									i = _tmp33_ + 1;
#line 3501 "Utils.c"
								}
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp32_ = FALSE;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp34_ = i;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp35_ = rrule.count;
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
								if (!(_tmp34_ <= _tmp35_)) {
#line 419 "/run/build/planner/src/Services/Calendar/Utils.vala"
									break;
#line 3513 "Utils.c"
								}
#line 420 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp36_ = i;
#line 420 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp37_ = rrule.interval;
#line 420 "/run/build/planner/src/Services/Calendar/Utils.vala"
								n = (_tmp36_ * _tmp37_) * 7;
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp39_ = start;
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp40_ = n;
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp41_ = g_date_time_add_days (_tmp39_, _tmp40_);
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp42_ = _tmp41_;
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp43_ = maya_util_date_range_contains (view_range, _tmp42_);
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_g_date_time_unref0 (_tmp42_);
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
								if (_tmp43_) {
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp38_ = TRUE;
#line 3537 "Utils.c"
								} else {
									GDateTime* _tmp44_;
									gint _tmp45_;
									GDateTime* _tmp46_;
									GDateTime* _tmp47_;
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp44_ = end;
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp45_ = n;
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp46_ = g_date_time_add_days (_tmp44_, _tmp45_);
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp47_ = _tmp46_;
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp38_ = maya_util_date_range_contains (view_range, _tmp47_);
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_date_time_unref0 (_tmp47_);
#line 3555 "Utils.c"
								}
#line 421 "/run/build/planner/src/Services/Calendar/Utils.vala"
								if (_tmp38_) {
#line 3559 "Utils.c"
									GDateTime* _tmp48_;
									gint _tmp49_;
									GDateTime* _tmp50_;
									GDateTime* _tmp51_;
									GDateTime* _tmp52_;
									gint _tmp53_;
									GDateTime* _tmp54_;
									GDateTime* _tmp55_;
									MayaUtilDateRange* _tmp56_;
									MayaUtilDateRange* _tmp57_;
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp48_ = start;
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp49_ = n;
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp50_ = g_date_time_add_days (_tmp48_, _tmp49_);
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp51_ = _tmp50_;
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp52_ = end;
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp53_ = n;
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp54_ = g_date_time_add_days (_tmp52_, _tmp53_);
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp55_ = _tmp54_;
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp56_ = maya_util_date_range_new (_tmp51_, _tmp55_);
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp57_ = _tmp56_;
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp57_);
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_object_unref0 (_tmp57_);
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_date_time_unref0 (_tmp55_);
#line 422 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_g_date_time_unref0 (_tmp51_);
#line 3598 "Utils.c"
								}
							}
						}
					}
				} else {
					gint i = 0;
					gint n = 0;
					gshort _tmp58_;
					gboolean _tmp59_ = FALSE;
					gint _tmp60_;
					gint _tmp66_;
					gboolean is_null_time = FALSE;
					GDateTime* temp_start = NULL;
					GDateTime* _tmp67_;
					gint _tmp68_;
					GDateTime* _tmp69_;
#line 425 "/run/build/planner/src/Services/Calendar/Utils.vala"
					i = 1;
#line 426 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp58_ = rrule.interval;
#line 426 "/run/build/planner/src/Services/Calendar/Utils.vala"
					n = (gint) _tmp58_;
#line 427 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp60_ = day_to_add;
#line 427 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (_tmp60_ > 0) {
#line 3625 "Utils.c"
						gint _tmp61_;
#line 427 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp61_ = day_to_add;
#line 427 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp59_ = (_tmp61_ + g_date_time_get_day_of_week (start_)) < 7;
#line 3631 "Utils.c"
					} else {
#line 427 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp59_ = FALSE;
#line 3635 "Utils.c"
					}
#line 427 "/run/build/planner/src/Services/Calendar/Utils.vala"
					if (_tmp59_) {
#line 3639 "Utils.c"
						GDateTime* _tmp62_;
						GDateTime* _tmp63_;
						MayaUtilDateRange* _tmp64_;
						MayaUtilDateRange* _tmp65_;
#line 428 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp62_ = start;
#line 428 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp63_ = end;
#line 428 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp64_ = maya_util_date_range_new (_tmp62_, _tmp63_);
#line 428 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp65_ = _tmp64_;
#line 428 "/run/build/planner/src/Services/Calendar/Utils.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp65_);
#line 428 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_object_unref0 (_tmp65_);
#line 3656 "Utils.c"
					}
#line 430 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp66_ = n;
#line 430 "/run/build/planner/src/Services/Calendar/Utils.vala"
					n = _tmp66_ * 7;
#line 431 "/run/build/planner/src/Services/Calendar/Utils.vala"
					is_null_time = icaltime_is_null_time (rrule.until) == 1;
#line 432 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp67_ = start;
#line 432 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp68_ = n;
#line 432 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_tmp69_ = g_date_time_add_days (_tmp67_, _tmp68_);
#line 432 "/run/build/planner/src/Services/Calendar/Utils.vala"
					temp_start = _tmp69_;
#line 433 "/run/build/planner/src/Services/Calendar/Utils.vala"
					while (TRUE) {
#line 3674 "Utils.c"
						GDateTime* _tmp70_;
						GDateTime* _tmp71_;
						GDateTime* _tmp72_;
						gboolean _tmp73_;
						GDateTime* _tmp90_;
						GDateTime* _tmp91_;
						gint _tmp92_;
						GDateTime* _tmp93_;
						GDateTime* _tmp94_;
						MayaUtilDateRange* _tmp95_;
						MayaUtilDateRange* _tmp96_;
						gint _tmp97_;
						gint _tmp98_;
						gshort _tmp99_;
						GDateTime* _tmp100_;
						gint _tmp101_;
						GDateTime* _tmp102_;
#line 433 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp70_ = maya_util_date_range_get_last_dt (view_range);
#line 433 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp71_ = _tmp70_;
#line 433 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp72_ = temp_start;
#line 433 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (!(g_date_time_compare (_tmp71_, _tmp72_) > 0)) {
#line 433 "/run/build/planner/src/Services/Calendar/Utils.vala"
							break;
#line 3702 "Utils.c"
						}
#line 434 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp73_ = is_null_time;
#line 434 "/run/build/planner/src/Services/Calendar/Utils.vala"
						if (_tmp73_ == FALSE) {
#line 3708 "Utils.c"
							GDateTime* _tmp74_;
							struct icaltimetype _tmp75_;
							gint _tmp76_;
#line 435 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp74_ = temp_start;
#line 435 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp75_ = rrule.until;
#line 435 "/run/build/planner/src/Services/Calendar/Utils.vala"
							_tmp76_ = _tmp75_.year;
#line 435 "/run/build/planner/src/Services/Calendar/Utils.vala"
							if (g_date_time_get_year (_tmp74_) > _tmp76_) {
#line 436 "/run/build/planner/src/Services/Calendar/Utils.vala"
								break;
#line 3722 "Utils.c"
							} else {
								GDateTime* _tmp77_;
								struct icaltimetype _tmp78_;
								gint _tmp79_;
#line 437 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp77_ = temp_start;
#line 437 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp78_ = rrule.until;
#line 437 "/run/build/planner/src/Services/Calendar/Utils.vala"
								_tmp79_ = _tmp78_.year;
#line 437 "/run/build/planner/src/Services/Calendar/Utils.vala"
								if (g_date_time_get_year (_tmp77_) == _tmp79_) {
#line 3735 "Utils.c"
									GDateTime* _tmp80_;
									struct icaltimetype _tmp81_;
									gint _tmp82_;
#line 438 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp80_ = temp_start;
#line 438 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp81_ = rrule.until;
#line 438 "/run/build/planner/src/Services/Calendar/Utils.vala"
									_tmp82_ = _tmp81_.month;
#line 438 "/run/build/planner/src/Services/Calendar/Utils.vala"
									if (g_date_time_get_month (_tmp80_) > _tmp82_) {
#line 439 "/run/build/planner/src/Services/Calendar/Utils.vala"
										break;
#line 3749 "Utils.c"
									} else {
										gboolean _tmp83_ = FALSE;
										GDateTime* _tmp84_;
										struct icaltimetype _tmp85_;
										gint _tmp86_;
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp84_ = temp_start;
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp85_ = rrule.until;
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
										_tmp86_ = _tmp85_.month;
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
										if (g_date_time_get_month (_tmp84_) == _tmp86_) {
#line 3763 "Utils.c"
											GDateTime* _tmp87_;
											struct icaltimetype _tmp88_;
											gint _tmp89_;
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp87_ = temp_start;
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp88_ = rrule.until;
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp89_ = _tmp88_.day;
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp83_ = g_date_time_get_day_of_month (_tmp87_) > _tmp89_;
#line 3775 "Utils.c"
										} else {
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
											_tmp83_ = FALSE;
#line 3779 "Utils.c"
										}
#line 440 "/run/build/planner/src/Services/Calendar/Utils.vala"
										if (_tmp83_) {
#line 441 "/run/build/planner/src/Services/Calendar/Utils.vala"
											break;
#line 3785 "Utils.c"
										}
									}
								}
							}
						}
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp90_ = temp_start;
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp91_ = end;
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp92_ = n;
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp93_ = g_date_time_add_days (_tmp91_, _tmp92_);
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp94_ = _tmp93_;
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp95_ = maya_util_date_range_new (_tmp90_, _tmp94_);
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp96_ = _tmp95_;
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) dateranges, _tmp96_);
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_object_unref0 (_tmp96_);
#line 445 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (_tmp94_);
#line 446 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp97_ = i;
#line 446 "/run/build/planner/src/Services/Calendar/Utils.vala"
						i = _tmp97_ + 1;
#line 447 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp98_ = i;
#line 447 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp99_ = rrule.interval;
#line 447 "/run/build/planner/src/Services/Calendar/Utils.vala"
						n = (_tmp98_ * _tmp99_) * 7;
#line 448 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp100_ = start;
#line 448 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp101_ = n;
#line 448 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_tmp102_ = g_date_time_add_days (_tmp100_, _tmp101_);
#line 448 "/run/build/planner/src/Services/Calendar/Utils.vala"
						_g_date_time_unref0 (temp_start);
#line 448 "/run/build/planner/src/Services/Calendar/Utils.vala"
						temp_start = _tmp102_;
#line 3831 "Utils.c"
					}
#line 415 "/run/build/planner/src/Services/Calendar/Utils.vala"
					_g_date_time_unref0 (temp_start);
#line 3835 "Utils.c"
				}
			}
		}
	}
#line 379 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (end);
#line 379 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (start);
#line 3844 "Utils.c"
}


gboolean
maya_util_is_multiday_event (icalcomponent* comp)
{
	gboolean result = FALSE;
	GDateTime* start = NULL;
	GDateTime* end = NULL;
	GDateTime* _tmp0_ = NULL;
	GDateTime* _tmp1_ = NULL;
	gboolean _tmp2_ = FALSE;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
#line 454 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (comp != NULL, FALSE);
#line 456 "/run/build/planner/src/Services/Calendar/Utils.vala"
	maya_util_get_local_datetimes_from_icalcomponent (comp, &_tmp0_, &_tmp1_);
#line 456 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (start);
#line 456 "/run/build/planner/src/Services/Calendar/Utils.vala"
	start = _tmp0_;
#line 456 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (end);
#line 456 "/run/build/planner/src/Services/Calendar/Utils.vala"
	end = _tmp1_;
#line 458 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = start;
#line 458 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = end;
#line 458 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (g_date_time_get_year (_tmp3_) != g_date_time_get_year (_tmp4_)) {
#line 458 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp2_ = TRUE;
#line 3879 "Utils.c"
	} else {
		GDateTime* _tmp5_;
		GDateTime* _tmp6_;
#line 458 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp5_ = start;
#line 458 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp6_ = end;
#line 458 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp2_ = g_date_time_get_day_of_year (_tmp5_) != g_date_time_get_day_of_year (_tmp6_);
#line 3889 "Utils.c"
	}
#line 458 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp2_) {
#line 459 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = TRUE;
#line 459 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (end);
#line 459 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (start);
#line 459 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 3901 "Utils.c"
	}
#line 461 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = FALSE;
#line 461 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (end);
#line 461 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (start);
#line 461 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 3911 "Utils.c"
}


/**
     * Say if an event lasts all day.
     */
gboolean
maya_util_is_all_day (GDateTime* dtstart,
                      GDateTime* dtend)
{
	gboolean result = FALSE;
	GDateTime* UTC_start = NULL;
	GTimeZone* _tmp0_;
	GTimeZone* _tmp1_;
	GDateTime* _tmp2_;
	GDateTime* _tmp3_;
	GTimeSpan timespan = 0LL;
	gboolean _tmp4_ = FALSE;
	GTimeSpan _tmp5_;
#line 467 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (dtstart != NULL, FALSE);
#line 467 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (dtend != NULL, FALSE);
#line 468 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = g_time_zone_new_utc ();
#line 468 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = _tmp0_;
#line 468 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = g_date_time_to_timezone (dtstart, _tmp1_);
#line 468 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = _tmp2_;
#line 468 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_time_zone_unref0 (_tmp1_);
#line 468 "/run/build/planner/src/Services/Calendar/Utils.vala"
	UTC_start = _tmp3_;
#line 469 "/run/build/planner/src/Services/Calendar/Utils.vala"
	timespan = g_date_time_difference (dtend, dtstart);
#line 470 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = timespan;
#line 470 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if ((_tmp5_ % G_TIME_SPAN_DAY) == ((GTimeSpan) 0)) {
#line 3953 "Utils.c"
		GDateTime* _tmp6_;
#line 470 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp6_ = UTC_start;
#line 470 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp4_ = g_date_time_get_hour (_tmp6_) == 0;
#line 3959 "Utils.c"
	} else {
#line 470 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp4_ = FALSE;
#line 3963 "Utils.c"
	}
#line 470 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp4_) {
#line 471 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = TRUE;
#line 471 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (UTC_start);
#line 471 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 3973 "Utils.c"
	} else {
#line 473 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = FALSE;
#line 473 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (UTC_start);
#line 473 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 3981 "Utils.c"
	}
#line 467 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (UTC_start);
#line 3985 "Utils.c"
}


GDateTime*
maya_util_get_date_from_ical_day (GDateTime* date,
                                  gshort day)
{
	GDateTime* result = NULL;
	gint day_to_add = 0;
	gint _tmp0_;
	GDateTime* _tmp1_;
#line 477 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (date != NULL, NULL);
#line 478 "/run/build/planner/src/Services/Calendar/Utils.vala"
	day_to_add = 0;
#line 479 "/run/build/planner/src/Services/Calendar/Utils.vala"
	switch (icalrecurrencetype_day_day_of_week (day)) {
#line 479 "/run/build/planner/src/Services/Calendar/Utils.vala"
		case ICAL_SUNDAY_WEEKDAY:
#line 4005 "Utils.c"
		{
#line 481 "/run/build/planner/src/Services/Calendar/Utils.vala"
			day_to_add = 7 - g_date_time_get_day_of_week (date);
#line 482 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4011 "Utils.c"
		}
#line 479 "/run/build/planner/src/Services/Calendar/Utils.vala"
		case ICAL_MONDAY_WEEKDAY:
#line 4015 "Utils.c"
		{
#line 484 "/run/build/planner/src/Services/Calendar/Utils.vala"
			day_to_add = 1 - g_date_time_get_day_of_week (date);
#line 485 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4021 "Utils.c"
		}
#line 479 "/run/build/planner/src/Services/Calendar/Utils.vala"
		case ICAL_TUESDAY_WEEKDAY:
#line 4025 "Utils.c"
		{
#line 487 "/run/build/planner/src/Services/Calendar/Utils.vala"
			day_to_add = 2 - g_date_time_get_day_of_week (date);
#line 488 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4031 "Utils.c"
		}
#line 479 "/run/build/planner/src/Services/Calendar/Utils.vala"
		case ICAL_WEDNESDAY_WEEKDAY:
#line 4035 "Utils.c"
		{
#line 490 "/run/build/planner/src/Services/Calendar/Utils.vala"
			day_to_add = 3 - g_date_time_get_day_of_week (date);
#line 491 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4041 "Utils.c"
		}
#line 479 "/run/build/planner/src/Services/Calendar/Utils.vala"
		case ICAL_THURSDAY_WEEKDAY:
#line 4045 "Utils.c"
		{
#line 493 "/run/build/planner/src/Services/Calendar/Utils.vala"
			day_to_add = 4 - g_date_time_get_day_of_week (date);
#line 494 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4051 "Utils.c"
		}
#line 479 "/run/build/planner/src/Services/Calendar/Utils.vala"
		case ICAL_FRIDAY_WEEKDAY:
#line 4055 "Utils.c"
		{
#line 496 "/run/build/planner/src/Services/Calendar/Utils.vala"
			day_to_add = 5 - g_date_time_get_day_of_week (date);
#line 497 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4061 "Utils.c"
		}
		default:
		{
#line 499 "/run/build/planner/src/Services/Calendar/Utils.vala"
			day_to_add = 6 - g_date_time_get_day_of_week (date);
#line 500 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4069 "Utils.c"
		}
	}
#line 503 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = day_to_add;
#line 503 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = g_date_time_add_days (date, _tmp0_);
#line 503 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp1_;
#line 503 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4080 "Utils.c"
}


GDateTime*
maya_util_get_start_of_month (GDateTime* date)
{
	GDateTime* result = NULL;
	GDateTime* _tmp1_;
#line 508 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (date == NULL) {
#line 4091 "Utils.c"
		GDateTime* _tmp0_;
#line 509 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp0_ = g_date_time_new_now_local ();
#line 509 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_date_time_unref0 (date);
#line 509 "/run/build/planner/src/Services/Calendar/Utils.vala"
		date = _tmp0_;
#line 4099 "Utils.c"
	}
#line 511 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = g_date_time_new_local (g_date_time_get_year (date), g_date_time_get_month (date), 1, 0, 0, (gdouble) 0);
#line 511 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp1_;
#line 511 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_date_time_unref0 (date);
#line 511 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4109 "Utils.c"
}


GDateTime*
maya_util_strip_time (GDateTime* datetime)
{
	GDateTime* result = NULL;
	GDateTime* _tmp0_;
#line 514 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (datetime != NULL, NULL);
#line 515 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = g_date_time_add_full (datetime, 0, 0, 0, -g_date_time_get_hour (datetime), -g_date_time_get_minute (datetime), (gdouble) (-g_date_time_get_second (datetime)));
#line 515 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp0_;
#line 515 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4126 "Utils.c"
}


guint
maya_util_source_hash_func (ESource* key)
{
	guint result = 0U;
	gchar* _tmp0_;
	gchar* _tmp1_;
	guint _tmp2_;
#line 523 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (key != NULL, 0U);
#line 524 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = e_source_dup_uid (key);
#line 524 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = _tmp0_;
#line 524 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = g_str_hash (_tmp1_);
#line 524 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_free0 (_tmp1_);
#line 524 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp2_;
#line 524 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4151 "Utils.c"
}


gboolean
maya_util_datetime_equal_func (GDateTime* a,
                               GDateTime* b)
{
	gboolean result = FALSE;
#line 528 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (a != NULL, FALSE);
#line 528 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (b != NULL, FALSE);
#line 529 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = g_date_time_equal (a, b);
#line 529 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4168 "Utils.c"
}


gboolean
maya_util_calcomponent_equal_func (ECalComponent* a,
                                   ECalComponent* b)
{
	gboolean result = FALSE;
	icalcomponent* comp_a = NULL;
	icalcomponent* _tmp0_;
	icalcomponent* comp_b = NULL;
	icalcomponent* _tmp1_;
	const gchar* _tmp2_;
	const gchar* _tmp3_;
#line 533 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (a != NULL, FALSE);
#line 533 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (b != NULL, FALSE);
#line 534 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = e_cal_component_get_icalcomponent (a);
#line 534 "/run/build/planner/src/Services/Calendar/Utils.vala"
	comp_a = _tmp0_;
#line 535 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = e_cal_component_get_icalcomponent (b);
#line 535 "/run/build/planner/src/Services/Calendar/Utils.vala"
	comp_b = _tmp1_;
#line 536 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = icalcomponent_get_uid (comp_a);
#line 536 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = icalcomponent_get_uid (comp_b);
#line 536 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = g_strcmp0 (_tmp2_, _tmp3_) == 0;
#line 536 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4203 "Utils.c"
}


gboolean
maya_util_source_equal_func (ESource* a,
                             ESource* b)
{
	gboolean result = FALSE;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gboolean _tmp4_;
#line 540 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (a != NULL, FALSE);
#line 540 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (b != NULL, FALSE);
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = e_source_dup_uid (a);
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = _tmp0_;
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = e_source_dup_uid (b);
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = _tmp2_;
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = g_strcmp0 (_tmp1_, _tmp3_) == 0;
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_free0 (_tmp3_);
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_free0 (_tmp1_);
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp4_;
#line 541 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4239 "Utils.c"
}


GtkCssProvider*
maya_util_css_get_css_provider (void)
{
	GtkCssProvider* result = NULL;
	GtkCssProvider* _tmp0_;
	GtkCssProvider* _tmp3_;
#line 552 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = maya_util_css__css_provider;
#line 552 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp0_ == NULL) {
#line 4253 "Utils.c"
		GtkCssProvider* _tmp1_;
		GtkCssProvider* _tmp2_;
#line 553 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp1_ = gtk_css_provider_new ();
#line 553 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (maya_util_css__css_provider);
#line 553 "/run/build/planner/src/Services/Calendar/Utils.vala"
		maya_util_css__css_provider = _tmp1_;
#line 554 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp2_ = maya_util_css__css_provider;
#line 554 "/run/build/planner/src/Services/Calendar/Utils.vala"
		gtk_css_provider_load_from_resource (_tmp2_, "/io/elementary/calendar/default.css");
#line 4266 "Utils.c"
	}
#line 557 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = maya_util_css__css_provider;
#line 557 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp3_;
#line 557 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4274 "Utils.c"
}


MayaUtilCss*
maya_util_css_construct (GType object_type)
{
	MayaUtilCss* self = NULL;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	self = (MayaUtilCss*) g_type_create_instance (object_type);
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return self;
#line 4286 "Utils.c"
}


MayaUtilCss*
maya_util_css_new (void)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return maya_util_css_construct (MAYA_UTIL_TYPE_CSS);
#line 4295 "Utils.c"
}


static void
maya_util_value_css_init (GValue* value)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	value->data[0].v_pointer = NULL;
#line 4304 "Utils.c"
}


static void
maya_util_value_css_free_value (GValue* value)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (value->data[0].v_pointer) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		maya_util_css_unref (value->data[0].v_pointer);
#line 4315 "Utils.c"
	}
}


static void
maya_util_value_css_copy_value (const GValue* src_value,
                                GValue* dest_value)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (src_value->data[0].v_pointer) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		dest_value->data[0].v_pointer = maya_util_css_ref (src_value->data[0].v_pointer);
#line 4328 "Utils.c"
	} else {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		dest_value->data[0].v_pointer = NULL;
#line 4332 "Utils.c"
	}
}


static gpointer
maya_util_value_css_peek_pointer (const GValue* value)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return value->data[0].v_pointer;
#line 4342 "Utils.c"
}


static gchar*
maya_util_value_css_collect_value (GValue* value,
                                   guint n_collect_values,
                                   GTypeCValue* collect_values,
                                   guint collect_flags)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (collect_values[0].v_pointer) {
#line 4354 "Utils.c"
		MayaUtilCss * object;
		object = collect_values[0].v_pointer;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (object->parent_instance.g_class == NULL) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
			return g_strconcat ("invalid unclassed object pointer for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 4361 "Utils.c"
		} else if (!g_value_type_compatible (G_TYPE_FROM_INSTANCE (object), G_VALUE_TYPE (value))) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
			return g_strconcat ("invalid object type `", g_type_name (G_TYPE_FROM_INSTANCE (object)), "' for value type `", G_VALUE_TYPE_NAME (value), "'", NULL);
#line 4365 "Utils.c"
		}
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		value->data[0].v_pointer = maya_util_css_ref (object);
#line 4369 "Utils.c"
	} else {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		value->data[0].v_pointer = NULL;
#line 4373 "Utils.c"
	}
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return NULL;
#line 4377 "Utils.c"
}


static gchar*
maya_util_value_css_lcopy_value (const GValue* value,
                                 guint n_collect_values,
                                 GTypeCValue* collect_values,
                                 guint collect_flags)
{
	MayaUtilCss ** object_p;
	object_p = collect_values[0].v_pointer;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (!object_p) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return g_strdup_printf ("value location for `%s' passed as NULL", G_VALUE_TYPE_NAME (value));
#line 4393 "Utils.c"
	}
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (!value->data[0].v_pointer) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		*object_p = NULL;
#line 4399 "Utils.c"
	} else if (collect_flags & G_VALUE_NOCOPY_CONTENTS) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		*object_p = value->data[0].v_pointer;
#line 4403 "Utils.c"
	} else {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		*object_p = maya_util_css_ref (value->data[0].v_pointer);
#line 4407 "Utils.c"
	}
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return NULL;
#line 4411 "Utils.c"
}


GParamSpec*
maya_util_param_spec_css (const gchar* name,
                          const gchar* nick,
                          const gchar* blurb,
                          GType object_type,
                          GParamFlags flags)
{
	MayaUtilParamSpecCss* spec;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (g_type_is_a (object_type, MAYA_UTIL_TYPE_CSS), NULL);
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	spec = g_param_spec_internal (G_TYPE_PARAM_OBJECT, name, nick, blurb, flags);
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	G_PARAM_SPEC (spec)->value_type = object_type;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return G_PARAM_SPEC (spec);
#line 4431 "Utils.c"
}


gpointer
maya_util_value_get_css (const GValue* value)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, MAYA_UTIL_TYPE_CSS), NULL);
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return value->data[0].v_pointer;
#line 4442 "Utils.c"
}


void
maya_util_value_set_css (GValue* value,
                         gpointer v_object)
{
	MayaUtilCss * old;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, MAYA_UTIL_TYPE_CSS));
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	old = value->data[0].v_pointer;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (v_object) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, MAYA_UTIL_TYPE_CSS));
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		value->data[0].v_pointer = v_object;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		maya_util_css_ref (value->data[0].v_pointer);
#line 4465 "Utils.c"
	} else {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		value->data[0].v_pointer = NULL;
#line 4469 "Utils.c"
	}
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (old) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		maya_util_css_unref (old);
#line 4475 "Utils.c"
	}
}


void
maya_util_value_take_css (GValue* value,
                          gpointer v_object)
{
	MayaUtilCss * old;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (G_TYPE_CHECK_VALUE_TYPE (value, MAYA_UTIL_TYPE_CSS));
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	old = value->data[0].v_pointer;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (v_object) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_return_if_fail (G_TYPE_CHECK_INSTANCE_TYPE (v_object, MAYA_UTIL_TYPE_CSS));
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_return_if_fail (g_value_type_compatible (G_TYPE_FROM_INSTANCE (v_object), G_VALUE_TYPE (value)));
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		value->data[0].v_pointer = v_object;
#line 4497 "Utils.c"
	} else {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		value->data[0].v_pointer = NULL;
#line 4501 "Utils.c"
	}
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (old) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		maya_util_css_unref (old);
#line 4507 "Utils.c"
	}
}


static void
maya_util_css_class_init (MayaUtilCssClass * klass)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	maya_util_css_parent_class = g_type_class_peek_parent (klass);
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	((MayaUtilCssClass *) klass)->finalize = maya_util_css_finalize;
#line 4519 "Utils.c"
}


static void
maya_util_css_instance_init (MayaUtilCss * self)
{
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	self->ref_count = 1;
#line 4528 "Utils.c"
}


static void
maya_util_css_finalize (MayaUtilCss * obj)
{
	MayaUtilCss * self;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_UTIL_TYPE_CSS, MayaUtilCss);
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_signal_handlers_destroy (self);
#line 4540 "Utils.c"
}


GType
maya_util_css_get_type (void)
{
	static volatile gsize maya_util_css_type_id__volatile = 0;
	if (g_once_init_enter (&maya_util_css_type_id__volatile)) {
		static const GTypeValueTable g_define_type_value_table = { maya_util_value_css_init, maya_util_value_css_free_value, maya_util_value_css_copy_value, maya_util_value_css_peek_pointer, "p", maya_util_value_css_collect_value, "p", maya_util_value_css_lcopy_value };
		static const GTypeInfo g_define_type_info = { sizeof (MayaUtilCssClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maya_util_css_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MayaUtilCss), 0, (GInstanceInitFunc) maya_util_css_instance_init, &g_define_type_value_table };
		static const GTypeFundamentalInfo g_define_type_fundamental_info = { (G_TYPE_FLAG_CLASSED | G_TYPE_FLAG_INSTANTIATABLE | G_TYPE_FLAG_DERIVABLE | G_TYPE_FLAG_DEEP_DERIVABLE) };
		GType maya_util_css_type_id;
		maya_util_css_type_id = g_type_register_fundamental (g_type_fundamental_next (), "MayaUtilCss", &g_define_type_info, &g_define_type_fundamental_info, 0);
		g_once_init_leave (&maya_util_css_type_id__volatile, maya_util_css_type_id);
	}
	return maya_util_css_type_id__volatile;
}


gpointer
maya_util_css_ref (gpointer instance)
{
	MayaUtilCss * self;
	self = instance;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_atomic_int_inc (&self->ref_count);
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return instance;
#line 4569 "Utils.c"
}


void
maya_util_css_unref (gpointer instance)
{
	MayaUtilCss * self;
	self = instance;
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (g_atomic_int_dec_and_test (&self->ref_count)) {
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		MAYA_UTIL_CSS_GET_CLASS (self)->finalize (self);
#line 548 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_type_free_instance ((GTypeInstance *) self);
#line 4584 "Utils.c"
	}
}


gchar*
maya_util_get_source_location (ESource* source)
{
	gchar* result = NULL;
	ESourceRegistry* registry = NULL;
	MayaModelCalendarModel* _tmp0_;
	MayaModelCalendarModel* _tmp1_;
	ESourceRegistry* _tmp2_;
	ESourceRegistry* _tmp3_;
	ESourceRegistry* _tmp4_;
	ESourceRegistry* _tmp5_;
	gchar* parent_uid = NULL;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	gchar* _tmp8_;
	ESource* parent_source = NULL;
	ESource* _tmp9_;
	gchar* _tmp41_;
#line 564 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_val_if_fail (source != NULL, NULL);
#line 565 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = maya_model_calendar_model_get_default ();
#line 565 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = _tmp0_;
#line 565 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = maya_model_calendar_model_get_registry (_tmp1_);
#line 565 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = _tmp2_;
#line 565 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = _g_object_ref0 (_tmp3_);
#line 565 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = _tmp4_;
#line 565 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (_tmp1_);
#line 565 "/run/build/planner/src/Services/Calendar/Utils.vala"
	registry = _tmp5_;
#line 566 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp6_ = e_source_get_parent (source);
#line 566 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp7_ = _tmp6_;
#line 566 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp8_ = g_strdup (_tmp7_);
#line 566 "/run/build/planner/src/Services/Calendar/Utils.vala"
	parent_uid = _tmp8_;
#line 567 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp9_ = _g_object_ref0 (source);
#line 567 "/run/build/planner/src/Services/Calendar/Utils.vala"
	parent_source = _tmp9_;
#line 568 "/run/build/planner/src/Services/Calendar/Utils.vala"
	while (TRUE) {
#line 4639 "Utils.c"
		ESource* _tmp10_;
		ESource* _tmp11_;
		const gchar* _tmp12_;
		const gchar* _tmp13_;
		gchar* _tmp14_;
		ESource* _tmp15_;
		ESource* _tmp26_;
		const gchar* _tmp37_;
		ESourceRegistry* _tmp38_;
		const gchar* _tmp39_;
		ESource* _tmp40_;
#line 568 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp10_ = parent_source;
#line 568 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (!(_tmp10_ != NULL)) {
#line 568 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4657 "Utils.c"
		}
#line 569 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp11_ = parent_source;
#line 569 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp12_ = e_source_get_parent (_tmp11_);
#line 569 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp13_ = _tmp12_;
#line 569 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp14_ = g_strdup (_tmp13_);
#line 569 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (parent_uid);
#line 569 "/run/build/planner/src/Services/Calendar/Utils.vala"
		parent_uid = _tmp14_;
#line 571 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp15_ = parent_source;
#line 571 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (e_source_has_extension (_tmp15_, E_SOURCE_EXTENSION_AUTHENTICATION)) {
#line 4675 "Utils.c"
			ESourceAuthentication* collection = NULL;
			ESource* _tmp16_;
			ESourceExtension* _tmp17_;
			ESourceAuthentication* _tmp18_;
			ESourceAuthentication* _tmp19_;
			const gchar* _tmp20_;
			const gchar* _tmp21_;
#line 572 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp16_ = parent_source;
#line 572 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp17_ = e_source_get_extension (_tmp16_, E_SOURCE_EXTENSION_AUTHENTICATION);
#line 572 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp18_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp17_, e_source_authentication_get_type (), ESourceAuthentication));
#line 572 "/run/build/planner/src/Services/Calendar/Utils.vala"
			collection = _tmp18_;
#line 573 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp19_ = collection;
#line 573 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp20_ = e_source_authentication_get_user (_tmp19_);
#line 573 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp21_ = _tmp20_;
#line 573 "/run/build/planner/src/Services/Calendar/Utils.vala"
			if (_tmp21_ != NULL) {
#line 4699 "Utils.c"
				ESourceAuthentication* _tmp22_;
				const gchar* _tmp23_;
				const gchar* _tmp24_;
				gchar* _tmp25_;
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp22_ = collection;
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp23_ = e_source_authentication_get_user (_tmp22_);
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp24_ = _tmp23_;
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp25_ = g_strdup (_tmp24_);
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				result = _tmp25_;
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (collection);
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (parent_source);
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_free0 (parent_uid);
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (registry);
#line 574 "/run/build/planner/src/Services/Calendar/Utils.vala"
				return result;
#line 4724 "Utils.c"
			}
#line 571 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_object_unref0 (collection);
#line 4728 "Utils.c"
		}
#line 578 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp26_ = parent_source;
#line 578 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (e_source_has_extension (_tmp26_, E_SOURCE_EXTENSION_COLLECTION)) {
#line 4734 "Utils.c"
			ESourceCollection* collection = NULL;
			ESource* _tmp27_;
			ESourceExtension* _tmp28_;
			ESourceCollection* _tmp29_;
			ESourceCollection* _tmp30_;
			const gchar* _tmp31_;
			const gchar* _tmp32_;
#line 579 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp27_ = parent_source;
#line 579 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp28_ = e_source_get_extension (_tmp27_, E_SOURCE_EXTENSION_COLLECTION);
#line 579 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp29_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp28_, e_source_collection_get_type (), ESourceCollection));
#line 579 "/run/build/planner/src/Services/Calendar/Utils.vala"
			collection = _tmp29_;
#line 580 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp30_ = collection;
#line 580 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp31_ = e_source_collection_get_identity (_tmp30_);
#line 580 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp32_ = _tmp31_;
#line 580 "/run/build/planner/src/Services/Calendar/Utils.vala"
			if (_tmp32_ != NULL) {
#line 4758 "Utils.c"
				ESourceCollection* _tmp33_;
				const gchar* _tmp34_;
				const gchar* _tmp35_;
				gchar* _tmp36_;
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp33_ = collection;
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp34_ = e_source_collection_get_identity (_tmp33_);
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp35_ = _tmp34_;
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_tmp36_ = g_strdup (_tmp35_);
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				result = _tmp36_;
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (collection);
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (parent_source);
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_free0 (parent_uid);
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				_g_object_unref0 (registry);
#line 581 "/run/build/planner/src/Services/Calendar/Utils.vala"
				return result;
#line 4783 "Utils.c"
			}
#line 578 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_object_unref0 (collection);
#line 4787 "Utils.c"
		}
#line 585 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp37_ = parent_uid;
#line 585 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (_tmp37_ == NULL) {
#line 586 "/run/build/planner/src/Services/Calendar/Utils.vala"
			break;
#line 4795 "Utils.c"
		}
#line 588 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp38_ = registry;
#line 588 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp39_ = parent_uid;
#line 588 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp40_ = e_source_registry_ref_source (_tmp38_, _tmp39_);
#line 588 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (parent_source);
#line 588 "/run/build/planner/src/Services/Calendar/Utils.vala"
		parent_source = _tmp40_;
#line 4807 "Utils.c"
	}
#line 591 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp41_ = g_strdup (_ ("On this computer"));
#line 591 "/run/build/planner/src/Services/Calendar/Utils.vala"
	result = _tmp41_;
#line 591 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (parent_source);
#line 591 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_free0 (parent_uid);
#line 591 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (registry);
#line 591 "/run/build/planner/src/Services/Calendar/Utils.vala"
	return result;
#line 4821 "Utils.c"
}


static guint8*
g_string_get_data (GString* self,
                   int* result_length1)
{
	guint8* result;
	guint8* res = NULL;
	const gchar* _tmp0_;
	gint res_length1;
	gint _res_size_;
	gssize _tmp1_;
	gint _tmp2_;
	guint8* _tmp3_;
	gint _tmp3__length1;
	guint8* _tmp4_;
	gint _tmp4__length1;
#line 4965 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 4966 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = self->str;
#line 4966 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	res = (guint8*) _tmp0_;
#line 4966 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	res_length1 = -1;
#line 4966 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_res_size_ = res_length1;
#line 4967 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = self->len;
#line 4967 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	res_length1 = (gint) _tmp1_;
#line 4967 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp2_ = res_length1;
#line 4968 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp3_ = res;
#line 4968 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp3__length1 = res_length1;
#line 4968 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp4_ = _tmp3_;
#line 4968 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp4__length1 = _tmp3__length1;
#line 4968 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (result_length1) {
#line 4968 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		*result_length1 = _tmp4__length1;
#line 4868 "Utils.c"
	}
#line 4968 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp4_;
#line 4968 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 4874 "Utils.c"
}


void
maya_util_save_temp_selected_calendars (void)
{
	MayaModelCalendarModel* calmodel = NULL;
	MayaModelCalendarModel* _tmp0_;
	GeeCollection* events = NULL;
	MayaModelCalendarModel* _tmp1_;
	GeeCollection* _tmp2_;
	GString* builder = NULL;
	GString* _tmp3_;
	GString* _tmp4_;
	GString* _tmp5_;
	GString* _tmp15_;
	gchar* file_path = NULL;
	const gchar* _tmp16_;
	gchar* _tmp17_;
	GError * _inner_error_ = NULL;
#line 599 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = maya_model_calendar_model_get_default ();
#line 599 "/run/build/planner/src/Services/Calendar/Utils.vala"
	calmodel = _tmp0_;
#line 600 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = calmodel;
#line 600 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = maya_model_calendar_model_get_events (_tmp1_);
#line 600 "/run/build/planner/src/Services/Calendar/Utils.vala"
	events = _tmp2_;
#line 601 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = g_string_new ("");
#line 601 "/run/build/planner/src/Services/Calendar/Utils.vala"
	builder = _tmp3_;
#line 602 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp4_ = builder;
#line 602 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_string_append (_tmp4_, "BEGIN:VCALENDAR\n");
#line 603 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = builder;
#line 603 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_string_append (_tmp5_, "VERSION:2.0\n");
#line 4917 "Utils.c"
	{
		GeeIterator* _event_it = NULL;
		GeeCollection* _tmp6_;
		GeeIterator* _tmp7_;
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp6_ = events;
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp7_ = gee_iterable_iterator ((GeeIterable*) _tmp6_);
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_event_it = _tmp7_;
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
		while (TRUE) {
#line 4930 "Utils.c"
			GeeIterator* _tmp8_;
			ECalComponent* event = NULL;
			GeeIterator* _tmp9_;
			gpointer _tmp10_;
			GString* _tmp11_;
			ECalComponent* _tmp12_;
			gchar* _tmp13_;
			gchar* _tmp14_;
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp8_ = _event_it;
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
			if (!gee_iterator_next (_tmp8_)) {
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
				break;
#line 4945 "Utils.c"
			}
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp9_ = _event_it;
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp10_ = gee_iterator_get (_tmp9_);
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
			event = (ECalComponent*) _tmp10_;
#line 605 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp11_ = builder;
#line 605 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp12_ = event;
#line 605 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp13_ = e_cal_component_get_as_string (_tmp12_);
#line 605 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_tmp14_ = _tmp13_;
#line 605 "/run/build/planner/src/Services/Calendar/Utils.vala"
			g_string_append (_tmp11_, _tmp14_);
#line 605 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_free0 (_tmp14_);
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_object_unref0 (event);
#line 4967 "Utils.c"
		}
#line 604 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (_event_it);
#line 4971 "Utils.c"
	}
#line 607 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp15_ = builder;
#line 607 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_string_append (_tmp15_, "END:VCALENDAR");
#line 609 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp16_ = g_get_tmp_dir ();
#line 609 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp17_ = g_strconcat (_tmp16_, "/calendar.ics", NULL);
#line 609 "/run/build/planner/src/Services/Calendar/Utils.vala"
	file_path = _tmp17_;
#line 4983 "Utils.c"
	{
		GFile* file = NULL;
		GFile* _tmp18_;
		GString* _tmp19_;
		guint8* _tmp20_;
		gint _tmp20__length1;
		guint8* _tmp21_;
		gint _tmp21__length1;
#line 611 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp18_ = g_file_new_for_path (file_path);
#line 611 "/run/build/planner/src/Services/Calendar/Utils.vala"
		file = _tmp18_;
#line 612 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp19_ = builder;
#line 612 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp20_ = g_string_get_data (_tmp19_, &_tmp20__length1);
#line 612 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp21_ = _tmp20_;
#line 612 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp21__length1 = _tmp20__length1;
#line 612 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_file_replace_contents (file, _tmp21_, (gsize) _tmp21__length1, NULL, FALSE, G_FILE_CREATE_REPLACE_DESTINATION, NULL, NULL, &_inner_error_);
#line 612 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 612 "/run/build/planner/src/Services/Calendar/Utils.vala"
			_g_object_unref0 (file);
#line 5010 "Utils.c"
			goto __catch27_g_error;
		}
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (file);
#line 5015 "Utils.c"
	}
	goto __finally27;
	__catch27_g_error:
	{
		GError* e = NULL;
		GError* _tmp22_;
		const gchar* _tmp23_;
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		e = _inner_error_;
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_inner_error_ = NULL;
#line 614 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp22_ = e;
#line 614 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp23_ = _tmp22_->message;
#line 614 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_warning ("Utils.vala:614: %s\n", _tmp23_);
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_error_free0 (e);
#line 5035 "Utils.c"
	}
	__finally27:
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (file_path);
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_string_free0 (builder);
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (events);
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (calmodel);
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_clear_error (&_inner_error_);
#line 610 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return;
#line 5054 "Utils.c"
	}
#line 598 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_free0 (file_path);
#line 598 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_string_free0 (builder);
#line 598 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (events);
#line 598 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (calmodel);
#line 5064 "Utils.c"
}


gboolean
maya_util_show_weeks (void)
{
	gboolean result = FALSE;
	GSettingsSchemaSource* _tmp0_;
	GSettingsSchema* _tmp1_;
	GSettingsSchema* _tmp2_;
	gboolean _tmp3_;
#line 621 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = g_settings_schema_source_get_default ();
#line 621 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = g_settings_schema_source_lookup (_tmp0_, MAYA_UTIL_SHOW_WEEKS_SCHEMA, FALSE);
#line 621 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = _tmp1_;
#line 621 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = _tmp2_ != NULL;
#line 621 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_settings_schema_unref0 (_tmp2_);
#line 621 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp3_) {
#line 5088 "Utils.c"
		GSettings* weeks = NULL;
		GSettings* _tmp4_;
		GSettings* _tmp5_;
#line 622 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp4_ = g_settings_new (MAYA_UTIL_SHOW_WEEKS_SCHEMA);
#line 622 "/run/build/planner/src/Services/Calendar/Utils.vala"
		weeks = _tmp4_;
#line 623 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp5_ = weeks;
#line 623 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = g_settings_get_boolean (_tmp5_, "show-weeks");
#line 623 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (weeks);
#line 623 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 5104 "Utils.c"
	} else {
		MayaSettingsSavedState* _tmp6_;
		MayaSettingsSavedState* _tmp7_;
		gboolean _tmp8_;
		gboolean _tmp9_;
		gboolean _tmp10_;
#line 625 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp6_ = maya_settings_saved_state_get_default ();
#line 625 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp7_ = _tmp6_;
#line 625 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp8_ = maya_settings_saved_state_get_show_weeks (_tmp7_);
#line 625 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp9_ = _tmp8_;
#line 625 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp10_ = _tmp9_;
#line 625 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (_tmp7_);
#line 625 "/run/build/planner/src/Services/Calendar/Utils.vala"
		result = _tmp10_;
#line 625 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return result;
#line 5127 "Utils.c"
	}
}


void
maya_util_toggle_show_weeks (void)
{
	GSettingsSchemaSource* _tmp0_;
	GSettingsSchema* _tmp1_;
	GSettingsSchema* _tmp2_;
	gboolean _tmp3_;
#line 630 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = g_settings_schema_source_get_default ();
#line 630 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = g_settings_schema_source_lookup (_tmp0_, MAYA_UTIL_SHOW_WEEKS_SCHEMA, FALSE);
#line 630 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = _tmp1_;
#line 630 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = _tmp2_ != NULL;
#line 630 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_settings_schema_unref0 (_tmp2_);
#line 630 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (_tmp3_) {
#line 5151 "Utils.c"
		GSettings* weeks = NULL;
		GSettings* _tmp4_;
		GSettings* _tmp5_;
		GSettings* _tmp6_;
#line 631 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp4_ = g_settings_new (MAYA_UTIL_SHOW_WEEKS_SCHEMA);
#line 631 "/run/build/planner/src/Services/Calendar/Utils.vala"
		weeks = _tmp4_;
#line 632 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp5_ = weeks;
#line 632 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp6_ = weeks;
#line 632 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_settings_set_boolean (_tmp5_, "show-weeks", !g_settings_get_boolean (_tmp6_, "show-weeks"));
#line 630 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (weeks);
#line 5168 "Utils.c"
	} else {
		MayaSettingsSavedState* _tmp7_;
		MayaSettingsSavedState* _tmp8_;
		MayaSettingsSavedState* _tmp9_;
		MayaSettingsSavedState* _tmp10_;
		gboolean _tmp11_;
		gboolean _tmp12_;
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp7_ = maya_settings_saved_state_get_default ();
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp8_ = _tmp7_;
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp9_ = maya_settings_saved_state_get_default ();
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp10_ = _tmp9_;
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp11_ = maya_settings_saved_state_get_show_weeks (_tmp10_);
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp12_ = _tmp11_;
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		maya_settings_saved_state_set_show_weeks (_tmp8_, !_tmp12_);
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (_tmp10_);
#line 634 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (_tmp8_);
#line 5194 "Utils.c"
	}
}


void
maya_util_style_calendar_color (GtkWidget* widget,
                                const gchar* color,
                                gboolean background)
{
	gchar* style = NULL;
	gchar* _tmp0_;
	GtkStyleContext* style_context = NULL;
	GtkStyleContext* _tmp1_;
	GtkStyleContext* _tmp2_;
	GtkStyleContext* _tmp3_;
	const gchar* _tmp4_ = NULL;
	gchar* css_color = NULL;
	const gchar* _tmp5_;
	gchar* _tmp6_;
	GtkCssProvider* style_provider = NULL;
	GtkCssProvider* _tmp7_;
	GError * _inner_error_ = NULL;
#line 638 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (widget != NULL);
#line 638 "/run/build/planner/src/Services/Calendar/Utils.vala"
	g_return_if_fail (color != NULL);
#line 639 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp0_ = g_strdup ("\n" \
"                        .cal_color { \n" \
"                            %s: %s;\n" \
"                            border-radius: 3px;\n" \
"                        }\n" \
"                       ");
#line 639 "/run/build/planner/src/Services/Calendar/Utils.vala"
	style = _tmp0_;
#line 646 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp1_ = gtk_widget_get_style_context (widget);
#line 646 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp2_ = _g_object_ref0 (_tmp1_);
#line 646 "/run/build/planner/src/Services/Calendar/Utils.vala"
	style_context = _tmp2_;
#line 647 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp3_ = style_context;
#line 647 "/run/build/planner/src/Services/Calendar/Utils.vala"
	gtk_style_context_add_class (_tmp3_, "cal_color");
#line 648 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (background) {
#line 648 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp4_ = "background-color";
#line 5239 "Utils.c"
	} else {
#line 648 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp4_ = "color";
#line 5243 "Utils.c"
	}
#line 648 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp5_ = style;
#line 648 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp6_ = g_strdup_printf (_tmp5_, _tmp4_, color);
#line 648 "/run/build/planner/src/Services/Calendar/Utils.vala"
	css_color = _tmp6_;
#line 649 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_tmp7_ = gtk_css_provider_new ();
#line 649 "/run/build/planner/src/Services/Calendar/Utils.vala"
	style_provider = _tmp7_;
#line 5255 "Utils.c"
	{
		gint _tmp8_;
		gint _tmp9_;
		GtkStyleContext* _tmp10_;
#line 652 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp8_ = strlen (css_color);
#line 652 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp9_ = _tmp8_;
#line 652 "/run/build/planner/src/Services/Calendar/Utils.vala"
		gtk_css_provider_load_from_data (style_provider, css_color, (gssize) _tmp9_, &_inner_error_);
#line 652 "/run/build/planner/src/Services/Calendar/Utils.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 5268 "Utils.c"
			goto __catch28_g_error;
		}
#line 653 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp10_ = style_context;
#line 653 "/run/build/planner/src/Services/Calendar/Utils.vala"
		gtk_style_context_add_provider (_tmp10_, (GtkStyleProvider*) style_provider, (guint) GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
#line 5275 "Utils.c"
	}
	goto __finally28;
	__catch28_g_error:
	{
		GError* e = NULL;
		GError* _tmp11_;
		const gchar* _tmp12_;
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		e = _inner_error_;
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_inner_error_ = NULL;
#line 655 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp11_ = e;
#line 655 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_tmp12_ = _tmp11_->message;
#line 655 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_warning ("Utils.vala:655: Could not create CSS Provider: %s\nStylesheet:\n%s", _tmp12_, css_color);
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_error_free0 (e);
#line 5295 "Utils.c"
	}
	__finally28:
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (style_provider);
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (css_color);
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_object_unref0 (style_context);
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		_g_free0 (style);
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		g_clear_error (&_inner_error_);
#line 651 "/run/build/planner/src/Services/Calendar/Utils.vala"
		return;
#line 5314 "Utils.c"
	}
#line 638 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (style_provider);
#line 638 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_free0 (css_color);
#line 638 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_object_unref0 (style_context);
#line 638 "/run/build/planner/src/Services/Calendar/Utils.vala"
	_g_free0 (style);
#line 5324 "Utils.c"
}



