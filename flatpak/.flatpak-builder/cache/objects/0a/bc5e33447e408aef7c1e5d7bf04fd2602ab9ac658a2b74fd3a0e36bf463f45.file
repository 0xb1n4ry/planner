/* NotificationsPopover.c generated by valac 0.40.11, the Vala compiler
 * generated from NotificationsPopover.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>


#define WIDGETS_POPOVERS_TYPE_NOTIFICATIONS_POPOVER (widgets_popovers_notifications_popover_get_type ())
#define WIDGETS_POPOVERS_NOTIFICATIONS_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_POPOVERS_TYPE_NOTIFICATIONS_POPOVER, WidgetsPopoversNotificationsPopover))
#define WIDGETS_POPOVERS_NOTIFICATIONS_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_POPOVERS_TYPE_NOTIFICATIONS_POPOVER, WidgetsPopoversNotificationsPopoverClass))
#define WIDGETS_POPOVERS_IS_NOTIFICATIONS_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_POPOVERS_TYPE_NOTIFICATIONS_POPOVER))
#define WIDGETS_POPOVERS_IS_NOTIFICATIONS_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_POPOVERS_TYPE_NOTIFICATIONS_POPOVER))
#define WIDGETS_POPOVERS_NOTIFICATIONS_POPOVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_POPOVERS_TYPE_NOTIFICATIONS_POPOVER, WidgetsPopoversNotificationsPopoverClass))

typedef struct _WidgetsPopoversNotificationsPopover WidgetsPopoversNotificationsPopover;
typedef struct _WidgetsPopoversNotificationsPopoverClass WidgetsPopoversNotificationsPopoverClass;
typedef struct _WidgetsPopoversNotificationsPopoverPrivate WidgetsPopoversNotificationsPopoverPrivate;
enum  {
	WIDGETS_POPOVERS_NOTIFICATIONS_POPOVER_0_PROPERTY,
	WIDGETS_POPOVERS_NOTIFICATIONS_POPOVER_NUM_PROPERTIES
};
static GParamSpec* widgets_popovers_notifications_popover_properties[WIDGETS_POPOVERS_NOTIFICATIONS_POPOVER_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _WidgetsPopoversNotificationsPopover {
	GtkPopover parent_instance;
	WidgetsPopoversNotificationsPopoverPrivate * priv;
};

struct _WidgetsPopoversNotificationsPopoverClass {
	GtkPopoverClass parent_class;
};


static gpointer widgets_popovers_notifications_popover_parent_class = NULL;

GType widgets_popovers_notifications_popover_get_type (void) G_GNUC_CONST;
WidgetsPopoversNotificationsPopover* widgets_popovers_notifications_popover_new (GtkWidget* relative);
WidgetsPopoversNotificationsPopover* widgets_popovers_notifications_popover_construct (GType object_type,
                                                                                       GtkWidget* relative);
static GObject * widgets_popovers_notifications_popover_constructor (GType type,
                                                              guint n_construct_properties,
                                                              GObjectConstructParam * construct_properties);


WidgetsPopoversNotificationsPopover*
widgets_popovers_notifications_popover_construct (GType object_type,
                                                  GtkWidget* relative)
{
	WidgetsPopoversNotificationsPopover * self = NULL;
#line 23 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	g_return_val_if_fail (relative != NULL, NULL);
#line 24 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	self = (WidgetsPopoversNotificationsPopover*) g_object_new (object_type, "relative-to", relative, "modal", TRUE, "position", GTK_POS_BOTTOM, NULL);
#line 23 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	return self;
#line 81 "NotificationsPopover.c"
}


WidgetsPopoversNotificationsPopover*
widgets_popovers_notifications_popover_new (GtkWidget* relative)
{
#line 23 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	return widgets_popovers_notifications_popover_construct (WIDGETS_POPOVERS_TYPE_NOTIFICATIONS_POPOVER, relative);
#line 90 "NotificationsPopover.c"
}


static GObject *
widgets_popovers_notifications_popover_constructor (GType type,
                                                    guint n_construct_properties,
                                                    GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsPopoversNotificationsPopover * self;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp0_;
	GtkGrid* _tmp1_;
	GtkGrid* _tmp2_;
	GtkGrid* _tmp3_;
	GtkGrid* _tmp4_;
#line 31 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	parent_class = G_OBJECT_CLASS (widgets_popovers_notifications_popover_parent_class);
#line 31 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 31 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_POPOVERS_TYPE_NOTIFICATIONS_POPOVER, WidgetsPopoversNotificationsPopover);
#line 32 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	_tmp0_ = (GtkGrid*) gtk_grid_new ();
#line 32 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	g_object_ref_sink (_tmp0_);
#line 32 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	main_grid = _tmp0_;
#line 33 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	_tmp1_ = main_grid;
#line 33 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	g_object_set ((GtkWidget*) _tmp1_, "expand", TRUE, NULL);
#line 34 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	_tmp2_ = main_grid;
#line 34 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp2_, GTK_ORIENTATION_VERTICAL);
#line 35 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	_tmp3_ = main_grid;
#line 35 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	g_object_set ((GtkWidget*) _tmp3_, "width-request", 250, NULL);
#line 37 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	_tmp4_ = main_grid;
#line 37 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp4_);
#line 31 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	_g_object_unref0 (main_grid);
#line 31 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	return obj;
#line 140 "NotificationsPopover.c"
}


static void
widgets_popovers_notifications_popover_class_init (WidgetsPopoversNotificationsPopoverClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	widgets_popovers_notifications_popover_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Widgets/Popovers/NotificationsPopover.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_popovers_notifications_popover_constructor;
#line 151 "NotificationsPopover.c"
}


static void
widgets_popovers_notifications_popover_instance_init (WidgetsPopoversNotificationsPopover * self)
{
}


GType
widgets_popovers_notifications_popover_get_type (void)
{
	static volatile gsize widgets_popovers_notifications_popover_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_popovers_notifications_popover_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsPopoversNotificationsPopoverClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_popovers_notifications_popover_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsPopoversNotificationsPopover), 0, (GInstanceInitFunc) widgets_popovers_notifications_popover_instance_init, NULL };
		GType widgets_popovers_notifications_popover_type_id;
		widgets_popovers_notifications_popover_type_id = g_type_register_static (gtk_popover_get_type (), "WidgetsPopoversNotificationsPopover", &g_define_type_info, 0);
		g_once_init_leave (&widgets_popovers_notifications_popover_type_id__volatile, widgets_popovers_notifications_popover_type_id);
	}
	return widgets_popovers_notifications_popover_type_id__volatile;
}



