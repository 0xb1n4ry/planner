/* LocalBackend.c generated by valac 0.40.11, the Vala compiler
 * generated from LocalBackend.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2013 Maya Developers (https://launchpad.net/maya)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA.
 *
 * Authored by: Corentin NoÃ«l <tintou@mailoo.org>
 */


#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <libedataserver/libedataserver.h>
#include <gee.h>
#include <glib/gi18n-lib.h>
#include <gio/gio.h>


#define MAYA_TYPE_BACKEND (maya_backend_get_type ())
#define MAYA_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_TYPE_BACKEND, MayaBackend))
#define MAYA_IS_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_TYPE_BACKEND))
#define MAYA_BACKEND_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), MAYA_TYPE_BACKEND, MayaBackendIface))

typedef struct _MayaBackend MayaBackend;
typedef struct _MayaBackendIface MayaBackendIface;

#define MAYA_TYPE_PLACEMENT_WIDGET (maya_placement_widget_get_type ())
#define MAYA_PLACEMENT_WIDGET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_TYPE_PLACEMENT_WIDGET, MayaPlacementWidget))
#define MAYA_PLACEMENT_WIDGET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_TYPE_PLACEMENT_WIDGET, MayaPlacementWidgetClass))
#define MAYA_IS_PLACEMENT_WIDGET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_TYPE_PLACEMENT_WIDGET))
#define MAYA_IS_PLACEMENT_WIDGET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_TYPE_PLACEMENT_WIDGET))
#define MAYA_PLACEMENT_WIDGET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_TYPE_PLACEMENT_WIDGET, MayaPlacementWidgetClass))

typedef struct _MayaPlacementWidget MayaPlacementWidget;
typedef struct _MayaPlacementWidgetClass MayaPlacementWidgetClass;

#define MAYA_TYPE_LOCAL_BACKEND (maya_local_backend_get_type ())
#define MAYA_LOCAL_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_TYPE_LOCAL_BACKEND, MayaLocalBackend))
#define MAYA_LOCAL_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_TYPE_LOCAL_BACKEND, MayaLocalBackendClass))
#define MAYA_IS_LOCAL_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_TYPE_LOCAL_BACKEND))
#define MAYA_IS_LOCAL_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_TYPE_LOCAL_BACKEND))
#define MAYA_LOCAL_BACKEND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_TYPE_LOCAL_BACKEND, MayaLocalBackendClass))

typedef struct _MayaLocalBackend MayaLocalBackend;
typedef struct _MayaLocalBackendClass MayaLocalBackendClass;
typedef struct _MayaLocalBackendPrivate MayaLocalBackendPrivate;
enum  {
	MAYA_LOCAL_BACKEND_0_PROPERTY,
	MAYA_LOCAL_BACKEND_NUM_PROPERTIES
};
static GParamSpec* maya_local_backend_properties[MAYA_LOCAL_BACKEND_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
typedef struct _MayaLocalBackendAddSourceData MayaLocalBackendAddSourceData;
typedef struct _MayaLocalBackendSetSourceDefaultData MayaLocalBackendSetSourceDefaultData;

struct _MayaBackendIface {
	GTypeInterface parent_iface;
	gchar* (*get_name) (MayaBackend* self);
	gchar* (*get_uid) (MayaBackend* self);
	GeeCollection* (*get_new_calendar_widget) (MayaBackend* self, ESource* to_edit);
	void (*add_new_calendar) (MayaBackend* self, const gchar* name, const gchar* color, gboolean set_default, GeeCollection* widgets);
	void (*modify_calendar) (MayaBackend* self, const gchar* name, const gchar* color, gboolean set_default, GeeCollection* widgets, ESource* source);
};

struct _MayaLocalBackend {
	GObject parent_instance;
	MayaLocalBackendPrivate * priv;
};

struct _MayaLocalBackendClass {
	GObjectClass parent_class;
};

struct _MayaLocalBackendPrivate {
	ESourceRegistry* registry;
};

struct _MayaLocalBackendAddSourceData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	MayaLocalBackend* self;
	ESource* new_source;
	gboolean set_default;
	ESourceRegistry* _tmp0_;
	ESourceRegistry* _tmp1_;
	ESourceRegistry* _tmp2_;
	ESourceRegistry* _tmp3_;
	ESourceRegistry* _tmp4_;
	GError* _error_;
	GError* _tmp5_;
	const gchar* _tmp6_;
	GError * _inner_error_;
};

struct _MayaLocalBackendSetSourceDefaultData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	MayaLocalBackend* self;
	ESource* source;
	ESourceRegistry* _tmp0_;
	ESourceRegistry* _tmp1_;
	ESourceRegistry* _tmp2_;
	ESourceRegistry* _tmp3_;
	ESourceRegistry* _tmp4_;
	GError* _error_;
	GError* _tmp5_;
	const gchar* _tmp6_;
	GError * _inner_error_;
};


static gpointer maya_local_backend_parent_class = NULL;
static MayaBackendIface * maya_local_backend_maya_backend_parent_iface = NULL;

GType maya_placement_widget_get_type (void) G_GNUC_CONST;
GType maya_backend_get_type (void) G_GNUC_CONST;
GType maya_local_backend_get_type (void) G_GNUC_CONST;
#define MAYA_LOCAL_BACKEND_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), MAYA_TYPE_LOCAL_BACKEND, MayaLocalBackendPrivate))
static gchar* maya_local_backend_real_get_name (MayaBackend* base);
static gchar* maya_local_backend_real_get_uid (MayaBackend* base);
static GeeCollection* maya_local_backend_real_get_new_calendar_widget (MayaBackend* base,
                                                                ESource* to_edit);
static void maya_local_backend_real_add_new_calendar (MayaBackend* base,
                                               const gchar* name,
                                               const gchar* color,
                                               gboolean set_default,
                                               GeeCollection* widgets);
gchar* maya_backend_get_uid (MayaBackend* self);
void maya_local_backend_add_source (MayaLocalBackend* self,
                                    ESource* new_source,
                                    gboolean set_default,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_);
void maya_local_backend_add_source_finish (MayaLocalBackend* self,
                                           GAsyncResult* _res_);
static void maya_local_backend_add_source_data_free (gpointer _data);
static void maya_local_backend_add_source_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data);
static gboolean maya_local_backend_add_source_co (MayaLocalBackendAddSourceData* _data_);
static void maya_local_backend_add_source_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_);
void maya_local_backend_set_source_default (MayaLocalBackend* self,
                                            ESource* source,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_);
void maya_local_backend_set_source_default_finish (MayaLocalBackend* self,
                                                   GAsyncResult* _res_);
static void maya_local_backend_set_source_default_data_free (gpointer _data);
static void maya_local_backend_set_source_default_async_ready_wrapper (GObject *source_object,
                                                                GAsyncResult *res,
                                                                void *user_data);
static gboolean maya_local_backend_set_source_default_co (MayaLocalBackendSetSourceDefaultData* _data_);
static void maya_local_backend_set_source_default_ready (GObject* source_object,
                                                  GAsyncResult* _res_,
                                                  gpointer _user_data_);
static void maya_local_backend_real_modify_calendar (MayaBackend* base,
                                              const gchar* name,
                                              const gchar* color,
                                              gboolean set_default,
                                              GeeCollection* widgets,
                                              ESource* source);
MayaLocalBackend* maya_local_backend_new (void);
MayaLocalBackend* maya_local_backend_construct (GType object_type);
static void maya_local_backend_finalize (GObject * obj);


static gchar*
maya_local_backend_real_get_name (MayaBackend* base)
{
	MayaLocalBackend * self;
	gchar* result = NULL;
	gchar* _tmp0_;
#line 26 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	self = (MayaLocalBackend*) base;
#line 27 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp0_ = g_strdup (_ ("On this computer"));
#line 27 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	result = _tmp0_;
#line 27 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	return result;
#line 212 "LocalBackend.c"
}


static gchar*
maya_local_backend_real_get_uid (MayaBackend* base)
{
	MayaLocalBackend * self;
	gchar* result = NULL;
	gchar* _tmp0_;
#line 30 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	self = (MayaLocalBackend*) base;
#line 31 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp0_ = g_strdup ("local-stub");
#line 31 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	result = _tmp0_;
#line 31 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	return result;
#line 230 "LocalBackend.c"
}


static GeeCollection*
maya_local_backend_real_get_new_calendar_widget (MayaBackend* base,
                                                 ESource* to_edit)
{
	MayaLocalBackend * self;
	GeeCollection* result = NULL;
	GeeLinkedList* _tmp0_;
#line 34 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	self = (MayaLocalBackend*) base;
#line 35 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp0_ = gee_linked_list_new (MAYA_TYPE_PLACEMENT_WIDGET, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL);
#line 35 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	result = (GeeCollection*) _tmp0_;
#line 35 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	return result;
#line 249 "LocalBackend.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 43 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	return self ? g_object_ref (self) : NULL;
#line 258 "LocalBackend.c"
}


static void
maya_local_backend_real_add_new_calendar (MayaBackend* base,
                                          const gchar* name,
                                          const gchar* color,
                                          gboolean set_default,
                                          GeeCollection* widgets)
{
	MayaLocalBackend * self;
	GError * _inner_error_ = NULL;
#line 38 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	self = (MayaLocalBackend*) base;
#line 38 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_return_if_fail (name != NULL);
#line 38 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_return_if_fail (color != NULL);
#line 38 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_return_if_fail (widgets != NULL);
#line 279 "LocalBackend.c"
	{
		ESource* new_source = NULL;
		ESource* _tmp0_;
		gchar* _tmp1_;
		gchar* _tmp2_;
		ESourceCalendar* cal = NULL;
		ESourceExtension* _tmp3_;
		ESourceCalendar* _tmp4_;
		ESourceCalendar* _tmp5_;
		ESourceCalendar* _tmp6_;
#line 40 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp0_ = e_source_new (NULL, NULL, &_inner_error_);
#line 40 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		new_source = _tmp0_;
#line 40 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 296 "LocalBackend.c"
			goto __catch1_g_error;
		}
#line 41 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		e_source_set_display_name (new_source, name);
#line 42 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp1_ = maya_backend_get_uid ((MayaBackend*) self);
#line 42 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp2_ = _tmp1_;
#line 42 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		e_source_set_parent (new_source, _tmp2_);
#line 42 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_g_free0 (_tmp2_);
#line 43 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp3_ = e_source_get_extension (new_source, E_SOURCE_EXTENSION_CALENDAR);
#line 43 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp4_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, e_source_calendar_get_type (), ESourceCalendar));
#line 43 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		cal = _tmp4_;
#line 44 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp5_ = cal;
#line 44 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		e_source_selectable_set_color ((ESourceSelectable*) _tmp5_, color);
#line 45 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp6_ = cal;
#line 45 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		e_source_backend_set_backend_name ((ESourceBackend*) _tmp6_, "local");
#line 46 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		maya_local_backend_add_source (self, new_source, set_default, NULL, NULL);
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_g_object_unref0 (cal);
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_g_object_unref0 (new_source);
#line 329 "LocalBackend.c"
	}
	goto __finally1;
	__catch1_g_error:
	{
		GError* _error_ = NULL;
		GError* _tmp7_;
		const gchar* _tmp8_;
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_error_ = _inner_error_;
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_inner_error_ = NULL;
#line 48 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp7_ = _error_;
#line 48 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_tmp8_ = _tmp7_->message;
#line 48 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_critical ("LocalBackend.vala:48: %s", _tmp8_);
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_g_error_free0 (_error_);
#line 349 "LocalBackend.c"
	}
	__finally1:
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_clear_error (&_inner_error_);
#line 39 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		return;
#line 360 "LocalBackend.c"
	}
}


static void
maya_local_backend_add_source_data_free (gpointer _data)
{
	MayaLocalBackendAddSourceData* _data_;
	_data_ = _data;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_g_object_unref0 (_data_->new_source);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_g_object_unref0 (_data_->self);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_slice_free (MayaLocalBackendAddSourceData, _data_);
#line 376 "LocalBackend.c"
}


static void
maya_local_backend_add_source_async_ready_wrapper (GObject *source_object,
                                                   GAsyncResult *res,
                                                   void *user_data)
{
	MayaLocalBackendAddSourceData* _task_data_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (_task_data_->_callback_ != NULL) {
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 392 "LocalBackend.c"
	}
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_task_data_->_task_complete_ = TRUE;
#line 396 "LocalBackend.c"
}


void
maya_local_backend_add_source (MayaLocalBackend* self,
                               ESource* new_source,
                               gboolean set_default,
                               GAsyncReadyCallback _callback_,
                               gpointer _user_data_)
{
	MayaLocalBackendAddSourceData* _data_;
	MayaLocalBackend* _tmp0_;
	ESource* _tmp1_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_ = g_slice_new0 (MayaLocalBackendAddSourceData);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_callback_ = _callback_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, maya_local_backend_add_source_async_ready_wrapper, _user_data_);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (_callback_ == NULL) {
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_task_complete_ = TRUE;
#line 420 "LocalBackend.c"
	}
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_task_set_task_data (_data_->_async_result, _data_, maya_local_backend_add_source_data_free);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->self = _tmp0_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp1_ = _g_object_ref0 (new_source);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_g_object_unref0 (_data_->new_source);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->new_source = _tmp1_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->set_default = set_default;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	maya_local_backend_add_source_co (_data_);
#line 438 "LocalBackend.c"
}


void
maya_local_backend_add_source_finish (MayaLocalBackend* self,
                                      GAsyncResult* _res_)
{
	MayaLocalBackendAddSourceData* _data_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 449 "LocalBackend.c"
}


static void
maya_local_backend_add_source_ready (GObject* source_object,
                                     GAsyncResult* _res_,
                                     gpointer _user_data_)
{
	MayaLocalBackendAddSourceData* _data_;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_ = _user_data_;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_source_object_ = source_object;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_res_ = _res_;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_task_complete_ = TRUE;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	maya_local_backend_add_source_co (_data_);
#line 469 "LocalBackend.c"
}


static gboolean
maya_local_backend_add_source_co (MayaLocalBackendAddSourceData* _data_)
{
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	switch (_data_->_state_) {
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		case 0:
#line 480 "LocalBackend.c"
		goto _state_0;
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		case 1:
#line 484 "LocalBackend.c"
		goto _state_1;
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		case 2:
#line 488 "LocalBackend.c"
		goto _state_2;
		default:
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_assert_not_reached ();
#line 493 "LocalBackend.c"
	}
	_state_0:
	{
#line 54 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_tmp0_ = _data_->self->priv->registry;
#line 54 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		if (_data_->_tmp0_ == NULL) {
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_state_ = 1;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			e_source_registry_new (NULL, maya_local_backend_add_source_ready, _data_);
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			return FALSE;
#line 507 "LocalBackend.c"
			_state_1:
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_tmp2_ = e_source_registry_new_finish (_data_->_res_, &_data_->_inner_error_);
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_tmp1_ = _data_->_tmp2_;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 515 "LocalBackend.c"
				goto __catch2_g_error;
			}
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_tmp3_ = _data_->_tmp1_;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_tmp1_ = NULL;
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_g_object_unref0 (_data_->self->priv->registry);
#line 55 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->self->priv->registry = _data_->_tmp3_;
#line 54 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_g_object_unref0 (_data_->_tmp1_);
#line 528 "LocalBackend.c"
		}
#line 58 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_tmp4_ = _data_->self->priv->registry;
#line 58 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		e_source_registry_commit_source_sync (_data_->_tmp4_, _data_->new_source, NULL, &_data_->_inner_error_);
#line 58 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 536 "LocalBackend.c"
			goto __catch2_g_error;
		}
#line 59 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		if (_data_->set_default) {
#line 60 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_state_ = 2;
#line 60 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			maya_local_backend_set_source_default (_data_->self, _data_->new_source, maya_local_backend_add_source_ready, _data_);
#line 60 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			return FALSE;
#line 547 "LocalBackend.c"
			_state_2:
#line 60 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			maya_local_backend_set_source_default_finish (_data_->self, _data_->_res_);
#line 551 "LocalBackend.c"
		}
	}
	goto __finally2;
	__catch2_g_error:
	{
#line 53 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_error_ = _data_->_inner_error_;
#line 53 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_inner_error_ = NULL;
#line 63 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_tmp5_ = _data_->_error_;
#line 63 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_tmp6_ = _data_->_tmp5_->message;
#line 63 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_critical ("LocalBackend.vala:63: %s", _data_->_tmp6_);
#line 53 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_g_error_free0 (_data_->_error_);
#line 569 "LocalBackend.c"
	}
	__finally2:
#line 53 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 53 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 53 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_clear_error (&_data_->_inner_error_);
#line 53 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_object_unref (_data_->_async_result);
#line 53 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		return FALSE;
#line 582 "LocalBackend.c"
	}
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (_data_->_state_ != 0) {
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 592 "LocalBackend.c"
		}
	}
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_object_unref (_data_->_async_result);
#line 52 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	return FALSE;
#line 599 "LocalBackend.c"
}


static void
maya_local_backend_set_source_default_data_free (gpointer _data)
{
	MayaLocalBackendSetSourceDefaultData* _data_;
	_data_ = _data;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_g_object_unref0 (_data_->source);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_g_object_unref0 (_data_->self);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_slice_free (MayaLocalBackendSetSourceDefaultData, _data_);
#line 614 "LocalBackend.c"
}


static void
maya_local_backend_set_source_default_async_ready_wrapper (GObject *source_object,
                                                           GAsyncResult *res,
                                                           void *user_data)
{
	MayaLocalBackendSetSourceDefaultData* _task_data_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (_task_data_->_callback_ != NULL) {
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 630 "LocalBackend.c"
	}
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_task_data_->_task_complete_ = TRUE;
#line 634 "LocalBackend.c"
}


void
maya_local_backend_set_source_default (MayaLocalBackend* self,
                                       ESource* source,
                                       GAsyncReadyCallback _callback_,
                                       gpointer _user_data_)
{
	MayaLocalBackendSetSourceDefaultData* _data_;
	MayaLocalBackend* _tmp0_;
	ESource* _tmp1_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_ = g_slice_new0 (MayaLocalBackendSetSourceDefaultData);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_callback_ = _callback_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, maya_local_backend_set_source_default_async_ready_wrapper, _user_data_);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (_callback_ == NULL) {
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_task_complete_ = TRUE;
#line 657 "LocalBackend.c"
	}
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_task_set_task_data (_data_->_async_result, _data_, maya_local_backend_set_source_default_data_free);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->self = _tmp0_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp1_ = _g_object_ref0 (source);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_g_object_unref0 (_data_->source);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->source = _tmp1_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	maya_local_backend_set_source_default_co (_data_);
#line 673 "LocalBackend.c"
}


void
maya_local_backend_set_source_default_finish (MayaLocalBackend* self,
                                              GAsyncResult* _res_)
{
	MayaLocalBackendSetSourceDefaultData* _data_;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 684 "LocalBackend.c"
}


static void
maya_local_backend_set_source_default_ready (GObject* source_object,
                                             GAsyncResult* _res_,
                                             gpointer _user_data_)
{
	MayaLocalBackendSetSourceDefaultData* _data_;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_ = _user_data_;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_source_object_ = source_object;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_res_ = _res_;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_data_->_task_complete_ = TRUE;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	maya_local_backend_set_source_default_co (_data_);
#line 704 "LocalBackend.c"
}


static gboolean
maya_local_backend_set_source_default_co (MayaLocalBackendSetSourceDefaultData* _data_)
{
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	switch (_data_->_state_) {
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		case 0:
#line 715 "LocalBackend.c"
		goto _state_0;
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		case 1:
#line 719 "LocalBackend.c"
		goto _state_1;
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		case 2:
#line 723 "LocalBackend.c"
		goto _state_2;
		default:
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_assert_not_reached ();
#line 728 "LocalBackend.c"
	}
	_state_0:
	{
#line 69 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_tmp0_ = _data_->self->priv->registry;
#line 69 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		if (_data_->_tmp0_ == NULL) {
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_state_ = 1;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			e_source_registry_new (NULL, maya_local_backend_set_source_default_ready, _data_);
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			return FALSE;
#line 742 "LocalBackend.c"
			_state_1:
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_tmp2_ = e_source_registry_new_finish (_data_->_res_, &_data_->_inner_error_);
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_tmp1_ = _data_->_tmp2_;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 750 "LocalBackend.c"
				goto __catch3_g_error;
			}
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_tmp3_ = _data_->_tmp1_;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->_tmp1_ = NULL;
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_g_object_unref0 (_data_->self->priv->registry);
#line 70 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_data_->self->priv->registry = _data_->_tmp3_;
#line 69 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			_g_object_unref0 (_data_->_tmp1_);
#line 763 "LocalBackend.c"
		}
#line 73 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_tmp4_ = _data_->self->priv->registry;
#line 73 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_object_set (_data_->_tmp4_, "default-calendar", _data_->source, NULL);
#line 74 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_state_ = 2;
#line 74 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		e_source_write (_data_->source, NULL, maya_local_backend_set_source_default_ready, _data_);
#line 74 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		return FALSE;
#line 775 "LocalBackend.c"
		_state_2:
#line 74 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		e_source_write_finish (_data_->source, _data_->_res_, &_data_->_inner_error_);
#line 74 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 781 "LocalBackend.c"
			goto __catch3_g_error;
		}
	}
	goto __finally3;
	__catch3_g_error:
	{
#line 68 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_error_ = _data_->_inner_error_;
#line 68 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_inner_error_ = NULL;
#line 76 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_tmp5_ = _data_->_error_;
#line 76 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_data_->_tmp6_ = _data_->_tmp5_->message;
#line 76 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_critical ("LocalBackend.vala:76: %s", _data_->_tmp6_);
#line 68 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		_g_error_free0 (_data_->_error_);
#line 800 "LocalBackend.c"
	}
	__finally3:
#line 68 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 68 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 68 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_clear_error (&_data_->_inner_error_);
#line 68 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		g_object_unref (_data_->_async_result);
#line 68 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		return FALSE;
#line 813 "LocalBackend.c"
	}
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (_data_->_state_ != 0) {
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 823 "LocalBackend.c"
		}
	}
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_object_unref (_data_->_async_result);
#line 67 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	return FALSE;
#line 830 "LocalBackend.c"
}


static void
maya_local_backend_real_modify_calendar (MayaBackend* base,
                                         const gchar* name,
                                         const gchar* color,
                                         gboolean set_default,
                                         GeeCollection* widgets,
                                         ESource* source)
{
	MayaLocalBackend * self;
	ESourceCalendar* cal = NULL;
	ESourceExtension* _tmp0_;
	ESourceCalendar* _tmp1_;
	ESourceCalendar* _tmp2_;
#line 80 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	self = (MayaLocalBackend*) base;
#line 80 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_return_if_fail (name != NULL);
#line 80 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_return_if_fail (color != NULL);
#line 80 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_return_if_fail (widgets != NULL);
#line 80 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_return_if_fail (source != NULL);
#line 81 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	e_source_set_display_name (source, name);
#line 82 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp0_ = e_source_get_extension (source, E_SOURCE_EXTENSION_CALENDAR);
#line 82 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp1_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp0_, e_source_calendar_get_type (), ESourceCalendar));
#line 82 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	cal = _tmp1_;
#line 83 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_tmp2_ = cal;
#line 83 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	e_source_selectable_set_color ((ESourceSelectable*) _tmp2_, color);
#line 84 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	e_source_write (source, NULL, NULL, NULL);
#line 85 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	if (set_default) {
#line 86 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
		maya_local_backend_set_source_default (self, source, NULL, NULL);
#line 875 "LocalBackend.c"
	}
#line 80 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_g_object_unref0 (cal);
#line 879 "LocalBackend.c"
}


MayaLocalBackend*
maya_local_backend_construct (GType object_type)
{
	MayaLocalBackend * self = NULL;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	self = (MayaLocalBackend*) g_object_new (object_type, NULL);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	return self;
#line 891 "LocalBackend.c"
}


MayaLocalBackend*
maya_local_backend_new (void)
{
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	return maya_local_backend_construct (MAYA_TYPE_LOCAL_BACKEND);
#line 900 "LocalBackend.c"
}


static void
maya_local_backend_class_init (MayaLocalBackendClass * klass)
{
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	maya_local_backend_parent_class = g_type_class_peek_parent (klass);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	g_type_class_add_private (klass, sizeof (MayaLocalBackendPrivate));
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	G_OBJECT_CLASS (klass)->finalize = maya_local_backend_finalize;
#line 913 "LocalBackend.c"
}


static void
maya_local_backend_maya_backend_interface_init (MayaBackendIface * iface)
{
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	maya_local_backend_maya_backend_parent_iface = g_type_interface_peek_parent (iface);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	iface->get_name = (gchar* (*) (MayaBackend *)) maya_local_backend_real_get_name;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	iface->get_uid = (gchar* (*) (MayaBackend *)) maya_local_backend_real_get_uid;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	iface->get_new_calendar_widget = (GeeCollection* (*) (MayaBackend *, ESource*)) maya_local_backend_real_get_new_calendar_widget;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	iface->add_new_calendar = (void (*) (MayaBackend *, const gchar*, const gchar*, gboolean, GeeCollection*)) maya_local_backend_real_add_new_calendar;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	iface->modify_calendar = (void (*) (MayaBackend *, const gchar*, const gchar*, gboolean, GeeCollection*, ESource*)) maya_local_backend_real_modify_calendar;
#line 932 "LocalBackend.c"
}


static void
maya_local_backend_instance_init (MayaLocalBackend * self)
{
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	self->priv = MAYA_LOCAL_BACKEND_GET_PRIVATE (self);
#line 941 "LocalBackend.c"
}


static void
maya_local_backend_finalize (GObject * obj)
{
	MayaLocalBackend * self;
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_TYPE_LOCAL_BACKEND, MayaLocalBackend);
#line 24 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	_g_object_unref0 (self->priv->registry);
#line 23 "/run/build/io.elementary.calendar/core/Backends/LocalBackend.vala"
	G_OBJECT_CLASS (maya_local_backend_parent_class)->finalize (obj);
#line 955 "LocalBackend.c"
}


GType
maya_local_backend_get_type (void)
{
	static volatile gsize maya_local_backend_type_id__volatile = 0;
	if (g_once_init_enter (&maya_local_backend_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (MayaLocalBackendClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maya_local_backend_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MayaLocalBackend), 0, (GInstanceInitFunc) maya_local_backend_instance_init, NULL };
		static const GInterfaceInfo maya_backend_info = { (GInterfaceInitFunc) maya_local_backend_maya_backend_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		GType maya_local_backend_type_id;
		maya_local_backend_type_id = g_type_register_static (G_TYPE_OBJECT, "MayaLocalBackend", &g_define_type_info, 0);
		g_type_add_interface_static (maya_local_backend_type_id, MAYA_TYPE_BACKEND, &maya_backend_info);
		g_once_init_leave (&maya_local_backend_type_id__volatile, maya_local_backend_type_id);
	}
	return maya_local_backend_type_id__volatile;
}



