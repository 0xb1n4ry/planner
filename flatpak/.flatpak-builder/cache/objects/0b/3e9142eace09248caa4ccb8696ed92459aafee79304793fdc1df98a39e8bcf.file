/* MayaSettings.c generated by valac 0.40.11, the Vala compiler
 * generated from MayaSettings.vala, do not modify */

/**/
/*  Copyright (C) 2011-2012 Maxwell Barvian*/
/**/
/*  This program is free software: you can redistribute it and/or modify*/
/*  it under the terms of the GNU General Public License as published by*/
/*  the Free Software Foundation, either version 3 of the License, or*/
/*  (at your option) any later version.*/
/**/
/*  This program is distributed in the hope that it will be useful,*/
/*  but WITHOUT ANY WARRANTY; without even the implied warranty of*/
/*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the*/
/*  GNU General Public License for more details.*/
/**/
/*  You should have received a copy of the GNU General Public License*/
/*  along with this program.  If not, see <http://www.gnu.org/licenses/>.*/
/**/


#include <glib.h>
#include <glib-object.h>
#include <granite.h>
#include <stdlib.h>
#include <string.h>


#define MAYA_SETTINGS_TYPE_WEEKDAY (maya_settings_weekday_get_type ())

#define MAYA_SETTINGS_TYPE_MAYA_SETTINGS (maya_settings_maya_settings_get_type ())
#define MAYA_SETTINGS_MAYA_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_SETTINGS_TYPE_MAYA_SETTINGS, MayaSettingsMayaSettings))
#define MAYA_SETTINGS_MAYA_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_SETTINGS_TYPE_MAYA_SETTINGS, MayaSettingsMayaSettingsClass))
#define MAYA_SETTINGS_IS_MAYA_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_SETTINGS_TYPE_MAYA_SETTINGS))
#define MAYA_SETTINGS_IS_MAYA_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_SETTINGS_TYPE_MAYA_SETTINGS))
#define MAYA_SETTINGS_MAYA_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_SETTINGS_TYPE_MAYA_SETTINGS, MayaSettingsMayaSettingsClass))

typedef struct _MayaSettingsMayaSettings MayaSettingsMayaSettings;
typedef struct _MayaSettingsMayaSettingsClass MayaSettingsMayaSettingsClass;
typedef struct _MayaSettingsMayaSettingsPrivate MayaSettingsMayaSettingsPrivate;
enum  {
	MAYA_SETTINGS_MAYA_SETTINGS_0_PROPERTY,
	MAYA_SETTINGS_MAYA_SETTINGS_PLUGINS_DISABLED_PROPERTY,
	MAYA_SETTINGS_MAYA_SETTINGS_NUM_PROPERTIES
};
static GParamSpec* maya_settings_maya_settings_properties[MAYA_SETTINGS_MAYA_SETTINGS_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

typedef enum  {
	MAYA_SETTINGS_WEEKDAY_SUNDAY = 0,
	MAYA_SETTINGS_WEEKDAY_MONDAY,
	MAYA_SETTINGS_WEEKDAY_TUESDAY,
	MAYA_SETTINGS_WEEKDAY_WEDNESDAY,
	MAYA_SETTINGS_WEEKDAY_THURSDAY,
	MAYA_SETTINGS_WEEKDAY_FRIDAY,
	MAYA_SETTINGS_WEEKDAY_SATURDAY
} MayaSettingsWeekday;

struct _MayaSettingsMayaSettings {
	GraniteServicesSettings parent_instance;
	MayaSettingsMayaSettingsPrivate * priv;
};

struct _MayaSettingsMayaSettingsClass {
	GraniteServicesSettingsClass parent_class;
};

struct _MayaSettingsMayaSettingsPrivate {
	gchar** _plugins_disabled;
	gint _plugins_disabled_length1;
	gint __plugins_disabled_size_;
};


static gpointer maya_settings_maya_settings_parent_class = NULL;
static MayaSettingsMayaSettings* maya_settings_maya_settings_global_settings;
static MayaSettingsMayaSettings* maya_settings_maya_settings_global_settings = NULL;

GType maya_settings_weekday_get_type (void) G_GNUC_CONST;
GType maya_settings_maya_settings_get_type (void) G_GNUC_CONST;
#define MAYA_SETTINGS_MAYA_SETTINGS_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), MAYA_SETTINGS_TYPE_MAYA_SETTINGS, MayaSettingsMayaSettingsPrivate))
MayaSettingsMayaSettings* maya_settings_maya_settings_get_default (void);
static MayaSettingsMayaSettings* maya_settings_maya_settings_new (void);
static MayaSettingsMayaSettings* maya_settings_maya_settings_construct (GType object_type);
gchar** maya_settings_maya_settings_get_plugins_disabled (MayaSettingsMayaSettings* self,
                                                          int* result_length1);
void maya_settings_maya_settings_set_plugins_disabled (MayaSettingsMayaSettings* self,
                                                       gchar** value,
                                                       int value_length1);
static gchar** _vala_array_dup1 (gchar** self,
                          int length);
static void maya_settings_maya_settings_finalize (GObject * obj);
static void _vala_maya_settings_maya_settings_get_property (GObject * object,
                                                     guint property_id,
                                                     GValue * value,
                                                     GParamSpec * pspec);
static void _vala_maya_settings_maya_settings_set_property (GObject * object,
                                                     guint property_id,
                                                     const GValue * value,
                                                     GParamSpec * pspec);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);


GType
maya_settings_weekday_get_type (void)
{
	static volatile gsize maya_settings_weekday_type_id__volatile = 0;
	if (g_once_init_enter (&maya_settings_weekday_type_id__volatile)) {
		static const GEnumValue values[] = {{MAYA_SETTINGS_WEEKDAY_SUNDAY, "MAYA_SETTINGS_WEEKDAY_SUNDAY", "sunday"}, {MAYA_SETTINGS_WEEKDAY_MONDAY, "MAYA_SETTINGS_WEEKDAY_MONDAY", "monday"}, {MAYA_SETTINGS_WEEKDAY_TUESDAY, "MAYA_SETTINGS_WEEKDAY_TUESDAY", "tuesday"}, {MAYA_SETTINGS_WEEKDAY_WEDNESDAY, "MAYA_SETTINGS_WEEKDAY_WEDNESDAY", "wednesday"}, {MAYA_SETTINGS_WEEKDAY_THURSDAY, "MAYA_SETTINGS_WEEKDAY_THURSDAY", "thursday"}, {MAYA_SETTINGS_WEEKDAY_FRIDAY, "MAYA_SETTINGS_WEEKDAY_FRIDAY", "friday"}, {MAYA_SETTINGS_WEEKDAY_SATURDAY, "MAYA_SETTINGS_WEEKDAY_SATURDAY", "saturday"}, {0, NULL, NULL}};
		GType maya_settings_weekday_type_id;
		maya_settings_weekday_type_id = g_enum_register_static ("MayaSettingsWeekday", values);
		g_once_init_leave (&maya_settings_weekday_type_id__volatile, maya_settings_weekday_type_id);
	}
	return maya_settings_weekday_type_id__volatile;
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 35 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	return self ? g_object_ref (self) : NULL;
#line 129 "MayaSettings.c"
}


MayaSettingsMayaSettings*
maya_settings_maya_settings_get_default (void)
{
	MayaSettingsMayaSettings* result = NULL;
	MayaSettingsMayaSettings* _tmp0_;
	MayaSettingsMayaSettings* _tmp2_;
	MayaSettingsMayaSettings* _tmp3_;
#line 33 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	_tmp0_ = maya_settings_maya_settings_global_settings;
#line 33 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	if (_tmp0_ == NULL) {
#line 144 "MayaSettings.c"
		MayaSettingsMayaSettings* _tmp1_;
#line 34 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		_tmp1_ = maya_settings_maya_settings_new ();
#line 34 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		_g_object_unref0 (maya_settings_maya_settings_global_settings);
#line 34 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		maya_settings_maya_settings_global_settings = _tmp1_;
#line 152 "MayaSettings.c"
	}
#line 35 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	_tmp2_ = maya_settings_maya_settings_global_settings;
#line 35 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	_tmp3_ = _g_object_ref0 (_tmp2_);
#line 35 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	result = _tmp3_;
#line 35 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	return result;
#line 162 "MayaSettings.c"
}


static MayaSettingsMayaSettings*
maya_settings_maya_settings_construct (GType object_type)
{
	MayaSettingsMayaSettings * self = NULL;
#line 41 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	self = (MayaSettingsMayaSettings*) granite_services_settings_construct (object_type, "io.elementary.calendar.settings");
#line 40 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	return self;
#line 174 "MayaSettings.c"
}


static MayaSettingsMayaSettings*
maya_settings_maya_settings_new (void)
{
#line 40 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	return maya_settings_maya_settings_construct (MAYA_SETTINGS_TYPE_MAYA_SETTINGS);
#line 183 "MayaSettings.c"
}


gchar**
maya_settings_maya_settings_get_plugins_disabled (MayaSettingsMayaSettings* self,
                                                  int* result_length1)
{
	gchar** result;
	gchar** _tmp0_;
	gint _tmp0__length1;
	gchar** _tmp1_;
	gint _tmp1__length1;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	_tmp0_ = self->priv->_plugins_disabled;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	_tmp0__length1 = self->priv->_plugins_disabled_length1;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	_tmp1_ = _tmp0_;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	_tmp1__length1 = _tmp0__length1;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	if (result_length1) {
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		*result_length1 = _tmp1__length1;
#line 210 "MayaSettings.c"
	}
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	result = _tmp1_;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	return result;
#line 216 "MayaSettings.c"
}


static gchar**
_vala_array_dup1 (gchar** self,
                  int length)
{
	gchar** result;
	int i;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	result = g_new0 (gchar*, length + 1);
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	for (i = 0; i < length; i++) {
#line 230 "MayaSettings.c"
		gchar* _tmp0_;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		_tmp0_ = g_strdup (self[i]);
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		result[i] = _tmp0_;
#line 236 "MayaSettings.c"
	}
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	return result;
#line 240 "MayaSettings.c"
}


void
maya_settings_maya_settings_set_plugins_disabled (MayaSettingsMayaSettings* self,
                                                  gchar** value,
                                                  int value_length1)
{
	int old_value_length;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	g_return_if_fail (self != NULL);
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	if (maya_settings_maya_settings_get_plugins_disabled (self, &old_value_length) != value) {
#line 254 "MayaSettings.c"
		gchar** _tmp0_;
		gint _tmp0__length1;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		_tmp0_ = (value != NULL) ? _vala_array_dup1 (value, value_length1) : ((gpointer) value);
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		_tmp0__length1 = value_length1;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		self->priv->_plugins_disabled = (_vala_array_free (self->priv->_plugins_disabled, self->priv->_plugins_disabled_length1, (GDestroyNotify) g_free), NULL);
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		self->priv->_plugins_disabled = _tmp0_;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		self->priv->_plugins_disabled_length1 = _tmp0__length1;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		self->priv->__plugins_disabled_size_ = self->priv->_plugins_disabled_length1;
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		g_object_notify_by_pspec ((GObject *) self, maya_settings_maya_settings_properties[MAYA_SETTINGS_MAYA_SETTINGS_PLUGINS_DISABLED_PROPERTY]);
#line 271 "MayaSettings.c"
	}
}


static void
maya_settings_maya_settings_class_init (MayaSettingsMayaSettingsClass * klass)
{
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	maya_settings_maya_settings_parent_class = g_type_class_peek_parent (klass);
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	g_type_class_add_private (klass, sizeof (MayaSettingsMayaSettingsPrivate));
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_maya_settings_maya_settings_get_property;
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_maya_settings_maya_settings_set_property;
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	G_OBJECT_CLASS (klass)->finalize = maya_settings_maya_settings_finalize;
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), MAYA_SETTINGS_MAYA_SETTINGS_PLUGINS_DISABLED_PROPERTY, maya_settings_maya_settings_properties[MAYA_SETTINGS_MAYA_SETTINGS_PLUGINS_DISABLED_PROPERTY] = g_param_spec_boxed ("plugins-disabled", "plugins-disabled", "plugins-disabled", G_TYPE_STRV, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 291 "MayaSettings.c"
}


static void
maya_settings_maya_settings_instance_init (MayaSettingsMayaSettings * self)
{
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	self->priv = MAYA_SETTINGS_MAYA_SETTINGS_GET_PRIVATE (self);
#line 300 "MayaSettings.c"
}


static void
maya_settings_maya_settings_finalize (GObject * obj)
{
	MayaSettingsMayaSettings * self;
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_SETTINGS_TYPE_MAYA_SETTINGS, MayaSettingsMayaSettings);
#line 38 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	self->priv->_plugins_disabled = (_vala_array_free (self->priv->_plugins_disabled, self->priv->_plugins_disabled_length1, (GDestroyNotify) g_free), NULL);
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	G_OBJECT_CLASS (maya_settings_maya_settings_parent_class)->finalize (obj);
#line 314 "MayaSettings.c"
}


GType
maya_settings_maya_settings_get_type (void)
{
	static volatile gsize maya_settings_maya_settings_type_id__volatile = 0;
	if (g_once_init_enter (&maya_settings_maya_settings_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (MayaSettingsMayaSettingsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maya_settings_maya_settings_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MayaSettingsMayaSettings), 0, (GInstanceInitFunc) maya_settings_maya_settings_instance_init, NULL };
		GType maya_settings_maya_settings_type_id;
		maya_settings_maya_settings_type_id = g_type_register_static (GRANITE_SERVICES_TYPE_SETTINGS, "MayaSettingsMayaSettings", &g_define_type_info, 0);
		g_once_init_leave (&maya_settings_maya_settings_type_id__volatile, maya_settings_maya_settings_type_id);
	}
	return maya_settings_maya_settings_type_id__volatile;
}


static void
_vala_maya_settings_maya_settings_get_property (GObject * object,
                                                guint property_id,
                                                GValue * value,
                                                GParamSpec * pspec)
{
	MayaSettingsMayaSettings * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, MAYA_SETTINGS_TYPE_MAYA_SETTINGS, MayaSettingsMayaSettings);
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	switch (property_id) {
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		case MAYA_SETTINGS_MAYA_SETTINGS_PLUGINS_DISABLED_PROPERTY:
#line 344 "MayaSettings.c"
		{
			int length;
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
			g_value_set_boxed (value, maya_settings_maya_settings_get_plugins_disabled (self, &length));
#line 349 "MayaSettings.c"
		}
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		break;
#line 353 "MayaSettings.c"
		default:
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		break;
#line 359 "MayaSettings.c"
	}
}


static void
_vala_maya_settings_maya_settings_set_property (GObject * object,
                                                guint property_id,
                                                const GValue * value,
                                                GParamSpec * pspec)
{
	MayaSettingsMayaSettings * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, MAYA_SETTINGS_TYPE_MAYA_SETTINGS, MayaSettingsMayaSettings);
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
	switch (property_id) {
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		case MAYA_SETTINGS_MAYA_SETTINGS_PLUGINS_DISABLED_PROPERTY:
#line 376 "MayaSettings.c"
		{
			gpointer boxed;
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
			boxed = g_value_get_boxed (value);
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
			maya_settings_maya_settings_set_plugins_disabled (self, boxed, (boxed == NULL) ? 0 : g_strv_length (boxed));
#line 383 "MayaSettings.c"
		}
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		break;
#line 387 "MayaSettings.c"
		default:
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 29 "/run/build/io.elementary.calendar/core/Settings/MayaSettings.vala"
		break;
#line 393 "MayaSettings.c"
	}
}


static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}


static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}



