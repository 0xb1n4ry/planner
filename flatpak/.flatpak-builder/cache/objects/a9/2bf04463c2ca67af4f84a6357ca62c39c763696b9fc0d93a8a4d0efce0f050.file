/* Grid.c generated by valac 0.40.11, the Vala compiler
 * generated from Grid.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2011-2015 Maya Developers (http://launchpad.net/maya)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by: Maxwell Barvian
 *              Corentin NoÃ«l <corentin@elementaryos.org>
 */


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <gee.h>
#include "elementary-calendar.h"
#include <gdk/gdk.h>
#include <stdlib.h>
#include <string.h>
#include <libecal/libecal.h>
#include <libical/ical.h>


#define MAYA_VIEW_TYPE_GRID (maya_view_grid_get_type ())
#define MAYA_VIEW_GRID(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_VIEW_TYPE_GRID, MayaViewGrid))
#define MAYA_VIEW_GRID_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_VIEW_TYPE_GRID, MayaViewGridClass))
#define MAYA_VIEW_IS_GRID(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_VIEW_TYPE_GRID))
#define MAYA_VIEW_IS_GRID_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_VIEW_TYPE_GRID))
#define MAYA_VIEW_GRID_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_VIEW_TYPE_GRID, MayaViewGridClass))

typedef struct _MayaViewGrid MayaViewGrid;
typedef struct _MayaViewGridClass MayaViewGridClass;
typedef struct _MayaViewGridPrivate MayaViewGridPrivate;

#define MAYA_VIEW_TYPE_GRID_DAY (maya_view_grid_day_get_type ())
#define MAYA_VIEW_GRID_DAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDay))
#define MAYA_VIEW_GRID_DAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDayClass))
#define MAYA_VIEW_IS_GRID_DAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_VIEW_TYPE_GRID_DAY))
#define MAYA_VIEW_IS_GRID_DAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_VIEW_TYPE_GRID_DAY))
#define MAYA_VIEW_GRID_DAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_VIEW_TYPE_GRID_DAY, MayaViewGridDayClass))

typedef struct _MayaViewGridDay MayaViewGridDay;
typedef struct _MayaViewGridDayClass MayaViewGridDayClass;
enum  {
	MAYA_VIEW_GRID_0_PROPERTY,
	MAYA_VIEW_GRID_GRID_RANGE_PROPERTY,
	MAYA_VIEW_GRID_NUM_PROPERTIES
};
static GParamSpec* maya_view_grid_properties[MAYA_VIEW_GRID_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
typedef struct _Block20Data Block20Data;
typedef struct _Block21Data Block21Data;

#define MAYA_VIEW_TYPE_EVENT_BUTTON (maya_view_event_button_get_type ())
#define MAYA_VIEW_EVENT_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_VIEW_TYPE_EVENT_BUTTON, MayaViewEventButton))
#define MAYA_VIEW_EVENT_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_VIEW_TYPE_EVENT_BUTTON, MayaViewEventButtonClass))
#define MAYA_VIEW_IS_EVENT_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_VIEW_TYPE_EVENT_BUTTON))
#define MAYA_VIEW_IS_EVENT_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_VIEW_TYPE_EVENT_BUTTON))
#define MAYA_VIEW_EVENT_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_VIEW_TYPE_EVENT_BUTTON, MayaViewEventButtonClass))

typedef struct _MayaViewEventButton MayaViewEventButton;
typedef struct _MayaViewEventButtonClass MayaViewEventButtonClass;
typedef struct _Block22Data Block22Data;
enum  {
	MAYA_VIEW_GRID_ON_EVENT_ADD_SIGNAL,
	MAYA_VIEW_GRID_EDITION_REQUEST_SIGNAL,
	MAYA_VIEW_GRID_SELECTION_CHANGED_SIGNAL,
	MAYA_VIEW_GRID_NUM_SIGNALS
};
static guint maya_view_grid_signals[MAYA_VIEW_GRID_NUM_SIGNALS] = {0};
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _MayaViewGrid {
	GtkGrid parent_instance;
	MayaViewGridPrivate * priv;
};

struct _MayaViewGridClass {
	GtkGridClass parent_class;
};

struct _MayaViewGridPrivate {
	GeeHashMap* data;
	MayaUtilDateRange* _grid_range;
	MayaViewGridDay* selected_gridday;
};

struct _Block20Data {
	int _ref_count_;
	MayaViewGrid* self;
	MayaViewGridDay* day;
};

struct _Block21Data {
	int _ref_count_;
	MayaViewGrid* self;
	ECalComponent* event;
};

struct _Block22Data {
	int _ref_count_;
	MayaViewGrid* self;
	ECalComponent* event;
};


static gpointer maya_view_grid_parent_class = NULL;

GType maya_view_grid_get_type (void) G_GNUC_CONST;
GType maya_view_grid_day_get_type (void) G_GNUC_CONST;
#define MAYA_VIEW_GRID_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), MAYA_VIEW_TYPE_GRID, MayaViewGridPrivate))
MayaViewGrid* maya_view_grid_new (void);
MayaViewGrid* maya_view_grid_construct (GType object_type);
static void maya_view_grid_on_day_focus_in (MayaViewGrid* self,
                                     MayaViewGridDay* day);
void maya_view_grid_day_set_selected (MayaViewGridDay* self,
                                      gboolean selected);
GDateTime* maya_view_grid_day_get_date (MayaViewGridDay* self);
void maya_view_grid_focus_date (MayaViewGrid* self,
                                GDateTime* date);
static guint maya_view_grid_day_hash (MayaViewGrid* self,
                               GDateTime* date);
void maya_view_grid_set_range (MayaViewGrid* self,
                               MayaUtilDateRange* new_range,
                               GDateTime* month_start);
MayaUtilDateRange* maya_view_grid_get_grid_range (MayaViewGrid* self);
static Block20Data* block20_data_ref (Block20Data* _data20_);
static void block20_data_unref (void * _userdata_);
static MayaViewGridDay* maya_view_grid_update_day (MayaViewGrid* self,
                                            MayaViewGridDay* day,
                                            GDateTime* new_date,
                                            GDateTime* today,
                                            GDateTime* month_start);
MayaViewGridDay* maya_view_grid_day_new (GDateTime* date);
MayaViewGridDay* maya_view_grid_day_construct (GType object_type,
                                               GDateTime* date);
static void _____lambda36_ (MayaViewGrid* self,
                     GDateTime* date);
static void ______lambda36__maya_view_grid_day_on_event_add (MayaViewGridDay* _sender,
                                                      GDateTime* date,
                                                      gpointer self);
static gboolean _____lambda37_ (MayaViewGrid* self,
                         GdkEventScroll* event);
static gboolean ______lambda37__gtk_widget_scroll_event (GtkWidget* _sender,
                                                  GdkEventScroll* event,
                                                  gpointer self);
static gboolean _____lambda38_ (Block20Data* _data20_,
                         GdkEventFocus* event);
static gboolean ______lambda38__gtk_widget_focus_in_event (GtkWidget* _sender,
                                                    GdkEventFocus* event,
                                                    gpointer self);
static void maya_view_grid_set_grid_range (MayaViewGrid* self,
                                    MayaUtilDateRange* value);
void maya_view_grid_day_set_in_current_month (MayaViewGridDay* self,
                                              gboolean value);
void maya_view_grid_day_update_date (MayaViewGridDay* self,
                                     GDateTime* date);
void maya_view_grid_add_event (MayaViewGrid* self,
                               ECalComponent* event);
static void maya_view_grid_add_buttons_for_range (MayaViewGrid* self,
                                           MayaUtilDateRange* dt_range,
                                           ECalComponent* event);
static Block21Data* block21_data_ref (Block21Data* _data21_);
static void block21_data_unref (void * _userdata_);
GType maya_view_event_button_get_type (void) G_GNUC_CONST;
MayaViewEventButton* maya_view_event_button_new (ECalComponent* comp,
                                                 GDateTime* date);
MayaViewEventButton* maya_view_event_button_construct (GType object_type,
                                                       ECalComponent* comp,
                                                       GDateTime* date);
static void maya_view_grid_add_button_for_day (MayaViewGrid* self,
                                        GDateTime* date,
                                        MayaViewEventButton* button);
static void ____lambda39_ (Block21Data* _data21_);
static void _____lambda39__maya_view_event_button_edition_request (MayaViewEventButton* _sender,
                                                            gpointer self);
void maya_view_grid_day_add_event_button (MayaViewGridDay* self,
                                          MayaViewEventButton* button);
void maya_view_grid_remove_event (MayaViewGrid* self,
                                  ECalComponent* event);
void maya_view_grid_day_remove_event (MayaViewGridDay* self,
                                      ECalComponent* comp);
void maya_view_grid_update_event (MayaViewGrid* self,
                                  ECalComponent* event);
static Block22Data* block22_data_ref (Block22Data* _data22_);
static void block22_data_unref (void * _userdata_);
gboolean maya_view_grid_day_update_event (MayaViewGridDay* self,
                                          ECalComponent* comp);
static void ______lambda40_ (Block22Data* _data22_);
static void _______lambda40__maya_view_event_button_edition_request (MayaViewEventButton* _sender,
                                                              gpointer self);
void maya_view_grid_remove_all_events (MayaViewGrid* self);
void maya_view_grid_day_clear_events (MayaViewGridDay* self);
static void maya_view_grid_finalize (GObject * obj);
static void _vala_maya_view_grid_get_property (GObject * object,
                                        guint property_id,
                                        GValue * value,
                                        GParamSpec * pspec);
static void _vala_maya_view_grid_set_property (GObject * object,
                                        guint property_id,
                                        const GValue * value,
                                        GParamSpec * pspec);


MayaViewGrid*
maya_view_grid_construct (GType object_type)
{
	MayaViewGrid * self = NULL;
	GeeHashMap* _tmp0_;
	GdkEventMask _tmp1_;
	GdkEventMask _tmp2_;
	GdkEventMask _tmp3_;
	GdkEventMask _tmp4_;
#line 42 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	self = (MayaViewGrid*) g_object_new (object_type, NULL);
#line 45 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gtk_grid_insert_column ((GtkGrid*) self, 7);
#line 46 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gtk_grid_set_column_homogeneous ((GtkGrid*) self, TRUE);
#line 47 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gtk_grid_set_row_homogeneous ((GtkGrid*) self, TRUE);
#line 48 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gtk_grid_set_column_spacing ((GtkGrid*) self, 0);
#line 49 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gtk_grid_set_row_spacing ((GtkGrid*) self, 0);
#line 51 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = gee_hash_map_new (G_TYPE_UINT, NULL, NULL, MAYA_VIEW_TYPE_GRID_DAY, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 51 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (self->priv->data);
#line 51 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	self->priv->data = _tmp0_;
#line 52 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp1_ = gtk_widget_get_events ((GtkWidget*) self);
#line 52 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp2_ = _tmp1_;
#line 52 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gtk_widget_set_events ((GtkWidget*) self, _tmp2_ | GDK_SCROLL_MASK);
#line 53 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp3_ = gtk_widget_get_events ((GtkWidget*) self);
#line 53 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp4_ = _tmp3_;
#line 53 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gtk_widget_set_events ((GtkWidget*) self, _tmp4_ | GDK_SMOOTH_SCROLL_MASK);
#line 42 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return self;
#line 266 "Grid.c"
}


MayaViewGrid*
maya_view_grid_new (void)
{
#line 42 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return maya_view_grid_construct (MAYA_VIEW_TYPE_GRID);
#line 275 "Grid.c"
}


static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 59 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 284 "Grid.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 60 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return self ? g_object_ref (self) : NULL;
#line 293 "Grid.c"
}


static void
maya_view_grid_on_day_focus_in (MayaViewGrid* self,
                                MayaViewGridDay* day)
{
	MayaViewGridDay* _tmp0_;
	GDateTime* selected_date = NULL;
	GDateTime* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	MayaViewGridDay* _tmp5_;
	GDateTime* _tmp6_;
	MayaSettingsSavedState* _tmp7_;
	MayaSettingsSavedState* _tmp8_;
	GDateTime* _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	MayaModelCalendarModel* calmodel = NULL;
	MayaModelCalendarModel* _tmp12_;
	gint date_month = 0;
	GDateTime* _tmp13_;
	MayaModelCalendarModel* _tmp14_;
	GDateTime* _tmp15_;
	GDateTime* _tmp16_;
	gint date_year = 0;
	GDateTime* _tmp17_;
	MayaModelCalendarModel* _tmp18_;
	GDateTime* _tmp19_;
	GDateTime* _tmp20_;
	gboolean _tmp21_ = FALSE;
	gint _tmp22_;
#line 56 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 56 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (day != NULL);
#line 57 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = self->priv->selected_gridday;
#line 57 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (_tmp0_ != NULL) {
#line 335 "Grid.c"
		MayaViewGridDay* _tmp1_;
#line 58 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp1_ = self->priv->selected_gridday;
#line 58 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		maya_view_grid_day_set_selected (_tmp1_, FALSE);
#line 341 "Grid.c"
	}
#line 59 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp2_ = maya_view_grid_day_get_date (day);
#line 59 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp3_ = _tmp2_;
#line 59 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp4_ = _g_date_time_ref0 (_tmp3_);
#line 59 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	selected_date = _tmp4_;
#line 60 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp5_ = _g_object_ref0 (day);
#line 60 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (self->priv->selected_gridday);
#line 60 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	self->priv->selected_gridday = _tmp5_;
#line 61 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_day_set_selected (day, TRUE);
#line 62 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gtk_widget_set_state_flags ((GtkWidget*) day, GTK_STATE_FLAG_FOCUSED, FALSE);
#line 63 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp6_ = selected_date;
#line 63 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_signal_emit (self, maya_view_grid_signals[MAYA_VIEW_GRID_SELECTION_CHANGED_SIGNAL], 0, _tmp6_);
#line 64 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp7_ = maya_settings_saved_state_get_default ();
#line 64 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp8_ = _tmp7_;
#line 64 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp9_ = selected_date;
#line 64 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp10_ = g_date_time_format (_tmp9_, "%Y-%j");
#line 64 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp11_ = _tmp10_;
#line 64 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_settings_saved_state_set_selected_day (_tmp8_, _tmp11_);
#line 64 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_free0 (_tmp11_);
#line 64 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (_tmp8_);
#line 65 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp12_ = maya_model_calendar_model_get_default ();
#line 65 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	calmodel = _tmp12_;
#line 66 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp13_ = selected_date;
#line 66 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp14_ = calmodel;
#line 66 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp15_ = maya_model_calendar_model_get_month_start (_tmp14_);
#line 66 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp16_ = _tmp15_;
#line 66 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	date_month = g_date_time_get_month (_tmp13_) - g_date_time_get_month (_tmp16_);
#line 67 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp17_ = selected_date;
#line 67 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp18_ = calmodel;
#line 67 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp19_ = maya_model_calendar_model_get_month_start (_tmp18_);
#line 67 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp20_ = _tmp19_;
#line 67 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	date_year = g_date_time_get_year (_tmp17_) - g_date_time_get_year (_tmp20_);
#line 68 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp22_ = date_month;
#line 68 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (_tmp22_ != 0) {
#line 68 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp21_ = TRUE;
#line 411 "Grid.c"
	} else {
		gint _tmp23_;
#line 68 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp23_ = date_year;
#line 68 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp21_ = _tmp23_ != 0;
#line 418 "Grid.c"
	}
#line 68 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (_tmp21_) {
#line 422 "Grid.c"
		MayaModelCalendarModel* _tmp24_;
		gint _tmp25_;
		MayaModelCalendarModel* _tmp26_;
		gint _tmp27_;
#line 69 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp24_ = calmodel;
#line 69 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp25_ = date_month;
#line 69 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		maya_model_calendar_model_change_month (_tmp24_, _tmp25_);
#line 70 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp26_ = calmodel;
#line 70 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp27_ = date_year;
#line 70 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		maya_model_calendar_model_change_year (_tmp26_, _tmp27_);
#line 439 "Grid.c"
	}
#line 56 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (calmodel);
#line 56 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_date_time_unref0 (selected_date);
#line 445 "Grid.c"
}


static gchar*
g_date_time_to_string (GDateTime* self)
{
	gchar* result = NULL;
	gchar* _tmp0_;
#line 3009 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_date_time_format (self, "%FT%H:%M:%S%z");
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp0_;
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 462 "Grid.c"
}


void
maya_view_grid_focus_date (MayaViewGrid* self,
                           GDateTime* date)
{
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	guint date_hash = 0U;
	GeeHashMap* _tmp4_;
	guint _tmp5_;
#line 74 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 74 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (date != NULL);
#line 75 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = g_date_time_to_string (date);
#line 75 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp1_ = _tmp0_;
#line 75 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp2_ = g_strconcat ("Setting focus to @ ", _tmp1_, NULL);
#line 75 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp3_ = _tmp2_;
#line 75 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_debug ("Grid.vala:75: %s", _tmp3_);
#line 75 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_free0 (_tmp3_);
#line 75 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_free0 (_tmp1_);
#line 76 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	date_hash = maya_view_grid_day_hash (self, date);
#line 77 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp4_ = self->priv->data;
#line 77 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp5_ = date_hash;
#line 77 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp4_, (gpointer) ((guintptr) _tmp5_)) == TRUE) {
#line 503 "Grid.c"
		MayaViewGridDay* day_widget = NULL;
		GeeHashMap* _tmp6_;
		guint _tmp7_;
		gpointer _tmp8_;
		MayaViewGridDay* _tmp9_;
		MayaViewGridDay* _tmp10_;
#line 78 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp6_ = self->priv->data;
#line 78 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp7_ = date_hash;
#line 78 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp8_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp6_, (gpointer) ((guintptr) _tmp7_));
#line 78 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		day_widget = (MayaViewGridDay*) _tmp8_;
#line 79 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp9_ = day_widget;
#line 79 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		gtk_widget_grab_focus ((GtkWidget*) _tmp9_);
#line 80 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp10_ = day_widget;
#line 80 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		maya_view_grid_on_day_focus_in (self, _tmp10_);
#line 77 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (day_widget);
#line 528 "Grid.c"
	}
}


/**
     * Sets the given range to be displayed in the grid. Note that the number of days
     * must remain the same.
     */
static Block20Data*
block20_data_ref (Block20Data* _data20_)
{
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_atomic_int_inc (&_data20_->_ref_count_);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return _data20_;
#line 544 "Grid.c"
}


static void
block20_data_unref (void * _userdata_)
{
	Block20Data* _data20_;
	_data20_ = (Block20Data*) _userdata_;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (g_atomic_int_dec_and_test (&_data20_->_ref_count_)) {
#line 555 "Grid.c"
		MayaViewGrid* self;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		self = _data20_->self;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_data20_->day);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (self);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		g_slice_free (Block20Data, _data20_);
#line 565 "Grid.c"
	}
}


static void
_____lambda36_ (MayaViewGrid* self,
                GDateTime* date)
{
#line 123 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (date != NULL);
#line 123 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_signal_emit (self, maya_view_grid_signals[MAYA_VIEW_GRID_ON_EVENT_ADD_SIGNAL], 0, date);
#line 578 "Grid.c"
}


static void
______lambda36__maya_view_grid_day_on_event_add (MayaViewGridDay* _sender,
                                                 GDateTime* date,
                                                 gpointer self)
{
#line 123 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_____lambda36_ ((MayaViewGrid*) self, date);
#line 589 "Grid.c"
}


static gboolean
_____lambda37_ (MayaViewGrid* self,
                GdkEventScroll* event)
{
	gboolean result = FALSE;
	gboolean _tmp0_ = FALSE;
#line 124 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 124 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_signal_emit_by_name ((GtkWidget*) self, "scroll-event", event, &_tmp0_);
#line 124 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	result = FALSE;
#line 124 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return result;
#line 607 "Grid.c"
}


static gboolean
______lambda37__gtk_widget_scroll_event (GtkWidget* _sender,
                                         GdkEventScroll* event,
                                         gpointer self)
{
	gboolean result;
	result = _____lambda37_ ((MayaViewGrid*) self, event);
#line 124 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return result;
#line 620 "Grid.c"
}


static gboolean
_____lambda38_ (Block20Data* _data20_,
                GdkEventFocus* event)
{
	MayaViewGrid* self;
	gboolean result = FALSE;
	MayaViewGridDay* _tmp0_;
#line 125 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	self = _data20_->self;
#line 125 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 126 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = _data20_->day;
#line 126 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_on_day_focus_in (self, _tmp0_);
#line 127 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	result = FALSE;
#line 127 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return result;
#line 643 "Grid.c"
}


static gboolean
______lambda38__gtk_widget_focus_in_event (GtkWidget* _sender,
                                           GdkEventFocus* event,
                                           gpointer self)
{
	gboolean result;
	result = _____lambda38_ (self, event);
#line 125 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return result;
#line 656 "Grid.c"
}


void
maya_view_grid_set_range (MayaViewGrid* self,
                          MayaUtilDateRange* new_range,
                          GDateTime* month_start)
{
	GDateTime* today = NULL;
	GDateTime* _tmp0_;
	GeeList* old_dates = NULL;
	MayaUtilDateRange* _tmp1_;
	GeeList* new_dates = NULL;
	GeeList* _tmp5_;
	GeeHashMap* data_new = NULL;
	GeeHashMap* _tmp6_;
	GeeList* _tmp7_;
	gint _tmp8_;
	gint _tmp9_;
	gint i = 0;
	gint col = 0;
	gint row = 0;
	GtkCssProvider* style_provider = NULL;
	GtkCssProvider* _tmp10_;
	GtkCssProvider* _tmp11_;
	GeeHashMap* _tmp74_;
	GeeHashMap* _tmp75_;
	GeeHashMap* _tmp76_;
#line 88 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 88 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (new_range != NULL);
#line 88 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (month_start != NULL);
#line 89 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = g_date_time_new_now_local ();
#line 89 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	today = _tmp0_;
#line 92 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp1_ = self->priv->_grid_range;
#line 92 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (_tmp1_ == NULL) {
#line 699 "Grid.c"
		GeeArrayList* _tmp2_;
#line 93 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp2_ = gee_array_list_new (G_TYPE_DATE_TIME, (GBoxedCopyFunc) g_date_time_ref, (GDestroyNotify) g_date_time_unref, NULL, NULL, NULL);
#line 93 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (old_dates);
#line 93 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		old_dates = (GeeList*) _tmp2_;
#line 707 "Grid.c"
	} else {
		MayaUtilDateRange* _tmp3_;
		GeeList* _tmp4_;
#line 95 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp3_ = self->priv->_grid_range;
#line 95 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp4_ = maya_util_date_range_to_list (_tmp3_);
#line 95 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (old_dates);
#line 95 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		old_dates = _tmp4_;
#line 719 "Grid.c"
	}
#line 97 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp5_ = maya_util_date_range_to_list (new_range);
#line 97 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	new_dates = _tmp5_;
#line 99 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp6_ = gee_hash_map_new (G_TYPE_UINT, NULL, NULL, MAYA_VIEW_TYPE_GRID_DAY, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 99 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	data_new = _tmp6_;
#line 102 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp7_ = new_dates;
#line 102 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp8_ = gee_collection_get_size ((GeeCollection*) _tmp7_);
#line 102 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp9_ = _tmp8_;
#line 102 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_vala_assert ((_tmp9_ % 7) == 0, "new_dates.size % 7 == 0");
#line 106 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	i = 0;
#line 107 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	col = 0;
#line 107 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	row = 0;
#line 109 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp10_ = maya_util_css_get_css_provider ();
#line 109 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp11_ = _g_object_ref0 (_tmp10_);
#line 109 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	style_provider = _tmp11_;
#line 749 "Grid.c"
	{
		gboolean _tmp12_ = FALSE;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		i = 0;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp12_ = TRUE;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		while (TRUE) {
#line 758 "Grid.c"
			Block20Data* _data20_;
			gint _tmp14_;
			GeeList* _tmp15_;
			gint _tmp16_;
			gint _tmp17_;
			GDateTime* new_date = NULL;
			GeeList* _tmp18_;
			gint _tmp19_;
			gpointer _tmp20_;
			gint _tmp21_;
			GeeList* _tmp22_;
			gint _tmp23_;
			gint _tmp24_;
			gint _tmp54_;
			gint _tmp55_ = 0;
			gint _tmp56_;
			GeeHashMap* _tmp59_;
			GDateTime* _tmp60_;
			MayaViewGridDay* _tmp61_;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_data20_ = g_slice_new0 (Block20Data);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_data20_->_ref_count_ = 1;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_data20_->self = g_object_ref (self);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (!_tmp12_) {
#line 786 "Grid.c"
				gint _tmp13_;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp13_ = i;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				i = _tmp13_ + 1;
#line 792 "Grid.c"
			}
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp12_ = FALSE;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp14_ = i;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp15_ = new_dates;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp16_ = gee_collection_get_size ((GeeCollection*) _tmp15_);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp17_ = _tmp16_;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (!(_tmp14_ < _tmp17_)) {
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				block20_data_unref (_data20_);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_data20_ = NULL;
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				break;
#line 812 "Grid.c"
			}
#line 112 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp18_ = new_dates;
#line 112 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp19_ = i;
#line 112 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp20_ = gee_list_get (_tmp18_, _tmp19_);
#line 112 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			new_date = (GDateTime*) _tmp20_;
#line 114 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp21_ = i;
#line 114 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp22_ = old_dates;
#line 114 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp23_ = gee_collection_get_size ((GeeCollection*) _tmp22_);
#line 114 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp24_ = _tmp23_;
#line 114 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (_tmp21_ < _tmp24_) {
#line 832 "Grid.c"
				GDateTime* old_date = NULL;
				GeeList* _tmp25_;
				gint _tmp26_;
				gpointer _tmp27_;
				GeeHashMap* _tmp28_;
				GDateTime* _tmp29_;
				gpointer _tmp30_;
				MayaViewGridDay* _tmp31_;
				GDateTime* _tmp32_;
				GDateTime* _tmp33_;
				MayaViewGridDay* _tmp34_;
#line 117 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp25_ = old_dates;
#line 117 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp26_ = i;
#line 117 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp27_ = gee_list_get (_tmp25_, _tmp26_);
#line 117 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				old_date = (GDateTime*) _tmp27_;
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp28_ = self->priv->data;
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp29_ = old_date;
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp30_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp28_, (gpointer) ((guintptr) maya_view_grid_day_hash (self, _tmp29_)));
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp31_ = (MayaViewGridDay*) _tmp30_;
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp32_ = new_date;
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp33_ = today;
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp34_ = maya_view_grid_update_day (self, _tmp31_, _tmp32_, _tmp33_, month_start);
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_g_object_unref0 (_data20_->day);
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_data20_->day = _tmp34_;
#line 118 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_g_object_unref0 (_tmp31_);
#line 114 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_g_date_time_unref0 (old_date);
#line 874 "Grid.c"
			} else {
				GDateTime* _tmp35_;
				MayaViewGridDay* _tmp36_;
				MayaViewGridDay* _tmp37_;
				GDateTime* _tmp38_;
				GDateTime* _tmp39_;
				MayaViewGridDay* _tmp40_;
				MayaViewGridDay* _tmp41_;
				MayaViewGridDay* _tmp42_;
				MayaViewGridDay* _tmp43_;
				gint _tmp44_;
				MayaViewGridDay* _tmp50_;
				gint _tmp51_;
				gint _tmp52_;
				MayaViewGridDay* _tmp53_;
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp35_ = new_date;
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp36_ = maya_view_grid_day_new (_tmp35_);
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				g_object_ref_sink (_tmp36_);
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp37_ = _tmp36_;
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp38_ = new_date;
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp39_ = today;
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp40_ = maya_view_grid_update_day (self, _tmp37_, _tmp38_, _tmp39_, month_start);
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_g_object_unref0 (_data20_->day);
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_data20_->day = _tmp40_;
#line 122 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_g_object_unref0 (_tmp37_);
#line 123 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp41_ = _data20_->day;
#line 123 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				g_signal_connect_object (_tmp41_, "on-event-add", (GCallback) ______lambda36__maya_view_grid_day_on_event_add, self, 0);
#line 124 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp42_ = _data20_->day;
#line 124 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				g_signal_connect_object ((GtkWidget*) _tmp42_, "scroll-event", (GCallback) ______lambda37__gtk_widget_scroll_event, self, 0);
#line 125 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp43_ = _data20_->day;
#line 125 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				g_signal_connect_data ((GtkWidget*) _tmp43_, "focus-in-event", (GCallback) ______lambda38__gtk_widget_focus_in_event, block20_data_ref (_data20_), (GClosureNotify) block20_data_unref, 0);
#line 130 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp44_ = col;
#line 130 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				if (_tmp44_ == 0) {
#line 926 "Grid.c"
					MayaViewGridDay* _tmp45_;
					GtkStyleContext* _tmp46_;
					GtkCssProvider* _tmp47_;
					MayaViewGridDay* _tmp48_;
					GtkStyleContext* _tmp49_;
#line 131 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp45_ = _data20_->day;
#line 131 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp46_ = gtk_widget_get_style_context ((GtkWidget*) _tmp45_);
#line 131 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp47_ = style_provider;
#line 131 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					gtk_style_context_add_provider (_tmp46_, (GtkStyleProvider*) _tmp47_, (guint) 600);
#line 132 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp48_ = _data20_->day;
#line 132 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp49_ = gtk_widget_get_style_context ((GtkWidget*) _tmp48_);
#line 132 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					gtk_style_context_add_class (_tmp49_, "firstcol");
#line 946 "Grid.c"
				}
#line 135 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp50_ = _data20_->day;
#line 135 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp51_ = col;
#line 135 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp52_ = row;
#line 135 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				gtk_grid_attach ((GtkGrid*) self, (GtkWidget*) _tmp50_, _tmp51_, _tmp52_, 1, 1);
#line 136 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp53_ = _data20_->day;
#line 136 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				gtk_widget_show_all ((GtkWidget*) _tmp53_);
#line 960 "Grid.c"
			}
#line 139 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp54_ = col;
#line 139 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			col = (_tmp54_ + 1) % 7;
#line 140 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp56_ = col;
#line 140 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (_tmp56_ == 0) {
#line 970 "Grid.c"
				gint _tmp57_;
#line 140 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp57_ = row;
#line 140 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp55_ = _tmp57_ + 1;
#line 976 "Grid.c"
			} else {
				gint _tmp58_;
#line 140 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp58_ = row;
#line 140 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp55_ = _tmp58_;
#line 983 "Grid.c"
			}
#line 140 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			row = _tmp55_;
#line 141 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp59_ = data_new;
#line 141 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp60_ = new_date;
#line 141 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp61_ = _data20_->day;
#line 141 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			gee_abstract_map_set ((GeeAbstractMap*) _tmp59_, (gpointer) ((guintptr) maya_view_grid_day_hash (self, _tmp60_)), _tmp61_);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_g_date_time_unref0 (new_date);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			block20_data_unref (_data20_);
#line 111 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_data20_ = NULL;
#line 1001 "Grid.c"
		}
	}
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	while (TRUE) {
#line 1006 "Grid.c"
		gint _tmp62_;
		GeeList* _tmp63_;
		gint _tmp64_;
		gint _tmp65_;
		GDateTime* old_date = NULL;
		GeeList* _tmp66_;
		gint _tmp67_;
		gpointer _tmp68_;
		MayaViewGridDay* old_day = NULL;
		GeeHashMap* _tmp69_;
		GDateTime* _tmp70_;
		gpointer _tmp71_;
		MayaViewGridDay* _tmp72_;
		gint _tmp73_;
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp62_ = i;
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp63_ = old_dates;
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp64_ = gee_collection_get_size ((GeeCollection*) _tmp63_);
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp65_ = _tmp64_;
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		if (!(_tmp62_ < _tmp65_)) {
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			break;
#line 1033 "Grid.c"
		}
#line 147 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp66_ = old_dates;
#line 147 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp67_ = i;
#line 147 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp68_ = gee_list_get (_tmp66_, _tmp67_);
#line 147 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		old_date = (GDateTime*) _tmp68_;
#line 148 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp69_ = self->priv->data;
#line 148 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp70_ = old_date;
#line 148 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp71_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp69_, (gpointer) ((guintptr) maya_view_grid_day_hash (self, _tmp70_)));
#line 148 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		old_day = (MayaViewGridDay*) _tmp71_;
#line 150 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp72_ = old_day;
#line 150 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		gtk_widget_destroy ((GtkWidget*) _tmp72_);
#line 151 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp73_ = i;
#line 151 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		i = _tmp73_ + 1;
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (old_day);
#line 145 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_date_time_unref0 (old_date);
#line 1063 "Grid.c"
	}
#line 154 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp74_ = self->priv->data;
#line 154 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gee_abstract_map_clear ((GeeAbstractMap*) _tmp74_);
#line 155 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp75_ = self->priv->data;
#line 155 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp76_ = data_new;
#line 155 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	gee_map_set_all ((GeeMap*) _tmp75_, (GeeMap*) _tmp76_);
#line 157 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_set_grid_range (self, new_range);
#line 88 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (style_provider);
#line 88 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (data_new);
#line 88 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (new_dates);
#line 88 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (old_dates);
#line 88 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_date_time_unref0 (today);
#line 1087 "Grid.c"
}


/**
     * Updates the given GridDay so that it shows the given date. Changes to its style etc.
     */
static MayaViewGridDay*
maya_view_grid_update_day (MayaViewGrid* self,
                           MayaViewGridDay* day,
                           GDateTime* new_date,
                           GDateTime* today,
                           GDateTime* month_start)
{
	MayaViewGridDay* result = NULL;
	gboolean _tmp0_ = FALSE;
	MayaViewGridDay* _tmp1_;
#line 163 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 163 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (day != NULL, NULL);
#line 163 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (new_date != NULL, NULL);
#line 163 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (today != NULL, NULL);
#line 163 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (month_start != NULL, NULL);
#line 164 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (g_date_time_get_day_of_year (new_date) == g_date_time_get_day_of_year (today)) {
#line 164 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp0_ = g_date_time_get_year (new_date) == g_date_time_get_year (today);
#line 1118 "Grid.c"
	} else {
#line 164 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp0_ = FALSE;
#line 1122 "Grid.c"
	}
#line 164 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (_tmp0_) {
#line 165 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		gtk_widget_set_name ((GtkWidget*) day, "today");
#line 1128 "Grid.c"
	}
#line 168 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_day_set_in_current_month (day, g_date_time_get_month (new_date) == g_date_time_get_month (month_start));
#line 170 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_day_update_date (day, new_date);
#line 171 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp1_ = _g_object_ref0 (day);
#line 171 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	result = _tmp1_;
#line 171 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return result;
#line 1140 "Grid.c"
}


/**
     * Puts the given event on the grid.
     */
void
maya_view_grid_add_event (MayaViewGrid* self,
                          ECalComponent* event)
{
	icalcomponent* comp = NULL;
	icalcomponent* _tmp0_;
#line 177 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 177 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (event != NULL);
#line 178 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = e_cal_component_get_icalcomponent (event);
#line 178 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	comp = _tmp0_;
#line 1161 "Grid.c"
	{
		GeeIterator* _dt_range_it = NULL;
		icalcomponent* _tmp1_;
		MayaUtilDateRange* _tmp2_;
		GeeCollection* _tmp3_;
		GeeCollection* _tmp4_;
		GeeIterator* _tmp5_;
		GeeIterator* _tmp6_;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp1_ = comp;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp2_ = self->priv->_grid_range;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp3_ = maya_util_event_date_ranges (_tmp1_, _tmp2_);
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp4_ = _tmp3_;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp5_ = gee_iterable_iterator ((GeeIterable*) _tmp4_);
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp6_ = _tmp5_;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_tmp4_);
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_dt_range_it = _tmp6_;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		while (TRUE) {
#line 1188 "Grid.c"
			GeeIterator* _tmp7_;
			MayaUtilDateRange* dt_range = NULL;
			GeeIterator* _tmp8_;
			gpointer _tmp9_;
			MayaUtilDateRange* _tmp10_;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp7_ = _dt_range_it;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (!gee_iterator_next (_tmp7_)) {
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				break;
#line 1200 "Grid.c"
			}
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp8_ = _dt_range_it;
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp9_ = gee_iterator_get (_tmp8_);
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			dt_range = (MayaUtilDateRange*) _tmp9_;
#line 180 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp10_ = dt_range;
#line 180 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			maya_view_grid_add_buttons_for_range (self, _tmp10_, event);
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_g_object_unref0 (dt_range);
#line 1214 "Grid.c"
		}
#line 179 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_dt_range_it);
#line 1218 "Grid.c"
	}
}


/**
     * Adds an eventbutton to the grid for the given event at each day of the given range.
     */
static Block21Data*
block21_data_ref (Block21Data* _data21_)
{
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_atomic_int_inc (&_data21_->_ref_count_);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return _data21_;
#line 1233 "Grid.c"
}


static void
block21_data_unref (void * _userdata_)
{
	Block21Data* _data21_;
	_data21_ = (Block21Data*) _userdata_;
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (g_atomic_int_dec_and_test (&_data21_->_ref_count_)) {
#line 1244 "Grid.c"
		MayaViewGrid* self;
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		self = _data21_->self;
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_data21_->event);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (self);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		g_slice_free (Block21Data, _data21_);
#line 1254 "Grid.c"
	}
}


static void
____lambda39_ (Block21Data* _data21_)
{
	MayaViewGrid* self;
#line 191 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	self = _data21_->self;
#line 192 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_signal_emit (self, maya_view_grid_signals[MAYA_VIEW_GRID_EDITION_REQUEST_SIGNAL], 0, _data21_->event);
#line 1267 "Grid.c"
}


static void
_____lambda39__maya_view_event_button_edition_request (MayaViewEventButton* _sender,
                                                       gpointer self)
{
#line 191 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	____lambda39_ (self);
#line 1277 "Grid.c"
}


static void
maya_view_grid_add_buttons_for_range (MayaViewGrid* self,
                                      MayaUtilDateRange* dt_range,
                                      ECalComponent* event)
{
	Block21Data* _data21_;
	ECalComponent* _tmp0_;
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (dt_range != NULL);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (event != NULL);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data21_ = g_slice_new0 (Block21Data);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data21_->_ref_count_ = 1;
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data21_->self = g_object_ref (self);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = _g_object_ref0 (event);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (_data21_->event);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data21_->event = _tmp0_;
#line 1306 "Grid.c"
	{
		GeeIterator* _date_it = NULL;
		GeeIterator* _tmp1_;
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp1_ = gee_iterable_iterator ((GeeIterable*) dt_range);
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_date_it = _tmp1_;
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		while (TRUE) {
#line 1316 "Grid.c"
			GeeIterator* _tmp2_;
			GDateTime* date = NULL;
			GeeIterator* _tmp3_;
			gpointer _tmp4_;
			MayaViewEventButton* button = NULL;
			GDateTime* _tmp5_;
			MayaViewEventButton* _tmp6_;
			GDateTime* _tmp7_;
			MayaViewEventButton* _tmp8_;
			MayaViewEventButton* _tmp9_;
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp2_ = _date_it;
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (!gee_iterator_next (_tmp2_)) {
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				break;
#line 1333 "Grid.c"
			}
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp3_ = _date_it;
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp4_ = gee_iterator_get (_tmp3_);
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			date = (GDateTime*) _tmp4_;
#line 189 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp5_ = date;
#line 189 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp6_ = maya_view_event_button_new (_data21_->event, _tmp5_);
#line 189 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			g_object_ref_sink (_tmp6_);
#line 189 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			button = _tmp6_;
#line 190 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp7_ = date;
#line 190 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp8_ = button;
#line 190 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			maya_view_grid_add_button_for_day (self, _tmp7_, _tmp8_);
#line 191 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp9_ = button;
#line 191 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			g_signal_connect_data (_tmp9_, "edition-request", (GCallback) _____lambda39__maya_view_event_button_edition_request, block21_data_ref (_data21_), (GClosureNotify) block21_data_unref, 0);
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_g_object_unref0 (button);
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_g_date_time_unref0 (date);
#line 1363 "Grid.c"
		}
#line 188 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_date_it);
#line 1367 "Grid.c"
	}
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	block21_data_unref (_data21_);
#line 187 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data21_ = NULL;
#line 1373 "Grid.c"
}


static void
maya_view_grid_add_button_for_day (MayaViewGrid* self,
                                   GDateTime* date,
                                   MayaViewEventButton* button)
{
	guint hash = 0U;
	GeeHashMap* _tmp0_;
	guint _tmp1_;
	MayaViewGridDay* grid_day = NULL;
	GeeHashMap* _tmp2_;
	guint _tmp3_;
	gpointer _tmp4_;
	MayaViewGridDay* _tmp5_;
#line 197 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 197 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (date != NULL);
#line 197 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (button != NULL);
#line 198 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	hash = maya_view_grid_day_hash (self, date);
#line 199 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = self->priv->data;
#line 199 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp1_ = hash;
#line 199 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp0_, (gpointer) ((guintptr) _tmp1_)) == FALSE) {
#line 200 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		return;
#line 1406 "Grid.c"
	}
#line 201 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp2_ = self->priv->data;
#line 201 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp3_ = hash;
#line 201 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp4_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp2_, (gpointer) ((guintptr) _tmp3_));
#line 201 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	grid_day = (MayaViewGridDay*) _tmp4_;
#line 202 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp5_ = grid_day;
#line 202 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_day_add_event_button (_tmp5_, button);
#line 197 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (grid_day);
#line 1422 "Grid.c"
}


static guint
maya_view_grid_day_hash (MayaViewGrid* self,
                         GDateTime* date)
{
	guint result = 0U;
#line 205 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (self != NULL, 0U);
#line 205 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (date != NULL, 0U);
#line 206 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	result = (guint) (((g_date_time_get_year (date) * 10000) + (g_date_time_get_month (date) * 100)) + g_date_time_get_day_of_month (date));
#line 206 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return result;
#line 1439 "Grid.c"
}


/**
     * Removes the given event from the grid.
     */
void
maya_view_grid_remove_event (MayaViewGrid* self,
                             ECalComponent* event)
{
#line 212 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 212 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (event != NULL);
#line 1454 "Grid.c"
	{
		GeeIterator* _grid_day_it = NULL;
		GeeHashMap* _tmp0_;
		GeeCollection* _tmp1_;
		GeeCollection* _tmp2_;
		GeeCollection* _tmp3_;
		GeeIterator* _tmp4_;
		GeeIterator* _tmp5_;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp0_ = self->priv->data;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp1_ = gee_abstract_map_get_values ((GeeAbstractMap*) _tmp0_);
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp2_ = _tmp1_;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp3_ = _tmp2_;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp4_ = gee_iterable_iterator ((GeeIterable*) _tmp3_);
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp5_ = _tmp4_;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_tmp3_);
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_grid_day_it = _tmp5_;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		while (TRUE) {
#line 1481 "Grid.c"
			GeeIterator* _tmp6_;
			MayaViewGridDay* grid_day = NULL;
			GeeIterator* _tmp7_;
			gpointer _tmp8_;
			MayaViewGridDay* _tmp9_;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp6_ = _grid_day_it;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (!gee_iterator_next (_tmp6_)) {
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				break;
#line 1493 "Grid.c"
			}
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp7_ = _grid_day_it;
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp8_ = gee_iterator_get (_tmp7_);
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			grid_day = (MayaViewGridDay*) _tmp8_;
#line 214 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp9_ = grid_day;
#line 214 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			maya_view_grid_day_remove_event (_tmp9_, event);
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_g_object_unref0 (grid_day);
#line 1507 "Grid.c"
		}
#line 213 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_grid_day_it);
#line 1511 "Grid.c"
	}
}


static Block22Data*
block22_data_ref (Block22Data* _data22_)
{
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_atomic_int_inc (&_data22_->_ref_count_);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return _data22_;
#line 1523 "Grid.c"
}


static void
block22_data_unref (void * _userdata_)
{
	Block22Data* _data22_;
	_data22_ = (Block22Data*) _userdata_;
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (g_atomic_int_dec_and_test (&_data22_->_ref_count_)) {
#line 1534 "Grid.c"
		MayaViewGrid* self;
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		self = _data22_->self;
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_data22_->event);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (self);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		g_slice_free (Block22Data, _data22_);
#line 1544 "Grid.c"
	}
}


static void
______lambda40_ (Block22Data* _data22_)
{
	MayaViewGrid* self;
#line 235 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	self = _data22_->self;
#line 236 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_signal_emit (self, maya_view_grid_signals[MAYA_VIEW_GRID_EDITION_REQUEST_SIGNAL], 0, _data22_->event);
#line 1557 "Grid.c"
}


static void
_______lambda40__maya_view_event_button_edition_request (MayaViewEventButton* _sender,
                                                         gpointer self)
{
#line 235 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	______lambda40_ (self);
#line 1567 "Grid.c"
}


void
maya_view_grid_update_event (MayaViewGrid* self,
                             ECalComponent* event)
{
	Block22Data* _data22_;
	ECalComponent* _tmp0_;
	GeeCollection* event_ranges = NULL;
	icalcomponent* _tmp1_;
	MayaUtilDateRange* _tmp2_;
	GeeCollection* _tmp3_;
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (event != NULL);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data22_ = g_slice_new0 (Block22Data);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data22_->_ref_count_ = 1;
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data22_->self = g_object_ref (self);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = _g_object_ref0 (event);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (_data22_->event);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data22_->event = _tmp0_;
#line 219 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp1_ = e_cal_component_get_icalcomponent (_data22_->event);
#line 219 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp2_ = self->priv->_grid_range;
#line 219 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp3_ = maya_util_event_date_ranges (_tmp1_, _tmp2_);
#line 219 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	event_ranges = _tmp3_;
#line 1605 "Grid.c"
	{
		GeeIterator* _grid_day_it = NULL;
		GeeHashMap* _tmp4_;
		GeeCollection* _tmp5_;
		GeeCollection* _tmp6_;
		GeeCollection* _tmp7_;
		GeeIterator* _tmp8_;
		GeeIterator* _tmp9_;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp4_ = self->priv->data;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp5_ = gee_abstract_map_get_values ((GeeAbstractMap*) _tmp4_);
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp6_ = _tmp5_;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp7_ = _tmp6_;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp8_ = gee_iterable_iterator ((GeeIterable*) _tmp7_);
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp9_ = _tmp8_;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_tmp7_);
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_grid_day_it = _tmp9_;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		while (TRUE) {
#line 1632 "Grid.c"
			GeeIterator* _tmp10_;
			MayaViewGridDay* grid_day = NULL;
			GeeIterator* _tmp11_;
			gpointer _tmp12_;
			gboolean contains = FALSE;
			gboolean _tmp22_;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp10_ = _grid_day_it;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (!gee_iterator_next (_tmp10_)) {
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				break;
#line 1645 "Grid.c"
			}
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp11_ = _grid_day_it;
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp12_ = gee_iterator_get (_tmp11_);
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			grid_day = (MayaViewGridDay*) _tmp12_;
#line 222 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			contains = FALSE;
#line 1655 "Grid.c"
			{
				GeeIterator* _event_range_it = NULL;
				GeeCollection* _tmp13_;
				GeeIterator* _tmp14_;
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp13_ = event_ranges;
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp14_ = gee_iterable_iterator ((GeeIterable*) _tmp13_);
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_event_range_it = _tmp14_;
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				while (TRUE) {
#line 1668 "Grid.c"
					GeeIterator* _tmp15_;
					MayaUtilDateRange* event_range = NULL;
					GeeIterator* _tmp16_;
					gpointer _tmp17_;
					MayaViewGridDay* _tmp18_;
					GDateTime* _tmp19_;
					GDateTime* _tmp20_;
					MayaUtilDateRange* _tmp21_;
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp15_ = _event_range_it;
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					if (!gee_iterator_next (_tmp15_)) {
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
						break;
#line 1683 "Grid.c"
					}
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp16_ = _event_range_it;
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp17_ = gee_iterator_get (_tmp16_);
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					event_range = (MayaUtilDateRange*) _tmp17_;
#line 225 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp18_ = grid_day;
#line 225 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp19_ = maya_view_grid_day_get_date (_tmp18_);
#line 225 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp20_ = _tmp19_;
#line 225 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp21_ = event_range;
#line 225 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					if (maya_util_is_day_in_range (_tmp20_, _tmp21_)) {
#line 226 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
						contains = TRUE;
#line 1703 "Grid.c"
					}
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_g_object_unref0 (event_range);
#line 1707 "Grid.c"
				}
#line 224 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_g_object_unref0 (_event_range_it);
#line 1711 "Grid.c"
			}
#line 230 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp22_ = contains;
#line 230 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (_tmp22_) {
#line 1717 "Grid.c"
				MayaViewGridDay* _tmp23_;
#line 231 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp23_ = grid_day;
#line 231 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				if (!maya_view_grid_day_update_event (_tmp23_, _data22_->event)) {
#line 1723 "Grid.c"
					MayaViewEventButton* button = NULL;
					MayaViewGridDay* _tmp24_;
					GDateTime* _tmp25_;
					GDateTime* _tmp26_;
					MayaViewEventButton* _tmp27_;
					MayaViewGridDay* _tmp28_;
					GDateTime* _tmp29_;
					GDateTime* _tmp30_;
					MayaViewEventButton* _tmp31_;
					MayaViewEventButton* _tmp32_;
#line 232 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp24_ = grid_day;
#line 232 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp25_ = maya_view_grid_day_get_date (_tmp24_);
#line 232 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp26_ = _tmp25_;
#line 232 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp27_ = maya_view_event_button_new (_data22_->event, _tmp26_);
#line 232 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					g_object_ref_sink (_tmp27_);
#line 232 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					button = _tmp27_;
#line 233 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp28_ = grid_day;
#line 233 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp29_ = maya_view_grid_day_get_date (_tmp28_);
#line 233 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp30_ = _tmp29_;
#line 233 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp31_ = button;
#line 233 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					maya_view_grid_add_button_for_day (self, _tmp30_, _tmp31_);
#line 235 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_tmp32_ = button;
#line 235 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					g_signal_connect_data (_tmp32_, "edition-request", (GCallback) _______lambda40__maya_view_event_button_edition_request, block22_data_ref (_data22_), (GClosureNotify) block22_data_unref, 0);
#line 231 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
					_g_object_unref0 (button);
#line 1762 "Grid.c"
				}
			} else {
				MayaViewGridDay* _tmp33_;
#line 240 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				_tmp33_ = grid_day;
#line 240 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				maya_view_grid_day_remove_event (_tmp33_, _data22_->event);
#line 1770 "Grid.c"
			}
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_g_object_unref0 (grid_day);
#line 1774 "Grid.c"
		}
#line 221 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_grid_day_it);
#line 1778 "Grid.c"
	}
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (event_ranges);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	block22_data_unref (_data22_);
#line 218 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_data22_ = NULL;
#line 1786 "Grid.c"
}


/**
     * Removes all events from the grid.
     */
void
maya_view_grid_remove_all_events (MayaViewGrid* self)
{
#line 248 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 1798 "Grid.c"
	{
		GeeIterator* _grid_day_it = NULL;
		GeeHashMap* _tmp0_;
		GeeCollection* _tmp1_;
		GeeCollection* _tmp2_;
		GeeCollection* _tmp3_;
		GeeIterator* _tmp4_;
		GeeIterator* _tmp5_;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp0_ = self->priv->data;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp1_ = gee_abstract_map_get_values ((GeeAbstractMap*) _tmp0_);
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp2_ = _tmp1_;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp3_ = _tmp2_;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp4_ = gee_iterable_iterator ((GeeIterable*) _tmp3_);
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp5_ = _tmp4_;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_tmp3_);
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_grid_day_it = _tmp5_;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		while (TRUE) {
#line 1825 "Grid.c"
			GeeIterator* _tmp6_;
			MayaViewGridDay* grid_day = NULL;
			GeeIterator* _tmp7_;
			gpointer _tmp8_;
			MayaViewGridDay* _tmp9_;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp6_ = _grid_day_it;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			if (!gee_iterator_next (_tmp6_)) {
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
				break;
#line 1837 "Grid.c"
			}
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp7_ = _grid_day_it;
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp8_ = gee_iterator_get (_tmp7_);
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			grid_day = (MayaViewGridDay*) _tmp8_;
#line 250 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_tmp9_ = grid_day;
#line 250 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			maya_view_grid_day_clear_events (_tmp9_);
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
			_g_object_unref0 (grid_day);
#line 1851 "Grid.c"
		}
#line 249 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (_grid_day_it);
#line 1855 "Grid.c"
	}
}


MayaUtilDateRange*
maya_view_grid_get_grid_range (MayaViewGrid* self)
{
	MayaUtilDateRange* result;
	MayaUtilDateRange* _tmp0_;
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_tmp0_ = self->priv->_grid_range;
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	result = _tmp0_;
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	return result;
#line 1873 "Grid.c"
}


static void
maya_view_grid_set_grid_range (MayaViewGrid* self,
                               MayaUtilDateRange* value)
{
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_return_if_fail (self != NULL);
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	if (maya_view_grid_get_grid_range (self) != value) {
#line 1885 "Grid.c"
		MayaUtilDateRange* _tmp0_;
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		_g_object_unref0 (self->priv->_grid_range);
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		self->priv->_grid_range = _tmp0_;
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		g_object_notify_by_pspec ((GObject *) self, maya_view_grid_properties[MAYA_VIEW_GRID_GRID_RANGE_PROPERTY]);
#line 1895 "Grid.c"
	}
}


static void
maya_view_grid_class_init (MayaViewGridClass * klass)
{
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_parent_class = g_type_class_peek_parent (klass);
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_type_class_add_private (klass, sizeof (MayaViewGridPrivate));
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_maya_view_grid_get_property;
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_maya_view_grid_set_property;
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	G_OBJECT_CLASS (klass)->finalize = maya_view_grid_finalize;
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), MAYA_VIEW_GRID_GRID_RANGE_PROPERTY, maya_view_grid_properties[MAYA_VIEW_GRID_GRID_RANGE_PROPERTY] = g_param_spec_object ("grid-range", "grid-range", "grid-range", MAYA_UTIL_TYPE_DATE_RANGE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_signals[MAYA_VIEW_GRID_ON_EVENT_ADD_SIGNAL] = g_signal_new ("on-event-add", MAYA_VIEW_TYPE_GRID, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__BOXED, G_TYPE_NONE, 1, G_TYPE_DATE_TIME);
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_signals[MAYA_VIEW_GRID_EDITION_REQUEST_SIGNAL] = g_signal_new ("edition-request", MAYA_VIEW_TYPE_GRID, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, e_cal_component_get_type ());
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	maya_view_grid_signals[MAYA_VIEW_GRID_SELECTION_CHANGED_SIGNAL] = g_signal_new ("selection-changed", MAYA_VIEW_TYPE_GRID, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__BOXED, G_TYPE_NONE, 1, G_TYPE_DATE_TIME);
#line 1921 "Grid.c"
}


static void
maya_view_grid_instance_init (MayaViewGrid * self)
{
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	self->priv = MAYA_VIEW_GRID_GET_PRIVATE (self);
#line 1930 "Grid.c"
}


static void
maya_view_grid_finalize (GObject * obj)
{
	MayaViewGrid * self;
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_VIEW_TYPE_GRID, MayaViewGrid);
#line 29 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (self->priv->data);
#line 31 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (self->priv->_grid_range);
#line 40 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	_g_object_unref0 (self->priv->selected_gridday);
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	G_OBJECT_CLASS (maya_view_grid_parent_class)->finalize (obj);
#line 1948 "Grid.c"
}


/**
 * Represents the entire date grid as a table.
 */
GType
maya_view_grid_get_type (void)
{
	static volatile gsize maya_view_grid_type_id__volatile = 0;
	if (g_once_init_enter (&maya_view_grid_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (MayaViewGridClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maya_view_grid_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MayaViewGrid), 0, (GInstanceInitFunc) maya_view_grid_instance_init, NULL };
		GType maya_view_grid_type_id;
		maya_view_grid_type_id = g_type_register_static (gtk_grid_get_type (), "MayaViewGrid", &g_define_type_info, 0);
		g_once_init_leave (&maya_view_grid_type_id__volatile, maya_view_grid_type_id);
	}
	return maya_view_grid_type_id__volatile;
}


static void
_vala_maya_view_grid_get_property (GObject * object,
                                   guint property_id,
                                   GValue * value,
                                   GParamSpec * pspec)
{
	MayaViewGrid * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, MAYA_VIEW_TYPE_GRID, MayaViewGrid);
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	switch (property_id) {
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		case MAYA_VIEW_GRID_GRID_RANGE_PROPERTY:
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		g_value_set_object (value, maya_view_grid_get_grid_range (self));
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		break;
#line 1985 "Grid.c"
		default:
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		break;
#line 1991 "Grid.c"
	}
}


static void
_vala_maya_view_grid_set_property (GObject * object,
                                   guint property_id,
                                   const GValue * value,
                                   GParamSpec * pspec)
{
	MayaViewGrid * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, MAYA_VIEW_TYPE_GRID, MayaViewGrid);
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
	switch (property_id) {
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		case MAYA_VIEW_GRID_GRID_RANGE_PROPERTY:
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		maya_view_grid_set_grid_range (self, g_value_get_object (value));
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		break;
#line 2012 "Grid.c"
		default:
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 27 "/run/build/io.elementary.calendar/src/Grid/Grid.vala"
		break;
#line 2018 "Grid.c"
	}
}



