/*
 * Generated by gdbus-codegen 2.58.1 from org.gnome.evolution.dataserver.DirectBook.xml. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __E_DBUS_DIRECT_BOOK_H__
#define __E_DBUS_DIRECT_BOOK_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.evolution.dataserver.DirectBook */

#define E_DBUS_TYPE_DIRECT_BOOK (e_dbus_direct_book_get_type ())
#define E_DBUS_DIRECT_BOOK(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_DIRECT_BOOK, EDBusDirectBook))
#define E_DBUS_IS_DIRECT_BOOK(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_DIRECT_BOOK))
#define E_DBUS_DIRECT_BOOK_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), E_DBUS_TYPE_DIRECT_BOOK, EDBusDirectBookIface))

struct _EDBusDirectBook;
typedef struct _EDBusDirectBook EDBusDirectBook;
typedef struct _EDBusDirectBookIface EDBusDirectBookIface;

struct _EDBusDirectBookIface
{
  GTypeInterface parent_iface;

  const gchar * (*get_backend_config) (EDBusDirectBook *object);

  const gchar * (*get_backend_name) (EDBusDirectBook *object);

  const gchar * (*get_backend_path) (EDBusDirectBook *object);

};

GType e_dbus_direct_book_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *e_dbus_direct_book_interface_info (void);
guint e_dbus_direct_book_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus property accessors: */
const gchar *e_dbus_direct_book_get_backend_path (EDBusDirectBook *object);
gchar *e_dbus_direct_book_dup_backend_path (EDBusDirectBook *object);
void e_dbus_direct_book_set_backend_path (EDBusDirectBook *object, const gchar *value);

const gchar *e_dbus_direct_book_get_backend_name (EDBusDirectBook *object);
gchar *e_dbus_direct_book_dup_backend_name (EDBusDirectBook *object);
void e_dbus_direct_book_set_backend_name (EDBusDirectBook *object, const gchar *value);

const gchar *e_dbus_direct_book_get_backend_config (EDBusDirectBook *object);
gchar *e_dbus_direct_book_dup_backend_config (EDBusDirectBook *object);
void e_dbus_direct_book_set_backend_config (EDBusDirectBook *object, const gchar *value);


/* ---- */

#define E_DBUS_TYPE_DIRECT_BOOK_PROXY (e_dbus_direct_book_proxy_get_type ())
#define E_DBUS_DIRECT_BOOK_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_DIRECT_BOOK_PROXY, EDBusDirectBookProxy))
#define E_DBUS_DIRECT_BOOK_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), E_DBUS_TYPE_DIRECT_BOOK_PROXY, EDBusDirectBookProxyClass))
#define E_DBUS_DIRECT_BOOK_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), E_DBUS_TYPE_DIRECT_BOOK_PROXY, EDBusDirectBookProxyClass))
#define E_DBUS_IS_DIRECT_BOOK_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_DIRECT_BOOK_PROXY))
#define E_DBUS_IS_DIRECT_BOOK_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), E_DBUS_TYPE_DIRECT_BOOK_PROXY))

typedef struct _EDBusDirectBookProxy EDBusDirectBookProxy;
typedef struct _EDBusDirectBookProxyClass EDBusDirectBookProxyClass;
typedef struct _EDBusDirectBookProxyPrivate EDBusDirectBookProxyPrivate;

struct _EDBusDirectBookProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  EDBusDirectBookProxyPrivate *priv;
};

struct _EDBusDirectBookProxyClass
{
  GDBusProxyClass parent_class;
};

GType e_dbus_direct_book_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (EDBusDirectBookProxy, g_object_unref)
#endif

void e_dbus_direct_book_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
EDBusDirectBook *e_dbus_direct_book_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
EDBusDirectBook *e_dbus_direct_book_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void e_dbus_direct_book_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
EDBusDirectBook *e_dbus_direct_book_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
EDBusDirectBook *e_dbus_direct_book_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define E_DBUS_TYPE_DIRECT_BOOK_SKELETON (e_dbus_direct_book_skeleton_get_type ())
#define E_DBUS_DIRECT_BOOK_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_DIRECT_BOOK_SKELETON, EDBusDirectBookSkeleton))
#define E_DBUS_DIRECT_BOOK_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), E_DBUS_TYPE_DIRECT_BOOK_SKELETON, EDBusDirectBookSkeletonClass))
#define E_DBUS_DIRECT_BOOK_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), E_DBUS_TYPE_DIRECT_BOOK_SKELETON, EDBusDirectBookSkeletonClass))
#define E_DBUS_IS_DIRECT_BOOK_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_DIRECT_BOOK_SKELETON))
#define E_DBUS_IS_DIRECT_BOOK_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), E_DBUS_TYPE_DIRECT_BOOK_SKELETON))

typedef struct _EDBusDirectBookSkeleton EDBusDirectBookSkeleton;
typedef struct _EDBusDirectBookSkeletonClass EDBusDirectBookSkeletonClass;
typedef struct _EDBusDirectBookSkeletonPrivate EDBusDirectBookSkeletonPrivate;

struct _EDBusDirectBookSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  EDBusDirectBookSkeletonPrivate *priv;
};

struct _EDBusDirectBookSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType e_dbus_direct_book_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (EDBusDirectBookSkeleton, g_object_unref)
#endif

EDBusDirectBook *e_dbus_direct_book_skeleton_new (void);


G_END_DECLS

#endif /* __E_DBUS_DIRECT_BOOK_H__ */
