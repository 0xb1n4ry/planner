/* CalendarWeek.c generated by valac 0.40.11, the Vala compiler
 * generated from CalendarWeek.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <glib/gi18n-lib.h>


#define WIDGETS_CALENDAR_TYPE_CALENDAR_WEEK (widgets_calendar_calendar_week_get_type ())
#define WIDGETS_CALENDAR_CALENDAR_WEEK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR_WEEK, WidgetsCalendarCalendarWeek))
#define WIDGETS_CALENDAR_CALENDAR_WEEK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR_WEEK, WidgetsCalendarCalendarWeekClass))
#define WIDGETS_CALENDAR_IS_CALENDAR_WEEK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR_WEEK))
#define WIDGETS_CALENDAR_IS_CALENDAR_WEEK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR_WEEK))
#define WIDGETS_CALENDAR_CALENDAR_WEEK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR_WEEK, WidgetsCalendarCalendarWeekClass))

typedef struct _WidgetsCalendarCalendarWeek WidgetsCalendarCalendarWeek;
typedef struct _WidgetsCalendarCalendarWeekClass WidgetsCalendarCalendarWeekClass;
typedef struct _WidgetsCalendarCalendarWeekPrivate WidgetsCalendarCalendarWeekPrivate;
enum  {
	WIDGETS_CALENDAR_CALENDAR_WEEK_0_PROPERTY,
	WIDGETS_CALENDAR_CALENDAR_WEEK_NUM_PROPERTIES
};
static GParamSpec* widgets_calendar_calendar_week_properties[WIDGETS_CALENDAR_CALENDAR_WEEK_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

struct _WidgetsCalendarCalendarWeek {
	GtkGrid parent_instance;
	WidgetsCalendarCalendarWeekPrivate * priv;
};

struct _WidgetsCalendarCalendarWeekClass {
	GtkGridClass parent_class;
};


static gpointer widgets_calendar_calendar_week_parent_class = NULL;

GType widgets_calendar_calendar_week_get_type (void) G_GNUC_CONST;
WidgetsCalendarCalendarWeek* widgets_calendar_calendar_week_new (void);
WidgetsCalendarCalendarWeek* widgets_calendar_calendar_week_construct (GType object_type);


WidgetsCalendarCalendarWeek*
widgets_calendar_calendar_week_construct (GType object_type)
{
	WidgetsCalendarCalendarWeek * self = NULL;
	GtkLabel* label_monday = NULL;
	GtkLabel* _tmp0_;
	GtkStyleContext* _tmp1_;
	GtkLabel* label_tuesday = NULL;
	GtkLabel* _tmp2_;
	GtkStyleContext* _tmp3_;
	GtkLabel* label_wednesday = NULL;
	GtkLabel* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkLabel* label_thursday = NULL;
	GtkLabel* _tmp6_;
	GtkStyleContext* _tmp7_;
	GtkLabel* label_friday = NULL;
	GtkLabel* _tmp8_;
	GtkStyleContext* _tmp9_;
	GtkLabel* label_saturday = NULL;
	GtkLabel* _tmp10_;
	GtkStyleContext* _tmp11_;
	GtkLabel* label_sunday = NULL;
	GtkLabel* _tmp12_;
	GtkStyleContext* _tmp13_;
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	self = (WidgetsCalendarCalendarWeek*) g_object_new (object_type, NULL);
#line 24 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_grid_set_column_homogeneous ((GtkGrid*) self, TRUE);
#line 26 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp0_ = (GtkLabel*) gtk_label_new (_ ("Mon"));
#line 26 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	g_object_ref_sink (_tmp0_);
#line 26 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	label_monday = _tmp0_;
#line 27 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp1_ = gtk_widget_get_style_context ((GtkWidget*) label_monday);
#line 27 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_style_context_add_class (_tmp1_, "h4");
#line 29 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new (_ ("Tue"));
#line 29 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	g_object_ref_sink (_tmp2_);
#line 29 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	label_tuesday = _tmp2_;
#line 30 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp3_ = gtk_widget_get_style_context ((GtkWidget*) label_tuesday);
#line 30 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_style_context_add_class (_tmp3_, "h4");
#line 32 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp4_ = (GtkLabel*) gtk_label_new (_ ("Wed"));
#line 32 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	g_object_ref_sink (_tmp4_);
#line 32 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	label_wednesday = _tmp4_;
#line 33 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) label_wednesday);
#line 33 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_style_context_add_class (_tmp5_, "h4");
#line 35 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp6_ = (GtkLabel*) gtk_label_new (_ ("Thu"));
#line 35 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	g_object_ref_sink (_tmp6_);
#line 35 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	label_thursday = _tmp6_;
#line 36 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp7_ = gtk_widget_get_style_context ((GtkWidget*) label_thursday);
#line 36 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_style_context_add_class (_tmp7_, "h4");
#line 38 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp8_ = (GtkLabel*) gtk_label_new (_ ("Fri"));
#line 38 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	g_object_ref_sink (_tmp8_);
#line 38 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	label_friday = _tmp8_;
#line 39 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp9_ = gtk_widget_get_style_context ((GtkWidget*) label_friday);
#line 39 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_style_context_add_class (_tmp9_, "h4");
#line 41 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp10_ = (GtkLabel*) gtk_label_new (_ ("Sat"));
#line 41 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	g_object_ref_sink (_tmp10_);
#line 41 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	label_saturday = _tmp10_;
#line 42 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp11_ = gtk_widget_get_style_context ((GtkWidget*) label_saturday);
#line 42 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_style_context_add_class (_tmp11_, "h4");
#line 44 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp12_ = (GtkLabel*) gtk_label_new (_ ("Sun"));
#line 44 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	g_object_ref_sink (_tmp12_);
#line 44 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	label_sunday = _tmp12_;
#line 45 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_tmp13_ = gtk_widget_get_style_context ((GtkWidget*) label_sunday);
#line 45 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_style_context_add_class (_tmp13_, "h4");
#line 47 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) label_monday);
#line 48 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) label_tuesday);
#line 49 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) label_wednesday);
#line 50 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) label_thursday);
#line 51 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) label_friday);
#line 52 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) label_saturday);
#line 53 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) label_sunday);
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_g_object_unref0 (label_sunday);
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_g_object_unref0 (label_saturday);
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_g_object_unref0 (label_friday);
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_g_object_unref0 (label_thursday);
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_g_object_unref0 (label_wednesday);
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_g_object_unref0 (label_tuesday);
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	_g_object_unref0 (label_monday);
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	return self;
#line 196 "CalendarWeek.c"
}


WidgetsCalendarCalendarWeek*
widgets_calendar_calendar_week_new (void)
{
#line 23 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	return widgets_calendar_calendar_week_construct (WIDGETS_CALENDAR_TYPE_CALENDAR_WEEK);
#line 205 "CalendarWeek.c"
}


static void
widgets_calendar_calendar_week_class_init (WidgetsCalendarCalendarWeekClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/Calendar/CalendarWeek.vala"
	widgets_calendar_calendar_week_parent_class = g_type_class_peek_parent (klass);
#line 214 "CalendarWeek.c"
}


static void
widgets_calendar_calendar_week_instance_init (WidgetsCalendarCalendarWeek * self)
{
}


GType
widgets_calendar_calendar_week_get_type (void)
{
	static volatile gsize widgets_calendar_calendar_week_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_calendar_calendar_week_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsCalendarCalendarWeekClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_calendar_calendar_week_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsCalendarCalendarWeek), 0, (GInstanceInitFunc) widgets_calendar_calendar_week_instance_init, NULL };
		GType widgets_calendar_calendar_week_type_id;
		widgets_calendar_calendar_week_type_id = g_type_register_static (gtk_grid_get_type (), "WidgetsCalendarCalendarWeek", &g_define_type_info, 0);
		g_once_init_leave (&widgets_calendar_calendar_week_type_id__volatile, widgets_calendar_calendar_week_type_id);
	}
	return widgets_calendar_calendar_week_type_id__volatile;
}



