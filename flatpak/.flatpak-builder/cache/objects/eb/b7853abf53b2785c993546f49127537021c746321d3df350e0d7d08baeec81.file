/* command-personas.c generated by valac 0.40.11, the Vala compiler
 * generated from command-personas.vala, do not modify */

/*
 * Copyright (C) 2010 Collabora Ltd.
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors:
 *       Philip Withnall <philip.withnall@collabora.co.uk>
 */


#include <glib.h>
#include <glib-object.h>
#include <gio/gio.h>
#include <stdlib.h>
#include <string.h>
#include <gee.h>
#include <folks/folks.h>
#include <stdio.h>
#include <readline/readline.h>


#define FOLKS_INSPECT_TYPE_COMMAND (folks_inspect_command_get_type ())
#define FOLKS_INSPECT_COMMAND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommand))
#define FOLKS_INSPECT_COMMAND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommandClass))
#define FOLKS_INSPECT_IS_COMMAND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_TYPE_COMMAND))
#define FOLKS_INSPECT_IS_COMMAND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_TYPE_COMMAND))
#define FOLKS_INSPECT_COMMAND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_TYPE_COMMAND, FolksInspectCommandClass))

typedef struct _FolksInspectCommand FolksInspectCommand;
typedef struct _FolksInspectCommandClass FolksInspectCommandClass;
typedef struct _FolksInspectCommandPrivate FolksInspectCommandPrivate;

#define FOLKS_INSPECT_TYPE_CLIENT (folks_inspect_client_get_type ())
#define FOLKS_INSPECT_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClient))
#define FOLKS_INSPECT_CLIENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClientClass))
#define FOLKS_INSPECT_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_TYPE_CLIENT))
#define FOLKS_INSPECT_IS_CLIENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_TYPE_CLIENT))
#define FOLKS_INSPECT_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_TYPE_CLIENT, FolksInspectClientClass))

typedef struct _FolksInspectClient FolksInspectClient;
typedef struct _FolksInspectClientClass FolksInspectClientClass;

#define FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS (folks_inspect_commands_personas_get_type ())
#define FOLKS_INSPECT_COMMANDS_PERSONAS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS, FolksInspectCommandsPersonas))
#define FOLKS_INSPECT_COMMANDS_PERSONAS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS, FolksInspectCommandsPersonasClass))
#define FOLKS_INSPECT_COMMANDS_IS_PERSONAS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS))
#define FOLKS_INSPECT_COMMANDS_IS_PERSONAS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS))
#define FOLKS_INSPECT_COMMANDS_PERSONAS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS, FolksInspectCommandsPersonasClass))

typedef struct _FolksInspectCommandsPersonas FolksInspectCommandsPersonas;
typedef struct _FolksInspectCommandsPersonasClass FolksInspectCommandsPersonasClass;
typedef struct _FolksInspectCommandsPersonasPrivate FolksInspectCommandsPersonasPrivate;
#define _g_free0(var) (var = (g_free (var), NULL))
#define _folks_inspect_command_unref0(var) ((var == NULL) ? NULL : (var = (folks_inspect_command_unref (var), NULL)))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _FolksInspectCommandsPersonasRunData FolksInspectCommandsPersonasRunData;

struct _FolksInspectCommand {
	GTypeInstance parent_instance;
	volatile int ref_count;
	FolksInspectCommandPrivate * priv;
	FolksInspectClient* client;
};

struct _FolksInspectCommandClass {
	GTypeClass parent_class;
	void (*finalize) (FolksInspectCommand *self);
	void (*run) (FolksInspectCommand* self, const gchar* command_string, GAsyncReadyCallback _callback_, gpointer _user_data_);
	gint (*run_finish) (FolksInspectCommand* self, GAsyncResult* _res_);
	gchar** (*complete_subcommand) (FolksInspectCommand* self, const gchar* subcommand, int* result_length1);
	const gchar* (*get_name) (FolksInspectCommand* self);
	const gchar* (*get_description) (FolksInspectCommand* self);
	const gchar* (*get_help) (FolksInspectCommand* self);
};

struct _FolksInspectCommandsPersonas {
	FolksInspectCommand parent_instance;
	FolksInspectCommandsPersonasPrivate * priv;
};

struct _FolksInspectCommandsPersonasClass {
	FolksInspectCommandClass parent_class;
};

struct _FolksInspectCommandsPersonasRunData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksInspectCommandsPersonas* self;
	gchar* command_string;
	gint result;
	gboolean found_persona;
	GeeIterator* _individual_it;
	FolksInspectClient* _tmp0_;
	FolksIndividualAggregator* _tmp1_;
	FolksIndividualAggregator* _tmp2_;
	GeeMap* _tmp3_;
	GeeMap* _tmp4_;
	GeeCollection* _tmp5_;
	GeeCollection* _tmp6_;
	GeeCollection* _tmp7_;
	GeeIterator* _tmp8_;
	GeeIterator* _tmp9_;
	GeeIterator* _tmp10_;
	FolksIndividual* individual;
	GeeIterator* _tmp11_;
	gpointer _tmp12_;
	GeeIterator* _persona_it;
	FolksIndividual* _tmp13_;
	GeeSet* _tmp14_;
	GeeSet* _tmp15_;
	GeeIterator* _tmp16_;
	GeeIterator* _tmp17_;
	FolksPersona* persona;
	GeeIterator* _tmp18_;
	gpointer _tmp19_;
	gboolean _tmp20_;
	FolksPersona* _tmp21_;
	const gchar* _tmp22_;
	const gchar* _tmp23_;
	FolksPersona* _tmp24_;
	gboolean _tmp25_;
	gboolean _tmp26_;
};


static gpointer folks_inspect_commands_personas_parent_class = NULL;

gpointer folks_inspect_command_ref (gpointer instance);
void folks_inspect_command_unref (gpointer instance);
GParamSpec* folks_inspect_param_spec_command (const gchar* name,
                                              const gchar* nick,
                                              const gchar* blurb,
                                              GType object_type,
                                              GParamFlags flags);
void folks_inspect_value_set_command (GValue* value,
                                      gpointer v_object);
void folks_inspect_value_take_command (GValue* value,
                                       gpointer v_object);
gpointer folks_inspect_value_get_command (const GValue* value);
GType folks_inspect_command_get_type (void) G_GNUC_CONST;
GType folks_inspect_client_get_type (void) G_GNUC_CONST;
GType folks_inspect_commands_personas_get_type (void) G_GNUC_CONST;
FolksInspectCommandsPersonas* folks_inspect_commands_personas_new (FolksInspectClient* client);
FolksInspectCommandsPersonas* folks_inspect_commands_personas_construct (GType object_type,
                                                                         FolksInspectClient* client);
FolksInspectCommand* folks_inspect_command_construct (GType object_type,
                                                      FolksInspectClient* client);
static void folks_inspect_commands_personas_real_run_data_free (gpointer _data);
static void folks_inspect_commands_personas_real_run_async_ready_wrapper (GObject *source_object,
                                                                   GAsyncResult *res,
                                                                   void *user_data);
static void folks_inspect_commands_personas_real_run (FolksInspectCommand* base,
                                               const gchar* command_string,
                                               GAsyncReadyCallback _callback_,
                                               gpointer _user_data_);
static gboolean folks_inspect_commands_personas_real_run_co (FolksInspectCommandsPersonasRunData* _data_);
FolksIndividualAggregator* folks_inspect_client_get_aggregator (FolksInspectClient* self);
void folks_inspect_utils_print_persona (FolksPersona* persona);
void folks_inspect_utils_print_blank_line (void);
void folks_inspect_utils_print_line (const gchar* format,
                                     ...) G_GNUC_PRINTF(1,2);
static gchar** folks_inspect_commands_personas_real_complete_subcommand (FolksInspectCommand* base,
                                                                  const gchar* subcommand,
                                                                  int* result_length1);
gchar* folks_inspect_utils_persona_uid_completion_cb (const gchar* word,
                                                      gint state);
static gchar* _folks_inspect_utils_persona_uid_completion_cb_rl_compentry_func_t (const gchar* str,
                                                                           gint a);
static gchar** _vala_array_dup10 (gchar** self,
                           int length);
static gint _vala_array_length (gpointer array);


FolksInspectCommandsPersonas*
folks_inspect_commands_personas_construct (GType object_type,
                                           FolksInspectClient* client)
{
	FolksInspectCommandsPersonas* self = NULL;
#line 50 "/run/build/folks/tools/inspect/command-personas.vala"
	g_return_val_if_fail (client != NULL, NULL);
#line 52 "/run/build/folks/tools/inspect/command-personas.vala"
	self = (FolksInspectCommandsPersonas*) folks_inspect_command_construct (object_type, client);
#line 50 "/run/build/folks/tools/inspect/command-personas.vala"
	return self;
#line 204 "command-personas.c"
}


FolksInspectCommandsPersonas*
folks_inspect_commands_personas_new (FolksInspectClient* client)
{
#line 50 "/run/build/folks/tools/inspect/command-personas.vala"
	return folks_inspect_commands_personas_construct (FOLKS_INSPECT_COMMANDS_TYPE_PERSONAS, client);
#line 213 "command-personas.c"
}


static void
folks_inspect_commands_personas_real_run_data_free (gpointer _data)
{
	FolksInspectCommandsPersonasRunData* _data_;
	_data_ = _data;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_g_free0 (_data_->command_string);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_folks_inspect_command_unref0 (_data_->self);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	g_slice_free (FolksInspectCommandsPersonasRunData, _data_);
#line 228 "command-personas.c"
}


static void
folks_inspect_commands_personas_real_run_async_ready_wrapper (GObject *source_object,
                                                              GAsyncResult *res,
                                                              void *user_data)
{
	FolksInspectCommandsPersonasRunData* _task_data_;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	if (_task_data_->_callback_ != NULL) {
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 244 "command-personas.c"
	}
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_task_data_->_task_complete_ = TRUE;
#line 248 "command-personas.c"
}


static gpointer
_folks_inspect_command_ref0 (gpointer self)
{
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	return self ? folks_inspect_command_ref (self) : NULL;
#line 257 "command-personas.c"
}


static void
folks_inspect_commands_personas_real_run (FolksInspectCommand* base,
                                          const gchar* command_string,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_)
{
	FolksInspectCommandsPersonas * self;
	FolksInspectCommandsPersonasRunData* _data_;
	FolksInspectCommandsPersonas* _tmp0_;
	gchar* _tmp1_;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	self = (FolksInspectCommandsPersonas*) base;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_ = g_slice_new0 (FolksInspectCommandsPersonasRunData);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_->_callback_ = _callback_;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_->_async_result = g_task_new (NULL, NULL, folks_inspect_commands_personas_real_run_async_ready_wrapper, _user_data_);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	if (_callback_ == NULL) {
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_task_complete_ = TRUE;
#line 283 "command-personas.c"
	}
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_inspect_commands_personas_real_run_data_free);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_tmp0_ = _folks_inspect_command_ref0 (self);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_->self = _tmp0_;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_tmp1_ = g_strdup (command_string);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_g_free0 (_data_->command_string);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_->command_string = _tmp1_;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	folks_inspect_commands_personas_real_run_co (_data_);
#line 299 "command-personas.c"
}


static gint
folks_inspect_commands_personas_real_run_finish (FolksInspectCommand* base,
                                                 GAsyncResult* _res_)
{
	gint result;
	FolksInspectCommandsPersonasRunData* _data_;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	result = _data_->result;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	return result;
#line 315 "command-personas.c"
}


static gboolean
folks_inspect_commands_personas_real_run_co (FolksInspectCommandsPersonasRunData* _data_)
{
#line 55 "/run/build/folks/tools/inspect/command-personas.vala"
	switch (_data_->_state_) {
#line 55 "/run/build/folks/tools/inspect/command-personas.vala"
		case 0:
#line 326 "command-personas.c"
		goto _state_0;
		default:
#line 55 "/run/build/folks/tools/inspect/command-personas.vala"
		g_assert_not_reached ();
#line 331 "command-personas.c"
	}
	_state_0:
#line 57 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_->found_persona = FALSE;
#line 336 "command-personas.c"
	{
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp0_ = ((FolksInspectCommand*) _data_->self)->client;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp1_ = folks_inspect_client_get_aggregator (_data_->_tmp0_);
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp2_ = _data_->_tmp1_;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp3_ = folks_individual_aggregator_get_individuals (_data_->_tmp2_);
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp4_ = _data_->_tmp3_;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp5_ = gee_map_get_values (_data_->_tmp4_);
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp6_ = _data_->_tmp5_;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp7_ = _data_->_tmp6_;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp8_ = gee_iterable_iterator ((GeeIterable*) _data_->_tmp7_);
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp9_ = _data_->_tmp8_;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_g_object_unref0 (_data_->_tmp7_);
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_individual_it = _data_->_tmp9_;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		while (TRUE) {
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
			_data_->_tmp10_ = _data_->_individual_it;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
			if (!gee_iterator_next (_data_->_tmp10_)) {
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
				break;
#line 370 "command-personas.c"
			}
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
			_data_->_tmp11_ = _data_->_individual_it;
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
			_data_->_tmp12_ = gee_iterator_get (_data_->_tmp11_);
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
			_data_->individual = (FolksIndividual*) _data_->_tmp12_;
#line 378 "command-personas.c"
			{
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
				_data_->_tmp13_ = _data_->individual;
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
				_data_->_tmp14_ = folks_individual_get_personas (_data_->_tmp13_);
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
				_data_->_tmp15_ = _data_->_tmp14_;
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
				_data_->_tmp16_ = gee_iterable_iterator ((GeeIterable*) _data_->_tmp15_);
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
				_data_->_persona_it = _data_->_tmp16_;
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
				while (TRUE) {
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
					_data_->_tmp17_ = _data_->_persona_it;
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
					if (!gee_iterator_next (_data_->_tmp17_)) {
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
						break;
#line 398 "command-personas.c"
					}
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
					_data_->_tmp18_ = _data_->_persona_it;
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
					_data_->_tmp19_ = gee_iterator_get (_data_->_tmp18_);
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
					_data_->persona = (FolksPersona*) _data_->_tmp19_;
#line 64 "/run/build/folks/tools/inspect/command-personas.vala"
					if (_data_->command_string != NULL) {
#line 64 "/run/build/folks/tools/inspect/command-personas.vala"
						_data_->_tmp21_ = _data_->persona;
#line 64 "/run/build/folks/tools/inspect/command-personas.vala"
						_data_->_tmp22_ = folks_persona_get_uid (_data_->_tmp21_);
#line 64 "/run/build/folks/tools/inspect/command-personas.vala"
						_data_->_tmp23_ = _data_->_tmp22_;
#line 64 "/run/build/folks/tools/inspect/command-personas.vala"
						_data_->_tmp20_ = g_strcmp0 (_data_->_tmp23_, _data_->command_string) != 0;
#line 416 "command-personas.c"
					} else {
#line 64 "/run/build/folks/tools/inspect/command-personas.vala"
						_data_->_tmp20_ = FALSE;
#line 420 "command-personas.c"
					}
#line 64 "/run/build/folks/tools/inspect/command-personas.vala"
					if (_data_->_tmp20_) {
#line 65 "/run/build/folks/tools/inspect/command-personas.vala"
						_g_object_unref0 (_data_->persona);
#line 65 "/run/build/folks/tools/inspect/command-personas.vala"
						continue;
#line 428 "command-personas.c"
					}
#line 67 "/run/build/folks/tools/inspect/command-personas.vala"
					_data_->_tmp24_ = _data_->persona;
#line 67 "/run/build/folks/tools/inspect/command-personas.vala"
					folks_inspect_utils_print_persona (_data_->_tmp24_);
#line 69 "/run/build/folks/tools/inspect/command-personas.vala"
					if (_data_->command_string == NULL) {
#line 70 "/run/build/folks/tools/inspect/command-personas.vala"
						folks_inspect_utils_print_blank_line ();
#line 438 "command-personas.c"
					} else {
#line 72 "/run/build/folks/tools/inspect/command-personas.vala"
						_data_->found_persona = TRUE;
#line 442 "command-personas.c"
					}
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
					_g_object_unref0 (_data_->persona);
#line 446 "command-personas.c"
				}
#line 61 "/run/build/folks/tools/inspect/command-personas.vala"
				_g_object_unref0 (_data_->_persona_it);
#line 450 "command-personas.c"
			}
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
			_g_object_unref0 (_data_->individual);
#line 454 "command-personas.c"
		}
#line 59 "/run/build/folks/tools/inspect/command-personas.vala"
		_g_object_unref0 (_data_->_individual_it);
#line 458 "command-personas.c"
	}
#line 77 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_->_tmp26_ = _data_->found_persona;
#line 77 "/run/build/folks/tools/inspect/command-personas.vala"
	if (!_data_->_tmp26_) {
#line 77 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp25_ = _data_->command_string != NULL;
#line 466 "command-personas.c"
	} else {
#line 77 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->_tmp25_ = FALSE;
#line 470 "command-personas.c"
	}
#line 77 "/run/build/folks/tools/inspect/command-personas.vala"
	if (_data_->_tmp25_) {
#line 79 "/run/build/folks/tools/inspect/command-personas.vala"
		folks_inspect_utils_print_line ("Unrecognised persona UID '%s'.", _data_->command_string);
#line 80 "/run/build/folks/tools/inspect/command-personas.vala"
		_data_->result = 1;
#line 80 "/run/build/folks/tools/inspect/command-personas.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 80 "/run/build/folks/tools/inspect/command-personas.vala"
		if (_data_->_state_ != 0) {
#line 80 "/run/build/folks/tools/inspect/command-personas.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 80 "/run/build/folks/tools/inspect/command-personas.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 486 "command-personas.c"
			}
		}
#line 80 "/run/build/folks/tools/inspect/command-personas.vala"
		g_object_unref (_data_->_async_result);
#line 80 "/run/build/folks/tools/inspect/command-personas.vala"
		return FALSE;
#line 493 "command-personas.c"
	}
#line 83 "/run/build/folks/tools/inspect/command-personas.vala"
	_data_->result = 0;
#line 83 "/run/build/folks/tools/inspect/command-personas.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 83 "/run/build/folks/tools/inspect/command-personas.vala"
	if (_data_->_state_ != 0) {
#line 83 "/run/build/folks/tools/inspect/command-personas.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 83 "/run/build/folks/tools/inspect/command-personas.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 505 "command-personas.c"
		}
	}
#line 83 "/run/build/folks/tools/inspect/command-personas.vala"
	g_object_unref (_data_->_async_result);
#line 83 "/run/build/folks/tools/inspect/command-personas.vala"
	return FALSE;
#line 512 "command-personas.c"
}


static gchar*
_folks_inspect_utils_persona_uid_completion_cb_rl_compentry_func_t (const gchar* str,
                                                                    gint a)
{
	gchar* result;
	result = folks_inspect_utils_persona_uid_completion_cb (str, a);
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	return result;
#line 524 "command-personas.c"
}


static gchar**
_vala_array_dup10 (gchar** self,
                   int length)
{
	gchar** result;
	int i;
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	result = g_new0 (gchar*, length + 1);
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	for (i = 0; i < length; i++) {
#line 538 "command-personas.c"
		gchar* _tmp0_;
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
		_tmp0_ = g_strdup (self[i]);
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
		result[i] = _tmp0_;
#line 544 "command-personas.c"
	}
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	return result;
#line 548 "command-personas.c"
}


static gchar**
folks_inspect_commands_personas_real_complete_subcommand (FolksInspectCommand* base,
                                                          const gchar* subcommand,
                                                          int* result_length1)
{
	FolksInspectCommandsPersonas * self;
	gchar** result = NULL;
	gchar** _tmp0_;
	gchar** _tmp1_;
	gchar** _tmp2_;
	gint _tmp2__length1;
	gchar** _tmp3_;
	gint _tmp3__length1;
#line 86 "/run/build/folks/tools/inspect/command-personas.vala"
	self = (FolksInspectCommandsPersonas*) base;
#line 86 "/run/build/folks/tools/inspect/command-personas.vala"
	g_return_val_if_fail (subcommand != NULL, NULL);
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	_tmp1_ = _tmp0_ = rl_completion_matches (subcommand, _folks_inspect_utils_persona_uid_completion_cb_rl_compentry_func_t);
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	_tmp2_ = (_tmp1_ != NULL) ? _vala_array_dup10 (_tmp1_, _vala_array_length (_tmp0_)) : ((gpointer) _tmp1_);
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	_tmp2__length1 = _vala_array_length (_tmp0_);
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	_tmp3_ = _tmp2_;
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	_tmp3__length1 = _tmp2__length1;
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	if (result_length1) {
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
		*result_length1 = _tmp3__length1;
#line 583 "command-personas.c"
	}
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	result = _tmp3_;
#line 89 "/run/build/folks/tools/inspect/command-personas.vala"
	return result;
#line 589 "command-personas.c"
}


static const gchar*
folks_inspect_commands_personas_real_get_name (FolksInspectCommand* base)
{
	const gchar* result;
	FolksInspectCommandsPersonas* self;
#line 29 "/run/build/folks/tools/inspect/command-personas.vala"
	self = (FolksInspectCommandsPersonas*) base;
#line 29 "/run/build/folks/tools/inspect/command-personas.vala"
	result = "personas";
#line 29 "/run/build/folks/tools/inspect/command-personas.vala"
	return result;
#line 604 "command-personas.c"
}


static const gchar*
folks_inspect_commands_personas_real_get_description (FolksInspectCommand* base)
{
	const gchar* result;
	FolksInspectCommandsPersonas* self;
#line 34 "/run/build/folks/tools/inspect/command-personas.vala"
	self = (FolksInspectCommandsPersonas*) base;
#line 36 "/run/build/folks/tools/inspect/command-personas.vala"
	result = "Inspect the personas currently present in the aggregator";
#line 36 "/run/build/folks/tools/inspect/command-personas.vala"
	return result;
#line 619 "command-personas.c"
}


static const gchar*
folks_inspect_commands_personas_real_get_help (FolksInspectCommand* base)
{
	const gchar* result;
	FolksInspectCommandsPersonas* self;
#line 42 "/run/build/folks/tools/inspect/command-personas.vala"
	self = (FolksInspectCommandsPersonas*) base;
#line 44 "/run/build/folks/tools/inspect/command-personas.vala"
	result = "personas                  List all known personas.\n" "personas [persona UID]    Display the details of the " "specified persona.";
#line 44 "/run/build/folks/tools/inspect/command-personas.vala"
	return result;
#line 634 "command-personas.c"
}


static void
folks_inspect_commands_personas_class_init (FolksInspectCommandsPersonasClass * klass)
{
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	folks_inspect_commands_personas_parent_class = g_type_class_peek_parent (klass);
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	((FolksInspectCommandClass *) klass)->run = (void (*) (FolksInspectCommand *, const gchar*, GAsyncReadyCallback, gpointer)) folks_inspect_commands_personas_real_run;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	((FolksInspectCommandClass *) klass)->run_finish = (gint (*) (FolksInspectCommand *, GAsyncResult*)) folks_inspect_commands_personas_real_run_finish;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	((FolksInspectCommandClass *) klass)->complete_subcommand = (gchar** (*) (FolksInspectCommand *, const gchar*, int*)) folks_inspect_commands_personas_real_complete_subcommand;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	FOLKS_INSPECT_COMMAND_CLASS (klass)->get_name = folks_inspect_commands_personas_real_get_name;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	FOLKS_INSPECT_COMMAND_CLASS (klass)->get_description = folks_inspect_commands_personas_real_get_description;
#line 25 "/run/build/folks/tools/inspect/command-personas.vala"
	FOLKS_INSPECT_COMMAND_CLASS (klass)->get_help = folks_inspect_commands_personas_real_get_help;
#line 655 "command-personas.c"
}


static void
folks_inspect_commands_personas_instance_init (FolksInspectCommandsPersonas * self)
{
}


GType
folks_inspect_commands_personas_get_type (void)
{
	static volatile gsize folks_inspect_commands_personas_type_id__volatile = 0;
	if (g_once_init_enter (&folks_inspect_commands_personas_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksInspectCommandsPersonasClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_inspect_commands_personas_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksInspectCommandsPersonas), 0, (GInstanceInitFunc) folks_inspect_commands_personas_instance_init, NULL };
		GType folks_inspect_commands_personas_type_id;
		folks_inspect_commands_personas_type_id = g_type_register_static (FOLKS_INSPECT_TYPE_COMMAND, "FolksInspectCommandsPersonas", &g_define_type_info, 0);
		g_once_init_leave (&folks_inspect_commands_personas_type_id__volatile, folks_inspect_commands_personas_type_id);
	}
	return folks_inspect_commands_personas_type_id__volatile;
}


static gint
_vala_array_length (gpointer array)
{
	int length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}



