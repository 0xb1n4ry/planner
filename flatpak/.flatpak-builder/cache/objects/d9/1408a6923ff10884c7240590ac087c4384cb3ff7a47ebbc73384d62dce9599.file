/* import.c generated by valac 0.40.11, the Vala compiler
 * generated from import.vala, do not modify */

/*
 * Copyright (C) 2010 Collabora Ltd.
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors:
 *       Philip Withnall <philip.withnall@collabora.co.uk>
 */


#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <glib/gi18n-lib.h>
#include <locale.h>
#include <config.h>
#include <stdio.h>
#include <folks/folks.h>
#include <gio/gio.h>
#include <gee.h>


#define FOLKS_TYPE_IMPORT_TOOL (folks_import_tool_get_type ())
#define FOLKS_IMPORT_TOOL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_IMPORT_TOOL, FolksImportTool))
#define FOLKS_IMPORT_TOOL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_IMPORT_TOOL, FolksImportToolClass))
#define FOLKS_IS_IMPORT_TOOL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_IMPORT_TOOL))
#define FOLKS_IS_IMPORT_TOOL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_IMPORT_TOOL))
#define FOLKS_IMPORT_TOOL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_IMPORT_TOOL, FolksImportToolClass))

typedef struct _FolksImportTool FolksImportTool;
typedef struct _FolksImportToolClass FolksImportToolClass;
typedef struct _FolksImportToolPrivate FolksImportToolPrivate;
enum  {
	FOLKS_IMPORT_TOOL_0_PROPERTY,
	FOLKS_IMPORT_TOOL_NUM_PROPERTIES
};
static GParamSpec* folks_import_tool_properties[FOLKS_IMPORT_TOOL_NUM_PROPERTIES];
typedef struct _Block1Data Block1Data;
#define _g_main_loop_unref0(var) ((var == NULL) ? NULL : (var = (g_main_loop_unref (var), NULL)))
#define _g_option_context_free0(var) ((var == NULL) ? NULL : (var = (g_option_context_free (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define FOLKS_TYPE_IMPORTER (folks_importer_get_type ())
#define FOLKS_IMPORTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_IMPORTER, FolksImporter))
#define FOLKS_IMPORTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_IMPORTER, FolksImporterClass))
#define FOLKS_IS_IMPORTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_IMPORTER))
#define FOLKS_IS_IMPORTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_IMPORTER))
#define FOLKS_IMPORTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_IMPORTER, FolksImporterClass))

typedef struct _FolksImporter FolksImporter;
typedef struct _FolksImporterClass FolksImporterClass;

#define FOLKS_IMPORTERS_TYPE_PIDGIN (folks_importers_pidgin_get_type ())
#define FOLKS_IMPORTERS_PIDGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_IMPORTERS_TYPE_PIDGIN, FolksImportersPidgin))
#define FOLKS_IMPORTERS_PIDGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_IMPORTERS_TYPE_PIDGIN, FolksImportersPidginClass))
#define FOLKS_IMPORTERS_IS_PIDGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_IMPORTERS_TYPE_PIDGIN))
#define FOLKS_IMPORTERS_IS_PIDGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_IMPORTERS_TYPE_PIDGIN))
#define FOLKS_IMPORTERS_PIDGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_IMPORTERS_TYPE_PIDGIN, FolksImportersPidginClass))

typedef struct _FolksImportersPidgin FolksImportersPidgin;
typedef struct _FolksImportersPidginClass FolksImportersPidginClass;
typedef struct _FolksImportToolImportData FolksImportToolImportData;
typedef struct _FolksImporterPrivate FolksImporterPrivate;
enum  {
	FOLKS_IMPORTER_0_PROPERTY,
	FOLKS_IMPORTER_NUM_PROPERTIES
};
static GParamSpec* folks_importer_properties[FOLKS_IMPORTER_NUM_PROPERTIES];

struct _FolksImportTool {
	GObject parent_instance;
	FolksImportToolPrivate * priv;
};

struct _FolksImportToolClass {
	GObjectClass parent_class;
};

struct _Block1Data {
	int _ref_count_;
	GMainLoop* main_loop;
	gboolean success;
};

typedef enum  {
	FOLKS_IMPORT_ERROR_MALFORMED_INPUT
} FolksImportError;
#define FOLKS_IMPORT_ERROR folks_import_error_quark ()
struct _FolksImportToolImportData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	gboolean result;
	FolksBackendStore* backend_store;
	FolksBackendStore* _tmp0_;
	FolksBackendStore* _tmp1_;
	GError* e1;
	FILE* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	GError* _tmp5_;
	const gchar* _tmp6_;
	FolksBackend* kf_backend;
	FolksBackendStore* _tmp7_;
	FolksBackend* _tmp8_;
	FolksBackend* _tmp9_;
	FILE* _tmp10_;
	gchar* _tmp11_;
	gchar* _tmp12_;
	FolksBackend* _tmp13_;
	GError* e2;
	FILE* _tmp14_;
	gchar* _tmp15_;
	gchar* _tmp16_;
	GError* _tmp17_;
	const gchar* _tmp18_;
	FolksPersonaStore* destination_store;
	GeeCollection* stores;
	FolksBackend* _tmp19_;
	GeeMap* _tmp20_;
	GeeMap* _tmp21_;
	GeeCollection* _tmp22_;
	GeeCollection* _tmp23_;
	GeeCollection* _tmp24_;
	gint _tmp25_;
	gint _tmp26_;
	FILE* _tmp27_;
	gchar* _tmp28_;
	gchar* _tmp29_;
	GeeIterator* _persona_store_it;
	GeeCollection* _tmp30_;
	GeeIterator* _tmp31_;
	GeeIterator* _tmp32_;
	FolksPersonaStore* persona_store;
	GeeIterator* _tmp33_;
	gpointer _tmp34_;
	FolksPersonaStore* _tmp35_;
	FolksPersonaStore* _tmp36_;
	FolksPersonaStore* _tmp37_;
	GError* e3;
	FILE* _tmp38_;
	gchar* _tmp39_;
	gchar* _tmp40_;
	GError* _tmp41_;
	const gchar* _tmp42_;
	const gchar* _tmp43_;
	FolksImporter* importer;
	FolksImportersPidgin* _tmp44_;
	FolksImporter* _tmp45_;
	FolksPersonaStore* _tmp46_;
	const gchar* _tmp47_;
	GError* e;
	FILE* _tmp48_;
	gchar* _tmp49_;
	gchar* _tmp50_;
	GError* _tmp51_;
	const gchar* _tmp52_;
	FolksPersonaStore* _tmp53_;
	FILE* _tmp54_;
	gchar* _tmp55_;
	gchar* _tmp56_;
	const gchar* _tmp57_;
	GError * _inner_error_;
};

struct _FolksImporter {
	GObject parent_instance;
	FolksImporterPrivate * priv;
};

struct _FolksImporterClass {
	GObjectClass parent_class;
	void (*import) (FolksImporter* self, FolksPersonaStore* destination_store, const gchar* source_filename, GAsyncReadyCallback _callback_, gpointer _user_data_);
	guint (*import_finish) (FolksImporter* self, GAsyncResult* _res_, GError** error);
};


static gpointer folks_import_tool_parent_class = NULL;
static gchar* folks_import_tool_source;
static gchar* folks_import_tool_source = NULL;
static gchar* folks_import_tool_source_filename;
static gchar* folks_import_tool_source_filename = NULL;
static gpointer folks_importer_parent_class = NULL;

GType folks_import_tool_get_type (void) G_GNUC_CONST;
#define FOLKS_IMPORT_TOOL_DEFAULT_SOURCE "pidgin"
gint folks_import_tool_main (gchar** args,
                             int args_length1);
static Block1Data* block1_data_ref (Block1Data* _data1_);
static void block1_data_unref (void * _userdata_);
static void folks_import_tool_import (GAsyncReadyCallback _callback_,
                               gpointer _user_data_);
static gboolean folks_import_tool_import_finish (GAsyncResult* _res_);
static void __lambda4_ (Block1Data* _data1_,
                 GObject* o,
                 GAsyncResult* r);
static void ___lambda4__gasync_ready_callback (GObject* source_object,
                                        GAsyncResult* res,
                                        gpointer self);
static void folks_import_tool_import_data_free (gpointer _data);
static void folks_import_tool_import_async_ready_wrapper (GObject *source_object,
                                                   GAsyncResult *res,
                                                   void *user_data);
static gboolean folks_import_tool_import_co (FolksImportToolImportData* _data_);
static void folks_import_tool_import_ready (GObject* source_object,
                                     GAsyncResult* _res_,
                                     gpointer _user_data_);
GType folks_importer_get_type (void) G_GNUC_CONST;
FolksImportersPidgin* folks_importers_pidgin_new (void);
FolksImportersPidgin* folks_importers_pidgin_construct (GType object_type);
GType folks_importers_pidgin_get_type (void) G_GNUC_CONST;
void folks_importer_import (FolksImporter* self,
                            FolksPersonaStore* destination_store,
                            const gchar* source_filename,
                            GAsyncReadyCallback _callback_,
                            gpointer _user_data_);
GQuark folks_import_error_quark (void);
guint folks_importer_import_finish (FolksImporter* self,
                                    GAsyncResult* _res_,
                                    GError** error);
FolksImportTool* folks_import_tool_new (void);
FolksImportTool* folks_import_tool_construct (GType object_type);
static void folks_import_tool_finalize (GObject * obj);
FolksImporter* folks_importer_construct (GType object_type);

static const GOptionEntry FOLKS_IMPORT_TOOL_options[3] = {{"source", 's', 0, G_OPTION_ARG_STRING, &folks_import_tool_source, N_ ("Source backend name (default: ‘pidgin’)"), "name"}, {"source-filename", (gchar) 0, 0, G_OPTION_ARG_FILENAME, &folks_import_tool_source_filename, N_ ("Source filename (default: specific to source backend)"), NULL}, {NULL}};

static Block1Data*
block1_data_ref (Block1Data* _data1_)
{
#line 51 "/run/build/folks/tools/import.vala"
	g_atomic_int_inc (&_data1_->_ref_count_);
#line 51 "/run/build/folks/tools/import.vala"
	return _data1_;
#line 256 "import.c"
}


static void
block1_data_unref (void * _userdata_)
{
	Block1Data* _data1_;
	_data1_ = (Block1Data*) _userdata_;
#line 51 "/run/build/folks/tools/import.vala"
	if (g_atomic_int_dec_and_test (&_data1_->_ref_count_)) {
#line 51 "/run/build/folks/tools/import.vala"
		_g_main_loop_unref0 (_data1_->main_loop);
#line 51 "/run/build/folks/tools/import.vala"
		g_slice_free (Block1Data, _data1_);
#line 271 "import.c"
	}
}


static gchar*
string_strip (const gchar* self)
{
	gchar* result = NULL;
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
#line 1304 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1305 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1305 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1306 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = _result_;
#line 1306 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_strstrip (_tmp1_);
#line 1307 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _result_;
#line 1307 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 297 "import.c"
}


static void
__lambda4_ (Block1Data* _data1_,
            GObject* o,
            GAsyncResult* r)
{
	GMainLoop* _tmp0_;
#line 87 "/run/build/folks/tools/import.vala"
	g_return_if_fail (r != NULL);
#line 89 "/run/build/folks/tools/import.vala"
	_data1_->success = folks_import_tool_import_finish (r);
#line 90 "/run/build/folks/tools/import.vala"
	_tmp0_ = _data1_->main_loop;
#line 90 "/run/build/folks/tools/import.vala"
	g_main_loop_quit (_tmp0_);
#line 315 "import.c"
}


static void
___lambda4__gasync_ready_callback (GObject* source_object,
                                   GAsyncResult* res,
                                   gpointer self)
{
#line 87 "/run/build/folks/tools/import.vala"
	__lambda4_ (self, source_object, res);
#line 87 "/run/build/folks/tools/import.vala"
	block1_data_unref (self);
#line 328 "import.c"
}


gint
folks_import_tool_main (gchar** args,
                        int args_length1)
{
	gint result = 0;
	Block1Data* _data1_;
	GOptionContext* context = NULL;
	GOptionContext* _tmp0_;
	GOptionContext* _tmp1_;
	gboolean _tmp10_ = FALSE;
	const gchar* _tmp11_;
	FolksIndividualAggregator* aggregator = NULL;
	FolksIndividualAggregator* _tmp16_;
	GMainLoop* _tmp17_;
	GMainLoop* _tmp18_;
	gint _tmp19_ = 0;
	gboolean _tmp20_;
	GError * _inner_error_ = NULL;
#line 51 "/run/build/folks/tools/import.vala"
	_data1_ = g_slice_new0 (Block1Data);
#line 51 "/run/build/folks/tools/import.vala"
	_data1_->_ref_count_ = 1;
#line 53 "/run/build/folks/tools/import.vala"
	setlocale (LC_ALL, "");
#line 54 "/run/build/folks/tools/import.vala"
	bindtextdomain (GETTEXT_PACKAGE, LOCALE_DIR);
#line 55 "/run/build/folks/tools/import.vala"
	textdomain (GETTEXT_PACKAGE);
#line 57 "/run/build/folks/tools/import.vala"
	_tmp0_ = g_option_context_new (_ ("— import meta-contact information to libfolks"));
#line 57 "/run/build/folks/tools/import.vala"
	context = _tmp0_;
#line 59 "/run/build/folks/tools/import.vala"
	_tmp1_ = context;
#line 59 "/run/build/folks/tools/import.vala"
	g_option_context_add_main_entries (_tmp1_, FOLKS_IMPORT_TOOL_options, "folks");
#line 368 "import.c"
	{
		GOptionContext* _tmp2_;
#line 63 "/run/build/folks/tools/import.vala"
		_tmp2_ = context;
#line 63 "/run/build/folks/tools/import.vala"
		g_option_context_parse (_tmp2_, &args_length1, &args, &_inner_error_);
#line 63 "/run/build/folks/tools/import.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 377 "import.c"
			gint _tmp3_ = -1;
#line 63 "/run/build/folks/tools/import.vala"
			if (_inner_error_->domain == G_OPTION_ERROR) {
#line 381 "import.c"
				goto __catch0_g_option_error;
			}
#line 63 "/run/build/folks/tools/import.vala"
			_g_option_context_free0 (context);
#line 63 "/run/build/folks/tools/import.vala"
			block1_data_unref (_data1_);
#line 63 "/run/build/folks/tools/import.vala"
			_data1_ = NULL;
#line 63 "/run/build/folks/tools/import.vala"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 63 "/run/build/folks/tools/import.vala"
			g_clear_error (&_inner_error_);
#line 63 "/run/build/folks/tools/import.vala"
			return _tmp3_;
#line 396 "import.c"
		}
	}
	goto __finally0;
	__catch0_g_option_error:
	{
		GError* e = NULL;
		FILE* _tmp4_;
		gchar* _tmp5_;
		gchar* _tmp6_;
		GError* _tmp7_;
		const gchar* _tmp8_;
#line 61 "/run/build/folks/tools/import.vala"
		e = _inner_error_;
#line 61 "/run/build/folks/tools/import.vala"
		_inner_error_ = NULL;
#line 68 "/run/build/folks/tools/import.vala"
		_tmp4_ = stderr;
#line 68 "/run/build/folks/tools/import.vala"
		_tmp5_ = g_strconcat (_ ("Couldn’t parse command line options: %s"), "\n", NULL);
#line 68 "/run/build/folks/tools/import.vala"
		_tmp6_ = _tmp5_;
#line 68 "/run/build/folks/tools/import.vala"
		_tmp7_ = e;
#line 68 "/run/build/folks/tools/import.vala"
		_tmp8_ = _tmp7_->message;
#line 68 "/run/build/folks/tools/import.vala"
		fprintf (_tmp4_, _tmp6_, _tmp8_);
#line 68 "/run/build/folks/tools/import.vala"
		_g_free0 (_tmp6_);
#line 70 "/run/build/folks/tools/import.vala"
		result = 1;
#line 70 "/run/build/folks/tools/import.vala"
		_g_error_free0 (e);
#line 70 "/run/build/folks/tools/import.vala"
		_g_option_context_free0 (context);
#line 70 "/run/build/folks/tools/import.vala"
		block1_data_unref (_data1_);
#line 70 "/run/build/folks/tools/import.vala"
		_data1_ = NULL;
#line 70 "/run/build/folks/tools/import.vala"
		return result;
#line 438 "import.c"
	}
	__finally0:
#line 61 "/run/build/folks/tools/import.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 443 "import.c"
		gint _tmp9_ = -1;
#line 61 "/run/build/folks/tools/import.vala"
		_g_option_context_free0 (context);
#line 61 "/run/build/folks/tools/import.vala"
		block1_data_unref (_data1_);
#line 61 "/run/build/folks/tools/import.vala"
		_data1_ = NULL;
#line 61 "/run/build/folks/tools/import.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 61 "/run/build/folks/tools/import.vala"
		g_clear_error (&_inner_error_);
#line 61 "/run/build/folks/tools/import.vala"
		return _tmp9_;
#line 457 "import.c"
	}
#line 74 "/run/build/folks/tools/import.vala"
	_tmp11_ = folks_import_tool_source;
#line 74 "/run/build/folks/tools/import.vala"
	if (_tmp11_ == NULL) {
#line 74 "/run/build/folks/tools/import.vala"
		_tmp10_ = TRUE;
#line 465 "import.c"
	} else {
		const gchar* _tmp12_;
		gchar* _tmp13_;
		gchar* _tmp14_;
#line 74 "/run/build/folks/tools/import.vala"
		_tmp12_ = folks_import_tool_source;
#line 74 "/run/build/folks/tools/import.vala"
		_tmp13_ = string_strip (_tmp12_);
#line 74 "/run/build/folks/tools/import.vala"
		_tmp14_ = _tmp13_;
#line 74 "/run/build/folks/tools/import.vala"
		_tmp10_ = g_strcmp0 (_tmp14_, "") == 0;
#line 74 "/run/build/folks/tools/import.vala"
		_g_free0 (_tmp14_);
#line 480 "import.c"
	}
#line 74 "/run/build/folks/tools/import.vala"
	if (_tmp10_) {
#line 484 "import.c"
		gchar* _tmp15_;
#line 75 "/run/build/folks/tools/import.vala"
		_tmp15_ = g_strdup (FOLKS_IMPORT_TOOL_DEFAULT_SOURCE);
#line 75 "/run/build/folks/tools/import.vala"
		_g_free0 (folks_import_tool_source);
#line 75 "/run/build/folks/tools/import.vala"
		folks_import_tool_source = _tmp15_;
#line 492 "import.c"
	}
#line 80 "/run/build/folks/tools/import.vala"
	_tmp16_ = folks_individual_aggregator_dup ();
#line 80 "/run/build/folks/tools/import.vala"
	aggregator = _tmp16_;
#line 81 "/run/build/folks/tools/import.vala"
	_g_object_unref0 (aggregator);
#line 81 "/run/build/folks/tools/import.vala"
	aggregator = NULL;
#line 84 "/run/build/folks/tools/import.vala"
	_tmp17_ = g_main_loop_new (NULL, FALSE);
#line 84 "/run/build/folks/tools/import.vala"
	_data1_->main_loop = _tmp17_;
#line 86 "/run/build/folks/tools/import.vala"
	_data1_->success = FALSE;
#line 87 "/run/build/folks/tools/import.vala"
	folks_import_tool_import (___lambda4__gasync_ready_callback, block1_data_ref (_data1_));
#line 93 "/run/build/folks/tools/import.vala"
	_tmp18_ = _data1_->main_loop;
#line 93 "/run/build/folks/tools/import.vala"
	g_main_loop_run (_tmp18_);
#line 95 "/run/build/folks/tools/import.vala"
	_tmp20_ = _data1_->success;
#line 95 "/run/build/folks/tools/import.vala"
	if (_tmp20_) {
#line 95 "/run/build/folks/tools/import.vala"
		_tmp19_ = 0;
#line 520 "import.c"
	} else {
#line 95 "/run/build/folks/tools/import.vala"
		_tmp19_ = 1;
#line 524 "import.c"
	}
#line 95 "/run/build/folks/tools/import.vala"
	result = _tmp19_;
#line 95 "/run/build/folks/tools/import.vala"
	_g_object_unref0 (aggregator);
#line 95 "/run/build/folks/tools/import.vala"
	_g_option_context_free0 (context);
#line 95 "/run/build/folks/tools/import.vala"
	block1_data_unref (_data1_);
#line 95 "/run/build/folks/tools/import.vala"
	_data1_ = NULL;
#line 95 "/run/build/folks/tools/import.vala"
	return result;
#line 538 "import.c"
}


int
main (int argc,
      char ** argv)
{
#line 51 "/run/build/folks/tools/import.vala"
	return folks_import_tool_main (argv, argc);
#line 548 "import.c"
}


static void
folks_import_tool_import_data_free (gpointer _data)
{
	FolksImportToolImportData* _data_;
	_data_ = _data;
#line 34 "/run/build/folks/tools/import.vala"
	g_slice_free (FolksImportToolImportData, _data_);
#line 559 "import.c"
}


static void
folks_import_tool_import_async_ready_wrapper (GObject *source_object,
                                              GAsyncResult *res,
                                              void *user_data)
{
	FolksImportToolImportData* _task_data_;
#line 34 "/run/build/folks/tools/import.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 34 "/run/build/folks/tools/import.vala"
	if (_task_data_->_callback_ != NULL) {
#line 34 "/run/build/folks/tools/import.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 575 "import.c"
	}
#line 34 "/run/build/folks/tools/import.vala"
	_task_data_->_task_complete_ = TRUE;
#line 579 "import.c"
}


static void
folks_import_tool_import (GAsyncReadyCallback _callback_,
                          gpointer _user_data_)
{
	FolksImportToolImportData* _data_;
#line 34 "/run/build/folks/tools/import.vala"
	_data_ = g_slice_new0 (FolksImportToolImportData);
#line 34 "/run/build/folks/tools/import.vala"
	_data_->_callback_ = _callback_;
#line 34 "/run/build/folks/tools/import.vala"
	_data_->_async_result = g_task_new (NULL, NULL, folks_import_tool_import_async_ready_wrapper, _user_data_);
#line 34 "/run/build/folks/tools/import.vala"
	if (_callback_ == NULL) {
#line 34 "/run/build/folks/tools/import.vala"
		_data_->_task_complete_ = TRUE;
#line 598 "import.c"
	}
#line 34 "/run/build/folks/tools/import.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_import_tool_import_data_free);
#line 34 "/run/build/folks/tools/import.vala"
	folks_import_tool_import_co (_data_);
#line 604 "import.c"
}


static gboolean
folks_import_tool_import_finish (GAsyncResult* _res_)
{
	gboolean result;
	FolksImportToolImportData* _data_;
#line 34 "/run/build/folks/tools/import.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 34 "/run/build/folks/tools/import.vala"
	result = _data_->result;
#line 34 "/run/build/folks/tools/import.vala"
	return result;
#line 619 "import.c"
}


static void
folks_import_tool_import_ready (GObject* source_object,
                                GAsyncResult* _res_,
                                gpointer _user_data_)
{
	FolksImportToolImportData* _data_;
#line 104 "/run/build/folks/tools/import.vala"
	_data_ = _user_data_;
#line 104 "/run/build/folks/tools/import.vala"
	_data_->_source_object_ = source_object;
#line 104 "/run/build/folks/tools/import.vala"
	_data_->_res_ = _res_;
#line 104 "/run/build/folks/tools/import.vala"
	_data_->_task_complete_ = TRUE;
#line 104 "/run/build/folks/tools/import.vala"
	folks_import_tool_import_co (_data_);
#line 639 "import.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 156 "/run/build/folks/tools/import.vala"
	return self ? g_object_ref (self) : NULL;
#line 648 "import.c"
}


static gboolean
folks_import_tool_import_co (FolksImportToolImportData* _data_)
{
#line 98 "/run/build/folks/tools/import.vala"
	switch (_data_->_state_) {
#line 98 "/run/build/folks/tools/import.vala"
		case 0:
#line 659 "import.c"
		goto _state_0;
#line 98 "/run/build/folks/tools/import.vala"
		case 1:
#line 663 "import.c"
		goto _state_1;
#line 98 "/run/build/folks/tools/import.vala"
		case 2:
#line 667 "import.c"
		goto _state_2;
#line 98 "/run/build/folks/tools/import.vala"
		case 3:
#line 671 "import.c"
		goto _state_3;
#line 98 "/run/build/folks/tools/import.vala"
		case 4:
#line 675 "import.c"
		goto _state_4;
#line 98 "/run/build/folks/tools/import.vala"
		case 5:
#line 679 "import.c"
		goto _state_5;
		default:
#line 98 "/run/build/folks/tools/import.vala"
		g_assert_not_reached ();
#line 684 "import.c"
	}
	_state_0:
#line 100 "/run/build/folks/tools/import.vala"
	_data_->_tmp0_ = folks_backend_store_dup ();
#line 100 "/run/build/folks/tools/import.vala"
	_data_->backend_store = _data_->_tmp0_;
#line 691 "import.c"
	{
#line 104 "/run/build/folks/tools/import.vala"
		_data_->_tmp1_ = _data_->backend_store;
#line 104 "/run/build/folks/tools/import.vala"
		_data_->_state_ = 1;
#line 104 "/run/build/folks/tools/import.vala"
		folks_backend_store_load_backends (_data_->_tmp1_, folks_import_tool_import_ready, _data_);
#line 104 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 701 "import.c"
		_state_1:
#line 104 "/run/build/folks/tools/import.vala"
		folks_backend_store_load_backends_finish (_data_->_tmp1_, _data_->_res_, &_data_->_inner_error_);
#line 104 "/run/build/folks/tools/import.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 707 "import.c"
			goto __catch1_g_error;
		}
	}
	goto __finally1;
	__catch1_g_error:
	{
#line 102 "/run/build/folks/tools/import.vala"
		_data_->e1 = _data_->_inner_error_;
#line 102 "/run/build/folks/tools/import.vala"
		_data_->_inner_error_ = NULL;
#line 109 "/run/build/folks/tools/import.vala"
		_data_->_tmp2_ = stderr;
#line 109 "/run/build/folks/tools/import.vala"
		_data_->_tmp3_ = g_strconcat (_ ("Couldn’t load the backends: %s"), "\n", NULL);
#line 109 "/run/build/folks/tools/import.vala"
		_data_->_tmp4_ = _data_->_tmp3_;
#line 109 "/run/build/folks/tools/import.vala"
		_data_->_tmp5_ = _data_->e1;
#line 109 "/run/build/folks/tools/import.vala"
		_data_->_tmp6_ = _data_->_tmp5_->message;
#line 109 "/run/build/folks/tools/import.vala"
		fprintf (_data_->_tmp2_, _data_->_tmp4_, _data_->_tmp6_);
#line 109 "/run/build/folks/tools/import.vala"
		_g_free0 (_data_->_tmp4_);
#line 111 "/run/build/folks/tools/import.vala"
		_data_->result = FALSE;
#line 111 "/run/build/folks/tools/import.vala"
		_g_error_free0 (_data_->e1);
#line 111 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 111 "/run/build/folks/tools/import.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 111 "/run/build/folks/tools/import.vala"
		if (_data_->_state_ != 0) {
#line 111 "/run/build/folks/tools/import.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 111 "/run/build/folks/tools/import.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 746 "import.c"
			}
		}
#line 111 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 111 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 753 "import.c"
	}
	__finally1:
#line 102 "/run/build/folks/tools/import.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 102 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 102 "/run/build/folks/tools/import.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 102 "/run/build/folks/tools/import.vala"
		g_clear_error (&_data_->_inner_error_);
#line 102 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 102 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 768 "import.c"
	}
#line 115 "/run/build/folks/tools/import.vala"
	_data_->_tmp7_ = _data_->backend_store;
#line 115 "/run/build/folks/tools/import.vala"
	_data_->_tmp8_ = folks_backend_store_dup_backend_by_name (_data_->_tmp7_, "key-file");
#line 115 "/run/build/folks/tools/import.vala"
	_data_->kf_backend = _data_->_tmp8_;
#line 117 "/run/build/folks/tools/import.vala"
	_data_->_tmp9_ = _data_->kf_backend;
#line 117 "/run/build/folks/tools/import.vala"
	if (_data_->_tmp9_ == NULL) {
#line 120 "/run/build/folks/tools/import.vala"
		_data_->_tmp10_ = stderr;
#line 120 "/run/build/folks/tools/import.vala"
		_data_->_tmp11_ = g_strconcat (_ ("Couldn’t load the ‘%s’ backend."), "\n", NULL);
#line 120 "/run/build/folks/tools/import.vala"
		_data_->_tmp12_ = _data_->_tmp11_;
#line 120 "/run/build/folks/tools/import.vala"
		fprintf (_data_->_tmp10_, _data_->_tmp12_, "key-file");
#line 120 "/run/build/folks/tools/import.vala"
		_g_free0 (_data_->_tmp12_);
#line 122 "/run/build/folks/tools/import.vala"
		_data_->result = FALSE;
#line 122 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->kf_backend);
#line 122 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 122 "/run/build/folks/tools/import.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 122 "/run/build/folks/tools/import.vala"
		if (_data_->_state_ != 0) {
#line 122 "/run/build/folks/tools/import.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 122 "/run/build/folks/tools/import.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 804 "import.c"
			}
		}
#line 122 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 122 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 811 "import.c"
	}
	{
#line 127 "/run/build/folks/tools/import.vala"
		_data_->_tmp13_ = _data_->kf_backend;
#line 127 "/run/build/folks/tools/import.vala"
		_data_->_state_ = 2;
#line 127 "/run/build/folks/tools/import.vala"
		folks_backend_prepare (_data_->_tmp13_, folks_import_tool_import_ready, _data_);
#line 127 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 822 "import.c"
		_state_2:
#line 127 "/run/build/folks/tools/import.vala"
		folks_backend_prepare_finish (_data_->_tmp13_, _data_->_res_, &_data_->_inner_error_);
#line 127 "/run/build/folks/tools/import.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 828 "import.c"
			goto __catch2_g_error;
		}
	}
	goto __finally2;
	__catch2_g_error:
	{
#line 125 "/run/build/folks/tools/import.vala"
		_data_->e2 = _data_->_inner_error_;
#line 125 "/run/build/folks/tools/import.vala"
		_data_->_inner_error_ = NULL;
#line 133 "/run/build/folks/tools/import.vala"
		_data_->_tmp14_ = stderr;
#line 133 "/run/build/folks/tools/import.vala"
		_data_->_tmp15_ = g_strconcat (_ ("Couldn’t prepare the ‘%s’ backend: %s"), "\n", NULL);
#line 133 "/run/build/folks/tools/import.vala"
		_data_->_tmp16_ = _data_->_tmp15_;
#line 133 "/run/build/folks/tools/import.vala"
		_data_->_tmp17_ = _data_->e2;
#line 133 "/run/build/folks/tools/import.vala"
		_data_->_tmp18_ = _data_->_tmp17_->message;
#line 133 "/run/build/folks/tools/import.vala"
		fprintf (_data_->_tmp14_, _data_->_tmp16_, "key-file", _data_->_tmp18_);
#line 133 "/run/build/folks/tools/import.vala"
		_g_free0 (_data_->_tmp16_);
#line 135 "/run/build/folks/tools/import.vala"
		_data_->result = FALSE;
#line 135 "/run/build/folks/tools/import.vala"
		_g_error_free0 (_data_->e2);
#line 135 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->kf_backend);
#line 135 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 135 "/run/build/folks/tools/import.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 135 "/run/build/folks/tools/import.vala"
		if (_data_->_state_ != 0) {
#line 135 "/run/build/folks/tools/import.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 135 "/run/build/folks/tools/import.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 869 "import.c"
			}
		}
#line 135 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 135 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 876 "import.c"
	}
	__finally2:
#line 125 "/run/build/folks/tools/import.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 125 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->kf_backend);
#line 125 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 125 "/run/build/folks/tools/import.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 125 "/run/build/folks/tools/import.vala"
		g_clear_error (&_data_->_inner_error_);
#line 125 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 125 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 893 "import.c"
	}
#line 139 "/run/build/folks/tools/import.vala"
	_data_->destination_store = NULL;
#line 140 "/run/build/folks/tools/import.vala"
	_data_->_tmp19_ = _data_->kf_backend;
#line 140 "/run/build/folks/tools/import.vala"
	_data_->_tmp20_ = folks_backend_get_persona_stores (_data_->_tmp19_);
#line 140 "/run/build/folks/tools/import.vala"
	_data_->_tmp21_ = _data_->_tmp20_;
#line 140 "/run/build/folks/tools/import.vala"
	_data_->_tmp22_ = gee_map_get_values (_data_->_tmp21_);
#line 140 "/run/build/folks/tools/import.vala"
	_data_->_tmp23_ = _data_->_tmp22_;
#line 140 "/run/build/folks/tools/import.vala"
	_data_->stores = _data_->_tmp23_;
#line 142 "/run/build/folks/tools/import.vala"
	_data_->_tmp24_ = _data_->stores;
#line 142 "/run/build/folks/tools/import.vala"
	_data_->_tmp25_ = gee_collection_get_size (_data_->_tmp24_);
#line 142 "/run/build/folks/tools/import.vala"
	_data_->_tmp26_ = _data_->_tmp25_;
#line 142 "/run/build/folks/tools/import.vala"
	if (_data_->_tmp26_ == 0) {
#line 144 "/run/build/folks/tools/import.vala"
		_data_->_tmp27_ = stderr;
#line 144 "/run/build/folks/tools/import.vala"
		_data_->_tmp28_ = g_strconcat (_ ("Couldn’t load the ‘%s’ backend’s persona store."), "\n", NULL);
#line 144 "/run/build/folks/tools/import.vala"
		_data_->_tmp29_ = _data_->_tmp28_;
#line 144 "/run/build/folks/tools/import.vala"
		fprintf (_data_->_tmp27_, _data_->_tmp29_, "key-file");
#line 144 "/run/build/folks/tools/import.vala"
		_g_free0 (_data_->_tmp29_);
#line 148 "/run/build/folks/tools/import.vala"
		_data_->result = FALSE;
#line 148 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->stores);
#line 148 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->destination_store);
#line 148 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->kf_backend);
#line 148 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 148 "/run/build/folks/tools/import.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 148 "/run/build/folks/tools/import.vala"
		if (_data_->_state_ != 0) {
#line 148 "/run/build/folks/tools/import.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 148 "/run/build/folks/tools/import.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 945 "import.c"
			}
		}
#line 148 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 148 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 952 "import.c"
	}
	{
		{
#line 154 "/run/build/folks/tools/import.vala"
			_data_->_tmp30_ = _data_->stores;
#line 154 "/run/build/folks/tools/import.vala"
			_data_->_tmp31_ = gee_iterable_iterator ((GeeIterable*) _data_->_tmp30_);
#line 154 "/run/build/folks/tools/import.vala"
			_data_->_persona_store_it = _data_->_tmp31_;
#line 154 "/run/build/folks/tools/import.vala"
			while (TRUE) {
#line 154 "/run/build/folks/tools/import.vala"
				_data_->_tmp32_ = _data_->_persona_store_it;
#line 154 "/run/build/folks/tools/import.vala"
				if (!gee_iterator_next (_data_->_tmp32_)) {
#line 154 "/run/build/folks/tools/import.vala"
					break;
#line 970 "import.c"
				}
#line 154 "/run/build/folks/tools/import.vala"
				_data_->_tmp33_ = _data_->_persona_store_it;
#line 154 "/run/build/folks/tools/import.vala"
				_data_->_tmp34_ = gee_iterator_get (_data_->_tmp33_);
#line 154 "/run/build/folks/tools/import.vala"
				_data_->persona_store = (FolksPersonaStore*) _data_->_tmp34_;
#line 156 "/run/build/folks/tools/import.vala"
				_data_->_tmp35_ = _data_->persona_store;
#line 156 "/run/build/folks/tools/import.vala"
				_data_->_tmp36_ = _g_object_ref0 (_data_->_tmp35_);
#line 156 "/run/build/folks/tools/import.vala"
				_g_object_unref0 (_data_->destination_store);
#line 156 "/run/build/folks/tools/import.vala"
				_data_->destination_store = _data_->_tmp36_;
#line 157 "/run/build/folks/tools/import.vala"
				_g_object_unref0 (_data_->persona_store);
#line 157 "/run/build/folks/tools/import.vala"
				break;
#line 990 "import.c"
			}
#line 154 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->_persona_store_it);
#line 994 "import.c"
		}
#line 160 "/run/build/folks/tools/import.vala"
		_data_->_tmp37_ = _data_->destination_store;
#line 160 "/run/build/folks/tools/import.vala"
		_data_->_state_ = 3;
#line 160 "/run/build/folks/tools/import.vala"
		folks_persona_store_prepare (_data_->_tmp37_, folks_import_tool_import_ready, _data_);
#line 160 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 1004 "import.c"
		_state_3:
#line 160 "/run/build/folks/tools/import.vala"
		folks_persona_store_prepare_finish (_data_->_tmp37_, _data_->_res_, &_data_->_inner_error_);
#line 160 "/run/build/folks/tools/import.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 1010 "import.c"
			goto __catch3_g_error;
		}
	}
	goto __finally3;
	__catch3_g_error:
	{
#line 151 "/run/build/folks/tools/import.vala"
		_data_->e3 = _data_->_inner_error_;
#line 151 "/run/build/folks/tools/import.vala"
		_data_->_inner_error_ = NULL;
#line 164 "/run/build/folks/tools/import.vala"
		_data_->_tmp38_ = stderr;
#line 164 "/run/build/folks/tools/import.vala"
		_data_->_tmp39_ = g_strconcat (_ ("Couldn’t prepare the ‘%s’ backend’s persona store: %s"), "\n", NULL);
#line 164 "/run/build/folks/tools/import.vala"
		_data_->_tmp40_ = _data_->_tmp39_;
#line 164 "/run/build/folks/tools/import.vala"
		_data_->_tmp41_ = _data_->e3;
#line 164 "/run/build/folks/tools/import.vala"
		_data_->_tmp42_ = _data_->_tmp41_->message;
#line 164 "/run/build/folks/tools/import.vala"
		fprintf (_data_->_tmp38_, _data_->_tmp40_, _data_->_tmp42_);
#line 164 "/run/build/folks/tools/import.vala"
		_g_free0 (_data_->_tmp40_);
#line 169 "/run/build/folks/tools/import.vala"
		_data_->result = FALSE;
#line 169 "/run/build/folks/tools/import.vala"
		_g_error_free0 (_data_->e3);
#line 169 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->stores);
#line 169 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->destination_store);
#line 169 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->kf_backend);
#line 169 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 169 "/run/build/folks/tools/import.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 169 "/run/build/folks/tools/import.vala"
		if (_data_->_state_ != 0) {
#line 169 "/run/build/folks/tools/import.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 169 "/run/build/folks/tools/import.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1055 "import.c"
			}
		}
#line 169 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 169 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 1062 "import.c"
	}
	__finally3:
#line 151 "/run/build/folks/tools/import.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 151 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->stores);
#line 151 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->destination_store);
#line 151 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->kf_backend);
#line 151 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 151 "/run/build/folks/tools/import.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 151 "/run/build/folks/tools/import.vala"
		g_clear_error (&_data_->_inner_error_);
#line 151 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 151 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 1083 "import.c"
	}
#line 172 "/run/build/folks/tools/import.vala"
	_data_->_tmp43_ = folks_import_tool_source;
#line 172 "/run/build/folks/tools/import.vala"
	if (g_strcmp0 (_data_->_tmp43_, "pidgin") == 0) {
#line 174 "/run/build/folks/tools/import.vala"
		_data_->_tmp44_ = folks_importers_pidgin_new ();
#line 174 "/run/build/folks/tools/import.vala"
		_data_->importer = (FolksImporter*) _data_->_tmp44_;
#line 1093 "import.c"
		{
#line 179 "/run/build/folks/tools/import.vala"
			_data_->_tmp45_ = _data_->importer;
#line 179 "/run/build/folks/tools/import.vala"
			_data_->_tmp46_ = _data_->destination_store;
#line 179 "/run/build/folks/tools/import.vala"
			_data_->_tmp47_ = folks_import_tool_source_filename;
#line 179 "/run/build/folks/tools/import.vala"
			_data_->_state_ = 4;
#line 179 "/run/build/folks/tools/import.vala"
			folks_importer_import (_data_->_tmp45_, _data_->_tmp46_, _data_->_tmp47_, folks_import_tool_import_ready, _data_);
#line 179 "/run/build/folks/tools/import.vala"
			return FALSE;
#line 1107 "import.c"
			_state_4:
#line 179 "/run/build/folks/tools/import.vala"
			folks_importer_import_finish (_data_->_tmp45_, _data_->_res_, &_data_->_inner_error_);
#line 179 "/run/build/folks/tools/import.vala"
			if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 179 "/run/build/folks/tools/import.vala"
				if (_data_->_inner_error_->domain == FOLKS_IMPORT_ERROR) {
#line 1115 "import.c"
					goto __catch4_folks_import_error;
				}
#line 179 "/run/build/folks/tools/import.vala"
				_g_object_unref0 (_data_->importer);
#line 179 "/run/build/folks/tools/import.vala"
				_g_object_unref0 (_data_->stores);
#line 179 "/run/build/folks/tools/import.vala"
				_g_object_unref0 (_data_->destination_store);
#line 179 "/run/build/folks/tools/import.vala"
				_g_object_unref0 (_data_->kf_backend);
#line 179 "/run/build/folks/tools/import.vala"
				_g_object_unref0 (_data_->backend_store);
#line 179 "/run/build/folks/tools/import.vala"
				g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 179 "/run/build/folks/tools/import.vala"
				g_clear_error (&_data_->_inner_error_);
#line 179 "/run/build/folks/tools/import.vala"
				g_object_unref (_data_->_async_result);
#line 179 "/run/build/folks/tools/import.vala"
				return FALSE;
#line 1136 "import.c"
			}
		}
		goto __finally4;
		__catch4_folks_import_error:
		{
#line 176 "/run/build/folks/tools/import.vala"
			_data_->e = _data_->_inner_error_;
#line 176 "/run/build/folks/tools/import.vala"
			_data_->_inner_error_ = NULL;
#line 185 "/run/build/folks/tools/import.vala"
			_data_->_tmp48_ = stderr;
#line 185 "/run/build/folks/tools/import.vala"
			_data_->_tmp49_ = g_strconcat (_ ("Error importing contacts: %s"), "\n", NULL);
#line 185 "/run/build/folks/tools/import.vala"
			_data_->_tmp50_ = _data_->_tmp49_;
#line 185 "/run/build/folks/tools/import.vala"
			_data_->_tmp51_ = _data_->e;
#line 185 "/run/build/folks/tools/import.vala"
			_data_->_tmp52_ = _data_->_tmp51_->message;
#line 185 "/run/build/folks/tools/import.vala"
			fprintf (_data_->_tmp48_, _data_->_tmp50_, _data_->_tmp52_);
#line 185 "/run/build/folks/tools/import.vala"
			_g_free0 (_data_->_tmp50_);
#line 187 "/run/build/folks/tools/import.vala"
			_data_->result = FALSE;
#line 187 "/run/build/folks/tools/import.vala"
			_g_error_free0 (_data_->e);
#line 187 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->importer);
#line 187 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->stores);
#line 187 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->destination_store);
#line 187 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->kf_backend);
#line 187 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->backend_store);
#line 187 "/run/build/folks/tools/import.vala"
			g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 187 "/run/build/folks/tools/import.vala"
			if (_data_->_state_ != 0) {
#line 187 "/run/build/folks/tools/import.vala"
				while (_data_->_task_complete_ != TRUE) {
#line 187 "/run/build/folks/tools/import.vala"
					g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1182 "import.c"
				}
			}
#line 187 "/run/build/folks/tools/import.vala"
			g_object_unref (_data_->_async_result);
#line 187 "/run/build/folks/tools/import.vala"
			return FALSE;
#line 1189 "import.c"
		}
		__finally4:
#line 176 "/run/build/folks/tools/import.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 176 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->importer);
#line 176 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->stores);
#line 176 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->destination_store);
#line 176 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->kf_backend);
#line 176 "/run/build/folks/tools/import.vala"
			_g_object_unref0 (_data_->backend_store);
#line 176 "/run/build/folks/tools/import.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 176 "/run/build/folks/tools/import.vala"
			g_clear_error (&_data_->_inner_error_);
#line 176 "/run/build/folks/tools/import.vala"
			g_object_unref (_data_->_async_result);
#line 176 "/run/build/folks/tools/import.vala"
			return FALSE;
#line 1212 "import.c"
		}
#line 191 "/run/build/folks/tools/import.vala"
		_data_->_tmp53_ = _data_->destination_store;
#line 191 "/run/build/folks/tools/import.vala"
		_data_->_state_ = 5;
#line 191 "/run/build/folks/tools/import.vala"
		folks_persona_store_flush (_data_->_tmp53_, folks_import_tool_import_ready, _data_);
#line 191 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 1222 "import.c"
		_state_5:
#line 191 "/run/build/folks/tools/import.vala"
		folks_persona_store_flush_finish (_data_->_tmp53_, _data_->_res_);
#line 193 "/run/build/folks/tools/import.vala"
		_data_->result = TRUE;
#line 193 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->importer);
#line 193 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->stores);
#line 193 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->destination_store);
#line 193 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->kf_backend);
#line 193 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 193 "/run/build/folks/tools/import.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 193 "/run/build/folks/tools/import.vala"
		if (_data_->_state_ != 0) {
#line 193 "/run/build/folks/tools/import.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 193 "/run/build/folks/tools/import.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1246 "import.c"
			}
		}
#line 193 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 193 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 1253 "import.c"
	} else {
#line 197 "/run/build/folks/tools/import.vala"
		_data_->_tmp54_ = stderr;
#line 197 "/run/build/folks/tools/import.vala"
		_data_->_tmp55_ = g_strconcat (_ ("Unrecognized source backend name ‘%s’. ‘%s’ is currently the only supp" \
"orted source backend."), "\n", NULL);
#line 197 "/run/build/folks/tools/import.vala"
		_data_->_tmp56_ = _data_->_tmp55_;
#line 197 "/run/build/folks/tools/import.vala"
		_data_->_tmp57_ = folks_import_tool_source;
#line 197 "/run/build/folks/tools/import.vala"
		fprintf (_data_->_tmp54_, _data_->_tmp56_, _data_->_tmp57_, "pidgin");
#line 197 "/run/build/folks/tools/import.vala"
		_g_free0 (_data_->_tmp56_);
#line 201 "/run/build/folks/tools/import.vala"
		_data_->result = FALSE;
#line 201 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->stores);
#line 201 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->destination_store);
#line 201 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->kf_backend);
#line 201 "/run/build/folks/tools/import.vala"
		_g_object_unref0 (_data_->backend_store);
#line 201 "/run/build/folks/tools/import.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 201 "/run/build/folks/tools/import.vala"
		if (_data_->_state_ != 0) {
#line 201 "/run/build/folks/tools/import.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 201 "/run/build/folks/tools/import.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1285 "import.c"
			}
		}
#line 201 "/run/build/folks/tools/import.vala"
		g_object_unref (_data_->_async_result);
#line 201 "/run/build/folks/tools/import.vala"
		return FALSE;
#line 1292 "import.c"
	}
#line 98 "/run/build/folks/tools/import.vala"
	_g_object_unref0 (_data_->stores);
#line 98 "/run/build/folks/tools/import.vala"
	_g_object_unref0 (_data_->destination_store);
#line 98 "/run/build/folks/tools/import.vala"
	_g_object_unref0 (_data_->kf_backend);
#line 98 "/run/build/folks/tools/import.vala"
	_g_object_unref0 (_data_->backend_store);
#line 1302 "import.c"
}


FolksImportTool*
folks_import_tool_construct (GType object_type)
{
	FolksImportTool * self = NULL;
#line 34 "/run/build/folks/tools/import.vala"
	self = (FolksImportTool*) g_object_new (object_type, NULL);
#line 34 "/run/build/folks/tools/import.vala"
	return self;
#line 1314 "import.c"
}


FolksImportTool*
folks_import_tool_new (void)
{
#line 34 "/run/build/folks/tools/import.vala"
	return folks_import_tool_construct (FOLKS_TYPE_IMPORT_TOOL);
#line 1323 "import.c"
}


static void
folks_import_tool_class_init (FolksImportToolClass * klass)
{
#line 34 "/run/build/folks/tools/import.vala"
	folks_import_tool_parent_class = g_type_class_peek_parent (klass);
#line 34 "/run/build/folks/tools/import.vala"
	G_OBJECT_CLASS (klass)->finalize = folks_import_tool_finalize;
#line 1334 "import.c"
}


static void
folks_import_tool_instance_init (FolksImportTool * self)
{
}


static void
folks_import_tool_finalize (GObject * obj)
{
	FolksImportTool * self;
#line 34 "/run/build/folks/tools/import.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_IMPORT_TOOL, FolksImportTool);
#line 34 "/run/build/folks/tools/import.vala"
	G_OBJECT_CLASS (folks_import_tool_parent_class)->finalize (obj);
#line 1352 "import.c"
}


GType
folks_import_tool_get_type (void)
{
	static volatile gsize folks_import_tool_type_id__volatile = 0;
	if (g_once_init_enter (&folks_import_tool_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksImportToolClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_import_tool_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksImportTool), 0, (GInstanceInitFunc) folks_import_tool_instance_init, NULL };
		GType folks_import_tool_type_id;
		folks_import_tool_type_id = g_type_register_static (G_TYPE_OBJECT, "FolksImportTool", &g_define_type_info, 0);
		g_once_init_leave (&folks_import_tool_type_id__volatile, folks_import_tool_type_id);
	}
	return folks_import_tool_type_id__volatile;
}


GQuark
folks_import_error_quark (void)
{
	return g_quark_from_static_string ("folks_import_error-quark");
}


void
folks_importer_import (FolksImporter* self,
                       FolksPersonaStore* destination_store,
                       const gchar* source_filename,
                       GAsyncReadyCallback _callback_,
                       gpointer _user_data_)
{
#line 211 "/run/build/folks/tools/import.vala"
	FOLKS_IMPORTER_GET_CLASS (self)->import (self, destination_store, source_filename, _callback_, _user_data_);
#line 1386 "import.c"
}


guint
folks_importer_import_finish (FolksImporter* self,
                              GAsyncResult* _res_,
                              GError** error)
{
#line 211 "/run/build/folks/tools/import.vala"
	return FOLKS_IMPORTER_GET_CLASS (self)->import_finish (self, _res_, error);
#line 1397 "import.c"
}


FolksImporter*
folks_importer_construct (GType object_type)
{
	FolksImporter * self = NULL;
#line 211 "/run/build/folks/tools/import.vala"
	self = (FolksImporter*) g_object_new (object_type, NULL);
#line 211 "/run/build/folks/tools/import.vala"
	return self;
#line 1409 "import.c"
}


static void
folks_importer_class_init (FolksImporterClass * klass)
{
#line 211 "/run/build/folks/tools/import.vala"
	folks_importer_parent_class = g_type_class_peek_parent (klass);
#line 1418 "import.c"
}


static void
folks_importer_instance_init (FolksImporter * self)
{
}


GType
folks_importer_get_type (void)
{
	static volatile gsize folks_importer_type_id__volatile = 0;
	if (g_once_init_enter (&folks_importer_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksImporterClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_importer_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksImporter), 0, (GInstanceInitFunc) folks_importer_instance_init, NULL };
		GType folks_importer_type_id;
		folks_importer_type_id = g_type_register_static (G_TYPE_OBJECT, "FolksImporter", &g_define_type_info, G_TYPE_FLAG_ABSTRACT);
		g_once_init_leave (&folks_importer_type_id__volatile, folks_importer_type_id);
	}
	return folks_importer_type_id__volatile;
}



