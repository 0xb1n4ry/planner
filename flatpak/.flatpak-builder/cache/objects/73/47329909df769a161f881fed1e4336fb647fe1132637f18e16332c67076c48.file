/*
 * Generated by gdbus-codegen 2.58.1 from org.gnome.evolution.dataserver.AddressBookView.xml. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __E_DBUS_ADDRESS_BOOK_VIEW_H__
#define __E_DBUS_ADDRESS_BOOK_VIEW_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.evolution.dataserver.AddressBookView */

#define E_DBUS_TYPE_ADDRESS_BOOK_VIEW (e_dbus_address_book_view_get_type ())
#define E_DBUS_ADDRESS_BOOK_VIEW(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW, EDBusAddressBookView))
#define E_DBUS_IS_ADDRESS_BOOK_VIEW(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW))
#define E_DBUS_ADDRESS_BOOK_VIEW_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW, EDBusAddressBookViewIface))

struct _EDBusAddressBookView;
typedef struct _EDBusAddressBookView EDBusAddressBookView;
typedef struct _EDBusAddressBookViewIface EDBusAddressBookViewIface;

struct _EDBusAddressBookViewIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_dispose) (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_set_fields_of_interest) (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation,
    const gchar *const *arg_only_fields);

  gboolean (*handle_set_flags) (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation,
    guint arg_flags);

  gboolean (*handle_start) (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_stop) (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation);

  void (*complete) (
    EDBusAddressBookView *object,
    const gchar *arg_error_name,
    const gchar *arg_error_message);

  void (*objects_added) (
    EDBusAddressBookView *object,
    const gchar *const *arg_objects);

  void (*objects_modified) (
    EDBusAddressBookView *object,
    const gchar *const *arg_objects);

  void (*objects_removed) (
    EDBusAddressBookView *object,
    const gchar *const *arg_uids);

  void (*progress) (
    EDBusAddressBookView *object,
    guint arg_percent,
    const gchar *arg_message);

};

GType e_dbus_address_book_view_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *e_dbus_address_book_view_interface_info (void);
guint e_dbus_address_book_view_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void e_dbus_address_book_view_complete_start (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation);

void e_dbus_address_book_view_complete_stop (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation);

void e_dbus_address_book_view_complete_set_flags (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation);

void e_dbus_address_book_view_complete_set_fields_of_interest (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation);

void e_dbus_address_book_view_complete_dispose (
    EDBusAddressBookView *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void e_dbus_address_book_view_emit_objects_added (
    EDBusAddressBookView *object,
    const gchar *const *arg_objects);

void e_dbus_address_book_view_emit_objects_modified (
    EDBusAddressBookView *object,
    const gchar *const *arg_objects);

void e_dbus_address_book_view_emit_objects_removed (
    EDBusAddressBookView *object,
    const gchar *const *arg_uids);

void e_dbus_address_book_view_emit_progress (
    EDBusAddressBookView *object,
    guint arg_percent,
    const gchar *arg_message);

void e_dbus_address_book_view_emit_complete (
    EDBusAddressBookView *object,
    const gchar *arg_error_name,
    const gchar *arg_error_message);



/* D-Bus method calls: */
void e_dbus_address_book_view_call_start (
    EDBusAddressBookView *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_address_book_view_call_start_finish (
    EDBusAddressBookView *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_address_book_view_call_start_sync (
    EDBusAddressBookView *proxy,
    GCancellable *cancellable,
    GError **error);

void e_dbus_address_book_view_call_stop (
    EDBusAddressBookView *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_address_book_view_call_stop_finish (
    EDBusAddressBookView *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_address_book_view_call_stop_sync (
    EDBusAddressBookView *proxy,
    GCancellable *cancellable,
    GError **error);

void e_dbus_address_book_view_call_set_flags (
    EDBusAddressBookView *proxy,
    guint arg_flags,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_address_book_view_call_set_flags_finish (
    EDBusAddressBookView *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_address_book_view_call_set_flags_sync (
    EDBusAddressBookView *proxy,
    guint arg_flags,
    GCancellable *cancellable,
    GError **error);

void e_dbus_address_book_view_call_set_fields_of_interest (
    EDBusAddressBookView *proxy,
    const gchar *const *arg_only_fields,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_address_book_view_call_set_fields_of_interest_finish (
    EDBusAddressBookView *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_address_book_view_call_set_fields_of_interest_sync (
    EDBusAddressBookView *proxy,
    const gchar *const *arg_only_fields,
    GCancellable *cancellable,
    GError **error);

void e_dbus_address_book_view_call_dispose (
    EDBusAddressBookView *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_address_book_view_call_dispose_finish (
    EDBusAddressBookView *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_address_book_view_call_dispose_sync (
    EDBusAddressBookView *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define E_DBUS_TYPE_ADDRESS_BOOK_VIEW_PROXY (e_dbus_address_book_view_proxy_get_type ())
#define E_DBUS_ADDRESS_BOOK_VIEW_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_PROXY, EDBusAddressBookViewProxy))
#define E_DBUS_ADDRESS_BOOK_VIEW_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_PROXY, EDBusAddressBookViewProxyClass))
#define E_DBUS_ADDRESS_BOOK_VIEW_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_PROXY, EDBusAddressBookViewProxyClass))
#define E_DBUS_IS_ADDRESS_BOOK_VIEW_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_PROXY))
#define E_DBUS_IS_ADDRESS_BOOK_VIEW_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_PROXY))

typedef struct _EDBusAddressBookViewProxy EDBusAddressBookViewProxy;
typedef struct _EDBusAddressBookViewProxyClass EDBusAddressBookViewProxyClass;
typedef struct _EDBusAddressBookViewProxyPrivate EDBusAddressBookViewProxyPrivate;

struct _EDBusAddressBookViewProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  EDBusAddressBookViewProxyPrivate *priv;
};

struct _EDBusAddressBookViewProxyClass
{
  GDBusProxyClass parent_class;
};

GType e_dbus_address_book_view_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (EDBusAddressBookViewProxy, g_object_unref)
#endif

void e_dbus_address_book_view_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
EDBusAddressBookView *e_dbus_address_book_view_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
EDBusAddressBookView *e_dbus_address_book_view_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void e_dbus_address_book_view_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
EDBusAddressBookView *e_dbus_address_book_view_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
EDBusAddressBookView *e_dbus_address_book_view_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define E_DBUS_TYPE_ADDRESS_BOOK_VIEW_SKELETON (e_dbus_address_book_view_skeleton_get_type ())
#define E_DBUS_ADDRESS_BOOK_VIEW_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_SKELETON, EDBusAddressBookViewSkeleton))
#define E_DBUS_ADDRESS_BOOK_VIEW_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_SKELETON, EDBusAddressBookViewSkeletonClass))
#define E_DBUS_ADDRESS_BOOK_VIEW_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_SKELETON, EDBusAddressBookViewSkeletonClass))
#define E_DBUS_IS_ADDRESS_BOOK_VIEW_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_SKELETON))
#define E_DBUS_IS_ADDRESS_BOOK_VIEW_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), E_DBUS_TYPE_ADDRESS_BOOK_VIEW_SKELETON))

typedef struct _EDBusAddressBookViewSkeleton EDBusAddressBookViewSkeleton;
typedef struct _EDBusAddressBookViewSkeletonClass EDBusAddressBookViewSkeletonClass;
typedef struct _EDBusAddressBookViewSkeletonPrivate EDBusAddressBookViewSkeletonPrivate;

struct _EDBusAddressBookViewSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  EDBusAddressBookViewSkeletonPrivate *priv;
};

struct _EDBusAddressBookViewSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType e_dbus_address_book_view_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (EDBusAddressBookViewSkeleton, g_object_unref)
#endif

EDBusAddressBookView *e_dbus_address_book_view_skeleton_new (void);


G_END_DECLS

#endif /* __E_DBUS_ADDRESS_BOOK_VIEW_H__ */
