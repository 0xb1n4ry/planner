/* CalendarEvents.c generated by valac 0.40.11, the Vala compiler
 * generated from CalendarEvents.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <granite.h>
#include <glib/gi18n-lib.h>
#include <gio/gio.h>
#include <libedataserver/libedataserver.h>
#include <gee.h>
#include <libecal/libecal.h>
#include <libical/ical.h>
#include <float.h>
#include <math.h>


#define WIDGETS_TYPE_CALENDAR_EVENTS (widgets_calendar_events_get_type ())
#define WIDGETS_CALENDAR_EVENTS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_CALENDAR_EVENTS, WidgetsCalendarEvents))
#define WIDGETS_CALENDAR_EVENTS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_CALENDAR_EVENTS, WidgetsCalendarEventsClass))
#define WIDGETS_IS_CALENDAR_EVENTS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_CALENDAR_EVENTS))
#define WIDGETS_IS_CALENDAR_EVENTS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_CALENDAR_EVENTS))
#define WIDGETS_CALENDAR_EVENTS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_CALENDAR_EVENTS, WidgetsCalendarEventsClass))

typedef struct _WidgetsCalendarEvents WidgetsCalendarEvents;
typedef struct _WidgetsCalendarEventsClass WidgetsCalendarEventsClass;
typedef struct _WidgetsCalendarEventsPrivate WidgetsCalendarEventsPrivate;

#define WIDGETS_TYPE_WEATHER (widgets_weather_get_type ())
#define WIDGETS_WEATHER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_WEATHER, WidgetsWeather))
#define WIDGETS_WEATHER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_WEATHER, WidgetsWeatherClass))
#define WIDGETS_IS_WEATHER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_WEATHER))
#define WIDGETS_IS_WEATHER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_WEATHER))
#define WIDGETS_WEATHER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_WEATHER, WidgetsWeatherClass))

typedef struct _WidgetsWeather WidgetsWeather;
typedef struct _WidgetsWeatherClass WidgetsWeatherClass;

#define TYPE_AGENDA_EVENT_ROW (agenda_event_row_get_type ())
#define AGENDA_EVENT_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_AGENDA_EVENT_ROW, AgendaEventRow))
#define AGENDA_EVENT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_AGENDA_EVENT_ROW, AgendaEventRowClass))
#define IS_AGENDA_EVENT_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_AGENDA_EVENT_ROW))
#define IS_AGENDA_EVENT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_AGENDA_EVENT_ROW))
#define AGENDA_EVENT_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_AGENDA_EVENT_ROW, AgendaEventRowClass))

typedef struct _AgendaEventRow AgendaEventRow;
typedef struct _AgendaEventRowClass AgendaEventRowClass;
enum  {
	WIDGETS_CALENDAR_EVENTS_0_PROPERTY,
	WIDGETS_CALENDAR_EVENTS_NUM_PROPERTIES
};
static GParamSpec* widgets_calendar_events_properties[WIDGETS_CALENDAR_EVENTS_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
typedef struct _Block62Data Block62Data;

#define WIDGETS_CALENDAR_TYPE_CALENDAR (widgets_calendar_calendar_get_type ())
#define WIDGETS_CALENDAR_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendar))
#define WIDGETS_CALENDAR_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))
#define WIDGETS_CALENDAR_IS_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_IS_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_CALENDAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))

typedef struct _WidgetsCalendarCalendar WidgetsCalendarCalendar;
typedef struct _WidgetsCalendarCalendarClass WidgetsCalendarCalendarClass;

#define TYPE_UTILS (utils_get_type ())
#define UTILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTILS, Utils))
#define UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTILS, UtilsClass))
#define IS_UTILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTILS))
#define IS_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTILS))
#define UTILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTILS, UtilsClass))

typedef struct _Utils Utils;
typedef struct _UtilsClass UtilsClass;
#define _g_free0(var) (var = (g_free (var), NULL))

#define MAYA_MODEL_TYPE_CALENDAR_MODEL (maya_model_calendar_model_get_type ())
#define MAYA_MODEL_CALENDAR_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_MODEL_TYPE_CALENDAR_MODEL, MayaModelCalendarModel))
#define MAYA_MODEL_CALENDAR_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_MODEL_TYPE_CALENDAR_MODEL, MayaModelCalendarModelClass))
#define MAYA_MODEL_IS_CALENDAR_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_MODEL_TYPE_CALENDAR_MODEL))
#define MAYA_MODEL_IS_CALENDAR_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_MODEL_TYPE_CALENDAR_MODEL))
#define MAYA_MODEL_CALENDAR_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_MODEL_TYPE_CALENDAR_MODEL, MayaModelCalendarModelClass))

typedef struct _MayaModelCalendarModel MayaModelCalendarModel;
typedef struct _MayaModelCalendarModelClass MayaModelCalendarModelClass;

#define MAYA_UTIL_TYPE_DATE_RANGE (maya_util_date_range_get_type ())
#define MAYA_UTIL_DATE_RANGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_UTIL_TYPE_DATE_RANGE, MayaUtilDateRange))
#define MAYA_UTIL_DATE_RANGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_UTIL_TYPE_DATE_RANGE, MayaUtilDateRangeClass))
#define MAYA_UTIL_IS_DATE_RANGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_UTIL_TYPE_DATE_RANGE))
#define MAYA_UTIL_IS_DATE_RANGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_UTIL_TYPE_DATE_RANGE))
#define MAYA_UTIL_DATE_RANGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_UTIL_TYPE_DATE_RANGE, MayaUtilDateRangeClass))

typedef struct _MayaUtilDateRange MayaUtilDateRange;
typedef struct _MayaUtilDateRangeClass MayaUtilDateRangeClass;
typedef struct _Block63Data Block63Data;
typedef struct _Block64Data Block64Data;
enum  {
	WIDGETS_CALENDAR_EVENTS_EVENT_REMOVED_SIGNAL,
	WIDGETS_CALENDAR_EVENTS_EVENT_MODIFIED_SIGNAL,
	WIDGETS_CALENDAR_EVENTS_ON_SIGNAL_CLOSE_SIGNAL,
	WIDGETS_CALENDAR_EVENTS_NUM_SIGNALS
};
static guint widgets_calendar_events_signals[WIDGETS_CALENDAR_EVENTS_NUM_SIGNALS] = {0};

struct _WidgetsCalendarEvents {
	GtkRevealer parent_instance;
	WidgetsCalendarEventsPrivate * priv;
};

struct _WidgetsCalendarEventsClass {
	GtkRevealerClass parent_class;
};

struct _WidgetsCalendarEventsPrivate {
	GtkRevealer* box_revealer;
	GtkStack* main_stack;
	GtkLabel* day_label;
	GDateTime* selected_date;
	GtkLabel* weekday_label;
	WidgetsWeather* weather_widget;
	GtkListBox* selected_date_events_list;
	GHashTable* row_table;
};

struct _Block62Data {
	int _ref_count_;
	WidgetsCalendarEvents* self;
	GtkRevealer* weather_revealer;
	GtkRevealer* calendar_revealer;
	GraniteHeaderLabel* events_label;
	GtkRevealer* events_list_revealer;
	GtkButton* show_hide_calendar_button;
};

struct _Block63Data {
	int _ref_count_;
	WidgetsCalendarEvents* self;
	AgendaEventRow* row;
};

struct _Block64Data {
	int _ref_count_;
	WidgetsCalendarEvents* self;
	GraniteWidgetsModeButton* mode_button;
};


static gpointer widgets_calendar_events_parent_class = NULL;
extern Utils* application_utils;
extern GSettings* application_settings;

GType widgets_calendar_events_get_type (void) G_GNUC_CONST;
GType widgets_weather_get_type (void) G_GNUC_CONST;
GType agenda_event_row_get_type (void) G_GNUC_CONST;
#define WIDGETS_CALENDAR_EVENTS_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), WIDGETS_TYPE_CALENDAR_EVENTS, WidgetsCalendarEventsPrivate))
WidgetsCalendarEvents* widgets_calendar_events_new (void);
WidgetsCalendarEvents* widgets_calendar_events_construct (GType object_type);
static GtkWidget* widgets_calendar_events_get_calendar_event_widget (WidgetsCalendarEvents* self);
static Block62Data* block62_data_ref (Block62Data* _data62_);
static void block62_data_unref (void * _userdata_);
static void _g_free0_ (gpointer var);
static void _g_object_unref0_ (gpointer var);
WidgetsWeather* widgets_weather_new (void);
WidgetsWeather* widgets_weather_construct (GType object_type);
GType widgets_calendar_calendar_get_type (void) G_GNUC_CONST;
WidgetsCalendarCalendar* widgets_calendar_calendar_new (gboolean _sensitive_past_days);
WidgetsCalendarCalendar* widgets_calendar_calendar_construct (GType object_type,
                                                              gboolean _sensitive_past_days);
static void __lambda293_ (Block62Data* _data62_,
                   GDateTime* date);
void widgets_calendar_events_set_selected_date (WidgetsCalendarEvents* self,
                                                GDateTime* date);
GType utils_get_type (void) G_GNUC_CONST;
gchar* utils_get_relative_default_date_format_from_date (Utils* self,
                                                         GDateTime* date);
static void ___lambda293__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                                GDateTime* date,
                                                                gpointer self);
static void __lambda294_ (Block62Data* _data62_);
static gboolean ___lambda295_ (Block62Data* _data62_);
static gboolean ____lambda295__gsource_func (gpointer self);
static gboolean ___lambda296_ (Block62Data* _data62_);
static gboolean ____lambda296__gsource_func (gpointer self);
static void ___lambda294__gtk_button_clicked (GtkButton* _sender,
                                       gpointer self);
static void __lambda297_ (Block62Data* _data62_);
static gboolean ___lambda298_ (Block62Data* _data62_);
static gboolean ____lambda298__gsource_func (gpointer self);
static gboolean ___lambda299_ (Block62Data* _data62_);
static gboolean ____lambda299__gsource_func (gpointer self);
static void ___lambda297__gtk_button_clicked (GtkButton* _sender,
                                       gpointer self);
static void __lambda300_ (Block62Data* _data62_,
                   const gchar* key);
static void ___lambda300__g_settings_changed (GSettings* _sender,
                                       const gchar* key,
                                       gpointer self);
GType maya_model_calendar_model_get_type (void) G_GNUC_CONST;
MayaModelCalendarModel* maya_model_calendar_model_get_default (void);
static void widgets_calendar_events_on_events_added (WidgetsCalendarEvents* self,
                                              ESource* source,
                                              GeeCollection* events);
static void _widgets_calendar_events_on_events_added_maya_model_calendar_model_events_added (MayaModelCalendarModel* _sender,
                                                                                      ESource* source,
                                                                                      GeeCollection* events,
                                                                                      gpointer self);
static void widgets_calendar_events_on_events_removed (WidgetsCalendarEvents* self,
                                                ESource* source,
                                                GeeCollection* events);
static void _widgets_calendar_events_on_events_removed_maya_model_calendar_model_events_removed (MayaModelCalendarModel* _sender,
                                                                                          ESource* source,
                                                                                          GeeCollection* events,
                                                                                          gpointer self);
static void widgets_calendar_events_on_events_updated (WidgetsCalendarEvents* self,
                                                ESource* source,
                                                GeeCollection* events);
static void _widgets_calendar_events_on_events_updated_maya_model_calendar_model_events_updated (MayaModelCalendarModel* _sender,
                                                                                          ESource* source,
                                                                                          GeeCollection* events,
                                                                                          gpointer self);
static gint __lambda304_ (WidgetsCalendarEvents* self,
                   GtkListBoxRow* child1,
                   GtkListBoxRow* child2);
gboolean agenda_event_row_get_is_allday (AgendaEventRow* self);
const gchar* agenda_event_row_get_summary (AgendaEventRow* self);
ECalComponent* agenda_event_row_get_calevent (AgendaEventRow* self);
void maya_util_get_local_datetimes_from_icalcomponent (icalcomponent* comp,
                                                       GDateTime* * start_date,
                                                       GDateTime* * end_date);
static gint ___lambda304__gtk_list_box_sort_func (GtkListBoxRow* row1,
                                           GtkListBoxRow* row2,
                                           gpointer self);
static gboolean __lambda305_ (WidgetsCalendarEvents* self,
                       GtkListBoxRow* row);
GType maya_util_date_range_get_type (void) G_GNUC_CONST;
MayaUtilDateRange* maya_util_date_range_new (GDateTime* first,
                                             GDateTime* last);
MayaUtilDateRange* maya_util_date_range_construct (GType object_type,
                                                   GDateTime* first,
                                                   GDateTime* last);
GeeCollection* maya_util_event_date_ranges (icalcomponent* comp,
                                            MayaUtilDateRange* view_range);
gboolean maya_util_is_day_in_range (GDateTime* day,
                                    MayaUtilDateRange* range);
static gboolean ___lambda305__gtk_list_box_filter_func (GtkListBoxRow* row,
                                                 gpointer self);
static GtkWidget* widgets_calendar_events_get_notifications_widget (WidgetsCalendarEvents* self);
AgendaEventRow* agenda_event_row_new (ESource* source,
                                      ECalComponent* calevent,
                                      gboolean isUpcoming);
AgendaEventRow* agenda_event_row_construct (GType object_type,
                                            ESource* source,
                                            ECalComponent* calevent,
                                            gboolean isUpcoming);
static void _____lambda301_ (WidgetsCalendarEvents* self,
                      ECalComponent* event);
static void ______lambda301__agenda_event_row_modified (AgendaEventRow* _sender,
                                                 ECalComponent* event,
                                                 gpointer self);
static void _____lambda302_ (WidgetsCalendarEvents* self,
                      ECalComponent* event);
static void ______lambda302__agenda_event_row_removed (AgendaEventRow* _sender,
                                                ECalComponent* event,
                                                gpointer self);
void agenda_event_row_update (AgendaEventRow* self,
                              ECalComponent* event);
static Block63Data* block63_data_ref (Block63Data* _data63_);
static void block63_data_unref (void * _userdata_);
GtkRevealer* agenda_event_row_get_revealer (AgendaEventRow* self);
static gboolean _____lambda303_ (Block63Data* _data63_);
static gboolean ______lambda303__gsource_func (gpointer self);
gchar* maya_settings_DateFormat (void);
static GObject * widgets_calendar_events_constructor (GType type,
                                               guint n_construct_properties,
                                               GObjectConstructParam * construct_properties);
static Block64Data* block64_data_ref (Block64Data* _data64_);
static void block64_data_unref (void * _userdata_);
static void _widgets_calendar_events___lambda307_ (Block64Data* _data64_,
                                            GtkWidget* widget);
static void __widgets_calendar_events___lambda307__granite_widgets_mode_button_mode_changed (GraniteWidgetsModeButton* _sender,
                                                                                      GtkWidget* widget,
                                                                                      gpointer self);
static void widgets_calendar_events_finalize (GObject * obj);


WidgetsCalendarEvents*
widgets_calendar_events_construct (GType object_type)
{
	WidgetsCalendarEvents * self = NULL;
#line 41 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = (WidgetsCalendarEvents*) g_object_new (object_type, "transition-type", GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT, "transition-duration", 300, "reveal-child", FALSE, "margin-end", 3, NULL);
#line 40 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return self;
#line 322 "CalendarEvents.c"
}


WidgetsCalendarEvents*
widgets_calendar_events_new (void)
{
#line 40 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return widgets_calendar_events_construct (WIDGETS_TYPE_CALENDAR_EVENTS);
#line 331 "CalendarEvents.c"
}


static Block62Data*
block62_data_ref (Block62Data* _data62_)
{
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_atomic_int_inc (&_data62_->_ref_count_);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return _data62_;
#line 342 "CalendarEvents.c"
}


static void
block62_data_unref (void * _userdata_)
{
	Block62Data* _data62_;
	_data62_ = (Block62Data*) _userdata_;
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (g_atomic_int_dec_and_test (&_data62_->_ref_count_)) {
#line 353 "CalendarEvents.c"
		WidgetsCalendarEvents* self;
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		self = _data62_->self;
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_data62_->show_hide_calendar_button);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_data62_->events_list_revealer);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_data62_->events_label);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_data62_->calendar_revealer);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_data62_->weather_revealer);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (self);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		g_slice_free (Block62Data, _data62_);
#line 371 "CalendarEvents.c"
	}
}


static void
_g_free0_ (gpointer var)
{
#line 120 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	var = (g_free (var), NULL);
#line 381 "CalendarEvents.c"
}


static void
_g_object_unref0_ (gpointer var)
{
#line 120 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	(var == NULL) ? NULL : (var = (g_object_unref (var), NULL));
#line 390 "CalendarEvents.c"
}


static void
__lambda293_ (Block62Data* _data62_,
              GDateTime* date)
{
	WidgetsCalendarEvents* self;
	Utils* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
#line 198 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data62_->self;
#line 198 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (date != NULL);
#line 199 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_set_selected_date (self, date);
#line 201 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = application_utils;
#line 201 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = utils_get_relative_default_date_format_from_date (_tmp0_, date);
#line 201 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp2_ = _tmp1_;
#line 201 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_label_set_label ((GtkLabel*) _data62_->events_label, _tmp2_);
#line 201 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_free0 (_tmp2_);
#line 418 "CalendarEvents.c"
}


static void
___lambda293__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                           GDateTime* date,
                                                           gpointer self)
{
#line 198 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	__lambda293_ (self, date);
#line 429 "CalendarEvents.c"
}


static gboolean
___lambda295_ (Block62Data* _data62_)
{
	WidgetsCalendarEvents* self;
	gboolean result = FALSE;
	GtkStyleContext* _tmp0_;
#line 211 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data62_->self;
#line 212 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) _data62_->show_hide_calendar_button);
#line 212 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_remove_class (_tmp0_, "closed");
#line 213 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	result = FALSE;
#line 213 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 449 "CalendarEvents.c"
}


static gboolean
____lambda295__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda295_ (self);
#line 211 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 460 "CalendarEvents.c"
}


static gboolean
___lambda296_ (Block62Data* _data62_)
{
	WidgetsCalendarEvents* self;
	gboolean result = FALSE;
	GtkStyleContext* _tmp0_;
#line 225 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data62_->self;
#line 226 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) _data62_->show_hide_calendar_button);
#line 226 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp0_, "closed");
#line 227 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	result = FALSE;
#line 227 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 480 "CalendarEvents.c"
}


static gboolean
____lambda296__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda296_ (self);
#line 225 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 491 "CalendarEvents.c"
}


static void
__lambda294_ (Block62Data* _data62_)
{
	WidgetsCalendarEvents* self;
	gboolean _tmp0_;
	gboolean _tmp1_;
#line 204 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data62_->self;
#line 205 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = gtk_revealer_get_reveal_child (_data62_->calendar_revealer);
#line 205 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = _tmp0_;
#line 205 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (_tmp1_) {
#line 509 "CalendarEvents.c"
		GtkRevealer* _tmp2_;
		GDateTime* now = NULL;
		GDateTime* _tmp3_;
		GDateTime* _tmp4_;
		Utils* _tmp5_;
		GDateTime* _tmp6_;
		gchar* _tmp7_;
		gchar* _tmp8_;
#line 206 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->calendar_revealer, FALSE);
#line 208 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->weather_revealer, TRUE);
#line 209 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp2_ = self->priv->box_revealer;
#line 209 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_tmp2_, TRUE);
#line 211 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 300, ____lambda295__gsource_func, block62_data_ref (_data62_), block62_data_unref);
#line 216 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp3_ = g_date_time_new_now_local ();
#line 216 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		now = _tmp3_;
#line 217 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp4_ = now;
#line 217 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		widgets_calendar_events_set_selected_date (self, _tmp4_);
#line 218 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp5_ = application_utils;
#line 218 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp6_ = now;
#line 218 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp7_ = utils_get_relative_default_date_format_from_date (_tmp5_, _tmp6_);
#line 218 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp8_ = _tmp7_;
#line 218 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_label_set_label ((GtkLabel*) _data62_->events_label, _tmp8_);
#line 218 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_free0 (_tmp8_);
#line 205 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_date_time_unref0 (now);
#line 550 "CalendarEvents.c"
	} else {
		GtkRevealer* _tmp9_;
#line 220 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->calendar_revealer, TRUE);
#line 222 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->weather_revealer, FALSE);
#line 223 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp9_ = self->priv->box_revealer;
#line 223 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_tmp9_, FALSE);
#line 225 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 300, ____lambda296__gsource_func, block62_data_ref (_data62_), block62_data_unref);
#line 563 "CalendarEvents.c"
	}
}


static void
___lambda294__gtk_button_clicked (GtkButton* _sender,
                                  gpointer self)
{
#line 204 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	__lambda294_ (self);
#line 574 "CalendarEvents.c"
}


static gboolean
___lambda298_ (Block62Data* _data62_)
{
	WidgetsCalendarEvents* self;
	gboolean result = FALSE;
	GtkStyleContext* _tmp0_;
#line 239 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data62_->self;
#line 240 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) _data62_->show_hide_calendar_button);
#line 240 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_remove_class (_tmp0_, "closed");
#line 241 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	result = FALSE;
#line 241 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 594 "CalendarEvents.c"
}


static gboolean
____lambda298__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda298_ (self);
#line 239 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 605 "CalendarEvents.c"
}


static gboolean
___lambda299_ (Block62Data* _data62_)
{
	WidgetsCalendarEvents* self;
	gboolean result = FALSE;
	GtkStyleContext* _tmp0_;
#line 249 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data62_->self;
#line 250 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) _data62_->show_hide_calendar_button);
#line 250 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp0_, "closed");
#line 251 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	result = FALSE;
#line 251 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 625 "CalendarEvents.c"
}


static gboolean
____lambda299__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda299_ (self);
#line 249 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 636 "CalendarEvents.c"
}


static void
__lambda297_ (Block62Data* _data62_)
{
	WidgetsCalendarEvents* self;
	gboolean _tmp0_;
	gboolean _tmp1_;
#line 232 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data62_->self;
#line 233 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = gtk_revealer_get_reveal_child (_data62_->calendar_revealer);
#line 233 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = _tmp0_;
#line 233 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (_tmp1_) {
#line 654 "CalendarEvents.c"
		GtkRevealer* _tmp2_;
#line 234 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->calendar_revealer, FALSE);
#line 236 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->weather_revealer, TRUE);
#line 237 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp2_ = self->priv->box_revealer;
#line 237 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_tmp2_, TRUE);
#line 239 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 300, ____lambda298__gsource_func, block62_data_ref (_data62_), block62_data_unref);
#line 666 "CalendarEvents.c"
	} else {
		GtkRevealer* _tmp3_;
#line 244 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->calendar_revealer, TRUE);
#line 246 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->weather_revealer, FALSE);
#line 247 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp3_ = self->priv->box_revealer;
#line 247 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_tmp3_, FALSE);
#line 249 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 300, ____lambda299__gsource_func, block62_data_ref (_data62_), block62_data_unref);
#line 679 "CalendarEvents.c"
	}
}


static void
___lambda297__gtk_button_clicked (GtkButton* _sender,
                                  gpointer self)
{
#line 232 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	__lambda297_ (self);
#line 690 "CalendarEvents.c"
}


static void
__lambda300_ (Block62Data* _data62_,
              const gchar* key)
{
	WidgetsCalendarEvents* self;
#line 256 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data62_->self;
#line 256 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (key != NULL);
#line 257 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (g_strcmp0 (key, "show-calendar-events") == 0) {
#line 705 "CalendarEvents.c"
		GSettings* _tmp0_;
#line 258 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp0_ = application_settings;
#line 258 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_revealer_set_reveal_child (_data62_->events_list_revealer, g_settings_get_boolean (_tmp0_, "show-calendar-events"));
#line 711 "CalendarEvents.c"
	}
}


static void
___lambda300__g_settings_changed (GSettings* _sender,
                                  const gchar* key,
                                  gpointer self)
{
#line 256 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	__lambda300_ (self, key);
#line 723 "CalendarEvents.c"
}


static void
_widgets_calendar_events_on_events_added_maya_model_calendar_model_events_added (MayaModelCalendarModel* _sender,
                                                                                 ESource* source,
                                                                                 GeeCollection* events,
                                                                                 gpointer self)
{
#line 264 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_on_events_added ((WidgetsCalendarEvents*) self, source, events);
#line 735 "CalendarEvents.c"
}


static void
_widgets_calendar_events_on_events_removed_maya_model_calendar_model_events_removed (MayaModelCalendarModel* _sender,
                                                                                     ESource* source,
                                                                                     GeeCollection* events,
                                                                                     gpointer self)
{
#line 265 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_on_events_removed ((WidgetsCalendarEvents*) self, source, events);
#line 747 "CalendarEvents.c"
}


static void
_widgets_calendar_events_on_events_updated_maya_model_calendar_model_events_updated (MayaModelCalendarModel* _sender,
                                                                                     ESource* source,
                                                                                     GeeCollection* events,
                                                                                     gpointer self)
{
#line 266 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_on_events_updated ((WidgetsCalendarEvents*) self, source, events);
#line 759 "CalendarEvents.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 272 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return self ? g_object_ref (self) : NULL;
#line 768 "CalendarEvents.c"
}


static gint
__lambda304_ (WidgetsCalendarEvents* self,
              GtkListBoxRow* child1,
              GtkListBoxRow* child2)
{
	gint result = 0;
	AgendaEventRow* row1 = NULL;
	AgendaEventRow* _tmp0_;
	AgendaEventRow* row2 = NULL;
	AgendaEventRow* _tmp1_;
	AgendaEventRow* _tmp2_;
	gboolean _tmp3_;
	gboolean _tmp4_;
#line 271 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_val_if_fail (child1 != NULL, 0);
#line 271 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_val_if_fail (child2 != NULL, 0);
#line 272 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (child1, TYPE_AGENDA_EVENT_ROW, AgendaEventRow));
#line 272 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	row1 = _tmp0_;
#line 273 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (child2, TYPE_AGENDA_EVENT_ROW, AgendaEventRow));
#line 273 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	row2 = _tmp1_;
#line 274 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp2_ = row1;
#line 274 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp3_ = agenda_event_row_get_is_allday (_tmp2_);
#line 274 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp4_ = _tmp3_;
#line 274 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (_tmp4_) {
#line 805 "CalendarEvents.c"
		AgendaEventRow* _tmp5_;
		gboolean _tmp6_;
		gboolean _tmp7_;
#line 275 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp5_ = row2;
#line 275 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp6_ = agenda_event_row_get_is_allday (_tmp5_);
#line 275 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp7_ = _tmp6_;
#line 275 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		if (_tmp7_) {
#line 817 "CalendarEvents.c"
			AgendaEventRow* _tmp8_;
			const gchar* _tmp9_;
			const gchar* _tmp10_;
			AgendaEventRow* _tmp11_;
			const gchar* _tmp12_;
			const gchar* _tmp13_;
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp8_ = row1;
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp9_ = agenda_event_row_get_summary (_tmp8_);
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp10_ = _tmp9_;
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp11_ = row2;
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp12_ = agenda_event_row_get_summary (_tmp11_);
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp13_ = _tmp12_;
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			result = g_utf8_collate (_tmp10_, _tmp13_);
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row2);
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row1);
#line 276 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			return result;
#line 844 "CalendarEvents.c"
		} else {
#line 278 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			result = -1;
#line 278 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row2);
#line 278 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row1);
#line 278 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			return result;
#line 854 "CalendarEvents.c"
		}
	} else {
		AgendaEventRow* _tmp14_;
		gboolean _tmp15_;
		gboolean _tmp16_;
#line 281 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp14_ = row2;
#line 281 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp15_ = agenda_event_row_get_is_allday (_tmp14_);
#line 281 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp16_ = _tmp15_;
#line 281 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		if (_tmp16_) {
#line 282 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			result = 1;
#line 282 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row2);
#line 282 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row1);
#line 282 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			return result;
#line 876 "CalendarEvents.c"
		} else {
			icalcomponent* ical_event1 = NULL;
			AgendaEventRow* _tmp17_;
			ECalComponent* _tmp18_;
			ECalComponent* _tmp19_;
			icalcomponent* _tmp20_;
			GDateTime* start_date1 = NULL;
			GDateTime* end_date1 = NULL;
			icalcomponent* _tmp21_;
			GDateTime* _tmp22_ = NULL;
			GDateTime* _tmp23_ = NULL;
			icalcomponent* ical_event2 = NULL;
			AgendaEventRow* _tmp24_;
			ECalComponent* _tmp25_;
			ECalComponent* _tmp26_;
			icalcomponent* _tmp27_;
			GDateTime* start_date2 = NULL;
			GDateTime* end_date2 = NULL;
			icalcomponent* _tmp28_;
			GDateTime* _tmp29_ = NULL;
			GDateTime* _tmp30_ = NULL;
			gint comp = 0;
			GDateTime* _tmp31_;
			GDateTime* _tmp32_;
			gint _tmp33_;
			AgendaEventRow* _tmp37_;
			const gchar* _tmp38_;
			const gchar* _tmp39_;
			AgendaEventRow* _tmp40_;
			const gchar* _tmp41_;
			const gchar* _tmp42_;
#line 284 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp17_ = row1;
#line 284 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp18_ = agenda_event_row_get_calevent (_tmp17_);
#line 284 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp19_ = _tmp18_;
#line 284 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp20_ = e_cal_component_get_icalcomponent (_tmp19_);
#line 284 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			ical_event1 = _tmp20_;
#line 286 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp21_ = ical_event1;
#line 286 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			maya_util_get_local_datetimes_from_icalcomponent (_tmp21_, &_tmp22_, &_tmp23_);
#line 286 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_date_time_unref0 (start_date1);
#line 286 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			start_date1 = _tmp22_;
#line 286 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_date_time_unref0 (end_date1);
#line 286 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			end_date1 = _tmp23_;
#line 287 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp24_ = row2;
#line 287 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp25_ = agenda_event_row_get_calevent (_tmp24_);
#line 287 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp26_ = _tmp25_;
#line 287 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp27_ = e_cal_component_get_icalcomponent (_tmp26_);
#line 287 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			ical_event2 = _tmp27_;
#line 289 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp28_ = ical_event2;
#line 289 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			maya_util_get_local_datetimes_from_icalcomponent (_tmp28_, &_tmp29_, &_tmp30_);
#line 289 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_date_time_unref0 (start_date2);
#line 289 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			start_date2 = _tmp29_;
#line 289 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_date_time_unref0 (end_date2);
#line 289 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			end_date2 = _tmp30_;
#line 290 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp31_ = start_date1;
#line 290 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp32_ = start_date2;
#line 290 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			comp = g_date_time_compare (_tmp31_, _tmp32_);
#line 291 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp33_ = comp;
#line 291 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			if (_tmp33_ != 0) {
#line 292 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				result = comp;
#line 292 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_date_time_unref0 (end_date2);
#line 292 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_date_time_unref0 (start_date2);
#line 292 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_date_time_unref0 (end_date1);
#line 292 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_date_time_unref0 (start_date1);
#line 292 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_object_unref0 (row2);
#line 292 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_object_unref0 (row1);
#line 292 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				return result;
#line 978 "CalendarEvents.c"
			} else {
				GDateTime* _tmp34_;
				GDateTime* _tmp35_;
				gint _tmp36_;
#line 294 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp34_ = end_date1;
#line 294 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp35_ = end_date2;
#line 294 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				comp = g_date_time_compare (_tmp34_, _tmp35_);
#line 295 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp36_ = comp;
#line 295 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				if (_tmp36_ != 0) {
#line 296 "/run/build/planner/src/Widgets/CalendarEvents.vala"
					result = comp;
#line 296 "/run/build/planner/src/Widgets/CalendarEvents.vala"
					_g_date_time_unref0 (end_date2);
#line 296 "/run/build/planner/src/Widgets/CalendarEvents.vala"
					_g_date_time_unref0 (start_date2);
#line 296 "/run/build/planner/src/Widgets/CalendarEvents.vala"
					_g_date_time_unref0 (end_date1);
#line 296 "/run/build/planner/src/Widgets/CalendarEvents.vala"
					_g_date_time_unref0 (start_date1);
#line 296 "/run/build/planner/src/Widgets/CalendarEvents.vala"
					_g_object_unref0 (row2);
#line 296 "/run/build/planner/src/Widgets/CalendarEvents.vala"
					_g_object_unref0 (row1);
#line 296 "/run/build/planner/src/Widgets/CalendarEvents.vala"
					return result;
#line 1009 "CalendarEvents.c"
				}
			}
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp37_ = row1;
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp38_ = agenda_event_row_get_summary (_tmp37_);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp39_ = _tmp38_;
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp40_ = row2;
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp41_ = agenda_event_row_get_summary (_tmp40_);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp42_ = _tmp41_;
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			result = g_utf8_collate (_tmp39_, _tmp42_);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_date_time_unref0 (end_date2);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_date_time_unref0 (start_date2);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_date_time_unref0 (end_date1);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_date_time_unref0 (start_date1);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row2);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row1);
#line 300 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			return result;
#line 1040 "CalendarEvents.c"
		}
	}
#line 271 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (row2);
#line 271 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (row1);
#line 1047 "CalendarEvents.c"
}


static gint
___lambda304__gtk_list_box_sort_func (GtkListBoxRow* row1,
                                      GtkListBoxRow* row2,
                                      gpointer self)
{
	gint result;
	result = __lambda304_ ((WidgetsCalendarEvents*) self, row1, row2);
#line 271 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 1060 "CalendarEvents.c"
}


static gboolean
__lambda305_ (WidgetsCalendarEvents* self,
              GtkListBoxRow* row)
{
	gboolean result = FALSE;
	GDateTime* _tmp0_;
	AgendaEventRow* event_row = NULL;
	AgendaEventRow* _tmp1_;
	icalcomponent* comp = NULL;
	AgendaEventRow* _tmp2_;
	ECalComponent* _tmp3_;
	ECalComponent* _tmp4_;
	icalcomponent* _tmp5_;
	GDateTime* stripped_time = NULL;
	GDateTime* _tmp6_;
	GDateTime* _tmp7_;
	GDateTime* _tmp8_;
	GDateTime* _tmp9_;
	MayaUtilDateRange* range = NULL;
	GDateTime* _tmp10_;
	GDateTime* _tmp11_;
	GDateTime* _tmp12_;
	GDateTime* _tmp13_;
	MayaUtilDateRange* _tmp14_;
	MayaUtilDateRange* _tmp15_;
	GeeCollection* event_ranges = NULL;
	icalcomponent* _tmp16_;
	MayaUtilDateRange* _tmp17_;
	GeeCollection* _tmp18_;
#line 305 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_val_if_fail (row != NULL, FALSE);
#line 306 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = self->priv->selected_date;
#line 306 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (_tmp0_ == NULL) {
#line 307 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		result = FALSE;
#line 307 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		return result;
#line 1103 "CalendarEvents.c"
	}
#line 310 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (row, TYPE_AGENDA_EVENT_ROW, AgendaEventRow));
#line 310 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	event_row = _tmp1_;
#line 311 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp2_ = event_row;
#line 311 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp3_ = agenda_event_row_get_calevent (_tmp2_);
#line 311 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp4_ = _tmp3_;
#line 311 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp5_ = e_cal_component_get_icalcomponent (_tmp4_);
#line 311 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	comp = _tmp5_;
#line 313 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp6_ = self->priv->selected_date;
#line 313 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp7_ = self->priv->selected_date;
#line 313 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp8_ = self->priv->selected_date;
#line 313 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp9_ = g_date_time_new_local (g_date_time_get_year (_tmp6_), g_date_time_get_month (_tmp7_), g_date_time_get_day_of_month (_tmp8_), 0, 0, (gdouble) 0);
#line 313 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	stripped_time = _tmp9_;
#line 314 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp10_ = stripped_time;
#line 314 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp11_ = stripped_time;
#line 314 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp12_ = g_date_time_add_days (_tmp11_, 1);
#line 314 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp13_ = _tmp12_;
#line 314 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp14_ = maya_util_date_range_new (_tmp10_, _tmp13_);
#line 314 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp15_ = _tmp14_;
#line 314 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_date_time_unref0 (_tmp13_);
#line 314 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	range = _tmp15_;
#line 315 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp16_ = comp;
#line 315 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp17_ = range;
#line 315 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp18_ = maya_util_event_date_ranges (_tmp16_, _tmp17_);
#line 315 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	event_ranges = _tmp18_;
#line 1153 "CalendarEvents.c"
	{
		GeeIterator* _event_range_it = NULL;
		GeeCollection* _tmp19_;
		GeeIterator* _tmp20_;
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp19_ = event_ranges;
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp20_ = gee_iterable_iterator ((GeeIterable*) _tmp19_);
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_event_range_it = _tmp20_;
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		while (TRUE) {
#line 1166 "CalendarEvents.c"
			GeeIterator* _tmp21_;
			MayaUtilDateRange* event_range = NULL;
			GeeIterator* _tmp22_;
			gpointer _tmp23_;
			GDateTime* _tmp24_;
			MayaUtilDateRange* _tmp25_;
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp21_ = _event_range_it;
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			if (!gee_iterator_next (_tmp21_)) {
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				break;
#line 1179 "CalendarEvents.c"
			}
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp22_ = _event_range_it;
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp23_ = gee_iterator_get (_tmp22_);
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			event_range = (MayaUtilDateRange*) _tmp23_;
#line 318 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp24_ = stripped_time;
#line 318 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp25_ = event_range;
#line 318 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			if (maya_util_is_day_in_range (_tmp24_, _tmp25_)) {
#line 319 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				result = TRUE;
#line 319 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_object_unref0 (event_range);
#line 319 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_object_unref0 (_event_range_it);
#line 319 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_object_unref0 (event_ranges);
#line 319 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_object_unref0 (range);
#line 319 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_date_time_unref0 (stripped_time);
#line 319 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_object_unref0 (event_row);
#line 319 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				return result;
#line 1209 "CalendarEvents.c"
			}
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (event_range);
#line 1213 "CalendarEvents.c"
		}
#line 317 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_event_range_it);
#line 1217 "CalendarEvents.c"
	}
#line 323 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	result = FALSE;
#line 323 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (event_ranges);
#line 323 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (range);
#line 323 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_date_time_unref0 (stripped_time);
#line 323 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (event_row);
#line 323 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 1231 "CalendarEvents.c"
}


static gboolean
___lambda305__gtk_list_box_filter_func (GtkListBoxRow* row,
                                        gpointer self)
{
	gboolean result;
	result = __lambda305_ ((WidgetsCalendarEvents*) self, row);
#line 305 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 1243 "CalendarEvents.c"
}


static GtkWidget*
widgets_calendar_events_get_calendar_event_widget (WidgetsCalendarEvents* self)
{
	GtkWidget* result = NULL;
	Block62Data* _data62_;
	GHashFunc _tmp0_;
	GEqualFunc _tmp1_;
	GHashTable* _tmp2_;
	WidgetsWeather* _tmp3_;
	GtkRevealer* _tmp4_;
	WidgetsWeather* _tmp5_;
	WidgetsCalendarCalendar* calendar = NULL;
	WidgetsCalendarCalendar* _tmp6_;
	GtkRevealer* _tmp7_;
	GraniteHeaderLabel* _tmp8_;
	GtkListBox* _tmp9_;
	GtkListBox* _tmp10_;
	GtkGrid* events_grid = NULL;
	GtkGrid* _tmp11_;
	GtkListBox* _tmp12_;
	GtkRevealer* _tmp13_;
	GtkButton* show_calendar_button = NULL;
	GtkButton* _tmp14_;
	GtkButton* _tmp15_;
	GtkStyleContext* _tmp16_;
	GtkButton* calendar_button = NULL;
	GtkButton* _tmp17_;
	GtkStyleContext* _tmp18_;
	GtkStyleContext* _tmp19_;
	GtkButton* add_event_button = NULL;
	GtkButton* _tmp20_;
	GtkActionBar* action_bar = NULL;
	GtkActionBar* _tmp21_;
	GtkStyleContext* _tmp22_;
	GtkStyleContext* _tmp23_;
	GtkBox* main_box = NULL;
	GtkBox* _tmp24_;
	GSettings* _tmp25_;
	MayaModelCalendarModel* calmodel = NULL;
	MayaModelCalendarModel* _tmp26_;
	GDateTime* _tmp27_;
	GDateTime* _tmp28_;
	GtkListBox* _tmp29_;
	GtkListBox* _tmp30_;
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_ = g_slice_new0 (Block62Data);
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_->_ref_count_ = 1;
#line 119 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_->self = g_object_ref (self);
#line 120 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = g_str_hash;
#line 120 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = g_str_equal;
#line 120 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp2_ = g_hash_table_new_full (_tmp0_, _tmp1_, _g_free0_, _g_object_unref0_);
#line 120 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_hash_table_unref0 (self->priv->row_table);
#line 120 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv->row_table = _tmp2_;
#line 122 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp3_ = widgets_weather_new ();
#line 122 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp3_);
#line 122 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->weather_widget);
#line 122 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv->weather_widget = _tmp3_;
#line 124 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp4_ = (GtkRevealer*) gtk_revealer_new ();
#line 124 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp4_);
#line 124 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_->weather_revealer = _tmp4_;
#line 125 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_revealer_set_transition_type (_data62_->weather_revealer, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 126 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp5_ = self->priv->weather_widget;
#line 126 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _data62_->weather_revealer, (GtkWidget*) _tmp5_);
#line 127 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_revealer_set_reveal_child (_data62_->weather_revealer, TRUE);
#line 129 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp6_ = widgets_calendar_calendar_new (FALSE);
#line 129 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp6_);
#line 129 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	calendar = _tmp6_;
#line 131 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp7_ = (GtkRevealer*) gtk_revealer_new ();
#line 131 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp7_);
#line 131 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_->calendar_revealer = _tmp7_;
#line 132 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_revealer_set_transition_type (_data62_->calendar_revealer, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 133 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _data62_->calendar_revealer, (GtkWidget*) calendar);
#line 134 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_revealer_set_reveal_child (_data62_->calendar_revealer, FALSE);
#line 136 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp8_ = granite_header_label_new (_ ("Today"));
#line 136 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp8_);
#line 136 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_->events_label = _tmp8_;
#line 137 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _data62_->events_label, 9);
#line 139 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp9_ = (GtkListBox*) gtk_list_box_new ();
#line 139 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp9_);
#line 139 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->selected_date_events_list);
#line 139 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv->selected_date_events_list = _tmp9_;
#line 140 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp10_ = self->priv->selected_date_events_list;
#line 140 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_list_box_set_selection_mode (_tmp10_, GTK_SELECTION_NONE);
#line 142 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp11_ = (GtkGrid*) gtk_grid_new ();
#line 142 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp11_);
#line 142 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	events_grid = _tmp11_;
#line 143 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) events_grid, GTK_ORIENTATION_VERTICAL);
#line 144 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) events_grid, (GtkWidget*) _data62_->events_label);
#line 145 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp12_ = self->priv->selected_date_events_list;
#line 145 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) events_grid, (GtkWidget*) _tmp12_);
#line 147 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp13_ = (GtkRevealer*) gtk_revealer_new ();
#line 147 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp13_);
#line 147 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_->events_list_revealer = _tmp13_;
#line 148 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_revealer_set_transition_type (_data62_->events_list_revealer, GTK_REVEALER_TRANSITION_TYPE_CROSSFADE);
#line 149 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _data62_->events_list_revealer, 6);
#line 150 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _data62_->events_list_revealer, (GtkWidget*) events_grid);
#line 151 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_revealer_set_reveal_child (_data62_->events_list_revealer, TRUE);
#line 153 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp14_ = (GtkButton*) gtk_button_new_from_icon_name ("window-close-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 153 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp14_);
#line 153 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	show_calendar_button = _tmp14_;
#line 154 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_can_focus ((GtkWidget*) show_calendar_button, FALSE);
#line 155 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_focus_on_click ((GtkWidget*) show_calendar_button, FALSE);
#line 156 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_valign ((GtkWidget*) show_calendar_button, GTK_ALIGN_CENTER);
#line 157 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_halign ((GtkWidget*) show_calendar_button, GTK_ALIGN_CENTER);
#line 159 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp15_ = (GtkButton*) gtk_button_new_from_icon_name ("pan-up-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 159 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp15_);
#line 159 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_->show_hide_calendar_button = _tmp15_;
#line 160 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_can_focus ((GtkWidget*) _data62_->show_hide_calendar_button, FALSE);
#line 161 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set ((GtkWidget*) _data62_->show_hide_calendar_button, "margin", 3, NULL);
#line 162 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_focus_on_click ((GtkWidget*) _data62_->show_hide_calendar_button, FALSE);
#line 163 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_valign ((GtkWidget*) _data62_->show_hide_calendar_button, GTK_ALIGN_CENTER);
#line 164 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_halign ((GtkWidget*) _data62_->show_hide_calendar_button, GTK_ALIGN_CENTER);
#line 165 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp16_ = gtk_widget_get_style_context ((GtkWidget*) _data62_->show_hide_calendar_button);
#line 165 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp16_, "planner-button-ani");
#line 167 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp17_ = (GtkButton*) gtk_button_new_with_label (_ ("Calendar"));
#line 167 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp17_);
#line 167 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	calendar_button = _tmp17_;
#line 168 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set ((GtkWidget*) calendar_button, "margin", 3, NULL);
#line 169 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_can_focus ((GtkWidget*) calendar_button, FALSE);
#line 170 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_valign ((GtkWidget*) calendar_button, GTK_ALIGN_CENTER);
#line 171 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_hexpand ((GtkWidget*) calendar_button, TRUE);
#line 172 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_halign ((GtkWidget*) calendar_button, GTK_ALIGN_CENTER);
#line 173 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp18_ = gtk_widget_get_style_context ((GtkWidget*) calendar_button);
#line 173 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp18_, GTK_STYLE_CLASS_FLAT);
#line 174 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp19_ = gtk_widget_get_style_context ((GtkWidget*) calendar_button);
#line 174 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp19_, "no-padding");
#line 176 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp20_ = (GtkButton*) gtk_button_new_from_icon_name ("list-add-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 176 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp20_);
#line 176 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	add_event_button = _tmp20_;
#line 177 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_can_focus ((GtkWidget*) add_event_button, FALSE);
#line 178 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_margin_end ((GtkWidget*) add_event_button, 3);
#line 179 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_valign ((GtkWidget*) add_event_button, GTK_ALIGN_CENTER);
#line 180 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_halign ((GtkWidget*) add_event_button, GTK_ALIGN_CENTER);
#line 181 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_tooltip_text ((GtkWidget*) add_event_button, _ ("Add new project"));
#line 183 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp21_ = (GtkActionBar*) gtk_action_bar_new ();
#line 183 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp21_);
#line 183 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	action_bar = _tmp21_;
#line 184 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp22_ = gtk_widget_get_style_context ((GtkWidget*) action_bar);
#line 184 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp22_, GTK_STYLE_CLASS_INLINE_TOOLBAR);
#line 185 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp23_ = gtk_widget_get_style_context ((GtkWidget*) action_bar);
#line 185 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp23_, "planner-actionbar");
#line 186 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_action_bar_pack_start (action_bar, (GtkWidget*) _data62_->show_hide_calendar_button);
#line 187 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_action_bar_set_center_widget (action_bar, (GtkWidget*) calendar_button);
#line 190 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp24_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_VERTICAL, 0);
#line 190 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp24_);
#line 190 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	main_box = _tmp24_;
#line 192 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_box_pack_start (main_box, (GtkWidget*) _data62_->weather_revealer, FALSE, FALSE, (guint) 0);
#line 193 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_box_pack_start (main_box, (GtkWidget*) _data62_->events_label, FALSE, FALSE, (guint) 0);
#line 194 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_box_pack_start (main_box, (GtkWidget*) _data62_->events_list_revealer, FALSE, FALSE, (guint) 0);
#line 195 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_box_pack_end (main_box, (GtkWidget*) _data62_->calendar_revealer, FALSE, FALSE, (guint) 0);
#line 196 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_box_pack_end (main_box, (GtkWidget*) action_bar, FALSE, FALSE, (guint) 0);
#line 198 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_connect_data (calendar, "selection-changed", (GCallback) ___lambda293__widgets_calendar_calendar_selection_changed, block62_data_ref (_data62_), (GClosureNotify) block62_data_unref, 0);
#line 204 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_connect_data (calendar_button, "clicked", (GCallback) ___lambda294__gtk_button_clicked, block62_data_ref (_data62_), (GClosureNotify) block62_data_unref, 0);
#line 232 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_connect_data (_data62_->show_hide_calendar_button, "clicked", (GCallback) ___lambda297__gtk_button_clicked, block62_data_ref (_data62_), (GClosureNotify) block62_data_unref, 0);
#line 256 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp25_ = application_settings;
#line 256 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_connect_data (_tmp25_, "changed", (GCallback) ___lambda300__g_settings_changed, block62_data_ref (_data62_), (GClosureNotify) block62_data_unref, 0);
#line 263 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp26_ = maya_model_calendar_model_get_default ();
#line 263 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	calmodel = _tmp26_;
#line 264 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_connect_object (calmodel, "events-added", (GCallback) _widgets_calendar_events_on_events_added_maya_model_calendar_model_events_added, self, 0);
#line 265 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_connect_object (calmodel, "events-removed", (GCallback) _widgets_calendar_events_on_events_removed_maya_model_calendar_model_events_removed, self, 0);
#line 266 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_connect_object (calmodel, "events-updated", (GCallback) _widgets_calendar_events_on_events_updated_maya_model_calendar_model_events_updated, self, 0);
#line 268 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp27_ = g_date_time_new_now_local ();
#line 268 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp28_ = _tmp27_;
#line 268 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_set_selected_date (self, _tmp28_);
#line 268 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_date_time_unref0 (_tmp28_);
#line 269 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 271 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp29_ = self->priv->selected_date_events_list;
#line 271 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_list_box_set_sort_func (_tmp29_, ___lambda304__gtk_list_box_sort_func, g_object_ref (self), g_object_unref);
#line 305 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp30_ = self->priv->selected_date_events_list;
#line 305 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_list_box_set_filter_func (_tmp30_, ___lambda305__gtk_list_box_filter_func, g_object_ref (self), g_object_unref);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	result = (GtkWidget*) main_box;
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (calmodel);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (action_bar);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (add_event_button);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (calendar_button);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (show_calendar_button);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (events_grid);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (calendar);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	block62_data_unref (_data62_);
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data62_ = NULL;
#line 326 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 1565 "CalendarEvents.c"
}


static GtkWidget*
widgets_calendar_events_get_notifications_widget (WidgetsCalendarEvents* self)
{
	GtkWidget* result = NULL;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp0_;
#line 329 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 330 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = (GtkGrid*) gtk_grid_new ();
#line 330 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp0_);
#line 330 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	main_grid = _tmp0_;
#line 331 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_valign ((GtkWidget*) main_grid, GTK_ALIGN_CENTER);
#line 332 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_halign ((GtkWidget*) main_grid, GTK_ALIGN_CENTER);
#line 333 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set ((GtkWidget*) main_grid, "expand", TRUE, NULL);
#line 335 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	result = (GtkWidget*) main_grid;
#line 335 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 1593 "CalendarEvents.c"
}


static void
_____lambda301_ (WidgetsCalendarEvents* self,
                 ECalComponent* event)
{
#line 344 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (event != NULL);
#line 344 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_emit (self, widgets_calendar_events_signals[WIDGETS_CALENDAR_EVENTS_EVENT_MODIFIED_SIGNAL], 0, event);
#line 1605 "CalendarEvents.c"
}


static void
______lambda301__agenda_event_row_modified (AgendaEventRow* _sender,
                                            ECalComponent* event,
                                            gpointer self)
{
#line 344 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_____lambda301_ ((WidgetsCalendarEvents*) self, event);
#line 1616 "CalendarEvents.c"
}


static void
_____lambda302_ (WidgetsCalendarEvents* self,
                 ECalComponent* event)
{
#line 345 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (event != NULL);
#line 345 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_emit (self, widgets_calendar_events_signals[WIDGETS_CALENDAR_EVENTS_EVENT_REMOVED_SIGNAL], 0, event);
#line 1628 "CalendarEvents.c"
}


static void
______lambda302__agenda_event_row_removed (AgendaEventRow* _sender,
                                           ECalComponent* event,
                                           gpointer self)
{
#line 345 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_____lambda302_ ((WidgetsCalendarEvents*) self, event);
#line 1639 "CalendarEvents.c"
}


static void
widgets_calendar_events_on_events_added (WidgetsCalendarEvents* self,
                                         ESource* source,
                                         GeeCollection* events)
{
	GtkListBox* _tmp22_;
#line 338 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (self != NULL);
#line 338 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (source != NULL);
#line 338 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (events != NULL);
#line 1655 "CalendarEvents.c"
	{
		GeeIterator* _event_it = NULL;
		GeeIterator* _tmp0_;
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp0_ = gee_iterable_iterator ((GeeIterable*) events);
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_event_it = _tmp0_;
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		while (TRUE) {
#line 1665 "CalendarEvents.c"
			GeeIterator* _tmp1_;
			ECalComponent* event = NULL;
			GeeIterator* _tmp2_;
			gpointer _tmp3_;
			icalcomponent* comp = NULL;
			ECalComponent* _tmp4_;
			icalcomponent* _tmp5_;
			GHashTable* _tmp6_;
			icalcomponent* _tmp7_;
			const gchar* _tmp8_;
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp1_ = _event_it;
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			if (!gee_iterator_next (_tmp1_)) {
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				break;
#line 1682 "CalendarEvents.c"
			}
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp2_ = _event_it;
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp3_ = gee_iterator_get (_tmp2_);
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			event = (ECalComponent*) _tmp3_;
#line 340 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp4_ = event;
#line 340 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp5_ = e_cal_component_get_icalcomponent (_tmp4_);
#line 340 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			comp = _tmp5_;
#line 342 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp6_ = self->priv->row_table;
#line 342 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp7_ = comp;
#line 342 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp8_ = icalcomponent_get_uid (_tmp7_);
#line 342 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			if (!g_hash_table_contains (_tmp6_, _tmp8_)) {
#line 1704 "CalendarEvents.c"
				AgendaEventRow* row = NULL;
				ECalComponent* _tmp9_;
				AgendaEventRow* _tmp10_;
				AgendaEventRow* _tmp11_;
				AgendaEventRow* _tmp12_;
				AgendaEventRow* _tmp13_;
				GHashTable* _tmp14_;
				icalcomponent* _tmp15_;
				const gchar* _tmp16_;
				gchar* _tmp17_;
				AgendaEventRow* _tmp18_;
				AgendaEventRow* _tmp19_;
				GtkListBox* _tmp20_;
				AgendaEventRow* _tmp21_;
#line 343 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp9_ = event;
#line 343 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp10_ = agenda_event_row_new (source, _tmp9_, FALSE);
#line 343 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				g_object_ref_sink (_tmp10_);
#line 343 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				row = _tmp10_;
#line 344 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp11_ = row;
#line 344 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				g_signal_connect_object (_tmp11_, "modified", (GCallback) ______lambda301__agenda_event_row_modified, self, 0);
#line 345 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp12_ = row;
#line 345 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				g_signal_connect_object (_tmp12_, "removed", (GCallback) ______lambda302__agenda_event_row_removed, self, 0);
#line 347 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp13_ = row;
#line 347 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				gtk_widget_show_all ((GtkWidget*) _tmp13_);
#line 349 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp14_ = self->priv->row_table;
#line 349 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp15_ = comp;
#line 349 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp16_ = icalcomponent_get_uid (_tmp15_);
#line 349 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp17_ = g_strdup (_tmp16_);
#line 349 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp18_ = row;
#line 349 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp19_ = _g_object_ref0 (_tmp18_);
#line 349 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				g_hash_table_insert (_tmp14_, _tmp17_, _tmp19_);
#line 350 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp20_ = self->priv->selected_date_events_list;
#line 350 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp21_ = row;
#line 350 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				gtk_container_add ((GtkContainer*) _tmp20_, (GtkWidget*) _tmp21_);
#line 342 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_g_object_unref0 (row);
#line 1761 "CalendarEvents.c"
			}
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (event);
#line 1765 "CalendarEvents.c"
		}
#line 339 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_event_it);
#line 1769 "CalendarEvents.c"
	}
#line 354 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp22_ = self->priv->selected_date_events_list;
#line 354 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_list_box_invalidate_sort (_tmp22_);
#line 1775 "CalendarEvents.c"
}


static void
widgets_calendar_events_on_events_updated (WidgetsCalendarEvents* self,
                                           ESource* source,
                                           GeeCollection* events)
{
	GtkListBox* _tmp13_;
#line 357 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (self != NULL);
#line 357 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (source != NULL);
#line 357 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (events != NULL);
#line 1791 "CalendarEvents.c"
	{
		GeeIterator* _event_it = NULL;
		GeeIterator* _tmp0_;
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp0_ = gee_iterable_iterator ((GeeIterable*) events);
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_event_it = _tmp0_;
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		while (TRUE) {
#line 1801 "CalendarEvents.c"
			GeeIterator* _tmp1_;
			ECalComponent* event = NULL;
			GeeIterator* _tmp2_;
			gpointer _tmp3_;
			icalcomponent* comp = NULL;
			ECalComponent* _tmp4_;
			icalcomponent* _tmp5_;
			AgendaEventRow* row = NULL;
			GHashTable* _tmp6_;
			icalcomponent* _tmp7_;
			const gchar* _tmp8_;
			gconstpointer _tmp9_;
			AgendaEventRow* _tmp10_;
			AgendaEventRow* _tmp11_;
			ECalComponent* _tmp12_;
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp1_ = _event_it;
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			if (!gee_iterator_next (_tmp1_)) {
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				break;
#line 1823 "CalendarEvents.c"
			}
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp2_ = _event_it;
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp3_ = gee_iterator_get (_tmp2_);
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			event = (ECalComponent*) _tmp3_;
#line 359 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp4_ = event;
#line 359 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp5_ = e_cal_component_get_icalcomponent (_tmp4_);
#line 359 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			comp = _tmp5_;
#line 361 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp6_ = self->priv->row_table;
#line 361 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp7_ = comp;
#line 361 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp8_ = icalcomponent_get_uid (_tmp7_);
#line 361 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp9_ = g_hash_table_lookup (_tmp6_, _tmp8_);
#line 361 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp10_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST ((AgendaEventRow*) _tmp9_, TYPE_AGENDA_EVENT_ROW, AgendaEventRow));
#line 361 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			row = _tmp10_;
#line 362 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp11_ = row;
#line 362 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp12_ = event;
#line 362 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			agenda_event_row_update (_tmp11_, _tmp12_);
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (row);
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (event);
#line 1859 "CalendarEvents.c"
		}
#line 358 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_event_it);
#line 1863 "CalendarEvents.c"
	}
#line 365 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp13_ = self->priv->selected_date_events_list;
#line 365 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_list_box_invalidate_sort (_tmp13_);
#line 1869 "CalendarEvents.c"
}


static Block63Data*
block63_data_ref (Block63Data* _data63_)
{
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_atomic_int_inc (&_data63_->_ref_count_);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return _data63_;
#line 1880 "CalendarEvents.c"
}


static void
block63_data_unref (void * _userdata_)
{
	Block63Data* _data63_;
	_data63_ = (Block63Data*) _userdata_;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (g_atomic_int_dec_and_test (&_data63_->_ref_count_)) {
#line 1891 "CalendarEvents.c"
		WidgetsCalendarEvents* self;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		self = _data63_->self;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_data63_->row);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (self);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		g_slice_free (Block63Data, _data63_);
#line 1901 "CalendarEvents.c"
	}
}


static gboolean
_____lambda303_ (Block63Data* _data63_)
{
	WidgetsCalendarEvents* self;
	gboolean result = FALSE;
	AgendaEventRow* _tmp0_;
#line 376 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data63_->self;
#line 377 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = _data63_->row;
#line 377 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_destroy ((GtkWidget*) _tmp0_);
#line 378 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	result = G_SOURCE_REMOVE;
#line 378 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 1922 "CalendarEvents.c"
}


static gboolean
______lambda303__gsource_func (gpointer self)
{
	gboolean result;
	result = _____lambda303_ (self);
#line 376 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return result;
#line 1933 "CalendarEvents.c"
}


static void
widgets_calendar_events_on_events_removed (WidgetsCalendarEvents* self,
                                           ESource* source,
                                           GeeCollection* events)
{
	GtkListBox* _tmp23_;
#line 368 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (self != NULL);
#line 368 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (source != NULL);
#line 368 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (events != NULL);
#line 1949 "CalendarEvents.c"
	{
		GeeIterator* _event_it = NULL;
		GeeIterator* _tmp0_;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp0_ = gee_iterable_iterator ((GeeIterable*) events);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_event_it = _tmp0_;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		while (TRUE) {
#line 1959 "CalendarEvents.c"
			Block63Data* _data63_;
			GeeIterator* _tmp1_;
			ECalComponent* event = NULL;
			GeeIterator* _tmp2_;
			gpointer _tmp3_;
			icalcomponent* comp = NULL;
			ECalComponent* _tmp4_;
			icalcomponent* _tmp5_;
			GHashTable* _tmp6_;
			icalcomponent* _tmp7_;
			const gchar* _tmp8_;
			gconstpointer _tmp9_;
			AgendaEventRow* _tmp10_;
			GHashTable* _tmp11_;
			icalcomponent* _tmp12_;
			const gchar* _tmp13_;
			AgendaEventRow* _tmp14_;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_data63_ = g_slice_new0 (Block63Data);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_data63_->_ref_count_ = 1;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_data63_->self = g_object_ref (self);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp1_ = _event_it;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			if (!gee_iterator_next (_tmp1_)) {
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				block63_data_unref (_data63_);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_data63_ = NULL;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				break;
#line 1993 "CalendarEvents.c"
			}
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp2_ = _event_it;
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp3_ = gee_iterator_get (_tmp2_);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			event = (ECalComponent*) _tmp3_;
#line 370 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp4_ = event;
#line 370 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp5_ = e_cal_component_get_icalcomponent (_tmp4_);
#line 370 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			comp = _tmp5_;
#line 372 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp6_ = self->priv->row_table;
#line 372 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp7_ = comp;
#line 372 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp8_ = icalcomponent_get_uid (_tmp7_);
#line 372 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp9_ = g_hash_table_lookup (_tmp6_, _tmp8_);
#line 372 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp10_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST ((AgendaEventRow*) _tmp9_, TYPE_AGENDA_EVENT_ROW, AgendaEventRow));
#line 372 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_data63_->row = _tmp10_;
#line 373 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp11_ = self->priv->row_table;
#line 373 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp12_ = comp;
#line 373 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp13_ = icalcomponent_get_uid (_tmp12_);
#line 373 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			g_hash_table_remove (_tmp11_, _tmp13_);
#line 374 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp14_ = _data63_->row;
#line 374 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			if (G_TYPE_CHECK_INSTANCE_TYPE (_tmp14_, gtk_widget_get_type ())) {
#line 2031 "CalendarEvents.c"
				AgendaEventRow* _tmp15_;
				GtkRevealer* _tmp16_;
				GtkRevealer* _tmp17_;
				AgendaEventRow* _tmp18_;
				GtkRevealer* _tmp19_;
				GtkRevealer* _tmp20_;
				guint _tmp21_;
				guint _tmp22_;
#line 375 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp15_ = _data63_->row;
#line 375 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp16_ = agenda_event_row_get_revealer (_tmp15_);
#line 375 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp17_ = _tmp16_;
#line 375 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				gtk_revealer_set_reveal_child (_tmp17_, FALSE);
#line 376 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp18_ = _data63_->row;
#line 376 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp19_ = agenda_event_row_get_revealer (_tmp18_);
#line 376 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp20_ = _tmp19_;
#line 376 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp21_ = gtk_revealer_get_transition_duration (_tmp20_);
#line 376 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				_tmp22_ = _tmp21_;
#line 376 "/run/build/planner/src/Widgets/CalendarEvents.vala"
				g_timeout_add_full (G_PRIORITY_DEFAULT, _tmp22_, ______lambda303__gsource_func, block63_data_ref (_data63_), block63_data_unref);
#line 2060 "CalendarEvents.c"
			}
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_g_object_unref0 (event);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			block63_data_unref (_data63_);
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_data63_ = NULL;
#line 2068 "CalendarEvents.c"
		}
#line 369 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_event_it);
#line 2072 "CalendarEvents.c"
	}
#line 383 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp23_ = self->priv->selected_date_events_list;
#line 383 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_list_box_invalidate_sort (_tmp23_);
#line 2078 "CalendarEvents.c"
}


static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 387 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 2087 "CalendarEvents.c"
}


static glong
string_strnlen (gchar* str,
                glong maxlen)
{
	glong result = 0L;
	gchar* end = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
#line 1392 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = memchr (str, 0, (gsize) maxlen);
#line 1392 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	end = _tmp0_;
#line 1393 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = end;
#line 1393 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (_tmp1_ == NULL) {
#line 1394 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = maxlen;
#line 1394 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 2111 "CalendarEvents.c"
	} else {
		gchar* _tmp2_;
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp2_ = end;
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = (glong) (_tmp2_ - str);
#line 1396 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 2120 "CalendarEvents.c"
	}
}


static gchar*
string_substring (const gchar* self,
                  glong offset,
                  glong len)
{
	gchar* result = NULL;
	glong string_length = 0L;
	gboolean _tmp0_ = FALSE;
	glong _tmp6_;
	gchar* _tmp7_;
#line 1403 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (offset >= ((glong) 0)) {
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = len >= ((glong) 0);
#line 2141 "CalendarEvents.c"
	} else {
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = FALSE;
#line 2145 "CalendarEvents.c"
	}
#line 1405 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (_tmp0_) {
#line 1407 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		string_length = string_strnlen ((gchar*) self, offset + len);
#line 2151 "CalendarEvents.c"
	} else {
		gint _tmp1_;
		gint _tmp2_;
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp1_ = strlen (self);
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp2_ = _tmp1_;
#line 1409 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		string_length = (glong) _tmp2_;
#line 2161 "CalendarEvents.c"
	}
#line 1412 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (offset < ((glong) 0)) {
#line 2165 "CalendarEvents.c"
		glong _tmp3_;
#line 1413 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp3_ = string_length;
#line 1413 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		offset = _tmp3_ + offset;
#line 1414 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		g_return_val_if_fail (offset >= ((glong) 0), NULL);
#line 2173 "CalendarEvents.c"
	} else {
		glong _tmp4_;
#line 1416 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp4_ = string_length;
#line 1416 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		g_return_val_if_fail (offset <= _tmp4_, NULL);
#line 2180 "CalendarEvents.c"
	}
#line 1418 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (len < ((glong) 0)) {
#line 2184 "CalendarEvents.c"
		glong _tmp5_;
#line 1419 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp5_ = string_length;
#line 1419 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		len = _tmp5_ - offset;
#line 2190 "CalendarEvents.c"
	}
#line 1421 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp6_ = string_length;
#line 1421 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail ((offset + len) <= _tmp6_, NULL);
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp7_ = g_strndup (((gchar*) self) + offset, (gsize) len);
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp7_;
#line 1422 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 2202 "CalendarEvents.c"
}


static gint
string_index_of_nth_char (const gchar* self,
                          glong c)
{
	gint result = 0;
	gchar* _tmp0_;
#line 1230 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, 0);
#line 1231 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_utf8_offset_to_pointer (self, c);
#line 1231 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = (gint) (_tmp0_ - ((gchar*) self));
#line 1231 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 2220 "CalendarEvents.c"
}


static gunichar
string_get_char (const gchar* self,
                 glong index)
{
	gunichar result = 0U;
#line 1210 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, 0U);
#line 1211 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = g_utf8_get_char (((gchar*) self) + index);
#line 1211 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 2235 "CalendarEvents.c"
}


static gchar*
g_unichar_to_string (gunichar self)
{
	gchar* result = NULL;
	gchar* str = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
#line 1019 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_new0 (gchar, 7);
#line 1019 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	str = (gchar*) _tmp0_;
#line 1020 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = str;
#line 1020 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_unichar_to_utf8 (self, _tmp1_);
#line 1021 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = str;
#line 1021 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 2258 "CalendarEvents.c"
}


void
widgets_calendar_events_set_selected_date (WidgetsCalendarEvents* self,
                                           GDateTime* date)
{
	GDateTime* _tmp0_;
	gchar* formated_weekday = NULL;
	gchar* _tmp1_;
	gchar* new_value = NULL;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	const gchar* _tmp5_;
	gchar* _tmp6_;
	GtkLabel* _tmp7_;
	const gchar* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	GtkLabel* _tmp11_;
	gchar* _tmp12_;
	gchar* _tmp13_;
	gchar* _tmp14_;
	gchar* _tmp15_;
	GtkListBox* _tmp16_;
#line 386 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (self != NULL);
#line 386 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (date != NULL);
#line 387 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = _g_date_time_ref0 (date);
#line 387 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_date_time_unref0 (self->priv->selected_date);
#line 387 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv->selected_date = _tmp0_;
#line 389 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = g_date_time_format (date, "%A");
#line 389 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	formated_weekday = _tmp1_;
#line 390 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp2_ = string_substring (formated_weekday, (glong) string_index_of_nth_char (formated_weekday, (glong) 1), (glong) -1);
#line 390 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	new_value = _tmp2_;
#line 392 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp3_ = g_unichar_to_string (g_unichar_totitle (string_get_char (formated_weekday, (glong) 0)));
#line 392 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp4_ = _tmp3_;
#line 392 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp5_ = new_value;
#line 392 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp6_ = g_strconcat (_tmp4_, _tmp5_, NULL);
#line 392 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_free0 (new_value);
#line 392 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	new_value = _tmp6_;
#line 392 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_free0 (_tmp4_);
#line 393 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp7_ = self->priv->weekday_label;
#line 393 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp8_ = new_value;
#line 393 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp9_ = g_strdup_printf ("<b>%s</b>", _tmp8_);
#line 393 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp10_ = _tmp9_;
#line 393 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_label_set_label (_tmp7_, _tmp10_);
#line 393 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_free0 (_tmp10_);
#line 394 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp11_ = self->priv->day_label;
#line 394 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp12_ = maya_settings_DateFormat ();
#line 394 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp13_ = _tmp12_;
#line 394 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp14_ = g_date_time_format (date, _tmp13_);
#line 394 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp15_ = _tmp14_;
#line 394 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_label_set_label (_tmp11_, _tmp15_);
#line 394 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_free0 (_tmp15_);
#line 394 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_free0 (_tmp13_);
#line 396 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp16_ = self->priv->selected_date_events_list;
#line 396 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_list_box_invalidate_filter (_tmp16_);
#line 386 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_free0 (new_value);
#line 386 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_free0 (formated_weekday);
#line 2353 "CalendarEvents.c"
}


static Block64Data*
block64_data_ref (Block64Data* _data64_)
{
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_atomic_int_inc (&_data64_->_ref_count_);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return _data64_;
#line 2364 "CalendarEvents.c"
}


static void
block64_data_unref (void * _userdata_)
{
	Block64Data* _data64_;
	_data64_ = (Block64Data*) _userdata_;
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (g_atomic_int_dec_and_test (&_data64_->_ref_count_)) {
#line 2375 "CalendarEvents.c"
		WidgetsCalendarEvents* self;
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		self = _data64_->self;
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (_data64_->mode_button);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_g_object_unref0 (self);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		g_slice_free (Block64Data, _data64_);
#line 2385 "CalendarEvents.c"
	}
}


static void
_widgets_calendar_events___lambda307_ (Block64Data* _data64_,
                                       GtkWidget* widget)
{
	WidgetsCalendarEvents* self;
	GraniteWidgetsModeButton* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
#line 108 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = _data64_->self;
#line 108 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_return_if_fail (widget != NULL);
#line 109 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = _data64_->mode_button;
#line 109 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = granite_widgets_mode_button_get_selected (_tmp0_);
#line 109 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp2_ = _tmp1_;
#line 109 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	if (_tmp2_ == 0) {
#line 2410 "CalendarEvents.c"
		GtkStack* _tmp3_;
#line 110 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp3_ = self->priv->main_stack;
#line 110 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		gtk_stack_set_visible_child_name (_tmp3_, "calendar_event");
#line 2416 "CalendarEvents.c"
	} else {
		GraniteWidgetsModeButton* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
#line 111 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp4_ = _data64_->mode_button;
#line 111 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp5_ = granite_widgets_mode_button_get_selected (_tmp4_);
#line 111 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		_tmp6_ = _tmp5_;
#line 111 "/run/build/planner/src/Widgets/CalendarEvents.vala"
		if (_tmp6_ == 1) {
#line 2429 "CalendarEvents.c"
			GtkStack* _tmp7_;
#line 112 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			_tmp7_ = self->priv->main_stack;
#line 112 "/run/build/planner/src/Widgets/CalendarEvents.vala"
			gtk_stack_set_visible_child_name (_tmp7_, "notifications");
#line 2435 "CalendarEvents.c"
		}
	}
}


static void
__widgets_calendar_events___lambda307__granite_widgets_mode_button_mode_changed (GraniteWidgetsModeButton* _sender,
                                                                                 GtkWidget* widget,
                                                                                 gpointer self)
{
#line 108 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_widgets_calendar_events___lambda307_ (self, widget);
#line 2448 "CalendarEvents.c"
}


static GObject *
widgets_calendar_events_constructor (GType type,
                                     guint n_construct_properties,
                                     GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsCalendarEvents * self;
	Block64Data* _data64_;
	GtkLabel* _tmp0_;
	GtkLabel* _tmp1_;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkLabel* _tmp5_;
	GtkStyleContext* _tmp6_;
	GtkLabel* _tmp7_;
	GtkLabel* _tmp8_;
	GtkLabel* _tmp9_;
	GtkLabel* _tmp10_;
	GtkLabel* _tmp11_;
	GtkStyleContext* _tmp12_;
	GtkGrid* selected_data_grid = NULL;
	GtkGrid* _tmp13_;
	GtkGrid* _tmp14_;
	GtkGrid* _tmp15_;
	GtkGrid* _tmp16_;
	GtkGrid* _tmp17_;
	GtkGrid* _tmp18_;
	GtkGrid* _tmp19_;
	GtkLabel* _tmp20_;
	GtkGrid* _tmp21_;
	GtkLabel* _tmp22_;
	GraniteWidgetsModeButton* _tmp23_;
	GraniteWidgetsModeButton* _tmp24_;
	GraniteWidgetsModeButton* _tmp25_;
	GraniteWidgetsModeButton* _tmp26_;
	GraniteWidgetsModeButton* _tmp27_;
	GraniteWidgetsModeButton* _tmp28_;
	GtkBox* box = NULL;
	GtkBox* _tmp29_;
	GtkBox* _tmp30_;
	GtkGrid* _tmp31_;
	GtkRevealer* _tmp32_;
	GtkRevealer* _tmp33_;
	GtkRevealer* _tmp34_;
	GtkBox* _tmp35_;
	GtkRevealer* _tmp36_;
	GtkStack* _tmp37_;
	GtkStack* _tmp38_;
	GtkStack* _tmp39_;
	GtkStack* _tmp40_;
	GtkWidget* _tmp41_;
	GtkWidget* _tmp42_;
	GtkStack* _tmp43_;
	GtkWidget* _tmp44_;
	GtkWidget* _tmp45_;
	GtkGrid* content_grid = NULL;
	GtkGrid* _tmp46_;
	GtkGrid* _tmp47_;
	GtkGrid* _tmp48_;
	GtkRevealer* _tmp49_;
	GtkGrid* _tmp50_;
	GtkStack* _tmp51_;
	GtkScrolledWindow* scrolled_window = NULL;
	GtkScrolledWindow* _tmp52_;
	GtkScrolledWindow* _tmp53_;
	GtkScrolledWindow* _tmp54_;
	GtkScrolledWindow* _tmp55_;
	GtkStyleContext* _tmp56_;
	GtkScrolledWindow* _tmp57_;
	GtkStyleContext* _tmp58_;
	GtkScrolledWindow* _tmp59_;
	GtkScrolledWindow* _tmp60_;
	GtkGrid* _tmp61_;
	GraniteWidgetsModeButton* _tmp62_;
	GtkScrolledWindow* _tmp63_;
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	parent_class = G_OBJECT_CLASS (widgets_calendar_events_parent_class);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_CALENDAR_EVENTS, WidgetsCalendarEvents);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data64_ = g_slice_new0 (Block64Data);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data64_->_ref_count_ = 1;
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data64_->self = g_object_ref (self);
#line 50 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp0_ = (GtkLabel*) gtk_label_new ("");
#line 50 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp0_);
#line 50 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->weekday_label);
#line 50 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv->weekday_label = _tmp0_;
#line 51 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp1_ = self->priv->weekday_label;
#line 51 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp1_, TRUE);
#line 52 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp2_ = self->priv->weekday_label;
#line 52 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp2_, GTK_ALIGN_END);
#line 53 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp3_ = self->priv->weekday_label;
#line 53 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_label_set_xalign (_tmp3_, (gfloat) 0);
#line 54 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp4_ = self->priv->weekday_label;
#line 54 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_label_set_use_markup (_tmp4_, TRUE);
#line 55 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp5_ = self->priv->weekday_label;
#line 55 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp6_ = gtk_widget_get_style_context ((GtkWidget*) _tmp5_);
#line 55 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp6_, GRANITE_STYLE_CLASS_H2_LABEL);
#line 57 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp7_ = (GtkLabel*) gtk_label_new ("");
#line 57 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp7_);
#line 57 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->day_label);
#line 57 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv->day_label = _tmp7_;
#line 58 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp8_ = self->priv->day_label;
#line 58 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp8_, TRUE);
#line 59 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp9_ = self->priv->day_label;
#line 59 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp9_, GTK_ALIGN_END);
#line 60 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp10_ = self->priv->day_label;
#line 60 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_label_set_xalign (_tmp10_, (gfloat) 0);
#line 61 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp11_ = self->priv->day_label;
#line 61 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp12_ = gtk_widget_get_style_context ((GtkWidget*) _tmp11_);
#line 61 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp12_, GRANITE_STYLE_CLASS_H3_LABEL);
#line 63 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp13_ = (GtkGrid*) gtk_grid_new ();
#line 63 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp13_);
#line 63 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	selected_data_grid = _tmp13_;
#line 64 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp14_ = selected_data_grid;
#line 64 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set ((GtkWidget*) _tmp14_, "margin", 6, NULL);
#line 65 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp15_ = selected_data_grid;
#line 65 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp16_ = selected_data_grid;
#line 65 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_margin_end ((GtkWidget*) _tmp16_, 12);
#line 65 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp15_, 12);
#line 66 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp17_ = selected_data_grid;
#line 66 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_grid_set_row_spacing (_tmp17_, 3);
#line 67 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp18_ = selected_data_grid;
#line 67 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp18_, GTK_ORIENTATION_VERTICAL);
#line 68 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp19_ = selected_data_grid;
#line 68 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp20_ = self->priv->weekday_label;
#line 68 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _tmp19_, (GtkWidget*) _tmp20_);
#line 69 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp21_ = selected_data_grid;
#line 69 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp22_ = self->priv->day_label;
#line 69 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _tmp21_, (GtkWidget*) _tmp22_);
#line 71 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp23_ = granite_widgets_mode_button_new ();
#line 71 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp23_);
#line 71 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data64_->mode_button = _tmp23_;
#line 72 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp24_ = _data64_->mode_button;
#line 72 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp24_, TRUE);
#line 73 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp25_ = _data64_->mode_button;
#line 73 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set ((GtkWidget*) _tmp25_, "margin", 6, NULL);
#line 75 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp26_ = _data64_->mode_button;
#line 75 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	granite_widgets_mode_button_append_text (_tmp26_, _ ("Events"));
#line 76 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp27_ = _data64_->mode_button;
#line 76 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	granite_widgets_mode_button_append_text (_tmp27_, _ ("Notifications"));
#line 77 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp28_ = _data64_->mode_button;
#line 77 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	granite_widgets_mode_button_set_selected (_tmp28_, 0);
#line 79 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp29_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_VERTICAL, 0);
#line 79 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp29_);
#line 79 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	box = _tmp29_;
#line 80 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp30_ = box;
#line 80 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp31_ = selected_data_grid;
#line 80 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _tmp30_, (GtkWidget*) _tmp31_);
#line 83 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp32_ = (GtkRevealer*) gtk_revealer_new ();
#line 83 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp32_);
#line 83 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->box_revealer);
#line 83 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv->box_revealer = _tmp32_;
#line 84 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp33_ = self->priv->box_revealer;
#line 84 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_revealer_set_transition_type (_tmp33_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 85 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp34_ = self->priv->box_revealer;
#line 85 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp35_ = box;
#line 85 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _tmp34_, (GtkWidget*) _tmp35_);
#line 86 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp36_ = self->priv->box_revealer;
#line 86 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_revealer_set_reveal_child (_tmp36_, TRUE);
#line 88 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp37_ = (GtkStack*) gtk_stack_new ();
#line 88 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp37_);
#line 88 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->main_stack);
#line 88 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv->main_stack = _tmp37_;
#line 89 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp38_ = self->priv->main_stack;
#line 89 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set ((GtkWidget*) _tmp38_, "expand", TRUE, NULL);
#line 90 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp39_ = self->priv->main_stack;
#line 90 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_stack_set_transition_type (_tmp39_, GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT);
#line 92 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp40_ = self->priv->main_stack;
#line 92 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp41_ = widgets_calendar_events_get_calendar_event_widget (self);
#line 92 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp42_ = _tmp41_;
#line 92 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_stack_add_named (_tmp40_, _tmp42_, "calendar_event");
#line 92 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (_tmp42_);
#line 93 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp43_ = self->priv->main_stack;
#line 93 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp44_ = widgets_calendar_events_get_notifications_widget (self);
#line 93 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp45_ = _tmp44_;
#line 93 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_stack_add_named (_tmp43_, _tmp45_, "notifications");
#line 93 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (_tmp45_);
#line 95 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp46_ = (GtkGrid*) gtk_grid_new ();
#line 95 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp46_);
#line 95 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	content_grid = _tmp46_;
#line 96 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp47_ = content_grid;
#line 96 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp47_, GTK_ORIENTATION_VERTICAL);
#line 97 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp48_ = content_grid;
#line 97 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp49_ = self->priv->box_revealer;
#line 97 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _tmp48_, (GtkWidget*) _tmp49_);
#line 98 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp50_ = content_grid;
#line 98 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp51_ = self->priv->main_stack;
#line 98 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _tmp50_, (GtkWidget*) _tmp51_);
#line 100 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp52_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 100 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_ref_sink (_tmp52_);
#line 100 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	scrolled_window = _tmp52_;
#line 101 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp53_ = scrolled_window;
#line 101 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set ((GtkWidget*) _tmp53_, "width-request", 275, NULL);
#line 102 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp54_ = scrolled_window;
#line 102 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set (_tmp54_, "hscrollbar-policy", GTK_POLICY_NEVER, NULL);
#line 103 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp55_ = scrolled_window;
#line 103 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp56_ = gtk_widget_get_style_context ((GtkWidget*) _tmp55_);
#line 103 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp56_, "popover");
#line 104 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp57_ = scrolled_window;
#line 104 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp58_ = gtk_widget_get_style_context ((GtkWidget*) _tmp57_);
#line 104 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_style_context_add_class (_tmp58_, "planner-popover");
#line 105 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp59_ = scrolled_window;
#line 105 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_object_set ((GtkWidget*) _tmp59_, "expand", TRUE, NULL);
#line 106 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp60_ = scrolled_window;
#line 106 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp61_ = content_grid;
#line 106 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) _tmp60_, (GtkWidget*) _tmp61_);
#line 108 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp62_ = _data64_->mode_button;
#line 108 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_signal_connect_data (_tmp62_, "mode-changed", (GCallback) __widgets_calendar_events___lambda307__granite_widgets_mode_button_mode_changed, block64_data_ref (_data64_), (GClosureNotify) block64_data_unref, 0);
#line 116 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_tmp63_ = scrolled_window;
#line 116 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp63_);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (scrolled_window);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (content_grid);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (box);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (selected_data_grid);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	block64_data_unref (_data64_);
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_data64_ = NULL;
#line 49 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	return obj;
#line 2811 "CalendarEvents.c"
}


static void
widgets_calendar_events_class_init (WidgetsCalendarEventsClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	g_type_class_add_private (klass, sizeof (WidgetsCalendarEventsPrivate));
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_calendar_events_constructor;
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_calendar_events_finalize;
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_signals[WIDGETS_CALENDAR_EVENTS_EVENT_REMOVED_SIGNAL] = g_signal_new ("event-removed", WIDGETS_TYPE_CALENDAR_EVENTS, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, e_cal_component_get_type ());
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_signals[WIDGETS_CALENDAR_EVENTS_EVENT_MODIFIED_SIGNAL] = g_signal_new ("event-modified", WIDGETS_TYPE_CALENDAR_EVENTS, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, e_cal_component_get_type ());
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	widgets_calendar_events_signals[WIDGETS_CALENDAR_EVENTS_ON_SIGNAL_CLOSE_SIGNAL] = g_signal_new ("on-signal-close", WIDGETS_TYPE_CALENDAR_EVENTS, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 2832 "CalendarEvents.c"
}


static void
widgets_calendar_events_instance_init (WidgetsCalendarEvents * self)
{
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self->priv = WIDGETS_CALENDAR_EVENTS_GET_PRIVATE (self);
#line 2841 "CalendarEvents.c"
}


static void
widgets_calendar_events_finalize (GObject * obj)
{
	WidgetsCalendarEvents * self;
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_CALENDAR_EVENTS, WidgetsCalendarEvents);
#line 26 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->box_revealer);
#line 27 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->main_stack);
#line 29 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->day_label);
#line 30 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_date_time_unref0 (self->priv->selected_date);
#line 31 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->weekday_label);
#line 33 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->weather_widget);
#line 35 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_object_unref0 (self->priv->selected_date_events_list);
#line 36 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	_g_hash_table_unref0 (self->priv->row_table);
#line 22 "/run/build/planner/src/Widgets/CalendarEvents.vala"
	G_OBJECT_CLASS (widgets_calendar_events_parent_class)->finalize (obj);
#line 2869 "CalendarEvents.c"
}


GType
widgets_calendar_events_get_type (void)
{
	static volatile gsize widgets_calendar_events_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_calendar_events_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsCalendarEventsClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_calendar_events_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsCalendarEvents), 0, (GInstanceInitFunc) widgets_calendar_events_instance_init, NULL };
		GType widgets_calendar_events_type_id;
		widgets_calendar_events_type_id = g_type_register_static (gtk_revealer_get_type (), "WidgetsCalendarEvents", &g_define_type_info, 0);
		g_once_init_leave (&widgets_calendar_events_type_id__volatile, widgets_calendar_events_type_id);
	}
	return widgets_calendar_events_type_id__volatile;
}



