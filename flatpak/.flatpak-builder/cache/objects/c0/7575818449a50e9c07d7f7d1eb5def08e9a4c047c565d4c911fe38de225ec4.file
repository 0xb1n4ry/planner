/* backend-store.c generated by valac 0.40.11, the Vala compiler
 * generated from backend-store.vala, do not modify */

/*
 * Copyright (C) 2008 Nokia Corporation.
 * Copyright (C) 2008 Zeeshan Ali (Khattak) <zeeshanak@gnome.org>.
 * Copyright (C) 2010 Collabora Ltd.
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors: Zeeshan Ali (Khattak) <zeeshanak@gnome.org>
 *          Travis Reitter <travis.reitter@collabora.co.uk>
 *
 * This file was originally part of Rygel.
 */


#include <glib.h>
#include <glib-object.h>
#include <gee.h>
#include <stdlib.h>
#include <string.h>
#include <folks/small-set.h>
#include <gio/gio.h>
#include <gmodule.h>
#include <folks-internal.h>
#include <config.h>
#include <glib/gi18n-lib.h>


#define FOLKS_TYPE_BACKEND_STORE (folks_backend_store_get_type ())
#define FOLKS_BACKEND_STORE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_BACKEND_STORE, FolksBackendStore))
#define FOLKS_BACKEND_STORE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_BACKEND_STORE, FolksBackendStoreClass))
#define FOLKS_IS_BACKEND_STORE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_BACKEND_STORE))
#define FOLKS_IS_BACKEND_STORE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_BACKEND_STORE))
#define FOLKS_BACKEND_STORE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_BACKEND_STORE, FolksBackendStoreClass))

typedef struct _FolksBackendStore FolksBackendStore;
typedef struct _FolksBackendStoreClass FolksBackendStoreClass;
typedef struct _FolksBackendStorePrivate FolksBackendStorePrivate;

#define FOLKS_TYPE_BACKEND (folks_backend_get_type ())
#define FOLKS_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_BACKEND, FolksBackend))
#define FOLKS_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_BACKEND, FolksBackendClass))
#define FOLKS_IS_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_BACKEND))
#define FOLKS_IS_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_BACKEND))
#define FOLKS_BACKEND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_BACKEND, FolksBackendClass))

typedef struct _FolksBackend FolksBackend;
typedef struct _FolksBackendClass FolksBackendClass;

#define FOLKS_TYPE_DEBUG (folks_debug_get_type ())
#define FOLKS_DEBUG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_DEBUG, FolksDebug))
#define FOLKS_DEBUG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_DEBUG, FolksDebugClass))
#define FOLKS_IS_DEBUG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_DEBUG))
#define FOLKS_IS_DEBUG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_DEBUG))
#define FOLKS_DEBUG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_DEBUG, FolksDebugClass))

typedef struct _FolksDebug FolksDebug;
typedef struct _FolksDebugClass FolksDebugClass;
enum  {
	FOLKS_BACKEND_STORE_0_PROPERTY,
	FOLKS_BACKEND_STORE_ENABLED_BACKENDS_PROPERTY,
	FOLKS_BACKEND_STORE_IS_PREPARED_PROPERTY,
	FOLKS_BACKEND_STORE_NUM_PROPERTIES
};
static GParamSpec* folks_backend_store_properties[FOLKS_BACKEND_STORE_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_key_file_unref0(var) ((var == NULL) ? NULL : (var = (g_key_file_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))

#define FOLKS_TYPE_PERSONA_STORE (folks_persona_store_get_type ())
#define FOLKS_PERSONA_STORE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_PERSONA_STORE, FolksPersonaStore))
#define FOLKS_PERSONA_STORE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_PERSONA_STORE, FolksPersonaStoreClass))
#define FOLKS_IS_PERSONA_STORE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_PERSONA_STORE))
#define FOLKS_IS_PERSONA_STORE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_PERSONA_STORE))
#define FOLKS_PERSONA_STORE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_PERSONA_STORE, FolksPersonaStoreClass))

typedef struct _FolksPersonaStore FolksPersonaStore;
typedef struct _FolksPersonaStoreClass FolksPersonaStoreClass;

#define FOLKS_TYPE_PERSONA_STORE_TRUST (folks_persona_store_trust_get_type ())

#define FOLKS_TYPE_PERSONA (folks_persona_get_type ())
#define FOLKS_PERSONA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_PERSONA, FolksPersona))
#define FOLKS_PERSONA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_PERSONA, FolksPersonaClass))
#define FOLKS_IS_PERSONA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_PERSONA))
#define FOLKS_IS_PERSONA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_PERSONA))
#define FOLKS_PERSONA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_PERSONA, FolksPersonaClass))

typedef struct _FolksPersona FolksPersona;
typedef struct _FolksPersonaClass FolksPersonaClass;
typedef struct _FolksBackendStorePrepareData FolksBackendStorePrepareData;
typedef struct _Block1Data Block1Data;
typedef struct _FolksBackendStoreLoadBackendsData FolksBackendStoreLoadBackendsData;
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
typedef struct _FolksBackendStoreBackendLoadIfNeededData FolksBackendStoreBackendLoadIfNeededData;
typedef struct _FolksBackendStoreBackendUnloadIfNeededData FolksBackendStoreBackendUnloadIfNeededData;
typedef struct _FolksBackendStoreEnableBackendData FolksBackendStoreEnableBackendData;
typedef struct _FolksBackendStoreDisableBackendData FolksBackendStoreDisableBackendData;
typedef struct _FolksBackendStoreGetModulesFromDirData FolksBackendStoreGetModulesFromDirData;
#define _g_module_close0(var) ((var == NULL) ? NULL : (var = (g_module_close (var), NULL)))
typedef struct _FolksBackendStoreGetFileInfoData FolksBackendStoreGetFileInfoData;
typedef struct _FolksBackendStoreLoadDisabledBackendNamesData FolksBackendStoreLoadDisabledBackendNamesData;
typedef struct _FolksBackendStoreSaveKeyFileData FolksBackendStoreSaveKeyFileData;
enum  {
	FOLKS_BACKEND_STORE_BACKEND_AVAILABLE_SIGNAL,
	FOLKS_BACKEND_STORE_NUM_SIGNALS
};
static guint folks_backend_store_signals[FOLKS_BACKEND_STORE_NUM_SIGNALS] = {0};
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

struct _FolksBackendStore {
	GObject parent_instance;
	FolksBackendStorePrivate * priv;
};

struct _FolksBackendStoreClass {
	GObjectClass parent_class;
};

struct _FolksBackendStorePrivate {
	GeeHashMap* _backend_hash;
	FolksSmallSet* _backends_allowed;
	FolksSmallSet* _backends_disabled;
	GeeHashMap* _prepared_backends;
	GeeMap* _prepared_backends_ro;
	GFile* _config_file;
	GKeyFile* _backends_key_file;
	GeeHashMap* _modules;
	gboolean _is_prepared;
	FolksDebug* _debug;
};

typedef void (*FolksBackendStoreModuleFinalizeFunc) (FolksBackendStore* store);
typedef enum  {
	FOLKS_PERSONA_STORE_TRUST_NONE,
	FOLKS_PERSONA_STORE_TRUST_PARTIAL,
	FOLKS_PERSONA_STORE_TRUST_FULL
} FolksPersonaStoreTrust;

struct _FolksBackendStorePrepareData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	gboolean _tmp0_;
};

struct _Block1Data {
	int _ref_count_;
	FolksBackendStore* self;
	gint backends_remaining;
	gpointer _async_data_;
};

struct _FolksBackendStoreLoadBackendsData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	Block1Data* _data1_;
	GeeIterator* _backend_existing_it;
	GeeHashMap* _tmp0_;
	GeeCollection* _tmp1_;
	GeeCollection* _tmp2_;
	GeeCollection* _tmp3_;
	GeeIterator* _tmp4_;
	GeeIterator* _tmp5_;
	GeeIterator* _tmp6_;
	FolksBackend* backend_existing;
	GeeIterator* _tmp7_;
	gpointer _tmp8_;
	FolksBackend* _tmp9_;
	gchar* _path;
	const gchar* _tmp10_;
	gchar* _tmp11_;
	gchar* path;
	const gchar* _tmp12_;
	gchar* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	gchar* _tmp16_;
	const gchar* _tmp17_;
	GeeHashMap* modules;
	GeeHashMap* _tmp18_;
	gchar** path_split;
	const gchar* _tmp19_;
	gchar** _tmp20_;
	gchar** _tmp21_;
	gint path_split_length1;
	gint _path_split_size_;
	gchar** _tmp22_;
	gint _tmp22__length1;
	gchar** subpath_collection;
	gint subpath_collection_length1;
	gint _subpath_collection_size_;
	gint subpath_it;
	const gchar* subpath;
	GFile* file;
	const gchar* _tmp23_;
	GFile* _tmp24_;
	gboolean is_file;
	gboolean is_dir;
	GFile* _tmp25_;
	gboolean _tmp26_;
	gboolean _tmp27_;
	gboolean _tmp28_;
	GeeHashMap* _tmp29_;
	const gchar* _tmp30_;
	GFile* _tmp31_;
	gboolean _tmp32_;
	GeeHashMap* cur_modules;
	GFile* _tmp33_;
	GeeHashMap* _tmp34_;
	GeeHashMap* _tmp35_;
	GeeIterator* _entry_it;
	GeeHashMap* _tmp36_;
	GeeSet* _tmp37_;
	GeeSet* _tmp38_;
	GeeSet* _tmp39_;
	GeeIterator* _tmp40_;
	GeeIterator* _tmp41_;
	GeeIterator* _tmp42_;
	GeeMapEntry* entry;
	GeeIterator* _tmp43_;
	gpointer _tmp44_;
	GeeHashMap* _tmp45_;
	GeeMapEntry* _tmp46_;
	gconstpointer _tmp47_;
	const gchar* _tmp48_;
	GeeMapEntry* _tmp49_;
	gconstpointer _tmp50_;
	GFile* _tmp51_;
	const gchar* _tmp52_;
	GeeIterator* _module_it;
	GeeHashMap* _tmp53_;
	GeeCollection* _tmp54_;
	GeeCollection* _tmp55_;
	GeeCollection* _tmp56_;
	GeeIterator* _tmp57_;
	GeeIterator* _tmp58_;
	GeeIterator* _tmp59_;
	GFile* module;
	GeeIterator* _tmp60_;
	gpointer _tmp61_;
	GFile* _tmp62_;
	GeeIterator* _backend_it;
	GeeHashMap* _tmp63_;
	GeeCollection* _tmp64_;
	GeeCollection* _tmp65_;
	GeeCollection* _tmp66_;
	GeeIterator* _tmp67_;
	GeeIterator* _tmp68_;
	GeeIterator* _tmp69_;
	FolksBackend* backend;
	GeeIterator* _tmp70_;
	gpointer _tmp71_;
	gint _tmp72_;
	FolksBackend* _tmp73_;
	gint _tmp74_;
	gint _tmp75_;
};

struct _FolksBackendStoreBackendLoadIfNeededData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	FolksBackend* backend;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	GeeHashMap* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
	GeeHashMap* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	GError* e;
	GError* _tmp10_;
	const gchar* _tmp11_;
	const gchar* _tmp12_;
	GError* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	const gchar* _tmp16_;
	GError* _tmp17_;
	const gchar* _tmp18_;
	GError * _inner_error_;
};

struct _FolksBackendStoreBackendUnloadIfNeededData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	FolksBackend* backend;
	gboolean result;
	gboolean unloaded;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	FolksBackend* backend_existing;
	GeeHashMap* _tmp2_;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gpointer _tmp5_;
	FolksBackend* _tmp6_;
	FolksBackend* _tmp7_;
	GError* e;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	GError* _tmp10_;
	const gchar* _tmp11_;
	GeeHashMap* _tmp12_;
	FolksBackend* _tmp13_;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	GError * _inner_error_;
};

struct _FolksBackendStoreEnableBackendData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	gchar* name;
	GKeyFile* _tmp0_;
};

struct _FolksBackendStoreDisableBackendData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	gchar* name;
	GKeyFile* _tmp0_;
};

struct _FolksBackendStoreGetModulesFromDirData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	GFile* dir;
	GeeHashMap* result;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* attributes;
	gchar* _tmp2_;
	GList* infos;
	GFileEnumerator* enumerator;
	const gchar* _tmp3_;
	GFileEnumerator* _tmp4_;
	GList* _tmp5_;
	GFileEnumerator* _tmp6_;
	GList* _tmp7_;
	GList* _tmp8_;
	GError* _error_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	GError* _tmp11_;
	const gchar* _tmp12_;
	GeeHashMap* modules_final;
	GeeHashMap* _tmp13_;
	gchar* _path;
	const gchar* _tmp14_;
	gchar* _tmp15_;
	GList* _tmp16_;
	GList* info_collection;
	GList* info_it;
	GFileInfo* _tmp17_;
	GFileInfo* info;
	GFile* file;
	GFileInfo* _tmp18_;
	const gchar* _tmp19_;
	GFile* _tmp20_;
	GFileInfo* _tmp21_;
	GFile* _tmp22_;
	gchar* _tmp23_;
	gchar* _tmp24_;
	GFileInfo* _tmp25_;
	const gchar* _tmp26_;
	GFile* old_file;
	GFile* _tmp27_;
	GFile* _tmp28_;
	GFileInfo* _tmp29_;
	const gchar* _tmp30_;
	GFile* _tmp31_;
	GFileInfo* _tmp32_;
	GFile* _tmp33_;
	const gchar* _tmp34_;
	GFileInfo* _tmp35_;
	GFileInfo* _tmp36_;
	GError* _vala1__error_;
	GFile* _tmp37_;
	gchar* _tmp38_;
	gchar* _tmp39_;
	GFile* _tmp40_;
	gchar* _tmp41_;
	gchar* _tmp42_;
	GError* _tmp43_;
	const gchar* _tmp44_;
	GFileType file_type;
	GFileInfo* _tmp45_;
	const gchar* content_type;
	GFileInfo* _tmp46_;
	const gchar* _tmp47_;
	gchar* mime;
	const gchar* _tmp48_;
	gchar* _tmp49_;
	GFileType _tmp50_;
	GeeHashMap* modules;
	GFile* _tmp51_;
	GeeHashMap* _tmp52_;
	GeeHashMap* _tmp53_;
	GeeIterator* _entry_it;
	GeeHashMap* _tmp54_;
	GeeSet* _tmp55_;
	GeeSet* _tmp56_;
	GeeSet* _tmp57_;
	GeeIterator* _tmp58_;
	GeeIterator* _tmp59_;
	GeeIterator* _tmp60_;
	GeeMapEntry* entry;
	GeeIterator* _tmp61_;
	gpointer _tmp62_;
	GeeHashMap* _tmp63_;
	GeeMapEntry* _tmp64_;
	gconstpointer _tmp65_;
	const gchar* _tmp66_;
	GeeMapEntry* _tmp67_;
	gconstpointer _tmp68_;
	GFile* _tmp69_;
	const gchar* _tmp70_;
	gchar* path;
	GFile* _tmp71_;
	gchar* _tmp72_;
	const gchar* _tmp73_;
	GeeHashMap* _tmp74_;
	const gchar* _tmp75_;
	GFile* _tmp76_;
	const gchar* _tmp77_;
	GFile* _tmp78_;
	gchar* _tmp79_;
	gchar* _tmp80_;
	gboolean _tmp81_;
	gboolean _tmp82_;
	gboolean _tmp83_;
	const gchar* _tmp84_;
	const gchar* _tmp85_;
	const gchar* _tmp86_;
	const gchar* _tmp87_;
	GFile* _tmp88_;
	gchar* _tmp89_;
	gchar* _tmp90_;
	const gchar* _tmp91_;
	gchar* _tmp92_;
	gchar* _tmp93_;
	GError * _inner_error_;
};

typedef void (*FolksBackendStoreModuleInitFunc) (FolksBackendStore* store);
struct _FolksBackendStoreGetFileInfoData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	GFile* file;
	gboolean is_file;
	gboolean is_dir;
	GFileInfo* file_info;
	GFileInfo* _tmp0_;
	GFileInfo* _tmp1_;
	GFileInfo* _tmp2_;
	GError* _error_;
	GError* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	GFileInfo* _tmp8_;
	GFileInfo* _tmp9_;
	GError * _inner_error_;
};

struct _FolksBackendStoreLoadDisabledBackendNamesData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	gchar* envvar;
	const gchar* _tmp0_;
	gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar** tokens;
	const gchar* _tmp3_;
	gchar** _tmp4_;
	gchar** _tmp5_;
	gint tokens_length1;
	gint _tokens_size_;
	FolksSmallSet* _tmp6_;
	gchar** _tmp7_;
	gint _tmp7__length1;
	gchar** s_collection;
	gint s_collection_length1;
	gint _s_collection_size_;
	gint s_it;
	const gchar* s;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	FolksSmallSet* _tmp10_;
	const gchar* _tmp11_;
	FolksSmallSet* _tmp12_;
	gchar** _tmp13_;
	gint _tmp13__length1;
	gchar** _vala1_s_collection;
	gint _vala1_s_collection_length1;
	gint __vala1_s_collection_size_;
	gint _vala1_s_it;
	const gchar* _vala1_s;
	const gchar* _tmp14_;
	const gchar* _tmp15_;
	gchar* _tmp16_;
	const gchar* _tmp17_;
	gchar** _vala1_tokens;
	const gchar* _tmp18_;
	gchar** _tmp19_;
	gchar** _tmp20_;
	gint _vala1_tokens_length1;
	gint __vala1_tokens_size_;
	FolksSmallSet* _tmp21_;
	gchar** _tmp22_;
	gint _tmp22__length1;
	gchar** _vala2_s_collection;
	gint _vala2_s_collection_length1;
	gint __vala2_s_collection_size_;
	gint _vala2_s_it;
	const gchar* _vala2_s;
	const gchar* _tmp23_;
	const gchar* _tmp24_;
	FolksSmallSet* _tmp25_;
	const gchar* _tmp26_;
	GFile* file;
	const gchar* path;
	const gchar* _tmp27_;
	const gchar* _tmp28_;
	const gchar* _tmp29_;
	GFile* _tmp30_;
	GFile* _tmp31_;
	GFile* _tmp32_;
	GFile* _tmp33_;
	GFile* _tmp34_;
	GFile* _tmp35_;
	gchar* _tmp36_;
	gchar* _tmp37_;
	const gchar* _tmp38_;
	GFile* _tmp39_;
	const gchar* _tmp40_;
	GFile* _tmp41_;
	GFile* _tmp42_;
	GKeyFile* key_file;
	GKeyFile* _tmp43_;
	guint8* contents;
	gint contents_length1;
	gint _contents_size_;
	GFile* _tmp44_;
	guint8* _tmp45_;
	gsize _tmp46_;
	const gchar* contents_s;
	guint8* _tmp47_;
	gint _tmp47__length1;
	const gchar* _tmp48_;
	gint _tmp49_;
	gint _tmp50_;
	GKeyFile* _tmp51_;
	const gchar* _tmp52_;
	const gchar* _tmp53_;
	gint _tmp54_;
	gint _tmp55_;
	GError* e1;
	GError* _tmp56_;
	GFile* _tmp57_;
	gchar* _tmp58_;
	gchar* _tmp59_;
	GError* _tmp60_;
	const gchar* _tmp61_;
	GKeyFile* _tmp62_;
	GKeyFile* _tmp63_;
	GError * _inner_error_;
};

struct _FolksBackendStoreSaveKeyFileData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksBackendStore* self;
	gchar* key_file_data;
	GKeyFile* _tmp0_;
	gchar* _tmp1_;
	GFile* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	GFile* _tmp5_;
	guint8* _tmp6_;
	gint _tmp6__length1;
	guint8* _tmp7_;
	gint _tmp7__length1;
	GError* e;
	GFile* _tmp8_;
	gchar* _tmp9_;
	gchar* _tmp10_;
	GError* _tmp11_;
	const gchar* _tmp12_;
	GError * _inner_error_;
};


static gpointer folks_backend_store_parent_class = NULL;
static FolksBackendStore* folks_backend_store__instance;
static FolksBackendStore* folks_backend_store__instance = NULL;
extern gchar* folks_backend_store_KEY_FILE_GROUP_ALL_OTHERS;
gchar* folks_backend_store_KEY_FILE_GROUP_ALL_OTHERS = NULL;

GType folks_backend_store_get_type (void) G_GNUC_CONST;
GType folks_backend_get_type (void) G_GNUC_CONST;
GType folks_debug_get_type (void) G_GNUC_CONST;
#define FOLKS_BACKEND_STORE_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), FOLKS_TYPE_BACKEND_STORE, FolksBackendStorePrivate))
void folks_backend_unprepare (FolksBackend* self,
                              GAsyncReadyCallback _callback_,
                              gpointer _user_data_);
void folks_backend_unprepare_finish (FolksBackend* self,
                                     GAsyncResult* _res_,
                                     GError** error);
static void _folks_backend_store_debug_print_status (FolksBackendStore* self,
                                              FolksDebug* debug);
static void __folks_backend_store_debug_print_status_folks_debug_print_status (FolksDebug* _sender,
                                                                        gpointer self);
FolksBackendStore* folks_backend_store_dup (void);
static FolksBackendStore* folks_backend_store_new (void);
static FolksBackendStore* folks_backend_store_construct (GType object_type);
#define FOLKS_DEBUG_STATUS_LOG_DOMAIN "folks-status"
void folks_debug_print_heading (FolksDebug* self,
                                const gchar* domain,
                                GLogLevelFlags level,
                                const gchar* format,
                                ...) G_GNUC_PRINTF(4,5);
void folks_debug_print_line (FolksDebug* self,
                             const gchar* domain,
                             GLogLevelFlags level,
                             const gchar* format,
                             ...) G_GNUC_PRINTF(4,5);
void folks_debug_indent (FolksDebug* self);
gboolean folks_backend_get_is_prepared (FolksBackend* self);
gboolean folks_backend_get_is_quiescent (FolksBackend* self);
void folks_debug_print_key_value_pairs (FolksDebug* self,
                                        const gchar* domain,
                                        GLogLevelFlags level,
                                        ...);
const gchar* folks_backend_get_name (FolksBackend* self);
GType folks_persona_store_get_type (void) G_GNUC_CONST;
GeeMap* folks_backend_get_persona_stores (FolksBackend* self);
GType folks_persona_store_trust_get_type (void) G_GNUC_CONST;
FolksPersonaStoreTrust folks_persona_store_get_trust_level (FolksPersonaStore* self);
gchar** folks_persona_store_get_always_writeable_properties (FolksPersonaStore* self,
                                                             int* result_length1);
gboolean folks_persona_store_get_is_prepared (FolksPersonaStore* self);
gboolean folks_persona_store_get_is_primary_store (FolksPersonaStore* self);
gboolean folks_persona_store_get_is_quiescent (FolksPersonaStore* self);
const gchar* folks_persona_store_get_id (FolksPersonaStore* self);
GType folks_persona_get_type (void) G_GNUC_CONST;
GeeMap* folks_persona_store_get_personas (FolksPersonaStore* self);
void folks_debug_unindent (FolksDebug* self);
static void folks_backend_store_prepare_data_free (gpointer _data);
static void folks_backend_store_prepare_async_ready_wrapper (GObject *source_object,
                                                      GAsyncResult *res,
                                                      void *user_data);
void folks_backend_store_prepare (FolksBackendStore* self,
                                  GAsyncReadyCallback _callback_,
                                  gpointer _user_data_);
void folks_backend_store_prepare_finish (FolksBackendStore* self,
                                         GAsyncResult* _res_);
static gboolean folks_backend_store_prepare_co (FolksBackendStorePrepareData* _data_);
static void _folks_backend_store_load_disabled_backend_names (FolksBackendStore* self,
                                                       GAsyncReadyCallback _callback_,
                                                       gpointer _user_data_);
static void _folks_backend_store_load_disabled_backend_names_finish (FolksBackendStore* self,
                                                              GAsyncResult* _res_);
static void folks_backend_store_prepare_ready (GObject* source_object,
                                        GAsyncResult* _res_,
                                        gpointer _user_data_);
static void folks_backend_store_load_backends_data_free (gpointer _data);
static void folks_backend_store_load_backends_async_ready_wrapper (GObject *source_object,
                                                            GAsyncResult *res,
                                                            void *user_data);
void folks_backend_store_load_backends (FolksBackendStore* self,
                                        GAsyncReadyCallback _callback_,
                                        gpointer _user_data_);
void folks_backend_store_load_backends_finish (FolksBackendStore* self,
                                               GAsyncResult* _res_,
                                               GError** error);
static gboolean folks_backend_store_load_backends_co (FolksBackendStoreLoadBackendsData* _data_);
static Block1Data* block1_data_ref (Block1Data* _data1_);
static void block1_data_unref (void * _userdata_);
static void folks_backend_store_load_backends_ready (GObject* source_object,
                                              GAsyncResult* _res_,
                                              gpointer _user_data_);
static void _folks_backend_store_backend_unload_if_needed (FolksBackendStore* self,
                                                    FolksBackend* backend,
                                                    GAsyncReadyCallback _callback_,
                                                    gpointer _user_data_);
static gboolean _folks_backend_store_backend_unload_if_needed_finish (FolksBackendStore* self,
                                                               GAsyncResult* _res_);
static void _folks_backend_store_get_file_info (GFile* file,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
static void _folks_backend_store_get_file_info_finish (GAsyncResult* _res_,
                                                gboolean* is_file,
                                                gboolean* is_dir);
static void _folks_backend_store_get_modules_from_dir (FolksBackendStore* self,
                                                GFile* dir,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
static GeeHashMap* _folks_backend_store_get_modules_from_dir_finish (FolksBackendStore* self,
                                                              GAsyncResult* _res_);
static void _folks_backend_store_load_module_from_file (FolksBackendStore* self,
                                                 GFile* file);
static void _folks_backend_store_backend_load_if_needed (FolksBackendStore* self,
                                                  FolksBackend* backend,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_);
static void _folks_backend_store_backend_load_if_needed_finish (FolksBackendStore* self,
                                                         GAsyncResult* _res_);
static void ____lambda66_ (Block1Data* _data1_,
                    GObject* o,
                    GAsyncResult* r);
static void _____lambda66__gasync_ready_callback (GObject* source_object,
                                           GAsyncResult* res,
                                           gpointer self);
static void _folks_backend_store_backend_load_if_needed_data_free (gpointer _data);
static void _folks_backend_store_backend_load_if_needed_async_ready_wrapper (GObject *source_object,
                                                                      GAsyncResult *res,
                                                                      void *user_data);
static gboolean _folks_backend_store_backend_load_if_needed_co (FolksBackendStoreBackendLoadIfNeededData* _data_);
static gboolean _folks_backend_store_backend_is_enabled (FolksBackendStore* self,
                                                  const gchar* name);
void folks_backend_prepare (FolksBackend* self,
                            GAsyncReadyCallback _callback_,
                            gpointer _user_data_);
void folks_backend_prepare_finish (FolksBackend* self,
                                   GAsyncResult* _res_,
                                   GError** error);
static void _folks_backend_store_backend_load_if_needed_ready (GObject* source_object,
                                                        GAsyncResult* _res_,
                                                        gpointer _user_data_);
static void _folks_backend_store_backend_unload_if_needed_data_free (gpointer _data);
static void _folks_backend_store_backend_unload_if_needed_async_ready_wrapper (GObject *source_object,
                                                                        GAsyncResult *res,
                                                                        void *user_data);
static gboolean _folks_backend_store_backend_unload_if_needed_co (FolksBackendStoreBackendUnloadIfNeededData* _data_);
static void _folks_backend_store_backend_unload_if_needed_ready (GObject* source_object,
                                                          GAsyncResult* _res_,
                                                          gpointer _user_data_);
void folks_backend_store_add_backend (FolksBackendStore* self,
                                      FolksBackend* backend);
void _folks_debug_register_domain (FolksDebug* self,
                                   const gchar* domain);
FolksBackend* folks_backend_store_dup_backend_by_name (FolksBackendStore* self,
                                                       const gchar* name);
GeeCollection* folks_backend_store_list_backends (FolksBackendStore* self);
static void folks_backend_store_enable_backend_data_free (gpointer _data);
static void folks_backend_store_enable_backend_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
void folks_backend_store_enable_backend (FolksBackendStore* self,
                                         const gchar* name,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
void folks_backend_store_enable_backend_finish (FolksBackendStore* self,
                                                GAsyncResult* _res_);
static gboolean folks_backend_store_enable_backend_co (FolksBackendStoreEnableBackendData* _data_);
static void _folks_backend_store_save_key_file (FolksBackendStore* self,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
static void _folks_backend_store_save_key_file_finish (FolksBackendStore* self,
                                                GAsyncResult* _res_);
static void folks_backend_store_enable_backend_ready (GObject* source_object,
                                               GAsyncResult* _res_,
                                               gpointer _user_data_);
static void folks_backend_store_disable_backend_data_free (gpointer _data);
static void folks_backend_store_disable_backend_async_ready_wrapper (GObject *source_object,
                                                              GAsyncResult *res,
                                                              void *user_data);
void folks_backend_store_disable_backend (FolksBackendStore* self,
                                          const gchar* name,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
void folks_backend_store_disable_backend_finish (FolksBackendStore* self,
                                                 GAsyncResult* _res_);
static gboolean folks_backend_store_disable_backend_co (FolksBackendStoreDisableBackendData* _data_);
static void folks_backend_store_disable_backend_ready (GObject* source_object,
                                                GAsyncResult* _res_,
                                                gpointer _user_data_);
static void _folks_backend_store_get_modules_from_dir_data_free (gpointer _data);
static void _folks_backend_store_get_modules_from_dir_async_ready_wrapper (GObject *source_object,
                                                                    GAsyncResult *res,
                                                                    void *user_data);
static gboolean _folks_backend_store_get_modules_from_dir_co (FolksBackendStoreGetModulesFromDirData* _data_);
static void _folks_backend_store_get_modules_from_dir_ready (GObject* source_object,
                                                      GAsyncResult* _res_,
                                                      gpointer _user_data_);
static void _g_object_unref0_ (gpointer var);
static inline void _g_list_free__g_object_unref0_ (GList* self);
static void _folks_backend_store_get_file_info_data_free (gpointer _data);
static void _folks_backend_store_get_file_info_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
static gboolean _folks_backend_store_get_file_info_co (FolksBackendStoreGetFileInfoData* _data_);
static void _folks_backend_store_get_file_info_ready (GObject* source_object,
                                               GAsyncResult* _res_,
                                               gpointer _user_data_);
static void _folks_backend_store_load_disabled_backend_names_data_free (gpointer _data);
static void _folks_backend_store_load_disabled_backend_names_async_ready_wrapper (GObject *source_object,
                                                                           GAsyncResult *res,
                                                                           void *user_data);
static gboolean _folks_backend_store_load_disabled_backend_names_co (FolksBackendStoreLoadDisabledBackendNamesData* _data_);
static void _folks_backend_store_load_disabled_backend_names_ready (GObject* source_object,
                                                             GAsyncResult* _res_,
                                                             gpointer _user_data_);
static void _folks_backend_store_save_key_file_data_free (gpointer _data);
static void _folks_backend_store_save_key_file_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
static gboolean _folks_backend_store_save_key_file_co (FolksBackendStoreSaveKeyFileData* _data_);
static void _folks_backend_store_save_key_file_ready (GObject* source_object,
                                               GAsyncResult* _res_,
                                               gpointer _user_data_);
GeeMap* folks_backend_store_get_enabled_backends (FolksBackendStore* self);
static void folks_backend_store_set_enabled_backends (FolksBackendStore* self,
                                               GeeMap* value);
gboolean folks_backend_store_get_is_prepared (FolksBackendStore* self);
static void folks_backend_store_set_is_prepared (FolksBackendStore* self,
                                          gboolean value);
static GObject * folks_backend_store_constructor (GType type,
                                           guint n_construct_properties,
                                           GObjectConstructParam * construct_properties);
FolksDebug* folks_debug_dup_with_flags (const gchar* debug_flags,
                                        gboolean colour_enabled);
static void folks_backend_store_finalize (GObject * obj);
static void _vala_folks_backend_store_get_property (GObject * object,
                                             guint property_id,
                                             GValue * value,
                                             GParamSpec * pspec);
static void _vala_folks_backend_store_set_property (GObject * object,
                                             guint property_id,
                                             const GValue * value,
                                             GParamSpec * pspec);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);
static gint _vala_array_length (gpointer array);


static void
__folks_backend_store_debug_print_status_folks_debug_print_status (FolksDebug* _sender,
                                                                   gpointer self)
{
#line 187 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_debug_print_status ((FolksBackendStore*) self, _sender);
#line 918 "backend-store.c"
}


/**
   * Create a new BackendStore.
   */
static gpointer
_g_object_ref0 (gpointer self)
{
#line 132 "/run/build/folks/folks/backend-store.vala"
	return self ? g_object_ref (self) : NULL;
#line 930 "backend-store.c"
}


FolksBackendStore*
folks_backend_store_dup (void)
{
	FolksBackendStore* result = NULL;
	FolksBackendStore* _tmp0_;
	FolksBackendStore* _tmp3_;
	FolksBackendStore* _tmp4_;
#line 123 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = folks_backend_store__instance;
#line 123 "/run/build/folks/folks/backend-store.vala"
	if (_tmp0_ == NULL) {
#line 945 "backend-store.c"
		FolksBackendStore* new_instance = NULL;
		FolksBackendStore* _tmp1_;
		FolksBackendStore* _tmp2_;
#line 126 "/run/build/folks/folks/backend-store.vala"
		_tmp1_ = folks_backend_store_new ();
#line 126 "/run/build/folks/folks/backend-store.vala"
		new_instance = _tmp1_;
#line 127 "/run/build/folks/folks/backend-store.vala"
		_tmp2_ = new_instance;
#line 127 "/run/build/folks/folks/backend-store.vala"
		folks_backend_store__instance = _tmp2_;
#line 129 "/run/build/folks/folks/backend-store.vala"
		result = new_instance;
#line 129 "/run/build/folks/folks/backend-store.vala"
		return result;
#line 961 "backend-store.c"
	}
#line 132 "/run/build/folks/folks/backend-store.vala"
	_tmp3_ = folks_backend_store__instance;
#line 132 "/run/build/folks/folks/backend-store.vala"
	_tmp4_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp3_, FOLKS_TYPE_BACKEND_STORE, FolksBackendStore));
#line 132 "/run/build/folks/folks/backend-store.vala"
	result = _tmp4_;
#line 132 "/run/build/folks/folks/backend-store.vala"
	return result;
#line 971 "backend-store.c"
}


static FolksBackendStore*
folks_backend_store_construct (GType object_type)
{
	FolksBackendStore * self = NULL;
#line 137 "/run/build/folks/folks/backend-store.vala"
	self = (FolksBackendStore*) g_object_new (object_type, NULL);
#line 135 "/run/build/folks/folks/backend-store.vala"
	return self;
#line 983 "backend-store.c"
}


static FolksBackendStore*
folks_backend_store_new (void)
{
#line 135 "/run/build/folks/folks/backend-store.vala"
	return folks_backend_store_construct (FOLKS_TYPE_BACKEND_STORE);
#line 992 "backend-store.c"
}


static gchar*
_vala_g_strjoinv (const gchar* separator,
                  gchar** str_array,
                  int str_array_length1)
{
	gchar* result = NULL;
	gboolean _tmp0_ = FALSE;
#line 1148 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (separator == NULL) {
#line 1149 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		separator = "";
#line 1007 "backend-store.c"
	}
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (str_array != NULL) {
#line 1011 "backend-store.c"
		gboolean _tmp1_ = FALSE;
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		if (str_array_length1 > 0) {
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp1_ = TRUE;
#line 1017 "backend-store.c"
		} else {
			gboolean _tmp2_ = FALSE;
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			if (str_array_length1 == -1) {
#line 1022 "backend-store.c"
				const gchar* _tmp3_;
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp3_ = str_array[0];
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp2_ = _tmp3_ != NULL;
#line 1028 "backend-store.c"
			} else {
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp2_ = FALSE;
#line 1032 "backend-store.c"
			}
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp1_ = _tmp2_;
#line 1036 "backend-store.c"
		}
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = _tmp1_;
#line 1040 "backend-store.c"
	} else {
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp0_ = FALSE;
#line 1044 "backend-store.c"
	}
#line 1151 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (_tmp0_) {
#line 1048 "backend-store.c"
		gint i = 0;
		gsize len = 0UL;
		gint _tmp20_;
		gint _tmp22_;
		gint _tmp23_;
		gsize _tmp24_;
		gint _tmp25_;
		gint _tmp26_;
		gint _tmp27_;
		const gchar* res = NULL;
		gsize _tmp28_;
		void* _tmp29_;
		void* ptr = NULL;
		const gchar* _tmp30_;
		const gchar* _tmp31_;
		void* _tmp32_;
		const gchar* _tmp45_;
#line 1153 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		len = (gsize) 1;
#line 1068 "backend-store.c"
		{
			gboolean _tmp4_ = FALSE;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			i = 0;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp4_ = TRUE;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			while (TRUE) {
#line 1077 "backend-store.c"
				gboolean _tmp6_ = FALSE;
				gboolean _tmp7_ = FALSE;
				gint _tmp12_ = 0;
				gint _tmp13_;
				const gchar* _tmp14_;
				gsize _tmp19_;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (!_tmp4_) {
#line 1086 "backend-store.c"
					gint _tmp5_;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp5_ = i;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					i = _tmp5_ + 1;
#line 1092 "backend-store.c"
				}
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp4_ = FALSE;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (str_array_length1 != -1) {
#line 1098 "backend-store.c"
					gint _tmp8_;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp8_ = i;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp7_ = _tmp8_ < str_array_length1;
#line 1104 "backend-store.c"
				} else {
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp7_ = FALSE;
#line 1108 "backend-store.c"
				}
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (_tmp7_) {
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp6_ = TRUE;
#line 1114 "backend-store.c"
				} else {
					gboolean _tmp9_ = FALSE;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					if (str_array_length1 == -1) {
#line 1119 "backend-store.c"
						gint _tmp10_;
						const gchar* _tmp11_;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
						_tmp10_ = i;
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
						_tmp11_ = str_array[_tmp10_];
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
						_tmp9_ = _tmp11_ != NULL;
#line 1128 "backend-store.c"
					} else {
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
						_tmp9_ = FALSE;
#line 1132 "backend-store.c"
					}
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp6_ = _tmp9_;
#line 1136 "backend-store.c"
				}
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (!_tmp6_) {
#line 1154 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					break;
#line 1142 "backend-store.c"
				}
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp13_ = i;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp14_ = str_array[_tmp13_];
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (_tmp14_ != NULL) {
#line 1150 "backend-store.c"
					gint _tmp15_;
					const gchar* _tmp16_;
					gint _tmp17_;
					gint _tmp18_;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp15_ = i;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp16_ = str_array[_tmp15_];
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp17_ = strlen ((const gchar*) _tmp16_);
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp18_ = _tmp17_;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp12_ = _tmp18_;
#line 1165 "backend-store.c"
				} else {
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp12_ = 0;
#line 1169 "backend-store.c"
				}
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp19_ = len;
#line 1155 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				len = _tmp19_ + _tmp12_;
#line 1175 "backend-store.c"
			}
		}
#line 1157 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp20_ = i;
#line 1157 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		if (_tmp20_ == 0) {
#line 1182 "backend-store.c"
			gchar* _tmp21_;
#line 1158 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp21_ = g_strdup ("");
#line 1158 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			result = _tmp21_;
#line 1158 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			return result;
#line 1190 "backend-store.c"
		}
#line 1160 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp22_ = i;
#line 1160 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		str_array_length1 = _tmp22_;
#line 1160 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp23_ = str_array_length1;
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp24_ = len;
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp25_ = strlen ((const gchar*) separator);
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp26_ = _tmp25_;
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp27_ = i;
#line 1161 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		len = _tmp24_ + (_tmp26_ * (_tmp27_ - 1));
#line 1163 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp28_ = len;
#line 1163 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp29_ = g_malloc (_tmp28_);
#line 1163 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		res = _tmp29_;
#line 1164 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp30_ = res;
#line 1164 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp31_ = str_array[0];
#line 1164 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp32_ = g_stpcpy ((void*) _tmp30_, (const gchar*) _tmp31_);
#line 1164 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		ptr = _tmp32_;
#line 1222 "backend-store.c"
		{
			gboolean _tmp33_ = FALSE;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			i = 1;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			_tmp33_ = TRUE;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
			while (TRUE) {
#line 1231 "backend-store.c"
				gint _tmp35_;
				void* _tmp36_;
				void* _tmp37_;
				const gchar* _tmp38_ = NULL;
				gint _tmp39_;
				const gchar* _tmp40_;
				void* _tmp43_;
				void* _tmp44_;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (!_tmp33_) {
#line 1242 "backend-store.c"
					gint _tmp34_;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp34_ = i;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					i = _tmp34_ + 1;
#line 1248 "backend-store.c"
				}
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp33_ = FALSE;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp35_ = i;
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (!(_tmp35_ < str_array_length1)) {
#line 1165 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					break;
#line 1258 "backend-store.c"
				}
#line 1166 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp36_ = ptr;
#line 1166 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp37_ = g_stpcpy (_tmp36_, (const gchar*) separator);
#line 1166 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				ptr = _tmp37_;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp39_ = i;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp40_ = str_array[_tmp39_];
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				if (_tmp40_ != NULL) {
#line 1272 "backend-store.c"
					gint _tmp41_;
					const gchar* _tmp42_;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp41_ = i;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp42_ = str_array[_tmp41_];
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp38_ = (const gchar*) _tmp42_;
#line 1281 "backend-store.c"
				} else {
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
					_tmp38_ = "";
#line 1285 "backend-store.c"
				}
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp43_ = ptr;
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				_tmp44_ = g_stpcpy (_tmp43_, _tmp38_);
#line 1167 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
				ptr = _tmp44_;
#line 1293 "backend-store.c"
			}
		}
#line 1170 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp45_ = res;
#line 1170 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		res = NULL;
#line 1170 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = (gchar*) _tmp45_;
#line 1170 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 1304 "backend-store.c"
	} else {
		gchar* _tmp46_;
#line 1172 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp46_ = g_strdup ("");
#line 1172 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		result = _tmp46_;
#line 1172 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		return result;
#line 1313 "backend-store.c"
	}
}


static void
_folks_backend_store_debug_print_status (FolksBackendStore* self,
                                         FolksDebug* debug)
{
#line 195 "/run/build/folks/folks/backend-store.vala"
	static const char domain[] = FOLKS_DEBUG_STATUS_LOG_DOMAIN;
#line 196 "/run/build/folks/folks/backend-store.vala"
	static const GLogLevelFlags level = G_LOG_LEVEL_INFO;
#line 1326 "backend-store.c"
	GeeHashMap* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
#line 193 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (self != NULL);
#line 193 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (debug != NULL);
#line 198 "/run/build/folks/folks/backend-store.vala"
	folks_debug_print_heading (debug, domain, level, "BackendStore (%p)", self);
#line 199 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = self->priv->_backend_hash;
#line 199 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = gee_abstract_map_get_size ((GeeAbstractMap*) _tmp0_);
#line 199 "/run/build/folks/folks/backend-store.vala"
	_tmp2_ = _tmp1_;
#line 199 "/run/build/folks/folks/backend-store.vala"
	folks_debug_print_line (debug, domain, level, "%u Backends:", (guint) _tmp2_);
#line 202 "/run/build/folks/folks/backend-store.vala"
	folks_debug_indent (debug);
#line 1346 "backend-store.c"
	{
		GeeIterator* _backend_it = NULL;
		GeeHashMap* _tmp3_;
		GeeCollection* _tmp4_;
		GeeCollection* _tmp5_;
		GeeCollection* _tmp6_;
		GeeIterator* _tmp7_;
		GeeIterator* _tmp8_;
#line 204 "/run/build/folks/folks/backend-store.vala"
		_tmp3_ = self->priv->_backend_hash;
#line 204 "/run/build/folks/folks/backend-store.vala"
		_tmp4_ = gee_abstract_map_get_values ((GeeAbstractMap*) _tmp3_);
#line 204 "/run/build/folks/folks/backend-store.vala"
		_tmp5_ = _tmp4_;
#line 204 "/run/build/folks/folks/backend-store.vala"
		_tmp6_ = _tmp5_;
#line 204 "/run/build/folks/folks/backend-store.vala"
		_tmp7_ = gee_iterable_iterator ((GeeIterable*) _tmp6_);
#line 204 "/run/build/folks/folks/backend-store.vala"
		_tmp8_ = _tmp7_;
#line 204 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_tmp6_);
#line 204 "/run/build/folks/folks/backend-store.vala"
		_backend_it = _tmp8_;
#line 204 "/run/build/folks/folks/backend-store.vala"
		while (TRUE) {
#line 1373 "backend-store.c"
			GeeIterator* _tmp9_;
			FolksBackend* backend = NULL;
			GeeIterator* _tmp10_;
			gpointer _tmp11_;
			FolksBackend* _tmp12_;
			const gchar* _tmp13_ = NULL;
			FolksBackend* _tmp14_;
			gboolean _tmp15_;
			gboolean _tmp16_;
			const gchar* _tmp17_ = NULL;
			FolksBackend* _tmp18_;
			gboolean _tmp19_;
			gboolean _tmp20_;
			guint _tmp21_;
			gchar* _tmp22_;
			gchar* _tmp23_;
			FolksBackend* _tmp24_;
			const gchar* _tmp25_;
			const gchar* _tmp26_;
			FolksBackend* _tmp27_;
			GeeMap* _tmp28_;
			GeeMap* _tmp29_;
			gint _tmp30_;
			gint _tmp31_;
#line 204 "/run/build/folks/folks/backend-store.vala"
			_tmp9_ = _backend_it;
#line 204 "/run/build/folks/folks/backend-store.vala"
			if (!gee_iterator_next (_tmp9_)) {
#line 204 "/run/build/folks/folks/backend-store.vala"
				break;
#line 1404 "backend-store.c"
			}
#line 204 "/run/build/folks/folks/backend-store.vala"
			_tmp10_ = _backend_it;
#line 204 "/run/build/folks/folks/backend-store.vala"
			_tmp11_ = gee_iterator_get (_tmp10_);
#line 204 "/run/build/folks/folks/backend-store.vala"
			backend = (FolksBackend*) _tmp11_;
#line 206 "/run/build/folks/folks/backend-store.vala"
			_tmp12_ = backend;
#line 206 "/run/build/folks/folks/backend-store.vala"
			folks_debug_print_heading (debug, domain, level, "Backend (%p)", _tmp12_);
#line 210 "/run/build/folks/folks/backend-store.vala"
			_tmp14_ = backend;
#line 210 "/run/build/folks/folks/backend-store.vala"
			_tmp15_ = folks_backend_get_is_prepared (_tmp14_);
#line 210 "/run/build/folks/folks/backend-store.vala"
			_tmp16_ = _tmp15_;
#line 210 "/run/build/folks/folks/backend-store.vala"
			if (_tmp16_) {
#line 210 "/run/build/folks/folks/backend-store.vala"
				_tmp13_ = "yes";
#line 1426 "backend-store.c"
			} else {
#line 210 "/run/build/folks/folks/backend-store.vala"
				_tmp13_ = "no";
#line 1430 "backend-store.c"
			}
#line 211 "/run/build/folks/folks/backend-store.vala"
			_tmp18_ = backend;
#line 211 "/run/build/folks/folks/backend-store.vala"
			_tmp19_ = folks_backend_get_is_quiescent (_tmp18_);
#line 211 "/run/build/folks/folks/backend-store.vala"
			_tmp20_ = _tmp19_;
#line 211 "/run/build/folks/folks/backend-store.vala"
			if (_tmp20_) {
#line 211 "/run/build/folks/folks/backend-store.vala"
				_tmp17_ = "yes";
#line 1442 "backend-store.c"
			} else {
#line 211 "/run/build/folks/folks/backend-store.vala"
				_tmp17_ = "no";
#line 1446 "backend-store.c"
			}
#line 207 "/run/build/folks/folks/backend-store.vala"
			_tmp21_ = ((GObject*) self)->ref_count;
#line 207 "/run/build/folks/folks/backend-store.vala"
			_tmp22_ = g_strdup_printf ("%u", _tmp21_);
#line 207 "/run/build/folks/folks/backend-store.vala"
			_tmp23_ = _tmp22_;
#line 207 "/run/build/folks/folks/backend-store.vala"
			_tmp24_ = backend;
#line 207 "/run/build/folks/folks/backend-store.vala"
			_tmp25_ = folks_backend_get_name (_tmp24_);
#line 207 "/run/build/folks/folks/backend-store.vala"
			_tmp26_ = _tmp25_;
#line 207 "/run/build/folks/folks/backend-store.vala"
			folks_debug_print_key_value_pairs (debug, domain, level, "Ref. count", _tmp23_, "Name", _tmp26_, "Prepared?", _tmp13_, "Quiescent?", _tmp17_, NULL);
#line 207 "/run/build/folks/folks/backend-store.vala"
			_g_free0 (_tmp23_);
#line 213 "/run/build/folks/folks/backend-store.vala"
			_tmp27_ = backend;
#line 213 "/run/build/folks/folks/backend-store.vala"
			_tmp28_ = folks_backend_get_persona_stores (_tmp27_);
#line 213 "/run/build/folks/folks/backend-store.vala"
			_tmp29_ = _tmp28_;
#line 213 "/run/build/folks/folks/backend-store.vala"
			_tmp30_ = gee_map_get_size (_tmp29_);
#line 213 "/run/build/folks/folks/backend-store.vala"
			_tmp31_ = _tmp30_;
#line 213 "/run/build/folks/folks/backend-store.vala"
			folks_debug_print_line (debug, domain, level, "%u PersonaStores:", (guint) _tmp31_);
#line 216 "/run/build/folks/folks/backend-store.vala"
			folks_debug_indent (debug);
#line 1478 "backend-store.c"
			{
				GeeIterator* _persona_store_it = NULL;
				FolksBackend* _tmp32_;
				GeeMap* _tmp33_;
				GeeMap* _tmp34_;
				GeeCollection* _tmp35_;
				GeeCollection* _tmp36_;
				GeeCollection* _tmp37_;
				GeeIterator* _tmp38_;
				GeeIterator* _tmp39_;
#line 218 "/run/build/folks/folks/backend-store.vala"
				_tmp32_ = backend;
#line 218 "/run/build/folks/folks/backend-store.vala"
				_tmp33_ = folks_backend_get_persona_stores (_tmp32_);
#line 218 "/run/build/folks/folks/backend-store.vala"
				_tmp34_ = _tmp33_;
#line 218 "/run/build/folks/folks/backend-store.vala"
				_tmp35_ = gee_map_get_values (_tmp34_);
#line 218 "/run/build/folks/folks/backend-store.vala"
				_tmp36_ = _tmp35_;
#line 218 "/run/build/folks/folks/backend-store.vala"
				_tmp37_ = _tmp36_;
#line 218 "/run/build/folks/folks/backend-store.vala"
				_tmp38_ = gee_iterable_iterator ((GeeIterable*) _tmp37_);
#line 218 "/run/build/folks/folks/backend-store.vala"
				_tmp39_ = _tmp38_;
#line 218 "/run/build/folks/folks/backend-store.vala"
				_g_object_unref0 (_tmp37_);
#line 218 "/run/build/folks/folks/backend-store.vala"
				_persona_store_it = _tmp39_;
#line 218 "/run/build/folks/folks/backend-store.vala"
				while (TRUE) {
#line 1511 "backend-store.c"
					GeeIterator* _tmp40_;
					FolksPersonaStore* persona_store = NULL;
					GeeIterator* _tmp41_;
					gpointer _tmp42_;
					gchar* trust_level = NULL;
					FolksPersonaStore* _tmp43_;
					FolksPersonaStoreTrust _tmp44_;
					FolksPersonaStoreTrust _tmp45_;
					gchar* writeable_props = NULL;
					FolksPersonaStore* _tmp49_;
					gchar** _tmp50_;
					gint _tmp50__length1;
					gchar** _tmp51_;
					gint _tmp51__length1;
					gchar* _tmp52_;
					FolksPersonaStore* _tmp53_;
					const gchar* _tmp54_ = NULL;
					FolksPersonaStore* _tmp55_;
					gboolean _tmp56_;
					gboolean _tmp57_;
					const gchar* _tmp58_ = NULL;
					FolksPersonaStore* _tmp59_;
					gboolean _tmp60_;
					gboolean _tmp61_;
					const gchar* _tmp62_ = NULL;
					FolksPersonaStore* _tmp63_;
					gboolean _tmp64_;
					gboolean _tmp65_;
					guint _tmp66_;
					gchar* _tmp67_;
					gchar* _tmp68_;
					FolksPersonaStore* _tmp69_;
					const gchar* _tmp70_;
					const gchar* _tmp71_;
					const gchar* _tmp72_;
					const gchar* _tmp73_;
					FolksPersonaStore* _tmp74_;
					GeeMap* _tmp75_;
					GeeMap* _tmp76_;
					gint _tmp77_;
					gint _tmp78_;
					gchar* _tmp79_;
					gchar* _tmp80_;
#line 218 "/run/build/folks/folks/backend-store.vala"
					_tmp40_ = _persona_store_it;
#line 218 "/run/build/folks/folks/backend-store.vala"
					if (!gee_iterator_next (_tmp40_)) {
#line 218 "/run/build/folks/folks/backend-store.vala"
						break;
#line 1561 "backend-store.c"
					}
#line 218 "/run/build/folks/folks/backend-store.vala"
					_tmp41_ = _persona_store_it;
#line 218 "/run/build/folks/folks/backend-store.vala"
					_tmp42_ = gee_iterator_get (_tmp41_);
#line 218 "/run/build/folks/folks/backend-store.vala"
					persona_store = (FolksPersonaStore*) _tmp42_;
#line 220 "/run/build/folks/folks/backend-store.vala"
					trust_level = NULL;
#line 222 "/run/build/folks/folks/backend-store.vala"
					_tmp43_ = persona_store;
#line 222 "/run/build/folks/folks/backend-store.vala"
					_tmp44_ = folks_persona_store_get_trust_level (_tmp43_);
#line 222 "/run/build/folks/folks/backend-store.vala"
					_tmp45_ = _tmp44_;
#line 222 "/run/build/folks/folks/backend-store.vala"
					switch (_tmp45_) {
#line 222 "/run/build/folks/folks/backend-store.vala"
						case FOLKS_PERSONA_STORE_TRUST_NONE:
#line 1581 "backend-store.c"
						{
							gchar* _tmp46_;
#line 225 "/run/build/folks/folks/backend-store.vala"
							_tmp46_ = g_strdup ("none");
#line 225 "/run/build/folks/folks/backend-store.vala"
							_g_free0 (trust_level);
#line 225 "/run/build/folks/folks/backend-store.vala"
							trust_level = _tmp46_;
#line 226 "/run/build/folks/folks/backend-store.vala"
							break;
#line 1592 "backend-store.c"
						}
#line 222 "/run/build/folks/folks/backend-store.vala"
						case FOLKS_PERSONA_STORE_TRUST_PARTIAL:
#line 1596 "backend-store.c"
						{
							gchar* _tmp47_;
#line 228 "/run/build/folks/folks/backend-store.vala"
							_tmp47_ = g_strdup ("partial");
#line 228 "/run/build/folks/folks/backend-store.vala"
							_g_free0 (trust_level);
#line 228 "/run/build/folks/folks/backend-store.vala"
							trust_level = _tmp47_;
#line 229 "/run/build/folks/folks/backend-store.vala"
							break;
#line 1607 "backend-store.c"
						}
#line 222 "/run/build/folks/folks/backend-store.vala"
						case FOLKS_PERSONA_STORE_TRUST_FULL:
#line 1611 "backend-store.c"
						{
							gchar* _tmp48_;
#line 231 "/run/build/folks/folks/backend-store.vala"
							_tmp48_ = g_strdup ("full");
#line 231 "/run/build/folks/folks/backend-store.vala"
							_g_free0 (trust_level);
#line 231 "/run/build/folks/folks/backend-store.vala"
							trust_level = _tmp48_;
#line 232 "/run/build/folks/folks/backend-store.vala"
							break;
#line 1622 "backend-store.c"
						}
						default:
						{
#line 234 "/run/build/folks/folks/backend-store.vala"
							g_assert_not_reached ();
#line 1628 "backend-store.c"
						}
					}
#line 237 "/run/build/folks/folks/backend-store.vala"
					_tmp49_ = persona_store;
#line 237 "/run/build/folks/folks/backend-store.vala"
					_tmp50_ = folks_persona_store_get_always_writeable_properties (_tmp49_, &_tmp50__length1);
#line 237 "/run/build/folks/folks/backend-store.vala"
					_tmp51_ = _tmp50_;
#line 237 "/run/build/folks/folks/backend-store.vala"
					_tmp51__length1 = _tmp50__length1;
#line 237 "/run/build/folks/folks/backend-store.vala"
					_tmp52_ = _vala_g_strjoinv (",", _tmp51_, _tmp51__length1);
#line 237 "/run/build/folks/folks/backend-store.vala"
					writeable_props = _tmp52_;
#line 240 "/run/build/folks/folks/backend-store.vala"
					_tmp53_ = persona_store;
#line 240 "/run/build/folks/folks/backend-store.vala"
					folks_debug_print_heading (debug, domain, level, "PersonaStore (%p)", _tmp53_);
#line 245 "/run/build/folks/folks/backend-store.vala"
					_tmp55_ = persona_store;
#line 245 "/run/build/folks/folks/backend-store.vala"
					_tmp56_ = folks_persona_store_get_is_prepared (_tmp55_);
#line 245 "/run/build/folks/folks/backend-store.vala"
					_tmp57_ = _tmp56_;
#line 245 "/run/build/folks/folks/backend-store.vala"
					if (_tmp57_) {
#line 245 "/run/build/folks/folks/backend-store.vala"
						_tmp54_ = "yes";
#line 1657 "backend-store.c"
					} else {
#line 245 "/run/build/folks/folks/backend-store.vala"
						_tmp54_ = "no";
#line 1661 "backend-store.c"
					}
#line 247 "/run/build/folks/folks/backend-store.vala"
					_tmp59_ = persona_store;
#line 247 "/run/build/folks/folks/backend-store.vala"
					_tmp60_ = folks_persona_store_get_is_primary_store (_tmp59_);
#line 247 "/run/build/folks/folks/backend-store.vala"
					_tmp61_ = _tmp60_;
#line 247 "/run/build/folks/folks/backend-store.vala"
					if (_tmp61_) {
#line 247 "/run/build/folks/folks/backend-store.vala"
						_tmp58_ = "yes";
#line 1673 "backend-store.c"
					} else {
#line 247 "/run/build/folks/folks/backend-store.vala"
						_tmp58_ = "no";
#line 1677 "backend-store.c"
					}
#line 249 "/run/build/folks/folks/backend-store.vala"
					_tmp63_ = persona_store;
#line 249 "/run/build/folks/folks/backend-store.vala"
					_tmp64_ = folks_persona_store_get_is_quiescent (_tmp63_);
#line 249 "/run/build/folks/folks/backend-store.vala"
					_tmp65_ = _tmp64_;
#line 249 "/run/build/folks/folks/backend-store.vala"
					if (_tmp65_) {
#line 249 "/run/build/folks/folks/backend-store.vala"
						_tmp62_ = "yes";
#line 1689 "backend-store.c"
					} else {
#line 249 "/run/build/folks/folks/backend-store.vala"
						_tmp62_ = "no";
#line 1693 "backend-store.c"
					}
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp66_ = ((GObject*) self)->ref_count;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp67_ = g_strdup_printf ("%u", _tmp66_);
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp68_ = _tmp67_;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp69_ = persona_store;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp70_ = folks_persona_store_get_id (_tmp69_);
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp71_ = _tmp70_;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp72_ = writeable_props;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp73_ = trust_level;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp74_ = persona_store;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp75_ = folks_persona_store_get_personas (_tmp74_);
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp76_ = _tmp75_;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp77_ = gee_map_get_size (_tmp76_);
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp78_ = _tmp77_;
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp79_ = g_strdup_printf ("%i", _tmp78_);
#line 242 "/run/build/folks/folks/backend-store.vala"
					_tmp80_ = _tmp79_;
#line 242 "/run/build/folks/folks/backend-store.vala"
					folks_debug_print_key_value_pairs (debug, domain, level, "Ref. count", _tmp68_, "ID", _tmp71_, "Prepared?", _tmp54_, "Is primary store?", _tmp58_, "Always writeable properties", _tmp72_, "Quiescent?", _tmp62_, "Trust level", _tmp73_, "Persona count", _tmp80_, NULL);
#line 242 "/run/build/folks/folks/backend-store.vala"
					_g_free0 (_tmp80_);
#line 242 "/run/build/folks/folks/backend-store.vala"
					_g_free0 (_tmp68_);
#line 218 "/run/build/folks/folks/backend-store.vala"
					_g_free0 (writeable_props);
#line 218 "/run/build/folks/folks/backend-store.vala"
					_g_free0 (trust_level);
#line 218 "/run/build/folks/folks/backend-store.vala"
					_g_object_unref0 (persona_store);
#line 1737 "backend-store.c"
				}
#line 218 "/run/build/folks/folks/backend-store.vala"
				_g_object_unref0 (_persona_store_it);
#line 1741 "backend-store.c"
			}
#line 255 "/run/build/folks/folks/backend-store.vala"
			folks_debug_unindent (debug);
#line 204 "/run/build/folks/folks/backend-store.vala"
			_g_object_unref0 (backend);
#line 1747 "backend-store.c"
		}
#line 204 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_backend_it);
#line 1751 "backend-store.c"
	}
#line 258 "/run/build/folks/folks/backend-store.vala"
	folks_debug_unindent (debug);
#line 261 "/run/build/folks/folks/backend-store.vala"
	folks_debug_print_line (debug, domain, level, "%s", "");
#line 1757 "backend-store.c"
}


static void
folks_backend_store_prepare_data_free (gpointer _data)
{
	FolksBackendStorePrepareData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStorePrepareData, _data_);
#line 1770 "backend-store.c"
}


static void
folks_backend_store_prepare_async_ready_wrapper (GObject *source_object,
                                                 GAsyncResult *res,
                                                 void *user_data)
{
	FolksBackendStorePrepareData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 1786 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 1790 "backend-store.c"
}


void
folks_backend_store_prepare (FolksBackendStore* self,
                             GAsyncReadyCallback _callback_,
                             gpointer _user_data_)
{
	FolksBackendStorePrepareData* _data_;
	FolksBackendStore* _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStorePrepareData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_backend_store_prepare_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 1811 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_backend_store_prepare_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_prepare_co (_data_);
#line 1821 "backend-store.c"
}


void
folks_backend_store_prepare_finish (FolksBackendStore* self,
                                    GAsyncResult* _res_)
{
	FolksBackendStorePrepareData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 1832 "backend-store.c"
}


/**
   * Prepare the BackendStore for use.
   *
   * This must only ever be called before {@link BackendStore.load_backends} is
   * called for the first time. If it isn't called explicitly,
   * {@link BackendStore.load_backends} will call it.
   *
   * This method is safe to call multiple times concurrently (e.g. an
   * asynchronous call may begin between a subsequent asynchronous call
   * beginning and finishing).
   *
   * @since 0.3.0
   */
static void
folks_backend_store_prepare_ready (GObject* source_object,
                                   GAsyncResult* _res_,
                                   gpointer _user_data_)
{
	FolksBackendStorePrepareData* _data_;
#line 282 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 282 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 282 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 282 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 282 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_prepare_co (_data_);
#line 1865 "backend-store.c"
}


static gboolean
folks_backend_store_prepare_co (FolksBackendStorePrepareData* _data_)
{
#line 277 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 277 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 1876 "backend-store.c"
		goto _state_0;
#line 277 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 1880 "backend-store.c"
		goto _state_1;
		default:
#line 277 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 1885 "backend-store.c"
	}
	_state_0:
#line 279 "/run/build/folks/folks/backend-store.vala"
	folks_internal_profiling_start ("preparing BackendStore", NULL);
#line 282 "/run/build/folks/folks/backend-store.vala"
	_data_->_state_ = 1;
#line 282 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_load_disabled_backend_names (_data_->self, folks_backend_store_prepare_ready, _data_);
#line 282 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 1896 "backend-store.c"
	_state_1:
#line 282 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_load_disabled_backend_names_finish (_data_->self, _data_->_res_);
#line 284 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp0_ = _data_->self->priv->_is_prepared;
#line 284 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_tmp0_ == FALSE) {
#line 286 "/run/build/folks/folks/backend-store.vala"
		_data_->self->priv->_is_prepared = TRUE;
#line 287 "/run/build/folks/folks/backend-store.vala"
		g_object_notify ((GObject*) _data_->self, "is-prepared");
#line 1908 "backend-store.c"
	}
#line 290 "/run/build/folks/folks/backend-store.vala"
	folks_internal_profiling_end ("preparing BackendStore", NULL);
#line 277 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 277 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 277 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 277 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 1920 "backend-store.c"
		}
	}
#line 277 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 277 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 1927 "backend-store.c"
}


static void
folks_backend_store_load_backends_data_free (gpointer _data)
{
	FolksBackendStoreLoadBackendsData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreLoadBackendsData, _data_);
#line 1940 "backend-store.c"
}


static void
folks_backend_store_load_backends_async_ready_wrapper (GObject *source_object,
                                                       GAsyncResult *res,
                                                       void *user_data)
{
	FolksBackendStoreLoadBackendsData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 1956 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 1960 "backend-store.c"
}


void
folks_backend_store_load_backends (FolksBackendStore* self,
                                   GAsyncReadyCallback _callback_,
                                   gpointer _user_data_)
{
	FolksBackendStoreLoadBackendsData* _data_;
	FolksBackendStore* _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreLoadBackendsData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_backend_store_load_backends_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 1981 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_backend_store_load_backends_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_load_backends_co (_data_);
#line 1991 "backend-store.c"
}


void
folks_backend_store_load_backends_finish (FolksBackendStore* self,
                                          GAsyncResult* _res_,
                                          GError** error)
{
	FolksBackendStoreLoadBackendsData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (NULL == _data_) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		return;
#line 2007 "backend-store.c"
	}
}


/**
   * Find, load, and prepare all backends which are not disabled.
   *
   * Backends will be searched for in the path given by the
   * ``FOLKS_BACKEND_PATH`` environment variable, if it's set. If it's not set,
   * backends will be searched for in a path set at compilation time.
   *
   * This method is not safe to call multiple times concurrently.
   *
   * @throws GLib.Error currently unused
   */
static Block1Data*
block1_data_ref (Block1Data* _data1_)
{
#line 304 "/run/build/folks/folks/backend-store.vala"
	g_atomic_int_inc (&_data1_->_ref_count_);
#line 304 "/run/build/folks/folks/backend-store.vala"
	return _data1_;
#line 2030 "backend-store.c"
}


static void
block1_data_unref (void * _userdata_)
{
	Block1Data* _data1_;
	_data1_ = (Block1Data*) _userdata_;
#line 304 "/run/build/folks/folks/backend-store.vala"
	if (g_atomic_int_dec_and_test (&_data1_->_ref_count_)) {
#line 2041 "backend-store.c"
		FolksBackendStore* self;
#line 304 "/run/build/folks/folks/backend-store.vala"
		self = _data1_->self;
#line 304 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (self);
#line 304 "/run/build/folks/folks/backend-store.vala"
		g_slice_free (Block1Data, _data1_);
#line 2049 "backend-store.c"
	}
}


static void
folks_backend_store_load_backends_ready (GObject* source_object,
                                         GAsyncResult* _res_,
                                         gpointer _user_data_)
{
	FolksBackendStoreLoadBackendsData* _data_;
#line 310 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 310 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 310 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 310 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 310 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_load_backends_co (_data_);
#line 2070 "backend-store.c"
}


static void
____lambda66_ (Block1Data* _data1_,
               GObject* o,
               GAsyncResult* r)
{
	FolksBackendStore* self;
	gint _tmp0_;
	gint _tmp1_;
#line 386 "/run/build/folks/folks/backend-store.vala"
	self = _data1_->self;
#line 386 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (r != NULL);
#line 388 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_backend_load_if_needed_finish (self, r);
#line 389 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _data1_->backends_remaining;
#line 389 "/run/build/folks/folks/backend-store.vala"
	_data1_->backends_remaining = _tmp0_ - 1;
#line 391 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = _data1_->backends_remaining;
#line 391 "/run/build/folks/folks/backend-store.vala"
	if (_tmp1_ == 0) {
#line 393 "/run/build/folks/folks/backend-store.vala"
		folks_backend_store_load_backends_co (_data1_->_async_data_);
#line 2098 "backend-store.c"
	}
}


static void
_____lambda66__gasync_ready_callback (GObject* source_object,
                                      GAsyncResult* res,
                                      gpointer self)
{
#line 386 "/run/build/folks/folks/backend-store.vala"
	____lambda66_ (self, source_object, res);
#line 386 "/run/build/folks/folks/backend-store.vala"
	block1_data_unref (self);
#line 2112 "backend-store.c"
}


static gboolean
folks_backend_store_load_backends_co (FolksBackendStoreLoadBackendsData* _data_)
{
#line 304 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 304 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 2123 "backend-store.c"
		goto _state_0;
#line 304 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 2127 "backend-store.c"
		goto _state_1;
#line 304 "/run/build/folks/folks/backend-store.vala"
		case 2:
#line 2131 "backend-store.c"
		goto _state_2;
#line 304 "/run/build/folks/folks/backend-store.vala"
		case 3:
#line 2135 "backend-store.c"
		goto _state_3;
#line 304 "/run/build/folks/folks/backend-store.vala"
		case 4:
#line 2139 "backend-store.c"
		goto _state_4;
#line 304 "/run/build/folks/folks/backend-store.vala"
		case 5:
#line 2143 "backend-store.c"
		goto _state_5;
		default:
#line 304 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 2148 "backend-store.c"
	}
	_state_0:
#line 304 "/run/build/folks/folks/backend-store.vala"
	_data_->_data1_ = g_slice_new0 (Block1Data);
#line 304 "/run/build/folks/folks/backend-store.vala"
	_data_->_data1_->_ref_count_ = 1;
#line 304 "/run/build/folks/folks/backend-store.vala"
	_data_->_data1_->self = g_object_ref (_data_->self);
#line 304 "/run/build/folks/folks/backend-store.vala"
	_data_->_data1_->_async_data_ = _data_;
#line 306 "/run/build/folks/folks/backend-store.vala"
	_vala_assert (g_module_supported (), "Module.supported()");
#line 308 "/run/build/folks/folks/backend-store.vala"
	folks_internal_profiling_start ("loading backends in BackendStore", NULL);
#line 310 "/run/build/folks/folks/backend-store.vala"
	_data_->_state_ = 1;
#line 310 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_prepare (_data_->self, folks_backend_store_load_backends_ready, _data_);
#line 310 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 2169 "backend-store.c"
	_state_1:
#line 310 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_prepare_finish (_data_->self, _data_->_res_);
#line 2173 "backend-store.c"
	{
#line 313 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp0_ = _data_->self->priv->_backend_hash;
#line 313 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp1_ = gee_abstract_map_get_values ((GeeAbstractMap*) _data_->_tmp0_);
#line 313 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp2_ = _data_->_tmp1_;
#line 313 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp3_ = _data_->_tmp2_;
#line 313 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp4_ = gee_iterable_iterator ((GeeIterable*) _data_->_tmp3_);
#line 313 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp5_ = _data_->_tmp4_;
#line 313 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->_tmp3_);
#line 313 "/run/build/folks/folks/backend-store.vala"
		_data_->_backend_existing_it = _data_->_tmp5_;
#line 313 "/run/build/folks/folks/backend-store.vala"
		while (TRUE) {
#line 313 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp6_ = _data_->_backend_existing_it;
#line 313 "/run/build/folks/folks/backend-store.vala"
			if (!gee_iterator_next (_data_->_tmp6_)) {
#line 313 "/run/build/folks/folks/backend-store.vala"
				break;
#line 2199 "backend-store.c"
			}
#line 313 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp7_ = _data_->_backend_existing_it;
#line 313 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp8_ = gee_iterator_get (_data_->_tmp7_);
#line 313 "/run/build/folks/folks/backend-store.vala"
			_data_->backend_existing = (FolksBackend*) _data_->_tmp8_;
#line 315 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp9_ = _data_->backend_existing;
#line 315 "/run/build/folks/folks/backend-store.vala"
			_data_->_state_ = 2;
#line 315 "/run/build/folks/folks/backend-store.vala"
			_folks_backend_store_backend_unload_if_needed (_data_->self, _data_->_tmp9_, folks_backend_store_load_backends_ready, _data_);
#line 315 "/run/build/folks/folks/backend-store.vala"
			return FALSE;
#line 2215 "backend-store.c"
			_state_2:
#line 315 "/run/build/folks/folks/backend-store.vala"
			_folks_backend_store_backend_unload_if_needed_finish (_data_->self, _data_->_res_);
#line 313 "/run/build/folks/folks/backend-store.vala"
			_g_object_unref0 (_data_->backend_existing);
#line 2221 "backend-store.c"
		}
#line 313 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->_backend_existing_it);
#line 2225 "backend-store.c"
	}
#line 318 "/run/build/folks/folks/backend-store.vala"
	folks_internal_profiling_point ("unloaded backends in BackendStore");
#line 320 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp10_ = g_getenv ("FOLKS_BACKEND_PATH");
#line 320 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp11_ = g_strdup (_data_->_tmp10_);
#line 320 "/run/build/folks/folks/backend-store.vala"
	_data_->_path = _data_->_tmp11_;
#line 323 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp12_ = _data_->_path;
#line 323 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_tmp12_ == NULL) {
#line 325 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp13_ = g_strdup (BACKEND_DIR);
#line 325 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->path);
#line 325 "/run/build/folks/folks/backend-store.vala"
		_data_->path = _data_->_tmp13_;
#line 327 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp14_ = _data_->path;
#line 327 "/run/build/folks/folks/backend-store.vala"
		g_debug ("Using built-in backend dir '%s' (override with " "environment variable FOLKS_BACKEND_PATH)", _data_->_tmp14_);
#line 2249 "backend-store.c"
	} else {
#line 332 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp15_ = _data_->_path;
#line 332 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp16_ = g_strdup ((const gchar*) _data_->_tmp15_);
#line 332 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->path);
#line 332 "/run/build/folks/folks/backend-store.vala"
		_data_->path = _data_->_tmp16_;
#line 334 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp17_ = _data_->path;
#line 334 "/run/build/folks/folks/backend-store.vala"
		g_debug ("Using environment variable FOLKS_BACKEND_PATH = " "'%s' to look for backends", _data_->_tmp17_);
#line 2263 "backend-store.c"
	}
#line 338 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp18_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, g_file_get_type (), (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 338 "/run/build/folks/folks/backend-store.vala"
	_data_->modules = _data_->_tmp18_;
#line 339 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp19_ = _data_->path;
#line 339 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp21_ = _data_->_tmp20_ = g_strsplit (_data_->_tmp19_, ":", 0);
#line 339 "/run/build/folks/folks/backend-store.vala"
	_data_->path_split = _data_->_tmp21_;
#line 339 "/run/build/folks/folks/backend-store.vala"
	_data_->path_split_length1 = _vala_array_length (_data_->_tmp20_);
#line 339 "/run/build/folks/folks/backend-store.vala"
	_data_->_path_split_size_ = _data_->path_split_length1;
#line 340 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp22_ = _data_->path_split;
#line 340 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp22__length1 = _data_->path_split_length1;
#line 2283 "backend-store.c"
	{
#line 340 "/run/build/folks/folks/backend-store.vala"
		_data_->subpath_collection_length1 = 0;
#line 340 "/run/build/folks/folks/backend-store.vala"
		_data_->_subpath_collection_size_ = 0;
#line 340 "/run/build/folks/folks/backend-store.vala"
		_data_->subpath_collection = _data_->_tmp22_;
#line 340 "/run/build/folks/folks/backend-store.vala"
		_data_->subpath_collection_length1 = _data_->_tmp22__length1;
#line 340 "/run/build/folks/folks/backend-store.vala"
		for (_data_->subpath_it = 0; _data_->subpath_it < _data_->_tmp22__length1; _data_->subpath_it = _data_->subpath_it + 1) {
#line 340 "/run/build/folks/folks/backend-store.vala"
			_data_->subpath = _data_->subpath_collection[_data_->subpath_it];
#line 2297 "backend-store.c"
			{
#line 342 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp23_ = _data_->subpath;
#line 342 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp24_ = g_file_new_for_path (_data_->_tmp23_);
#line 342 "/run/build/folks/folks/backend-store.vala"
				_data_->file = _data_->_tmp24_;
#line 346 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp25_ = _data_->file;
#line 346 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp26_ = FALSE;
#line 346 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp27_ = FALSE;
#line 346 "/run/build/folks/folks/backend-store.vala"
				_data_->_state_ = 3;
#line 346 "/run/build/folks/folks/backend-store.vala"
				_folks_backend_store_get_file_info (_data_->_tmp25_, folks_backend_store_load_backends_ready, _data_);
#line 346 "/run/build/folks/folks/backend-store.vala"
				return FALSE;
#line 2317 "backend-store.c"
				_state_3:
#line 346 "/run/build/folks/folks/backend-store.vala"
				_folks_backend_store_get_file_info_finish (_data_->_res_, &_data_->_tmp26_, &_data_->_tmp27_);
#line 346 "/run/build/folks/folks/backend-store.vala"
				_data_->is_file = _data_->_tmp26_;
#line 346 "/run/build/folks/folks/backend-store.vala"
				_data_->is_dir = _data_->_tmp27_;
#line 347 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp28_ = _data_->is_file;
#line 347 "/run/build/folks/folks/backend-store.vala"
				if (_data_->_tmp28_) {
#line 349 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp29_ = _data_->modules;
#line 349 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp30_ = _data_->subpath;
#line 349 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp31_ = _data_->file;
#line 349 "/run/build/folks/folks/backend-store.vala"
					gee_abstract_map_set ((GeeAbstractMap*) _data_->_tmp29_, _data_->_tmp30_, _data_->_tmp31_);
#line 2337 "backend-store.c"
				} else {
#line 351 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp32_ = _data_->is_dir;
#line 351 "/run/build/folks/folks/backend-store.vala"
					if (_data_->_tmp32_) {
#line 353 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp33_ = _data_->file;
#line 353 "/run/build/folks/folks/backend-store.vala"
						_data_->_state_ = 4;
#line 353 "/run/build/folks/folks/backend-store.vala"
						_folks_backend_store_get_modules_from_dir (_data_->self, _data_->_tmp33_, folks_backend_store_load_backends_ready, _data_);
#line 353 "/run/build/folks/folks/backend-store.vala"
						return FALSE;
#line 2351 "backend-store.c"
						_state_4:
#line 353 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp34_ = _folks_backend_store_get_modules_from_dir_finish (_data_->self, _data_->_res_);
#line 353 "/run/build/folks/folks/backend-store.vala"
						_data_->cur_modules = _data_->_tmp34_;
#line 354 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp35_ = _data_->cur_modules;
#line 354 "/run/build/folks/folks/backend-store.vala"
						if (_data_->_tmp35_ != NULL) {
#line 2361 "backend-store.c"
							{
#line 356 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp36_ = _data_->cur_modules;
#line 356 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp37_ = gee_abstract_map_get_entries ((GeeAbstractMap*) G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp36_, GEE_TYPE_HASH_MAP, GeeHashMap));
#line 356 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp38_ = _data_->_tmp37_;
#line 356 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp39_ = _data_->_tmp38_;
#line 356 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp40_ = gee_iterable_iterator ((GeeIterable*) _data_->_tmp39_);
#line 356 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp41_ = _data_->_tmp40_;
#line 356 "/run/build/folks/folks/backend-store.vala"
								_g_object_unref0 (_data_->_tmp39_);
#line 356 "/run/build/folks/folks/backend-store.vala"
								_data_->_entry_it = _data_->_tmp41_;
#line 356 "/run/build/folks/folks/backend-store.vala"
								while (TRUE) {
#line 356 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp42_ = _data_->_entry_it;
#line 356 "/run/build/folks/folks/backend-store.vala"
									if (!gee_iterator_next (_data_->_tmp42_)) {
#line 356 "/run/build/folks/folks/backend-store.vala"
										break;
#line 2387 "backend-store.c"
									}
#line 356 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp43_ = _data_->_entry_it;
#line 356 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp44_ = gee_iterator_get (_data_->_tmp43_);
#line 356 "/run/build/folks/folks/backend-store.vala"
									_data_->entry = (GeeMapEntry*) _data_->_tmp44_;
#line 358 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp45_ = _data_->modules;
#line 358 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp46_ = _data_->entry;
#line 358 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp47_ = gee_map_entry_get_key (_data_->_tmp46_);
#line 358 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp48_ = _data_->_tmp47_;
#line 358 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp49_ = _data_->entry;
#line 358 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp50_ = gee_map_entry_get_value (_data_->_tmp49_);
#line 358 "/run/build/folks/folks/backend-store.vala"
									_data_->_tmp51_ = _data_->_tmp50_;
#line 358 "/run/build/folks/folks/backend-store.vala"
									gee_abstract_map_set ((GeeAbstractMap*) _data_->_tmp45_, (const gchar*) _data_->_tmp48_, (GFile*) _data_->_tmp51_);
#line 356 "/run/build/folks/folks/backend-store.vala"
									_g_object_unref0 (_data_->entry);
#line 2413 "backend-store.c"
								}
#line 356 "/run/build/folks/folks/backend-store.vala"
								_g_object_unref0 (_data_->_entry_it);
#line 2417 "backend-store.c"
							}
						}
#line 351 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->cur_modules);
#line 2422 "backend-store.c"
					} else {
#line 364 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp52_ = _data_->subpath;
#line 364 "/run/build/folks/folks/backend-store.vala"
						g_critical ("FOLKS_BACKEND_PATH component '%s' is not a regular " "file or directory; ignoring...", _data_->_tmp52_);
#line 367 "/run/build/folks/folks/backend-store.vala"
						g_assert_not_reached ();
#line 2430 "backend-store.c"
					}
				}
#line 340 "/run/build/folks/folks/backend-store.vala"
				_g_object_unref0 (_data_->file);
#line 2435 "backend-store.c"
			}
		}
	}
#line 371 "/run/build/folks/folks/backend-store.vala"
	folks_internal_profiling_point ("found modules in BackendStore");
#line 2441 "backend-store.c"
	{
#line 376 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp53_ = _data_->modules;
#line 376 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp54_ = gee_abstract_map_get_values ((GeeAbstractMap*) _data_->_tmp53_);
#line 376 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp55_ = _data_->_tmp54_;
#line 376 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp56_ = _data_->_tmp55_;
#line 376 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp57_ = gee_iterable_iterator ((GeeIterable*) _data_->_tmp56_);
#line 376 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp58_ = _data_->_tmp57_;
#line 376 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->_tmp56_);
#line 376 "/run/build/folks/folks/backend-store.vala"
		_data_->_module_it = _data_->_tmp58_;
#line 376 "/run/build/folks/folks/backend-store.vala"
		while (TRUE) {
#line 376 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp59_ = _data_->_module_it;
#line 376 "/run/build/folks/folks/backend-store.vala"
			if (!gee_iterator_next (_data_->_tmp59_)) {
#line 376 "/run/build/folks/folks/backend-store.vala"
				break;
#line 2467 "backend-store.c"
			}
#line 376 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp60_ = _data_->_module_it;
#line 376 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp61_ = gee_iterator_get (_data_->_tmp60_);
#line 376 "/run/build/folks/folks/backend-store.vala"
			_data_->module = (GFile*) _data_->_tmp61_;
#line 377 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp62_ = _data_->module;
#line 377 "/run/build/folks/folks/backend-store.vala"
			_folks_backend_store_load_module_from_file (_data_->self, _data_->_tmp62_);
#line 376 "/run/build/folks/folks/backend-store.vala"
			_g_object_unref0 (_data_->module);
#line 2481 "backend-store.c"
		}
#line 376 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->_module_it);
#line 2485 "backend-store.c"
	}
#line 379 "/run/build/folks/folks/backend-store.vala"
	folks_internal_profiling_point ("loaded modules in BackendStore");
#line 382 "/run/build/folks/folks/backend-store.vala"
	_data_->_data1_->backends_remaining = 1;
#line 2491 "backend-store.c"
	{
#line 383 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp63_ = _data_->self->priv->_backend_hash;
#line 383 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp64_ = gee_abstract_map_get_values ((GeeAbstractMap*) _data_->_tmp63_);
#line 383 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp65_ = _data_->_tmp64_;
#line 383 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp66_ = _data_->_tmp65_;
#line 383 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp67_ = gee_iterable_iterator ((GeeIterable*) _data_->_tmp66_);
#line 383 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp68_ = _data_->_tmp67_;
#line 383 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->_tmp66_);
#line 383 "/run/build/folks/folks/backend-store.vala"
		_data_->_backend_it = _data_->_tmp68_;
#line 383 "/run/build/folks/folks/backend-store.vala"
		while (TRUE) {
#line 383 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp69_ = _data_->_backend_it;
#line 383 "/run/build/folks/folks/backend-store.vala"
			if (!gee_iterator_next (_data_->_tmp69_)) {
#line 383 "/run/build/folks/folks/backend-store.vala"
				break;
#line 2517 "backend-store.c"
			}
#line 383 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp70_ = _data_->_backend_it;
#line 383 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp71_ = gee_iterator_get (_data_->_tmp70_);
#line 383 "/run/build/folks/folks/backend-store.vala"
			_data_->backend = (FolksBackend*) _data_->_tmp71_;
#line 385 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp72_ = _data_->_data1_->backends_remaining;
#line 385 "/run/build/folks/folks/backend-store.vala"
			_data_->_data1_->backends_remaining = _data_->_tmp72_ + 1;
#line 386 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp73_ = _data_->backend;
#line 386 "/run/build/folks/folks/backend-store.vala"
			_folks_backend_store_backend_load_if_needed (_data_->self, _data_->_tmp73_, _____lambda66__gasync_ready_callback, block1_data_ref (_data_->_data1_));
#line 383 "/run/build/folks/folks/backend-store.vala"
			_g_object_unref0 (_data_->backend);
#line 2535 "backend-store.c"
		}
#line 383 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->_backend_it);
#line 2539 "backend-store.c"
	}
#line 397 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp74_ = _data_->_data1_->backends_remaining;
#line 397 "/run/build/folks/folks/backend-store.vala"
	_data_->_data1_->backends_remaining = _data_->_tmp74_ - 1;
#line 398 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp75_ = _data_->_data1_->backends_remaining;
#line 398 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_tmp75_ > 0) {
#line 400 "/run/build/folks/folks/backend-store.vala"
		_data_->_state_ = 5;
#line 400 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 2553 "backend-store.c"
		_state_5:
		;
	}
#line 403 "/run/build/folks/folks/backend-store.vala"
	folks_internal_profiling_end ("loading backends in BackendStore", NULL);
#line 304 "/run/build/folks/folks/backend-store.vala"
	_data_->path_split = (_vala_array_free (_data_->path_split, _data_->path_split_length1, (GDestroyNotify) g_free), NULL);
#line 304 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->modules);
#line 304 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->path);
#line 304 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->_path);
#line 304 "/run/build/folks/folks/backend-store.vala"
	block1_data_unref (_data_->_data1_);
#line 304 "/run/build/folks/folks/backend-store.vala"
	_data_->_data1_ = NULL;
#line 304 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 304 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 304 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 304 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2579 "backend-store.c"
		}
	}
#line 304 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 304 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 2586 "backend-store.c"
}


static void
_folks_backend_store_backend_load_if_needed_data_free (gpointer _data)
{
	FolksBackendStoreBackendLoadIfNeededData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->backend);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreBackendLoadIfNeededData, _data_);
#line 2601 "backend-store.c"
}


static void
_folks_backend_store_backend_load_if_needed_async_ready_wrapper (GObject *source_object,
                                                                 GAsyncResult *res,
                                                                 void *user_data)
{
	FolksBackendStoreBackendLoadIfNeededData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 2617 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 2621 "backend-store.c"
}


static void
_folks_backend_store_backend_load_if_needed (FolksBackendStore* self,
                                             FolksBackend* backend,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_)
{
	FolksBackendStoreBackendLoadIfNeededData* _data_;
	FolksBackendStore* _tmp0_;
	FolksBackend* _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreBackendLoadIfNeededData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, _folks_backend_store_backend_load_if_needed_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 2644 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, _folks_backend_store_backend_load_if_needed_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = _g_object_ref0 (backend);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->backend);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->backend = _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_backend_load_if_needed_co (_data_);
#line 2660 "backend-store.c"
}


static void
_folks_backend_store_backend_load_if_needed_finish (FolksBackendStore* self,
                                                    GAsyncResult* _res_)
{
	FolksBackendStoreBackendLoadIfNeededData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 2671 "backend-store.c"
}


static void
_folks_backend_store_backend_load_if_needed_ready (GObject* source_object,
                                                   GAsyncResult* _res_,
                                                   gpointer _user_data_)
{
	FolksBackendStoreBackendLoadIfNeededData* _data_;
#line 416 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 416 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 416 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 416 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 416 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_backend_load_if_needed_co (_data_);
#line 2691 "backend-store.c"
}


static gboolean
_folks_backend_store_backend_load_if_needed_co (FolksBackendStoreBackendLoadIfNeededData* _data_)
{
#line 408 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 408 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 2702 "backend-store.c"
		goto _state_0;
#line 408 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 2706 "backend-store.c"
		goto _state_1;
		default:
#line 408 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 2711 "backend-store.c"
	}
	_state_0:
#line 410 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp0_ = folks_backend_get_name (_data_->backend);
#line 410 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp1_ = _data_->_tmp0_;
#line 410 "/run/build/folks/folks/backend-store.vala"
	if (_folks_backend_store_backend_is_enabled (_data_->self, _data_->_tmp1_)) {
#line 412 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp2_ = _data_->self->priv->_prepared_backends;
#line 412 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp3_ = folks_backend_get_name (_data_->backend);
#line 412 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp4_ = _data_->_tmp3_;
#line 412 "/run/build/folks/folks/backend-store.vala"
		if (!gee_abstract_map_has_key ((GeeAbstractMap*) _data_->_tmp2_, _data_->_tmp4_)) {
#line 2728 "backend-store.c"
			{
#line 416 "/run/build/folks/folks/backend-store.vala"
				_data_->_state_ = 1;
#line 416 "/run/build/folks/folks/backend-store.vala"
				folks_backend_prepare (_data_->backend, _folks_backend_store_backend_load_if_needed_ready, _data_);
#line 416 "/run/build/folks/folks/backend-store.vala"
				return FALSE;
#line 2736 "backend-store.c"
				_state_1:
#line 416 "/run/build/folks/folks/backend-store.vala"
				folks_backend_prepare_finish (_data_->backend, _data_->_res_, &_data_->_inner_error_);
#line 416 "/run/build/folks/folks/backend-store.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 2742 "backend-store.c"
					goto __catch0_g_error;
				}
#line 418 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp5_ = folks_backend_get_name (_data_->backend);
#line 418 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp6_ = _data_->_tmp5_;
#line 418 "/run/build/folks/folks/backend-store.vala"
				g_debug ("backend-store.vala:418: New backend '%s' prepared", _data_->_tmp6_);
#line 419 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp7_ = _data_->self->priv->_prepared_backends;
#line 419 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp8_ = folks_backend_get_name (_data_->backend);
#line 419 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp9_ = _data_->_tmp8_;
#line 419 "/run/build/folks/folks/backend-store.vala"
				gee_abstract_map_set ((GeeAbstractMap*) _data_->_tmp7_, _data_->_tmp9_, _data_->backend);
#line 420 "/run/build/folks/folks/backend-store.vala"
				g_signal_emit (_data_->self, folks_backend_store_signals[FOLKS_BACKEND_STORE_BACKEND_AVAILABLE_SIGNAL], 0, _data_->backend);
#line 2761 "backend-store.c"
			}
			goto __finally0;
			__catch0_g_error:
			{
#line 414 "/run/build/folks/folks/backend-store.vala"
				_data_->e = _data_->_inner_error_;
#line 414 "/run/build/folks/folks/backend-store.vala"
				_data_->_inner_error_ = NULL;
#line 424 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp10_ = _data_->e;
#line 424 "/run/build/folks/folks/backend-store.vala"
				if (g_error_matches (_data_->_tmp10_, G_DBUS_ERROR, G_DBUS_ERROR_SERVICE_UNKNOWN)) {
#line 430 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp11_ = folks_backend_get_name (_data_->backend);
#line 430 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp12_ = _data_->_tmp11_;
#line 430 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp13_ = _data_->e;
#line 430 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp14_ = _data_->_tmp13_->message;
#line 430 "/run/build/folks/folks/backend-store.vala"
					g_debug ("backend-store.vala:430: Error preparing Backend '%s': %s", _data_->_tmp12_, _data_->_tmp14_);
#line 2784 "backend-store.c"
				} else {
#line 435 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp15_ = folks_backend_get_name (_data_->backend);
#line 435 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp16_ = _data_->_tmp15_;
#line 435 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp17_ = _data_->e;
#line 435 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp18_ = _data_->_tmp17_->message;
#line 435 "/run/build/folks/folks/backend-store.vala"
					g_warning ("backend-store.vala:435: Error preparing Backend '%s': %s", _data_->_tmp16_, _data_->_tmp18_);
#line 2796 "backend-store.c"
				}
#line 414 "/run/build/folks/folks/backend-store.vala"
				_g_error_free0 (_data_->e);
#line 2800 "backend-store.c"
			}
			__finally0:
#line 414 "/run/build/folks/folks/backend-store.vala"
			if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 414 "/run/build/folks/folks/backend-store.vala"
				g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 414 "/run/build/folks/folks/backend-store.vala"
				g_clear_error (&_data_->_inner_error_);
#line 414 "/run/build/folks/folks/backend-store.vala"
				g_object_unref (_data_->_async_result);
#line 414 "/run/build/folks/folks/backend-store.vala"
				return FALSE;
#line 2813 "backend-store.c"
			}
		}
	}
#line 408 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 408 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 408 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 408 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2825 "backend-store.c"
		}
	}
#line 408 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 408 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 2832 "backend-store.c"
}


static void
_folks_backend_store_backend_unload_if_needed_data_free (gpointer _data)
{
	FolksBackendStoreBackendUnloadIfNeededData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->backend);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreBackendUnloadIfNeededData, _data_);
#line 2847 "backend-store.c"
}


static void
_folks_backend_store_backend_unload_if_needed_async_ready_wrapper (GObject *source_object,
                                                                   GAsyncResult *res,
                                                                   void *user_data)
{
	FolksBackendStoreBackendUnloadIfNeededData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 2863 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 2867 "backend-store.c"
}


static void
_folks_backend_store_backend_unload_if_needed (FolksBackendStore* self,
                                               FolksBackend* backend,
                                               GAsyncReadyCallback _callback_,
                                               gpointer _user_data_)
{
	FolksBackendStoreBackendUnloadIfNeededData* _data_;
	FolksBackendStore* _tmp0_;
	FolksBackend* _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreBackendUnloadIfNeededData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, _folks_backend_store_backend_unload_if_needed_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 2890 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, _folks_backend_store_backend_unload_if_needed_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = _g_object_ref0 (backend);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->backend);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->backend = _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_backend_unload_if_needed_co (_data_);
#line 2906 "backend-store.c"
}


static gboolean
_folks_backend_store_backend_unload_if_needed_finish (FolksBackendStore* self,
                                                      GAsyncResult* _res_)
{
	gboolean result;
	FolksBackendStoreBackendUnloadIfNeededData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 38 "/run/build/folks/folks/backend-store.vala"
	result = _data_->result;
#line 38 "/run/build/folks/folks/backend-store.vala"
	return result;
#line 2922 "backend-store.c"
}


static void
_folks_backend_store_backend_unload_if_needed_ready (GObject* source_object,
                                                     GAsyncResult* _res_,
                                                     gpointer _user_data_)
{
	FolksBackendStoreBackendUnloadIfNeededData* _data_;
#line 456 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 456 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 456 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 456 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 456 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_backend_unload_if_needed_co (_data_);
#line 2942 "backend-store.c"
}


static gboolean
_folks_backend_store_backend_unload_if_needed_co (FolksBackendStoreBackendUnloadIfNeededData* _data_)
{
#line 445 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 445 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 2953 "backend-store.c"
		goto _state_0;
#line 445 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 2957 "backend-store.c"
		goto _state_1;
		default:
#line 445 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 2962 "backend-store.c"
	}
	_state_0:
#line 447 "/run/build/folks/folks/backend-store.vala"
	_data_->unloaded = FALSE;
#line 449 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp0_ = folks_backend_get_name (_data_->backend);
#line 449 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp1_ = _data_->_tmp0_;
#line 449 "/run/build/folks/folks/backend-store.vala"
	if (!_folks_backend_store_backend_is_enabled (_data_->self, _data_->_tmp1_)) {
#line 451 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp2_ = _data_->self->priv->_backend_hash;
#line 451 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp3_ = folks_backend_get_name (_data_->backend);
#line 451 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp4_ = _data_->_tmp3_;
#line 451 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp5_ = gee_abstract_map_get ((GeeAbstractMap*) _data_->_tmp2_, _data_->_tmp4_);
#line 451 "/run/build/folks/folks/backend-store.vala"
		_data_->backend_existing = (FolksBackend*) _data_->_tmp5_;
#line 452 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp6_ = _data_->backend_existing;
#line 452 "/run/build/folks/folks/backend-store.vala"
		if (_data_->_tmp6_ != NULL) {
#line 2987 "backend-store.c"
			{
#line 456 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp7_ = _data_->backend_existing;
#line 456 "/run/build/folks/folks/backend-store.vala"
				_data_->_state_ = 1;
#line 456 "/run/build/folks/folks/backend-store.vala"
				folks_backend_unprepare (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp7_, FOLKS_TYPE_BACKEND, FolksBackend), _folks_backend_store_backend_unload_if_needed_ready, _data_);
#line 456 "/run/build/folks/folks/backend-store.vala"
				return FALSE;
#line 2997 "backend-store.c"
				_state_1:
#line 456 "/run/build/folks/folks/backend-store.vala"
				folks_backend_unprepare_finish (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp7_, FOLKS_TYPE_BACKEND, FolksBackend), _data_->_res_, &_data_->_inner_error_);
#line 456 "/run/build/folks/folks/backend-store.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 3003 "backend-store.c"
					goto __catch1_g_error;
				}
			}
			goto __finally1;
			__catch1_g_error:
			{
#line 454 "/run/build/folks/folks/backend-store.vala"
				_data_->e = _data_->_inner_error_;
#line 454 "/run/build/folks/folks/backend-store.vala"
				_data_->_inner_error_ = NULL;
#line 460 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp8_ = folks_backend_get_name (_data_->backend);
#line 460 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp9_ = _data_->_tmp8_;
#line 460 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp10_ = _data_->e;
#line 460 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp11_ = _data_->_tmp10_->message;
#line 460 "/run/build/folks/folks/backend-store.vala"
				g_warning ("backend-store.vala:460: Error unpreparing Backend '%s': %s", _data_->_tmp9_, _data_->_tmp11_);
#line 454 "/run/build/folks/folks/backend-store.vala"
				_g_error_free0 (_data_->e);
#line 3026 "backend-store.c"
			}
			__finally1:
#line 454 "/run/build/folks/folks/backend-store.vala"
			if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 454 "/run/build/folks/folks/backend-store.vala"
				_g_object_unref0 (_data_->backend_existing);
#line 454 "/run/build/folks/folks/backend-store.vala"
				g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 454 "/run/build/folks/folks/backend-store.vala"
				g_clear_error (&_data_->_inner_error_);
#line 454 "/run/build/folks/folks/backend-store.vala"
				g_object_unref (_data_->_async_result);
#line 454 "/run/build/folks/folks/backend-store.vala"
				return FALSE;
#line 3041 "backend-store.c"
			}
#line 464 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp12_ = _data_->self->priv->_prepared_backends;
#line 464 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp13_ = _data_->backend_existing;
#line 464 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp14_ = folks_backend_get_name (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp13_, FOLKS_TYPE_BACKEND, FolksBackend));
#line 464 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp15_ = _data_->_tmp14_;
#line 464 "/run/build/folks/folks/backend-store.vala"
			gee_abstract_map_unset ((GeeAbstractMap*) _data_->_tmp12_, _data_->_tmp15_, NULL);
#line 466 "/run/build/folks/folks/backend-store.vala"
			_data_->unloaded = TRUE;
#line 3055 "backend-store.c"
		}
#line 449 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->backend_existing);
#line 3059 "backend-store.c"
	}
#line 470 "/run/build/folks/folks/backend-store.vala"
	_data_->result = _data_->unloaded;
#line 470 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 470 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 470 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 470 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 3071 "backend-store.c"
		}
	}
#line 470 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 470 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 3078 "backend-store.c"
}


/**
   * Add a new {@link Backend} to the BackendStore.
   *
   * @param backend the {@link Backend} to add
   */
void
folks_backend_store_add_backend (FolksBackendStore* self,
                                 FolksBackend* backend)
{
	FolksBackend* backend_existing = NULL;
	GeeHashMap* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	gpointer _tmp3_;
	gboolean _tmp4_ = FALSE;
	FolksBackend* _tmp5_;
	FolksDebug* _tmp12_;
	const gchar* _tmp13_;
	const gchar* _tmp14_;
	GeeHashMap* _tmp15_;
	const gchar* _tmp16_;
	const gchar* _tmp17_;
#line 478 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (self != NULL);
#line 478 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (backend != NULL);
#line 481 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = self->priv->_backend_hash;
#line 481 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = folks_backend_get_name (backend);
#line 481 "/run/build/folks/folks/backend-store.vala"
	_tmp2_ = _tmp1_;
#line 481 "/run/build/folks/folks/backend-store.vala"
	_tmp3_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp0_, _tmp2_);
#line 481 "/run/build/folks/folks/backend-store.vala"
	backend_existing = (FolksBackend*) _tmp3_;
#line 482 "/run/build/folks/folks/backend-store.vala"
	_tmp5_ = backend_existing;
#line 482 "/run/build/folks/folks/backend-store.vala"
	if (_tmp5_ != NULL) {
#line 3122 "backend-store.c"
		FolksBackend* _tmp6_;
#line 482 "/run/build/folks/folks/backend-store.vala"
		_tmp6_ = backend_existing;
#line 482 "/run/build/folks/folks/backend-store.vala"
		_tmp4_ = _tmp6_ != backend;
#line 3128 "backend-store.c"
	} else {
#line 482 "/run/build/folks/folks/backend-store.vala"
		_tmp4_ = FALSE;
#line 3132 "backend-store.c"
	}
#line 482 "/run/build/folks/folks/backend-store.vala"
	if (_tmp4_) {
#line 3136 "backend-store.c"
		FolksBackend* _tmp7_;
		GeeHashMap* _tmp8_;
		FolksBackend* _tmp9_;
		const gchar* _tmp10_;
		const gchar* _tmp11_;
#line 484 "/run/build/folks/folks/backend-store.vala"
		_tmp7_ = backend_existing;
#line 484 "/run/build/folks/folks/backend-store.vala"
		folks_backend_unprepare (G_TYPE_CHECK_INSTANCE_CAST (_tmp7_, FOLKS_TYPE_BACKEND, FolksBackend), NULL, NULL);
#line 485 "/run/build/folks/folks/backend-store.vala"
		_tmp8_ = self->priv->_prepared_backends;
#line 485 "/run/build/folks/folks/backend-store.vala"
		_tmp9_ = backend_existing;
#line 485 "/run/build/folks/folks/backend-store.vala"
		_tmp10_ = folks_backend_get_name (G_TYPE_CHECK_INSTANCE_CAST (_tmp9_, FOLKS_TYPE_BACKEND, FolksBackend));
#line 485 "/run/build/folks/folks/backend-store.vala"
		_tmp11_ = _tmp10_;
#line 485 "/run/build/folks/folks/backend-store.vala"
		gee_abstract_map_unset ((GeeAbstractMap*) _tmp8_, _tmp11_, NULL);
#line 3156 "backend-store.c"
	}
#line 488 "/run/build/folks/folks/backend-store.vala"
	_tmp12_ = self->priv->_debug;
#line 488 "/run/build/folks/folks/backend-store.vala"
	_tmp13_ = folks_backend_get_name (backend);
#line 488 "/run/build/folks/folks/backend-store.vala"
	_tmp14_ = _tmp13_;
#line 488 "/run/build/folks/folks/backend-store.vala"
	_folks_debug_register_domain (_tmp12_, _tmp14_);
#line 490 "/run/build/folks/folks/backend-store.vala"
	_tmp15_ = self->priv->_backend_hash;
#line 490 "/run/build/folks/folks/backend-store.vala"
	_tmp16_ = folks_backend_get_name (backend);
#line 490 "/run/build/folks/folks/backend-store.vala"
	_tmp17_ = _tmp16_;
#line 490 "/run/build/folks/folks/backend-store.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp15_, _tmp17_, backend);
#line 478 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (backend_existing);
#line 3176 "backend-store.c"
}


static gboolean
_folks_backend_store_backend_is_enabled (FolksBackendStore* self,
                                         const gchar* name)
{
	gboolean result = FALSE;
	gboolean all_others_enabled = FALSE;
	gboolean _tmp0_ = FALSE;
	FolksSmallSet* _tmp1_;
	gboolean _tmp3_ = FALSE;
	FolksSmallSet* _tmp4_;
	gboolean enabled = FALSE;
	GError * _inner_error_ = NULL;
#line 493 "/run/build/folks/folks/backend-store.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 493 "/run/build/folks/folks/backend-store.vala"
	g_return_val_if_fail (name != NULL, FALSE);
#line 495 "/run/build/folks/folks/backend-store.vala"
	all_others_enabled = TRUE;
#line 497 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = self->priv->_backends_allowed;
#line 497 "/run/build/folks/folks/backend-store.vala"
	if (_tmp1_ != NULL) {
#line 3202 "backend-store.c"
		FolksSmallSet* _tmp2_;
#line 498 "/run/build/folks/folks/backend-store.vala"
		_tmp2_ = self->priv->_backends_allowed;
#line 498 "/run/build/folks/folks/backend-store.vala"
		_tmp0_ = !gee_abstract_collection_contains ((GeeAbstractCollection*) G_TYPE_CHECK_INSTANCE_CAST (_tmp2_, FOLKS_TYPE_SMALL_SET, FolksSmallSet), name);
#line 3208 "backend-store.c"
	} else {
#line 497 "/run/build/folks/folks/backend-store.vala"
		_tmp0_ = FALSE;
#line 3212 "backend-store.c"
	}
#line 497 "/run/build/folks/folks/backend-store.vala"
	if (_tmp0_) {
#line 499 "/run/build/folks/folks/backend-store.vala"
		result = FALSE;
#line 499 "/run/build/folks/folks/backend-store.vala"
		return result;
#line 3220 "backend-store.c"
	}
#line 501 "/run/build/folks/folks/backend-store.vala"
	_tmp4_ = self->priv->_backends_disabled;
#line 501 "/run/build/folks/folks/backend-store.vala"
	if (_tmp4_ != NULL) {
#line 3226 "backend-store.c"
		FolksSmallSet* _tmp5_;
#line 502 "/run/build/folks/folks/backend-store.vala"
		_tmp5_ = self->priv->_backends_disabled;
#line 502 "/run/build/folks/folks/backend-store.vala"
		_tmp3_ = gee_abstract_collection_contains ((GeeAbstractCollection*) G_TYPE_CHECK_INSTANCE_CAST (_tmp5_, FOLKS_TYPE_SMALL_SET, FolksSmallSet), name);
#line 3232 "backend-store.c"
	} else {
#line 501 "/run/build/folks/folks/backend-store.vala"
		_tmp3_ = FALSE;
#line 3236 "backend-store.c"
	}
#line 501 "/run/build/folks/folks/backend-store.vala"
	if (_tmp3_) {
#line 503 "/run/build/folks/folks/backend-store.vala"
		result = FALSE;
#line 503 "/run/build/folks/folks/backend-store.vala"
		return result;
#line 3244 "backend-store.c"
	}
	{
		gboolean _tmp6_ = FALSE;
		GKeyFile* _tmp7_;
		const gchar* _tmp8_;
#line 507 "/run/build/folks/folks/backend-store.vala"
		_tmp7_ = self->priv->_backends_key_file;
#line 507 "/run/build/folks/folks/backend-store.vala"
		_tmp8_ = folks_backend_store_KEY_FILE_GROUP_ALL_OTHERS;
#line 507 "/run/build/folks/folks/backend-store.vala"
		_tmp6_ = g_key_file_get_boolean (_tmp7_, _tmp8_, "enabled", &_inner_error_);
#line 507 "/run/build/folks/folks/backend-store.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 3258 "backend-store.c"
			gboolean _tmp9_ = FALSE;
#line 507 "/run/build/folks/folks/backend-store.vala"
			if (_inner_error_->domain == G_KEY_FILE_ERROR) {
#line 3262 "backend-store.c"
				goto __catch2_g_key_file_error;
			}
#line 507 "/run/build/folks/folks/backend-store.vala"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 507 "/run/build/folks/folks/backend-store.vala"
			g_clear_error (&_inner_error_);
#line 507 "/run/build/folks/folks/backend-store.vala"
			return _tmp9_;
#line 3271 "backend-store.c"
		}
#line 507 "/run/build/folks/folks/backend-store.vala"
		all_others_enabled = _tmp6_;
#line 3275 "backend-store.c"
	}
	goto __finally2;
	__catch2_g_key_file_error:
	{
		GError* e = NULL;
		gboolean _tmp10_ = FALSE;
		GError* _tmp11_;
#line 505 "/run/build/folks/folks/backend-store.vala"
		e = _inner_error_;
#line 505 "/run/build/folks/folks/backend-store.vala"
		_inner_error_ = NULL;
#line 512 "/run/build/folks/folks/backend-store.vala"
		_tmp11_ = e;
#line 512 "/run/build/folks/folks/backend-store.vala"
		if (!g_error_matches (_tmp11_, G_KEY_FILE_ERROR, G_KEY_FILE_ERROR_GROUP_NOT_FOUND)) {
#line 3291 "backend-store.c"
			GError* _tmp12_;
#line 513 "/run/build/folks/folks/backend-store.vala"
			_tmp12_ = e;
#line 513 "/run/build/folks/folks/backend-store.vala"
			_tmp10_ = !g_error_matches (_tmp12_, G_KEY_FILE_ERROR, G_KEY_FILE_ERROR_KEY_NOT_FOUND);
#line 3297 "backend-store.c"
		} else {
#line 512 "/run/build/folks/folks/backend-store.vala"
			_tmp10_ = FALSE;
#line 3301 "backend-store.c"
		}
#line 512 "/run/build/folks/folks/backend-store.vala"
		if (_tmp10_) {
#line 3305 "backend-store.c"
			const gchar* _tmp13_ = NULL;
			gboolean _tmp14_;
#line 517 "/run/build/folks/folks/backend-store.vala"
			_tmp14_ = all_others_enabled;
#line 517 "/run/build/folks/folks/backend-store.vala"
			if (_tmp14_) {
#line 517 "/run/build/folks/folks/backend-store.vala"
				_tmp13_ = "enabled";
#line 3314 "backend-store.c"
			} else {
#line 517 "/run/build/folks/folks/backend-store.vala"
				_tmp13_ = "disabled";
#line 3318 "backend-store.c"
			}
#line 515 "/run/build/folks/folks/backend-store.vala"
			g_warning ("Couldn't determine whether to enable or disable " "backends not listed in backend key file. Defaulting to %s.", _tmp13_);
#line 3322 "backend-store.c"
		} else {
			const gchar* _tmp15_ = NULL;
			gboolean _tmp16_;
#line 523 "/run/build/folks/folks/backend-store.vala"
			_tmp16_ = all_others_enabled;
#line 523 "/run/build/folks/folks/backend-store.vala"
			if (_tmp16_) {
#line 523 "/run/build/folks/folks/backend-store.vala"
				_tmp15_ = "Enabling";
#line 3332 "backend-store.c"
			} else {
#line 523 "/run/build/folks/folks/backend-store.vala"
				_tmp15_ = "Disabling";
#line 3336 "backend-store.c"
			}
#line 521 "/run/build/folks/folks/backend-store.vala"
			g_debug ("No catch-all entry in the backend key file. %s " "unlisted backends.", _tmp15_);
#line 3340 "backend-store.c"
		}
#line 505 "/run/build/folks/folks/backend-store.vala"
		_g_error_free0 (e);
#line 3344 "backend-store.c"
	}
	__finally2:
#line 505 "/run/build/folks/folks/backend-store.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 3349 "backend-store.c"
		gboolean _tmp17_ = FALSE;
#line 505 "/run/build/folks/folks/backend-store.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 505 "/run/build/folks/folks/backend-store.vala"
		g_clear_error (&_inner_error_);
#line 505 "/run/build/folks/folks/backend-store.vala"
		return _tmp17_;
#line 3357 "backend-store.c"
	}
#line 529 "/run/build/folks/folks/backend-store.vala"
	enabled = TRUE;
#line 3361 "backend-store.c"
	{
		gboolean _tmp18_ = FALSE;
		GKeyFile* _tmp19_;
#line 532 "/run/build/folks/folks/backend-store.vala"
		_tmp19_ = self->priv->_backends_key_file;
#line 532 "/run/build/folks/folks/backend-store.vala"
		_tmp18_ = g_key_file_get_boolean (_tmp19_, name, "enabled", &_inner_error_);
#line 532 "/run/build/folks/folks/backend-store.vala"
		if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 3371 "backend-store.c"
			gboolean _tmp20_ = FALSE;
#line 532 "/run/build/folks/folks/backend-store.vala"
			if (_inner_error_->domain == G_KEY_FILE_ERROR) {
#line 3375 "backend-store.c"
				goto __catch3_g_key_file_error;
			}
#line 532 "/run/build/folks/folks/backend-store.vala"
			g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 532 "/run/build/folks/folks/backend-store.vala"
			g_clear_error (&_inner_error_);
#line 532 "/run/build/folks/folks/backend-store.vala"
			return _tmp20_;
#line 3384 "backend-store.c"
		}
#line 532 "/run/build/folks/folks/backend-store.vala"
		enabled = _tmp18_;
#line 3388 "backend-store.c"
	}
	goto __finally3;
	__catch3_g_key_file_error:
	{
		GError* e = NULL;
		gboolean _tmp21_ = FALSE;
		GError* _tmp22_;
#line 530 "/run/build/folks/folks/backend-store.vala"
		e = _inner_error_;
#line 530 "/run/build/folks/folks/backend-store.vala"
		_inner_error_ = NULL;
#line 537 "/run/build/folks/folks/backend-store.vala"
		_tmp22_ = e;
#line 537 "/run/build/folks/folks/backend-store.vala"
		if (g_error_matches (_tmp22_, G_KEY_FILE_ERROR, G_KEY_FILE_ERROR_GROUP_NOT_FOUND)) {
#line 537 "/run/build/folks/folks/backend-store.vala"
			_tmp21_ = TRUE;
#line 3406 "backend-store.c"
		} else {
			GError* _tmp23_;
#line 538 "/run/build/folks/folks/backend-store.vala"
			_tmp23_ = e;
#line 538 "/run/build/folks/folks/backend-store.vala"
			_tmp21_ = g_error_matches (_tmp23_, G_KEY_FILE_ERROR, G_KEY_FILE_ERROR_KEY_NOT_FOUND);
#line 3413 "backend-store.c"
		}
#line 537 "/run/build/folks/folks/backend-store.vala"
		if (_tmp21_) {
#line 3417 "backend-store.c"
			const gchar* _tmp24_ = NULL;
			gboolean _tmp25_;
			const gchar* _tmp26_;
			gboolean _tmp27_;
#line 543 "/run/build/folks/folks/backend-store.vala"
			_tmp25_ = all_others_enabled;
#line 543 "/run/build/folks/folks/backend-store.vala"
			if (_tmp25_) {
#line 543 "/run/build/folks/folks/backend-store.vala"
				_tmp24_ = "Enabling";
#line 3428 "backend-store.c"
			} else {
#line 543 "/run/build/folks/folks/backend-store.vala"
				_tmp24_ = "Disabling";
#line 3432 "backend-store.c"
			}
#line 540 "/run/build/folks/folks/backend-store.vala"
			_tmp26_ = folks_backend_store_KEY_FILE_GROUP_ALL_OTHERS;
#line 540 "/run/build/folks/folks/backend-store.vala"
			g_debug ("Found no entry for backend '%s'.enabled in backend " "keyfile. %s according to '%s' setting.", name, _tmp24_, _tmp26_);
#line 545 "/run/build/folks/folks/backend-store.vala"
			_tmp27_ = all_others_enabled;
#line 545 "/run/build/folks/folks/backend-store.vala"
			enabled = _tmp27_;
#line 3442 "backend-store.c"
		} else {
			gboolean _tmp28_ = FALSE;
			GError* _tmp29_;
#line 547 "/run/build/folks/folks/backend-store.vala"
			_tmp29_ = e;
#line 547 "/run/build/folks/folks/backend-store.vala"
			if (!g_error_matches (_tmp29_, G_KEY_FILE_ERROR, G_KEY_FILE_ERROR_GROUP_NOT_FOUND)) {
#line 3450 "backend-store.c"
				GError* _tmp30_;
#line 548 "/run/build/folks/folks/backend-store.vala"
				_tmp30_ = e;
#line 548 "/run/build/folks/folks/backend-store.vala"
				_tmp28_ = !g_error_matches (_tmp30_, G_KEY_FILE_ERROR, G_KEY_FILE_ERROR_KEY_NOT_FOUND);
#line 3456 "backend-store.c"
			} else {
#line 547 "/run/build/folks/folks/backend-store.vala"
				_tmp28_ = FALSE;
#line 3460 "backend-store.c"
			}
#line 547 "/run/build/folks/folks/backend-store.vala"
			if (_tmp28_) {
#line 3464 "backend-store.c"
				GError* _tmp31_;
				const gchar* _tmp32_;
#line 550 "/run/build/folks/folks/backend-store.vala"
				_tmp31_ = e;
#line 550 "/run/build/folks/folks/backend-store.vala"
				_tmp32_ = _tmp31_->message;
#line 550 "/run/build/folks/folks/backend-store.vala"
				g_warning ("Couldn't check enabled state of backend '%s': %s\n" "Disabling backend.", name, _tmp32_);
#line 553 "/run/build/folks/folks/backend-store.vala"
				enabled = FALSE;
#line 3475 "backend-store.c"
			}
		}
#line 530 "/run/build/folks/folks/backend-store.vala"
		_g_error_free0 (e);
#line 3480 "backend-store.c"
	}
	__finally3:
#line 530 "/run/build/folks/folks/backend-store.vala"
	if (G_UNLIKELY (_inner_error_ != NULL)) {
#line 3485 "backend-store.c"
		gboolean _tmp33_ = FALSE;
#line 530 "/run/build/folks/folks/backend-store.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _inner_error_->message, g_quark_to_string (_inner_error_->domain), _inner_error_->code);
#line 530 "/run/build/folks/folks/backend-store.vala"
		g_clear_error (&_inner_error_);
#line 530 "/run/build/folks/folks/backend-store.vala"
		return _tmp33_;
#line 3493 "backend-store.c"
	}
#line 557 "/run/build/folks/folks/backend-store.vala"
	result = enabled;
#line 557 "/run/build/folks/folks/backend-store.vala"
	return result;
#line 3499 "backend-store.c"
}


/**
   * Get a backend from the store by name. If a backend is returned, its
   * reference count is increased.
   *
   * @param name the backend name to retrieve
   * @return the backend, or ``null`` if none could be found
   *
   * @since 0.3.5
   */
FolksBackend*
folks_backend_store_dup_backend_by_name (FolksBackendStore* self,
                                         const gchar* name)
{
	FolksBackend* result = NULL;
	GeeHashMap* _tmp0_;
	gpointer _tmp1_;
#line 569 "/run/build/folks/folks/backend-store.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 569 "/run/build/folks/folks/backend-store.vala"
	g_return_val_if_fail (name != NULL, NULL);
#line 571 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = self->priv->_backend_hash;
#line 571 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp0_, name);
#line 571 "/run/build/folks/folks/backend-store.vala"
	result = (FolksBackend*) _tmp1_;
#line 571 "/run/build/folks/folks/backend-store.vala"
	return result;
#line 3531 "backend-store.c"
}


/**
   * List the currently loaded backends.
   *
   * @return a list of the backends currently in the BackendStore
   */
GeeCollection*
folks_backend_store_list_backends (FolksBackendStore* self)
{
	GeeCollection* result = NULL;
	GeeHashMap* _tmp0_;
	GeeCollection* _tmp1_;
	GeeCollection* _tmp2_;
	GeeCollection* _tmp3_;
	GeeCollection* _tmp4_;
	GeeCollection* _tmp5_;
	GeeCollection* _tmp6_;
#line 579 "/run/build/folks/folks/backend-store.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 581 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = self->priv->_backend_hash;
#line 581 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = gee_abstract_map_get_values ((GeeAbstractMap*) _tmp0_);
#line 581 "/run/build/folks/folks/backend-store.vala"
	_tmp2_ = _tmp1_;
#line 581 "/run/build/folks/folks/backend-store.vala"
	_tmp3_ = _tmp2_;
#line 581 "/run/build/folks/folks/backend-store.vala"
	_tmp4_ = gee_collection_get_read_only_view (_tmp3_);
#line 581 "/run/build/folks/folks/backend-store.vala"
	_tmp5_ = _tmp4_;
#line 581 "/run/build/folks/folks/backend-store.vala"
	_tmp6_ = _tmp5_;
#line 581 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_tmp3_);
#line 581 "/run/build/folks/folks/backend-store.vala"
	result = _tmp6_;
#line 581 "/run/build/folks/folks/backend-store.vala"
	return result;
#line 3573 "backend-store.c"
}


static void
folks_backend_store_enable_backend_data_free (gpointer _data)
{
	FolksBackendStoreEnableBackendData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->name);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreEnableBackendData, _data_);
#line 3588 "backend-store.c"
}


static void
folks_backend_store_enable_backend_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	FolksBackendStoreEnableBackendData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 3604 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 3608 "backend-store.c"
}


void
folks_backend_store_enable_backend (FolksBackendStore* self,
                                    const gchar* name,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	FolksBackendStoreEnableBackendData* _data_;
	FolksBackendStore* _tmp0_;
	gchar* _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreEnableBackendData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_backend_store_enable_backend_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 3631 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_backend_store_enable_backend_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = g_strdup (name);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->name);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->name = _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_enable_backend_co (_data_);
#line 3647 "backend-store.c"
}


void
folks_backend_store_enable_backend_finish (FolksBackendStore* self,
                                           GAsyncResult* _res_)
{
	FolksBackendStoreEnableBackendData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 3658 "backend-store.c"
}


/**
   * Enable a backend.
   *
   * Mark a backend as enabled, such that the BackendStore will always attempt
   * to load it when {@link BackendStore.load_backends} is called. This will
   * not load the backend if it's not currently loaded.
   *
   * This method is safe to call multiple times concurrently (e.g. an
   * asynchronous call may begin after a previous asynchronous call for the same
   * backend name has begun and before it has finished).
   *
   * If the backend is disallowed by the FOLKS_BACKENDS_ALLOWED
   * and/or FOLKS_BACKENDS_DISABLED environment variables, this method
   * will store the fact that it should be enabled in future, but will
   * not enable it during this application run.
   *
   * @param name the name of the backend to enable
   * @since 0.3.2
   */
static void
folks_backend_store_enable_backend_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_)
{
	FolksBackendStoreEnableBackendData* _data_;
#line 606 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 606 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 606 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 606 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 606 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_enable_backend_co (_data_);
#line 3697 "backend-store.c"
}


static gboolean
folks_backend_store_enable_backend_co (FolksBackendStoreEnableBackendData* _data_)
{
#line 603 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 603 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 3708 "backend-store.c"
		goto _state_0;
#line 603 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 3712 "backend-store.c"
		goto _state_1;
		default:
#line 603 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 3717 "backend-store.c"
	}
	_state_0:
#line 605 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp0_ = _data_->self->priv->_backends_key_file;
#line 605 "/run/build/folks/folks/backend-store.vala"
	g_key_file_set_boolean (_data_->_tmp0_, _data_->name, "enabled", TRUE);
#line 606 "/run/build/folks/folks/backend-store.vala"
	_data_->_state_ = 1;
#line 606 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_save_key_file (_data_->self, folks_backend_store_enable_backend_ready, _data_);
#line 606 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 3730 "backend-store.c"
	_state_1:
#line 606 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_save_key_file_finish (_data_->self, _data_->_res_);
#line 603 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 603 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 603 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 603 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 3742 "backend-store.c"
		}
	}
#line 603 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 603 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 3749 "backend-store.c"
}


static void
folks_backend_store_disable_backend_data_free (gpointer _data)
{
	FolksBackendStoreDisableBackendData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->name);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreDisableBackendData, _data_);
#line 3764 "backend-store.c"
}


static void
folks_backend_store_disable_backend_async_ready_wrapper (GObject *source_object,
                                                         GAsyncResult *res,
                                                         void *user_data)
{
	FolksBackendStoreDisableBackendData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 3780 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 3784 "backend-store.c"
}


void
folks_backend_store_disable_backend (FolksBackendStore* self,
                                     const gchar* name,
                                     GAsyncReadyCallback _callback_,
                                     gpointer _user_data_)
{
	FolksBackendStoreDisableBackendData* _data_;
	FolksBackendStore* _tmp0_;
	gchar* _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreDisableBackendData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_backend_store_disable_backend_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 3807 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_backend_store_disable_backend_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = g_strdup (name);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->name);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->name = _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_disable_backend_co (_data_);
#line 3823 "backend-store.c"
}


void
folks_backend_store_disable_backend_finish (FolksBackendStore* self,
                                            GAsyncResult* _res_)
{
	FolksBackendStoreDisableBackendData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 3834 "backend-store.c"
}


/**
   * Disable a backend.
   *
   * Mark a backend as disabled, such that it won't be loaded even when the
   * client application is restarted. This will not remove the backend if it's
   * already loaded.
   *
   * This method is safe to call multiple times concurrently (e.g. an
   * asynchronous call may begin after a previous asynchronous call for the same
   * backend name has begun and before it has finished).
   *
   * @param name the name of the backend to disable
   * @since 0.3.2
   */
static void
folks_backend_store_disable_backend_ready (GObject* source_object,
                                           GAsyncResult* _res_,
                                           gpointer _user_data_)
{
	FolksBackendStoreDisableBackendData* _data_;
#line 626 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 626 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 626 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 626 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 626 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_disable_backend_co (_data_);
#line 3868 "backend-store.c"
}


static gboolean
folks_backend_store_disable_backend_co (FolksBackendStoreDisableBackendData* _data_)
{
#line 623 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 623 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 3879 "backend-store.c"
		goto _state_0;
#line 623 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 3883 "backend-store.c"
		goto _state_1;
		default:
#line 623 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 3888 "backend-store.c"
	}
	_state_0:
#line 625 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp0_ = _data_->self->priv->_backends_key_file;
#line 625 "/run/build/folks/folks/backend-store.vala"
	g_key_file_set_boolean (_data_->_tmp0_, _data_->name, "enabled", FALSE);
#line 626 "/run/build/folks/folks/backend-store.vala"
	_data_->_state_ = 1;
#line 626 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_save_key_file (_data_->self, folks_backend_store_disable_backend_ready, _data_);
#line 626 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 3901 "backend-store.c"
	_state_1:
#line 626 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_save_key_file_finish (_data_->self, _data_->_res_);
#line 623 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 623 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 623 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 623 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 3913 "backend-store.c"
		}
	}
#line 623 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 623 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 3920 "backend-store.c"
}


static void
_folks_backend_store_get_modules_from_dir_data_free (gpointer _data)
{
	FolksBackendStoreGetModulesFromDirData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->dir);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->result);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreGetModulesFromDirData, _data_);
#line 3937 "backend-store.c"
}


static void
_folks_backend_store_get_modules_from_dir_async_ready_wrapper (GObject *source_object,
                                                               GAsyncResult *res,
                                                               void *user_data)
{
	FolksBackendStoreGetModulesFromDirData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 3953 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 3957 "backend-store.c"
}


static void
_folks_backend_store_get_modules_from_dir (FolksBackendStore* self,
                                           GFile* dir,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_)
{
	FolksBackendStoreGetModulesFromDirData* _data_;
	FolksBackendStore* _tmp0_;
	GFile* _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreGetModulesFromDirData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, _folks_backend_store_get_modules_from_dir_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 3980 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, _folks_backend_store_get_modules_from_dir_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = _g_object_ref0 (dir);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->dir);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->dir = _tmp1_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_get_modules_from_dir_co (_data_);
#line 3996 "backend-store.c"
}


static GeeHashMap*
_folks_backend_store_get_modules_from_dir_finish (FolksBackendStore* self,
                                                  GAsyncResult* _res_)
{
	GeeHashMap* result;
	FolksBackendStoreGetModulesFromDirData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 38 "/run/build/folks/folks/backend-store.vala"
	result = _data_->result;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->result = NULL;
#line 38 "/run/build/folks/folks/backend-store.vala"
	return result;
#line 4014 "backend-store.c"
}


static void
_folks_backend_store_get_modules_from_dir_ready (GObject* source_object,
                                                 GAsyncResult* _res_,
                                                 gpointer _user_data_)
{
	FolksBackendStoreGetModulesFromDirData* _data_;
#line 644 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 644 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 644 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 644 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 644 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_get_modules_from_dir_co (_data_);
#line 4034 "backend-store.c"
}


static void
_g_object_unref0_ (gpointer var)
{
#line 648 "/run/build/folks/folks/backend-store.vala"
	(var == NULL) ? NULL : (var = (g_object_unref (var), NULL));
#line 4043 "backend-store.c"
}


static inline void
_g_list_free__g_object_unref0_ (GList* self)
{
#line 648 "/run/build/folks/folks/backend-store.vala"
	g_list_free_full (self, (GDestroyNotify) _g_object_unref0_);
#line 4052 "backend-store.c"
}


static gboolean
_folks_backend_store_get_modules_from_dir_co (FolksBackendStoreGetModulesFromDirData* _data_)
{
#line 630 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 630 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 4063 "backend-store.c"
		goto _state_0;
#line 630 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 4067 "backend-store.c"
		goto _state_1;
#line 630 "/run/build/folks/folks/backend-store.vala"
		case 2:
#line 4071 "backend-store.c"
		goto _state_2;
#line 630 "/run/build/folks/folks/backend-store.vala"
		case 3:
#line 4075 "backend-store.c"
		goto _state_3;
#line 630 "/run/build/folks/folks/backend-store.vala"
		case 4:
#line 4079 "backend-store.c"
		goto _state_4;
		default:
#line 630 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 4084 "backend-store.c"
	}
	_state_0:
#line 632 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp0_ = g_file_get_path (_data_->dir);
#line 632 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp1_ = _data_->_tmp0_;
#line 632 "/run/build/folks/folks/backend-store.vala"
	g_debug ("backend-store.vala:632: Searching for modules in folder '%s' ..", _data_->_tmp1_);
#line 632 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->_tmp1_);
#line 634 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp2_ = g_strdup (G_FILE_ATTRIBUTE_STANDARD_NAME "," G_FILE_ATTRIBUTE_STANDARD_TYPE "," G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK "," G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET "," G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE);
#line 634 "/run/build/folks/folks/backend-store.vala"
	_data_->attributes = _data_->_tmp2_;
#line 4099 "backend-store.c"
	{
#line 644 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp3_ = _data_->attributes;
#line 644 "/run/build/folks/folks/backend-store.vala"
		_data_->_state_ = 1;
#line 644 "/run/build/folks/folks/backend-store.vala"
		g_file_enumerate_children_async (_data_->dir, _data_->_tmp3_, G_FILE_QUERY_INFO_NONE, G_PRIORITY_DEFAULT, NULL, _folks_backend_store_get_modules_from_dir_ready, _data_);
#line 644 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 4109 "backend-store.c"
		_state_1:
#line 644 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp4_ = g_file_enumerate_children_finish (_data_->dir, _data_->_res_, &_data_->_inner_error_);
#line 644 "/run/build/folks/folks/backend-store.vala"
		_data_->enumerator = _data_->_tmp4_;
#line 644 "/run/build/folks/folks/backend-store.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 4117 "backend-store.c"
			goto __catch4_g_error;
		}
#line 648 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp6_ = _data_->enumerator;
#line 648 "/run/build/folks/folks/backend-store.vala"
		_data_->_state_ = 2;
#line 648 "/run/build/folks/folks/backend-store.vala"
		g_file_enumerator_next_files_async (_data_->_tmp6_, G_MAXINT, G_PRIORITY_DEFAULT, NULL, _folks_backend_store_get_modules_from_dir_ready, _data_);
#line 648 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 4128 "backend-store.c"
		_state_2:
#line 648 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp7_ = g_file_enumerator_next_files_finish (_data_->_tmp6_, _data_->_res_, &_data_->_inner_error_);
#line 648 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp5_ = _data_->_tmp7_;
#line 648 "/run/build/folks/folks/backend-store.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 648 "/run/build/folks/folks/backend-store.vala"
			_g_object_unref0 (_data_->enumerator);
#line 4138 "backend-store.c"
			goto __catch4_g_error;
		}
#line 648 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp8_ = _data_->_tmp5_;
#line 648 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp5_ = NULL;
#line 648 "/run/build/folks/folks/backend-store.vala"
		(_data_->infos == NULL) ? NULL : (_data_->infos = (_g_list_free__g_object_unref0_ (_data_->infos), NULL));
#line 648 "/run/build/folks/folks/backend-store.vala"
		_data_->infos = _data_->_tmp8_;
#line 642 "/run/build/folks/folks/backend-store.vala"
		(_data_->_tmp5_ == NULL) ? NULL : (_data_->_tmp5_ = (_g_list_free__g_object_unref0_ (_data_->_tmp5_), NULL));
#line 642 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->enumerator);
#line 4153 "backend-store.c"
	}
	goto __finally4;
	__catch4_g_error:
	{
#line 642 "/run/build/folks/folks/backend-store.vala"
		_data_->_error_ = _data_->_inner_error_;
#line 642 "/run/build/folks/folks/backend-store.vala"
		_data_->_inner_error_ = NULL;
#line 655 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp9_ = g_file_get_path (_data_->dir);
#line 655 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp10_ = _data_->_tmp9_;
#line 655 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp11_ = _data_->_error_;
#line 655 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp12_ = _data_->_tmp11_->message;
#line 655 "/run/build/folks/folks/backend-store.vala"
		g_critical (_ ("Error listing contents of folder ‘%s’: %s"), _data_->_tmp10_, _data_->_tmp12_);
#line 655 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->_tmp10_);
#line 658 "/run/build/folks/folks/backend-store.vala"
		_data_->result = NULL;
#line 658 "/run/build/folks/folks/backend-store.vala"
		_g_error_free0 (_data_->_error_);
#line 658 "/run/build/folks/folks/backend-store.vala"
		(_data_->infos == NULL) ? NULL : (_data_->infos = (_g_list_free__g_object_unref0_ (_data_->infos), NULL));
#line 658 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->attributes);
#line 658 "/run/build/folks/folks/backend-store.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 658 "/run/build/folks/folks/backend-store.vala"
		if (_data_->_state_ != 0) {
#line 658 "/run/build/folks/folks/backend-store.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 658 "/run/build/folks/folks/backend-store.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 4190 "backend-store.c"
			}
		}
#line 658 "/run/build/folks/folks/backend-store.vala"
		g_object_unref (_data_->_async_result);
#line 658 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 4197 "backend-store.c"
	}
	__finally4:
#line 642 "/run/build/folks/folks/backend-store.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 642 "/run/build/folks/folks/backend-store.vala"
		(_data_->infos == NULL) ? NULL : (_data_->infos = (_g_list_free__g_object_unref0_ (_data_->infos), NULL));
#line 642 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->attributes);
#line 642 "/run/build/folks/folks/backend-store.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 642 "/run/build/folks/folks/backend-store.vala"
		g_clear_error (&_data_->_inner_error_);
#line 642 "/run/build/folks/folks/backend-store.vala"
		g_object_unref (_data_->_async_result);
#line 642 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 4214 "backend-store.c"
	}
#line 661 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp13_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, g_file_get_type (), (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 661 "/run/build/folks/folks/backend-store.vala"
	_data_->modules_final = _data_->_tmp13_;
#line 663 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp14_ = g_getenv ("FOLKS_BACKEND_PATH");
#line 663 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp15_ = g_strdup (_data_->_tmp14_);
#line 663 "/run/build/folks/folks/backend-store.vala"
	_data_->_path = _data_->_tmp15_;
#line 664 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp16_ = _data_->infos;
#line 4228 "backend-store.c"
	{
#line 664 "/run/build/folks/folks/backend-store.vala"
		_data_->info_collection = _data_->_tmp16_;
#line 664 "/run/build/folks/folks/backend-store.vala"
		for (_data_->info_it = _data_->info_collection; _data_->info_it != NULL; _data_->info_it = _data_->info_it->next) {
#line 664 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp17_ = _g_object_ref0 ((GFileInfo*) _data_->info_it->data);
#line 664 "/run/build/folks/folks/backend-store.vala"
			_data_->info = _data_->_tmp17_;
#line 4238 "backend-store.c"
			{
#line 666 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp18_ = _data_->info;
#line 666 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp19_ = g_file_info_get_name (_data_->_tmp18_);
#line 666 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp20_ = g_file_get_child (_data_->dir, _data_->_tmp19_);
#line 666 "/run/build/folks/folks/backend-store.vala"
				_data_->file = _data_->_tmp20_;
#line 678 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp21_ = _data_->info;
#line 678 "/run/build/folks/folks/backend-store.vala"
				if (g_file_info_get_is_symlink (_data_->_tmp21_)) {
#line 680 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp22_ = _data_->file;
#line 680 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp23_ = g_file_get_path (_data_->_tmp22_);
#line 680 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp24_ = _data_->_tmp23_;
#line 680 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp25_ = _data_->info;
#line 680 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp26_ = g_file_info_get_symlink_target (_data_->_tmp25_);
#line 680 "/run/build/folks/folks/backend-store.vala"
					g_debug ("backend-store.vala:680: Handling symlink ‘%s’ to ‘%s’.", _data_->_tmp24_, _data_->_tmp26_);
#line 680 "/run/build/folks/folks/backend-store.vala"
					_g_free0 (_data_->_tmp24_);
#line 683 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp27_ = _data_->file;
#line 683 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp28_ = _g_object_ref0 (_data_->_tmp27_);
#line 683 "/run/build/folks/folks/backend-store.vala"
					_data_->old_file = _data_->_tmp28_;
#line 684 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp29_ = _data_->info;
#line 684 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp30_ = g_file_info_get_symlink_target (_data_->_tmp29_);
#line 684 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp31_ = g_file_resolve_relative_path (_data_->dir, _data_->_tmp30_);
#line 684 "/run/build/folks/folks/backend-store.vala"
					_g_object_unref0 (_data_->file);
#line 684 "/run/build/folks/folks/backend-store.vala"
					_data_->file = _data_->_tmp31_;
#line 4282 "backend-store.c"
					{
#line 689 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp33_ = _data_->file;
#line 689 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp34_ = _data_->attributes;
#line 689 "/run/build/folks/folks/backend-store.vala"
						_data_->_state_ = 3;
#line 689 "/run/build/folks/folks/backend-store.vala"
						g_file_query_info_async (_data_->_tmp33_, _data_->_tmp34_, G_FILE_QUERY_INFO_NONE, G_PRIORITY_DEFAULT, NULL, _folks_backend_store_get_modules_from_dir_ready, _data_);
#line 689 "/run/build/folks/folks/backend-store.vala"
						return FALSE;
#line 4294 "backend-store.c"
						_state_3:
#line 689 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp35_ = g_file_query_info_finish (_data_->_tmp33_, _data_->_res_, &_data_->_inner_error_);
#line 689 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp32_ = _data_->_tmp35_;
#line 689 "/run/build/folks/folks/backend-store.vala"
						if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 4302 "backend-store.c"
							goto __catch5_g_error;
						}
#line 688 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp36_ = _data_->_tmp32_;
#line 688 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp32_ = NULL;
#line 688 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->info);
#line 688 "/run/build/folks/folks/backend-store.vala"
						_data_->info = _data_->_tmp36_;
#line 686 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->_tmp32_);
#line 4315 "backend-store.c"
					}
					goto __finally5;
					__catch5_g_error:
					{
#line 686 "/run/build/folks/folks/backend-store.vala"
						_data_->_vala1__error_ = _data_->_inner_error_;
#line 686 "/run/build/folks/folks/backend-store.vala"
						_data_->_inner_error_ = NULL;
#line 696 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp37_ = _data_->file;
#line 696 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp38_ = g_file_get_path (_data_->_tmp37_);
#line 696 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp39_ = _data_->_tmp38_;
#line 696 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp40_ = _data_->old_file;
#line 696 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp41_ = g_file_get_path (_data_->_tmp40_);
#line 696 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp42_ = _data_->_tmp41_;
#line 696 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp43_ = _data_->_vala1__error_;
#line 696 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp44_ = _data_->_tmp43_->message;
#line 696 "/run/build/folks/folks/backend-store.vala"
						g_warning (_ ("Error querying info for target ‘%s’ of symlink ‘%s’: %s"), _data_->_tmp39_, _data_->_tmp42_, _data_->_tmp44_);
#line 696 "/run/build/folks/folks/backend-store.vala"
						_g_free0 (_data_->_tmp42_);
#line 696 "/run/build/folks/folks/backend-store.vala"
						_g_free0 (_data_->_tmp39_);
#line 699 "/run/build/folks/folks/backend-store.vala"
						_g_error_free0 (_data_->_vala1__error_);
#line 699 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->old_file);
#line 699 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->file);
#line 699 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->info);
#line 699 "/run/build/folks/folks/backend-store.vala"
						continue;
#line 4356 "backend-store.c"
					}
					__finally5:
#line 686 "/run/build/folks/folks/backend-store.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 686 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->old_file);
#line 686 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->file);
#line 686 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->info);
#line 686 "/run/build/folks/folks/backend-store.vala"
						_g_free0 (_data_->_path);
#line 686 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->modules_final);
#line 686 "/run/build/folks/folks/backend-store.vala"
						(_data_->infos == NULL) ? NULL : (_data_->infos = (_g_list_free__g_object_unref0_ (_data_->infos), NULL));
#line 686 "/run/build/folks/folks/backend-store.vala"
						_g_free0 (_data_->attributes);
#line 686 "/run/build/folks/folks/backend-store.vala"
						g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 686 "/run/build/folks/folks/backend-store.vala"
						g_clear_error (&_data_->_inner_error_);
#line 686 "/run/build/folks/folks/backend-store.vala"
						g_object_unref (_data_->_async_result);
#line 686 "/run/build/folks/folks/backend-store.vala"
						return FALSE;
#line 4383 "backend-store.c"
					}
#line 678 "/run/build/folks/folks/backend-store.vala"
					_g_object_unref0 (_data_->old_file);
#line 4387 "backend-store.c"
				}
#line 704 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp45_ = _data_->info;
#line 704 "/run/build/folks/folks/backend-store.vala"
				_data_->file_type = g_file_info_get_file_type (_data_->_tmp45_);
#line 705 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp46_ = _data_->info;
#line 705 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp47_ = g_file_info_get_content_type (_data_->_tmp46_);
#line 705 "/run/build/folks/folks/backend-store.vala"
				_data_->content_type = _data_->_tmp47_;
#line 707 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp48_ = _data_->content_type;
#line 707 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp49_ = g_content_type_get_mime_type (_data_->_tmp48_);
#line 707 "/run/build/folks/folks/backend-store.vala"
				_data_->mime = _data_->_tmp49_;
#line 709 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp50_ = _data_->file_type;
#line 709 "/run/build/folks/folks/backend-store.vala"
				if (_data_->_tmp50_ == G_FILE_TYPE_DIRECTORY) {
#line 711 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp51_ = _data_->file;
#line 711 "/run/build/folks/folks/backend-store.vala"
					_data_->_state_ = 4;
#line 711 "/run/build/folks/folks/backend-store.vala"
					_folks_backend_store_get_modules_from_dir (_data_->self, _data_->_tmp51_, _folks_backend_store_get_modules_from_dir_ready, _data_);
#line 711 "/run/build/folks/folks/backend-store.vala"
					return FALSE;
#line 4417 "backend-store.c"
					_state_4:
#line 711 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp52_ = _folks_backend_store_get_modules_from_dir_finish (_data_->self, _data_->_res_);
#line 711 "/run/build/folks/folks/backend-store.vala"
					_data_->modules = _data_->_tmp52_;
#line 712 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp53_ = _data_->modules;
#line 712 "/run/build/folks/folks/backend-store.vala"
					if (_data_->_tmp53_ != NULL) {
#line 4427 "backend-store.c"
						{
#line 714 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp54_ = _data_->modules;
#line 714 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp55_ = gee_abstract_map_get_entries ((GeeAbstractMap*) G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp54_, GEE_TYPE_HASH_MAP, GeeHashMap));
#line 714 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp56_ = _data_->_tmp55_;
#line 714 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp57_ = _data_->_tmp56_;
#line 714 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp58_ = gee_iterable_iterator ((GeeIterable*) _data_->_tmp57_);
#line 714 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp59_ = _data_->_tmp58_;
#line 714 "/run/build/folks/folks/backend-store.vala"
							_g_object_unref0 (_data_->_tmp57_);
#line 714 "/run/build/folks/folks/backend-store.vala"
							_data_->_entry_it = _data_->_tmp59_;
#line 714 "/run/build/folks/folks/backend-store.vala"
							while (TRUE) {
#line 714 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp60_ = _data_->_entry_it;
#line 714 "/run/build/folks/folks/backend-store.vala"
								if (!gee_iterator_next (_data_->_tmp60_)) {
#line 714 "/run/build/folks/folks/backend-store.vala"
									break;
#line 4453 "backend-store.c"
								}
#line 714 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp61_ = _data_->_entry_it;
#line 714 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp62_ = gee_iterator_get (_data_->_tmp61_);
#line 714 "/run/build/folks/folks/backend-store.vala"
								_data_->entry = (GeeMapEntry*) _data_->_tmp62_;
#line 716 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp63_ = _data_->modules_final;
#line 716 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp64_ = _data_->entry;
#line 716 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp65_ = gee_map_entry_get_key (_data_->_tmp64_);
#line 716 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp66_ = _data_->_tmp65_;
#line 716 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp67_ = _data_->entry;
#line 716 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp68_ = gee_map_entry_get_value (_data_->_tmp67_);
#line 716 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp69_ = _data_->_tmp68_;
#line 716 "/run/build/folks/folks/backend-store.vala"
								gee_abstract_map_set ((GeeAbstractMap*) _data_->_tmp63_, (const gchar*) _data_->_tmp66_, (GFile*) _data_->_tmp69_);
#line 714 "/run/build/folks/folks/backend-store.vala"
								_g_object_unref0 (_data_->entry);
#line 4479 "backend-store.c"
							}
#line 714 "/run/build/folks/folks/backend-store.vala"
							_g_object_unref0 (_data_->_entry_it);
#line 4483 "backend-store.c"
						}
					}
#line 709 "/run/build/folks/folks/backend-store.vala"
					_g_object_unref0 (_data_->modules);
#line 4488 "backend-store.c"
				} else {
#line 720 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp70_ = _data_->mime;
#line 720 "/run/build/folks/folks/backend-store.vala"
					if (g_strcmp0 (_data_->_tmp70_, "application/x-sharedlib") == 0) {
#line 722 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp71_ = _data_->file;
#line 722 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp72_ = g_file_get_path (_data_->_tmp71_);
#line 722 "/run/build/folks/folks/backend-store.vala"
						_data_->path = _data_->_tmp72_;
#line 723 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp73_ = _data_->path;
#line 723 "/run/build/folks/folks/backend-store.vala"
						if (_data_->_tmp73_ != NULL) {
#line 725 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp74_ = _data_->modules_final;
#line 725 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp75_ = _data_->path;
#line 725 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp76_ = _data_->file;
#line 725 "/run/build/folks/folks/backend-store.vala"
							gee_abstract_map_set ((GeeAbstractMap*) _data_->_tmp74_, (const gchar*) _data_->_tmp75_, _data_->_tmp76_);
#line 4512 "backend-store.c"
						}
#line 720 "/run/build/folks/folks/backend-store.vala"
						_g_free0 (_data_->path);
#line 4516 "backend-store.c"
					} else {
#line 728 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp77_ = _data_->mime;
#line 728 "/run/build/folks/folks/backend-store.vala"
						if (_data_->_tmp77_ == NULL) {
#line 730 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp78_ = _data_->file;
#line 730 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp79_ = g_file_get_path (_data_->_tmp78_);
#line 730 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp80_ = _data_->_tmp79_;
#line 730 "/run/build/folks/folks/backend-store.vala"
							g_warning ("backend-store.vala:730: The content type of '%s' could not be determin" \
"ed. Have you installed shared-mime-info?", _data_->_tmp80_);
#line 730 "/run/build/folks/folks/backend-store.vala"
							_g_free0 (_data_->_tmp80_);
#line 4532 "backend-store.c"
						} else {
#line 738 "/run/build/folks/folks/backend-store.vala"
							_data_->_tmp84_ = _data_->_path;
#line 738 "/run/build/folks/folks/backend-store.vala"
							if (_data_->_tmp84_ == NULL) {
#line 739 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp85_ = _data_->mime;
#line 739 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp83_ = g_strcmp0 (_data_->_tmp85_, "application/x-sharedlib") != 0;
#line 4542 "backend-store.c"
							} else {
#line 738 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp83_ = FALSE;
#line 4546 "backend-store.c"
							}
#line 738 "/run/build/folks/folks/backend-store.vala"
							if (_data_->_tmp83_) {
#line 740 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp86_ = _data_->mime;
#line 740 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp82_ = g_strcmp0 (_data_->_tmp86_, "application/x-shared-library-la") != 0;
#line 4554 "backend-store.c"
							} else {
#line 738 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp82_ = FALSE;
#line 4558 "backend-store.c"
							}
#line 738 "/run/build/folks/folks/backend-store.vala"
							if (_data_->_tmp82_) {
#line 741 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp87_ = _data_->mime;
#line 741 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp81_ = g_strcmp0 (_data_->_tmp87_, "inode/directory") != 0;
#line 4566 "backend-store.c"
							} else {
#line 738 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp81_ = FALSE;
#line 4570 "backend-store.c"
							}
#line 738 "/run/build/folks/folks/backend-store.vala"
							if (_data_->_tmp81_) {
#line 743 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp88_ = _data_->file;
#line 743 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp89_ = g_file_get_path (_data_->_tmp88_);
#line 743 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp90_ = _data_->_tmp89_;
#line 743 "/run/build/folks/folks/backend-store.vala"
								_data_->_tmp91_ = _data_->mime;
#line 743 "/run/build/folks/folks/backend-store.vala"
								g_warning ("backend-store.vala:743: The content type of '%s' appears to be '%s' wh" \
"ich looks suspicious. Have you installed shared-mime-info?", _data_->_tmp90_, _data_->_tmp91_);
#line 743 "/run/build/folks/folks/backend-store.vala"
								_g_free0 (_data_->_tmp90_);
#line 4586 "backend-store.c"
							}
						}
					}
				}
#line 664 "/run/build/folks/folks/backend-store.vala"
				_g_free0 (_data_->mime);
#line 664 "/run/build/folks/folks/backend-store.vala"
				_g_object_unref0 (_data_->file);
#line 664 "/run/build/folks/folks/backend-store.vala"
				_g_object_unref0 (_data_->info);
#line 4597 "backend-store.c"
			}
		}
	}
#line 747 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp92_ = g_file_get_path (_data_->dir);
#line 747 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp93_ = _data_->_tmp92_;
#line 747 "/run/build/folks/folks/backend-store.vala"
	g_debug ("backend-store.vala:747: Finished searching for modules in folder '%s'", _data_->_tmp93_);
#line 747 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->_tmp93_);
#line 750 "/run/build/folks/folks/backend-store.vala"
	_data_->result = _data_->modules_final;
#line 750 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->_path);
#line 750 "/run/build/folks/folks/backend-store.vala"
	(_data_->infos == NULL) ? NULL : (_data_->infos = (_g_list_free__g_object_unref0_ (_data_->infos), NULL));
#line 750 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->attributes);
#line 750 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 750 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 750 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 750 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 4625 "backend-store.c"
		}
	}
#line 750 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 750 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 4632 "backend-store.c"
}


static void
_folks_backend_store_load_module_from_file (FolksBackendStore* self,
                                            GFile* file)
{
	gchar* _file_path = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
	gchar* file_path = NULL;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	GeeHashMap* _tmp4_;
	const gchar* _tmp5_;
	GModule* _module = NULL;
	const gchar* _tmp6_;
	GModule* _tmp7_;
	GModule* _tmp8_;
	GModule* module = NULL;
	GModule* _tmp11_;
	void* function = NULL;
	GModule* _tmp12_;
	void* _tmp13_ = NULL;
	gboolean _tmp14_;
	FolksBackendStoreModuleInitFunc module_init = NULL;
	void* _tmp17_;
	FolksBackendStoreModuleInitFunc _tmp18_;
	GeeHashMap* _tmp19_;
	const gchar* _tmp20_;
	GModule* _tmp21_;
	GModule* _tmp22_;
	FolksBackendStoreModuleInitFunc _tmp23_;
	GModule* _tmp24_;
	const gchar* _tmp25_;
#line 753 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (self != NULL);
#line 753 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (file != NULL);
#line 755 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = g_file_get_path (file);
#line 755 "/run/build/folks/folks/backend-store.vala"
	_file_path = _tmp0_;
#line 756 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = _file_path;
#line 756 "/run/build/folks/folks/backend-store.vala"
	if (_tmp1_ == NULL) {
#line 758 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_file_path);
#line 758 "/run/build/folks/folks/backend-store.vala"
		return;
#line 4684 "backend-store.c"
	}
#line 760 "/run/build/folks/folks/backend-store.vala"
	_tmp2_ = _file_path;
#line 760 "/run/build/folks/folks/backend-store.vala"
	_tmp3_ = g_strdup ((const gchar*) _tmp2_);
#line 760 "/run/build/folks/folks/backend-store.vala"
	file_path = _tmp3_;
#line 762 "/run/build/folks/folks/backend-store.vala"
	_tmp4_ = self->priv->_modules;
#line 762 "/run/build/folks/folks/backend-store.vala"
	_tmp5_ = file_path;
#line 762 "/run/build/folks/folks/backend-store.vala"
	if (gee_abstract_map_has_key ((GeeAbstractMap*) _tmp4_, _tmp5_)) {
#line 763 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (file_path);
#line 763 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_file_path);
#line 763 "/run/build/folks/folks/backend-store.vala"
		return;
#line 4704 "backend-store.c"
	}
#line 765 "/run/build/folks/folks/backend-store.vala"
	_tmp6_ = file_path;
#line 765 "/run/build/folks/folks/backend-store.vala"
	_tmp7_ = g_module_open (_tmp6_, G_MODULE_BIND_LOCAL);
#line 765 "/run/build/folks/folks/backend-store.vala"
	_module = _tmp7_;
#line 766 "/run/build/folks/folks/backend-store.vala"
	_tmp8_ = _module;
#line 766 "/run/build/folks/folks/backend-store.vala"
	if (_tmp8_ == NULL) {
#line 4716 "backend-store.c"
		const gchar* _tmp9_;
		const gchar* _tmp10_;
#line 768 "/run/build/folks/folks/backend-store.vala"
		_tmp9_ = file_path;
#line 768 "/run/build/folks/folks/backend-store.vala"
		_tmp10_ = g_module_error ();
#line 768 "/run/build/folks/folks/backend-store.vala"
		g_warning ("backend-store.vala:768: Failed to load module from path '%s': %s", _tmp9_, _tmp10_);
#line 771 "/run/build/folks/folks/backend-store.vala"
		_g_module_close0 (_module);
#line 771 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (file_path);
#line 771 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_file_path);
#line 771 "/run/build/folks/folks/backend-store.vala"
		return;
#line 4733 "backend-store.c"
	}
#line 773 "/run/build/folks/folks/backend-store.vala"
	_tmp11_ = _module;
#line 773 "/run/build/folks/folks/backend-store.vala"
	module = (GModule*) _tmp11_;
#line 780 "/run/build/folks/folks/backend-store.vala"
	_tmp12_ = module;
#line 780 "/run/build/folks/folks/backend-store.vala"
	_tmp14_ = g_module_symbol (_tmp12_, "module_init", &_tmp13_);
#line 780 "/run/build/folks/folks/backend-store.vala"
	function = _tmp13_;
#line 780 "/run/build/folks/folks/backend-store.vala"
	if (!_tmp14_) {
#line 4747 "backend-store.c"
		const gchar* _tmp15_;
		const gchar* _tmp16_;
#line 782 "/run/build/folks/folks/backend-store.vala"
		_tmp15_ = file_path;
#line 782 "/run/build/folks/folks/backend-store.vala"
		_tmp16_ = g_module_error ();
#line 782 "/run/build/folks/folks/backend-store.vala"
		g_warning ("backend-store.vala:782: Failed to find entry point function '%s' in '%" \
"s': %s", "module_init", _tmp15_, _tmp16_);
#line 787 "/run/build/folks/folks/backend-store.vala"
		_g_module_close0 (_module);
#line 787 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (file_path);
#line 787 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_file_path);
#line 787 "/run/build/folks/folks/backend-store.vala"
		return;
#line 4764 "backend-store.c"
	}
#line 790 "/run/build/folks/folks/backend-store.vala"
	_tmp17_ = function;
#line 790 "/run/build/folks/folks/backend-store.vala"
	module_init = (FolksBackendStoreModuleInitFunc) _tmp17_;
#line 791 "/run/build/folks/folks/backend-store.vala"
	_tmp18_ = module_init;
#line 791 "/run/build/folks/folks/backend-store.vala"
	_vala_assert (_tmp18_ != NULL, "module_init != null");
#line 793 "/run/build/folks/folks/backend-store.vala"
	_tmp19_ = self->priv->_modules;
#line 793 "/run/build/folks/folks/backend-store.vala"
	_tmp20_ = file_path;
#line 793 "/run/build/folks/folks/backend-store.vala"
	_tmp21_ = module;
#line 793 "/run/build/folks/folks/backend-store.vala"
	gee_abstract_map_set ((GeeAbstractMap*) _tmp19_, _tmp20_, _tmp21_);
#line 796 "/run/build/folks/folks/backend-store.vala"
	_tmp22_ = module;
#line 796 "/run/build/folks/folks/backend-store.vala"
	g_module_make_resident (_tmp22_);
#line 798 "/run/build/folks/folks/backend-store.vala"
	_tmp23_ = module_init;
#line 798 "/run/build/folks/folks/backend-store.vala"
	_tmp23_ (self);
#line 800 "/run/build/folks/folks/backend-store.vala"
	_tmp24_ = module;
#line 800 "/run/build/folks/folks/backend-store.vala"
	_tmp25_ = g_module_name (_tmp24_);
#line 800 "/run/build/folks/folks/backend-store.vala"
	g_debug ("backend-store.vala:800: Loaded module source: '%s'", _tmp25_);
#line 753 "/run/build/folks/folks/backend-store.vala"
	_g_module_close0 (_module);
#line 753 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (file_path);
#line 753 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_file_path);
#line 4802 "backend-store.c"
}


static void
_folks_backend_store_get_file_info_data_free (gpointer _data)
{
	FolksBackendStoreGetFileInfoData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->file);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreGetFileInfoData, _data_);
#line 4815 "backend-store.c"
}


static void
_folks_backend_store_get_file_info_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	FolksBackendStoreGetFileInfoData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 4831 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 4835 "backend-store.c"
}


static void
_folks_backend_store_get_file_info (GFile* file,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	FolksBackendStoreGetFileInfoData* _data_;
	GFile* _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreGetFileInfoData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (NULL, NULL, _folks_backend_store_get_file_info_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 4856 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, _folks_backend_store_get_file_info_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (file);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->file);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->file = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_get_file_info_co (_data_);
#line 4868 "backend-store.c"
}


static void
_folks_backend_store_get_file_info_finish (GAsyncResult* _res_,
                                           gboolean* is_file,
                                           gboolean* is_dir)
{
	FolksBackendStoreGetFileInfoData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (is_file) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		*is_file = _data_->is_file;
#line 4884 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (is_dir) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		*is_dir = _data_->is_dir;
#line 4890 "backend-store.c"
	}
}


static void
_folks_backend_store_get_file_info_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_)
{
	FolksBackendStoreGetFileInfoData* _data_;
#line 816 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 816 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 816 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 816 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 816 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_get_file_info_co (_data_);
#line 4911 "backend-store.c"
}


static gboolean
_folks_backend_store_get_file_info_co (FolksBackendStoreGetFileInfoData* _data_)
{
#line 804 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 804 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 4922 "backend-store.c"
		goto _state_0;
#line 804 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 4926 "backend-store.c"
		goto _state_1;
		default:
#line 804 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 4931 "backend-store.c"
	}
	_state_0:
#line 809 "/run/build/folks/folks/backend-store.vala"
	_data_->is_file = FALSE;
#line 810 "/run/build/folks/folks/backend-store.vala"
	_data_->is_dir = FALSE;
#line 4938 "backend-store.c"
	{
#line 816 "/run/build/folks/folks/backend-store.vala"
		_data_->_state_ = 1;
#line 816 "/run/build/folks/folks/backend-store.vala"
		g_file_query_info_async (_data_->file, G_FILE_ATTRIBUTE_STANDARD_TYPE, G_FILE_QUERY_INFO_NONE, G_PRIORITY_DEFAULT, NULL, _folks_backend_store_get_file_info_ready, _data_);
#line 816 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 4946 "backend-store.c"
		_state_1:
#line 816 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp1_ = g_file_query_info_finish (_data_->file, _data_->_res_, &_data_->_inner_error_);
#line 816 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp0_ = _data_->_tmp1_;
#line 816 "/run/build/folks/folks/backend-store.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 4954 "backend-store.c"
			goto __catch6_g_error;
		}
#line 816 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp2_ = _data_->_tmp0_;
#line 816 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp0_ = NULL;
#line 816 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->file_info);
#line 816 "/run/build/folks/folks/backend-store.vala"
		_data_->file_info = _data_->_tmp2_;
#line 812 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->_tmp0_);
#line 4967 "backend-store.c"
	}
	goto __finally6;
	__catch6_g_error:
	{
#line 812 "/run/build/folks/folks/backend-store.vala"
		_data_->_error_ = _data_->_inner_error_;
#line 812 "/run/build/folks/folks/backend-store.vala"
		_data_->_inner_error_ = NULL;
#line 821 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp3_ = _data_->_error_;
#line 821 "/run/build/folks/folks/backend-store.vala"
		if (g_error_matches (_data_->_tmp3_, G_IO_ERROR, G_IO_ERROR_NOT_FOUND)) {
#line 824 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp4_ = g_file_get_path (_data_->file);
#line 824 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp5_ = _data_->_tmp4_;
#line 824 "/run/build/folks/folks/backend-store.vala"
			g_critical (_ ("File or directory ‘%s’ does not exist."), _data_->_tmp5_);
#line 824 "/run/build/folks/folks/backend-store.vala"
			_g_free0 (_data_->_tmp5_);
#line 4988 "backend-store.c"
		} else {
#line 830 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp6_ = g_file_get_path (_data_->file);
#line 830 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp7_ = _data_->_tmp6_;
#line 830 "/run/build/folks/folks/backend-store.vala"
			g_critical (_ ("Failed to get content type for ‘%s’."), _data_->_tmp7_);
#line 830 "/run/build/folks/folks/backend-store.vala"
			_g_free0 (_data_->_tmp7_);
#line 4998 "backend-store.c"
		}
#line 834 "/run/build/folks/folks/backend-store.vala"
		_g_error_free0 (_data_->_error_);
#line 834 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->file_info);
#line 834 "/run/build/folks/folks/backend-store.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 834 "/run/build/folks/folks/backend-store.vala"
		if (_data_->_state_ != 0) {
#line 834 "/run/build/folks/folks/backend-store.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 834 "/run/build/folks/folks/backend-store.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 5012 "backend-store.c"
			}
		}
#line 834 "/run/build/folks/folks/backend-store.vala"
		g_object_unref (_data_->_async_result);
#line 834 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 5019 "backend-store.c"
	}
	__finally6:
#line 812 "/run/build/folks/folks/backend-store.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 812 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->file_info);
#line 812 "/run/build/folks/folks/backend-store.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 812 "/run/build/folks/folks/backend-store.vala"
		g_clear_error (&_data_->_inner_error_);
#line 812 "/run/build/folks/folks/backend-store.vala"
		g_object_unref (_data_->_async_result);
#line 812 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 5034 "backend-store.c"
	}
#line 837 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp8_ = _data_->file_info;
#line 837 "/run/build/folks/folks/backend-store.vala"
	_data_->is_file = g_file_info_get_file_type (_data_->_tmp8_) == G_FILE_TYPE_REGULAR;
#line 838 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp9_ = _data_->file_info;
#line 838 "/run/build/folks/folks/backend-store.vala"
	_data_->is_dir = g_file_info_get_file_type (_data_->_tmp9_) == G_FILE_TYPE_DIRECTORY;
#line 804 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->file_info);
#line 804 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 804 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 804 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 804 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 5054 "backend-store.c"
		}
	}
#line 804 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 804 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 5061 "backend-store.c"
}


static void
_folks_backend_store_load_disabled_backend_names_data_free (gpointer _data)
{
	FolksBackendStoreLoadDisabledBackendNamesData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreLoadDisabledBackendNamesData, _data_);
#line 5074 "backend-store.c"
}


static void
_folks_backend_store_load_disabled_backend_names_async_ready_wrapper (GObject *source_object,
                                                                      GAsyncResult *res,
                                                                      void *user_data)
{
	FolksBackendStoreLoadDisabledBackendNamesData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 5090 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 5094 "backend-store.c"
}


static void
_folks_backend_store_load_disabled_backend_names (FolksBackendStore* self,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_)
{
	FolksBackendStoreLoadDisabledBackendNamesData* _data_;
	FolksBackendStore* _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreLoadDisabledBackendNamesData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, _folks_backend_store_load_disabled_backend_names_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 5115 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, _folks_backend_store_load_disabled_backend_names_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_load_disabled_backend_names_co (_data_);
#line 5125 "backend-store.c"
}


static void
_folks_backend_store_load_disabled_backend_names_finish (FolksBackendStore* self,
                                                         GAsyncResult* _res_)
{
	FolksBackendStoreLoadDisabledBackendNamesData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 5136 "backend-store.c"
}


static void
_folks_backend_store_load_disabled_backend_names_ready (GObject* source_object,
                                                        GAsyncResult* _res_,
                                                        gpointer _user_data_)
{
	FolksBackendStoreLoadDisabledBackendNamesData* _data_;
#line 933 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 933 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 933 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 933 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 933 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_load_disabled_backend_names_co (_data_);
#line 5156 "backend-store.c"
}


static gboolean
_folks_backend_store_load_disabled_backend_names_co (FolksBackendStoreLoadDisabledBackendNamesData* _data_)
{
#line 842 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 842 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 5167 "backend-store.c"
		goto _state_0;
#line 842 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 5171 "backend-store.c"
		goto _state_1;
		default:
#line 842 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 5176 "backend-store.c"
	}
	_state_0:
#line 851 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp0_ = g_getenv ("FOLKS_BACKENDS_ALLOWED");
#line 851 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp1_ = g_strdup (_data_->_tmp0_);
#line 851 "/run/build/folks/folks/backend-store.vala"
	_data_->envvar = _data_->_tmp1_;
#line 853 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp2_ = _data_->envvar;
#line 853 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_tmp2_ != NULL) {
#line 857 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp3_ = _data_->envvar;
#line 857 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp5_ = _data_->_tmp4_ = g_strsplit_set (_data_->_tmp3_, " ,:", 0);
#line 857 "/run/build/folks/folks/backend-store.vala"
		_data_->tokens = _data_->_tmp5_;
#line 857 "/run/build/folks/folks/backend-store.vala"
		_data_->tokens_length1 = _vala_array_length (_data_->_tmp4_);
#line 857 "/run/build/folks/folks/backend-store.vala"
		_data_->_tokens_size_ = _data_->tokens_length1;
#line 859 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp6_ = folks_small_set_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, NULL, NULL, NULL, NULL, NULL, NULL);
#line 859 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->self->priv->_backends_allowed);
#line 859 "/run/build/folks/folks/backend-store.vala"
		_data_->self->priv->_backends_allowed = _data_->_tmp6_;
#line 861 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp7_ = _data_->tokens;
#line 861 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp7__length1 = _data_->tokens_length1;
#line 5209 "backend-store.c"
		{
#line 861 "/run/build/folks/folks/backend-store.vala"
			_data_->s_collection_length1 = 0;
#line 861 "/run/build/folks/folks/backend-store.vala"
			_data_->_s_collection_size_ = 0;
#line 861 "/run/build/folks/folks/backend-store.vala"
			_data_->s_collection = _data_->_tmp7_;
#line 861 "/run/build/folks/folks/backend-store.vala"
			_data_->s_collection_length1 = _data_->_tmp7__length1;
#line 861 "/run/build/folks/folks/backend-store.vala"
			for (_data_->s_it = 0; _data_->s_it < _data_->_tmp7__length1; _data_->s_it = _data_->s_it + 1) {
#line 861 "/run/build/folks/folks/backend-store.vala"
				_data_->s = _data_->s_collection[_data_->s_it];
#line 5223 "backend-store.c"
				{
#line 863 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp8_ = _data_->s;
#line 863 "/run/build/folks/folks/backend-store.vala"
					if (g_strcmp0 (_data_->_tmp8_, "all") == 0) {
#line 865 "/run/build/folks/folks/backend-store.vala"
						_g_object_unref0 (_data_->self->priv->_backends_allowed);
#line 865 "/run/build/folks/folks/backend-store.vala"
						_data_->self->priv->_backends_allowed = NULL;
#line 866 "/run/build/folks/folks/backend-store.vala"
						break;
#line 5235 "backend-store.c"
					}
#line 869 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp9_ = _data_->s;
#line 869 "/run/build/folks/folks/backend-store.vala"
					if (g_strcmp0 (_data_->_tmp9_, "") != 0) {
#line 870 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp10_ = _data_->self->priv->_backends_allowed;
#line 870 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp11_ = _data_->s;
#line 870 "/run/build/folks/folks/backend-store.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _data_->_tmp10_, _data_->_tmp11_);
#line 5247 "backend-store.c"
					}
				}
			}
		}
#line 873 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp12_ = _data_->self->priv->_backends_allowed;
#line 873 "/run/build/folks/folks/backend-store.vala"
		if (_data_->_tmp12_ != NULL) {
#line 875 "/run/build/folks/folks/backend-store.vala"
			g_debug ("backend-store.vala:875: Backends limited by FOLKS_BACKENDS_ALLOWED:");
#line 877 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp13_ = _data_->tokens;
#line 877 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp13__length1 = _data_->tokens_length1;
#line 5262 "backend-store.c"
			{
#line 877 "/run/build/folks/folks/backend-store.vala"
				_data_->_vala1_s_collection_length1 = 0;
#line 877 "/run/build/folks/folks/backend-store.vala"
				_data_->__vala1_s_collection_size_ = 0;
#line 877 "/run/build/folks/folks/backend-store.vala"
				_data_->_vala1_s_collection = _data_->_tmp13_;
#line 877 "/run/build/folks/folks/backend-store.vala"
				_data_->_vala1_s_collection_length1 = _data_->_tmp13__length1;
#line 877 "/run/build/folks/folks/backend-store.vala"
				for (_data_->_vala1_s_it = 0; _data_->_vala1_s_it < _data_->_tmp13__length1; _data_->_vala1_s_it = _data_->_vala1_s_it + 1) {
#line 877 "/run/build/folks/folks/backend-store.vala"
					_data_->_vala1_s = _data_->_vala1_s_collection[_data_->_vala1_s_it];
#line 5276 "backend-store.c"
					{
#line 878 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp14_ = _data_->_vala1_s;
#line 878 "/run/build/folks/folks/backend-store.vala"
						g_debug ("backend-store.vala:878: Backend '%s' is allowed", _data_->_tmp14_);
#line 5282 "backend-store.c"
					}
				}
			}
#line 880 "/run/build/folks/folks/backend-store.vala"
			g_debug ("backend-store.vala:880: All other backends disabled by FOLKS_BACKENDS_" \
"ALLOWED");
#line 5288 "backend-store.c"
		}
#line 853 "/run/build/folks/folks/backend-store.vala"
		_data_->tokens = (_vala_array_free (_data_->tokens, _data_->tokens_length1, (GDestroyNotify) g_free), NULL);
#line 5292 "backend-store.c"
	}
#line 886 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp15_ = g_getenv ("FOLKS_BACKENDS_DISABLED");
#line 886 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp16_ = g_strdup (_data_->_tmp15_);
#line 886 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->envvar);
#line 886 "/run/build/folks/folks/backend-store.vala"
	_data_->envvar = _data_->_tmp16_;
#line 888 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp17_ = _data_->envvar;
#line 888 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_tmp17_ != NULL) {
#line 890 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp18_ = _data_->envvar;
#line 890 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp20_ = _data_->_tmp19_ = g_strsplit_set (_data_->_tmp18_, " ,:", 0);
#line 890 "/run/build/folks/folks/backend-store.vala"
		_data_->_vala1_tokens = _data_->_tmp20_;
#line 890 "/run/build/folks/folks/backend-store.vala"
		_data_->_vala1_tokens_length1 = _vala_array_length (_data_->_tmp19_);
#line 890 "/run/build/folks/folks/backend-store.vala"
		_data_->__vala1_tokens_size_ = _data_->_vala1_tokens_length1;
#line 892 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp21_ = folks_small_set_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, NULL, NULL, NULL, NULL, NULL, NULL);
#line 892 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->self->priv->_backends_disabled);
#line 892 "/run/build/folks/folks/backend-store.vala"
		_data_->self->priv->_backends_disabled = _data_->_tmp21_;
#line 894 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp22_ = _data_->_vala1_tokens;
#line 894 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp22__length1 = _data_->_vala1_tokens_length1;
#line 5326 "backend-store.c"
		{
#line 894 "/run/build/folks/folks/backend-store.vala"
			_data_->_vala2_s_collection_length1 = 0;
#line 894 "/run/build/folks/folks/backend-store.vala"
			_data_->__vala2_s_collection_size_ = 0;
#line 894 "/run/build/folks/folks/backend-store.vala"
			_data_->_vala2_s_collection = _data_->_tmp22_;
#line 894 "/run/build/folks/folks/backend-store.vala"
			_data_->_vala2_s_collection_length1 = _data_->_tmp22__length1;
#line 894 "/run/build/folks/folks/backend-store.vala"
			for (_data_->_vala2_s_it = 0; _data_->_vala2_s_it < _data_->_tmp22__length1; _data_->_vala2_s_it = _data_->_vala2_s_it + 1) {
#line 894 "/run/build/folks/folks/backend-store.vala"
				_data_->_vala2_s = _data_->_vala2_s_collection[_data_->_vala2_s_it];
#line 5340 "backend-store.c"
				{
#line 896 "/run/build/folks/folks/backend-store.vala"
					_data_->_tmp23_ = _data_->_vala2_s;
#line 896 "/run/build/folks/folks/backend-store.vala"
					if (g_strcmp0 (_data_->_tmp23_, "") != 0) {
#line 898 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp24_ = _data_->_vala2_s;
#line 898 "/run/build/folks/folks/backend-store.vala"
						g_debug ("backend-store.vala:898: Backend '%s' disabled by FOLKS_BACKENDS_DISABL" \
"ED", _data_->_tmp24_);
#line 899 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp25_ = _data_->self->priv->_backends_disabled;
#line 899 "/run/build/folks/folks/backend-store.vala"
						_data_->_tmp26_ = _data_->_vala2_s;
#line 899 "/run/build/folks/folks/backend-store.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _data_->_tmp25_, _data_->_tmp26_);
#line 5356 "backend-store.c"
					}
				}
			}
		}
#line 888 "/run/build/folks/folks/backend-store.vala"
		_data_->_vala1_tokens = (_vala_array_free (_data_->_vala1_tokens, _data_->_vala1_tokens_length1, (GDestroyNotify) g_free), NULL);
#line 5363 "backend-store.c"
	}
#line 905 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp27_ = g_getenv ("FOLKS_BACKEND_STORE_KEY_FILE_PATH");
#line 905 "/run/build/folks/folks/backend-store.vala"
	_data_->path = _data_->_tmp27_;
#line 907 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp28_ = _data_->path;
#line 907 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_tmp28_ == NULL) {
#line 909 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp29_ = g_get_user_data_dir ();
#line 909 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp30_ = g_file_new_for_path (_data_->_tmp29_);
#line 909 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->file);
#line 909 "/run/build/folks/folks/backend-store.vala"
		_data_->file = _data_->_tmp30_;
#line 910 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp31_ = _data_->file;
#line 910 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp32_ = g_file_get_child (_data_->_tmp31_, "folks");
#line 910 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->file);
#line 910 "/run/build/folks/folks/backend-store.vala"
		_data_->file = _data_->_tmp32_;
#line 911 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp33_ = _data_->file;
#line 911 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp34_ = g_file_get_child (_data_->_tmp33_, "backends.ini");
#line 911 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->file);
#line 911 "/run/build/folks/folks/backend-store.vala"
		_data_->file = _data_->_tmp34_;
#line 913 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp35_ = _data_->file;
#line 913 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp36_ = g_file_get_path (_data_->_tmp35_);
#line 913 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp37_ = _data_->_tmp36_;
#line 913 "/run/build/folks/folks/backend-store.vala"
		g_debug ("Using built-in backends key file '%s' (override with " "environment variable FOLKS_BACKEND_STORE_KEY_FILE_PATH)", _data_->_tmp37_);
#line 913 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->_tmp37_);
#line 5407 "backend-store.c"
	} else {
#line 919 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp38_ = _data_->path;
#line 919 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp39_ = g_file_new_for_path ((const gchar*) _data_->_tmp38_);
#line 919 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->file);
#line 919 "/run/build/folks/folks/backend-store.vala"
		_data_->file = _data_->_tmp39_;
#line 920 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp40_ = _data_->path;
#line 920 "/run/build/folks/folks/backend-store.vala"
		g_debug ("Using environment variable " "FOLKS_BACKEND_STORE_KEY_FILE_PATH = '%s' to load the backends " "key file.", (const gchar*) _data_->_tmp40_);
#line 5421 "backend-store.c"
	}
#line 925 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp41_ = _data_->file;
#line 925 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp42_ = _g_object_ref0 (_data_->_tmp41_);
#line 925 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self->priv->_config_file);
#line 925 "/run/build/folks/folks/backend-store.vala"
	_data_->self->priv->_config_file = _data_->_tmp42_;
#line 928 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp43_ = g_key_file_new ();
#line 928 "/run/build/folks/folks/backend-store.vala"
	_data_->key_file = _data_->_tmp43_;
#line 5435 "backend-store.c"
	{
#line 931 "/run/build/folks/folks/backend-store.vala"
		_data_->contents_length1 = 0;
#line 931 "/run/build/folks/folks/backend-store.vala"
		_data_->_contents_size_ = 0;
#line 933 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp44_ = _data_->file;
#line 933 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp45_ = NULL;
#line 933 "/run/build/folks/folks/backend-store.vala"
		_data_->_state_ = 1;
#line 933 "/run/build/folks/folks/backend-store.vala"
		g_file_load_contents_async (_data_->_tmp44_, NULL, _folks_backend_store_load_disabled_backend_names_ready, _data_);
#line 933 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 5451 "backend-store.c"
		_state_1:
#line 933 "/run/build/folks/folks/backend-store.vala"
		g_file_load_contents_finish (_data_->_tmp44_, _data_->_res_, &_data_->_tmp45_, &_data_->_tmp46_, NULL, &_data_->_inner_error_);
#line 933 "/run/build/folks/folks/backend-store.vala"
		_data_->contents = (g_free (_data_->contents), NULL);
#line 933 "/run/build/folks/folks/backend-store.vala"
		_data_->contents = _data_->_tmp45_;
#line 933 "/run/build/folks/folks/backend-store.vala"
		_data_->contents_length1 = _data_->_tmp46_;
#line 933 "/run/build/folks/folks/backend-store.vala"
		_data_->_contents_size_ = _data_->contents_length1;
#line 933 "/run/build/folks/folks/backend-store.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 933 "/run/build/folks/folks/backend-store.vala"
			_data_->contents = (g_free (_data_->contents), NULL);
#line 5467 "backend-store.c"
			goto __catch7_g_error;
		}
#line 934 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp47_ = _data_->contents;
#line 934 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp47__length1 = _data_->contents_length1;
#line 934 "/run/build/folks/folks/backend-store.vala"
		_data_->contents_s = (const gchar*) _data_->_tmp47_;
#line 936 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp48_ = _data_->contents_s;
#line 936 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp49_ = strlen (_data_->_tmp48_);
#line 936 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp50_ = _data_->_tmp49_;
#line 936 "/run/build/folks/folks/backend-store.vala"
		if (_data_->_tmp50_ > 0) {
#line 938 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp51_ = _data_->key_file;
#line 938 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp52_ = _data_->contents_s;
#line 938 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp53_ = _data_->contents_s;
#line 938 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp54_ = strlen (_data_->_tmp53_);
#line 938 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp55_ = _data_->_tmp54_;
#line 938 "/run/build/folks/folks/backend-store.vala"
			g_key_file_load_from_data (_data_->_tmp51_, _data_->_tmp52_, (gsize) _data_->_tmp55_, G_KEY_FILE_KEEP_COMMENTS, &_data_->_inner_error_);
#line 938 "/run/build/folks/folks/backend-store.vala"
			if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 938 "/run/build/folks/folks/backend-store.vala"
				_data_->contents = (g_free (_data_->contents), NULL);
#line 5500 "backend-store.c"
				goto __catch7_g_error;
			}
		}
#line 929 "/run/build/folks/folks/backend-store.vala"
		_data_->contents = (g_free (_data_->contents), NULL);
#line 5506 "backend-store.c"
	}
	goto __finally7;
	__catch7_g_error:
	{
#line 929 "/run/build/folks/folks/backend-store.vala"
		_data_->e1 = _data_->_inner_error_;
#line 929 "/run/build/folks/folks/backend-store.vala"
		_data_->_inner_error_ = NULL;
#line 944 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp56_ = _data_->e1;
#line 944 "/run/build/folks/folks/backend-store.vala"
		if (!g_error_matches (_data_->_tmp56_, G_IO_ERROR, G_IO_ERROR_NOT_FOUND)) {
#line 946 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp57_ = _data_->file;
#line 946 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp58_ = g_file_get_path (_data_->_tmp57_);
#line 946 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp59_ = _data_->_tmp58_;
#line 946 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp60_ = _data_->e1;
#line 946 "/run/build/folks/folks/backend-store.vala"
			_data_->_tmp61_ = _data_->_tmp60_->message;
#line 946 "/run/build/folks/folks/backend-store.vala"
			g_warning ("backend-store.vala:946: The backends key file '%s' could not be loaded" \
": %s", _data_->_tmp59_, _data_->_tmp61_);
#line 946 "/run/build/folks/folks/backend-store.vala"
			_g_free0 (_data_->_tmp59_);
#line 948 "/run/build/folks/folks/backend-store.vala"
			_g_error_free0 (_data_->e1);
#line 5535 "backend-store.c"
			{
#line 955 "/run/build/folks/folks/backend-store.vala"
				_data_->_tmp62_ = _data_->key_file;
#line 955 "/run/build/folks/folks/backend-store.vala"
				_data_->key_file = NULL;
#line 955 "/run/build/folks/folks/backend-store.vala"
				_g_key_file_unref0 (_data_->self->priv->_backends_key_file);
#line 955 "/run/build/folks/folks/backend-store.vala"
				_data_->self->priv->_backends_key_file = _data_->_tmp62_;
#line 5545 "backend-store.c"
			}
#line 948 "/run/build/folks/folks/backend-store.vala"
			_g_key_file_unref0 (_data_->key_file);
#line 948 "/run/build/folks/folks/backend-store.vala"
			_g_object_unref0 (_data_->file);
#line 948 "/run/build/folks/folks/backend-store.vala"
			_g_free0 (_data_->envvar);
#line 948 "/run/build/folks/folks/backend-store.vala"
			g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 948 "/run/build/folks/folks/backend-store.vala"
			if (_data_->_state_ != 0) {
#line 948 "/run/build/folks/folks/backend-store.vala"
				while (_data_->_task_complete_ != TRUE) {
#line 948 "/run/build/folks/folks/backend-store.vala"
					g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 5561 "backend-store.c"
				}
			}
#line 948 "/run/build/folks/folks/backend-store.vala"
			g_object_unref (_data_->_async_result);
#line 948 "/run/build/folks/folks/backend-store.vala"
			return FALSE;
#line 5568 "backend-store.c"
		}
#line 929 "/run/build/folks/folks/backend-store.vala"
		_g_error_free0 (_data_->e1);
#line 5572 "backend-store.c"
	}
	__finally7:
	{
#line 955 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp63_ = _data_->key_file;
#line 955 "/run/build/folks/folks/backend-store.vala"
		_data_->key_file = NULL;
#line 955 "/run/build/folks/folks/backend-store.vala"
		_g_key_file_unref0 (_data_->self->priv->_backends_key_file);
#line 955 "/run/build/folks/folks/backend-store.vala"
		_data_->self->priv->_backends_key_file = _data_->_tmp63_;
#line 5584 "backend-store.c"
	}
#line 929 "/run/build/folks/folks/backend-store.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 929 "/run/build/folks/folks/backend-store.vala"
		_g_key_file_unref0 (_data_->key_file);
#line 929 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_data_->file);
#line 929 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->envvar);
#line 929 "/run/build/folks/folks/backend-store.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 929 "/run/build/folks/folks/backend-store.vala"
		g_clear_error (&_data_->_inner_error_);
#line 929 "/run/build/folks/folks/backend-store.vala"
		g_object_unref (_data_->_async_result);
#line 929 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 5602 "backend-store.c"
	}
#line 842 "/run/build/folks/folks/backend-store.vala"
	_g_key_file_unref0 (_data_->key_file);
#line 842 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->file);
#line 842 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->envvar);
#line 842 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 842 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 842 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 842 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 5618 "backend-store.c"
		}
	}
#line 842 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 842 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 5625 "backend-store.c"
}


static void
_folks_backend_store_save_key_file_data_free (gpointer _data)
{
	FolksBackendStoreSaveKeyFileData* _data_;
	_data_ = _data;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (_data_->self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_slice_free (FolksBackendStoreSaveKeyFileData, _data_);
#line 5638 "backend-store.c"
}


static void
_folks_backend_store_save_key_file_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	FolksBackendStoreSaveKeyFileData* _task_data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_task_data_->_callback_ != NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 5654 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	_task_data_->_task_complete_ = TRUE;
#line 5658 "backend-store.c"
}


static void
_folks_backend_store_save_key_file (FolksBackendStore* self,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	FolksBackendStoreSaveKeyFileData* _data_;
	FolksBackendStore* _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_slice_new0 (FolksBackendStoreSaveKeyFileData);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_callback_ = _callback_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, _folks_backend_store_save_key_file_async_ready_wrapper, _user_data_);
#line 38 "/run/build/folks/folks/backend-store.vala"
	if (_callback_ == NULL) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		_data_->_task_complete_ = TRUE;
#line 5679 "backend-store.c"
	}
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_task_set_task_data (_data_->_async_result, _data_, _folks_backend_store_save_key_file_data_free);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_->self = _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_save_key_file_co (_data_);
#line 5689 "backend-store.c"
}


static void
_folks_backend_store_save_key_file_finish (FolksBackendStore* self,
                                           GAsyncResult* _res_)
{
	FolksBackendStoreSaveKeyFileData* _data_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 5700 "backend-store.c"
}


static guint8*
string_get_data (const gchar* self,
                 int* result_length1)
{
	guint8* result;
	guint8* res = NULL;
	gint res_length1;
	gint _res_size_;
	gint _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
	guint8* _tmp3_;
	gint _tmp3__length1;
	guint8* _tmp4_;
	gint _tmp4__length1;
#line 1498 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1499 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	res = (guint8*) self;
#line 1499 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	res_length1 = -1;
#line 1499 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_res_size_ = res_length1;
#line 1500 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1500 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1500 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	res_length1 = (gint) _tmp1_;
#line 1500 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp2_ = res_length1;
#line 1501 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp3_ = res;
#line 1501 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp3__length1 = res_length1;
#line 1501 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp4_ = _tmp3_;
#line 1501 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp4__length1 = _tmp3__length1;
#line 1501 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (result_length1) {
#line 1501 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		*result_length1 = _tmp4__length1;
#line 5747 "backend-store.c"
	}
#line 1501 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp4_;
#line 1501 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 5753 "backend-store.c"
}


static void
_folks_backend_store_save_key_file_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_)
{
	FolksBackendStoreSaveKeyFileData* _data_;
#line 975 "/run/build/folks/folks/backend-store.vala"
	_data_ = _user_data_;
#line 975 "/run/build/folks/folks/backend-store.vala"
	_data_->_source_object_ = source_object;
#line 975 "/run/build/folks/folks/backend-store.vala"
	_data_->_res_ = _res_;
#line 975 "/run/build/folks/folks/backend-store.vala"
	_data_->_task_complete_ = TRUE;
#line 975 "/run/build/folks/folks/backend-store.vala"
	_folks_backend_store_save_key_file_co (_data_);
#line 5773 "backend-store.c"
}


static gboolean
_folks_backend_store_save_key_file_co (FolksBackendStoreSaveKeyFileData* _data_)
{
#line 960 "/run/build/folks/folks/backend-store.vala"
	switch (_data_->_state_) {
#line 960 "/run/build/folks/folks/backend-store.vala"
		case 0:
#line 5784 "backend-store.c"
		goto _state_0;
#line 960 "/run/build/folks/folks/backend-store.vala"
		case 1:
#line 5788 "backend-store.c"
		goto _state_1;
		default:
#line 960 "/run/build/folks/folks/backend-store.vala"
		g_assert_not_reached ();
#line 5793 "backend-store.c"
	}
	_state_0:
#line 962 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp0_ = _data_->self->priv->_backends_key_file;
#line 962 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp1_ = g_key_file_to_data (_data_->_tmp0_, NULL, NULL);
#line 962 "/run/build/folks/folks/backend-store.vala"
	_data_->key_file_data = _data_->_tmp1_;
#line 964 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp2_ = _data_->self->priv->_config_file;
#line 964 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp3_ = g_file_get_path (_data_->_tmp2_);
#line 964 "/run/build/folks/folks/backend-store.vala"
	_data_->_tmp4_ = _data_->_tmp3_;
#line 964 "/run/build/folks/folks/backend-store.vala"
	g_debug ("backend-store.vala:964: Saving backend key file '%s'.", _data_->_tmp4_);
#line 964 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->_tmp4_);
#line 5812 "backend-store.c"
	{
#line 975 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp5_ = _data_->self->priv->_config_file;
#line 975 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp6_ = string_get_data (_data_->key_file_data, &_data_->_tmp6__length1);
#line 975 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp7_ = _data_->_tmp6_;
#line 975 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp7__length1 = _data_->_tmp6__length1;
#line 975 "/run/build/folks/folks/backend-store.vala"
		_data_->_state_ = 1;
#line 975 "/run/build/folks/folks/backend-store.vala"
		g_file_replace_contents_async (_data_->_tmp5_, _data_->_tmp7_, (gsize) _data_->_tmp7__length1, NULL, FALSE, G_FILE_CREATE_PRIVATE, NULL, _folks_backend_store_save_key_file_ready, _data_);
#line 975 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 5828 "backend-store.c"
		_state_1:
#line 975 "/run/build/folks/folks/backend-store.vala"
		g_file_replace_contents_finish (_data_->_tmp5_, _data_->_res_, NULL, &_data_->_inner_error_);
#line 975 "/run/build/folks/folks/backend-store.vala"
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 5834 "backend-store.c"
			goto __catch8_g_error;
		}
	}
	goto __finally8;
	__catch8_g_error:
	{
#line 966 "/run/build/folks/folks/backend-store.vala"
		_data_->e = _data_->_inner_error_;
#line 966 "/run/build/folks/folks/backend-store.vala"
		_data_->_inner_error_ = NULL;
#line 981 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp8_ = _data_->self->priv->_config_file;
#line 981 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp9_ = g_file_get_path (_data_->_tmp8_);
#line 981 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp10_ = _data_->_tmp9_;
#line 981 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp11_ = _data_->e;
#line 981 "/run/build/folks/folks/backend-store.vala"
		_data_->_tmp12_ = _data_->_tmp11_->message;
#line 981 "/run/build/folks/folks/backend-store.vala"
		g_warning ("backend-store.vala:981: Could not write updated backend key file '%s':" \
" %s", _data_->_tmp10_, _data_->_tmp12_);
#line 981 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->_tmp10_);
#line 966 "/run/build/folks/folks/backend-store.vala"
		_g_error_free0 (_data_->e);
#line 5861 "backend-store.c"
	}
	__finally8:
#line 966 "/run/build/folks/folks/backend-store.vala"
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 966 "/run/build/folks/folks/backend-store.vala"
		_g_free0 (_data_->key_file_data);
#line 966 "/run/build/folks/folks/backend-store.vala"
		g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 966 "/run/build/folks/folks/backend-store.vala"
		g_clear_error (&_data_->_inner_error_);
#line 966 "/run/build/folks/folks/backend-store.vala"
		g_object_unref (_data_->_async_result);
#line 966 "/run/build/folks/folks/backend-store.vala"
		return FALSE;
#line 5876 "backend-store.c"
	}
#line 960 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (_data_->key_file_data);
#line 960 "/run/build/folks/folks/backend-store.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 960 "/run/build/folks/folks/backend-store.vala"
	if (_data_->_state_ != 0) {
#line 960 "/run/build/folks/folks/backend-store.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 960 "/run/build/folks/folks/backend-store.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 5888 "backend-store.c"
		}
	}
#line 960 "/run/build/folks/folks/backend-store.vala"
	g_object_unref (_data_->_async_result);
#line 960 "/run/build/folks/folks/backend-store.vala"
	return FALSE;
#line 5895 "backend-store.c"
}


GeeMap*
folks_backend_store_get_enabled_backends (FolksBackendStore* self)
{
	GeeMap* result;
	GeeMap* _tmp0_;
#line 100 "/run/build/folks/folks/backend-store.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 100 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = self->priv->_prepared_backends_ro;
#line 100 "/run/build/folks/folks/backend-store.vala"
	result = _tmp0_;
#line 100 "/run/build/folks/folks/backend-store.vala"
	return result;
#line 5912 "backend-store.c"
}


static void
folks_backend_store_set_enabled_backends (FolksBackendStore* self,
                                          GeeMap* value)
{
#line 102 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (self != NULL);
#line 102 "/run/build/folks/folks/backend-store.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_backend_store_properties[FOLKS_BACKEND_STORE_ENABLED_BACKENDS_PROPERTY]);
#line 5924 "backend-store.c"
}


gboolean
folks_backend_store_get_is_prepared (FolksBackendStore* self)
{
	gboolean result;
	gboolean _tmp0_;
#line 113 "/run/build/folks/folks/backend-store.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 113 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = self->priv->_is_prepared;
#line 113 "/run/build/folks/folks/backend-store.vala"
	result = _tmp0_;
#line 113 "/run/build/folks/folks/backend-store.vala"
	return result;
#line 5941 "backend-store.c"
}


static void
folks_backend_store_set_is_prepared (FolksBackendStore* self,
                                     gboolean value)
{
#line 115 "/run/build/folks/folks/backend-store.vala"
	g_return_if_fail (self != NULL);
#line 115 "/run/build/folks/folks/backend-store.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_backend_store_properties[FOLKS_BACKEND_STORE_IS_PREPARED_PROPERTY]);
#line 5953 "backend-store.c"
}


static GObject *
folks_backend_store_constructor (GType type,
                                 guint n_construct_properties,
                                 GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	FolksBackendStore * self;
	gchar* debug_no_colour = NULL;
	const gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* debug_no_color = NULL;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	gboolean _tmp4_ = FALSE;
	gboolean _tmp5_ = FALSE;
	const gchar* _tmp6_;
	const gchar* _tmp11_;
	FolksDebug* _tmp12_;
	FolksDebug* _tmp13_;
	FolksDebug* _tmp14_;
	GeeHashMap* _tmp15_;
	GeeHashMap* _tmp16_;
	GeeHashMap* _tmp17_;
	GeeHashMap* _tmp18_;
	GeeMap* _tmp19_;
	GeeMap* _tmp20_;
#line 140 "/run/build/folks/folks/backend-store.vala"
	parent_class = G_OBJECT_CLASS (folks_backend_store_parent_class);
#line 140 "/run/build/folks/folks/backend-store.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 140 "/run/build/folks/folks/backend-store.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_BACKEND_STORE, FolksBackendStore);
#line 143 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = g_getenv ("FOLKS_DEBUG_NO_COLOUR");
#line 143 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = g_strdup (_tmp0_);
#line 143 "/run/build/folks/folks/backend-store.vala"
	debug_no_colour = _tmp1_;
#line 144 "/run/build/folks/folks/backend-store.vala"
	_tmp2_ = g_getenv ("FOLKS_DEBUG_NO_COLOR");
#line 144 "/run/build/folks/folks/backend-store.vala"
	_tmp3_ = g_strdup (_tmp2_);
#line 144 "/run/build/folks/folks/backend-store.vala"
	debug_no_color = _tmp3_;
#line 147 "/run/build/folks/folks/backend-store.vala"
	_tmp6_ = debug_no_colour;
#line 147 "/run/build/folks/folks/backend-store.vala"
	if (_tmp6_ == NULL) {
#line 147 "/run/build/folks/folks/backend-store.vala"
		_tmp5_ = TRUE;
#line 6008 "backend-store.c"
	} else {
		const gchar* _tmp7_;
#line 147 "/run/build/folks/folks/backend-store.vala"
		_tmp7_ = debug_no_colour;
#line 147 "/run/build/folks/folks/backend-store.vala"
		_tmp5_ = g_strcmp0 (_tmp7_, "0") == 0;
#line 6015 "backend-store.c"
	}
#line 147 "/run/build/folks/folks/backend-store.vala"
	if (_tmp5_) {
#line 6019 "backend-store.c"
		gboolean _tmp8_ = FALSE;
		const gchar* _tmp9_;
#line 148 "/run/build/folks/folks/backend-store.vala"
		_tmp9_ = debug_no_color;
#line 148 "/run/build/folks/folks/backend-store.vala"
		if (_tmp9_ == NULL) {
#line 148 "/run/build/folks/folks/backend-store.vala"
			_tmp8_ = TRUE;
#line 6028 "backend-store.c"
		} else {
			const gchar* _tmp10_;
#line 148 "/run/build/folks/folks/backend-store.vala"
			_tmp10_ = debug_no_color;
#line 148 "/run/build/folks/folks/backend-store.vala"
			_tmp8_ = g_strcmp0 (_tmp10_, "0") == 0;
#line 6035 "backend-store.c"
		}
#line 148 "/run/build/folks/folks/backend-store.vala"
		_tmp4_ = _tmp8_;
#line 6039 "backend-store.c"
	} else {
#line 147 "/run/build/folks/folks/backend-store.vala"
		_tmp4_ = FALSE;
#line 6043 "backend-store.c"
	}
#line 145 "/run/build/folks/folks/backend-store.vala"
	_tmp11_ = g_getenv ("G_MESSAGES_DEBUG");
#line 145 "/run/build/folks/folks/backend-store.vala"
	_tmp12_ = folks_debug_dup_with_flags (_tmp11_, _tmp4_);
#line 145 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_debug);
#line 145 "/run/build/folks/folks/backend-store.vala"
	self->priv->_debug = _tmp12_;
#line 151 "/run/build/folks/folks/backend-store.vala"
	_tmp13_ = self->priv->_debug;
#line 151 "/run/build/folks/folks/backend-store.vala"
	_folks_debug_register_domain (_tmp13_, G_LOG_DOMAIN);
#line 153 "/run/build/folks/folks/backend-store.vala"
	_tmp14_ = self->priv->_debug;
#line 153 "/run/build/folks/folks/backend-store.vala"
	g_signal_connect_object (_tmp14_, "print-status", (GCallback) __folks_backend_store_debug_print_status_folks_debug_print_status, self, 0);
#line 155 "/run/build/folks/folks/backend-store.vala"
	_tmp15_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, G_TYPE_POINTER, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 155 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_modules);
#line 155 "/run/build/folks/folks/backend-store.vala"
	self->priv->_modules = _tmp15_;
#line 156 "/run/build/folks/folks/backend-store.vala"
	_tmp16_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_BACKEND, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 156 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_backend_hash);
#line 156 "/run/build/folks/folks/backend-store.vala"
	self->priv->_backend_hash = _tmp16_;
#line 157 "/run/build/folks/folks/backend-store.vala"
	_tmp17_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_BACKEND, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 157 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_prepared_backends);
#line 157 "/run/build/folks/folks/backend-store.vala"
	self->priv->_prepared_backends = _tmp17_;
#line 158 "/run/build/folks/folks/backend-store.vala"
	_tmp18_ = self->priv->_prepared_backends;
#line 158 "/run/build/folks/folks/backend-store.vala"
	_tmp19_ = gee_abstract_map_get_read_only_view ((GeeAbstractMap*) _tmp18_);
#line 158 "/run/build/folks/folks/backend-store.vala"
	_tmp20_ = _tmp19_;
#line 158 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_prepared_backends_ro);
#line 158 "/run/build/folks/folks/backend-store.vala"
	self->priv->_prepared_backends_ro = _tmp20_;
#line 140 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (debug_no_color);
#line 140 "/run/build/folks/folks/backend-store.vala"
	_g_free0 (debug_no_colour);
#line 140 "/run/build/folks/folks/backend-store.vala"
	return obj;
#line 6095 "backend-store.c"
}


static void
folks_backend_store_class_init (FolksBackendStoreClass * klass)
{
	gchar* _tmp0_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_parent_class = g_type_class_peek_parent (klass);
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_type_class_add_private (klass, sizeof (FolksBackendStorePrivate));
#line 38 "/run/build/folks/folks/backend-store.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_folks_backend_store_get_property;
#line 38 "/run/build/folks/folks/backend-store.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_folks_backend_store_set_property;
#line 38 "/run/build/folks/folks/backend-store.vala"
	G_OBJECT_CLASS (klass)->constructor = folks_backend_store_constructor;
#line 38 "/run/build/folks/folks/backend-store.vala"
	G_OBJECT_CLASS (klass)->finalize = folks_backend_store_finalize;
#line 6115 "backend-store.c"
	/**
	   * The list of backends visible to this store which have not been explicitly
	   * disabled.
	   *
	   * This list will be empty before {@link BackendStore.load_backends} has been
	   * called.
	   *
	   * The backends in this list have been prepared and are ready to use.
	   *
	   * @since 0.5.1
	   */
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_BACKEND_STORE_ENABLED_BACKENDS_PROPERTY, folks_backend_store_properties[FOLKS_BACKEND_STORE_ENABLED_BACKENDS_PROPERTY] = g_param_spec_object ("enabled-backends", "enabled-backends", "enabled-backends", GEE_TYPE_MAP, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 6129 "backend-store.c"
	/**
	   * Whether {@link BackendStore.prepare} has successfully completed for this
	   * store.
	   *
	   * @since 0.3.0
	   */
#line 38 "/run/build/folks/folks/backend-store.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_BACKEND_STORE_IS_PREPARED_PROPERTY, folks_backend_store_properties[FOLKS_BACKEND_STORE_IS_PREPARED_PROPERTY] = g_param_spec_boolean ("is-prepared", "is-prepared", "is-prepared", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 6138 "backend-store.c"
	/**
	   * Emitted when a backend has been added to the BackendStore.
	   *
	   * This will not be emitted until after {@link BackendStore.load_backends}
	   * has been called.
	   *
	   * {@link Backend}s referenced in this signal are also included in
	   * {@link BackendStore.enabled_backends}.
	   *
	   * @param backend the new {@link Backend}
	   */
#line 38 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_signals[FOLKS_BACKEND_STORE_BACKEND_AVAILABLE_SIGNAL] = g_signal_new ("backend-available", FOLKS_TYPE_BACKEND_STORE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, FOLKS_TYPE_BACKEND);
#line 71 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = g_strdup ("all-others");
#line 71 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store_KEY_FILE_GROUP_ALL_OTHERS = _tmp0_;
#line 6156 "backend-store.c"
}


static void
folks_backend_store_instance_init (FolksBackendStore * self)
{
#line 38 "/run/build/folks/folks/backend-store.vala"
	self->priv = FOLKS_BACKEND_STORE_GET_PRIVATE (self);
#line 56 "/run/build/folks/folks/backend-store.vala"
	self->priv->_is_prepared = FALSE;
#line 6167 "backend-store.c"
}


static void
folks_backend_store_finalize (GObject * obj)
{
	FolksBackendStore * self;
	GeeMapIterator* iter = NULL;
	GeeHashMap* _tmp0_;
	GeeMapIterator* _tmp1_;
	GeeHashMap* _tmp6_;
	GeeHashMap* _tmp21_;
	FolksDebug* _tmp22_;
	guint _tmp23_;
#line 38 "/run/build/folks/folks/backend-store.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_BACKEND_STORE, FolksBackendStore);
#line 164 "/run/build/folks/folks/backend-store.vala"
	_tmp0_ = self->priv->_prepared_backends;
#line 164 "/run/build/folks/folks/backend-store.vala"
	_tmp1_ = gee_abstract_map_map_iterator ((GeeAbstractMap*) _tmp0_);
#line 164 "/run/build/folks/folks/backend-store.vala"
	iter = _tmp1_;
#line 165 "/run/build/folks/folks/backend-store.vala"
	while (TRUE) {
#line 6192 "backend-store.c"
		GeeMapIterator* _tmp2_;
		FolksBackend* backend = NULL;
		GeeMapIterator* _tmp3_;
		gpointer _tmp4_;
		FolksBackend* _tmp5_;
#line 165 "/run/build/folks/folks/backend-store.vala"
		_tmp2_ = iter;
#line 165 "/run/build/folks/folks/backend-store.vala"
		if (!(gee_map_iterator_next (_tmp2_) == TRUE)) {
#line 165 "/run/build/folks/folks/backend-store.vala"
			break;
#line 6204 "backend-store.c"
		}
#line 167 "/run/build/folks/folks/backend-store.vala"
		_tmp3_ = iter;
#line 167 "/run/build/folks/folks/backend-store.vala"
		_tmp4_ = gee_map_iterator_get_value (_tmp3_);
#line 167 "/run/build/folks/folks/backend-store.vala"
		backend = (FolksBackend*) _tmp4_;
#line 168 "/run/build/folks/folks/backend-store.vala"
		_tmp5_ = backend;
#line 168 "/run/build/folks/folks/backend-store.vala"
		folks_backend_unprepare (_tmp5_, NULL, NULL);
#line 165 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (backend);
#line 6218 "backend-store.c"
	}
#line 171 "/run/build/folks/folks/backend-store.vala"
	_tmp6_ = self->priv->_prepared_backends;
#line 171 "/run/build/folks/folks/backend-store.vala"
	gee_abstract_map_clear ((GeeAbstractMap*) _tmp6_);
#line 6224 "backend-store.c"
	{
		GeeIterator* _module_it = NULL;
		GeeHashMap* _tmp7_;
		GeeCollection* _tmp8_;
		GeeCollection* _tmp9_;
		GeeCollection* _tmp10_;
		GeeIterator* _tmp11_;
		GeeIterator* _tmp12_;
#line 174 "/run/build/folks/folks/backend-store.vala"
		_tmp7_ = self->priv->_modules;
#line 174 "/run/build/folks/folks/backend-store.vala"
		_tmp8_ = gee_abstract_map_get_values ((GeeAbstractMap*) _tmp7_);
#line 174 "/run/build/folks/folks/backend-store.vala"
		_tmp9_ = _tmp8_;
#line 174 "/run/build/folks/folks/backend-store.vala"
		_tmp10_ = _tmp9_;
#line 174 "/run/build/folks/folks/backend-store.vala"
		_tmp11_ = gee_iterable_iterator ((GeeIterable*) _tmp10_);
#line 174 "/run/build/folks/folks/backend-store.vala"
		_tmp12_ = _tmp11_;
#line 174 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_tmp10_);
#line 174 "/run/build/folks/folks/backend-store.vala"
		_module_it = _tmp12_;
#line 174 "/run/build/folks/folks/backend-store.vala"
		while (TRUE) {
#line 6251 "backend-store.c"
			GeeIterator* _tmp13_;
			GModule* module = NULL;
			GeeIterator* _tmp14_;
			gpointer _tmp15_;
			void* func = NULL;
			GModule* _tmp16_;
			void* _tmp17_ = NULL;
			gboolean _tmp18_;
#line 174 "/run/build/folks/folks/backend-store.vala"
			_tmp13_ = _module_it;
#line 174 "/run/build/folks/folks/backend-store.vala"
			if (!gee_iterator_next (_tmp13_)) {
#line 174 "/run/build/folks/folks/backend-store.vala"
				break;
#line 6266 "backend-store.c"
			}
#line 174 "/run/build/folks/folks/backend-store.vala"
			_tmp14_ = _module_it;
#line 174 "/run/build/folks/folks/backend-store.vala"
			_tmp15_ = gee_iterator_get (_tmp14_);
#line 174 "/run/build/folks/folks/backend-store.vala"
			module = (GModule*) _tmp15_;
#line 177 "/run/build/folks/folks/backend-store.vala"
			_tmp16_ = module;
#line 177 "/run/build/folks/folks/backend-store.vala"
			_tmp18_ = g_module_symbol (_tmp16_, "module_finalize", &_tmp17_);
#line 177 "/run/build/folks/folks/backend-store.vala"
			func = _tmp17_;
#line 177 "/run/build/folks/folks/backend-store.vala"
			if (_tmp18_) {
#line 6282 "backend-store.c"
				FolksBackendStoreModuleFinalizeFunc module_finalize = NULL;
				void* _tmp19_;
				FolksBackendStoreModuleFinalizeFunc _tmp20_;
#line 179 "/run/build/folks/folks/backend-store.vala"
				_tmp19_ = func;
#line 179 "/run/build/folks/folks/backend-store.vala"
				module_finalize = (FolksBackendStoreModuleFinalizeFunc) _tmp19_;
#line 180 "/run/build/folks/folks/backend-store.vala"
				_tmp20_ = module_finalize;
#line 180 "/run/build/folks/folks/backend-store.vala"
				_tmp20_ (self);
#line 6294 "backend-store.c"
			}
		}
#line 174 "/run/build/folks/folks/backend-store.vala"
		_g_object_unref0 (_module_it);
#line 6299 "backend-store.c"
	}
#line 184 "/run/build/folks/folks/backend-store.vala"
	_tmp21_ = self->priv->_modules;
#line 184 "/run/build/folks/folks/backend-store.vala"
	gee_abstract_map_clear ((GeeAbstractMap*) _tmp21_);
#line 187 "/run/build/folks/folks/backend-store.vala"
	_tmp22_ = self->priv->_debug;
#line 187 "/run/build/folks/folks/backend-store.vala"
	g_signal_parse_name ("print-status", FOLKS_TYPE_DEBUG, &_tmp23_, NULL, FALSE);
#line 187 "/run/build/folks/folks/backend-store.vala"
	g_signal_handlers_disconnect_matched (_tmp22_, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp23_, 0, NULL, (GCallback) __folks_backend_store_debug_print_status_folks_debug_print_status, self);
#line 190 "/run/build/folks/folks/backend-store.vala"
	folks_backend_store__instance = NULL;
#line 38 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (iter);
#line 45 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_backend_hash);
#line 47 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_backends_allowed);
#line 49 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_backends_disabled);
#line 50 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_prepared_backends);
#line 51 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_prepared_backends_ro);
#line 52 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_config_file);
#line 53 "/run/build/folks/folks/backend-store.vala"
	_g_key_file_unref0 (self->priv->_backends_key_file);
#line 54 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_modules);
#line 57 "/run/build/folks/folks/backend-store.vala"
	_g_object_unref0 (self->priv->_debug);
#line 38 "/run/build/folks/folks/backend-store.vala"
	G_OBJECT_CLASS (folks_backend_store_parent_class)->finalize (obj);
#line 6335 "backend-store.c"
}


/**
 * Responsible for backend loading.
 *
 * The BackendStore manages the set of available Folks backends. The
 * {@link BackendStore.load_backends} function loads all compatible and enabled
 * backends and the {@link BackendStore.backend_available} signal notifies when
 * these backends are ready.
 */
GType
folks_backend_store_get_type (void)
{
	static volatile gsize folks_backend_store_type_id__volatile = 0;
	if (g_once_init_enter (&folks_backend_store_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksBackendStoreClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_backend_store_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksBackendStore), 0, (GInstanceInitFunc) folks_backend_store_instance_init, NULL };
		GType folks_backend_store_type_id;
		folks_backend_store_type_id = g_type_register_static (G_TYPE_OBJECT, "FolksBackendStore", &g_define_type_info, 0);
		g_once_init_leave (&folks_backend_store_type_id__volatile, folks_backend_store_type_id);
	}
	return folks_backend_store_type_id__volatile;
}


static void
_vala_folks_backend_store_get_property (GObject * object,
                                        guint property_id,
                                        GValue * value,
                                        GParamSpec * pspec)
{
	FolksBackendStore * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_TYPE_BACKEND_STORE, FolksBackendStore);
#line 38 "/run/build/folks/folks/backend-store.vala"
	switch (property_id) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		case FOLKS_BACKEND_STORE_ENABLED_BACKENDS_PROPERTY:
#line 38 "/run/build/folks/folks/backend-store.vala"
		g_value_set_object (value, folks_backend_store_get_enabled_backends (self));
#line 38 "/run/build/folks/folks/backend-store.vala"
		break;
#line 38 "/run/build/folks/folks/backend-store.vala"
		case FOLKS_BACKEND_STORE_IS_PREPARED_PROPERTY:
#line 38 "/run/build/folks/folks/backend-store.vala"
		g_value_set_boolean (value, folks_backend_store_get_is_prepared (self));
#line 38 "/run/build/folks/folks/backend-store.vala"
		break;
#line 6383 "backend-store.c"
		default:
#line 38 "/run/build/folks/folks/backend-store.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 38 "/run/build/folks/folks/backend-store.vala"
		break;
#line 6389 "backend-store.c"
	}
}


static void
_vala_folks_backend_store_set_property (GObject * object,
                                        guint property_id,
                                        const GValue * value,
                                        GParamSpec * pspec)
{
	FolksBackendStore * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_TYPE_BACKEND_STORE, FolksBackendStore);
#line 38 "/run/build/folks/folks/backend-store.vala"
	switch (property_id) {
#line 38 "/run/build/folks/folks/backend-store.vala"
		case FOLKS_BACKEND_STORE_ENABLED_BACKENDS_PROPERTY:
#line 38 "/run/build/folks/folks/backend-store.vala"
		folks_backend_store_set_enabled_backends (self, g_value_get_object (value));
#line 38 "/run/build/folks/folks/backend-store.vala"
		break;
#line 38 "/run/build/folks/folks/backend-store.vala"
		case FOLKS_BACKEND_STORE_IS_PREPARED_PROPERTY:
#line 38 "/run/build/folks/folks/backend-store.vala"
		folks_backend_store_set_is_prepared (self, g_value_get_boolean (value));
#line 38 "/run/build/folks/folks/backend-store.vala"
		break;
#line 6416 "backend-store.c"
		default:
#line 38 "/run/build/folks/folks/backend-store.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 38 "/run/build/folks/folks/backend-store.vala"
		break;
#line 6422 "backend-store.c"
	}
}


static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}


static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}


static gint
_vala_array_length (gpointer array)
{
	int length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}



