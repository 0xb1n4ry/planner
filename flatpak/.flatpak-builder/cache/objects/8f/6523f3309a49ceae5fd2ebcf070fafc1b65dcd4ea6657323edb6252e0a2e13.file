/* TimePicker.c generated by valac 0.40.11, the Vala compiler
 * generated from TimePicker.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <granite.h>
#include <glib/gi18n-lib.h>
#include <float.h>
#include <math.h>
#include <gdk/gdk.h>


#define WIDGETS_TYPE_TIME_PICKER (widgets_time_picker_get_type ())
#define WIDGETS_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_TIME_PICKER, WidgetsTimePicker))
#define WIDGETS_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_TIME_PICKER, WidgetsTimePickerClass))
#define WIDGETS_IS_TIME_PICKER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_TIME_PICKER))
#define WIDGETS_IS_TIME_PICKER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_TIME_PICKER))
#define WIDGETS_TIME_PICKER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_TIME_PICKER, WidgetsTimePickerClass))

typedef struct _WidgetsTimePicker WidgetsTimePicker;
typedef struct _WidgetsTimePickerClass WidgetsTimePickerClass;
typedef struct _WidgetsTimePickerPrivate WidgetsTimePickerPrivate;
enum  {
	WIDGETS_TIME_PICKER_0_PROPERTY,
	WIDGETS_TIME_PICKER_TIME_PROPERTY,
	WIDGETS_TIME_PICKER_NUM_PROPERTIES
};
static GParamSpec* widgets_time_picker_properties[WIDGETS_TIME_PICKER_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
enum  {
	WIDGETS_TIME_PICKER_TIME_CHANGED_SIGNAL,
	WIDGETS_TIME_PICKER_NUM_SIGNALS
};
static guint widgets_time_picker_signals[WIDGETS_TIME_PICKER_NUM_SIGNALS] = {0};

struct _WidgetsTimePicker {
	GtkEventBox parent_instance;
	WidgetsTimePickerPrivate * priv;
	GtkEntry* time_entry;
};

struct _WidgetsTimePickerClass {
	GtkEventBoxClass parent_class;
};

struct _WidgetsTimePickerPrivate {
	GtkSpinButton* hours_spinbutton;
	GtkSpinButton* minutes_spinbutton;
	GDateTime* _time;
	gboolean changing_time;
	gchar* old_string;
	GraniteWidgetsModeButton* am_pm_modebutton;
};


static gpointer widgets_time_picker_parent_class = NULL;

GType widgets_time_picker_get_type (void) G_GNUC_CONST;
#define WIDGETS_TIME_PICKER_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), WIDGETS_TYPE_TIME_PICKER, WidgetsTimePickerPrivate))
WidgetsTimePicker* widgets_time_picker_new (void);
WidgetsTimePicker* widgets_time_picker_construct (GType object_type);
static void widgets_time_picker_update_text (WidgetsTimePicker* self,
                                      gboolean no_signal);
GDateTime* widgets_time_picker_get_time (WidgetsTimePicker* self);
static void widgets_time_picker_is_unfocused (WidgetsTimePicker* self);
static void widgets_time_picker_parse_time (WidgetsTimePicker* self,
                                     const gchar* timestr);
static void widgets_time_picker_update_time (WidgetsTimePicker* self,
                                      gboolean is_hour);
static gint* _int_dup (gint* self);
void widgets_time_picker_set_time (WidgetsTimePicker* self,
                                   GDateTime* value);
static gboolean _int_equal (const gint * s1,
                     const gint * s2);
static GObject * widgets_time_picker_constructor (GType type,
                                           guint n_construct_properties,
                                           GObjectConstructParam * construct_properties);
static void _widgets_time_picker___lambda8_ (WidgetsTimePicker* self,
                                      GtkWidget* mode);
static void __widgets_time_picker___lambda8__granite_widgets_mode_button_mode_changed (GraniteWidgetsModeButton* _sender,
                                                                                GtkWidget* widget,
                                                                                gpointer self);
static void _widgets_time_picker___lambda9_ (WidgetsTimePicker* self);
static void __widgets_time_picker___lambda9__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                     gpointer self);
static void _widgets_time_picker___lambda10_ (WidgetsTimePicker* self);
static void __widgets_time_picker___lambda10__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                      gpointer self);
static gboolean _widgets_time_picker___lambda11_ (WidgetsTimePicker* self);
static gboolean __widgets_time_picker___lambda11__gtk_spin_button_output (GtkSpinButton* _sender,
                                                                   gpointer self);
static gboolean _widgets_time_picker___lambda12_ (WidgetsTimePicker* self);
static gboolean __widgets_time_picker___lambda12__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                                       GdkEventFocus* event,
                                                                       gpointer self);
static void _widgets_time_picker_is_unfocused_gtk_entry_activate (GtkEntry* _sender,
                                                           gpointer self);
static void widgets_time_picker_finalize (GObject * obj);
static void _vala_widgets_time_picker_get_property (GObject * object,
                                             guint property_id,
                                             GValue * value,
                                             GParamSpec * pspec);
static void _vala_widgets_time_picker_set_property (GObject * object,
                                             guint property_id,
                                             const GValue * value,
                                             GParamSpec * pspec);


WidgetsTimePicker*
widgets_time_picker_construct (GType object_type)
{
	WidgetsTimePicker * self = NULL;
#line 60 "/run/build/planner/src/Widgets/TimePicker.vala"
	self = (WidgetsTimePicker*) g_object_new (object_type, NULL);
#line 59 "/run/build/planner/src/Widgets/TimePicker.vala"
	return self;
#line 145 "TimePicker.c"
}


WidgetsTimePicker*
widgets_time_picker_new (void)
{
#line 59 "/run/build/planner/src/Widgets/TimePicker.vala"
	return widgets_time_picker_construct (WIDGETS_TYPE_TIME_PICKER);
#line 154 "TimePicker.c"
}


static void
widgets_time_picker_update_text (WidgetsTimePicker* self,
                                 gboolean no_signal)
{
	GtkEntry* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	GtkEntry* _tmp7_;
	const gchar* _tmp8_;
	const gchar* _tmp9_;
	gchar* _tmp10_;
#line 140 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = self->time_entry;
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp1_ = widgets_time_picker_get_time (self);
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp2_ = _tmp1_;
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp3_ = granite_date_time_get_default_time_format (TRUE, FALSE);
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp4_ = _tmp3_;
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp5_ = g_date_time_format (_tmp2_, _tmp4_);
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp6_ = _tmp5_;
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_entry_set_text (_tmp0_, _tmp6_);
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (_tmp6_);
#line 141 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (_tmp4_);
#line 143 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp7_ = self->time_entry;
#line 143 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp8_ = gtk_entry_get_text (_tmp7_);
#line 143 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp9_ = _tmp8_;
#line 143 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp10_ = g_strdup (_tmp9_);
#line 143 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (self->priv->old_string);
#line 143 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->old_string = _tmp10_;
#line 145 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (no_signal == FALSE) {
#line 146 "/run/build/planner/src/Widgets/TimePicker.vala"
		g_signal_emit (self, widgets_time_picker_signals[WIDGETS_TIME_PICKER_TIME_CHANGED_SIGNAL], 0);
#line 211 "TimePicker.c"
	}
}


static void
widgets_time_picker_is_unfocused (WidgetsTimePicker* self)
{
	GtkEntry* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	GtkEntry* _tmp4_;
	const gchar* _tmp5_;
	const gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
#line 150 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 151 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = self->time_entry;
#line 151 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp1_ = gtk_entry_get_text (_tmp0_);
#line 151 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp2_ = _tmp1_;
#line 151 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp3_ = g_strdup (_tmp2_);
#line 151 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (self->priv->old_string);
#line 151 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->old_string = _tmp3_;
#line 152 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp4_ = self->time_entry;
#line 152 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp5_ = gtk_entry_get_text (_tmp4_);
#line 152 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp6_ = _tmp5_;
#line 152 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp7_ = g_strdup (_tmp6_);
#line 152 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp8_ = _tmp7_;
#line 152 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_parse_time (self, _tmp8_);
#line 152 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (_tmp8_);
#line 256 "TimePicker.c"
}


static void
widgets_time_picker_update_time (WidgetsTimePicker* self,
                                 gboolean is_hour)
{
	gboolean _tmp0_;
#line 155 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 156 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = self->priv->changing_time;
#line 156 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp0_ == TRUE) {
#line 157 "/run/build/planner/src/Widgets/TimePicker.vala"
		return;
#line 273 "TimePicker.c"
	}
#line 160 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (is_hour == TRUE) {
#line 277 "TimePicker.c"
		gint new_hour = 0;
		GtkSpinButton* _tmp1_;
		GDateTime* _tmp2_;
		GDateTime* _tmp3_;
		gboolean _tmp4_ = FALSE;
		GtkSpinButton* _tmp5_;
#line 161 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp1_ = self->priv->hours_spinbutton;
#line 161 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp2_ = widgets_time_picker_get_time (self);
#line 161 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp3_ = _tmp2_;
#line 161 "/run/build/planner/src/Widgets/TimePicker.vala"
		new_hour = gtk_spin_button_get_value_as_int (_tmp1_) - g_date_time_get_hour (_tmp3_);
#line 163 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp5_ = self->priv->hours_spinbutton;
#line 163 "/run/build/planner/src/Widgets/TimePicker.vala"
		if (gtk_spin_button_get_value_as_int (_tmp5_) == 12) {
#line 296 "TimePicker.c"
			GraniteWidgetsModeButton* _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
#line 163 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp6_ = self->priv->am_pm_modebutton;
#line 163 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp7_ = granite_widgets_mode_button_get_selected (_tmp6_);
#line 163 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp8_ = _tmp7_;
#line 163 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp4_ = _tmp8_ == 0;
#line 308 "TimePicker.c"
		} else {
#line 163 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp4_ = FALSE;
#line 312 "TimePicker.c"
		}
#line 163 "/run/build/planner/src/Widgets/TimePicker.vala"
		if (_tmp4_) {
#line 316 "TimePicker.c"
			GDateTime* _tmp9_;
			GDateTime* _tmp10_;
			GDateTime* _tmp11_;
#line 164 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp9_ = self->priv->_time;
#line 164 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp10_ = self->priv->_time;
#line 164 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp11_ = g_date_time_add_hours (_tmp9_, -g_date_time_get_hour (_tmp10_));
#line 164 "/run/build/planner/src/Widgets/TimePicker.vala"
			_g_date_time_unref0 (self->priv->_time);
#line 164 "/run/build/planner/src/Widgets/TimePicker.vala"
			self->priv->_time = _tmp11_;
#line 330 "TimePicker.c"
		} else {
			gboolean _tmp12_ = FALSE;
			GtkSpinButton* _tmp13_;
#line 165 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp13_ = self->priv->hours_spinbutton;
#line 165 "/run/build/planner/src/Widgets/TimePicker.vala"
			if (gtk_spin_button_get_value_as_int (_tmp13_) < 12) {
#line 338 "TimePicker.c"
				GraniteWidgetsModeButton* _tmp14_;
				gint _tmp15_;
				gint _tmp16_;
#line 165 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp14_ = self->priv->am_pm_modebutton;
#line 165 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp15_ = granite_widgets_mode_button_get_selected (_tmp14_);
#line 165 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp16_ = _tmp15_;
#line 165 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp12_ = _tmp16_ == 0;
#line 350 "TimePicker.c"
			} else {
#line 165 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp12_ = FALSE;
#line 354 "TimePicker.c"
			}
#line 165 "/run/build/planner/src/Widgets/TimePicker.vala"
			if (_tmp12_) {
#line 358 "TimePicker.c"
				GDateTime* _tmp17_;
				gint _tmp18_;
				GDateTime* _tmp19_;
#line 166 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp17_ = self->priv->_time;
#line 166 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp18_ = new_hour;
#line 166 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp19_ = g_date_time_add_hours (_tmp17_, _tmp18_);
#line 166 "/run/build/planner/src/Widgets/TimePicker.vala"
				_g_date_time_unref0 (self->priv->_time);
#line 166 "/run/build/planner/src/Widgets/TimePicker.vala"
				self->priv->_time = _tmp19_;
#line 372 "TimePicker.c"
			} else {
				gboolean _tmp20_ = FALSE;
				GtkSpinButton* _tmp21_;
#line 167 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp21_ = self->priv->hours_spinbutton;
#line 167 "/run/build/planner/src/Widgets/TimePicker.vala"
				if (gtk_spin_button_get_value_as_int (_tmp21_) == 12) {
#line 380 "TimePicker.c"
					GraniteWidgetsModeButton* _tmp22_;
					gint _tmp23_;
					gint _tmp24_;
#line 167 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp22_ = self->priv->am_pm_modebutton;
#line 167 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp23_ = granite_widgets_mode_button_get_selected (_tmp22_);
#line 167 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp24_ = _tmp23_;
#line 167 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp20_ = _tmp24_ == 1;
#line 392 "TimePicker.c"
				} else {
#line 167 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp20_ = FALSE;
#line 396 "TimePicker.c"
				}
#line 167 "/run/build/planner/src/Widgets/TimePicker.vala"
				if (_tmp20_) {
#line 400 "TimePicker.c"
					GDateTime* _tmp25_;
					GDateTime* _tmp26_;
					GDateTime* _tmp27_;
#line 168 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp25_ = self->priv->_time;
#line 168 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp26_ = self->priv->_time;
#line 168 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp27_ = g_date_time_add_hours (_tmp25_, (-g_date_time_get_hour (_tmp26_)) + 12);
#line 168 "/run/build/planner/src/Widgets/TimePicker.vala"
					_g_date_time_unref0 (self->priv->_time);
#line 168 "/run/build/planner/src/Widgets/TimePicker.vala"
					self->priv->_time = _tmp27_;
#line 414 "TimePicker.c"
				} else {
					gboolean _tmp28_ = FALSE;
					GtkSpinButton* _tmp29_;
#line 169 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp29_ = self->priv->hours_spinbutton;
#line 169 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (gtk_spin_button_get_value_as_int (_tmp29_) < 12) {
#line 422 "TimePicker.c"
						GraniteWidgetsModeButton* _tmp30_;
						gint _tmp31_;
						gint _tmp32_;
#line 169 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp30_ = self->priv->am_pm_modebutton;
#line 169 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp31_ = granite_widgets_mode_button_get_selected (_tmp30_);
#line 169 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp32_ = _tmp31_;
#line 169 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp28_ = _tmp32_ == 1;
#line 434 "TimePicker.c"
					} else {
#line 169 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp28_ = FALSE;
#line 438 "TimePicker.c"
					}
#line 169 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp28_) {
#line 442 "TimePicker.c"
						GDateTime* _tmp33_;
						gint _tmp34_;
						GDateTime* _tmp35_;
						GDateTime* _tmp36_;
						GDateTime* _tmp37_;
#line 170 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp33_ = self->priv->_time;
#line 170 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp34_ = new_hour;
#line 170 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp35_ = g_date_time_add_hours (_tmp33_, _tmp34_ + 12);
#line 170 "/run/build/planner/src/Widgets/TimePicker.vala"
						_g_date_time_unref0 (self->priv->_time);
#line 170 "/run/build/planner/src/Widgets/TimePicker.vala"
						self->priv->_time = _tmp35_;
#line 172 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp36_ = widgets_time_picker_get_time (self);
#line 172 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp37_ = _tmp36_;
#line 172 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (g_date_time_get_hour (_tmp37_) <= 12) {
#line 464 "TimePicker.c"
							GDateTime* _tmp38_;
							GDateTime* _tmp39_;
#line 173 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp38_ = self->priv->_time;
#line 173 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp39_ = g_date_time_add_hours (_tmp38_, 12);
#line 173 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_date_time_unref0 (self->priv->_time);
#line 173 "/run/build/planner/src/Widgets/TimePicker.vala"
							self->priv->_time = _tmp39_;
#line 475 "TimePicker.c"
						}
					}
				}
			}
		}
	} else {
		GDateTime* _tmp40_;
		GDateTime* _tmp41_;
		GtkSpinButton* _tmp42_;
		GDateTime* _tmp43_;
		GDateTime* _tmp44_;
		GDateTime* _tmp45_;
#line 177 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp40_ = widgets_time_picker_get_time (self);
#line 177 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp41_ = _tmp40_;
#line 177 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp42_ = self->priv->minutes_spinbutton;
#line 177 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp43_ = widgets_time_picker_get_time (self);
#line 177 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp44_ = _tmp43_;
#line 177 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp45_ = g_date_time_add_minutes (_tmp41_, gtk_spin_button_get_value_as_int (_tmp42_) - g_date_time_get_minute (_tmp44_));
#line 177 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_date_time_unref0 (self->priv->_time);
#line 177 "/run/build/planner/src/Widgets/TimePicker.vala"
		self->priv->_time = _tmp45_;
#line 504 "TimePicker.c"
	}
#line 180 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_update_text (self, FALSE);
#line 508 "TimePicker.c"
}


static gchar*
string_to_utf8 (const gchar* self,
                int* result_length1)
{
	gchar* result = NULL;
	gint string_length = 0;
	gint _tmp0_;
	gint _tmp1_;
	gchar* _result_ = NULL;
	gint _tmp2_;
	gchar* _tmp3_;
	gint _result__length1;
	gint __result__size_;
	gint _tmp4_;
	gchar* _tmp5_;
	gint _tmp5__length1;
	gint _tmp6_;
	gchar* _tmp7_;
	gint _tmp7__length1;
#line 1505 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1506 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1506 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1506 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	string_length = _tmp1_;
#line 1507 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp2_ = string_length;
#line 1507 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp3_ = g_new0 (gchar, _tmp2_ + 1);
#line 1507 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_result_ = _tmp3_;
#line 1507 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_result__length1 = _tmp2_ + 1;
#line 1507 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	__result__size_ = _result__length1;
#line 1508 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp4_ = _result__length1;
#line 1508 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_result__length1 = _tmp4_ - 1;
#line 1509 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp5_ = _result_;
#line 1509 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp5__length1 = _result__length1;
#line 1509 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp6_ = string_length;
#line 1509 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	memcpy (_tmp5_, self, (gsize) _tmp6_);
#line 1510 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp7_ = _result_;
#line 1510 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp7__length1 = _result__length1;
#line 1510 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (result_length1) {
#line 1510 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		*result_length1 = _tmp7__length1;
#line 569 "TimePicker.c"
	}
#line 1510 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp7_;
#line 1510 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 575 "TimePicker.c"
}


static gint*
_int_dup (gint* self)
{
	gint* dup;
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
	dup = g_new0 (gint, 1);
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
	memcpy (dup, self, sizeof (gint));
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
	return dup;
#line 589 "TimePicker.c"
}


static gpointer
__int_dup0 (gpointer self)
{
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
	return self ? _int_dup (self) : NULL;
#line 598 "TimePicker.c"
}


static gboolean
string_contains (const gchar* self,
                 const gchar* needle)
{
	gboolean result = FALSE;
	gchar* _tmp0_;
#line 1473 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, FALSE);
#line 1473 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (needle != NULL, FALSE);
#line 1474 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = strstr ((gchar*) self, (gchar*) needle);
#line 1474 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp0_ != NULL;
#line 1474 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 618 "TimePicker.c"
}


static gboolean
_int_equal (const gint * s1,
            const gint * s2)
{
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (s1 == s2) {
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
		return TRUE;
#line 630 "TimePicker.c"
	}
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (s1 == NULL) {
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
		return FALSE;
#line 636 "TimePicker.c"
	}
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (s2 == NULL) {
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
		return FALSE;
#line 642 "TimePicker.c"
	}
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
	return (*s1) == (*s2);
#line 646 "TimePicker.c"
}


static gchar*
string_slice (const gchar* self,
              glong start,
              glong end)
{
	gchar* result = NULL;
	glong string_length = 0L;
	gint _tmp0_;
	gint _tmp1_;
	gboolean _tmp4_ = FALSE;
	gboolean _tmp6_ = FALSE;
	gchar* _tmp8_;
#line 1425 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1426 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = strlen (self);
#line 1426 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 1426 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	string_length = (glong) _tmp1_;
#line 1427 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (start < ((glong) 0)) {
#line 672 "TimePicker.c"
		glong _tmp2_;
#line 1428 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp2_ = string_length;
#line 1428 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		start = _tmp2_ + start;
#line 678 "TimePicker.c"
	}
#line 1430 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (end < ((glong) 0)) {
#line 682 "TimePicker.c"
		glong _tmp3_;
#line 1431 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp3_ = string_length;
#line 1431 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		end = _tmp3_ + end;
#line 688 "TimePicker.c"
	}
#line 1433 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (start >= ((glong) 0)) {
#line 692 "TimePicker.c"
		glong _tmp5_;
#line 1433 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp5_ = string_length;
#line 1433 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp4_ = start <= _tmp5_;
#line 698 "TimePicker.c"
	} else {
#line 1433 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp4_ = FALSE;
#line 702 "TimePicker.c"
	}
#line 1433 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (_tmp4_, NULL);
#line 1434 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	if (end >= ((glong) 0)) {
#line 708 "TimePicker.c"
		glong _tmp7_;
#line 1434 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp7_ = string_length;
#line 1434 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp6_ = end <= _tmp7_;
#line 714 "TimePicker.c"
	} else {
#line 1434 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
		_tmp6_ = FALSE;
#line 718 "TimePicker.c"
	}
#line 1434 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (_tmp6_, NULL);
#line 1435 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (start <= end, NULL);
#line 1436 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp8_ = g_strndup (((gchar*) self) + start, (gsize) (end - start));
#line 1436 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp8_;
#line 1436 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 730 "TimePicker.c"
}


static void
widgets_time_picker_parse_time (WidgetsTimePicker* self,
                                const gchar* timestr)
{
	gchar* current = NULL;
	gchar* _tmp0_;
	gboolean is_hours = FALSE;
	gboolean is_suffix = FALSE;
	gboolean has_suffix = FALSE;
	gint* hour = NULL;
	gint* minute = NULL;
	gchar* _tmp1_;
	gchar* _tmp2_;
	gint _tmp3_ = 0;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gint _tmp5__length1;
	gboolean _tmp83_ = FALSE;
	gboolean _tmp84_ = FALSE;
	gboolean _tmp85_;
	gint* _tmp91_;
	gboolean _tmp116_ = FALSE;
	gint* _tmp117_;
	gboolean _tmp119_;
#line 183 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 183 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_return_if_fail (timestr != NULL);
#line 184 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = g_strdup ("");
#line 184 "/run/build/planner/src/Widgets/TimePicker.vala"
	current = _tmp0_;
#line 185 "/run/build/planner/src/Widgets/TimePicker.vala"
	is_hours = TRUE;
#line 186 "/run/build/planner/src/Widgets/TimePicker.vala"
	is_suffix = FALSE;
#line 187 "/run/build/planner/src/Widgets/TimePicker.vala"
	has_suffix = FALSE;
#line 189 "/run/build/planner/src/Widgets/TimePicker.vala"
	hour = NULL;
#line 190 "/run/build/planner/src/Widgets/TimePicker.vala"
	minute = NULL;
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp1_ = g_utf8_strdown (timestr, (gssize) -1);
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp2_ = _tmp1_;
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp4_ = string_to_utf8 (_tmp2_, &_tmp3_);
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp5_ = _tmp4_;
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp5__length1 = _tmp3_;
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (_tmp2_);
#line 788 "TimePicker.c"
	{
		gchar* c_collection = NULL;
		gint c_collection_length1 = 0;
		gint _c_collection_size_ = 0;
		gint c_it = 0;
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
		c_collection = _tmp5_;
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
		c_collection_length1 = _tmp5__length1;
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
		for (c_it = 0; c_it < _tmp5__length1; c_it = c_it + 1) {
#line 800 "TimePicker.c"
			gchar c = '\0';
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
			c = c_collection[c_it];
#line 804 "TimePicker.c"
			{
				gchar _tmp6_;
#line 192 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp6_ = c;
#line 192 "/run/build/planner/src/Widgets/TimePicker.vala"
				if (g_ascii_isdigit (_tmp6_)) {
#line 811 "TimePicker.c"
					const gchar* _tmp7_;
					gchar _tmp8_;
					gchar* _tmp9_;
#line 193 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp7_ = current;
#line 193 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp8_ = c;
#line 193 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp9_ = g_strdup_printf ("%s%c", _tmp7_, (gint) _tmp8_);
#line 193 "/run/build/planner/src/Widgets/TimePicker.vala"
					_g_free0 (current);
#line 193 "/run/build/planner/src/Widgets/TimePicker.vala"
					current = _tmp9_;
#line 825 "TimePicker.c"
				} else {
					gboolean _tmp10_ = FALSE;
					gboolean _tmp11_ = FALSE;
					gboolean _tmp12_;
					gboolean _tmp28_ = FALSE;
					gboolean _tmp29_ = FALSE;
					gchar _tmp30_;
					gchar* _tmp31_;
					gchar* _tmp32_;
					gboolean _tmp33_;
					gboolean _tmp41_ = FALSE;
					gchar _tmp42_;
					gchar* _tmp43_;
					gchar* _tmp44_;
					gboolean _tmp45_;
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp12_ = is_hours;
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp12_ == TRUE) {
#line 845 "TimePicker.c"
						gboolean _tmp13_;
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp13_ = is_suffix;
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp11_ = _tmp13_ == FALSE;
#line 851 "TimePicker.c"
					} else {
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp11_ = FALSE;
#line 855 "TimePicker.c"
					}
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp11_) {
#line 859 "TimePicker.c"
						const gchar* _tmp14_;
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp14_ = current;
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp10_ = g_strcmp0 (_tmp14_, "") != 0;
#line 865 "TimePicker.c"
					} else {
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp10_ = FALSE;
#line 869 "TimePicker.c"
					}
#line 195 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp10_) {
#line 873 "TimePicker.c"
						const gchar* _tmp15_;
						gint _tmp16_;
						gint* _tmp17_;
						gchar* _tmp18_;
#line 196 "/run/build/planner/src/Widgets/TimePicker.vala"
						is_hours = FALSE;
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp15_ = current;
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp16_ = atoi (_tmp15_);
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp17_ = __int_dup0 (&_tmp16_);
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
						_g_free0 (hour);
#line 197 "/run/build/planner/src/Widgets/TimePicker.vala"
						hour = _tmp17_;
#line 198 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp18_ = g_strdup ("");
#line 198 "/run/build/planner/src/Widgets/TimePicker.vala"
						_g_free0 (current);
#line 198 "/run/build/planner/src/Widgets/TimePicker.vala"
						current = _tmp18_;
#line 896 "TimePicker.c"
					} else {
						gboolean _tmp19_ = FALSE;
						gboolean _tmp20_ = FALSE;
						gboolean _tmp21_;
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp21_ = is_hours;
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (_tmp21_ == FALSE) {
#line 905 "TimePicker.c"
							gboolean _tmp22_;
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp22_ = is_suffix;
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp20_ = _tmp22_ == FALSE;
#line 911 "TimePicker.c"
						} else {
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp20_ = FALSE;
#line 915 "TimePicker.c"
						}
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (_tmp20_) {
#line 919 "TimePicker.c"
							const gchar* _tmp23_;
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp23_ = current;
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp19_ = g_strcmp0 (_tmp23_, "") != 0;
#line 925 "TimePicker.c"
						} else {
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp19_ = FALSE;
#line 929 "TimePicker.c"
						}
#line 199 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (_tmp19_) {
#line 933 "TimePicker.c"
							const gchar* _tmp24_;
							gint _tmp25_;
							gint* _tmp26_;
							gchar* _tmp27_;
#line 200 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp24_ = current;
#line 200 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp25_ = atoi (_tmp24_);
#line 200 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp26_ = __int_dup0 (&_tmp25_);
#line 200 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_free0 (minute);
#line 200 "/run/build/planner/src/Widgets/TimePicker.vala"
							minute = _tmp26_;
#line 201 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp27_ = g_strdup ("");
#line 201 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_free0 (current);
#line 201 "/run/build/planner/src/Widgets/TimePicker.vala"
							current = _tmp27_;
#line 954 "TimePicker.c"
						}
					}
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp30_ = c;
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp31_ = g_strdup_printf ("%c", _tmp30_);
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp32_ = _tmp31_;
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp33_ = string_contains (_tmp32_, "a");
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
					_g_free0 (_tmp32_);
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp33_) {
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp29_ = TRUE;
#line 971 "TimePicker.c"
					} else {
						gchar _tmp34_;
						gchar* _tmp35_;
						gchar* _tmp36_;
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp34_ = c;
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp35_ = g_strdup_printf ("%c", _tmp34_);
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp36_ = _tmp35_;
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp29_ = string_contains (_tmp36_, "p");
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_g_free0 (_tmp36_);
#line 986 "TimePicker.c"
					}
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp29_) {
#line 990 "TimePicker.c"
						gboolean _tmp37_;
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp37_ = is_suffix;
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp28_ = _tmp37_ == FALSE;
#line 996 "TimePicker.c"
					} else {
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp28_ = FALSE;
#line 1000 "TimePicker.c"
					}
#line 204 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp28_) {
#line 1004 "TimePicker.c"
						const gchar* _tmp38_;
						gchar _tmp39_;
						gchar* _tmp40_;
#line 205 "/run/build/planner/src/Widgets/TimePicker.vala"
						is_suffix = TRUE;
#line 206 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp38_ = current;
#line 206 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp39_ = c;
#line 206 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp40_ = g_strdup_printf ("%s%c", _tmp38_, (gint) _tmp39_);
#line 206 "/run/build/planner/src/Widgets/TimePicker.vala"
						_g_free0 (current);
#line 206 "/run/build/planner/src/Widgets/TimePicker.vala"
						current = _tmp40_;
#line 1020 "TimePicker.c"
					}
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp42_ = c;
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp43_ = g_strdup_printf ("%c", _tmp42_);
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp44_ = _tmp43_;
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp45_ = string_contains (_tmp44_, "m");
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
					_g_free0 (_tmp44_);
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp45_) {
#line 1034 "TimePicker.c"
						gboolean _tmp46_;
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp46_ = is_suffix;
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp41_ = _tmp46_ == TRUE;
#line 1040 "TimePicker.c"
					} else {
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp41_ = FALSE;
#line 1044 "TimePicker.c"
					}
#line 209 "/run/build/planner/src/Widgets/TimePicker.vala"
					if (_tmp41_) {
#line 1048 "TimePicker.c"
						gint* _tmp47_;
						gboolean _tmp51_ = FALSE;
						const gchar* _tmp52_;
						gboolean _tmp68_ = FALSE;
						const gchar* _tmp69_;
						GDateTime* _tmp76_;
						GDateTime* _tmp77_;
						gint* _tmp78_;
						GDateTime* _tmp79_;
						GDateTime* _tmp80_;
						GDateTime* _tmp81_;
						GDateTime* _tmp82_;
#line 210 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp47_ = hour;
#line 210 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (_tmp47_ == NULL) {
#line 211 "/run/build/planner/src/Widgets/TimePicker.vala"
							c_collection = (g_free (c_collection), NULL);
#line 211 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_free0 (minute);
#line 211 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_free0 (hour);
#line 211 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_free0 (current);
#line 211 "/run/build/planner/src/Widgets/TimePicker.vala"
							return;
#line 1075 "TimePicker.c"
						} else {
							gint* _tmp48_;
#line 212 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp48_ = minute;
#line 212 "/run/build/planner/src/Widgets/TimePicker.vala"
							if (_tmp48_ == NULL) {
#line 1082 "TimePicker.c"
								gint _tmp49_;
								gint* _tmp50_;
#line 213 "/run/build/planner/src/Widgets/TimePicker.vala"
								_tmp49_ = 0;
#line 213 "/run/build/planner/src/Widgets/TimePicker.vala"
								_tmp50_ = __int_dup0 (&_tmp49_);
#line 213 "/run/build/planner/src/Widgets/TimePicker.vala"
								_g_free0 (minute);
#line 213 "/run/build/planner/src/Widgets/TimePicker.vala"
								minute = _tmp50_;
#line 1093 "TimePicker.c"
							}
						}
#line 217 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp52_ = current;
#line 217 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (string_contains (_tmp52_, "a")) {
#line 217 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp51_ = TRUE;
#line 1102 "TimePicker.c"
						} else {
							gint* _tmp53_;
#line 217 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp53_ = hour;
#line 217 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp51_ = (*_tmp53_) >= 12;
#line 1109 "TimePicker.c"
						}
#line 217 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (_tmp51_) {
#line 1113 "TimePicker.c"
							GDateTime* _tmp54_;
							GDateTime* _tmp55_;
							gint* _tmp56_;
							GDateTime* _tmp57_;
							GDateTime* _tmp58_;
							GDateTime* _tmp59_;
							GDateTime* _tmp60_;
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp54_ = widgets_time_picker_get_time (self);
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp55_ = _tmp54_;
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp56_ = hour;
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp57_ = widgets_time_picker_get_time (self);
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp58_ = _tmp57_;
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp59_ = g_date_time_add_hours (_tmp55_, (*_tmp56_) - g_date_time_get_hour (_tmp58_));
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp60_ = _tmp59_;
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							widgets_time_picker_set_time (self, _tmp60_);
#line 218 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_date_time_unref0 (_tmp60_);
#line 1139 "TimePicker.c"
						} else {
							GDateTime* _tmp61_;
							GDateTime* _tmp62_;
							gint* _tmp63_;
							GDateTime* _tmp64_;
							GDateTime* _tmp65_;
							GDateTime* _tmp66_;
							GDateTime* _tmp67_;
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp61_ = widgets_time_picker_get_time (self);
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp62_ = _tmp61_;
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp63_ = hour;
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp64_ = widgets_time_picker_get_time (self);
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp65_ = _tmp64_;
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp66_ = g_date_time_add_hours (_tmp62_, ((*_tmp63_) + 12) - g_date_time_get_hour (_tmp65_));
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp67_ = _tmp66_;
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							widgets_time_picker_set_time (self, _tmp67_);
#line 220 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_date_time_unref0 (_tmp67_);
#line 1166 "TimePicker.c"
						}
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp69_ = current;
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (string_contains (_tmp69_, "a")) {
#line 1172 "TimePicker.c"
							gint* _tmp70_;
							gint _tmp71_;
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp70_ = hour;
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp71_ = 12;
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp68_ = _int_equal (_tmp70_, &_tmp71_) == TRUE;
#line 1181 "TimePicker.c"
						} else {
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp68_ = FALSE;
#line 1185 "TimePicker.c"
						}
#line 223 "/run/build/planner/src/Widgets/TimePicker.vala"
						if (_tmp68_) {
#line 1189 "TimePicker.c"
							GDateTime* _tmp72_;
							GDateTime* _tmp73_;
							GDateTime* _tmp74_;
							GDateTime* _tmp75_;
#line 224 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp72_ = widgets_time_picker_get_time (self);
#line 224 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp73_ = _tmp72_;
#line 224 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp74_ = g_date_time_add_hours (_tmp73_, -12);
#line 224 "/run/build/planner/src/Widgets/TimePicker.vala"
							_tmp75_ = _tmp74_;
#line 224 "/run/build/planner/src/Widgets/TimePicker.vala"
							widgets_time_picker_set_time (self, _tmp75_);
#line 224 "/run/build/planner/src/Widgets/TimePicker.vala"
							_g_date_time_unref0 (_tmp75_);
#line 1206 "TimePicker.c"
						}
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp76_ = widgets_time_picker_get_time (self);
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp77_ = _tmp76_;
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp78_ = minute;
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp79_ = widgets_time_picker_get_time (self);
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp80_ = _tmp79_;
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp81_ = g_date_time_add_minutes (_tmp77_, (*_tmp78_) - g_date_time_get_minute (_tmp80_));
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						_tmp82_ = _tmp81_;
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						widgets_time_picker_set_time (self, _tmp82_);
#line 227 "/run/build/planner/src/Widgets/TimePicker.vala"
						_g_date_time_unref0 (_tmp82_);
#line 228 "/run/build/planner/src/Widgets/TimePicker.vala"
						has_suffix = TRUE;
#line 1228 "TimePicker.c"
					}
				}
			}
		}
#line 191 "/run/build/planner/src/Widgets/TimePicker.vala"
		c_collection = (g_free (c_collection), NULL);
#line 1235 "TimePicker.c"
	}
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp85_ = is_hours;
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp85_ == FALSE) {
#line 1241 "TimePicker.c"
		gboolean _tmp86_;
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp86_ = is_suffix;
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp84_ = _tmp86_ == FALSE;
#line 1247 "TimePicker.c"
	} else {
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp84_ = FALSE;
#line 1251 "TimePicker.c"
	}
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp84_) {
#line 1255 "TimePicker.c"
		const gchar* _tmp87_;
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp87_ = current;
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp83_ = g_strcmp0 (_tmp87_, "") != 0;
#line 1261 "TimePicker.c"
	} else {
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp83_ = FALSE;
#line 1265 "TimePicker.c"
	}
#line 233 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp83_) {
#line 1269 "TimePicker.c"
		const gchar* _tmp88_;
		gint _tmp89_;
		gint* _tmp90_;
#line 234 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp88_ = current;
#line 234 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp89_ = atoi (_tmp88_);
#line 234 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp90_ = __int_dup0 (&_tmp89_);
#line 234 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_free0 (minute);
#line 234 "/run/build/planner/src/Widgets/TimePicker.vala"
		minute = _tmp90_;
#line 1283 "TimePicker.c"
	}
#line 237 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp91_ = hour;
#line 237 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp91_ == NULL) {
#line 1289 "TimePicker.c"
		const gchar* _tmp92_;
		gint _tmp93_;
		gint _tmp94_;
#line 238 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp92_ = current;
#line 238 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp93_ = strlen (_tmp92_);
#line 238 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp94_ = _tmp93_;
#line 238 "/run/build/planner/src/Widgets/TimePicker.vala"
		if (_tmp94_ < 3) {
#line 1301 "TimePicker.c"
			const gchar* _tmp95_;
			gint _tmp96_;
			gint* _tmp97_;
			gint _tmp98_;
			gint* _tmp99_;
#line 239 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp95_ = current;
#line 239 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp96_ = atoi (_tmp95_);
#line 239 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp97_ = __int_dup0 (&_tmp96_);
#line 239 "/run/build/planner/src/Widgets/TimePicker.vala"
			_g_free0 (hour);
#line 239 "/run/build/planner/src/Widgets/TimePicker.vala"
			hour = _tmp97_;
#line 240 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp98_ = 0;
#line 240 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp99_ = __int_dup0 (&_tmp98_);
#line 240 "/run/build/planner/src/Widgets/TimePicker.vala"
			_g_free0 (minute);
#line 240 "/run/build/planner/src/Widgets/TimePicker.vala"
			minute = _tmp99_;
#line 1325 "TimePicker.c"
		} else {
			const gchar* _tmp100_;
			gint _tmp101_;
			gint _tmp102_;
#line 241 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp100_ = current;
#line 241 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp101_ = strlen (_tmp100_);
#line 241 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp102_ = _tmp101_;
#line 241 "/run/build/planner/src/Widgets/TimePicker.vala"
			if (_tmp102_ == 4) {
#line 1338 "TimePicker.c"
				const gchar* _tmp103_;
				gchar* _tmp104_;
				gchar* _tmp105_;
				gint _tmp106_;
				gint* _tmp107_;
				const gchar* _tmp108_;
				gchar* _tmp109_;
				gchar* _tmp110_;
				gint _tmp111_;
				gint* _tmp112_;
				gboolean _tmp113_ = FALSE;
				gint* _tmp114_;
#line 242 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp103_ = current;
#line 242 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp104_ = string_slice (_tmp103_, (glong) 0, (glong) 2);
#line 242 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp105_ = _tmp104_;
#line 242 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp106_ = atoi (_tmp105_);
#line 242 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp107_ = __int_dup0 (&_tmp106_);
#line 242 "/run/build/planner/src/Widgets/TimePicker.vala"
				_g_free0 (hour);
#line 242 "/run/build/planner/src/Widgets/TimePicker.vala"
				hour = _tmp107_;
#line 242 "/run/build/planner/src/Widgets/TimePicker.vala"
				_g_free0 (_tmp105_);
#line 243 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp108_ = current;
#line 243 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp109_ = string_slice (_tmp108_, (glong) 2, (glong) 4);
#line 243 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp110_ = _tmp109_;
#line 243 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp111_ = atoi (_tmp110_);
#line 243 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp112_ = __int_dup0 (&_tmp111_);
#line 243 "/run/build/planner/src/Widgets/TimePicker.vala"
				_g_free0 (minute);
#line 243 "/run/build/planner/src/Widgets/TimePicker.vala"
				minute = _tmp112_;
#line 243 "/run/build/planner/src/Widgets/TimePicker.vala"
				_g_free0 (_tmp110_);
#line 244 "/run/build/planner/src/Widgets/TimePicker.vala"
				_tmp114_ = hour;
#line 244 "/run/build/planner/src/Widgets/TimePicker.vala"
				if ((*_tmp114_) > 23) {
#line 244 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp113_ = TRUE;
#line 1389 "TimePicker.c"
				} else {
					gint* _tmp115_;
#line 244 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp115_ = minute;
#line 244 "/run/build/planner/src/Widgets/TimePicker.vala"
					_tmp113_ = (*_tmp115_) > 59;
#line 1396 "TimePicker.c"
				}
#line 244 "/run/build/planner/src/Widgets/TimePicker.vala"
				if (_tmp113_) {
#line 245 "/run/build/planner/src/Widgets/TimePicker.vala"
					_g_free0 (hour);
#line 245 "/run/build/planner/src/Widgets/TimePicker.vala"
					hour = NULL;
#line 246 "/run/build/planner/src/Widgets/TimePicker.vala"
					_g_free0 (minute);
#line 246 "/run/build/planner/src/Widgets/TimePicker.vala"
					minute = NULL;
#line 1408 "TimePicker.c"
				}
			}
		}
	}
#line 251 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp117_ = hour;
#line 251 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp117_ == NULL) {
#line 251 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp116_ = TRUE;
#line 1419 "TimePicker.c"
	} else {
		gint* _tmp118_;
#line 251 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp118_ = minute;
#line 251 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp116_ = _tmp118_ == NULL;
#line 1426 "TimePicker.c"
	}
#line 251 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp116_) {
#line 252 "/run/build/planner/src/Widgets/TimePicker.vala"
		widgets_time_picker_update_text (self, FALSE);
#line 253 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_free0 (minute);
#line 253 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_free0 (hour);
#line 253 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_free0 (current);
#line 253 "/run/build/planner/src/Widgets/TimePicker.vala"
		return;
#line 1440 "TimePicker.c"
	}
#line 256 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp119_ = has_suffix;
#line 256 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp119_ == FALSE) {
#line 1446 "TimePicker.c"
		GDateTime* _tmp120_;
		GDateTime* _tmp121_;
		gint* _tmp122_;
		GDateTime* _tmp123_;
		GDateTime* _tmp124_;
		GDateTime* _tmp125_;
		GDateTime* _tmp126_;
		GDateTime* _tmp127_;
		GDateTime* _tmp128_;
		gint* _tmp129_;
		GDateTime* _tmp130_;
		GDateTime* _tmp131_;
		GDateTime* _tmp132_;
		GDateTime* _tmp133_;
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp120_ = widgets_time_picker_get_time (self);
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp121_ = _tmp120_;
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp122_ = hour;
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp123_ = widgets_time_picker_get_time (self);
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp124_ = _tmp123_;
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp125_ = g_date_time_add_hours (_tmp121_, (*_tmp122_) - g_date_time_get_hour (_tmp124_));
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp126_ = _tmp125_;
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		widgets_time_picker_set_time (self, _tmp126_);
#line 257 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_date_time_unref0 (_tmp126_);
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp127_ = widgets_time_picker_get_time (self);
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp128_ = _tmp127_;
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp129_ = minute;
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp130_ = widgets_time_picker_get_time (self);
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp131_ = _tmp130_;
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp132_ = g_date_time_add_minutes (_tmp128_, (*_tmp129_) - g_date_time_get_minute (_tmp131_));
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp133_ = _tmp132_;
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		widgets_time_picker_set_time (self, _tmp133_);
#line 258 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_date_time_unref0 (_tmp133_);
#line 1497 "TimePicker.c"
	}
#line 261 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_update_text (self, FALSE);
#line 183 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (minute);
#line 183 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (hour);
#line 183 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (current);
#line 1507 "TimePicker.c"
}


GDateTime*
widgets_time_picker_get_time (WidgetsTimePicker* self)
{
	GDateTime* result;
	GDateTime* _tmp0_;
	GDateTime* _tmp3_;
#line 31 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 32 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = self->priv->_time;
#line 32 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp0_ == NULL) {
#line 1523 "TimePicker.c"
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
#line 33 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp1_ = g_date_time_new_now_local ();
#line 33 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp2_ = _tmp1_;
#line 33 "/run/build/planner/src/Widgets/TimePicker.vala"
		widgets_time_picker_set_time (self, _tmp2_);
#line 33 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_date_time_unref0 (_tmp2_);
#line 1534 "TimePicker.c"
	}
#line 36 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp3_ = self->priv->_time;
#line 36 "/run/build/planner/src/Widgets/TimePicker.vala"
	result = _tmp3_;
#line 36 "/run/build/planner/src/Widgets/TimePicker.vala"
	return result;
#line 1542 "TimePicker.c"
}


static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 40 "/run/build/planner/src/Widgets/TimePicker.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 1551 "TimePicker.c"
}


void
widgets_time_picker_set_time (WidgetsTimePicker* self,
                              GDateTime* value)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
#line 39 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_return_if_fail (self != NULL);
#line 40 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = _g_date_time_ref0 (value);
#line 40 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_date_time_unref0 (self->priv->_time);
#line 40 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->_time = _tmp0_;
#line 41 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->changing_time = TRUE;
#line 43 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp1_ = self->priv->_time;
#line 43 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (g_date_time_get_hour (_tmp1_) >= 12) {
#line 1575 "TimePicker.c"
		GraniteWidgetsModeButton* _tmp2_;
#line 44 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp2_ = self->priv->am_pm_modebutton;
#line 44 "/run/build/planner/src/Widgets/TimePicker.vala"
		granite_widgets_mode_button_set_active (_tmp2_, 1);
#line 1581 "TimePicker.c"
	} else {
		GraniteWidgetsModeButton* _tmp3_;
#line 46 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp3_ = self->priv->am_pm_modebutton;
#line 46 "/run/build/planner/src/Widgets/TimePicker.vala"
		granite_widgets_mode_button_set_active (_tmp3_, 0);
#line 1588 "TimePicker.c"
	}
#line 49 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_update_text (self, TRUE);
#line 50 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->changing_time = FALSE;
#line 39 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_notify_by_pspec ((GObject *) self, widgets_time_picker_properties[WIDGETS_TIME_PICKER_TIME_PROPERTY]);
#line 1596 "TimePicker.c"
}


static void
_widgets_time_picker___lambda8_ (WidgetsTimePicker* self,
                                 GtkWidget* mode)
{
	gboolean _tmp0_;
	GraniteWidgetsModeButton* _tmp1_;
	gint _tmp2_;
	gint _tmp3_;
#line 71 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_return_if_fail (mode != NULL);
#line 72 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = self->priv->changing_time;
#line 72 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp0_) {
#line 73 "/run/build/planner/src/Widgets/TimePicker.vala"
		return;
#line 1616 "TimePicker.c"
	}
#line 76 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp1_ = self->priv->am_pm_modebutton;
#line 76 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp2_ = granite_widgets_mode_button_get_selected (_tmp1_);
#line 76 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp3_ = _tmp2_;
#line 76 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp3_ == 0) {
#line 1626 "TimePicker.c"
		GDateTime* _tmp4_;
		GDateTime* _tmp5_;
		GDateTime* _tmp6_;
#line 77 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp4_ = self->priv->_time;
#line 77 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp5_ = g_date_time_add_hours (_tmp4_, -12);
#line 77 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp6_ = _tmp5_;
#line 77 "/run/build/planner/src/Widgets/TimePicker.vala"
		widgets_time_picker_set_time (self, _tmp6_);
#line 77 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_date_time_unref0 (_tmp6_);
#line 1640 "TimePicker.c"
	} else {
		GraniteWidgetsModeButton* _tmp7_;
		gint _tmp8_;
		gint _tmp9_;
#line 78 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp7_ = self->priv->am_pm_modebutton;
#line 78 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp8_ = granite_widgets_mode_button_get_selected (_tmp7_);
#line 78 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp9_ = _tmp8_;
#line 78 "/run/build/planner/src/Widgets/TimePicker.vala"
		if (_tmp9_ == 1) {
#line 1653 "TimePicker.c"
			GDateTime* _tmp10_;
			GDateTime* _tmp11_;
			GDateTime* _tmp12_;
#line 79 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp10_ = self->priv->_time;
#line 79 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp11_ = g_date_time_add_hours (_tmp10_, 12);
#line 79 "/run/build/planner/src/Widgets/TimePicker.vala"
			_tmp12_ = _tmp11_;
#line 79 "/run/build/planner/src/Widgets/TimePicker.vala"
			widgets_time_picker_set_time (self, _tmp12_);
#line 79 "/run/build/planner/src/Widgets/TimePicker.vala"
			_g_date_time_unref0 (_tmp12_);
#line 1667 "TimePicker.c"
		} else {
#line 81 "/run/build/planner/src/Widgets/TimePicker.vala"
			g_assert_not_reached ();
#line 1671 "TimePicker.c"
		}
	}
#line 84 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_update_text (self, TRUE);
#line 1676 "TimePicker.c"
}


static void
__widgets_time_picker___lambda8__granite_widgets_mode_button_mode_changed (GraniteWidgetsModeButton* _sender,
                                                                           GtkWidget* widget,
                                                                           gpointer self)
{
#line 71 "/run/build/planner/src/Widgets/TimePicker.vala"
	_widgets_time_picker___lambda8_ ((WidgetsTimePicker*) self, widget);
#line 1687 "TimePicker.c"
}


static void
_widgets_time_picker___lambda9_ (WidgetsTimePicker* self)
{
#line 95 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_update_time (self, TRUE);
#line 1696 "TimePicker.c"
}


static void
__widgets_time_picker___lambda9__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                gpointer self)
{
#line 95 "/run/build/planner/src/Widgets/TimePicker.vala"
	_widgets_time_picker___lambda9_ ((WidgetsTimePicker*) self);
#line 1706 "TimePicker.c"
}


static void
_widgets_time_picker___lambda10_ (WidgetsTimePicker* self)
{
#line 100 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_update_time (self, FALSE);
#line 1715 "TimePicker.c"
}


static void
__widgets_time_picker___lambda10__gtk_spin_button_value_changed (GtkSpinButton* _sender,
                                                                 gpointer self)
{
#line 100 "/run/build/planner/src/Widgets/TimePicker.vala"
	_widgets_time_picker___lambda10_ ((WidgetsTimePicker*) self);
#line 1725 "TimePicker.c"
}


static gchar*
double_to_string (gdouble self)
{
	gchar* result = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gint _tmp1__length1;
	const gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_new0 (gchar, G_ASCII_DTOSTR_BUF_SIZE);
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = _tmp0_;
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1__length1 = G_ASCII_DTOSTR_BUF_SIZE;
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp2_ = g_ascii_dtostr (_tmp1_, G_ASCII_DTOSTR_BUF_SIZE, self);
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp3_ = g_strdup (_tmp2_);
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp4_ = _tmp3_;
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = (g_free (_tmp1_), NULL);
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp4_;
#line 938 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 1757 "TimePicker.c"
}


static gboolean
_widgets_time_picker___lambda11_ (WidgetsTimePicker* self)
{
	gboolean result = FALSE;
	gdouble val = 0.0;
	GtkSpinButton* _tmp0_;
	gdouble _tmp1_;
#line 103 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = self->priv->minutes_spinbutton;
#line 103 "/run/build/planner/src/Widgets/TimePicker.vala"
	val = gtk_spin_button_get_value (_tmp0_);
#line 104 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp1_ = val;
#line 104 "/run/build/planner/src/Widgets/TimePicker.vala"
	if (_tmp1_ < ((gdouble) 10)) {
#line 1776 "TimePicker.c"
		GtkSpinButton* _tmp2_;
		gdouble _tmp3_;
		gchar* _tmp4_;
		gchar* _tmp5_;
		gchar* _tmp6_;
		gchar* _tmp7_;
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp2_ = self->priv->minutes_spinbutton;
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp3_ = val;
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp4_ = double_to_string (_tmp3_);
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp5_ = _tmp4_;
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp6_ = g_strconcat ("0", _tmp5_, NULL);
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		_tmp7_ = _tmp6_;
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		gtk_entry_set_text ((GtkEntry*) _tmp2_, _tmp7_);
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_free0 (_tmp7_);
#line 105 "/run/build/planner/src/Widgets/TimePicker.vala"
		_g_free0 (_tmp5_);
#line 106 "/run/build/planner/src/Widgets/TimePicker.vala"
		result = TRUE;
#line 106 "/run/build/planner/src/Widgets/TimePicker.vala"
		return result;
#line 1805 "TimePicker.c"
	}
#line 109 "/run/build/planner/src/Widgets/TimePicker.vala"
	result = FALSE;
#line 109 "/run/build/planner/src/Widgets/TimePicker.vala"
	return result;
#line 1811 "TimePicker.c"
}


static gboolean
__widgets_time_picker___lambda11__gtk_spin_button_output (GtkSpinButton* _sender,
                                                          gpointer self)
{
	gboolean result;
	result = _widgets_time_picker___lambda11_ ((WidgetsTimePicker*) self);
#line 102 "/run/build/planner/src/Widgets/TimePicker.vala"
	return result;
#line 1823 "TimePicker.c"
}


static gboolean
_widgets_time_picker___lambda12_ (WidgetsTimePicker* self)
{
	gboolean result = FALSE;
#line 133 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_is_unfocused (self);
#line 134 "/run/build/planner/src/Widgets/TimePicker.vala"
	result = FALSE;
#line 134 "/run/build/planner/src/Widgets/TimePicker.vala"
	return result;
#line 1837 "TimePicker.c"
}


static gboolean
__widgets_time_picker___lambda12__gtk_widget_focus_out_event (GtkWidget* _sender,
                                                              GdkEventFocus* event,
                                                              gpointer self)
{
	gboolean result;
	result = _widgets_time_picker___lambda12_ ((WidgetsTimePicker*) self);
#line 132 "/run/build/planner/src/Widgets/TimePicker.vala"
	return result;
#line 1850 "TimePicker.c"
}


static void
_widgets_time_picker_is_unfocused_gtk_entry_activate (GtkEntry* _sender,
                                                      gpointer self)
{
#line 137 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_is_unfocused ((WidgetsTimePicker*) self);
#line 1860 "TimePicker.c"
}


static GObject *
widgets_time_picker_constructor (GType type,
                                 guint n_construct_properties,
                                 GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsTimePicker * self;
	GtkEntry* _tmp0_;
	GtkEntry* _tmp1_;
	GraniteWidgetsModeButton* _tmp2_;
	GraniteWidgetsModeButton* _tmp3_;
	GraniteWidgetsModeButton* _tmp4_;
	GraniteWidgetsModeButton* _tmp5_;
	GraniteWidgetsModeButton* _tmp6_;
	GraniteWidgetsModeButton* _tmp7_;
	GtkLabel* separation_label = NULL;
	GtkLabel* _tmp8_;
	GtkSpinButton* _tmp9_;
	GtkSpinButton* _tmp10_;
	GtkSpinButton* _tmp11_;
	GtkSpinButton* _tmp12_;
	GtkSpinButton* _tmp13_;
	GtkSpinButton* _tmp14_;
	GtkSpinButton* _tmp15_;
	GtkSpinButton* _tmp16_;
	GtkSpinButton* _tmp17_;
	GtkGrid* grid = NULL;
	GtkGrid* _tmp18_;
	GtkGrid* _tmp19_;
	GtkGrid* _tmp20_;
	GtkGrid* _tmp21_;
	GtkSpinButton* _tmp22_;
	GtkGrid* _tmp23_;
	GtkLabel* _tmp24_;
	GtkGrid* _tmp25_;
	GtkSpinButton* _tmp26_;
	GtkGrid* _tmp27_;
	GraniteWidgetsModeButton* _tmp28_;
	GtkGrid* _tmp29_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp30_;
	GtkGrid* _tmp31_;
	GtkGrid* _tmp32_;
	GtkGrid* _tmp33_;
	GtkGrid* _tmp34_;
	GtkGrid* _tmp35_;
	GtkGrid* _tmp36_;
	GtkEntry* _tmp37_;
	GtkEntry* _tmp38_;
#line 63 "/run/build/planner/src/Widgets/TimePicker.vala"
	parent_class = G_OBJECT_CLASS (widgets_time_picker_parent_class);
#line 63 "/run/build/planner/src/Widgets/TimePicker.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 63 "/run/build/planner/src/Widgets/TimePicker.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_TIME_PICKER, WidgetsTimePicker);
#line 64 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = (GtkEntry*) gtk_entry_new ();
#line 64 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_ref_sink (_tmp0_);
#line 64 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (self->time_entry);
#line 64 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->time_entry = _tmp0_;
#line 65 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp1_ = self->time_entry;
#line 65 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_entry_set_max_length (_tmp1_, 8);
#line 67 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp2_ = granite_widgets_mode_button_new ();
#line 67 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_ref_sink (_tmp2_);
#line 67 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (self->priv->am_pm_modebutton);
#line 67 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->am_pm_modebutton = _tmp2_;
#line 68 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp3_ = self->priv->am_pm_modebutton;
#line 68 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp3_, GTK_ORIENTATION_VERTICAL);
#line 69 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp4_ = self->priv->am_pm_modebutton;
#line 69 "/run/build/planner/src/Widgets/TimePicker.vala"
	granite_widgets_mode_button_append_text (_tmp4_, _ ("AM"));
#line 70 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp5_ = self->priv->am_pm_modebutton;
#line 70 "/run/build/planner/src/Widgets/TimePicker.vala"
	granite_widgets_mode_button_append_text (_tmp5_, _ ("PM"));
#line 71 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp6_ = self->priv->am_pm_modebutton;
#line 71 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_signal_connect_object (_tmp6_, "mode-changed", (GCallback) __widgets_time_picker___lambda8__granite_widgets_mode_button_mode_changed, self, 0);
#line 87 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp7_ = self->priv->am_pm_modebutton;
#line 87 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp7_, TRUE);
#line 90 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp8_ = (GtkLabel*) gtk_label_new (_ (":"));
#line 90 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_ref_sink (_tmp8_);
#line 90 "/run/build/planner/src/Widgets/TimePicker.vala"
	separation_label = _tmp8_;
#line 92 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp9_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 1, (gdouble) 12, (gdouble) 1);
#line 92 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_ref_sink (_tmp9_);
#line 92 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (self->priv->hours_spinbutton);
#line 92 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->hours_spinbutton = _tmp9_;
#line 93 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp10_ = self->priv->hours_spinbutton;
#line 93 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp10_, GTK_ORIENTATION_VERTICAL);
#line 94 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp11_ = self->priv->hours_spinbutton;
#line 94 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_spin_button_set_wrap (_tmp11_, TRUE);
#line 95 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp12_ = self->priv->hours_spinbutton;
#line 95 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_signal_connect_object (_tmp12_, "value-changed", (GCallback) __widgets_time_picker___lambda9__gtk_spin_button_value_changed, self, 0);
#line 97 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp13_ = (GtkSpinButton*) gtk_spin_button_new_with_range ((gdouble) 0, (gdouble) 59, (gdouble) 1);
#line 97 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_ref_sink (_tmp13_);
#line 97 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (self->priv->minutes_spinbutton);
#line 97 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->minutes_spinbutton = _tmp13_;
#line 98 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp14_ = self->priv->minutes_spinbutton;
#line 98 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp14_, GTK_ORIENTATION_VERTICAL);
#line 99 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp15_ = self->priv->minutes_spinbutton;
#line 99 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_spin_button_set_wrap (_tmp15_, TRUE);
#line 100 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp16_ = self->priv->minutes_spinbutton;
#line 100 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_signal_connect_object (_tmp16_, "value-changed", (GCallback) __widgets_time_picker___lambda10__gtk_spin_button_value_changed, self, 0);
#line 102 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp17_ = self->priv->minutes_spinbutton;
#line 102 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_signal_connect_object (_tmp17_, "output", (GCallback) __widgets_time_picker___lambda11__gtk_spin_button_output, self, 0);
#line 112 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp18_ = (GtkGrid*) gtk_grid_new ();
#line 112 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_ref_sink (_tmp18_);
#line 112 "/run/build/planner/src/Widgets/TimePicker.vala"
	grid = _tmp18_;
#line 113 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp19_ = grid;
#line 113 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_grid_set_column_spacing (_tmp19_, 6);
#line 114 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp20_ = grid;
#line 114 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_grid_set_row_spacing (_tmp20_, 6);
#line 115 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp21_ = grid;
#line 115 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp22_ = self->priv->hours_spinbutton;
#line 115 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_grid_attach (_tmp21_, (GtkWidget*) _tmp22_, 0, 0, 1, 1);
#line 116 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp23_ = grid;
#line 116 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp24_ = separation_label;
#line 116 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_grid_attach (_tmp23_, (GtkWidget*) _tmp24_, 1, 0, 1, 1);
#line 117 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp25_ = grid;
#line 117 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp26_ = self->priv->minutes_spinbutton;
#line 117 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_grid_attach (_tmp25_, (GtkWidget*) _tmp26_, 2, 0, 1, 1);
#line 118 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp27_ = grid;
#line 118 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp28_ = self->priv->am_pm_modebutton;
#line 118 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_grid_attach (_tmp27_, (GtkWidget*) _tmp28_, 3, 0, 1, 1);
#line 119 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp29_ = grid;
#line 119 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_set ((GtkWidget*) _tmp29_, "margin", 6, NULL);
#line 121 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp30_ = (GtkGrid*) gtk_grid_new ();
#line 121 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_ref_sink (_tmp30_);
#line 121 "/run/build/planner/src/Widgets/TimePicker.vala"
	main_grid = _tmp30_;
#line 122 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp31_ = main_grid;
#line 122 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp31_, 12);
#line 123 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp32_ = main_grid;
#line 123 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp32_, GTK_ALIGN_CENTER);
#line 124 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp33_ = main_grid;
#line 124 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp33_, GTK_ORIENTATION_VERTICAL);
#line 126 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp34_ = main_grid;
#line 126 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp35_ = grid;
#line 126 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_container_add ((GtkContainer*) _tmp34_, (GtkWidget*) _tmp35_);
#line 129 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp36_ = main_grid;
#line 129 "/run/build/planner/src/Widgets/TimePicker.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp36_);
#line 130 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_update_text (self, FALSE);
#line 132 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp37_ = self->time_entry;
#line 132 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_signal_connect_object ((GtkWidget*) _tmp37_, "focus-out-event", (GCallback) __widgets_time_picker___lambda12__gtk_widget_focus_out_event, self, 0);
#line 137 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp38_ = self->time_entry;
#line 137 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_signal_connect_object (_tmp38_, "activate", (GCallback) _widgets_time_picker_is_unfocused_gtk_entry_activate, self, 0);
#line 63 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (main_grid);
#line 63 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (grid);
#line 63 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (separation_label);
#line 63 "/run/build/planner/src/Widgets/TimePicker.vala"
	return obj;
#line 2098 "TimePicker.c"
}


static void
widgets_time_picker_class_init (WidgetsTimePickerClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_type_class_add_private (klass, sizeof (WidgetsTimePickerPrivate));
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_widgets_time_picker_get_property;
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_widgets_time_picker_set_property;
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_time_picker_constructor;
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_time_picker_finalize;
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_TIME_PICKER_TIME_PROPERTY, widgets_time_picker_properties[WIDGETS_TIME_PICKER_TIME_PROPERTY] = g_param_spec_boxed ("time", "time", "time", G_TYPE_DATE_TIME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	widgets_time_picker_signals[WIDGETS_TIME_PICKER_TIME_CHANGED_SIGNAL] = g_signal_new ("time-changed", WIDGETS_TYPE_TIME_PICKER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 2121 "TimePicker.c"
}


static void
widgets_time_picker_instance_init (WidgetsTimePicker * self)
{
	gchar* _tmp0_;
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv = WIDGETS_TIME_PICKER_GET_PRIVATE (self);
#line 28 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->_time = NULL;
#line 55 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->changing_time = FALSE;
#line 56 "/run/build/planner/src/Widgets/TimePicker.vala"
	_tmp0_ = g_strdup ("");
#line 56 "/run/build/planner/src/Widgets/TimePicker.vala"
	self->priv->old_string = _tmp0_;
#line 2139 "TimePicker.c"
}


static void
widgets_time_picker_finalize (GObject * obj)
{
	WidgetsTimePicker * self;
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_TIME_PICKER, WidgetsTimePicker);
#line 25 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (self->priv->hours_spinbutton);
#line 26 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (self->priv->minutes_spinbutton);
#line 28 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_date_time_unref0 (self->priv->_time);
#line 56 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_free0 (self->priv->old_string);
#line 57 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (self->priv->am_pm_modebutton);
#line 58 "/run/build/planner/src/Widgets/TimePicker.vala"
	_g_object_unref0 (self->time_entry);
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	G_OBJECT_CLASS (widgets_time_picker_parent_class)->finalize (obj);
#line 2163 "TimePicker.c"
}


GType
widgets_time_picker_get_type (void)
{
	static volatile gsize widgets_time_picker_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_time_picker_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsTimePickerClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_time_picker_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsTimePicker), 0, (GInstanceInitFunc) widgets_time_picker_instance_init, NULL };
		GType widgets_time_picker_type_id;
		widgets_time_picker_type_id = g_type_register_static (gtk_event_box_get_type (), "WidgetsTimePicker", &g_define_type_info, 0);
		g_once_init_leave (&widgets_time_picker_type_id__volatile, widgets_time_picker_type_id);
	}
	return widgets_time_picker_type_id__volatile;
}


static void
_vala_widgets_time_picker_get_property (GObject * object,
                                        guint property_id,
                                        GValue * value,
                                        GParamSpec * pspec)
{
	WidgetsTimePicker * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_TIME_PICKER, WidgetsTimePicker);
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	switch (property_id) {
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		case WIDGETS_TIME_PICKER_TIME_PROPERTY:
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		g_value_set_boxed (value, widgets_time_picker_get_time (self));
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		break;
#line 2197 "TimePicker.c"
		default:
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		break;
#line 2203 "TimePicker.c"
	}
}


static void
_vala_widgets_time_picker_set_property (GObject * object,
                                        guint property_id,
                                        const GValue * value,
                                        GParamSpec * pspec)
{
	WidgetsTimePicker * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_TIME_PICKER, WidgetsTimePicker);
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
	switch (property_id) {
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		case WIDGETS_TIME_PICKER_TIME_PROPERTY:
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		widgets_time_picker_set_time (self, g_value_get_boxed (value));
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		break;
#line 2224 "TimePicker.c"
		default:
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "/run/build/planner/src/Widgets/TimePicker.vala"
		break;
#line 2230 "TimePicker.c"
	}
}



