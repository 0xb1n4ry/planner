/* AlertView.c generated by valac 0.40.11, the Vala compiler
 * generated from AlertView.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <gio/gio.h>
#include <granite.h>
#include <pango/pango.h>
#include <float.h>
#include <math.h>


#define WIDGETS_TYPE_ALERT_VIEW (widgets_alert_view_get_type ())
#define WIDGETS_ALERT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertView))
#define WIDGETS_ALERT_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertViewClass))
#define WIDGETS_IS_ALERT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_ALERT_VIEW))
#define WIDGETS_IS_ALERT_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_ALERT_VIEW))
#define WIDGETS_ALERT_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertViewClass))

typedef struct _WidgetsAlertView WidgetsAlertView;
typedef struct _WidgetsAlertViewClass WidgetsAlertViewClass;
typedef struct _WidgetsAlertViewPrivate WidgetsAlertViewPrivate;
enum  {
	WIDGETS_ALERT_VIEW_0_PROPERTY,
	WIDGETS_ALERT_VIEW_TITLE_PROPERTY,
	WIDGETS_ALERT_VIEW_DESCRIPTION_PROPERTY,
	WIDGETS_ALERT_VIEW_ICON_NAME_PROPERTY,
	WIDGETS_ALERT_VIEW_NUM_PROPERTIES
};
static GParamSpec* widgets_alert_view_properties[WIDGETS_ALERT_VIEW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))

struct _WidgetsAlertView {
	GtkGrid parent_instance;
	WidgetsAlertViewPrivate * priv;
};

struct _WidgetsAlertViewClass {
	GtkGridClass parent_class;
};

struct _WidgetsAlertViewPrivate {
	GtkLabel* title_label;
	GtkLabel* description_label;
	GtkImage* image;
};


static gpointer widgets_alert_view_parent_class = NULL;

GType widgets_alert_view_get_type (void) G_GNUC_CONST;
#define WIDGETS_ALERT_VIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertViewPrivate))
WidgetsAlertView* widgets_alert_view_new (const gchar* title,
                                          const gchar* description,
                                          const gchar* icon_name);
WidgetsAlertView* widgets_alert_view_construct (GType object_type,
                                                const gchar* title,
                                                const gchar* description,
                                                const gchar* icon_name);
const gchar* widgets_alert_view_get_title (WidgetsAlertView* self);
void widgets_alert_view_set_title (WidgetsAlertView* self,
                                   const gchar* value);
const gchar* widgets_alert_view_get_description (WidgetsAlertView* self);
void widgets_alert_view_set_description (WidgetsAlertView* self,
                                         const gchar* value);
gchar* widgets_alert_view_get_icon_name (WidgetsAlertView* self);
void widgets_alert_view_set_icon_name (WidgetsAlertView* self,
                                       const gchar* value);
static GObject * widgets_alert_view_constructor (GType type,
                                          guint n_construct_properties,
                                          GObjectConstructParam * construct_properties);
static void widgets_alert_view_finalize (GObject * obj);
static void _vala_widgets_alert_view_get_property (GObject * object,
                                            guint property_id,
                                            GValue * value,
                                            GParamSpec * pspec);
static void _vala_widgets_alert_view_set_property (GObject * object,
                                            guint property_id,
                                            const GValue * value,
                                            GParamSpec * pspec);


WidgetsAlertView*
widgets_alert_view_construct (GType object_type,
                              const gchar* title,
                              const gchar* description,
                              const gchar* icon_name)
{
	WidgetsAlertView * self = NULL;
#line 61 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_val_if_fail (title != NULL, NULL);
#line 61 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_val_if_fail (description != NULL, NULL);
#line 61 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_val_if_fail (icon_name != NULL, NULL);
#line 62 "/run/build/planner/src/Widgets/AlertView.vala"
	self = (WidgetsAlertView*) g_object_new (object_type, "title", title, "description", description, "icon-name", icon_name, NULL);
#line 61 "/run/build/planner/src/Widgets/AlertView.vala"
	return self;
#line 127 "AlertView.c"
}


WidgetsAlertView*
widgets_alert_view_new (const gchar* title,
                        const gchar* description,
                        const gchar* icon_name)
{
#line 61 "/run/build/planner/src/Widgets/AlertView.vala"
	return widgets_alert_view_construct (WIDGETS_TYPE_ALERT_VIEW, title, description, icon_name);
#line 138 "AlertView.c"
}


const gchar*
widgets_alert_view_get_title (WidgetsAlertView* self)
{
	const gchar* result;
	GtkLabel* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
#line 24 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 25 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp0_ = self->priv->title_label;
#line 25 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp1_ = gtk_label_get_label (_tmp0_);
#line 25 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp2_ = _tmp1_;
#line 25 "/run/build/planner/src/Widgets/AlertView.vala"
	result = _tmp2_;
#line 25 "/run/build/planner/src/Widgets/AlertView.vala"
	return result;
#line 161 "AlertView.c"
}


void
widgets_alert_view_set_title (WidgetsAlertView* self,
                              const gchar* value)
{
	GtkLabel* _tmp0_;
#line 27 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_if_fail (self != NULL);
#line 28 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp0_ = self->priv->title_label;
#line 28 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_label_set_label (_tmp0_, value);
#line 27 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_notify_by_pspec ((GObject *) self, widgets_alert_view_properties[WIDGETS_ALERT_VIEW_TITLE_PROPERTY]);
#line 178 "AlertView.c"
}


const gchar*
widgets_alert_view_get_description (WidgetsAlertView* self)
{
	const gchar* result;
	GtkLabel* _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
#line 33 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 34 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp0_ = self->priv->description_label;
#line 34 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp1_ = gtk_label_get_label (_tmp0_);
#line 34 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp2_ = _tmp1_;
#line 34 "/run/build/planner/src/Widgets/AlertView.vala"
	result = _tmp2_;
#line 34 "/run/build/planner/src/Widgets/AlertView.vala"
	return result;
#line 201 "AlertView.c"
}


void
widgets_alert_view_set_description (WidgetsAlertView* self,
                                    const gchar* value)
{
	GtkLabel* _tmp0_;
#line 36 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_if_fail (self != NULL);
#line 37 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp0_ = self->priv->description_label;
#line 37 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_label_set_label (_tmp0_, value);
#line 36 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_notify_by_pspec ((GObject *) self, widgets_alert_view_properties[WIDGETS_ALERT_VIEW_DESCRIPTION_PROPERTY]);
#line 218 "AlertView.c"
}


gchar*
widgets_alert_view_get_icon_name (WidgetsAlertView* self)
{
	gchar* result;
	gchar* _tmp0_ = NULL;
	GtkImage* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp5_;
#line 42 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp1_ = self->priv->image;
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_get (_tmp1_, "icon-name", &_tmp2_, NULL);
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp3_ = _tmp2_;
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp0_ = _tmp3_;
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	if (_tmp0_ == NULL) {
#line 243 "AlertView.c"
		gchar* _tmp4_;
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp4_ = g_strdup ("");
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
		_g_free0 (_tmp0_);
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp0_ = _tmp4_;
#line 251 "AlertView.c"
	}
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp5_ = _tmp0_;
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp0_ = NULL;
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	result = _tmp5_;
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	_g_free0 (_tmp0_);
#line 43 "/run/build/planner/src/Widgets/AlertView.vala"
	return result;
#line 263 "AlertView.c"
}


void
widgets_alert_view_set_icon_name (WidgetsAlertView* self,
                                  const gchar* value)
{
	gboolean _tmp0_ = FALSE;
#line 45 "/run/build/planner/src/Widgets/AlertView.vala"
	g_return_if_fail (self != NULL);
#line 46 "/run/build/planner/src/Widgets/AlertView.vala"
	if (value != NULL) {
#line 46 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp0_ = g_strcmp0 (value, "") != 0;
#line 278 "AlertView.c"
	} else {
#line 46 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp0_ = FALSE;
#line 282 "AlertView.c"
	}
#line 46 "/run/build/planner/src/Widgets/AlertView.vala"
	if (_tmp0_) {
#line 286 "AlertView.c"
		GtkImage* _tmp1_;
		GThemedIcon* _tmp2_;
		GThemedIcon* _tmp3_;
		GtkImage* _tmp4_;
		GtkImage* _tmp5_;
		GtkImage* _tmp6_;
#line 47 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp1_ = self->priv->image;
#line 47 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp2_ = (GThemedIcon*) g_themed_icon_new (value);
#line 47 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp3_ = _tmp2_;
#line 47 "/run/build/planner/src/Widgets/AlertView.vala"
		g_object_set (_tmp1_, "gicon", (GIcon*) _tmp3_, NULL);
#line 47 "/run/build/planner/src/Widgets/AlertView.vala"
		_g_object_unref0 (_tmp3_);
#line 48 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp4_ = self->priv->image;
#line 48 "/run/build/planner/src/Widgets/AlertView.vala"
		gtk_image_set_pixel_size (_tmp4_, 64);
#line 49 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp5_ = self->priv->image;
#line 49 "/run/build/planner/src/Widgets/AlertView.vala"
		gtk_widget_set_no_show_all ((GtkWidget*) _tmp5_, FALSE);
#line 50 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp6_ = self->priv->image;
#line 50 "/run/build/planner/src/Widgets/AlertView.vala"
		gtk_widget_show ((GtkWidget*) _tmp6_);
#line 315 "AlertView.c"
	} else {
		GtkImage* _tmp7_;
		GtkImage* _tmp8_;
#line 52 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp7_ = self->priv->image;
#line 52 "/run/build/planner/src/Widgets/AlertView.vala"
		gtk_widget_set_no_show_all ((GtkWidget*) _tmp7_, TRUE);
#line 53 "/run/build/planner/src/Widgets/AlertView.vala"
		_tmp8_ = self->priv->image;
#line 53 "/run/build/planner/src/Widgets/AlertView.vala"
		gtk_widget_hide ((GtkWidget*) _tmp8_);
#line 327 "AlertView.c"
	}
#line 45 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_notify_by_pspec ((GObject *) self, widgets_alert_view_properties[WIDGETS_ALERT_VIEW_ICON_NAME_PROPERTY]);
#line 331 "AlertView.c"
}


static GObject *
widgets_alert_view_constructor (GType type,
                                guint n_construct_properties,
                                GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsAlertView * self;
	GtkStyleContext* _tmp0_;
	GtkLabel* _tmp1_;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkStyleContext* _tmp5_;
	GtkLabel* _tmp6_;
	GtkLabel* _tmp7_;
	GtkLabel* _tmp8_;
	GtkLabel* _tmp9_;
	GtkLabel* _tmp10_;
	GtkLabel* _tmp11_;
	GtkLabel* _tmp12_;
	GtkLabel* _tmp13_;
	GtkLabel* _tmp14_;
	GtkStyleContext* _tmp15_;
	GtkLabel* _tmp16_;
	GtkLabel* _tmp17_;
	GtkLabel* _tmp18_;
	GtkLabel* _tmp19_;
	GtkImage* _tmp20_;
	GtkImage* _tmp21_;
	GtkImage* _tmp22_;
	GtkGrid* layout = NULL;
	GtkGrid* _tmp23_;
	GtkGrid* _tmp24_;
	GtkGrid* _tmp25_;
	GtkGrid* _tmp26_;
	GtkGrid* _tmp27_;
	GtkGrid* _tmp28_;
	GtkGrid* _tmp29_;
	GtkGrid* _tmp30_;
	GtkImage* _tmp31_;
	GtkGrid* _tmp32_;
	GtkLabel* _tmp33_;
	GtkGrid* _tmp34_;
	GtkLabel* _tmp35_;
	GtkGrid* _tmp36_;
#line 69 "/run/build/planner/src/Widgets/AlertView.vala"
	parent_class = G_OBJECT_CLASS (widgets_alert_view_parent_class);
#line 69 "/run/build/planner/src/Widgets/AlertView.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 69 "/run/build/planner/src/Widgets/AlertView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertView);
#line 70 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 70 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_style_context_add_class (_tmp0_, GTK_STYLE_CLASS_VIEW);
#line 71 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_set ((GtkWidget*) self, "expand", TRUE, NULL);
#line 73 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp1_ = (GtkLabel*) gtk_label_new (NULL);
#line 73 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_ref_sink (_tmp1_);
#line 73 "/run/build/planner/src/Widgets/AlertView.vala"
	_g_object_unref0 (self->priv->title_label);
#line 73 "/run/build/planner/src/Widgets/AlertView.vala"
	self->priv->title_label = _tmp1_;
#line 74 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp2_ = self->priv->title_label;
#line 74 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp2_, GTK_ALIGN_CENTER);
#line 75 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp3_ = self->priv->title_label;
#line 75 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp3_, TRUE);
#line 76 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp4_ = self->priv->title_label;
#line 76 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp5_ = gtk_widget_get_style_context ((GtkWidget*) _tmp4_);
#line 76 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_style_context_add_class (_tmp5_, GRANITE_STYLE_CLASS_H2_LABEL);
#line 77 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp6_ = self->priv->title_label;
#line 77 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_label_set_max_width_chars (_tmp6_, 75);
#line 78 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp7_ = self->priv->title_label;
#line 78 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_set (_tmp7_, "wrap", TRUE, NULL);
#line 79 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp8_ = self->priv->title_label;
#line 79 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_set (_tmp8_, "wrap-mode", PANGO_WRAP_WORD_CHAR, NULL);
#line 80 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp9_ = self->priv->title_label;
#line 80 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_label_set_xalign (_tmp9_, (gfloat) 0);
#line 82 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp10_ = (GtkLabel*) gtk_label_new (NULL);
#line 82 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_ref_sink (_tmp10_);
#line 82 "/run/build/planner/src/Widgets/AlertView.vala"
	_g_object_unref0 (self->priv->description_label);
#line 82 "/run/build/planner/src/Widgets/AlertView.vala"
	self->priv->description_label = _tmp10_;
#line 83 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp11_ = self->priv->description_label;
#line 83 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp11_, TRUE);
#line 84 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp12_ = self->priv->description_label;
#line 84 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_label_set_max_width_chars (_tmp12_, 75);
#line 85 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp13_ = self->priv->description_label;
#line 85 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_set (_tmp13_, "wrap", TRUE, NULL);
#line 86 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp14_ = self->priv->description_label;
#line 86 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp15_ = gtk_widget_get_style_context ((GtkWidget*) _tmp14_);
#line 86 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_style_context_add_class (_tmp15_, GRANITE_STYLE_CLASS_H3_LABEL);
#line 87 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp16_ = self->priv->description_label;
#line 87 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_label_set_use_markup (_tmp16_, TRUE);
#line 88 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp17_ = self->priv->description_label;
#line 88 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_label_set_xalign (_tmp17_, (gfloat) 0);
#line 89 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp18_ = self->priv->description_label;
#line 89 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp18_, GTK_ALIGN_START);
#line 90 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp19_ = self->priv->description_label;
#line 90 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp19_, GTK_ALIGN_CENTER);
#line 92 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp20_ = (GtkImage*) gtk_image_new ();
#line 92 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_ref_sink (_tmp20_);
#line 92 "/run/build/planner/src/Widgets/AlertView.vala"
	_g_object_unref0 (self->priv->image);
#line 92 "/run/build/planner/src/Widgets/AlertView.vala"
	self->priv->image = _tmp20_;
#line 93 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp21_ = self->priv->image;
#line 93 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp21_, (gdouble) 1);
#line 94 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp22_ = self->priv->image;
#line 94 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp22_, GTK_ALIGN_START);
#line 96 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp23_ = (GtkGrid*) gtk_grid_new ();
#line 96 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_ref_sink (_tmp23_);
#line 96 "/run/build/planner/src/Widgets/AlertView.vala"
	layout = _tmp23_;
#line 97 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp24_ = layout;
#line 97 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp24_, GTK_ORIENTATION_VERTICAL);
#line 98 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp25_ = layout;
#line 98 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_grid_set_row_spacing (_tmp25_, 6);
#line 99 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp26_ = layout;
#line 99 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp26_, GTK_ALIGN_CENTER);
#line 100 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp27_ = layout;
#line 100 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp27_, GTK_ALIGN_CENTER);
#line 101 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp28_ = layout;
#line 101 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_widget_set_vexpand ((GtkWidget*) _tmp28_, TRUE);
#line 102 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp29_ = layout;
#line 102 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_set ((GtkWidget*) _tmp29_, "margin", 24, NULL);
#line 104 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp30_ = layout;
#line 104 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp31_ = self->priv->image;
#line 104 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_container_add ((GtkContainer*) _tmp30_, (GtkWidget*) _tmp31_);
#line 105 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp32_ = layout;
#line 105 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp33_ = self->priv->title_label;
#line 105 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_container_add ((GtkContainer*) _tmp32_, (GtkWidget*) _tmp33_);
#line 106 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp34_ = layout;
#line 106 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp35_ = self->priv->description_label;
#line 106 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_container_add ((GtkContainer*) _tmp34_, (GtkWidget*) _tmp35_);
#line 108 "/run/build/planner/src/Widgets/AlertView.vala"
	_tmp36_ = layout;
#line 108 "/run/build/planner/src/Widgets/AlertView.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp36_);
#line 69 "/run/build/planner/src/Widgets/AlertView.vala"
	_g_object_unref0 (layout);
#line 69 "/run/build/planner/src/Widgets/AlertView.vala"
	return obj;
#line 545 "AlertView.c"
}


static void
widgets_alert_view_class_init (WidgetsAlertViewClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	widgets_alert_view_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	g_type_class_add_private (klass, sizeof (WidgetsAlertViewPrivate));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_widgets_alert_view_get_property;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_widgets_alert_view_set_property;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_alert_view_constructor;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_alert_view_finalize;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_ALERT_VIEW_TITLE_PROPERTY, widgets_alert_view_properties[WIDGETS_ALERT_VIEW_TITLE_PROPERTY] = g_param_spec_string ("title", "title", "title", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_ALERT_VIEW_DESCRIPTION_PROPERTY, widgets_alert_view_properties[WIDGETS_ALERT_VIEW_DESCRIPTION_PROPERTY] = g_param_spec_string ("description", "description", "description", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), WIDGETS_ALERT_VIEW_ICON_NAME_PROPERTY, widgets_alert_view_properties[WIDGETS_ALERT_VIEW_ICON_NAME_PROPERTY] = g_param_spec_string ("icon-name", "icon-name", "icon-name", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 570 "AlertView.c"
}


static void
widgets_alert_view_instance_init (WidgetsAlertView * self)
{
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	self->priv = WIDGETS_ALERT_VIEW_GET_PRIVATE (self);
#line 579 "AlertView.c"
}


static void
widgets_alert_view_finalize (GObject * obj)
{
	WidgetsAlertView * self;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertView);
#line 58 "/run/build/planner/src/Widgets/AlertView.vala"
	_g_object_unref0 (self->priv->title_label);
#line 59 "/run/build/planner/src/Widgets/AlertView.vala"
	_g_object_unref0 (self->priv->description_label);
#line 60 "/run/build/planner/src/Widgets/AlertView.vala"
	_g_object_unref0 (self->priv->image);
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	G_OBJECT_CLASS (widgets_alert_view_parent_class)->finalize (obj);
#line 597 "AlertView.c"
}


GType
widgets_alert_view_get_type (void)
{
	static volatile gsize widgets_alert_view_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_alert_view_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsAlertViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_alert_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsAlertView), 0, (GInstanceInitFunc) widgets_alert_view_instance_init, NULL };
		GType widgets_alert_view_type_id;
		widgets_alert_view_type_id = g_type_register_static (gtk_grid_get_type (), "WidgetsAlertView", &g_define_type_info, 0);
		g_once_init_leave (&widgets_alert_view_type_id__volatile, widgets_alert_view_type_id);
	}
	return widgets_alert_view_type_id__volatile;
}


static void
_vala_widgets_alert_view_get_property (GObject * object,
                                       guint property_id,
                                       GValue * value,
                                       GParamSpec * pspec)
{
	WidgetsAlertView * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertView);
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	switch (property_id) {
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		case WIDGETS_ALERT_VIEW_TITLE_PROPERTY:
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		g_value_set_string (value, widgets_alert_view_get_title (self));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		break;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		case WIDGETS_ALERT_VIEW_DESCRIPTION_PROPERTY:
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		g_value_set_string (value, widgets_alert_view_get_description (self));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		break;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		case WIDGETS_ALERT_VIEW_ICON_NAME_PROPERTY:
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		g_value_take_string (value, widgets_alert_view_get_icon_name (self));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		break;
#line 643 "AlertView.c"
		default:
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		break;
#line 649 "AlertView.c"
	}
}


static void
_vala_widgets_alert_view_set_property (GObject * object,
                                       guint property_id,
                                       const GValue * value,
                                       GParamSpec * pspec)
{
	WidgetsAlertView * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertView);
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
	switch (property_id) {
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		case WIDGETS_ALERT_VIEW_TITLE_PROPERTY:
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		widgets_alert_view_set_title (self, g_value_get_string (value));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		break;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		case WIDGETS_ALERT_VIEW_DESCRIPTION_PROPERTY:
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		widgets_alert_view_set_description (self, g_value_get_string (value));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		break;
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		case WIDGETS_ALERT_VIEW_ICON_NAME_PROPERTY:
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		widgets_alert_view_set_icon_name (self, g_value_get_string (value));
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		break;
#line 682 "AlertView.c"
		default:
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "/run/build/planner/src/Widgets/AlertView.vala"
		break;
#line 688 "AlertView.c"
	}
}



