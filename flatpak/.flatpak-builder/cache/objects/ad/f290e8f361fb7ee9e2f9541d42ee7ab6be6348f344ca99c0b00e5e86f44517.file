/* unity-extra-preview-player-client.c generated by valac 0.40.11, the Vala compiler
 * generated from unity-extra-preview-player-client.vala, do not modify */

/*
 * Copyright (C) 2012 Canonical Ltd
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by Pawel Stolowski <pawel.stolowski@canonical.com>
 */


#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <gio/gio.h>
#include <float.h>
#include <math.h>
#include "unity-extras.h"
#include <unity.h>


#define UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE (unity_extras_preview_player_service_get_type ())
#define UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE, UnityExtrasPreviewPlayerService))
#define UNITY_EXTRAS_IS_PREVIEW_PLAYER_SERVICE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE))
#define UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE, UnityExtrasPreviewPlayerServiceIface))

typedef struct _UnityExtrasPreviewPlayerService UnityExtrasPreviewPlayerService;
typedef struct _UnityExtrasPreviewPlayerServiceIface UnityExtrasPreviewPlayerServiceIface;

#define UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE_PROXY (unity_extras_preview_player_service_proxy_get_type ())
enum  {
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_PROGRESS_SIGNAL,
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_NUM_SIGNALS
};
static guint unity_extras_preview_player_service_signals[UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_NUM_SIGNALS] = {0};
typedef GDBusProxy UnityExtrasPreviewPlayerServiceProxy;
typedef GDBusProxyClass UnityExtrasPreviewPlayerServiceProxyClass;
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_hash_table_unref0(var) ((var == NULL) ? NULL : (var = (g_hash_table_unref (var), NULL)))
enum  {
	UNITY_EXTRAS_PREVIEW_PLAYER_0_PROPERTY,
	UNITY_EXTRAS_PREVIEW_PLAYER_NUM_PROPERTIES
};
static GParamSpec* unity_extras_preview_player_properties[UNITY_EXTRAS_PREVIEW_PLAYER_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
typedef struct _UnityExtrasPreviewPlayerConnectToData UnityExtrasPreviewPlayerConnectToData;
typedef struct _UnityExtrasPreviewPlayerPlayData UnityExtrasPreviewPlayerPlayData;
typedef struct _UnityExtrasPreviewPlayerPauseData UnityExtrasPreviewPlayerPauseData;
typedef struct _UnityExtrasPreviewPlayerPauseResumeData UnityExtrasPreviewPlayerPauseResumeData;
typedef struct _UnityExtrasPreviewPlayerResumeData UnityExtrasPreviewPlayerResumeData;
typedef struct _UnityExtrasPreviewPlayerStopData UnityExtrasPreviewPlayerStopData;
typedef struct _UnityExtrasPreviewPlayerCloseData UnityExtrasPreviewPlayerCloseData;
typedef struct _UnityExtrasPreviewPlayerVideoPropertiesData UnityExtrasPreviewPlayerVideoPropertiesData;
enum  {
	UNITY_EXTRAS_PREVIEW_PLAYER_PROGRESS_SIGNAL,
	UNITY_EXTRAS_PREVIEW_PLAYER_NUM_SIGNALS
};
static guint unity_extras_preview_player_signals[UNITY_EXTRAS_PREVIEW_PLAYER_NUM_SIGNALS] = {0};

struct _UnityExtrasPreviewPlayerServiceIface {
	GTypeInterface parent_iface;
	void (*play) (UnityExtrasPreviewPlayerService* self, const gchar* uri, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*play_finish) (UnityExtrasPreviewPlayerService* self, GAsyncResult* _res_, GError** error);
	void (*pause) (UnityExtrasPreviewPlayerService* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*pause_finish) (UnityExtrasPreviewPlayerService* self, GAsyncResult* _res_, GError** error);
	void (*pause_resume) (UnityExtrasPreviewPlayerService* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*pause_resume_finish) (UnityExtrasPreviewPlayerService* self, GAsyncResult* _res_, GError** error);
	void (*resume) (UnityExtrasPreviewPlayerService* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*resume_finish) (UnityExtrasPreviewPlayerService* self, GAsyncResult* _res_, GError** error);
	void (*stop) (UnityExtrasPreviewPlayerService* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*stop_finish) (UnityExtrasPreviewPlayerService* self, GAsyncResult* _res_, GError** error);
	void (*close) (UnityExtrasPreviewPlayerService* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*close_finish) (UnityExtrasPreviewPlayerService* self, GAsyncResult* _res_, GError** error);
	void (*video_properties) (UnityExtrasPreviewPlayerService* self, const gchar* uri, GAsyncReadyCallback _callback_, gpointer _user_data_);
	GHashTable* (*video_properties_finish) (UnityExtrasPreviewPlayerService* self, GAsyncResult* _res_, GError** error);
};

struct _UnityExtrasPreviewPlayerPrivate {
	UnityExtrasPreviewPlayerService* _preview_player_service;
};

struct _UnityExtrasPreviewPlayerConnectToData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityExtrasPreviewPlayer* self;
	UnityExtrasPreviewPlayerService* _tmp0_;
	UnityExtrasPreviewPlayerService* _tmp1_;
	UnityExtrasPreviewPlayerService* _tmp2_;
	UnityExtrasPreviewPlayerService* _tmp3_;
	GError * _inner_error_;
};

struct _UnityExtrasPreviewPlayerPlayData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityExtrasPreviewPlayer* self;
	gchar* uri;
	UnityExtrasPreviewPlayerService* _tmp0_;
	UnityExtrasPreviewPlayerService* _tmp1_;
	GError * _inner_error_;
};

struct _UnityExtrasPreviewPlayerPauseData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityExtrasPreviewPlayer* self;
	UnityExtrasPreviewPlayerService* _tmp0_;
	UnityExtrasPreviewPlayerService* _tmp1_;
	GError * _inner_error_;
};

struct _UnityExtrasPreviewPlayerPauseResumeData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityExtrasPreviewPlayer* self;
	UnityExtrasPreviewPlayerService* _tmp0_;
	UnityExtrasPreviewPlayerService* _tmp1_;
	GError * _inner_error_;
};

struct _UnityExtrasPreviewPlayerResumeData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityExtrasPreviewPlayer* self;
	UnityExtrasPreviewPlayerService* _tmp0_;
	UnityExtrasPreviewPlayerService* _tmp1_;
	GError * _inner_error_;
};

struct _UnityExtrasPreviewPlayerStopData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityExtrasPreviewPlayer* self;
	UnityExtrasPreviewPlayerService* _tmp0_;
	UnityExtrasPreviewPlayerService* _tmp1_;
	GError * _inner_error_;
};

struct _UnityExtrasPreviewPlayerCloseData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityExtrasPreviewPlayer* self;
	UnityExtrasPreviewPlayerService* _tmp0_;
	UnityExtrasPreviewPlayerService* _tmp1_;
	GError * _inner_error_;
};

struct _UnityExtrasPreviewPlayerVideoPropertiesData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	UnityExtrasPreviewPlayer* self;
	gchar* uri;
	GHashTable* result;
	UnityExtrasPreviewPlayerService* _tmp0_;
	GHashTable* props;
	UnityExtrasPreviewPlayerService* _tmp1_;
	GHashTable* _tmp2_;
	GError * _inner_error_;
};


static gpointer unity_extras_preview_player_parent_class = NULL;

#define UNITY_EXTRAS_PREVIEW_PLAYER_DBUS_NAME "com.canonical.Unity.Lens.Music.PreviewPlayer"
#define UNITY_EXTRAS_PREVIEW_PLAYER_DBUS_PATH "/com/canonical/Unity/Lens/Music/PreviewPlayer"
GType unity_extras_preview_player_service_proxy_get_type (void) G_GNUC_CONST;
guint unity_extras_preview_player_service_register_object (void* object,
                                                           GDBusConnection* connection,
                                                           const gchar* path,
                                                           GError** error);
GType unity_extras_preview_player_service_get_type (void) G_GNUC_CONST;
void unity_extras_preview_player_service_play (UnityExtrasPreviewPlayerService* self,
                                               const gchar* uri,
                                               GAsyncReadyCallback _callback_,
                                               gpointer _user_data_);
void unity_extras_preview_player_service_play_finish (UnityExtrasPreviewPlayerService* self,
                                                      GAsyncResult* _res_,
                                                      GError** error);
void unity_extras_preview_player_service_pause (UnityExtrasPreviewPlayerService* self,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
void unity_extras_preview_player_service_pause_finish (UnityExtrasPreviewPlayerService* self,
                                                       GAsyncResult* _res_,
                                                       GError** error);
void unity_extras_preview_player_service_pause_resume (UnityExtrasPreviewPlayerService* self,
                                                       GAsyncReadyCallback _callback_,
                                                       gpointer _user_data_);
void unity_extras_preview_player_service_pause_resume_finish (UnityExtrasPreviewPlayerService* self,
                                                              GAsyncResult* _res_,
                                                              GError** error);
void unity_extras_preview_player_service_resume (UnityExtrasPreviewPlayerService* self,
                                                 GAsyncReadyCallback _callback_,
                                                 gpointer _user_data_);
void unity_extras_preview_player_service_resume_finish (UnityExtrasPreviewPlayerService* self,
                                                        GAsyncResult* _res_,
                                                        GError** error);
void unity_extras_preview_player_service_stop (UnityExtrasPreviewPlayerService* self,
                                               GAsyncReadyCallback _callback_,
                                               gpointer _user_data_);
void unity_extras_preview_player_service_stop_finish (UnityExtrasPreviewPlayerService* self,
                                                      GAsyncResult* _res_,
                                                      GError** error);
void unity_extras_preview_player_service_close (UnityExtrasPreviewPlayerService* self,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
void unity_extras_preview_player_service_close_finish (UnityExtrasPreviewPlayerService* self,
                                                       GAsyncResult* _res_,
                                                       GError** error);
void unity_extras_preview_player_service_video_properties (UnityExtrasPreviewPlayerService* self,
                                                           const gchar* uri,
                                                           GAsyncReadyCallback _callback_,
                                                           gpointer _user_data_);
GHashTable* unity_extras_preview_player_service_video_properties_finish (UnityExtrasPreviewPlayerService* self,
                                                                         GAsyncResult* _res_,
                                                                         GError** error);
static void g_cclosure_user_marshal_VOID__STRING_UINT_DOUBLE (GClosure * closure,
                                                       GValue * return_value,
                                                       guint n_param_values,
                                                       const GValue * param_values,
                                                       gpointer invocation_hint,
                                                       gpointer marshal_data);
static void unity_extras_preview_player_service_proxy_g_signal (GDBusProxy* proxy,
                                                         const gchar* sender_name,
                                                         const gchar* signal_name,
                                                         GVariant* parameters);
static void _dbus_handle_unity_extras_preview_player_service_progress (UnityExtrasPreviewPlayerService* self,
                                                                GVariant* parameters);
static void _vala_g_async_ready_callback (GObject *source_object,
                                   GAsyncResult *res,
                                   void *user_data);
static void unity_extras_preview_player_service_proxy_play_async (UnityExtrasPreviewPlayerService* self,
                                                           const gchar* uri,
                                                           GAsyncReadyCallback _callback_,
                                                           gpointer _user_data_);
static void unity_extras_preview_player_service_proxy_play_finish (UnityExtrasPreviewPlayerService* self,
                                                            GAsyncResult* _res_,
                                                            GError** error);
static void unity_extras_preview_player_service_proxy_pause_async (UnityExtrasPreviewPlayerService* self,
                                                            GAsyncReadyCallback _callback_,
                                                            gpointer _user_data_);
static void unity_extras_preview_player_service_proxy_pause_finish (UnityExtrasPreviewPlayerService* self,
                                                             GAsyncResult* _res_,
                                                             GError** error);
static void unity_extras_preview_player_service_proxy_pause_resume_async (UnityExtrasPreviewPlayerService* self,
                                                                   GAsyncReadyCallback _callback_,
                                                                   gpointer _user_data_);
static void unity_extras_preview_player_service_proxy_pause_resume_finish (UnityExtrasPreviewPlayerService* self,
                                                                    GAsyncResult* _res_,
                                                                    GError** error);
static void unity_extras_preview_player_service_proxy_resume_async (UnityExtrasPreviewPlayerService* self,
                                                             GAsyncReadyCallback _callback_,
                                                             gpointer _user_data_);
static void unity_extras_preview_player_service_proxy_resume_finish (UnityExtrasPreviewPlayerService* self,
                                                              GAsyncResult* _res_,
                                                              GError** error);
static void unity_extras_preview_player_service_proxy_stop_async (UnityExtrasPreviewPlayerService* self,
                                                           GAsyncReadyCallback _callback_,
                                                           gpointer _user_data_);
static void unity_extras_preview_player_service_proxy_stop_finish (UnityExtrasPreviewPlayerService* self,
                                                            GAsyncResult* _res_,
                                                            GError** error);
static void unity_extras_preview_player_service_proxy_close_async (UnityExtrasPreviewPlayerService* self,
                                                            GAsyncReadyCallback _callback_,
                                                            gpointer _user_data_);
static void unity_extras_preview_player_service_proxy_close_finish (UnityExtrasPreviewPlayerService* self,
                                                             GAsyncResult* _res_,
                                                             GError** error);
static void unity_extras_preview_player_service_proxy_video_properties_async (UnityExtrasPreviewPlayerService* self,
                                                                       const gchar* uri,
                                                                       GAsyncReadyCallback _callback_,
                                                                       gpointer _user_data_);
static GHashTable* unity_extras_preview_player_service_proxy_video_properties_finish (UnityExtrasPreviewPlayerService* self,
                                                                               GAsyncResult* _res_,
                                                                               GError** error);
static void unity_extras_preview_player_service_proxy_unity_extras_preview_player_service_interface_init (UnityExtrasPreviewPlayerServiceIface* iface);
static void _dbus_unity_extras_preview_player_service_play (UnityExtrasPreviewPlayerService* self,
                                                     GVariant* _parameters_,
                                                     GDBusMethodInvocation* invocation);
static void _dbus_unity_extras_preview_player_service_play_ready (GObject * source_object,
                                                           GAsyncResult * _res_,
                                                           gpointer _user_data_);
static void _dbus_unity_extras_preview_player_service_pause (UnityExtrasPreviewPlayerService* self,
                                                      GVariant* _parameters_,
                                                      GDBusMethodInvocation* invocation);
static void _dbus_unity_extras_preview_player_service_pause_ready (GObject * source_object,
                                                            GAsyncResult * _res_,
                                                            gpointer _user_data_);
static void _dbus_unity_extras_preview_player_service_pause_resume (UnityExtrasPreviewPlayerService* self,
                                                             GVariant* _parameters_,
                                                             GDBusMethodInvocation* invocation);
static void _dbus_unity_extras_preview_player_service_pause_resume_ready (GObject * source_object,
                                                                   GAsyncResult * _res_,
                                                                   gpointer _user_data_);
static void _dbus_unity_extras_preview_player_service_resume (UnityExtrasPreviewPlayerService* self,
                                                       GVariant* _parameters_,
                                                       GDBusMethodInvocation* invocation);
static void _dbus_unity_extras_preview_player_service_resume_ready (GObject * source_object,
                                                             GAsyncResult * _res_,
                                                             gpointer _user_data_);
static void _dbus_unity_extras_preview_player_service_stop (UnityExtrasPreviewPlayerService* self,
                                                     GVariant* _parameters_,
                                                     GDBusMethodInvocation* invocation);
static void _dbus_unity_extras_preview_player_service_stop_ready (GObject * source_object,
                                                           GAsyncResult * _res_,
                                                           gpointer _user_data_);
static void _dbus_unity_extras_preview_player_service_close (UnityExtrasPreviewPlayerService* self,
                                                      GVariant* _parameters_,
                                                      GDBusMethodInvocation* invocation);
static void _dbus_unity_extras_preview_player_service_close_ready (GObject * source_object,
                                                            GAsyncResult * _res_,
                                                            gpointer _user_data_);
static void _dbus_unity_extras_preview_player_service_video_properties (UnityExtrasPreviewPlayerService* self,
                                                                 GVariant* _parameters_,
                                                                 GDBusMethodInvocation* invocation);
static void _dbus_unity_extras_preview_player_service_video_properties_ready (GObject * source_object,
                                                                       GAsyncResult * _res_,
                                                                       gpointer _user_data_);
static void unity_extras_preview_player_service_dbus_interface_method_call (GDBusConnection* connection,
                                                                     const gchar* sender,
                                                                     const gchar* object_path,
                                                                     const gchar* interface_name,
                                                                     const gchar* method_name,
                                                                     GVariant* parameters,
                                                                     GDBusMethodInvocation* invocation,
                                                                     gpointer user_data);
static GVariant* unity_extras_preview_player_service_dbus_interface_get_property (GDBusConnection* connection,
                                                                           const gchar* sender,
                                                                           const gchar* object_path,
                                                                           const gchar* interface_name,
                                                                           const gchar* property_name,
                                                                           GError** error,
                                                                           gpointer user_data);
static gboolean unity_extras_preview_player_service_dbus_interface_set_property (GDBusConnection* connection,
                                                                          const gchar* sender,
                                                                          const gchar* object_path,
                                                                          const gchar* interface_name,
                                                                          const gchar* property_name,
                                                                          GVariant* value,
                                                                          GError** error,
                                                                          gpointer user_data);
static void _dbus_unity_extras_preview_player_service_progress (GObject* _sender,
                                                         const gchar* uri,
                                                         guint32 state,
                                                         gdouble progress,
                                                         gpointer* _data);
static void _unity_extras_preview_player_service_unregister_object (gpointer user_data);
#define UNITY_EXTRAS_PREVIEW_PLAYER_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), UNITY_EXTRAS_TYPE_PREVIEW_PLAYER, UnityExtrasPreviewPlayerPrivate))
static void unity_extras_preview_player_connect_to_data_free (gpointer _data);
static void unity_extras_preview_player_connect_to_async_ready_wrapper (GObject *source_object,
                                                                 GAsyncResult *res,
                                                                 void *user_data);
static void unity_extras_preview_player_connect_to (UnityExtrasPreviewPlayer* self,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_);
static void unity_extras_preview_player_connect_to_finish (UnityExtrasPreviewPlayer* self,
                                                    GAsyncResult* _res_,
                                                    GError** error);
static gboolean unity_extras_preview_player_connect_to_co (UnityExtrasPreviewPlayerConnectToData* _data_);
static void unity_extras_preview_player_connect_to_ready (GObject* source_object,
                                                   GAsyncResult* _res_,
                                                   gpointer _user_data_);
void unity_extras_preview_player_on_progress_signal (UnityExtrasPreviewPlayer* self,
                                                     const gchar* uri,
                                                     guint32 state,
                                                     gdouble progress_value);
static void _unity_extras_preview_player_on_progress_signal_unity_extras_preview_player_service_progress (UnityExtrasPreviewPlayerService* _sender,
                                                                                                   const gchar* uri,
                                                                                                   guint32 state,
                                                                                                   gdouble progress,
                                                                                                   gpointer self);
static void unity_extras_preview_player_play_data_free (gpointer _data);
static void unity_extras_preview_player_play_async_ready_wrapper (GObject *source_object,
                                                           GAsyncResult *res,
                                                           void *user_data);
static gboolean unity_extras_preview_player_play_co (UnityExtrasPreviewPlayerPlayData* _data_);
static void unity_extras_preview_player_play_ready (GObject* source_object,
                                             GAsyncResult* _res_,
                                             gpointer _user_data_);
static void unity_extras_preview_player_pause_data_free (gpointer _data);
static void unity_extras_preview_player_pause_async_ready_wrapper (GObject *source_object,
                                                            GAsyncResult *res,
                                                            void *user_data);
static gboolean unity_extras_preview_player_pause_co (UnityExtrasPreviewPlayerPauseData* _data_);
static void unity_extras_preview_player_pause_ready (GObject* source_object,
                                              GAsyncResult* _res_,
                                              gpointer _user_data_);
static void unity_extras_preview_player_pause_resume_data_free (gpointer _data);
static void unity_extras_preview_player_pause_resume_async_ready_wrapper (GObject *source_object,
                                                                   GAsyncResult *res,
                                                                   void *user_data);
static gboolean unity_extras_preview_player_pause_resume_co (UnityExtrasPreviewPlayerPauseResumeData* _data_);
static void unity_extras_preview_player_pause_resume_ready (GObject* source_object,
                                                     GAsyncResult* _res_,
                                                     gpointer _user_data_);
static void unity_extras_preview_player_resume_data_free (gpointer _data);
static void unity_extras_preview_player_resume_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
static gboolean unity_extras_preview_player_resume_co (UnityExtrasPreviewPlayerResumeData* _data_);
static void unity_extras_preview_player_resume_ready (GObject* source_object,
                                               GAsyncResult* _res_,
                                               gpointer _user_data_);
static void unity_extras_preview_player_stop_data_free (gpointer _data);
static void unity_extras_preview_player_stop_async_ready_wrapper (GObject *source_object,
                                                           GAsyncResult *res,
                                                           void *user_data);
static gboolean unity_extras_preview_player_stop_co (UnityExtrasPreviewPlayerStopData* _data_);
static void unity_extras_preview_player_stop_ready (GObject* source_object,
                                             GAsyncResult* _res_,
                                             gpointer _user_data_);
static void unity_extras_preview_player_close_data_free (gpointer _data);
static void unity_extras_preview_player_close_async_ready_wrapper (GObject *source_object,
                                                            GAsyncResult *res,
                                                            void *user_data);
static gboolean unity_extras_preview_player_close_co (UnityExtrasPreviewPlayerCloseData* _data_);
static void unity_extras_preview_player_close_ready (GObject* source_object,
                                              GAsyncResult* _res_,
                                              gpointer _user_data_);
static void unity_extras_preview_player_video_properties_data_free (gpointer _data);
static void unity_extras_preview_player_video_properties_async_ready_wrapper (GObject *source_object,
                                                                       GAsyncResult *res,
                                                                       void *user_data);
static gboolean unity_extras_preview_player_video_properties_co (UnityExtrasPreviewPlayerVideoPropertiesData* _data_);
static void unity_extras_preview_player_video_properties_ready (GObject* source_object,
                                                         GAsyncResult* _res_,
                                                         gpointer _user_data_);
static void g_cclosure_user_marshal_VOID__STRING_ENUM_DOUBLE (GClosure * closure,
                                                       GValue * return_value,
                                                       guint n_param_values,
                                                       const GValue * param_values,
                                                       gpointer invocation_hint,
                                                       gpointer marshal_data);
static void unity_extras_preview_player_finalize (GObject * obj);

static const GDBusArgInfo _unity_extras_preview_player_service_dbus_arg_info_play_uri = {-1, "uri", "s"};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_play_in[] = {&_unity_extras_preview_player_service_dbus_arg_info_play_uri, NULL};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_play_out[] = {NULL};
static const GDBusMethodInfo _unity_extras_preview_player_service_dbus_method_info_play = {-1, "Play", (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_play_in), (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_play_out)};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_pause_in[] = {NULL};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_pause_out[] = {NULL};
static const GDBusMethodInfo _unity_extras_preview_player_service_dbus_method_info_pause = {-1, "Pause", (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_pause_in), (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_pause_out)};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_pause_resume_in[] = {NULL};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_pause_resume_out[] = {NULL};
static const GDBusMethodInfo _unity_extras_preview_player_service_dbus_method_info_pause_resume = {-1, "PauseResume", (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_pause_resume_in), (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_pause_resume_out)};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_resume_in[] = {NULL};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_resume_out[] = {NULL};
static const GDBusMethodInfo _unity_extras_preview_player_service_dbus_method_info_resume = {-1, "Resume", (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_resume_in), (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_resume_out)};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_stop_in[] = {NULL};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_stop_out[] = {NULL};
static const GDBusMethodInfo _unity_extras_preview_player_service_dbus_method_info_stop = {-1, "Stop", (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_stop_in), (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_stop_out)};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_close_in[] = {NULL};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_close_out[] = {NULL};
static const GDBusMethodInfo _unity_extras_preview_player_service_dbus_method_info_close = {-1, "Close", (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_close_in), (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_close_out)};
static const GDBusArgInfo _unity_extras_preview_player_service_dbus_arg_info_video_properties_uri = {-1, "uri", "s"};
static const GDBusArgInfo _unity_extras_preview_player_service_dbus_arg_info_video_properties_result = {-1, "result", "a{sv}"};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_video_properties_in[] = {&_unity_extras_preview_player_service_dbus_arg_info_video_properties_uri, NULL};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_video_properties_out[] = {&_unity_extras_preview_player_service_dbus_arg_info_video_properties_result, NULL};
static const GDBusMethodInfo _unity_extras_preview_player_service_dbus_method_info_video_properties = {-1, "VideoProperties", (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_video_properties_in), (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_video_properties_out)};
static const GDBusMethodInfo * const _unity_extras_preview_player_service_dbus_method_info[] = {&_unity_extras_preview_player_service_dbus_method_info_play, &_unity_extras_preview_player_service_dbus_method_info_pause, &_unity_extras_preview_player_service_dbus_method_info_pause_resume, &_unity_extras_preview_player_service_dbus_method_info_resume, &_unity_extras_preview_player_service_dbus_method_info_stop, &_unity_extras_preview_player_service_dbus_method_info_close, &_unity_extras_preview_player_service_dbus_method_info_video_properties, NULL};
static const GDBusArgInfo _unity_extras_preview_player_service_dbus_arg_info_progress_uri = {-1, "uri", "s"};
static const GDBusArgInfo _unity_extras_preview_player_service_dbus_arg_info_progress_state = {-1, "state", "u"};
static const GDBusArgInfo _unity_extras_preview_player_service_dbus_arg_info_progress_progress = {-1, "progress", "d"};
static const GDBusArgInfo * const _unity_extras_preview_player_service_dbus_arg_info_progress[] = {&_unity_extras_preview_player_service_dbus_arg_info_progress_uri, &_unity_extras_preview_player_service_dbus_arg_info_progress_state, &_unity_extras_preview_player_service_dbus_arg_info_progress_progress, NULL};
static const GDBusSignalInfo _unity_extras_preview_player_service_dbus_signal_info_progress = {-1, "Progress", (GDBusArgInfo **) (&_unity_extras_preview_player_service_dbus_arg_info_progress)};
static const GDBusSignalInfo * const _unity_extras_preview_player_service_dbus_signal_info[] = {&_unity_extras_preview_player_service_dbus_signal_info_progress, NULL};
static const GDBusPropertyInfo * const _unity_extras_preview_player_service_dbus_property_info[] = {NULL};
static const GDBusInterfaceInfo _unity_extras_preview_player_service_dbus_interface_info = {-1, "com.canonical.Unity.Lens.Music.PreviewPlayer", (GDBusMethodInfo **) (&_unity_extras_preview_player_service_dbus_method_info), (GDBusSignalInfo **) (&_unity_extras_preview_player_service_dbus_signal_info), (GDBusPropertyInfo **) (&_unity_extras_preview_player_service_dbus_property_info)};
static const GDBusInterfaceVTable _unity_extras_preview_player_service_dbus_interface_vtable = {unity_extras_preview_player_service_dbus_interface_method_call, unity_extras_preview_player_service_dbus_interface_get_property, unity_extras_preview_player_service_dbus_interface_set_property};

void
unity_extras_preview_player_service_play (UnityExtrasPreviewPlayerService* self,
                                          const gchar* uri,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->play (self, uri, _callback_, _user_data_);
}


void
unity_extras_preview_player_service_play_finish (UnityExtrasPreviewPlayerService* self,
                                                 GAsyncResult* _res_,
                                                 GError** error)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->play_finish (self, _res_, error);
}


void
unity_extras_preview_player_service_pause (UnityExtrasPreviewPlayerService* self,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->pause (self, _callback_, _user_data_);
}


void
unity_extras_preview_player_service_pause_finish (UnityExtrasPreviewPlayerService* self,
                                                  GAsyncResult* _res_,
                                                  GError** error)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->pause_finish (self, _res_, error);
}


void
unity_extras_preview_player_service_pause_resume (UnityExtrasPreviewPlayerService* self,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->pause_resume (self, _callback_, _user_data_);
}


void
unity_extras_preview_player_service_pause_resume_finish (UnityExtrasPreviewPlayerService* self,
                                                         GAsyncResult* _res_,
                                                         GError** error)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->pause_resume_finish (self, _res_, error);
}


void
unity_extras_preview_player_service_resume (UnityExtrasPreviewPlayerService* self,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->resume (self, _callback_, _user_data_);
}


void
unity_extras_preview_player_service_resume_finish (UnityExtrasPreviewPlayerService* self,
                                                   GAsyncResult* _res_,
                                                   GError** error)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->resume_finish (self, _res_, error);
}


void
unity_extras_preview_player_service_stop (UnityExtrasPreviewPlayerService* self,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->stop (self, _callback_, _user_data_);
}


void
unity_extras_preview_player_service_stop_finish (UnityExtrasPreviewPlayerService* self,
                                                 GAsyncResult* _res_,
                                                 GError** error)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->stop_finish (self, _res_, error);
}


void
unity_extras_preview_player_service_close (UnityExtrasPreviewPlayerService* self,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->close (self, _callback_, _user_data_);
}


void
unity_extras_preview_player_service_close_finish (UnityExtrasPreviewPlayerService* self,
                                                  GAsyncResult* _res_,
                                                  GError** error)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->close_finish (self, _res_, error);
}


void
unity_extras_preview_player_service_video_properties (UnityExtrasPreviewPlayerService* self,
                                                      const gchar* uri,
                                                      GAsyncReadyCallback _callback_,
                                                      gpointer _user_data_)
{
	UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->video_properties (self, uri, _callback_, _user_data_);
}


GHashTable*
unity_extras_preview_player_service_video_properties_finish (UnityExtrasPreviewPlayerService* self,
                                                             GAsyncResult* _res_,
                                                             GError** error)
{
	return UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_GET_INTERFACE (self)->video_properties_finish (self, _res_, error);
}


static void
g_cclosure_user_marshal_VOID__STRING_UINT_DOUBLE (GClosure * closure,
                                                  GValue * return_value,
                                                  guint n_param_values,
                                                  const GValue * param_values,
                                                  gpointer invocation_hint,
                                                  gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__STRING_UINT_DOUBLE) (gpointer data1, const char* arg_1, guint32 arg_2, gdouble arg_3, gpointer data2);
	register GMarshalFunc_VOID__STRING_UINT_DOUBLE callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
	g_return_if_fail (n_param_values == 4);
	if (G_CCLOSURE_SWAP_DATA (closure)) {
		data1 = closure->data;
		data2 = param_values->data[0].v_pointer;
	} else {
		data1 = param_values->data[0].v_pointer;
		data2 = closure->data;
	}
	callback = (GMarshalFunc_VOID__STRING_UINT_DOUBLE) (marshal_data ? marshal_data : cc->callback);
	callback (data1, g_value_get_string (param_values + 1), g_value_get_uint (param_values + 2), g_value_get_double (param_values + 3), data2);
}


static void
unity_extras_preview_player_service_default_init (UnityExtrasPreviewPlayerServiceIface * iface)
{
	unity_extras_preview_player_service_signals[UNITY_EXTRAS_PREVIEW_PLAYER_SERVICE_PROGRESS_SIGNAL] = g_signal_new ("progress", UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__STRING_UINT_DOUBLE, G_TYPE_NONE, 3, G_TYPE_STRING, G_TYPE_UINT, G_TYPE_DOUBLE);
}


GType
unity_extras_preview_player_service_get_type (void)
{
	static volatile gsize unity_extras_preview_player_service_type_id__volatile = 0;
	if (g_once_init_enter (&unity_extras_preview_player_service_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityExtrasPreviewPlayerServiceIface), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_extras_preview_player_service_default_init, (GClassFinalizeFunc) NULL, NULL, 0, 0, (GInstanceInitFunc) NULL, NULL };
		GType unity_extras_preview_player_service_type_id;
		unity_extras_preview_player_service_type_id = g_type_register_static (G_TYPE_INTERFACE, "UnityExtrasPreviewPlayerService", &g_define_type_info, 0);
		g_type_interface_add_prerequisite (unity_extras_preview_player_service_type_id, G_TYPE_OBJECT);
		g_type_set_qdata (unity_extras_preview_player_service_type_id, g_quark_from_static_string ("vala-dbus-proxy-type"), (void*) unity_extras_preview_player_service_proxy_get_type);
		g_type_set_qdata (unity_extras_preview_player_service_type_id, g_quark_from_static_string ("vala-dbus-interface-name"), "com.canonical.Unity.Lens.Music.PreviewPlayer");
		g_type_set_qdata (unity_extras_preview_player_service_type_id, g_quark_from_static_string ("vala-dbus-interface-info"), (void*) (&_unity_extras_preview_player_service_dbus_interface_info));
		g_type_set_qdata (unity_extras_preview_player_service_type_id, g_quark_from_static_string ("vala-dbus-register-object"), (void*) unity_extras_preview_player_service_register_object);
		g_once_init_leave (&unity_extras_preview_player_service_type_id__volatile, unity_extras_preview_player_service_type_id);
	}
	return unity_extras_preview_player_service_type_id__volatile;
}


G_DEFINE_TYPE_EXTENDED (UnityExtrasPreviewPlayerServiceProxy, unity_extras_preview_player_service_proxy, G_TYPE_DBUS_PROXY, 0, G_IMPLEMENT_INTERFACE (UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE, unity_extras_preview_player_service_proxy_unity_extras_preview_player_service_interface_init) )
static void
unity_extras_preview_player_service_proxy_class_init (UnityExtrasPreviewPlayerServiceProxyClass* klass)
{
	G_DBUS_PROXY_CLASS (klass)->g_signal = unity_extras_preview_player_service_proxy_g_signal;
}


static void
_dbus_handle_unity_extras_preview_player_service_progress (UnityExtrasPreviewPlayerService* self,
                                                           GVariant* parameters)
{
	GVariantIter _arguments_iter;
	gchar* uri = NULL;
	GVariant* _tmp0_;
	guint32 state = 0U;
	GVariant* _tmp1_;
	gdouble progress = 0.0;
	GVariant* _tmp2_;
	g_variant_iter_init (&_arguments_iter, parameters);
	_tmp0_ = g_variant_iter_next_value (&_arguments_iter);
	uri = g_variant_dup_string (_tmp0_, NULL);
	g_variant_unref (_tmp0_);
	_tmp1_ = g_variant_iter_next_value (&_arguments_iter);
	state = g_variant_get_uint32 (_tmp1_);
	g_variant_unref (_tmp1_);
	_tmp2_ = g_variant_iter_next_value (&_arguments_iter);
	progress = g_variant_get_double (_tmp2_);
	g_variant_unref (_tmp2_);
	g_signal_emit_by_name (self, "progress", uri, state, progress);
	_g_free0 (uri);
}


static void
unity_extras_preview_player_service_proxy_g_signal (GDBusProxy* proxy,
                                                    const gchar* sender_name,
                                                    const gchar* signal_name,
                                                    GVariant* parameters)
{
	if (strcmp (signal_name, "Progress") == 0) {
		_dbus_handle_unity_extras_preview_player_service_progress ((UnityExtrasPreviewPlayerService*) proxy, parameters);
	}
}


static void
unity_extras_preview_player_service_proxy_init (UnityExtrasPreviewPlayerServiceProxy* self)
{
}


static void
_vala_g_async_ready_callback (GObject *source_object,
                              GAsyncResult *res,
                              void *user_data)
{
	g_task_return_pointer (user_data, g_object_ref (res), g_object_unref);
	g_object_unref (user_data);
}


static void
unity_extras_preview_player_service_proxy_play_async (UnityExtrasPreviewPlayerService* self,
                                                      const gchar* uri,
                                                      GAsyncReadyCallback _callback_,
                                                      gpointer _user_data_)
{
	GDBusMessage *_message;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	_message = g_dbus_message_new_method_call (g_dbus_proxy_get_name ((GDBusProxy *) self), g_dbus_proxy_get_object_path ((GDBusProxy *) self), "com.canonical.Unity.Lens.Music.PreviewPlayer", "Play");
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_string (uri));
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_message_set_body (_message, _arguments);
	g_dbus_connection_send_message_with_reply (g_dbus_proxy_get_connection ((GDBusProxy *) self), _message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, g_dbus_proxy_get_default_timeout ((GDBusProxy *) self), NULL, NULL, _vala_g_async_ready_callback, g_task_new ((GObject *) self, NULL, _callback_, _user_data_));
	g_object_unref (_message);
}


static void
unity_extras_preview_player_service_proxy_play_finish (UnityExtrasPreviewPlayerService* self,
                                                       GAsyncResult* _res_,
                                                       GError** error)
{
	GAsyncResult *_inner_res;
	GDBusMessage *_reply_message;
	_inner_res = g_task_propagate_pointer ((GTask *) _res_, NULL);
	_reply_message = g_dbus_connection_send_message_with_reply_finish (g_dbus_proxy_get_connection ((GDBusProxy *) self), _inner_res, error);
	g_object_unref (_inner_res);
	if (!_reply_message) {
		return;
	}
	if (g_dbus_message_to_gerror (_reply_message, error)) {
		g_object_unref (_reply_message);
		return;
	}
	g_object_unref (_reply_message);
}


static void
unity_extras_preview_player_service_proxy_pause_async (UnityExtrasPreviewPlayerService* self,
                                                       GAsyncReadyCallback _callback_,
                                                       gpointer _user_data_)
{
	GDBusMessage *_message;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	_message = g_dbus_message_new_method_call (g_dbus_proxy_get_name ((GDBusProxy *) self), g_dbus_proxy_get_object_path ((GDBusProxy *) self), "com.canonical.Unity.Lens.Music.PreviewPlayer", "Pause");
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_message_set_body (_message, _arguments);
	g_dbus_connection_send_message_with_reply (g_dbus_proxy_get_connection ((GDBusProxy *) self), _message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, g_dbus_proxy_get_default_timeout ((GDBusProxy *) self), NULL, NULL, _vala_g_async_ready_callback, g_task_new ((GObject *) self, NULL, _callback_, _user_data_));
	g_object_unref (_message);
}


static void
unity_extras_preview_player_service_proxy_pause_finish (UnityExtrasPreviewPlayerService* self,
                                                        GAsyncResult* _res_,
                                                        GError** error)
{
	GAsyncResult *_inner_res;
	GDBusMessage *_reply_message;
	_inner_res = g_task_propagate_pointer ((GTask *) _res_, NULL);
	_reply_message = g_dbus_connection_send_message_with_reply_finish (g_dbus_proxy_get_connection ((GDBusProxy *) self), _inner_res, error);
	g_object_unref (_inner_res);
	if (!_reply_message) {
		return;
	}
	if (g_dbus_message_to_gerror (_reply_message, error)) {
		g_object_unref (_reply_message);
		return;
	}
	g_object_unref (_reply_message);
}


static void
unity_extras_preview_player_service_proxy_pause_resume_async (UnityExtrasPreviewPlayerService* self,
                                                              GAsyncReadyCallback _callback_,
                                                              gpointer _user_data_)
{
	GDBusMessage *_message;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	_message = g_dbus_message_new_method_call (g_dbus_proxy_get_name ((GDBusProxy *) self), g_dbus_proxy_get_object_path ((GDBusProxy *) self), "com.canonical.Unity.Lens.Music.PreviewPlayer", "PauseResume");
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_message_set_body (_message, _arguments);
	g_dbus_connection_send_message_with_reply (g_dbus_proxy_get_connection ((GDBusProxy *) self), _message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, g_dbus_proxy_get_default_timeout ((GDBusProxy *) self), NULL, NULL, _vala_g_async_ready_callback, g_task_new ((GObject *) self, NULL, _callback_, _user_data_));
	g_object_unref (_message);
}


static void
unity_extras_preview_player_service_proxy_pause_resume_finish (UnityExtrasPreviewPlayerService* self,
                                                               GAsyncResult* _res_,
                                                               GError** error)
{
	GAsyncResult *_inner_res;
	GDBusMessage *_reply_message;
	_inner_res = g_task_propagate_pointer ((GTask *) _res_, NULL);
	_reply_message = g_dbus_connection_send_message_with_reply_finish (g_dbus_proxy_get_connection ((GDBusProxy *) self), _inner_res, error);
	g_object_unref (_inner_res);
	if (!_reply_message) {
		return;
	}
	if (g_dbus_message_to_gerror (_reply_message, error)) {
		g_object_unref (_reply_message);
		return;
	}
	g_object_unref (_reply_message);
}


static void
unity_extras_preview_player_service_proxy_resume_async (UnityExtrasPreviewPlayerService* self,
                                                        GAsyncReadyCallback _callback_,
                                                        gpointer _user_data_)
{
	GDBusMessage *_message;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	_message = g_dbus_message_new_method_call (g_dbus_proxy_get_name ((GDBusProxy *) self), g_dbus_proxy_get_object_path ((GDBusProxy *) self), "com.canonical.Unity.Lens.Music.PreviewPlayer", "Resume");
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_message_set_body (_message, _arguments);
	g_dbus_connection_send_message_with_reply (g_dbus_proxy_get_connection ((GDBusProxy *) self), _message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, g_dbus_proxy_get_default_timeout ((GDBusProxy *) self), NULL, NULL, _vala_g_async_ready_callback, g_task_new ((GObject *) self, NULL, _callback_, _user_data_));
	g_object_unref (_message);
}


static void
unity_extras_preview_player_service_proxy_resume_finish (UnityExtrasPreviewPlayerService* self,
                                                         GAsyncResult* _res_,
                                                         GError** error)
{
	GAsyncResult *_inner_res;
	GDBusMessage *_reply_message;
	_inner_res = g_task_propagate_pointer ((GTask *) _res_, NULL);
	_reply_message = g_dbus_connection_send_message_with_reply_finish (g_dbus_proxy_get_connection ((GDBusProxy *) self), _inner_res, error);
	g_object_unref (_inner_res);
	if (!_reply_message) {
		return;
	}
	if (g_dbus_message_to_gerror (_reply_message, error)) {
		g_object_unref (_reply_message);
		return;
	}
	g_object_unref (_reply_message);
}


static void
unity_extras_preview_player_service_proxy_stop_async (UnityExtrasPreviewPlayerService* self,
                                                      GAsyncReadyCallback _callback_,
                                                      gpointer _user_data_)
{
	GDBusMessage *_message;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	_message = g_dbus_message_new_method_call (g_dbus_proxy_get_name ((GDBusProxy *) self), g_dbus_proxy_get_object_path ((GDBusProxy *) self), "com.canonical.Unity.Lens.Music.PreviewPlayer", "Stop");
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_message_set_body (_message, _arguments);
	g_dbus_connection_send_message_with_reply (g_dbus_proxy_get_connection ((GDBusProxy *) self), _message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, g_dbus_proxy_get_default_timeout ((GDBusProxy *) self), NULL, NULL, _vala_g_async_ready_callback, g_task_new ((GObject *) self, NULL, _callback_, _user_data_));
	g_object_unref (_message);
}


static void
unity_extras_preview_player_service_proxy_stop_finish (UnityExtrasPreviewPlayerService* self,
                                                       GAsyncResult* _res_,
                                                       GError** error)
{
	GAsyncResult *_inner_res;
	GDBusMessage *_reply_message;
	_inner_res = g_task_propagate_pointer ((GTask *) _res_, NULL);
	_reply_message = g_dbus_connection_send_message_with_reply_finish (g_dbus_proxy_get_connection ((GDBusProxy *) self), _inner_res, error);
	g_object_unref (_inner_res);
	if (!_reply_message) {
		return;
	}
	if (g_dbus_message_to_gerror (_reply_message, error)) {
		g_object_unref (_reply_message);
		return;
	}
	g_object_unref (_reply_message);
}


static void
unity_extras_preview_player_service_proxy_close_async (UnityExtrasPreviewPlayerService* self,
                                                       GAsyncReadyCallback _callback_,
                                                       gpointer _user_data_)
{
	GDBusMessage *_message;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	_message = g_dbus_message_new_method_call (g_dbus_proxy_get_name ((GDBusProxy *) self), g_dbus_proxy_get_object_path ((GDBusProxy *) self), "com.canonical.Unity.Lens.Music.PreviewPlayer", "Close");
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_message_set_body (_message, _arguments);
	g_dbus_connection_send_message_with_reply (g_dbus_proxy_get_connection ((GDBusProxy *) self), _message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, g_dbus_proxy_get_default_timeout ((GDBusProxy *) self), NULL, NULL, _vala_g_async_ready_callback, g_task_new ((GObject *) self, NULL, _callback_, _user_data_));
	g_object_unref (_message);
}


static void
unity_extras_preview_player_service_proxy_close_finish (UnityExtrasPreviewPlayerService* self,
                                                        GAsyncResult* _res_,
                                                        GError** error)
{
	GAsyncResult *_inner_res;
	GDBusMessage *_reply_message;
	_inner_res = g_task_propagate_pointer ((GTask *) _res_, NULL);
	_reply_message = g_dbus_connection_send_message_with_reply_finish (g_dbus_proxy_get_connection ((GDBusProxy *) self), _inner_res, error);
	g_object_unref (_inner_res);
	if (!_reply_message) {
		return;
	}
	if (g_dbus_message_to_gerror (_reply_message, error)) {
		g_object_unref (_reply_message);
		return;
	}
	g_object_unref (_reply_message);
}


static void
unity_extras_preview_player_service_proxy_video_properties_async (UnityExtrasPreviewPlayerService* self,
                                                                  const gchar* uri,
                                                                  GAsyncReadyCallback _callback_,
                                                                  gpointer _user_data_)
{
	GDBusMessage *_message;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	_message = g_dbus_message_new_method_call (g_dbus_proxy_get_name ((GDBusProxy *) self), g_dbus_proxy_get_object_path ((GDBusProxy *) self), "com.canonical.Unity.Lens.Music.PreviewPlayer", "VideoProperties");
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_string (uri));
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_message_set_body (_message, _arguments);
	g_dbus_connection_send_message_with_reply (g_dbus_proxy_get_connection ((GDBusProxy *) self), _message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, g_dbus_proxy_get_default_timeout ((GDBusProxy *) self), NULL, NULL, _vala_g_async_ready_callback, g_task_new ((GObject *) self, NULL, _callback_, _user_data_));
	g_object_unref (_message);
}


static GHashTable*
unity_extras_preview_player_service_proxy_video_properties_finish (UnityExtrasPreviewPlayerService* self,
                                                                   GAsyncResult* _res_,
                                                                   GError** error)
{
	GAsyncResult *_inner_res;
	GDBusMessage *_reply_message;
	GVariant *_reply;
	GVariantIter _reply_iter;
	GHashTable* _result = NULL;
	GVariant* _tmp3_;
	GHashTable* _tmp4_;
	GVariantIter _tmp5_;
	GVariant* _tmp6_;
	GVariant* _tmp7_;
	_inner_res = g_task_propagate_pointer ((GTask *) _res_, NULL);
	_reply_message = g_dbus_connection_send_message_with_reply_finish (g_dbus_proxy_get_connection ((GDBusProxy *) self), _inner_res, error);
	g_object_unref (_inner_res);
	if (!_reply_message) {
		return NULL;
	}
	if (g_dbus_message_to_gerror (_reply_message, error)) {
		g_object_unref (_reply_message);
		return NULL;
	}
	_reply = g_dbus_message_get_body (_reply_message);
	g_variant_iter_init (&_reply_iter, _reply);
	_tmp3_ = g_variant_iter_next_value (&_reply_iter);
	_tmp4_ = g_hash_table_new_full (g_str_hash, g_str_equal, g_free, (GDestroyNotify) g_variant_unref);
	g_variant_iter_init (&_tmp5_, _tmp3_);
	while (g_variant_iter_loop (&_tmp5_, "{?*}", &_tmp6_, &_tmp7_)) {
		g_hash_table_insert (_tmp4_, g_variant_dup_string (_tmp6_, NULL), g_variant_get_variant (_tmp7_));
	}
	_result = _tmp4_;
	g_variant_unref (_tmp3_);
	g_object_unref (_reply_message);
	return _result;
}


static void
unity_extras_preview_player_service_proxy_unity_extras_preview_player_service_interface_init (UnityExtrasPreviewPlayerServiceIface* iface)
{
	iface->play = unity_extras_preview_player_service_proxy_play_async;
	iface->play_finish = unity_extras_preview_player_service_proxy_play_finish;
	iface->pause = unity_extras_preview_player_service_proxy_pause_async;
	iface->pause_finish = unity_extras_preview_player_service_proxy_pause_finish;
	iface->pause_resume = unity_extras_preview_player_service_proxy_pause_resume_async;
	iface->pause_resume_finish = unity_extras_preview_player_service_proxy_pause_resume_finish;
	iface->resume = unity_extras_preview_player_service_proxy_resume_async;
	iface->resume_finish = unity_extras_preview_player_service_proxy_resume_finish;
	iface->stop = unity_extras_preview_player_service_proxy_stop_async;
	iface->stop_finish = unity_extras_preview_player_service_proxy_stop_finish;
	iface->close = unity_extras_preview_player_service_proxy_close_async;
	iface->close_finish = unity_extras_preview_player_service_proxy_close_finish;
	iface->video_properties = unity_extras_preview_player_service_proxy_video_properties_async;
	iface->video_properties_finish = unity_extras_preview_player_service_proxy_video_properties_finish;
}


static void
_dbus_unity_extras_preview_player_service_play (UnityExtrasPreviewPlayerService* self,
                                                GVariant* _parameters_,
                                                GDBusMethodInvocation* invocation)
{
	GVariantIter _arguments_iter;
	gchar* uri = NULL;
	GVariant* _tmp8_;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	_tmp8_ = g_variant_iter_next_value (&_arguments_iter);
	uri = g_variant_dup_string (_tmp8_, NULL);
	g_variant_unref (_tmp8_);
	unity_extras_preview_player_service_play (self, uri, (GAsyncReadyCallback) _dbus_unity_extras_preview_player_service_play_ready, invocation);
	_g_free0 (uri);
}


static void
_dbus_unity_extras_preview_player_service_play_ready (GObject * source_object,
                                                      GAsyncResult * _res_,
                                                      gpointer _user_data_)
{
	GDBusMethodInvocation * invocation;
	GError* error = NULL;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	invocation = _user_data_;
	unity_extras_preview_player_service_play_finish ((UnityExtrasPreviewPlayerService*) source_object, _res_, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
}


static void
_dbus_unity_extras_preview_player_service_pause (UnityExtrasPreviewPlayerService* self,
                                                 GVariant* _parameters_,
                                                 GDBusMethodInvocation* invocation)
{
	GVariantIter _arguments_iter;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	unity_extras_preview_player_service_pause (self, (GAsyncReadyCallback) _dbus_unity_extras_preview_player_service_pause_ready, invocation);
}


static void
_dbus_unity_extras_preview_player_service_pause_ready (GObject * source_object,
                                                       GAsyncResult * _res_,
                                                       gpointer _user_data_)
{
	GDBusMethodInvocation * invocation;
	GError* error = NULL;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	invocation = _user_data_;
	unity_extras_preview_player_service_pause_finish ((UnityExtrasPreviewPlayerService*) source_object, _res_, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
}


static void
_dbus_unity_extras_preview_player_service_pause_resume (UnityExtrasPreviewPlayerService* self,
                                                        GVariant* _parameters_,
                                                        GDBusMethodInvocation* invocation)
{
	GVariantIter _arguments_iter;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	unity_extras_preview_player_service_pause_resume (self, (GAsyncReadyCallback) _dbus_unity_extras_preview_player_service_pause_resume_ready, invocation);
}


static void
_dbus_unity_extras_preview_player_service_pause_resume_ready (GObject * source_object,
                                                              GAsyncResult * _res_,
                                                              gpointer _user_data_)
{
	GDBusMethodInvocation * invocation;
	GError* error = NULL;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	invocation = _user_data_;
	unity_extras_preview_player_service_pause_resume_finish ((UnityExtrasPreviewPlayerService*) source_object, _res_, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
}


static void
_dbus_unity_extras_preview_player_service_resume (UnityExtrasPreviewPlayerService* self,
                                                  GVariant* _parameters_,
                                                  GDBusMethodInvocation* invocation)
{
	GVariantIter _arguments_iter;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	unity_extras_preview_player_service_resume (self, (GAsyncReadyCallback) _dbus_unity_extras_preview_player_service_resume_ready, invocation);
}


static void
_dbus_unity_extras_preview_player_service_resume_ready (GObject * source_object,
                                                        GAsyncResult * _res_,
                                                        gpointer _user_data_)
{
	GDBusMethodInvocation * invocation;
	GError* error = NULL;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	invocation = _user_data_;
	unity_extras_preview_player_service_resume_finish ((UnityExtrasPreviewPlayerService*) source_object, _res_, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
}


static void
_dbus_unity_extras_preview_player_service_stop (UnityExtrasPreviewPlayerService* self,
                                                GVariant* _parameters_,
                                                GDBusMethodInvocation* invocation)
{
	GVariantIter _arguments_iter;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	unity_extras_preview_player_service_stop (self, (GAsyncReadyCallback) _dbus_unity_extras_preview_player_service_stop_ready, invocation);
}


static void
_dbus_unity_extras_preview_player_service_stop_ready (GObject * source_object,
                                                      GAsyncResult * _res_,
                                                      gpointer _user_data_)
{
	GDBusMethodInvocation * invocation;
	GError* error = NULL;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	invocation = _user_data_;
	unity_extras_preview_player_service_stop_finish ((UnityExtrasPreviewPlayerService*) source_object, _res_, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
}


static void
_dbus_unity_extras_preview_player_service_close (UnityExtrasPreviewPlayerService* self,
                                                 GVariant* _parameters_,
                                                 GDBusMethodInvocation* invocation)
{
	GVariantIter _arguments_iter;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	unity_extras_preview_player_service_close (self, (GAsyncReadyCallback) _dbus_unity_extras_preview_player_service_close_ready, invocation);
}


static void
_dbus_unity_extras_preview_player_service_close_ready (GObject * source_object,
                                                       GAsyncResult * _res_,
                                                       gpointer _user_data_)
{
	GDBusMethodInvocation * invocation;
	GError* error = NULL;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	invocation = _user_data_;
	unity_extras_preview_player_service_close_finish ((UnityExtrasPreviewPlayerService*) source_object, _res_, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
}


static void
_dbus_unity_extras_preview_player_service_video_properties (UnityExtrasPreviewPlayerService* self,
                                                            GVariant* _parameters_,
                                                            GDBusMethodInvocation* invocation)
{
	GVariantIter _arguments_iter;
	gchar* uri = NULL;
	GVariant* _tmp9_;
	g_variant_iter_init (&_arguments_iter, _parameters_);
	_tmp9_ = g_variant_iter_next_value (&_arguments_iter);
	uri = g_variant_dup_string (_tmp9_, NULL);
	g_variant_unref (_tmp9_);
	unity_extras_preview_player_service_video_properties (self, uri, (GAsyncReadyCallback) _dbus_unity_extras_preview_player_service_video_properties_ready, invocation);
	_g_free0 (uri);
}


static void
_dbus_unity_extras_preview_player_service_video_properties_ready (GObject * source_object,
                                                                  GAsyncResult * _res_,
                                                                  gpointer _user_data_)
{
	GDBusMethodInvocation * invocation;
	GError* error = NULL;
	GDBusMessage* _reply_message = NULL;
	GVariant* _reply;
	GVariantBuilder _reply_builder;
	GHashTable* result;
	GVariantBuilder _tmp10_;
	GHashTableIter _tmp11_;
	gpointer _tmp12_;
	gpointer _tmp13_;
	invocation = _user_data_;
	result = unity_extras_preview_player_service_video_properties_finish ((UnityExtrasPreviewPlayerService*) source_object, _res_, &error);
	if (error) {
		g_dbus_method_invocation_return_gerror (invocation, error);
		g_error_free (error);
		return;
	}
	_reply_message = g_dbus_message_new_method_reply (g_dbus_method_invocation_get_message (invocation));
	g_variant_builder_init (&_reply_builder, G_VARIANT_TYPE_TUPLE);
	g_hash_table_iter_init (&_tmp11_, result);
	g_variant_builder_init (&_tmp10_, G_VARIANT_TYPE ("a{sv}"));
	while (g_hash_table_iter_next (&_tmp11_, &_tmp12_, &_tmp13_)) {
		gchar* _key;
		GVariant* _value;
		_key = (gchar*) _tmp12_;
		_value = (GVariant*) _tmp13_;
		g_variant_builder_add (&_tmp10_, "{?*}", g_variant_new_string (_key), g_variant_new_variant (_value));
	}
	g_variant_builder_add_value (&_reply_builder, g_variant_builder_end (&_tmp10_));
	_g_hash_table_unref0 (result);
	_reply = g_variant_builder_end (&_reply_builder);
	g_dbus_message_set_body (_reply_message, _reply);
	g_dbus_connection_send_message (g_dbus_method_invocation_get_connection (invocation), _reply_message, G_DBUS_SEND_MESSAGE_FLAGS_NONE, NULL, NULL);
	g_object_unref (invocation);
	g_object_unref (_reply_message);
}


static void
unity_extras_preview_player_service_dbus_interface_method_call (GDBusConnection* connection,
                                                                const gchar* sender,
                                                                const gchar* object_path,
                                                                const gchar* interface_name,
                                                                const gchar* method_name,
                                                                GVariant* parameters,
                                                                GDBusMethodInvocation* invocation,
                                                                gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	if (strcmp (method_name, "Play") == 0) {
		_dbus_unity_extras_preview_player_service_play (object, parameters, invocation);
	} else if (strcmp (method_name, "Pause") == 0) {
		_dbus_unity_extras_preview_player_service_pause (object, parameters, invocation);
	} else if (strcmp (method_name, "PauseResume") == 0) {
		_dbus_unity_extras_preview_player_service_pause_resume (object, parameters, invocation);
	} else if (strcmp (method_name, "Resume") == 0) {
		_dbus_unity_extras_preview_player_service_resume (object, parameters, invocation);
	} else if (strcmp (method_name, "Stop") == 0) {
		_dbus_unity_extras_preview_player_service_stop (object, parameters, invocation);
	} else if (strcmp (method_name, "Close") == 0) {
		_dbus_unity_extras_preview_player_service_close (object, parameters, invocation);
	} else if (strcmp (method_name, "VideoProperties") == 0) {
		_dbus_unity_extras_preview_player_service_video_properties (object, parameters, invocation);
	} else {
		g_object_unref (invocation);
	}
}


static GVariant*
unity_extras_preview_player_service_dbus_interface_get_property (GDBusConnection* connection,
                                                                 const gchar* sender,
                                                                 const gchar* object_path,
                                                                 const gchar* interface_name,
                                                                 const gchar* property_name,
                                                                 GError** error,
                                                                 gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	return NULL;
}


static gboolean
unity_extras_preview_player_service_dbus_interface_set_property (GDBusConnection* connection,
                                                                 const gchar* sender,
                                                                 const gchar* object_path,
                                                                 const gchar* interface_name,
                                                                 const gchar* property_name,
                                                                 GVariant* value,
                                                                 GError** error,
                                                                 gpointer user_data)
{
	gpointer* data;
	gpointer object;
	data = user_data;
	object = data[0];
	return FALSE;
}


static void
_dbus_unity_extras_preview_player_service_progress (GObject* _sender,
                                                    const gchar* uri,
                                                    guint32 state,
                                                    gdouble progress,
                                                    gpointer* _data)
{
	GDBusConnection * _connection;
	const gchar * _path;
	GVariant *_arguments;
	GVariantBuilder _arguments_builder;
	_connection = _data[1];
	_path = _data[2];
	g_variant_builder_init (&_arguments_builder, G_VARIANT_TYPE_TUPLE);
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_string (uri));
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_uint32 (state));
	g_variant_builder_add_value (&_arguments_builder, g_variant_new_double (progress));
	_arguments = g_variant_builder_end (&_arguments_builder);
	g_dbus_connection_emit_signal (_connection, NULL, _path, "com.canonical.Unity.Lens.Music.PreviewPlayer", "Progress", _arguments, NULL);
}


guint
unity_extras_preview_player_service_register_object (gpointer object,
                                                     GDBusConnection* connection,
                                                     const gchar* path,
                                                     GError** error)
{
	guint result;
	gpointer *data;
	data = g_new (gpointer, 3);
	data[0] = g_object_ref (object);
	data[1] = g_object_ref (connection);
	data[2] = g_strdup (path);
	result = g_dbus_connection_register_object (connection, path, (GDBusInterfaceInfo *) (&_unity_extras_preview_player_service_dbus_interface_info), &_unity_extras_preview_player_service_dbus_interface_vtable, data, _unity_extras_preview_player_service_unregister_object, error);
	if (!result) {
		return 0;
	}
	g_signal_connect (object, "progress", (GCallback) _dbus_unity_extras_preview_player_service_progress, data);
	return result;
}


static void
_unity_extras_preview_player_service_unregister_object (gpointer user_data)
{
	gpointer* data;
	data = user_data;
	g_signal_handlers_disconnect_by_func (data[0], _dbus_unity_extras_preview_player_service_progress, data);
	g_object_unref (data[0]);
	g_object_unref (data[1]);
	g_free (data[2]);
	g_free (data);
}


static void
unity_extras_preview_player_connect_to_data_free (gpointer _data)
{
	UnityExtrasPreviewPlayerConnectToData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityExtrasPreviewPlayerConnectToData, _data_);
}


static void
unity_extras_preview_player_connect_to_async_ready_wrapper (GObject *source_object,
                                                            GAsyncResult *res,
                                                            void *user_data)
{
	UnityExtrasPreviewPlayerConnectToData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


static gpointer
_g_object_ref0 (gpointer self)
{
	return self ? g_object_ref (self) : NULL;
}


static void
unity_extras_preview_player_connect_to (UnityExtrasPreviewPlayer* self,
                                        GAsyncReadyCallback _callback_,
                                        gpointer _user_data_)
{
	UnityExtrasPreviewPlayerConnectToData* _data_;
	UnityExtrasPreviewPlayer* _tmp0_;
	_data_ = g_slice_new0 (UnityExtrasPreviewPlayerConnectToData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_extras_preview_player_connect_to_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_extras_preview_player_connect_to_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	unity_extras_preview_player_connect_to_co (_data_);
}


static void
unity_extras_preview_player_connect_to_finish (UnityExtrasPreviewPlayer* self,
                                               GAsyncResult* _res_,
                                               GError** error)
{
	UnityExtrasPreviewPlayerConnectToData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static void
unity_extras_preview_player_connect_to_ready (GObject* source_object,
                                              GAsyncResult* _res_,
                                              gpointer _user_data_)
{
	UnityExtrasPreviewPlayerConnectToData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_extras_preview_player_connect_to_co (_data_);
}


static void
_unity_extras_preview_player_on_progress_signal_unity_extras_preview_player_service_progress (UnityExtrasPreviewPlayerService* _sender,
                                                                                              const gchar* uri,
                                                                                              guint32 state,
                                                                                              gdouble progress,
                                                                                              gpointer self)
{
	unity_extras_preview_player_on_progress_signal ((UnityExtrasPreviewPlayer*) self, uri, state, progress);
}


static gboolean
unity_extras_preview_player_connect_to_co (UnityExtrasPreviewPlayerConnectToData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_state_ = 1;
	g_async_initable_new_async (UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE_PROXY, 0, NULL, unity_extras_preview_player_connect_to_ready, _data_, "g-flags", 0, "g-name", UNITY_EXTRAS_PREVIEW_PLAYER_DBUS_NAME, "g-bus-type", G_BUS_TYPE_SESSION, "g-object-path", UNITY_EXTRAS_PREVIEW_PLAYER_DBUS_PATH, "g-interface-name", "com.canonical.Unity.Lens.Music.PreviewPlayer", "g-interface-info", g_type_get_qdata (UNITY_EXTRAS_TYPE_PREVIEW_PLAYER_SERVICE, g_quark_from_static_string ("vala-dbus-interface-info")), NULL);
	return FALSE;
	_state_1:
	_data_->_tmp1_ = g_async_initable_new_finish (_data_->_source_object_, _data_->_res_, &_data_->_inner_error_);
	_data_->_tmp0_ = (UnityExtrasPreviewPlayerService*) _data_->_tmp1_;
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	_data_->_tmp2_ = _data_->_tmp0_;
	_data_->_tmp0_ = NULL;
	_g_object_unref0 (_data_->self->priv->_preview_player_service);
	_data_->self->priv->_preview_player_service = _data_->_tmp2_;
	_data_->_tmp3_ = _data_->self->priv->_preview_player_service;
	g_signal_connect_object (_data_->_tmp3_, "progress", (GCallback) _unity_extras_preview_player_on_progress_signal_unity_extras_preview_player_service_progress, _data_->self, 0);
	_g_object_unref0 (_data_->_tmp0_);
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_extras_preview_player_play_data_free (gpointer _data)
{
	UnityExtrasPreviewPlayerPlayData* _data_;
	_data_ = _data;
	_g_free0 (_data_->uri);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityExtrasPreviewPlayerPlayData, _data_);
}


static void
unity_extras_preview_player_play_async_ready_wrapper (GObject *source_object,
                                                      GAsyncResult *res,
                                                      void *user_data)
{
	UnityExtrasPreviewPlayerPlayData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_extras_preview_player_play (UnityExtrasPreviewPlayer* self,
                                  const gchar* uri,
                                  GAsyncReadyCallback _callback_,
                                  gpointer _user_data_)
{
	UnityExtrasPreviewPlayerPlayData* _data_;
	UnityExtrasPreviewPlayer* _tmp0_;
	gchar* _tmp1_;
	_data_ = g_slice_new0 (UnityExtrasPreviewPlayerPlayData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_extras_preview_player_play_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_extras_preview_player_play_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (uri);
	_g_free0 (_data_->uri);
	_data_->uri = _tmp1_;
	unity_extras_preview_player_play_co (_data_);
}


void
unity_extras_preview_player_play_finish (UnityExtrasPreviewPlayer* self,
                                         GAsyncResult* _res_,
                                         GError** error)
{
	UnityExtrasPreviewPlayerPlayData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static void
unity_extras_preview_player_play_ready (GObject* source_object,
                                        GAsyncResult* _res_,
                                        gpointer _user_data_)
{
	UnityExtrasPreviewPlayerPlayData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_extras_preview_player_play_co (_data_);
}


static gboolean
unity_extras_preview_player_play_co (UnityExtrasPreviewPlayerPlayData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_preview_player_service;
	if (_data_->_tmp0_ == NULL) {
		_data_->_state_ = 1;
		unity_extras_preview_player_connect_to (_data_->self, unity_extras_preview_player_play_ready, _data_);
		return FALSE;
		_state_1:
		unity_extras_preview_player_connect_to_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp1_ = _data_->self->priv->_preview_player_service;
	_data_->_state_ = 2;
	unity_extras_preview_player_service_play (_data_->_tmp1_, _data_->uri, unity_extras_preview_player_play_ready, _data_);
	return FALSE;
	_state_2:
	unity_extras_preview_player_service_play_finish (_data_->_tmp1_, _data_->_res_, &_data_->_inner_error_);
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_extras_preview_player_pause_data_free (gpointer _data)
{
	UnityExtrasPreviewPlayerPauseData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityExtrasPreviewPlayerPauseData, _data_);
}


static void
unity_extras_preview_player_pause_async_ready_wrapper (GObject *source_object,
                                                       GAsyncResult *res,
                                                       void *user_data)
{
	UnityExtrasPreviewPlayerPauseData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_extras_preview_player_pause (UnityExtrasPreviewPlayer* self,
                                   GAsyncReadyCallback _callback_,
                                   gpointer _user_data_)
{
	UnityExtrasPreviewPlayerPauseData* _data_;
	UnityExtrasPreviewPlayer* _tmp0_;
	_data_ = g_slice_new0 (UnityExtrasPreviewPlayerPauseData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_extras_preview_player_pause_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_extras_preview_player_pause_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	unity_extras_preview_player_pause_co (_data_);
}


void
unity_extras_preview_player_pause_finish (UnityExtrasPreviewPlayer* self,
                                          GAsyncResult* _res_,
                                          GError** error)
{
	UnityExtrasPreviewPlayerPauseData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static void
unity_extras_preview_player_pause_ready (GObject* source_object,
                                         GAsyncResult* _res_,
                                         gpointer _user_data_)
{
	UnityExtrasPreviewPlayerPauseData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_extras_preview_player_pause_co (_data_);
}


static gboolean
unity_extras_preview_player_pause_co (UnityExtrasPreviewPlayerPauseData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_preview_player_service;
	if (_data_->_tmp0_ == NULL) {
		_data_->_state_ = 1;
		unity_extras_preview_player_connect_to (_data_->self, unity_extras_preview_player_pause_ready, _data_);
		return FALSE;
		_state_1:
		unity_extras_preview_player_connect_to_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp1_ = _data_->self->priv->_preview_player_service;
	_data_->_state_ = 2;
	unity_extras_preview_player_service_pause (_data_->_tmp1_, unity_extras_preview_player_pause_ready, _data_);
	return FALSE;
	_state_2:
	unity_extras_preview_player_service_pause_finish (_data_->_tmp1_, _data_->_res_, &_data_->_inner_error_);
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_extras_preview_player_pause_resume_data_free (gpointer _data)
{
	UnityExtrasPreviewPlayerPauseResumeData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityExtrasPreviewPlayerPauseResumeData, _data_);
}


static void
unity_extras_preview_player_pause_resume_async_ready_wrapper (GObject *source_object,
                                                              GAsyncResult *res,
                                                              void *user_data)
{
	UnityExtrasPreviewPlayerPauseResumeData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_extras_preview_player_pause_resume (UnityExtrasPreviewPlayer* self,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_)
{
	UnityExtrasPreviewPlayerPauseResumeData* _data_;
	UnityExtrasPreviewPlayer* _tmp0_;
	_data_ = g_slice_new0 (UnityExtrasPreviewPlayerPauseResumeData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_extras_preview_player_pause_resume_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_extras_preview_player_pause_resume_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	unity_extras_preview_player_pause_resume_co (_data_);
}


void
unity_extras_preview_player_pause_resume_finish (UnityExtrasPreviewPlayer* self,
                                                 GAsyncResult* _res_,
                                                 GError** error)
{
	UnityExtrasPreviewPlayerPauseResumeData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static void
unity_extras_preview_player_pause_resume_ready (GObject* source_object,
                                                GAsyncResult* _res_,
                                                gpointer _user_data_)
{
	UnityExtrasPreviewPlayerPauseResumeData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_extras_preview_player_pause_resume_co (_data_);
}


static gboolean
unity_extras_preview_player_pause_resume_co (UnityExtrasPreviewPlayerPauseResumeData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_preview_player_service;
	if (_data_->_tmp0_ == NULL) {
		_data_->_state_ = 1;
		unity_extras_preview_player_connect_to (_data_->self, unity_extras_preview_player_pause_resume_ready, _data_);
		return FALSE;
		_state_1:
		unity_extras_preview_player_connect_to_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp1_ = _data_->self->priv->_preview_player_service;
	_data_->_state_ = 2;
	unity_extras_preview_player_service_pause_resume (_data_->_tmp1_, unity_extras_preview_player_pause_resume_ready, _data_);
	return FALSE;
	_state_2:
	unity_extras_preview_player_service_pause_resume_finish (_data_->_tmp1_, _data_->_res_, &_data_->_inner_error_);
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_extras_preview_player_resume_data_free (gpointer _data)
{
	UnityExtrasPreviewPlayerResumeData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityExtrasPreviewPlayerResumeData, _data_);
}


static void
unity_extras_preview_player_resume_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	UnityExtrasPreviewPlayerResumeData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_extras_preview_player_resume (UnityExtrasPreviewPlayer* self,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	UnityExtrasPreviewPlayerResumeData* _data_;
	UnityExtrasPreviewPlayer* _tmp0_;
	_data_ = g_slice_new0 (UnityExtrasPreviewPlayerResumeData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_extras_preview_player_resume_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_extras_preview_player_resume_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	unity_extras_preview_player_resume_co (_data_);
}


void
unity_extras_preview_player_resume_finish (UnityExtrasPreviewPlayer* self,
                                           GAsyncResult* _res_,
                                           GError** error)
{
	UnityExtrasPreviewPlayerResumeData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static void
unity_extras_preview_player_resume_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_)
{
	UnityExtrasPreviewPlayerResumeData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_extras_preview_player_resume_co (_data_);
}


static gboolean
unity_extras_preview_player_resume_co (UnityExtrasPreviewPlayerResumeData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_preview_player_service;
	if (_data_->_tmp0_ == NULL) {
		_data_->_state_ = 1;
		unity_extras_preview_player_connect_to (_data_->self, unity_extras_preview_player_resume_ready, _data_);
		return FALSE;
		_state_1:
		unity_extras_preview_player_connect_to_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp1_ = _data_->self->priv->_preview_player_service;
	_data_->_state_ = 2;
	unity_extras_preview_player_service_resume (_data_->_tmp1_, unity_extras_preview_player_resume_ready, _data_);
	return FALSE;
	_state_2:
	unity_extras_preview_player_service_resume_finish (_data_->_tmp1_, _data_->_res_, &_data_->_inner_error_);
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_extras_preview_player_stop_data_free (gpointer _data)
{
	UnityExtrasPreviewPlayerStopData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityExtrasPreviewPlayerStopData, _data_);
}


static void
unity_extras_preview_player_stop_async_ready_wrapper (GObject *source_object,
                                                      GAsyncResult *res,
                                                      void *user_data)
{
	UnityExtrasPreviewPlayerStopData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_extras_preview_player_stop (UnityExtrasPreviewPlayer* self,
                                  GAsyncReadyCallback _callback_,
                                  gpointer _user_data_)
{
	UnityExtrasPreviewPlayerStopData* _data_;
	UnityExtrasPreviewPlayer* _tmp0_;
	_data_ = g_slice_new0 (UnityExtrasPreviewPlayerStopData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_extras_preview_player_stop_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_extras_preview_player_stop_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	unity_extras_preview_player_stop_co (_data_);
}


void
unity_extras_preview_player_stop_finish (UnityExtrasPreviewPlayer* self,
                                         GAsyncResult* _res_,
                                         GError** error)
{
	UnityExtrasPreviewPlayerStopData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static void
unity_extras_preview_player_stop_ready (GObject* source_object,
                                        GAsyncResult* _res_,
                                        gpointer _user_data_)
{
	UnityExtrasPreviewPlayerStopData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_extras_preview_player_stop_co (_data_);
}


static gboolean
unity_extras_preview_player_stop_co (UnityExtrasPreviewPlayerStopData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_preview_player_service;
	if (_data_->_tmp0_ == NULL) {
		_data_->_state_ = 1;
		unity_extras_preview_player_connect_to (_data_->self, unity_extras_preview_player_stop_ready, _data_);
		return FALSE;
		_state_1:
		unity_extras_preview_player_connect_to_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp1_ = _data_->self->priv->_preview_player_service;
	_data_->_state_ = 2;
	unity_extras_preview_player_service_stop (_data_->_tmp1_, unity_extras_preview_player_stop_ready, _data_);
	return FALSE;
	_state_2:
	unity_extras_preview_player_service_stop_finish (_data_->_tmp1_, _data_->_res_, &_data_->_inner_error_);
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_extras_preview_player_close_data_free (gpointer _data)
{
	UnityExtrasPreviewPlayerCloseData* _data_;
	_data_ = _data;
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityExtrasPreviewPlayerCloseData, _data_);
}


static void
unity_extras_preview_player_close_async_ready_wrapper (GObject *source_object,
                                                       GAsyncResult *res,
                                                       void *user_data)
{
	UnityExtrasPreviewPlayerCloseData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_extras_preview_player_close (UnityExtrasPreviewPlayer* self,
                                   GAsyncReadyCallback _callback_,
                                   gpointer _user_data_)
{
	UnityExtrasPreviewPlayerCloseData* _data_;
	UnityExtrasPreviewPlayer* _tmp0_;
	_data_ = g_slice_new0 (UnityExtrasPreviewPlayerCloseData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_extras_preview_player_close_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_extras_preview_player_close_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	unity_extras_preview_player_close_co (_data_);
}


void
unity_extras_preview_player_close_finish (UnityExtrasPreviewPlayer* self,
                                          GAsyncResult* _res_,
                                          GError** error)
{
	UnityExtrasPreviewPlayerCloseData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return;
	}
}


static void
unity_extras_preview_player_close_ready (GObject* source_object,
                                         GAsyncResult* _res_,
                                         gpointer _user_data_)
{
	UnityExtrasPreviewPlayerCloseData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_extras_preview_player_close_co (_data_);
}


static gboolean
unity_extras_preview_player_close_co (UnityExtrasPreviewPlayerCloseData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_preview_player_service;
	if (_data_->_tmp0_ == NULL) {
		_data_->_state_ = 1;
		unity_extras_preview_player_connect_to (_data_->self, unity_extras_preview_player_close_ready, _data_);
		return FALSE;
		_state_1:
		unity_extras_preview_player_connect_to_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp1_ = _data_->self->priv->_preview_player_service;
	_data_->_state_ = 2;
	unity_extras_preview_player_service_close (_data_->_tmp1_, unity_extras_preview_player_close_ready, _data_);
	return FALSE;
	_state_2:
	unity_extras_preview_player_service_close_finish (_data_->_tmp1_, _data_->_res_, &_data_->_inner_error_);
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


static void
unity_extras_preview_player_video_properties_data_free (gpointer _data)
{
	UnityExtrasPreviewPlayerVideoPropertiesData* _data_;
	_data_ = _data;
	_g_free0 (_data_->uri);
	_g_hash_table_unref0 (_data_->result);
	_g_object_unref0 (_data_->self);
	g_slice_free (UnityExtrasPreviewPlayerVideoPropertiesData, _data_);
}


static void
unity_extras_preview_player_video_properties_async_ready_wrapper (GObject *source_object,
                                                                  GAsyncResult *res,
                                                                  void *user_data)
{
	UnityExtrasPreviewPlayerVideoPropertiesData* _task_data_;
	_task_data_ = g_task_get_task_data (G_TASK (res));
	if (_task_data_->_callback_ != NULL) {
		_task_data_->_callback_ (source_object, res, user_data);
	}
	_task_data_->_task_complete_ = TRUE;
}


void
unity_extras_preview_player_video_properties (UnityExtrasPreviewPlayer* self,
                                              const gchar* uri,
                                              GAsyncReadyCallback _callback_,
                                              gpointer _user_data_)
{
	UnityExtrasPreviewPlayerVideoPropertiesData* _data_;
	UnityExtrasPreviewPlayer* _tmp0_;
	gchar* _tmp1_;
	_data_ = g_slice_new0 (UnityExtrasPreviewPlayerVideoPropertiesData);
	_data_->_callback_ = _callback_;
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, unity_extras_preview_player_video_properties_async_ready_wrapper, _user_data_);
	if (_callback_ == NULL) {
		_data_->_task_complete_ = TRUE;
	}
	g_task_set_task_data (_data_->_async_result, _data_, unity_extras_preview_player_video_properties_data_free);
	_tmp0_ = _g_object_ref0 (self);
	_data_->self = _tmp0_;
	_tmp1_ = g_strdup (uri);
	_g_free0 (_data_->uri);
	_data_->uri = _tmp1_;
	unity_extras_preview_player_video_properties_co (_data_);
}


GHashTable*
unity_extras_preview_player_video_properties_finish (UnityExtrasPreviewPlayer* self,
                                                     GAsyncResult* _res_,
                                                     GError** error)
{
	GHashTable* result;
	UnityExtrasPreviewPlayerVideoPropertiesData* _data_;
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
	if (NULL == _data_) {
		return NULL;
	}
	result = _data_->result;
	_data_->result = NULL;
	return result;
}


static void
unity_extras_preview_player_video_properties_ready (GObject* source_object,
                                                    GAsyncResult* _res_,
                                                    gpointer _user_data_)
{
	UnityExtrasPreviewPlayerVideoPropertiesData* _data_;
	_data_ = _user_data_;
	_data_->_source_object_ = source_object;
	_data_->_res_ = _res_;
	_data_->_task_complete_ = TRUE;
	unity_extras_preview_player_video_properties_co (_data_);
}


static gboolean
unity_extras_preview_player_video_properties_co (UnityExtrasPreviewPlayerVideoPropertiesData* _data_)
{
	switch (_data_->_state_) {
		case 0:
		goto _state_0;
		case 1:
		goto _state_1;
		case 2:
		goto _state_2;
		default:
		g_assert_not_reached ();
	}
	_state_0:
	_data_->_tmp0_ = _data_->self->priv->_preview_player_service;
	if (_data_->_tmp0_ == NULL) {
		_data_->_state_ = 1;
		unity_extras_preview_player_connect_to (_data_->self, unity_extras_preview_player_video_properties_ready, _data_);
		return FALSE;
		_state_1:
		unity_extras_preview_player_connect_to_finish (_data_->self, _data_->_res_, &_data_->_inner_error_);
		if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
			g_object_unref (_data_->_async_result);
			return FALSE;
		}
	}
	_data_->_tmp1_ = _data_->self->priv->_preview_player_service;
	_data_->_state_ = 2;
	unity_extras_preview_player_service_video_properties (_data_->_tmp1_, _data_->uri, unity_extras_preview_player_video_properties_ready, _data_);
	return FALSE;
	_state_2:
	_data_->_tmp2_ = unity_extras_preview_player_service_video_properties_finish (_data_->_tmp1_, _data_->_res_, &_data_->_inner_error_);
	_data_->props = _data_->_tmp2_;
	if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
		g_task_return_error (_data_->_async_result, _data_->_inner_error_);
		g_object_unref (_data_->_async_result);
		return FALSE;
	}
	_data_->result = _data_->props;
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
	if (_data_->_state_ != 0) {
		while (_data_->_task_complete_ != TRUE) {
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
		}
	}
	g_object_unref (_data_->_async_result);
	return FALSE;
}


void
unity_extras_preview_player_on_progress_signal (UnityExtrasPreviewPlayer* self,
                                                const gchar* uri,
                                                guint32 state,
                                                gdouble progress_value)
{
	g_return_if_fail (self != NULL);
	g_return_if_fail (uri != NULL);
	g_signal_emit (self, unity_extras_preview_player_signals[UNITY_EXTRAS_PREVIEW_PLAYER_PROGRESS_SIGNAL], 0, uri, (UnityMusicPreviewTrackState) state, progress_value);
}


UnityExtrasPreviewPlayer*
unity_extras_preview_player_construct (GType object_type)
{
	UnityExtrasPreviewPlayer * self = NULL;
	self = (UnityExtrasPreviewPlayer*) g_object_new (object_type, NULL);
	return self;
}


UnityExtrasPreviewPlayer*
unity_extras_preview_player_new (void)
{
	return unity_extras_preview_player_construct (UNITY_EXTRAS_TYPE_PREVIEW_PLAYER);
}


static void
g_cclosure_user_marshal_VOID__STRING_ENUM_DOUBLE (GClosure * closure,
                                                  GValue * return_value,
                                                  guint n_param_values,
                                                  const GValue * param_values,
                                                  gpointer invocation_hint,
                                                  gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__STRING_ENUM_DOUBLE) (gpointer data1, const char* arg_1, gint arg_2, gdouble arg_3, gpointer data2);
	register GMarshalFunc_VOID__STRING_ENUM_DOUBLE callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
	g_return_if_fail (n_param_values == 4);
	if (G_CCLOSURE_SWAP_DATA (closure)) {
		data1 = closure->data;
		data2 = param_values->data[0].v_pointer;
	} else {
		data1 = param_values->data[0].v_pointer;
		data2 = closure->data;
	}
	callback = (GMarshalFunc_VOID__STRING_ENUM_DOUBLE) (marshal_data ? marshal_data : cc->callback);
	callback (data1, g_value_get_string (param_values + 1), g_value_get_enum (param_values + 2), g_value_get_double (param_values + 3), data2);
}


static void
unity_extras_preview_player_class_init (UnityExtrasPreviewPlayerClass * klass)
{
	unity_extras_preview_player_parent_class = g_type_class_peek_parent (klass);
	g_type_class_add_private (klass, sizeof (UnityExtrasPreviewPlayerPrivate));
	G_OBJECT_CLASS (klass)->finalize = unity_extras_preview_player_finalize;
	/**
	     * Reports progress of playback for given track uri.
	     */
	unity_extras_preview_player_signals[UNITY_EXTRAS_PREVIEW_PLAYER_PROGRESS_SIGNAL] = g_signal_new ("progress", UNITY_EXTRAS_TYPE_PREVIEW_PLAYER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__STRING_ENUM_DOUBLE, G_TYPE_NONE, 3, G_TYPE_STRING, UNITY_MUSIC_PREVIEW_TYPE_TRACK_STATE, G_TYPE_DOUBLE);
}


static void
unity_extras_preview_player_instance_init (UnityExtrasPreviewPlayer * self)
{
	self->priv = UNITY_EXTRAS_PREVIEW_PLAYER_GET_PRIVATE (self);
}


static void
unity_extras_preview_player_finalize (GObject * obj)
{
	UnityExtrasPreviewPlayer * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, UNITY_EXTRAS_TYPE_PREVIEW_PLAYER, UnityExtrasPreviewPlayer);
	_g_object_unref0 (self->priv->_preview_player_service);
	G_OBJECT_CLASS (unity_extras_preview_player_parent_class)->finalize (obj);
}


/**
   * Client class for preview player DBus interface (com.canonical.Unity.Lens.Music.PreviewPlayer).
   */
GType
unity_extras_preview_player_get_type (void)
{
	static volatile gsize unity_extras_preview_player_type_id__volatile = 0;
	if (g_once_init_enter (&unity_extras_preview_player_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (UnityExtrasPreviewPlayerClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) unity_extras_preview_player_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (UnityExtrasPreviewPlayer), 0, (GInstanceInitFunc) unity_extras_preview_player_instance_init, NULL };
		GType unity_extras_preview_player_type_id;
		unity_extras_preview_player_type_id = g_type_register_static (G_TYPE_OBJECT, "UnityExtrasPreviewPlayer", &g_define_type_info, 0);
		g_once_init_leave (&unity_extras_preview_player_type_id__volatile, unity_extras_preview_player_type_id);
	}
	return unity_extras_preview_player_type_id__volatile;
}



