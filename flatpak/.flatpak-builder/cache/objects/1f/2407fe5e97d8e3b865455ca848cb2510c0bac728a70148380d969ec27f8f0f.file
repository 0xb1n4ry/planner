/* DeadlinePopover.c generated by valac 0.40.11, the Vala compiler
 * generated from DeadlinePopover.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <glib/gi18n-lib.h>
#include <granite.h>


#define WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER (widgets_popovers_deadline_popover_get_type ())
#define WIDGETS_POPOVERS_DEADLINE_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER, WidgetsPopoversDeadlinePopover))
#define WIDGETS_POPOVERS_DEADLINE_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER, WidgetsPopoversDeadlinePopoverClass))
#define WIDGETS_POPOVERS_IS_DEADLINE_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER))
#define WIDGETS_POPOVERS_IS_DEADLINE_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER))
#define WIDGETS_POPOVERS_DEADLINE_POPOVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER, WidgetsPopoversDeadlinePopoverClass))

typedef struct _WidgetsPopoversDeadlinePopover WidgetsPopoversDeadlinePopover;
typedef struct _WidgetsPopoversDeadlinePopoverClass WidgetsPopoversDeadlinePopoverClass;
typedef struct _WidgetsPopoversDeadlinePopoverPrivate WidgetsPopoversDeadlinePopoverPrivate;
enum  {
	WIDGETS_POPOVERS_DEADLINE_POPOVER_0_PROPERTY,
	WIDGETS_POPOVERS_DEADLINE_POPOVER_NUM_PROPERTIES
};
static GParamSpec* widgets_popovers_deadline_popover_properties[WIDGETS_POPOVERS_DEADLINE_POPOVER_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))

#define WIDGETS_CALENDAR_TYPE_CALENDAR (widgets_calendar_calendar_get_type ())
#define WIDGETS_CALENDAR_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendar))
#define WIDGETS_CALENDAR_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))
#define WIDGETS_CALENDAR_IS_CALENDAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_IS_CALENDAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_CALENDAR_TYPE_CALENDAR))
#define WIDGETS_CALENDAR_CALENDAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_CALENDAR_TYPE_CALENDAR, WidgetsCalendarCalendarClass))

typedef struct _WidgetsCalendarCalendar WidgetsCalendarCalendar;
typedef struct _WidgetsCalendarCalendarClass WidgetsCalendarCalendarClass;
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
enum  {
	WIDGETS_POPOVERS_DEADLINE_POPOVER_SELECTION_CHANGED_SIGNAL,
	WIDGETS_POPOVERS_DEADLINE_POPOVER_SELECTION_DOUBLE_CHANGED_SIGNAL,
	WIDGETS_POPOVERS_DEADLINE_POPOVER_CLEAR_SIGNAL,
	WIDGETS_POPOVERS_DEADLINE_POPOVER_NUM_SIGNALS
};
static guint widgets_popovers_deadline_popover_signals[WIDGETS_POPOVERS_DEADLINE_POPOVER_NUM_SIGNALS] = {0};

struct _WidgetsPopoversDeadlinePopover {
	GtkPopover parent_instance;
	WidgetsPopoversDeadlinePopoverPrivate * priv;
};

struct _WidgetsPopoversDeadlinePopoverClass {
	GtkPopoverClass parent_class;
};


static gpointer widgets_popovers_deadline_popover_parent_class = NULL;

GType widgets_popovers_deadline_popover_get_type (void) G_GNUC_CONST;
WidgetsPopoversDeadlinePopover* widgets_popovers_deadline_popover_new (GtkWidget* relative);
WidgetsPopoversDeadlinePopover* widgets_popovers_deadline_popover_construct (GType object_type,
                                                                             GtkWidget* relative);
static GObject * widgets_popovers_deadline_popover_constructor (GType type,
                                                         guint n_construct_properties,
                                                         GObjectConstructParam * construct_properties);
GType widgets_calendar_calendar_get_type (void) G_GNUC_CONST;
WidgetsCalendarCalendar* widgets_calendar_calendar_new (gboolean _sensitive_past_days);
WidgetsCalendarCalendar* widgets_calendar_calendar_construct (GType object_type,
                                                              gboolean _sensitive_past_days);
static void _widgets_popovers_deadline_popover___lambda400_ (WidgetsPopoversDeadlinePopover* self,
                                                      GDateTime* date);
static void __widgets_popovers_deadline_popover___lambda400__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                                                                   GDateTime* date,
                                                                                                   gpointer self);
static void _widgets_popovers_deadline_popover___lambda401_ (WidgetsPopoversDeadlinePopover* self,
                                                      GDateTime* date);
static void __widgets_popovers_deadline_popover___lambda401__widgets_calendar_calendar_selection_double_changed (WidgetsCalendarCalendar* _sender,
                                                                                                          GDateTime* date,
                                                                                                          gpointer self);
static void _widgets_popovers_deadline_popover___lambda402_ (WidgetsPopoversDeadlinePopover* self);
static void __widgets_popovers_deadline_popover___lambda402__gtk_button_clicked (GtkButton* _sender,
                                                                          gpointer self);


WidgetsPopoversDeadlinePopover*
widgets_popovers_deadline_popover_construct (GType object_type,
                                             GtkWidget* relative)
{
	WidgetsPopoversDeadlinePopover * self = NULL;
#line 26 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_return_val_if_fail (relative != NULL, NULL);
#line 27 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	self = (WidgetsPopoversDeadlinePopover*) g_object_new (object_type, "relative-to", relative, "modal", TRUE, "position", GTK_POS_BOTTOM, NULL);
#line 26 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	return self;
#line 120 "DeadlinePopover.c"
}


WidgetsPopoversDeadlinePopover*
widgets_popovers_deadline_popover_new (GtkWidget* relative)
{
#line 26 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	return widgets_popovers_deadline_popover_construct (WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER, relative);
#line 129 "DeadlinePopover.c"
}


static void
_widgets_popovers_deadline_popover___lambda400_ (WidgetsPopoversDeadlinePopover* self,
                                                 GDateTime* date)
{
#line 58 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_return_if_fail (date != NULL);
#line 59 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_signal_emit (self, widgets_popovers_deadline_popover_signals[WIDGETS_POPOVERS_DEADLINE_POPOVER_SELECTION_CHANGED_SIGNAL], 0, date);
#line 141 "DeadlinePopover.c"
}


static void
__widgets_popovers_deadline_popover___lambda400__widgets_calendar_calendar_selection_changed (WidgetsCalendarCalendar* _sender,
                                                                                              GDateTime* date,
                                                                                              gpointer self)
{
#line 58 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_widgets_popovers_deadline_popover___lambda400_ ((WidgetsPopoversDeadlinePopover*) self, date);
#line 152 "DeadlinePopover.c"
}


static void
_widgets_popovers_deadline_popover___lambda401_ (WidgetsPopoversDeadlinePopover* self,
                                                 GDateTime* date)
{
#line 62 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_return_if_fail (date != NULL);
#line 63 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_signal_emit (self, widgets_popovers_deadline_popover_signals[WIDGETS_POPOVERS_DEADLINE_POPOVER_SELECTION_DOUBLE_CHANGED_SIGNAL], 0, date);
#line 64 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_popover_popdown ((GtkPopover*) self);
#line 166 "DeadlinePopover.c"
}


static void
__widgets_popovers_deadline_popover___lambda401__widgets_calendar_calendar_selection_double_changed (WidgetsCalendarCalendar* _sender,
                                                                                                     GDateTime* date,
                                                                                                     gpointer self)
{
#line 62 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_widgets_popovers_deadline_popover___lambda401_ ((WidgetsPopoversDeadlinePopover*) self, date);
#line 177 "DeadlinePopover.c"
}


static void
_widgets_popovers_deadline_popover___lambda402_ (WidgetsPopoversDeadlinePopover* self)
{
#line 68 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_signal_emit (self, widgets_popovers_deadline_popover_signals[WIDGETS_POPOVERS_DEADLINE_POPOVER_CLEAR_SIGNAL], 0);
#line 69 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_popover_popdown ((GtkPopover*) self);
#line 188 "DeadlinePopover.c"
}


static void
__widgets_popovers_deadline_popover___lambda402__gtk_button_clicked (GtkButton* _sender,
                                                                     gpointer self)
{
#line 67 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_widgets_popovers_deadline_popover___lambda402_ ((WidgetsPopoversDeadlinePopover*) self);
#line 198 "DeadlinePopover.c"
}


static GObject *
widgets_popovers_deadline_popover_constructor (GType type,
                                               guint n_construct_properties,
                                               GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsPopoversDeadlinePopover * self;
	GtkLabel* title_label = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkLabel* _tmp5_;
	GtkLabel* _tmp6_;
	GtkLabel* _tmp7_;
	GtkStyleContext* _tmp8_;
	WidgetsCalendarCalendar* calendar = NULL;
	WidgetsCalendarCalendar* _tmp9_;
	GtkButton* clear_button = NULL;
	GtkButton* _tmp10_;
	GtkButton* _tmp11_;
	GtkButton* _tmp12_;
	GtkStyleContext* _tmp13_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp14_;
	GtkGrid* _tmp15_;
	GtkGrid* _tmp16_;
	GtkGrid* _tmp17_;
	GtkGrid* _tmp18_;
	GtkLabel* _tmp19_;
	GtkGrid* _tmp20_;
	WidgetsCalendarCalendar* _tmp21_;
	GtkGrid* _tmp22_;
	GtkButton* _tmp23_;
	GtkGrid* _tmp24_;
	WidgetsCalendarCalendar* _tmp25_;
	WidgetsCalendarCalendar* _tmp26_;
	GtkButton* _tmp27_;
#line 34 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	parent_class = G_OBJECT_CLASS (widgets_popovers_deadline_popover_parent_class);
#line 34 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 34 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER, WidgetsPopoversDeadlinePopover);
#line 35 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp0_ = g_strdup_printf ("<small>%s</small>", _ ("Deadline"));
#line 35 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp1_ = _tmp0_;
#line 35 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new (_tmp1_);
#line 35 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_object_ref_sink (_tmp2_);
#line 35 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp3_ = _tmp2_;
#line 35 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_g_free0 (_tmp1_);
#line 35 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	title_label = _tmp3_;
#line 36 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp4_ = title_label;
#line 36 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_label_set_use_markup (_tmp4_, TRUE);
#line 37 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp5_ = title_label;
#line 37 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp5_, TRUE);
#line 38 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp6_ = title_label;
#line 38 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp6_, GTK_ALIGN_CENTER);
#line 39 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp7_ = title_label;
#line 39 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 39 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_style_context_add_class (_tmp8_, GRANITE_STYLE_CLASS_H4_LABEL);
#line 41 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp9_ = widgets_calendar_calendar_new (TRUE);
#line 41 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_object_ref_sink (_tmp9_);
#line 41 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	calendar = _tmp9_;
#line 43 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp10_ = (GtkButton*) gtk_button_new_with_label (_ ("Clear"));
#line 43 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_object_ref_sink (_tmp10_);
#line 43 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	clear_button = _tmp10_;
#line 44 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp11_ = clear_button;
#line 44 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_object_set ((GtkWidget*) _tmp11_, "margin", 6, NULL);
#line 45 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp12_ = clear_button;
#line 45 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp13_ = gtk_widget_get_style_context ((GtkWidget*) _tmp12_);
#line 45 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_style_context_add_class (_tmp13_, GTK_STYLE_CLASS_DESTRUCTIVE_ACTION);
#line 47 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp14_ = (GtkGrid*) gtk_grid_new ();
#line 47 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_object_ref_sink (_tmp14_);
#line 47 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	main_grid = _tmp14_;
#line 48 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp15_ = main_grid;
#line 48 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_object_set ((GtkWidget*) _tmp15_, "expand", TRUE, NULL);
#line 49 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp16_ = main_grid;
#line 49 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp16_, GTK_ORIENTATION_VERTICAL);
#line 50 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp17_ = main_grid;
#line 50 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_object_set ((GtkWidget*) _tmp17_, "width-request", 250, NULL);
#line 52 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp18_ = main_grid;
#line 52 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp19_ = title_label;
#line 52 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_container_add ((GtkContainer*) _tmp18_, (GtkWidget*) _tmp19_);
#line 53 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp20_ = main_grid;
#line 53 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp21_ = calendar;
#line 53 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_container_add ((GtkContainer*) _tmp20_, (GtkWidget*) _tmp21_);
#line 54 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp22_ = main_grid;
#line 54 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp23_ = clear_button;
#line 54 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_container_add ((GtkContainer*) _tmp22_, (GtkWidget*) _tmp23_);
#line 56 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp24_ = main_grid;
#line 56 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp24_);
#line 58 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp25_ = calendar;
#line 58 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_signal_connect_object (_tmp25_, "selection-changed", (GCallback) __widgets_popovers_deadline_popover___lambda400__widgets_calendar_calendar_selection_changed, self, 0);
#line 62 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp26_ = calendar;
#line 62 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_signal_connect_object (_tmp26_, "selection-double-changed", (GCallback) __widgets_popovers_deadline_popover___lambda401__widgets_calendar_calendar_selection_double_changed, self, 0);
#line 67 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_tmp27_ = clear_button;
#line 67 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	g_signal_connect_object (_tmp27_, "clicked", (GCallback) __widgets_popovers_deadline_popover___lambda402__gtk_button_clicked, self, 0);
#line 34 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_g_object_unref0 (main_grid);
#line 34 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_g_object_unref0 (clear_button);
#line 34 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_g_object_unref0 (calendar);
#line 34 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	_g_object_unref0 (title_label);
#line 34 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	return obj;
#line 364 "DeadlinePopover.c"
}


static void
widgets_popovers_deadline_popover_class_init (WidgetsPopoversDeadlinePopoverClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	widgets_popovers_deadline_popover_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_popovers_deadline_popover_constructor;
#line 22 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	widgets_popovers_deadline_popover_signals[WIDGETS_POPOVERS_DEADLINE_POPOVER_SELECTION_CHANGED_SIGNAL] = g_signal_new ("selection-changed", WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__BOXED, G_TYPE_NONE, 1, G_TYPE_DATE_TIME);
#line 22 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	widgets_popovers_deadline_popover_signals[WIDGETS_POPOVERS_DEADLINE_POPOVER_SELECTION_DOUBLE_CHANGED_SIGNAL] = g_signal_new ("selection-double-changed", WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__BOXED, G_TYPE_NONE, 1, G_TYPE_DATE_TIME);
#line 22 "/run/build/planner/src/Widgets/Popovers/DeadlinePopover.vala"
	widgets_popovers_deadline_popover_signals[WIDGETS_POPOVERS_DEADLINE_POPOVER_CLEAR_SIGNAL] = g_signal_new ("clear", WIDGETS_POPOVERS_TYPE_DEADLINE_POPOVER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__VOID, G_TYPE_NONE, 0);
#line 381 "DeadlinePopover.c"
}


static void
widgets_popovers_deadline_popover_instance_init (WidgetsPopoversDeadlinePopover * self)
{
}


GType
widgets_popovers_deadline_popover_get_type (void)
{
	static volatile gsize widgets_popovers_deadline_popover_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_popovers_deadline_popover_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsPopoversDeadlinePopoverClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_popovers_deadline_popover_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsPopoversDeadlinePopover), 0, (GInstanceInitFunc) widgets_popovers_deadline_popover_instance_init, NULL };
		GType widgets_popovers_deadline_popover_type_id;
		widgets_popovers_deadline_popover_type_id = g_type_register_static (gtk_popover_get_type (), "WidgetsPopoversDeadlinePopover", &g_define_type_info, 0);
		g_once_init_leave (&widgets_popovers_deadline_popover_type_id__volatile, widgets_popovers_deadline_popover_type_id);
	}
	return widgets_popovers_deadline_popover_type_id__volatile;
}



