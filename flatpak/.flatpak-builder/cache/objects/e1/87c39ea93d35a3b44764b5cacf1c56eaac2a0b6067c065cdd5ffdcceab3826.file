/* ParsedEvent.c generated by valac 0.40.11, the Vala compiler
 * generated from ParsedEvent.vala, do not modify */

/* -*- Mode: vala; indent-tabs-mode: nil; tab-width: 4 -*-*/
/*-
 * Copyright (c) 2011-2015 elementary LLC
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by: Mario Guerriero <marioguerriero33@gmail.com>
 *              pantor
 */


#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>


#define MAYA_SERVICES_TYPE_PARSED_EVENT (maya_services_parsed_event_get_type ())
#define MAYA_SERVICES_PARSED_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), MAYA_SERVICES_TYPE_PARSED_EVENT, MayaServicesParsedEvent))
#define MAYA_SERVICES_PARSED_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), MAYA_SERVICES_TYPE_PARSED_EVENT, MayaServicesParsedEventClass))
#define MAYA_SERVICES_IS_PARSED_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), MAYA_SERVICES_TYPE_PARSED_EVENT))
#define MAYA_SERVICES_IS_PARSED_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), MAYA_SERVICES_TYPE_PARSED_EVENT))
#define MAYA_SERVICES_PARSED_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), MAYA_SERVICES_TYPE_PARSED_EVENT, MayaServicesParsedEventClass))

typedef struct _MayaServicesParsedEvent MayaServicesParsedEvent;
typedef struct _MayaServicesParsedEventClass MayaServicesParsedEventClass;
typedef struct _MayaServicesParsedEventPrivate MayaServicesParsedEventPrivate;
enum  {
	MAYA_SERVICES_PARSED_EVENT_0_PROPERTY,
	MAYA_SERVICES_PARSED_EVENT_NUM_PROPERTIES
};
static GParamSpec* maya_services_parsed_event_properties[MAYA_SERVICES_PARSED_EVENT_NUM_PROPERTIES];
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))

struct _MayaServicesParsedEvent {
	GObject parent_instance;
	MayaServicesParsedEventPrivate * priv;
	gchar* title;
	gchar* location;
	gchar* participants;
	GDateTime* from;
	GDateTime* to;
	gboolean all_day;
};

struct _MayaServicesParsedEventClass {
	GObjectClass parent_class;
};


static gpointer maya_services_parsed_event_parent_class = NULL;

GType maya_services_parsed_event_get_type (void) G_GNUC_CONST;
MayaServicesParsedEvent* maya_services_parsed_event_new (const gchar* _title,
                                                         GDateTime* _from,
                                                         GDateTime* _to,
                                                         const gchar* _location,
                                                         gboolean _all_day,
                                                         const gchar* _participants);
MayaServicesParsedEvent* maya_services_parsed_event_construct (GType object_type,
                                                               const gchar* _title,
                                                               GDateTime* _from,
                                                               GDateTime* _to,
                                                               const gchar* _location,
                                                               gboolean _all_day,
                                                               const gchar* _participants);
void maya_services_parsed_event_set_length_to_minutes (MayaServicesParsedEvent* self,
                                                       gint minutes);
void maya_services_parsed_event_set_length_to_hours (MayaServicesParsedEvent* self,
                                                     gint hours);
void maya_services_parsed_event_set_length_to_days (MayaServicesParsedEvent* self,
                                                    gint days);
void maya_services_parsed_event_set_length_to_weeks (MayaServicesParsedEvent* self,
                                                     gint weeks);
void maya_services_parsed_event_from_set_second (MayaServicesParsedEvent* self,
                                                 gint second);
void maya_services_parsed_event_to_set_second (MayaServicesParsedEvent* self,
                                               gint second);
void maya_services_parsed_event_from_set_minute (MayaServicesParsedEvent* self,
                                                 gint minute);
void maya_services_parsed_event_to_set_minute (MayaServicesParsedEvent* self,
                                               gint minute);
static gint maya_services_parsed_event_hour_from_half (MayaServicesParsedEvent* self,
                                                gint hour,
                                                const gchar* half);
void maya_services_parsed_event_from_set_hour (MayaServicesParsedEvent* self,
                                               gint hour,
                                               const gchar* half);
void maya_services_parsed_event_to_set_hour (MayaServicesParsedEvent* self,
                                             gint hour,
                                             const gchar* half);
void maya_services_parsed_event_from_set_day (MayaServicesParsedEvent* self,
                                              gint day);
void maya_services_parsed_event_to_set_day (MayaServicesParsedEvent* self,
                                            gint day);
void maya_services_parsed_event_from_set_month (MayaServicesParsedEvent* self,
                                                gint month);
void maya_services_parsed_event_to_set_month (MayaServicesParsedEvent* self,
                                              gint month);
void maya_services_parsed_event_from_set_year (MayaServicesParsedEvent* self,
                                               gint year);
void maya_services_parsed_event_to_set_year (MayaServicesParsedEvent* self,
                                             gint year);
void maya_services_parsed_event_set_all_day (MayaServicesParsedEvent* self);
void maya_services_parsed_event_unset_all_day (MayaServicesParsedEvent* self);
void maya_services_parsed_event_set_one_entire_day (MayaServicesParsedEvent* self);
void maya_services_parsed_event_if_elapsed_delay_to_next_day (MayaServicesParsedEvent* self,
                                                              GDateTime* simulated_dt);
void maya_services_parsed_event_if_elapsed_delay_to_next_week (MayaServicesParsedEvent* self,
                                                               GDateTime* simulated_dt);
void maya_services_parsed_event_if_elapsed_delay_to_next_month (MayaServicesParsedEvent* self,
                                                                GDateTime* simulated_dt);
void maya_services_parsed_event_if_elapsed_delay_to_next_year (MayaServicesParsedEvent* self,
                                                               GDateTime* simulated_dt);
static void maya_services_parsed_event_finalize (GObject * obj);


static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 37 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 141 "ParsedEvent.c"
}


MayaServicesParsedEvent*
maya_services_parsed_event_construct (GType object_type,
                                      const gchar* _title,
                                      GDateTime* _from,
                                      GDateTime* _to,
                                      const gchar* _location,
                                      gboolean _all_day,
                                      const gchar* _participants)
{
	MayaServicesParsedEvent * self = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
	gchar* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
#line 33 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_val_if_fail (_title != NULL, NULL);
#line 33 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_val_if_fail (_location != NULL, NULL);
#line 33 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_val_if_fail (_participants != NULL, NULL);
#line 33 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self = (MayaServicesParsedEvent*) g_object_new (object_type, NULL);
#line 34 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = g_strdup (_title);
#line 34 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_free0 (self->title);
#line 34 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->title = _tmp0_;
#line 35 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = g_strdup (_location);
#line 35 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_free0 (self->location);
#line 35 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->location = _tmp1_;
#line 36 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_strdup (_participants);
#line 36 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_free0 (self->participants);
#line 36 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->participants = _tmp2_;
#line 37 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp3_ = _g_date_time_ref0 (_from);
#line 37 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->from);
#line 37 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->from = _tmp3_;
#line 38 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp4_ = _g_date_time_ref0 (_to);
#line 38 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 38 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp4_;
#line 39 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->all_day = _all_day;
#line 33 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	return self;
#line 202 "ParsedEvent.c"
}


MayaServicesParsedEvent*
maya_services_parsed_event_new (const gchar* _title,
                                GDateTime* _from,
                                GDateTime* _to,
                                const gchar* _location,
                                gboolean _all_day,
                                const gchar* _participants)
{
#line 33 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	return maya_services_parsed_event_construct (MAYA_SERVICES_TYPE_PARSED_EVENT, _title, _from, _to, _location, _all_day, _participants);
#line 216 "ParsedEvent.c"
}


void
maya_services_parsed_event_set_length_to_minutes (MayaServicesParsedEvent* self,
                                                  gint minutes)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
#line 42 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 43 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 43 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = g_date_time_add_minutes (_tmp0_, minutes);
#line 43 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 43 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp1_;
#line 236 "ParsedEvent.c"
}


void
maya_services_parsed_event_set_length_to_hours (MayaServicesParsedEvent* self,
                                                gint hours)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
#line 46 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 47 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 47 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = g_date_time_add_hours (_tmp0_, hours);
#line 47 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 47 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp1_;
#line 256 "ParsedEvent.c"
}


void
maya_services_parsed_event_set_length_to_days (MayaServicesParsedEvent* self,
                                               gint days)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
#line 50 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 51 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 51 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = g_date_time_add_days (_tmp0_, days);
#line 51 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 51 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp1_;
#line 276 "ParsedEvent.c"
}


void
maya_services_parsed_event_set_length_to_weeks (MayaServicesParsedEvent* self,
                                                gint weeks)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
#line 54 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 55 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 55 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = g_date_time_add_days (_tmp0_, 7 * weeks);
#line 55 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 55 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp1_;
#line 296 "ParsedEvent.c"
}


void
maya_services_parsed_event_from_set_second (MayaServicesParsedEvent* self,
                                            gint second)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
#line 58 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 59 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 59 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = self->from;
#line 59 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_date_time_add_seconds (_tmp0_, (gdouble) (second - g_date_time_get_second (_tmp1_)));
#line 59 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->from);
#line 59 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->from = _tmp2_;
#line 319 "ParsedEvent.c"
}


void
maya_services_parsed_event_to_set_second (MayaServicesParsedEvent* self,
                                          gint second)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
#line 62 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 63 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->to;
#line 63 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = self->to;
#line 63 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_date_time_add_seconds (_tmp0_, (gdouble) (second - g_date_time_get_second (_tmp1_)));
#line 63 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 63 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp2_;
#line 342 "ParsedEvent.c"
}


void
maya_services_parsed_event_from_set_minute (MayaServicesParsedEvent* self,
                                            gint minute)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
#line 66 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 67 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 67 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = self->from;
#line 67 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_date_time_add_minutes (_tmp0_, minute - g_date_time_get_minute (_tmp1_));
#line 67 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->from);
#line 67 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->from = _tmp2_;
#line 365 "ParsedEvent.c"
}


void
maya_services_parsed_event_to_set_minute (MayaServicesParsedEvent* self,
                                          gint minute)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
#line 70 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 71 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->to;
#line 71 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = self->to;
#line 71 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_date_time_add_minutes (_tmp0_, minute - g_date_time_get_minute (_tmp1_));
#line 71 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 71 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp2_;
#line 388 "ParsedEvent.c"
}


static gint
maya_services_parsed_event_hour_from_half (MayaServicesParsedEvent* self,
                                           gint hour,
                                           const gchar* half)
{
	gint result = 0;
#line 74 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 74 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_val_if_fail (half != NULL, 0);
#line 75 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (hour > 12) {
#line 76 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		result = hour;
#line 76 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		return result;
#line 408 "ParsedEvent.c"
	}
#line 79 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (g_strcmp0 (half, "pm") == 0) {
#line 80 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		result = hour + 12;
#line 80 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		return result;
#line 416 "ParsedEvent.c"
	}
#line 83 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (g_strcmp0 (half, "p") == 0) {
#line 84 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		result = hour + 12;
#line 84 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		return result;
#line 424 "ParsedEvent.c"
	}
#line 87 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (g_strcmp0 (half, "") == 0) {
#line 88 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		if (hour < 8) {
#line 89 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
			hour = hour + 12;
#line 432 "ParsedEvent.c"
		}
	}
#line 93 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	result = hour;
#line 93 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	return result;
#line 439 "ParsedEvent.c"
}


void
maya_services_parsed_event_from_set_hour (MayaServicesParsedEvent* self,
                                          gint hour,
                                          const gchar* half)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
#line 96 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 96 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (half != NULL);
#line 97 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	hour = maya_services_parsed_event_hour_from_half (self, hour, half);
#line 98 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 98 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = self->from;
#line 98 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_date_time_add_hours (_tmp0_, hour - g_date_time_get_hour (_tmp1_));
#line 98 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->from);
#line 98 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->from = _tmp2_;
#line 467 "ParsedEvent.c"
}


void
maya_services_parsed_event_to_set_hour (MayaServicesParsedEvent* self,
                                        gint hour,
                                        const gchar* half)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
#line 101 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 101 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (half != NULL);
#line 102 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	hour = maya_services_parsed_event_hour_from_half (self, hour, half);
#line 103 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->to;
#line 103 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = self->to;
#line 103 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_date_time_add_hours (_tmp0_, hour - g_date_time_get_hour (_tmp1_));
#line 103 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 103 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp2_;
#line 495 "ParsedEvent.c"
}


void
maya_services_parsed_event_from_set_day (MayaServicesParsedEvent* self,
                                         gint day)
{
#line 106 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 107 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (day > 0) {
#line 507 "ParsedEvent.c"
		GDateTime* _tmp0_;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
#line 108 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp0_ = self->from;
#line 108 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->from;
#line 108 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_days (_tmp0_, day - g_date_time_get_day_of_month (_tmp1_));
#line 108 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->from);
#line 108 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->from = _tmp2_;
#line 521 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_to_set_day (MayaServicesParsedEvent* self,
                                       gint day)
{
#line 112 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 113 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (day > 0) {
#line 534 "ParsedEvent.c"
		GDateTime* _tmp0_;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
#line 114 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp0_ = self->to;
#line 114 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->to;
#line 114 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_days (_tmp0_, day - g_date_time_get_day_of_month (_tmp1_));
#line 114 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->to);
#line 114 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->to = _tmp2_;
#line 548 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_from_set_month (MayaServicesParsedEvent* self,
                                           gint month)
{
#line 118 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 119 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (month > 0) {
#line 561 "ParsedEvent.c"
		GDateTime* _tmp0_;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
#line 120 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp0_ = self->from;
#line 120 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->from;
#line 120 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_months (_tmp0_, month - g_date_time_get_month (_tmp1_));
#line 120 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->from);
#line 120 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->from = _tmp2_;
#line 575 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_to_set_month (MayaServicesParsedEvent* self,
                                         gint month)
{
#line 124 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 125 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (month > 0) {
#line 588 "ParsedEvent.c"
		GDateTime* _tmp0_;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
#line 126 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp0_ = self->to;
#line 126 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->to;
#line 126 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_months (_tmp0_, month - g_date_time_get_month (_tmp1_));
#line 126 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->to);
#line 126 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->to = _tmp2_;
#line 602 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_from_set_year (MayaServicesParsedEvent* self,
                                          gint year)
{
#line 130 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 131 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (year > 0) {
#line 615 "ParsedEvent.c"
		GDateTime* _tmp0_;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
#line 132 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp0_ = self->from;
#line 132 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->from;
#line 132 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_years (_tmp0_, year - g_date_time_get_year (_tmp1_));
#line 132 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->from);
#line 132 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->from = _tmp2_;
#line 629 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_to_set_year (MayaServicesParsedEvent* self,
                                        gint year)
{
#line 136 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 137 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (year > 0) {
#line 642 "ParsedEvent.c"
		GDateTime* _tmp0_;
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
#line 138 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp0_ = self->to;
#line 138 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->to;
#line 138 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_years (_tmp0_, year - g_date_time_get_year (_tmp1_));
#line 138 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->to);
#line 138 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->to = _tmp2_;
#line 656 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_set_all_day (MayaServicesParsedEvent* self)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	GDateTime* _tmp5_;
	GDateTime* _tmp6_;
	GDateTime* _tmp7_;
	GDateTime* _tmp8_;
	GDateTime* _tmp9_;
	GDateTime* _tmp10_;
	GDateTime* _tmp11_;
#line 142 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = self->from;
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_date_time_add_hours (_tmp0_, -g_date_time_get_hour (_tmp1_));
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp3_ = _tmp2_;
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp4_ = self->from;
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp5_ = g_date_time_add_minutes (_tmp3_, -g_date_time_get_minute (_tmp4_));
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->from);
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->from = _tmp5_;
#line 143 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (_tmp3_);
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp6_ = self->to;
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp7_ = self->to;
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp8_ = g_date_time_add_hours (_tmp6_, -g_date_time_get_hour (_tmp7_));
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp9_ = _tmp8_;
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp10_ = self->to;
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp11_ = g_date_time_add_minutes (_tmp9_, -g_date_time_get_minute (_tmp10_));
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp11_;
#line 144 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (_tmp9_);
#line 145 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->all_day = TRUE;
#line 716 "ParsedEvent.c"
}


void
maya_services_parsed_event_unset_all_day (MayaServicesParsedEvent* self)
{
#line 148 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 149 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	maya_services_parsed_event_set_length_to_hours (self, 1);
#line 150 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->all_day = FALSE;
#line 729 "ParsedEvent.c"
}


void
maya_services_parsed_event_set_one_entire_day (MayaServicesParsedEvent* self)
{
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	GDateTime* _tmp5_;
	GDateTime* _tmp6_;
	GDateTime* _tmp7_;
#line 153 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp1_ = self->from;
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp2_ = g_date_time_add_hours (_tmp0_, -g_date_time_get_hour (_tmp1_));
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp3_ = _tmp2_;
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp4_ = self->from;
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp5_ = g_date_time_add_minutes (_tmp3_, -g_date_time_get_minute (_tmp4_));
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->from);
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->from = _tmp5_;
#line 154 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (_tmp3_);
#line 155 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp6_ = self->from;
#line 155 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp7_ = _g_date_time_ref0 (_tmp6_);
#line 155 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 155 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->to = _tmp7_;
#line 156 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self->all_day = TRUE;
#line 774 "ParsedEvent.c"
}


void
maya_services_parsed_event_if_elapsed_delay_to_next_day (MayaServicesParsedEvent* self,
                                                         GDateTime* simulated_dt)
{
	GDateTime* _tmp0_;
#line 159 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 159 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (simulated_dt != NULL);
#line 160 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 160 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (g_date_time_compare (_tmp0_, simulated_dt) < 0) {
#line 791 "ParsedEvent.c"
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		GDateTime* _tmp3_;
		GDateTime* _tmp4_;
#line 161 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->from;
#line 161 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_days (_tmp1_, 1);
#line 161 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->from);
#line 161 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->from = _tmp2_;
#line 162 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp3_ = self->to;
#line 162 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp4_ = g_date_time_add_days (_tmp3_, 1);
#line 162 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->to);
#line 162 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->to = _tmp4_;
#line 812 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_if_elapsed_delay_to_next_week (MayaServicesParsedEvent* self,
                                                          GDateTime* simulated_dt)
{
	GDateTime* _tmp0_;
#line 166 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 166 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (simulated_dt != NULL);
#line 167 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 167 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (g_date_time_compare (_tmp0_, simulated_dt) < 0) {
#line 830 "ParsedEvent.c"
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		GDateTime* _tmp3_;
		GDateTime* _tmp4_;
#line 168 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->from;
#line 168 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_days (_tmp1_, 7);
#line 168 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->from);
#line 168 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->from = _tmp2_;
#line 169 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp3_ = self->to;
#line 169 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp4_ = g_date_time_add_days (_tmp3_, 7);
#line 169 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->to);
#line 169 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->to = _tmp4_;
#line 851 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_if_elapsed_delay_to_next_month (MayaServicesParsedEvent* self,
                                                           GDateTime* simulated_dt)
{
	GDateTime* _tmp0_;
#line 173 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 173 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (simulated_dt != NULL);
#line 174 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 174 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (g_date_time_compare (_tmp0_, simulated_dt) < 0) {
#line 869 "ParsedEvent.c"
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		GDateTime* _tmp3_;
		GDateTime* _tmp4_;
#line 175 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->from;
#line 175 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_months (_tmp1_, 1);
#line 175 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->from);
#line 175 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->from = _tmp2_;
#line 176 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp3_ = self->to;
#line 176 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp4_ = g_date_time_add_months (_tmp3_, 1);
#line 176 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->to);
#line 176 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->to = _tmp4_;
#line 890 "ParsedEvent.c"
	}
}


void
maya_services_parsed_event_if_elapsed_delay_to_next_year (MayaServicesParsedEvent* self,
                                                          GDateTime* simulated_dt)
{
	GDateTime* _tmp0_;
#line 180 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (self != NULL);
#line 180 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	g_return_if_fail (simulated_dt != NULL);
#line 181 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_tmp0_ = self->from;
#line 181 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	if (g_date_time_compare (_tmp0_, simulated_dt) < 0) {
#line 908 "ParsedEvent.c"
		GDateTime* _tmp1_;
		GDateTime* _tmp2_;
		GDateTime* _tmp3_;
		GDateTime* _tmp4_;
#line 182 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp1_ = self->from;
#line 182 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp2_ = g_date_time_add_years (_tmp1_, 1);
#line 182 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->from);
#line 182 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->from = _tmp2_;
#line 183 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp3_ = self->to;
#line 183 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_tmp4_ = g_date_time_add_years (_tmp3_, 1);
#line 183 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		_g_date_time_unref0 (self->to);
#line 183 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
		self->to = _tmp4_;
#line 929 "ParsedEvent.c"
	}
}


static void
maya_services_parsed_event_class_init (MayaServicesParsedEventClass * klass)
{
#line 24 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	maya_services_parsed_event_parent_class = g_type_class_peek_parent (klass);
#line 24 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	G_OBJECT_CLASS (klass)->finalize = maya_services_parsed_event_finalize;
#line 941 "ParsedEvent.c"
}


static void
maya_services_parsed_event_instance_init (MayaServicesParsedEvent * self)
{
}


static void
maya_services_parsed_event_finalize (GObject * obj)
{
	MayaServicesParsedEvent * self;
#line 24 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, MAYA_SERVICES_TYPE_PARSED_EVENT, MayaServicesParsedEvent);
#line 26 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_free0 (self->title);
#line 27 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_free0 (self->location);
#line 28 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_free0 (self->participants);
#line 29 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->from);
#line 30 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	_g_date_time_unref0 (self->to);
#line 24 "/run/build/io.elementary.calendar/src/EventParser/ParsedEvent.vala"
	G_OBJECT_CLASS (maya_services_parsed_event_parent_class)->finalize (obj);
#line 969 "ParsedEvent.c"
}


GType
maya_services_parsed_event_get_type (void)
{
	static volatile gsize maya_services_parsed_event_type_id__volatile = 0;
	if (g_once_init_enter (&maya_services_parsed_event_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (MayaServicesParsedEventClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) maya_services_parsed_event_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (MayaServicesParsedEvent), 0, (GInstanceInitFunc) maya_services_parsed_event_instance_init, NULL };
		GType maya_services_parsed_event_type_id;
		maya_services_parsed_event_type_id = g_type_register_static (G_TYPE_OBJECT, "MayaServicesParsedEvent", &g_define_type_info, 0);
		g_once_init_leave (&maya_services_parsed_event_type_id__volatile, maya_services_parsed_event_type_id);
	}
	return maya_services_parsed_event_type_id__volatile;
}



