/*
 * Generated by gdbus-codegen 2.58.1 from org.freedesktop.locale1.xml. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __E_DBUS_LOCALED_H__
#define __E_DBUS_LOCALED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.locale1 */

#define E_DBUS_TYPE_LOCALE1 (e_dbus_locale1_get_type ())
#define E_DBUS_LOCALE1(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_LOCALE1, EDBusLocale1))
#define E_DBUS_IS_LOCALE1(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_LOCALE1))
#define E_DBUS_LOCALE1_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), E_DBUS_TYPE_LOCALE1, EDBusLocale1Iface))

struct _EDBusLocale1;
typedef struct _EDBusLocale1 EDBusLocale1;
typedef struct _EDBusLocale1Iface EDBusLocale1Iface;

struct _EDBusLocale1Iface
{
  GTypeInterface parent_iface;

  const gchar *const * (*get_locale) (EDBusLocale1 *object);

};

GType e_dbus_locale1_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *e_dbus_locale1_interface_info (void);
guint e_dbus_locale1_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus property accessors: */
const gchar *const *e_dbus_locale1_get_locale (EDBusLocale1 *object);
gchar **e_dbus_locale1_dup_locale (EDBusLocale1 *object);
void e_dbus_locale1_set_locale (EDBusLocale1 *object, const gchar *const *value);


/* ---- */

#define E_DBUS_TYPE_LOCALE1_PROXY (e_dbus_locale1_proxy_get_type ())
#define E_DBUS_LOCALE1_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_LOCALE1_PROXY, EDBusLocale1Proxy))
#define E_DBUS_LOCALE1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), E_DBUS_TYPE_LOCALE1_PROXY, EDBusLocale1ProxyClass))
#define E_DBUS_LOCALE1_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), E_DBUS_TYPE_LOCALE1_PROXY, EDBusLocale1ProxyClass))
#define E_DBUS_IS_LOCALE1_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_LOCALE1_PROXY))
#define E_DBUS_IS_LOCALE1_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), E_DBUS_TYPE_LOCALE1_PROXY))

typedef struct _EDBusLocale1Proxy EDBusLocale1Proxy;
typedef struct _EDBusLocale1ProxyClass EDBusLocale1ProxyClass;
typedef struct _EDBusLocale1ProxyPrivate EDBusLocale1ProxyPrivate;

struct _EDBusLocale1Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  EDBusLocale1ProxyPrivate *priv;
};

struct _EDBusLocale1ProxyClass
{
  GDBusProxyClass parent_class;
};

GType e_dbus_locale1_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (EDBusLocale1Proxy, g_object_unref)
#endif

void e_dbus_locale1_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
EDBusLocale1 *e_dbus_locale1_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
EDBusLocale1 *e_dbus_locale1_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void e_dbus_locale1_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
EDBusLocale1 *e_dbus_locale1_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
EDBusLocale1 *e_dbus_locale1_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define E_DBUS_TYPE_LOCALE1_SKELETON (e_dbus_locale1_skeleton_get_type ())
#define E_DBUS_LOCALE1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_LOCALE1_SKELETON, EDBusLocale1Skeleton))
#define E_DBUS_LOCALE1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), E_DBUS_TYPE_LOCALE1_SKELETON, EDBusLocale1SkeletonClass))
#define E_DBUS_LOCALE1_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), E_DBUS_TYPE_LOCALE1_SKELETON, EDBusLocale1SkeletonClass))
#define E_DBUS_IS_LOCALE1_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_LOCALE1_SKELETON))
#define E_DBUS_IS_LOCALE1_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), E_DBUS_TYPE_LOCALE1_SKELETON))

typedef struct _EDBusLocale1Skeleton EDBusLocale1Skeleton;
typedef struct _EDBusLocale1SkeletonClass EDBusLocale1SkeletonClass;
typedef struct _EDBusLocale1SkeletonPrivate EDBusLocale1SkeletonPrivate;

struct _EDBusLocale1Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  EDBusLocale1SkeletonPrivate *priv;
};

struct _EDBusLocale1SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType e_dbus_locale1_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (EDBusLocale1Skeleton, g_object_unref)
#endif

EDBusLocale1 *e_dbus_locale1_skeleton_new (void);


G_END_DECLS

#endif /* __E_DBUS_LOCALED_H__ */
