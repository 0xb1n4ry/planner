/* MovePopover.c generated by valac 0.40.11, the Vala compiler
 * generated from MovePopover.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <gee.h>
#include <stdlib.h>
#include <string.h>
#include <glib/gi18n-lib.h>
#include <pango/pango.h>
#include <granite.h>


#define WIDGETS_POPOVERS_TYPE_MOVE_POPOVER (widgets_popovers_move_popover_get_type ())
#define WIDGETS_POPOVERS_MOVE_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_POPOVERS_TYPE_MOVE_POPOVER, WidgetsPopoversMovePopover))
#define WIDGETS_POPOVERS_MOVE_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_POPOVERS_TYPE_MOVE_POPOVER, WidgetsPopoversMovePopoverClass))
#define WIDGETS_POPOVERS_IS_MOVE_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_POPOVERS_TYPE_MOVE_POPOVER))
#define WIDGETS_POPOVERS_IS_MOVE_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_POPOVERS_TYPE_MOVE_POPOVER))
#define WIDGETS_POPOVERS_MOVE_POPOVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_POPOVERS_TYPE_MOVE_POPOVER, WidgetsPopoversMovePopoverClass))

typedef struct _WidgetsPopoversMovePopover WidgetsPopoversMovePopover;
typedef struct _WidgetsPopoversMovePopoverClass WidgetsPopoversMovePopoverClass;
typedef struct _WidgetsPopoversMovePopoverPrivate WidgetsPopoversMovePopoverPrivate;
enum  {
	WIDGETS_POPOVERS_MOVE_POPOVER_0_PROPERTY,
	WIDGETS_POPOVERS_MOVE_POPOVER_NUM_PROPERTIES
};
static GParamSpec* widgets_popovers_move_popover_properties[WIDGETS_POPOVERS_MOVE_POPOVER_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;

#define SERVICES_TYPE_DATABASE (services_database_get_type ())
#define SERVICES_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_DATABASE, ServicesDatabase))
#define SERVICES_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))
#define SERVICES_IS_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_DATABASE))
#define SERVICES_IS_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_DATABASE))
#define SERVICES_DATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))

typedef struct _ServicesDatabase ServicesDatabase;
typedef struct _ServicesDatabaseClass ServicesDatabaseClass;

#define TYPE_PROW (prow_get_type ())
#define PROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PROW, PRow))
#define PROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_PROW, PRowClass))
#define IS_PROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PROW))
#define IS_PROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_PROW))
#define PROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PROW, PRowClass))

typedef struct _PRow PRow;
typedef struct _PRowClass PRowClass;
#define _objects_project_unref0(var) ((var == NULL) ? NULL : (var = (objects_project_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
enum  {
	WIDGETS_POPOVERS_MOVE_POPOVER_ON_SELECTED_PROJECT_SIGNAL,
	WIDGETS_POPOVERS_MOVE_POPOVER_NUM_SIGNALS
};
static guint widgets_popovers_move_popover_signals[WIDGETS_POPOVERS_MOVE_POPOVER_NUM_SIGNALS] = {0};
typedef struct _PRowPrivate PRowPrivate;
enum  {
	PROW_0_PROPERTY,
	PROW_PROJECT_PROPERTY,
	PROW_NUM_PROPERTIES
};
static GParamSpec* prow_properties[PROW_NUM_PROPERTIES];
typedef struct _ObjectsProjectPrivate ObjectsProjectPrivate;

struct _WidgetsPopoversMovePopover {
	GtkPopover parent_instance;
	WidgetsPopoversMovePopoverPrivate * priv;
};

struct _WidgetsPopoversMovePopoverClass {
	GtkPopoverClass parent_class;
};

struct _WidgetsPopoversMovePopoverPrivate {
	GtkListBox* projects_listbox;
};

struct _PRow {
	GtkListBoxRow parent_instance;
	PRowPrivate * priv;
};

struct _PRowClass {
	GtkListBoxRowClass parent_class;
};

struct _PRowPrivate {
	ObjectsProject* _project;
};

struct _ObjectsProject {
	GTypeInstance parent_instance;
	volatile int ref_count;
	ObjectsProjectPrivate * priv;
	gint id;
	gchar* name;
	gchar* note;
	gchar* deadline;
	gint item_order;
	gint is_deleted;
	gchar* color;
};

struct _ObjectsProjectClass {
	GTypeClass parent_class;
	void (*finalize) (ObjectsProject *self);
};


static gpointer widgets_popovers_move_popover_parent_class = NULL;
extern ServicesDatabase* application_database;
static gpointer prow_parent_class = NULL;

GType widgets_popovers_move_popover_get_type (void) G_GNUC_CONST;
#define WIDGETS_POPOVERS_MOVE_POPOVER_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), WIDGETS_POPOVERS_TYPE_MOVE_POPOVER, WidgetsPopoversMovePopoverPrivate))
WidgetsPopoversMovePopover* widgets_popovers_move_popover_new (GtkWidget* relative);
WidgetsPopoversMovePopover* widgets_popovers_move_popover_construct (GType object_type,
                                                                     GtkWidget* relative);
void widgets_popovers_move_popover_update_project_list (WidgetsPopoversMovePopover* self);
gpointer objects_project_ref (gpointer instance);
void objects_project_unref (gpointer instance);
GParamSpec* objects_param_spec_project (const gchar* name,
                                        const gchar* nick,
                                        const gchar* blurb,
                                        GType object_type,
                                        GParamFlags flags);
void objects_value_set_project (GValue* value,
                                gpointer v_object);
void objects_value_take_project (GValue* value,
                                 gpointer v_object);
gpointer objects_value_get_project (const GValue* value);
GType objects_project_get_type (void) G_GNUC_CONST;
GType services_database_get_type (void) G_GNUC_CONST;
GeeArrayList* services_database_get_all_projects (ServicesDatabase* self);
GType prow_get_type (void) G_GNUC_CONST;
PRow* prow_new (ObjectsProject* _project);
PRow* prow_construct (GType object_type,
                      ObjectsProject* _project);
static void g_cclosure_user_marshal_VOID__BOOLEAN_OBJECTS_PROJECT (GClosure * closure,
                                                            GValue * return_value,
                                                            guint n_param_values,
                                                            const GValue * param_values,
                                                            gpointer invocation_hint,
                                                            gpointer marshal_data);
static GObject * widgets_popovers_move_popover_constructor (GType type,
                                                     guint n_construct_properties,
                                                     GObjectConstructParam * construct_properties);
static void _widgets_popovers_move_popover___lambda62_ (WidgetsPopoversMovePopover* self,
                                                 GtkListBoxRow* row);
ObjectsProject* objects_project_new (gint id,
                                     gint item_order,
                                     gint is_deleted,
                                     const gchar* name,
                                     const gchar* note,
                                     const gchar* deadline,
                                     const gchar* color);
ObjectsProject* objects_project_construct (GType object_type,
                                           gint id,
                                           gint item_order,
                                           gint is_deleted,
                                           const gchar* name,
                                           const gchar* note,
                                           const gchar* deadline,
                                           const gchar* color);
ObjectsProject* prow_get_project (PRow* self);
static void __widgets_popovers_move_popover___lambda62__gtk_list_box_row_activated (GtkListBox* _sender,
                                                                             GtkListBoxRow* row,
                                                                             gpointer self);
static void widgets_popovers_move_popover_finalize (GObject * obj);
#define PROW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), TYPE_PROW, PRowPrivate))
static void prow_set_project (PRow* self,
                       ObjectsProject* value);
static GObject * prow_constructor (GType type,
                            guint n_construct_properties,
                            GObjectConstructParam * construct_properties);
static void prow_finalize (GObject * obj);
static void _vala_prow_get_property (GObject * object,
                              guint property_id,
                              GValue * value,
                              GParamSpec * pspec);
static void _vala_prow_set_property (GObject * object,
                              guint property_id,
                              const GValue * value,
                              GParamSpec * pspec);


WidgetsPopoversMovePopover*
widgets_popovers_move_popover_construct (GType object_type,
                                         GtkWidget* relative)
{
	WidgetsPopoversMovePopover * self = NULL;
#line 26 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_return_val_if_fail (relative != NULL, NULL);
#line 27 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self = (WidgetsPopoversMovePopover*) g_object_new (object_type, "relative-to", relative, "modal", TRUE, "position", GTK_POS_TOP, NULL);
#line 26 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return self;
#line 233 "MovePopover.c"
}


WidgetsPopoversMovePopover*
widgets_popovers_move_popover_new (GtkWidget* relative)
{
#line 26 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return widgets_popovers_move_popover_construct (WIDGETS_POPOVERS_TYPE_MOVE_POPOVER, relative);
#line 242 "MovePopover.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return self ? g_object_ref (self) : NULL;
#line 251 "MovePopover.c"
}


void
widgets_popovers_move_popover_update_project_list (WidgetsPopoversMovePopover* self)
{
	GtkListBox* _tmp0_;
	GList* _tmp1_;
	GeeArrayList* all_projects = NULL;
	GeeArrayList* _tmp5_;
	ServicesDatabase* _tmp6_;
	GeeArrayList* _tmp7_;
	GtkImage* inbox_icon = NULL;
	GtkImage* _tmp23_;
	GtkLabel* inbox_label = NULL;
	gchar* _tmp24_;
	gchar* _tmp25_;
	GtkLabel* _tmp26_;
	GtkLabel* _tmp27_;
	GtkGrid* grid = NULL;
	GtkGrid* _tmp28_;
	GtkListBoxRow* inbox_row = NULL;
	GtkListBoxRow* _tmp29_;
	GtkStyleContext* _tmp30_;
	GtkListBox* _tmp31_;
	GtkSeparator* separator = NULL;
	GtkSeparator* _tmp32_;
	GtkListBoxRow* separator_row = NULL;
	GtkListBoxRow* _tmp33_;
	GtkListBox* _tmp34_;
	GtkListBox* _tmp35_;
#line 78 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_return_if_fail (self != NULL);
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp0_ = self->priv->projects_listbox;
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp1_ = gtk_container_get_children ((GtkContainer*) _tmp0_);
#line 289 "MovePopover.c"
	{
		GList* element_collection = NULL;
		GList* element_it = NULL;
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		element_collection = _tmp1_;
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 297 "MovePopover.c"
			GtkWidget* _tmp2_;
			GtkWidget* element = NULL;
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp2_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			element = _tmp2_;
#line 304 "MovePopover.c"
			{
				GtkListBox* _tmp3_;
				GtkWidget* _tmp4_;
#line 80 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
				_tmp3_ = self->priv->projects_listbox;
#line 80 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
				_tmp4_ = element;
#line 80 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
				gtk_container_remove ((GtkContainer*) _tmp3_, _tmp4_);
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
				_g_object_unref0 (element);
#line 316 "MovePopover.c"
			}
		}
#line 79 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 321 "MovePopover.c"
	}
#line 83 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp5_ = gee_array_list_new (OBJECTS_TYPE_PROJECT, (GBoxedCopyFunc) objects_project_ref, (GDestroyNotify) objects_project_unref, NULL, NULL, NULL);
#line 83 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	all_projects = _tmp5_;
#line 84 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp6_ = application_database;
#line 84 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp7_ = services_database_get_all_projects (_tmp6_);
#line 84 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (all_projects);
#line 84 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	all_projects = _tmp7_;
#line 335 "MovePopover.c"
	{
		GeeArrayList* _project_list = NULL;
		GeeArrayList* _tmp8_;
		GeeArrayList* _tmp9_;
		gint _project_size = 0;
		GeeArrayList* _tmp10_;
		gint _tmp11_;
		gint _tmp12_;
		gint _project_index = 0;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp8_ = all_projects;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp9_ = _g_object_ref0 (_tmp8_);
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_project_list = _tmp9_;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp10_ = _project_list;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp11_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp10_);
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp12_ = _tmp11_;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_project_size = _tmp12_;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_project_index = -1;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		while (TRUE) {
#line 363 "MovePopover.c"
			gint _tmp13_;
			gint _tmp14_;
			gint _tmp15_;
			ObjectsProject* project = NULL;
			GeeArrayList* _tmp16_;
			gint _tmp17_;
			gpointer _tmp18_;
			PRow* row = NULL;
			ObjectsProject* _tmp19_;
			PRow* _tmp20_;
			GtkListBox* _tmp21_;
			PRow* _tmp22_;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp13_ = _project_index;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_project_index = _tmp13_ + 1;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp14_ = _project_index;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp15_ = _project_size;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			if (!(_tmp14_ < _tmp15_)) {
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
				break;
#line 388 "MovePopover.c"
			}
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp16_ = _project_list;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp17_ = _project_index;
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp18_ = gee_abstract_list_get ((GeeAbstractList*) _tmp16_, _tmp17_);
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			project = (ObjectsProject*) _tmp18_;
#line 87 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp19_ = project;
#line 87 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp20_ = prow_new (_tmp19_);
#line 87 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			g_object_ref_sink (_tmp20_);
#line 87 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			row = _tmp20_;
#line 88 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp21_ = self->priv->projects_listbox;
#line 88 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_tmp22_ = row;
#line 88 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			gtk_container_add ((GtkContainer*) _tmp21_, (GtkWidget*) _tmp22_);
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_g_object_unref0 (row);
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
			_objects_project_unref0 (project);
#line 416 "MovePopover.c"
		}
#line 86 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_g_object_unref0 (_project_list);
#line 420 "MovePopover.c"
	}
#line 91 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp23_ = (GtkImage*) gtk_image_new_from_icon_name ("planner-inbox", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 91 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp23_);
#line 91 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	inbox_icon = _tmp23_;
#line 93 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp24_ = g_strdup_printf ("<b>%s</b>", _ ("Inbox"));
#line 93 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp25_ = _tmp24_;
#line 93 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp26_ = (GtkLabel*) gtk_label_new (_tmp25_);
#line 93 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp26_);
#line 93 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp27_ = _tmp26_;
#line 93 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_free0 (_tmp25_);
#line 93 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	inbox_label = _tmp27_;
#line 94 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_label_set_ellipsize (inbox_label, PANGO_ELLIPSIZE_END);
#line 95 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_valign ((GtkWidget*) inbox_label, GTK_ALIGN_CENTER);
#line 96 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_halign ((GtkWidget*) inbox_label, GTK_ALIGN_START);
#line 97 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_label_set_use_markup (inbox_label, TRUE);
#line 99 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp28_ = (GtkGrid*) gtk_grid_new ();
#line 99 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp28_);
#line 99 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	grid = _tmp28_;
#line 100 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_grid_set_column_spacing (grid, 6);
#line 101 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_set ((GtkWidget*) grid, "margin", 6, NULL);
#line 102 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_margin_start ((GtkWidget*) grid, 6);
#line 104 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) grid, (GtkWidget*) inbox_icon);
#line 105 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) grid, (GtkWidget*) inbox_label);
#line 107 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp29_ = (GtkListBoxRow*) gtk_list_box_row_new ();
#line 107 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp29_);
#line 107 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	inbox_row = _tmp29_;
#line 108 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp30_ = gtk_widget_get_style_context ((GtkWidget*) inbox_row);
#line 108 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_style_context_add_class (_tmp30_, "layout-row");
#line 109 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) inbox_row, (GtkWidget*) grid);
#line 111 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp31_ = self->priv->projects_listbox;
#line 111 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_list_box_insert (_tmp31_, (GtkWidget*) inbox_row, 0);
#line 113 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp32_ = (GtkSeparator*) gtk_separator_new (GTK_ORIENTATION_HORIZONTAL);
#line 113 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp32_);
#line 113 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	separator = _tmp32_;
#line 114 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_margin_top ((GtkWidget*) separator, 6);
#line 115 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) separator, 6);
#line 117 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp33_ = (GtkListBoxRow*) gtk_list_box_row_new ();
#line 117 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp33_);
#line 117 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	separator_row = _tmp33_;
#line 118 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_list_box_row_set_selectable (separator_row, FALSE);
#line 119 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_list_box_row_set_activatable (separator_row, FALSE);
#line 120 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) separator_row, (GtkWidget*) separator);
#line 122 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp34_ = self->priv->projects_listbox;
#line 122 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_list_box_insert (_tmp34_, (GtkWidget*) separator_row, 1);
#line 124 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp35_ = self->priv->projects_listbox;
#line 124 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp35_);
#line 78 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (separator_row);
#line 78 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (separator);
#line 78 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (inbox_row);
#line 78 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (grid);
#line 78 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (inbox_label);
#line 78 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (inbox_icon);
#line 78 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (all_projects);
#line 526 "MovePopover.c"
}


static void
g_cclosure_user_marshal_VOID__BOOLEAN_OBJECTS_PROJECT (GClosure * closure,
                                                       GValue * return_value,
                                                       guint n_param_values,
                                                       const GValue * param_values,
                                                       gpointer invocation_hint,
                                                       gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__BOOLEAN_OBJECTS_PROJECT) (gpointer data1, gboolean arg_1, gpointer arg_2, gpointer data2);
	register GMarshalFunc_VOID__BOOLEAN_OBJECTS_PROJECT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_return_if_fail (n_param_values == 3);
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		data1 = closure->data;
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		data2 = param_values->data[0].v_pointer;
#line 552 "MovePopover.c"
	} else {
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		data1 = param_values->data[0].v_pointer;
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		data2 = closure->data;
#line 558 "MovePopover.c"
	}
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	callback = (GMarshalFunc_VOID__BOOLEAN_OBJECTS_PROJECT) (marshal_data ? marshal_data : cc->callback);
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	callback (data1, g_value_get_boolean (param_values + 1), objects_value_get_project (param_values + 2), data2);
#line 564 "MovePopover.c"
}


static void
_widgets_popovers_move_popover___lambda62_ (WidgetsPopoversMovePopover* self,
                                            GtkListBoxRow* row)
{
#line 62 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_return_if_fail (row != NULL);
#line 63 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	if (gtk_list_box_row_get_index (row) <= 0) {
#line 576 "MovePopover.c"
		ObjectsProject* _tmp0_;
		ObjectsProject* _tmp1_;
#line 65 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp0_ = objects_project_new (0, 0, 0, "", "", "", "");
#line 65 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp1_ = _tmp0_;
#line 65 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		g_signal_emit (self, widgets_popovers_move_popover_signals[WIDGETS_POPOVERS_MOVE_POPOVER_ON_SELECTED_PROJECT_SIGNAL], 0, TRUE, _tmp1_);
#line 65 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_objects_project_unref0 (_tmp1_);
#line 67 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		gtk_widget_hide ((GtkWidget*) self);
#line 589 "MovePopover.c"
	} else {
		PRow* project = NULL;
		PRow* _tmp2_;
		PRow* _tmp3_;
		ObjectsProject* _tmp4_;
		ObjectsProject* _tmp5_;
#line 70 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp2_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (row, TYPE_PROW) ? ((PRow*) row) : NULL);
#line 70 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		project = _tmp2_;
#line 71 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp3_ = project;
#line 71 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp4_ = prow_get_project (_tmp3_);
#line 71 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp5_ = _tmp4_;
#line 71 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		g_signal_emit (self, widgets_popovers_move_popover_signals[WIDGETS_POPOVERS_MOVE_POPOVER_ON_SELECTED_PROJECT_SIGNAL], 0, FALSE, _tmp5_);
#line 73 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		gtk_widget_hide ((GtkWidget*) self);
#line 63 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_g_object_unref0 (project);
#line 612 "MovePopover.c"
	}
}


static void
__widgets_popovers_move_popover___lambda62__gtk_list_box_row_activated (GtkListBox* _sender,
                                                                        GtkListBoxRow* row,
                                                                        gpointer self)
{
#line 62 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_widgets_popovers_move_popover___lambda62_ ((WidgetsPopoversMovePopover*) self, row);
#line 624 "MovePopover.c"
}


static GObject *
widgets_popovers_move_popover_constructor (GType type,
                                           guint n_construct_properties,
                                           GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	WidgetsPopoversMovePopover * self;
	GtkLabel* title_label = NULL;
	gchar* _tmp0_;
	gchar* _tmp1_;
	GtkLabel* _tmp2_;
	GtkLabel* _tmp3_;
	GtkLabel* _tmp4_;
	GtkLabel* _tmp5_;
	GtkLabel* _tmp6_;
	GtkLabel* _tmp7_;
	GtkStyleContext* _tmp8_;
	GtkListBox* _tmp9_;
	GtkListBox* _tmp10_;
	GtkListBox* _tmp11_;
	GtkListBox* _tmp12_;
	GtkScrolledWindow* scrolled = NULL;
	GtkScrolledWindow* _tmp13_;
	GtkScrolledWindow* _tmp14_;
	GtkScrolledWindow* _tmp15_;
	GtkScrolledWindow* _tmp16_;
	GtkListBox* _tmp17_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp18_;
	GtkGrid* _tmp19_;
	GtkGrid* _tmp20_;
	GtkGrid* _tmp21_;
	GtkGrid* _tmp22_;
	GtkLabel* _tmp23_;
	GtkGrid* _tmp24_;
	GtkScrolledWindow* _tmp25_;
	GtkGrid* _tmp26_;
	GtkListBox* _tmp27_;
#line 34 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	parent_class = G_OBJECT_CLASS (widgets_popovers_move_popover_parent_class);
#line 34 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 34 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_POPOVERS_TYPE_MOVE_POPOVER, WidgetsPopoversMovePopover);
#line 35 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp0_ = g_strdup_printf ("<small>%s</small>", _ ("Move"));
#line 35 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp1_ = _tmp0_;
#line 35 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp2_ = (GtkLabel*) gtk_label_new (_tmp1_);
#line 35 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp2_);
#line 35 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp3_ = _tmp2_;
#line 35 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_free0 (_tmp1_);
#line 35 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	title_label = _tmp3_;
#line 36 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp4_ = title_label;
#line 36 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_label_set_use_markup (_tmp4_, TRUE);
#line 37 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp5_ = title_label;
#line 37 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp5_, TRUE);
#line 38 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp6_ = title_label;
#line 38 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp6_, GTK_ALIGN_CENTER);
#line 39 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp7_ = title_label;
#line 39 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 39 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_style_context_add_class (_tmp8_, GRANITE_STYLE_CLASS_H4_LABEL);
#line 41 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp9_ = (GtkListBox*) gtk_list_box_new ();
#line 41 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp9_);
#line 41 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (self->priv->projects_listbox);
#line 41 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self->priv->projects_listbox = _tmp9_;
#line 42 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp10_ = self->priv->projects_listbox;
#line 42 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_list_box_set_activate_on_single_click (_tmp10_, TRUE);
#line 43 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp11_ = self->priv->projects_listbox;
#line 43 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_list_box_set_selection_mode (_tmp11_, GTK_SELECTION_SINGLE);
#line 44 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp12_ = self->priv->projects_listbox;
#line 44 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_set ((GtkWidget*) _tmp12_, "expand", TRUE, NULL);
#line 46 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp13_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 46 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp13_);
#line 46 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	scrolled = _tmp13_;
#line 47 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp14_ = scrolled;
#line 47 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_set ((GtkWidget*) _tmp14_, "expand", TRUE, NULL);
#line 48 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp15_ = scrolled;
#line 48 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_set ((GtkWidget*) _tmp15_, "height-request", 200, NULL);
#line 49 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp16_ = scrolled;
#line 49 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp17_ = self->priv->projects_listbox;
#line 49 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) _tmp16_, (GtkWidget*) _tmp17_);
#line 51 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp18_ = (GtkGrid*) gtk_grid_new ();
#line 51 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp18_);
#line 51 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	main_grid = _tmp18_;
#line 52 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp19_ = main_grid;
#line 52 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_set ((GtkWidget*) _tmp19_, "expand", TRUE, NULL);
#line 53 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp20_ = main_grid;
#line 53 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) _tmp20_, GTK_ORIENTATION_VERTICAL);
#line 54 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp21_ = main_grid;
#line 54 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_set ((GtkWidget*) _tmp21_, "width-request", 250, NULL);
#line 56 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp22_ = main_grid;
#line 56 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp23_ = title_label;
#line 56 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) _tmp22_, (GtkWidget*) _tmp23_);
#line 57 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp24_ = main_grid;
#line 57 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp25_ = scrolled;
#line 57 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) _tmp24_, (GtkWidget*) _tmp25_);
#line 59 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp26_ = main_grid;
#line 59 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp26_);
#line 60 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	widgets_popovers_move_popover_update_project_list (self);
#line 62 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp27_ = self->priv->projects_listbox;
#line 62 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_signal_connect_object (_tmp27_, "row-activated", (GCallback) __widgets_popovers_move_popover___lambda62__gtk_list_box_row_activated, self, 0);
#line 34 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (main_grid);
#line 34 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (scrolled);
#line 34 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (title_label);
#line 34 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return obj;
#line 793 "MovePopover.c"
}


static void
widgets_popovers_move_popover_class_init (WidgetsPopoversMovePopoverClass * klass)
{
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	widgets_popovers_move_popover_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_type_class_add_private (klass, sizeof (WidgetsPopoversMovePopoverPrivate));
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	G_OBJECT_CLASS (klass)->constructor = widgets_popovers_move_popover_constructor;
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	G_OBJECT_CLASS (klass)->finalize = widgets_popovers_move_popover_finalize;
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	widgets_popovers_move_popover_signals[WIDGETS_POPOVERS_MOVE_POPOVER_ON_SELECTED_PROJECT_SIGNAL] = g_signal_new ("on-selected-project", WIDGETS_POPOVERS_TYPE_MOVE_POPOVER, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__BOOLEAN_OBJECTS_PROJECT, G_TYPE_NONE, 2, G_TYPE_BOOLEAN, OBJECTS_TYPE_PROJECT);
#line 810 "MovePopover.c"
}


static void
widgets_popovers_move_popover_instance_init (WidgetsPopoversMovePopover * self)
{
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self->priv = WIDGETS_POPOVERS_MOVE_POPOVER_GET_PRIVATE (self);
#line 819 "MovePopover.c"
}


static void
widgets_popovers_move_popover_finalize (GObject * obj)
{
	WidgetsPopoversMovePopover * self;
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, WIDGETS_POPOVERS_TYPE_MOVE_POPOVER, WidgetsPopoversMovePopover);
#line 23 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (self->priv->projects_listbox);
#line 22 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	G_OBJECT_CLASS (widgets_popovers_move_popover_parent_class)->finalize (obj);
#line 833 "MovePopover.c"
}


GType
widgets_popovers_move_popover_get_type (void)
{
	static volatile gsize widgets_popovers_move_popover_type_id__volatile = 0;
	if (g_once_init_enter (&widgets_popovers_move_popover_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (WidgetsPopoversMovePopoverClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) widgets_popovers_move_popover_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (WidgetsPopoversMovePopover), 0, (GInstanceInitFunc) widgets_popovers_move_popover_instance_init, NULL };
		GType widgets_popovers_move_popover_type_id;
		widgets_popovers_move_popover_type_id = g_type_register_static (gtk_popover_get_type (), "WidgetsPopoversMovePopover", &g_define_type_info, 0);
		g_once_init_leave (&widgets_popovers_move_popover_type_id__volatile, widgets_popovers_move_popover_type_id);
	}
	return widgets_popovers_move_popover_type_id__volatile;
}


PRow*
prow_construct (GType object_type,
                ObjectsProject* _project)
{
	PRow * self = NULL;
#line 131 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_return_val_if_fail (_project != NULL, NULL);
#line 132 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self = (PRow*) g_object_new (object_type, "project", _project, NULL);
#line 131 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return self;
#line 862 "MovePopover.c"
}


PRow*
prow_new (ObjectsProject* _project)
{
#line 131 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return prow_construct (TYPE_PROW, _project);
#line 871 "MovePopover.c"
}


ObjectsProject*
prow_get_project (PRow* self)
{
	ObjectsProject* result;
	ObjectsProject* _tmp0_;
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp0_ = self->priv->_project;
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	result = _tmp0_;
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return result;
#line 888 "MovePopover.c"
}


static gpointer
_objects_project_ref0 (gpointer self)
{
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return self ? objects_project_ref (self) : NULL;
#line 897 "MovePopover.c"
}


static void
prow_set_project (PRow* self,
                  ObjectsProject* value)
{
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_return_if_fail (self != NULL);
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	if (prow_get_project (self) != value) {
#line 909 "MovePopover.c"
		ObjectsProject* _tmp0_;
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_tmp0_ = _objects_project_ref0 (value);
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		_objects_project_unref0 (self->priv->_project);
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		self->priv->_project = _tmp0_;
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		g_object_notify_by_pspec ((GObject *) self, prow_properties[PROW_PROJECT_PROPERTY]);
#line 919 "MovePopover.c"
	}
}


static GObject *
prow_constructor (GType type,
                  guint n_construct_properties,
                  GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	PRow * self;
	GtkStyleContext* _tmp0_;
	GtkGrid* label_color = NULL;
	GtkGrid* _tmp1_;
	GtkGrid* _tmp2_;
	GtkStyleContext* _tmp3_;
	ObjectsProject* _tmp4_;
	gint _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	GtkGrid* _tmp8_;
	GtkGrid* _tmp9_;
	GtkLabel* name_label = NULL;
	ObjectsProject* _tmp10_;
	const gchar* _tmp11_;
	gchar* _tmp12_;
	gchar* _tmp13_;
	GtkLabel* _tmp14_;
	GtkLabel* _tmp15_;
	GtkLabel* _tmp16_;
	GtkLabel* _tmp17_;
	GtkLabel* _tmp18_;
	GtkLabel* _tmp19_;
	GtkGrid* main_grid = NULL;
	GtkGrid* _tmp20_;
	GtkGrid* _tmp21_;
	GtkGrid* _tmp22_;
	GtkGrid* _tmp23_;
	GtkGrid* _tmp24_;
	GtkLabel* _tmp25_;
	GtkGrid* _tmp26_;
#line 137 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	parent_class = G_OBJECT_CLASS (prow_parent_class);
#line 137 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 137 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_PROW, PRow);
#line 138 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 138 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_style_context_add_class (_tmp0_, "layout-row");
#line 140 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp1_ = (GtkGrid*) gtk_grid_new ();
#line 140 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp1_);
#line 140 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	label_color = _tmp1_;
#line 141 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp2_ = label_color;
#line 141 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp3_ = gtk_widget_get_style_context ((GtkWidget*) _tmp2_);
#line 141 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp4_ = self->priv->_project;
#line 141 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp5_ = _tmp4_->id;
#line 141 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp6_ = g_strdup_printf ("proyect-%i", _tmp5_);
#line 141 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp7_ = _tmp6_;
#line 141 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_style_context_add_class (_tmp3_, _tmp7_);
#line 141 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_free0 (_tmp7_);
#line 142 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp8_ = label_color;
#line 142 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_size_request ((GtkWidget*) _tmp8_, 16, 16);
#line 143 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp9_ = label_color;
#line 143 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_set ((GtkWidget*) _tmp9_, "margin", 6, NULL);
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp10_ = self->priv->_project;
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp11_ = _tmp10_->name;
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp12_ = g_strdup_printf ("<b>%s</b>", _tmp11_);
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp13_ = _tmp12_;
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp14_ = (GtkLabel*) gtk_label_new (_tmp13_);
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp14_);
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp15_ = _tmp14_;
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_free0 (_tmp13_);
#line 145 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	name_label = _tmp15_;
#line 146 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp16_ = name_label;
#line 146 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_label_set_ellipsize (_tmp16_, PANGO_ELLIPSIZE_END);
#line 147 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp17_ = name_label;
#line 147 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp17_, GTK_ALIGN_CENTER);
#line 148 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp18_ = name_label;
#line 148 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp18_, GTK_ALIGN_START);
#line 149 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp19_ = name_label;
#line 149 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_label_set_use_markup (_tmp19_, TRUE);
#line 151 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp20_ = (GtkGrid*) gtk_grid_new ();
#line 151 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_ref_sink (_tmp20_);
#line 151 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	main_grid = _tmp20_;
#line 152 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp21_ = main_grid;
#line 152 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_grid_set_column_spacing (_tmp21_, 6);
#line 153 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp22_ = main_grid;
#line 153 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp23_ = label_color;
#line 153 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) _tmp22_, (GtkWidget*) _tmp23_);
#line 154 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp24_ = main_grid;
#line 154 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp25_ = name_label;
#line 154 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) _tmp24_, (GtkWidget*) _tmp25_);
#line 156 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_tmp26_ = main_grid;
#line 156 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp26_);
#line 137 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (main_grid);
#line 137 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (name_label);
#line 137 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_g_object_unref0 (label_color);
#line 137 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	return obj;
#line 1070 "MovePopover.c"
}


static void
prow_class_init (PRowClass * klass)
{
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	prow_parent_class = g_type_class_peek_parent (klass);
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_type_class_add_private (klass, sizeof (PRowPrivate));
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_prow_get_property;
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_prow_set_property;
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	G_OBJECT_CLASS (klass)->constructor = prow_constructor;
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	G_OBJECT_CLASS (klass)->finalize = prow_finalize;
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), PROW_PROJECT_PROPERTY, prow_properties[PROW_PROJECT_PROPERTY] = objects_param_spec_project ("project", "project", "project", OBJECTS_TYPE_PROJECT, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 1091 "MovePopover.c"
}


static void
prow_instance_init (PRow * self)
{
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self->priv = PROW_GET_PRIVATE (self);
#line 1100 "MovePopover.c"
}


static void
prow_finalize (GObject * obj)
{
	PRow * self;
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, TYPE_PROW, PRow);
#line 129 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	_objects_project_unref0 (self->priv->_project);
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	G_OBJECT_CLASS (prow_parent_class)->finalize (obj);
#line 1114 "MovePopover.c"
}


GType
prow_get_type (void)
{
	static volatile gsize prow_type_id__volatile = 0;
	if (g_once_init_enter (&prow_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (PRowClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) prow_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (PRow), 0, (GInstanceInitFunc) prow_instance_init, NULL };
		GType prow_type_id;
		prow_type_id = g_type_register_static (gtk_list_box_row_get_type (), "PRow", &g_define_type_info, 0);
		g_once_init_leave (&prow_type_id__volatile, prow_type_id);
	}
	return prow_type_id__volatile;
}


static void
_vala_prow_get_property (GObject * object,
                         guint property_id,
                         GValue * value,
                         GParamSpec * pspec)
{
	PRow * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, TYPE_PROW, PRow);
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	switch (property_id) {
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		case PROW_PROJECT_PROPERTY:
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		objects_value_set_project (value, prow_get_project (self));
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		break;
#line 1148 "MovePopover.c"
		default:
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		break;
#line 1154 "MovePopover.c"
	}
}


static void
_vala_prow_set_property (GObject * object,
                         guint property_id,
                         const GValue * value,
                         GParamSpec * pspec)
{
	PRow * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, TYPE_PROW, PRow);
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
	switch (property_id) {
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		case PROW_PROJECT_PROPERTY:
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		prow_set_project (self, objects_value_get_project (value));
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		break;
#line 1175 "MovePopover.c"
		default:
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 128 "/run/build/planner/src/Widgets/Popovers/MovePopover.vala"
		break;
#line 1181 "MovePopover.c"
	}
}



