/* Upcoming.c generated by valac 0.40.11, the Vala compiler
 * generated from Upcoming.vala, do not modify */

/*
* Copyright Â© 2019 Alain M. (https://github.com/alainm23/planner)
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License as published by the Free Software Foundation; either
* version 2 of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the
* Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA 02110-1301 USA
*
* Authored by: Alain M. <alain23@protonmail.com>
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>
#include <glib/gi18n-lib.h>
#include <float.h>
#include <math.h>
#include <gee.h>
#include <granite.h>
#include <gdk/gdk.h>
#include <sqlite3.h>
#include <gio/gio.h>


#define VIEWS_TYPE_UPCOMING (views_upcoming_get_type ())
#define VIEWS_UPCOMING(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), VIEWS_TYPE_UPCOMING, ViewsUpcoming))
#define VIEWS_UPCOMING_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), VIEWS_TYPE_UPCOMING, ViewsUpcomingClass))
#define VIEWS_IS_UPCOMING(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), VIEWS_TYPE_UPCOMING))
#define VIEWS_IS_UPCOMING_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), VIEWS_TYPE_UPCOMING))
#define VIEWS_UPCOMING_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), VIEWS_TYPE_UPCOMING, ViewsUpcomingClass))

typedef struct _ViewsUpcoming ViewsUpcoming;
typedef struct _ViewsUpcomingClass ViewsUpcomingClass;
typedef struct _ViewsUpcomingPrivate ViewsUpcomingPrivate;

#define TYPE_MAIN_WINDOW (main_window_get_type ())
#define MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MAIN_WINDOW, MainWindow))
#define MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_MAIN_WINDOW, MainWindowClass))
#define IS_MAIN_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MAIN_WINDOW))
#define IS_MAIN_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_MAIN_WINDOW))
#define MAIN_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MAIN_WINDOW, MainWindowClass))

typedef struct _MainWindow MainWindow;
typedef struct _MainWindowClass MainWindowClass;

#define WIDGETS_TYPE_TASK_NEW (widgets_task_new_get_type ())
#define WIDGETS_TASK_NEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_TASK_NEW, WidgetsTaskNew))
#define WIDGETS_TASK_NEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_TASK_NEW, WidgetsTaskNewClass))
#define WIDGETS_IS_TASK_NEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_TASK_NEW))
#define WIDGETS_IS_TASK_NEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_TASK_NEW))
#define WIDGETS_TASK_NEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_TASK_NEW, WidgetsTaskNewClass))

typedef struct _WidgetsTaskNew WidgetsTaskNew;
typedef struct _WidgetsTaskNewClass WidgetsTaskNewClass;

#define WIDGETS_TYPE_ALERT_VIEW (widgets_alert_view_get_type ())
#define WIDGETS_ALERT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertView))
#define WIDGETS_ALERT_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertViewClass))
#define WIDGETS_IS_ALERT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_ALERT_VIEW))
#define WIDGETS_IS_ALERT_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_ALERT_VIEW))
#define WIDGETS_ALERT_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_ALERT_VIEW, WidgetsAlertViewClass))

typedef struct _WidgetsAlertView WidgetsAlertView;
typedef struct _WidgetsAlertViewClass WidgetsAlertViewClass;

#define WIDGETS_POPOVERS_TYPE_LABELS_POPOVER (widgets_popovers_labels_popover_get_type ())
#define WIDGETS_POPOVERS_LABELS_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_POPOVERS_TYPE_LABELS_POPOVER, WidgetsPopoversLabelsPopover))
#define WIDGETS_POPOVERS_LABELS_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_POPOVERS_TYPE_LABELS_POPOVER, WidgetsPopoversLabelsPopoverClass))
#define WIDGETS_POPOVERS_IS_LABELS_POPOVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_POPOVERS_TYPE_LABELS_POPOVER))
#define WIDGETS_POPOVERS_IS_LABELS_POPOVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_POPOVERS_TYPE_LABELS_POPOVER))
#define WIDGETS_POPOVERS_LABELS_POPOVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_POPOVERS_TYPE_LABELS_POPOVER, WidgetsPopoversLabelsPopoverClass))

typedef struct _WidgetsPopoversLabelsPopover WidgetsPopoversLabelsPopover;
typedef struct _WidgetsPopoversLabelsPopoverClass WidgetsPopoversLabelsPopoverClass;
enum  {
	VIEWS_UPCOMING_0_PROPERTY,
	VIEWS_UPCOMING_WINDOW_PROPERTY,
	VIEWS_UPCOMING_NUM_PROPERTIES
};
static GParamSpec* views_upcoming_properties[VIEWS_UPCOMING_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define TYPE_UTILS (utils_get_type ())
#define UTILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UTILS, Utils))
#define UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_UTILS, UtilsClass))
#define IS_UTILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UTILS))
#define IS_UTILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_UTILS))
#define UTILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UTILS, UtilsClass))

typedef struct _Utils Utils;
typedef struct _UtilsClass UtilsClass;

#define OBJECTS_TYPE_TASK (objects_task_get_type ())
#define OBJECTS_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_TASK, ObjectsTask))
#define OBJECTS_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_TASK, ObjectsTaskClass))
#define OBJECTS_IS_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_TASK))
#define OBJECTS_IS_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_TASK))
#define OBJECTS_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_TASK, ObjectsTaskClass))

typedef struct _ObjectsTask ObjectsTask;
typedef struct _ObjectsTaskClass ObjectsTaskClass;
#define _objects_task_unref0(var) ((var == NULL) ? NULL : (var = (objects_task_unref (var), NULL)))
typedef struct _Block26Data Block26Data;
typedef struct _ObjectsTaskPrivate ObjectsTaskPrivate;
#define _g_time_zone_unref0(var) ((var == NULL) ? NULL : (var = (g_time_zone_unref (var), NULL)))

#define WIDGETS_TYPE_TASK_ROW (widgets_task_row_get_type ())
#define WIDGETS_TASK_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_TASK_ROW, WidgetsTaskRow))
#define WIDGETS_TASK_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_TASK_ROW, WidgetsTaskRowClass))
#define WIDGETS_IS_TASK_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_TASK_ROW))
#define WIDGETS_IS_TASK_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_TASK_ROW))
#define WIDGETS_TASK_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_TASK_ROW, WidgetsTaskRowClass))

typedef struct _WidgetsTaskRow WidgetsTaskRow;
typedef struct _WidgetsTaskRowClass WidgetsTaskRowClass;
typedef struct _Block27Data Block27Data;
#define _g_free0(var) (var = (g_free (var), NULL))

#define OBJECTS_TYPE_PROJECT (objects_project_get_type ())
#define OBJECTS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_PROJECT, ObjectsProject))
#define OBJECTS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))
#define OBJECTS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_PROJECT))
#define OBJECTS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_PROJECT))
#define OBJECTS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_PROJECT, ObjectsProjectClass))

typedef struct _ObjectsProject ObjectsProject;
typedef struct _ObjectsProjectClass ObjectsProjectClass;

#define SERVICES_TYPE_DATABASE (services_database_get_type ())
#define SERVICES_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_DATABASE, ServicesDatabase))
#define SERVICES_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))
#define SERVICES_IS_DATABASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_DATABASE))
#define SERVICES_IS_DATABASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_DATABASE))
#define SERVICES_DATABASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_DATABASE, ServicesDatabaseClass))

typedef struct _ServicesDatabase ServicesDatabase;
typedef struct _ServicesDatabaseClass ServicesDatabaseClass;
#define _objects_project_unref0(var) ((var == NULL) ? NULL : (var = (objects_project_unref (var), NULL)))
typedef struct _ObjectsProjectPrivate ObjectsProjectPrivate;

#define SERVICES_TYPE_NOTIFICATIONS (services_notifications_get_type ())
#define SERVICES_NOTIFICATIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SERVICES_TYPE_NOTIFICATIONS, ServicesNotifications))
#define SERVICES_NOTIFICATIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SERVICES_TYPE_NOTIFICATIONS, ServicesNotificationsClass))
#define SERVICES_IS_NOTIFICATIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SERVICES_TYPE_NOTIFICATIONS))
#define SERVICES_IS_NOTIFICATIONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SERVICES_TYPE_NOTIFICATIONS))
#define SERVICES_NOTIFICATIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SERVICES_TYPE_NOTIFICATIONS, ServicesNotificationsClass))

typedef struct _ServicesNotifications ServicesNotifications;
typedef struct _ServicesNotificationsClass ServicesNotificationsClass;
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))
typedef struct _Block28Data Block28Data;
typedef struct _WidgetsTaskNewPrivate WidgetsTaskNewPrivate;

#define WIDGETS_TYPE_WHEN_BUTTON (widgets_when_button_get_type ())
#define WIDGETS_WHEN_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_WHEN_BUTTON, WidgetsWhenButton))
#define WIDGETS_WHEN_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_WHEN_BUTTON, WidgetsWhenButtonClass))
#define WIDGETS_IS_WHEN_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_WHEN_BUTTON))
#define WIDGETS_IS_WHEN_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_WHEN_BUTTON))
#define WIDGETS_WHEN_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_WHEN_BUTTON, WidgetsWhenButtonClass))

typedef struct _WidgetsWhenButton WidgetsWhenButton;
typedef struct _WidgetsWhenButtonClass WidgetsWhenButtonClass;
typedef struct _Block29Data Block29Data;

#define DIALOGS_TYPE_SHARE_DIALOG (dialogs_share_dialog_get_type ())
#define DIALOGS_SHARE_DIALOG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialog))
#define DIALOGS_SHARE_DIALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialogClass))
#define DIALOGS_IS_SHARE_DIALOG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), DIALOGS_TYPE_SHARE_DIALOG))
#define DIALOGS_IS_SHARE_DIALOG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), DIALOGS_TYPE_SHARE_DIALOG))
#define DIALOGS_SHARE_DIALOG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), DIALOGS_TYPE_SHARE_DIALOG, DialogsShareDialogClass))

typedef struct _DialogsShareDialog DialogsShareDialog;
typedef struct _DialogsShareDialogClass DialogsShareDialogClass;

#define TYPE_APPLICATION (application_get_type ())
#define APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_APPLICATION, Application))
#define APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_APPLICATION, ApplicationClass))
#define IS_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_APPLICATION))
#define IS_APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_APPLICATION))
#define APPLICATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_APPLICATION, ApplicationClass))

typedef struct _Application Application;
typedef struct _ApplicationClass ApplicationClass;
typedef struct _ApplicationPrivate ApplicationPrivate;
typedef struct _WidgetsTaskRowPrivate WidgetsTaskRowPrivate;

#define OBJECTS_TYPE_LABEL (objects_label_get_type ())
#define OBJECTS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), OBJECTS_TYPE_LABEL, ObjectsLabel))
#define OBJECTS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), OBJECTS_TYPE_LABEL, ObjectsLabelClass))
#define OBJECTS_IS_LABEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), OBJECTS_TYPE_LABEL))
#define OBJECTS_IS_LABEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), OBJECTS_TYPE_LABEL))
#define OBJECTS_LABEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), OBJECTS_TYPE_LABEL, ObjectsLabelClass))

typedef struct _ObjectsLabel ObjectsLabel;
typedef struct _ObjectsLabelClass ObjectsLabelClass;
typedef struct _ObjectsLabelPrivate ObjectsLabelPrivate;

#define WIDGETS_TYPE_LABEL_CHILD (widgets_label_child_get_type ())
#define WIDGETS_LABEL_CHILD(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), WIDGETS_TYPE_LABEL_CHILD, WidgetsLabelChild))
#define WIDGETS_LABEL_CHILD_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), WIDGETS_TYPE_LABEL_CHILD, WidgetsLabelChildClass))
#define WIDGETS_IS_LABEL_CHILD(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), WIDGETS_TYPE_LABEL_CHILD))
#define WIDGETS_IS_LABEL_CHILD_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), WIDGETS_TYPE_LABEL_CHILD))
#define WIDGETS_LABEL_CHILD_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), WIDGETS_TYPE_LABEL_CHILD, WidgetsLabelChildClass))

typedef struct _WidgetsLabelChild WidgetsLabelChild;
typedef struct _WidgetsLabelChildClass WidgetsLabelChildClass;
typedef struct _Block30Data Block30Data;

struct _ViewsUpcoming {
	GtkEventBox parent_instance;
	ViewsUpcomingPrivate * priv;
};

struct _ViewsUpcomingClass {
	GtkEventBoxClass parent_class;
};

struct _ViewsUpcomingPrivate {
	MainWindow* _window;
	WidgetsTaskNew* task_new_revealer;
	GtkListBox* tasks_list;
	GtkButton* add_task_button;
	GtkRevealer* add_task_revealer;
	GtkFlowBox* labels_flowbox;
	WidgetsAlertView* alert_view;
	WidgetsPopoversLabelsPopover* labels_popover;
	GtkStack* main_stack;
};

struct _Block26Data {
	int _ref_count_;
	ViewsUpcoming* self;
	ObjectsTask* task;
};

struct _ObjectsTask {
	GTypeInstance parent_instance;
	volatile int ref_count;
	ObjectsTaskPrivate * priv;
	gint id;
	gint checked;
	gint project_id;
	gint list_id;
	gint task_order;
	gint is_inbox;
	gint has_reminder;
	gint sidebar_width;
	gint was_notified;
	gchar* content;
	gchar* note;
	gchar* when_date_utc;
	gchar* reminder_time;
	gchar* labels;
	gchar* checklist;
};

struct _ObjectsTaskClass {
	GTypeClass parent_class;
	void (*finalize) (ObjectsTask *self);
};

struct _Block27Data {
	int _ref_count_;
	Block26Data * _data26_;
	WidgetsTaskRow* row;
};

struct _ObjectsProject {
	GTypeInstance parent_instance;
	volatile int ref_count;
	ObjectsProjectPrivate * priv;
	gint id;
	gchar* name;
	gchar* note;
	gchar* deadline;
	gint item_order;
	gint is_deleted;
	gchar* color;
};

struct _ObjectsProjectClass {
	GTypeClass parent_class;
	void (*finalize) (ObjectsProject *self);
};

struct _Block28Data {
	int _ref_count_;
	ViewsUpcoming* self;
	ObjectsTask* task;
	WidgetsTaskRow* row;
};

struct _WidgetsTaskNew {
	GtkRevealer parent_instance;
	WidgetsTaskNewPrivate * priv;
	GtkEntry* name_entry;
	WidgetsWhenButton* when_button;
};

struct _WidgetsTaskNewClass {
	GtkRevealerClass parent_class;
};

struct _Block29Data {
	int _ref_count_;
	ViewsUpcoming* self;
	GtkToggleButton* show_hide_all_button;
	GtkImage* show_hide_image;
	GtkRevealer* labels_flowbox_revealer;
	GtkClipboard* clipboard;
};

struct _Application {
	GtkApplication parent_instance;
	ApplicationPrivate * priv;
	MainWindow* main_window;
};

struct _ApplicationClass {
	GtkApplicationClass parent_class;
};

struct _WidgetsTaskRow {
	GtkListBoxRow parent_instance;
	WidgetsTaskRowPrivate * priv;
	GtkLabel* name_label;
	GtkBox* previews_box;
	GtkBox* project_preview_box;
	GtkRevealer* bottom_box_revealer;
	GtkBox* project_box;
};

struct _WidgetsTaskRowClass {
	GtkListBoxRowClass parent_class;
};

struct _ObjectsLabel {
	GTypeInstance parent_instance;
	volatile int ref_count;
	ObjectsLabelPrivate * priv;
	gint id;
	gchar* name;
	gchar* color;
};

struct _ObjectsLabelClass {
	GTypeClass parent_class;
	void (*finalize) (ObjectsLabel *self);
};

struct _Block30Data {
	int _ref_count_;
	ViewsUpcoming* self;
	WidgetsTaskRow* row;
};


static gpointer views_upcoming_parent_class = NULL;
extern Utils* application_utils;
extern ServicesDatabase* application_database;
extern ServicesNotifications* application_notification;
extern GSettings* application_settings;

GType views_upcoming_get_type (void) G_GNUC_CONST;
GType main_window_get_type (void) G_GNUC_CONST;
GType widgets_task_new_get_type (void) G_GNUC_CONST;
GType widgets_alert_view_get_type (void) G_GNUC_CONST;
GType widgets_popovers_labels_popover_get_type (void) G_GNUC_CONST;
#define VIEWS_UPCOMING_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), VIEWS_TYPE_UPCOMING, ViewsUpcomingPrivate))
ViewsUpcoming* views_upcoming_new (void);
ViewsUpcoming* views_upcoming_construct (GType object_type);
void views_upcoming_check_visible_alertview (ViewsUpcoming* self);
GType utils_get_type (void) G_GNUC_CONST;
gboolean utils_is_listbox_empty (Utils* self,
                                 GtkListBox* listbox);
gpointer objects_task_ref (gpointer instance);
void objects_task_unref (gpointer instance);
GParamSpec* objects_param_spec_task (const gchar* name,
                                     const gchar* nick,
                                     const gchar* blurb,
                                     GType object_type,
                                     GParamFlags flags);
void objects_value_set_task (GValue* value,
                             gpointer v_object);
void objects_value_take_task (GValue* value,
                              gpointer v_object);
gpointer objects_value_get_task (const GValue* value);
GType objects_task_get_type (void) G_GNUC_CONST;
static void views_upcoming_add_new_task (ViewsUpcoming* self,
                                  ObjectsTask* task);
static Block26Data* block26_data_ref (Block26Data* _data26_);
static void block26_data_unref (void * _userdata_);
gboolean utils_is_upcoming (Utils* self,
                            GDateTime* date);
GType widgets_task_row_get_type (void) G_GNUC_CONST;
static Block27Data* block27_data_ref (Block27Data* _data27_);
static void block27_data_unref (void * _userdata_);
WidgetsTaskRow* widgets_task_row_new (ObjectsTask* _task);
WidgetsTaskRow* widgets_task_row_construct (GType object_type,
                                            ObjectsTask* _task);
static void ____lambda330_ (Block27Data* _data27_,
                     ObjectsTask* _task);
gpointer objects_project_ref (gpointer instance);
void objects_project_unref (gpointer instance);
GParamSpec* objects_param_spec_project (const gchar* name,
                                        const gchar* nick,
                                        const gchar* blurb,
                                        GType object_type,
                                        GParamFlags flags);
void objects_value_set_project (GValue* value,
                                gpointer v_object);
void objects_value_take_project (GValue* value,
                                 gpointer v_object);
gpointer objects_value_get_project (const GValue* value);
GType objects_project_get_type (void) G_GNUC_CONST;
ObjectsProject* objects_project_new (gint id,
                                     gint item_order,
                                     gint is_deleted,
                                     const gchar* name,
                                     const gchar* note,
                                     const gchar* deadline,
                                     const gchar* color);
ObjectsProject* objects_project_construct (GType object_type,
                                           gint id,
                                           gint item_order,
                                           gint is_deleted,
                                           const gchar* name,
                                           const gchar* note,
                                           const gchar* deadline,
                                           const gchar* color);
GType services_database_get_type (void) G_GNUC_CONST;
ObjectsProject* services_database_get_project (ServicesDatabase* self,
                                               gint id);
gboolean utils_is_today (Utils* self,
                         GDateTime* date_1);
GType services_notifications_get_type (void) G_GNUC_CONST;
static gboolean ___lambda331_ (Block27Data* _data27_);
static gboolean ____lambda331__gsource_func (gpointer self);
static void _____lambda330__widgets_task_row_on_signal_update (WidgetsTaskRow* _sender,
                                                        ObjectsTask* task,
                                                        gpointer self);
void views_upcoming_apply_remove (ViewsUpcoming* self);
ObjectsTask* widgets_task_row_get_task (WidgetsTaskRow* self);
void views_upcoming_update_tasks_list (ViewsUpcoming* self);
GeeArrayList* services_database_get_all_upcoming_tasks (ServicesDatabase* self);
static Block28Data* block28_data_ref (Block28Data* _data28_);
static void block28_data_unref (void * _userdata_);
static void ____lambda332_ (Block28Data* _data28_,
                     ObjectsTask* _task);
static gboolean ___lambda333_ (Block28Data* _data28_);
static gboolean ____lambda333__gsource_func (gpointer self);
static void _____lambda332__widgets_task_row_on_signal_update (WidgetsTaskRow* _sender,
                                                        ObjectsTask* task,
                                                        gpointer self);
static void views_upcoming_task_on_revealer (ViewsUpcoming* self);
GType widgets_when_button_get_type (void) G_GNUC_CONST;
void widgets_task_new_set_when_datetime (WidgetsTaskNew* self,
                                         GDateTime* value);
MainWindow* views_upcoming_get_window (ViewsUpcoming* self);
static void views_upcoming_set_window (ViewsUpcoming* self,
                                MainWindow* value);
static GObject * views_upcoming_constructor (GType type,
                                      guint n_construct_properties,
                                      GObjectConstructParam * construct_properties);
static Block29Data* block29_data_ref (Block29Data* _data29_);
static void block29_data_unref (void * _userdata_);
WidgetsAlertView* widgets_alert_view_new (const gchar* title,
                                          const gchar* description,
                                          const gchar* icon_name);
WidgetsAlertView* widgets_alert_view_construct (GType object_type,
                                                const gchar* title,
                                                const gchar* description,
                                                const gchar* icon_name);
static void _views_upcoming___lambda334_ (Block29Data* _data29_);
void widgets_task_row_show_content (WidgetsTaskRow* self);
void widgets_task_row_hide_content (WidgetsTaskRow* self);
static void __views_upcoming___lambda334__gtk_toggle_button_toggled (GtkToggleButton* _sender,
                                                              gpointer self);
WidgetsPopoversLabelsPopover* widgets_popovers_labels_popover_new (GtkWidget* relative);
WidgetsPopoversLabelsPopover* widgets_popovers_labels_popover_construct (GType object_type,
                                                                         GtkWidget* relative);
static void _views_upcoming___lambda335_ (ViewsUpcoming* self);
GType dialogs_share_dialog_get_type (void) G_GNUC_CONST;
GType application_get_type (void) G_GNUC_CONST;
Application* application_get_instance (void);
DialogsShareDialog* dialogs_share_dialog_new (MainWindow* parent);
DialogsShareDialog* dialogs_share_dialog_construct (GType object_type,
                                                    MainWindow* parent);
void dialogs_share_dialog_set_upcoming (DialogsShareDialog* self,
                                        gboolean value);
static void _gtk_main_quit_gtk_widget_destroy (GtkWidget* _sender,
                                        gpointer self);
static void __views_upcoming___lambda335__gtk_button_clicked (GtkButton* _sender,
                                                       gpointer self);
WidgetsTaskNew* widgets_task_new_new (gboolean _is_inbox,
                                      gint _project_id);
WidgetsTaskNew* widgets_task_new_construct (GType object_type,
                                            gboolean _is_inbox,
                                            gint _project_id);
static gboolean _views_upcoming____lambda336_ (ViewsUpcoming* self);
static gboolean __views_upcoming____lambda336__gsource_func (gpointer self);
static gboolean _views_upcoming____lambda337_ (ViewsUpcoming* self);
static gboolean __views_upcoming____lambda337__gsource_func (gpointer self);
static gboolean _views_upcoming___lambda338_ (ViewsUpcoming* self,
                                       GtkListBoxRow* row);
static gboolean __views_upcoming___lambda338__gtk_list_box_filter_func (GtkListBoxRow* row,
                                                                 gpointer self);
static gint _views_upcoming___lambda339_ (ViewsUpcoming* self,
                                   GtkListBoxRow* row1,
                                   GtkListBoxRow* row2);
static gint __views_upcoming___lambda339__gtk_list_box_sort_func (GtkListBoxRow* row1,
                                                           GtkListBoxRow* row2,
                                                           gpointer self);
static void _views_upcoming___lambda340_ (ViewsUpcoming* self);
static void __views_upcoming___lambda340__gtk_button_clicked (GtkButton* _sender,
                                                       gpointer self);
static void _views_upcoming___lambda341_ (ViewsUpcoming* self);
static void __views_upcoming___lambda341__widgets_task_new_on_signal_close (WidgetsTaskNew* _sender,
                                                                     gpointer self);
static void _views_upcoming___lambda342_ (Block29Data* _data29_);
ObjectsTask* objects_task_new (gint id,
                               gint checked,
                               gint project_id,
                               gint list_id,
                               gint task_order,
                               gint is_inbox,
                               gint has_reminder,
                               gint sidebar_width,
                               gint was_notified,
                               const gchar* content,
                               const gchar* note,
                               const gchar* when_date_utc,
                               const gchar* reminder_time,
                               const gchar* labels,
                               const gchar* checklist);
ObjectsTask* objects_task_construct (GType object_type,
                                     gint id,
                                     gint checked,
                                     gint project_id,
                                     gint list_id,
                                     gint task_order,
                                     gint is_inbox,
                                     gint has_reminder,
                                     gint sidebar_width,
                                     gint was_notified,
                                     const gchar* content,
                                     const gchar* note,
                                     const gchar* when_date_utc,
                                     const gchar* reminder_time,
                                     const gchar* labels,
                                     const gchar* checklist);
gint services_database_add_task (ServicesDatabase* self,
                                 ObjectsTask* task);
static void __views_upcoming___lambda342__gtk_button_clicked (GtkButton* _sender,
                                                       gpointer self);
static gboolean _views_upcoming___lambda343_ (ViewsUpcoming* self,
                                       GdkEvent* event);
static gboolean __views_upcoming___lambda343__gtk_widget_event (GtkWidget* _sender,
                                                         GdkEvent* event,
                                                         gpointer self);
static void _views_upcoming___lambda344_ (ViewsUpcoming* self);
void widgets_popovers_labels_popover_update_label_list (WidgetsPopoversLabelsPopover* self);
static void __views_upcoming___lambda344__gtk_button_clicked (GtkButton* _sender,
                                                       gpointer self);
gpointer objects_label_ref (gpointer instance);
void objects_label_unref (gpointer instance);
GParamSpec* objects_param_spec_label (const gchar* name,
                                      const gchar* nick,
                                      const gchar* blurb,
                                      GType object_type,
                                      GParamFlags flags);
void objects_value_set_label (GValue* value,
                              gpointer v_object);
void objects_value_take_label (GValue* value,
                               gpointer v_object);
gpointer objects_value_get_label (const GValue* value);
GType objects_label_get_type (void) G_GNUC_CONST;
static void _views_upcoming___lambda345_ (Block29Data* _data29_,
                                   ObjectsLabel* label);
gboolean utils_is_label_repeted (Utils* self,
                                 GtkFlowBox* flowbox,
                                 gint id);
GType widgets_label_child_get_type (void) G_GNUC_CONST;
WidgetsLabelChild* widgets_label_child_new (ObjectsLabel* _label);
WidgetsLabelChild* widgets_label_child_construct (GType object_type,
                                                  ObjectsLabel* _label);
gboolean utils_is_empty (Utils* self,
                         GtkFlowBox* flowbox);
static gboolean __lambda346_ (ViewsUpcoming* self,
                       GtkListBoxRow* row);
ObjectsLabel* widgets_label_child_get_label (WidgetsLabelChild* self);
static gboolean ___lambda346__gtk_list_box_filter_func (GtkListBoxRow* row,
                                                 gpointer self);
static void __views_upcoming___lambda345__widgets_popovers_labels_popover_on_selected_label (WidgetsPopoversLabelsPopover* _sender,
                                                                                      ObjectsLabel* label,
                                                                                      gpointer self);
static void _views_upcoming___lambda347_ (Block29Data* _data29_,
                                   GtkWidget* widget);
static gboolean ___lambda348_ (ViewsUpcoming* self,
                        GtkListBoxRow* row);
static gboolean ____lambda348__gtk_list_box_filter_func (GtkListBoxRow* row,
                                                  gpointer self);
static gboolean ___lambda349_ (ViewsUpcoming* self,
                        GtkListBoxRow* row);
static gboolean ____lambda349__gtk_list_box_filter_func (GtkListBoxRow* row,
                                                  gpointer self);
static void __views_upcoming___lambda347__gtk_container_remove (GtkContainer* _sender,
                                                         GtkWidget* widget,
                                                         gpointer self);
static void _views_upcoming___lambda350_ (ViewsUpcoming* self,
                                   GtkWidget* widget);
static void __views_upcoming___lambda350__gtk_container_remove (GtkContainer* _sender,
                                                         GtkWidget* widget,
                                                         gpointer self);
static void _views_upcoming___lambda351_ (ViewsUpcoming* self,
                                   ObjectsTask* task);
gboolean utils_is_task_repeted (Utils* self,
                                GtkListBox* listbox,
                                gint id);
static Block30Data* block30_data_ref (Block30Data* _data30_);
static void block30_data_unref (void * _userdata_);
static gboolean ______lambda352_ (Block30Data* _data30_);
static gboolean _______lambda352__gsource_func (gpointer self);
void widgets_task_row_set_update_task (WidgetsTaskRow* self,
                                       ObjectsTask* _task);
static void __views_upcoming___lambda351__services_database_update_task_signal (ServicesDatabase* _sender,
                                                                         ObjectsTask* task,
                                                                         gpointer self);
static void _views_upcoming___lambda353_ (ViewsUpcoming* self,
                                   ObjectsTask* task);
static void __views_upcoming___lambda353__services_database_add_task_signal (ServicesDatabase* _sender,
                                                                      ObjectsTask* task,
                                                                      gpointer self);
static void _views_upcoming___lambda354_ (ViewsUpcoming* self,
                                   ObjectsTask* task);
static void __views_upcoming___lambda354__services_database_on_signal_remove_task (ServicesDatabase* _sender,
                                                                            ObjectsTask* task,
                                                                            gpointer self);
static void views_upcoming_finalize (GObject * obj);
static void _vala_views_upcoming_get_property (GObject * object,
                                        guint property_id,
                                        GValue * value,
                                        GParamSpec * pspec);
static void _vala_views_upcoming_set_property (GObject * object,
                                        guint property_id,
                                        const GValue * value,
                                        GParamSpec * pspec);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);
static gint _vala_array_length (gpointer array);


ViewsUpcoming*
views_upcoming_construct (GType object_type)
{
	ViewsUpcoming * self = NULL;
#line 34 "/run/build/planner/src/Views/Upcoming.vala"
	self = (ViewsUpcoming*) g_object_new (object_type, "expand", TRUE, NULL);
#line 33 "/run/build/planner/src/Views/Upcoming.vala"
	return self;
#line 682 "Upcoming.c"
}


ViewsUpcoming*
views_upcoming_new (void)
{
#line 33 "/run/build/planner/src/Views/Upcoming.vala"
	return views_upcoming_construct (VIEWS_TYPE_UPCOMING);
#line 691 "Upcoming.c"
}


void
views_upcoming_check_visible_alertview (ViewsUpcoming* self)
{
	Utils* _tmp0_;
	GtkListBox* _tmp1_;
#line 435 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (self != NULL);
#line 436 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = application_utils;
#line 436 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = self->priv->tasks_list;
#line 436 "/run/build/planner/src/Views/Upcoming.vala"
	if (utils_is_listbox_empty (_tmp0_, _tmp1_)) {
#line 708 "Upcoming.c"
		GtkStack* _tmp2_;
#line 437 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp2_ = self->priv->main_stack;
#line 437 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_stack_set_visible_child_name (_tmp2_, "alert");
#line 714 "Upcoming.c"
	} else {
		GtkStack* _tmp3_;
#line 439 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = self->priv->main_stack;
#line 439 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_stack_set_visible_child_name (_tmp3_, "main");
#line 721 "Upcoming.c"
	}
#line 442 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_show_all ((GtkWidget*) self);
#line 725 "Upcoming.c"
}


static gpointer
_objects_task_ref0 (gpointer self)
{
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	return self ? objects_task_ref (self) : NULL;
#line 734 "Upcoming.c"
}


static Block26Data*
block26_data_ref (Block26Data* _data26_)
{
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	g_atomic_int_inc (&_data26_->_ref_count_);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	return _data26_;
#line 745 "Upcoming.c"
}


static void
block26_data_unref (void * _userdata_)
{
	Block26Data* _data26_;
	_data26_ = (Block26Data*) _userdata_;
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	if (g_atomic_int_dec_and_test (&_data26_->_ref_count_)) {
#line 756 "Upcoming.c"
		ViewsUpcoming* self;
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
		self = _data26_->self;
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
		_objects_task_unref0 (_data26_->task);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (self);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
		g_slice_free (Block26Data, _data26_);
#line 766 "Upcoming.c"
	}
}


static Block27Data*
block27_data_ref (Block27Data* _data27_)
{
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
	g_atomic_int_inc (&_data27_->_ref_count_);
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
	return _data27_;
#line 778 "Upcoming.c"
}


static void
block27_data_unref (void * _userdata_)
{
	Block27Data* _data27_;
	_data27_ = (Block27Data*) _userdata_;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
	if (g_atomic_int_dec_and_test (&_data27_->_ref_count_)) {
#line 789 "Upcoming.c"
		ViewsUpcoming* self;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
		self = _data27_->_data26_->self;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_data27_->row);
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
		block26_data_unref (_data27_->_data26_);
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
		_data27_->_data26_ = NULL;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
		g_slice_free (Block27Data, _data27_);
#line 801 "Upcoming.c"
	}
}


static gboolean
___lambda331_ (Block27Data* _data27_)
{
	Block26Data* _data26_;
	ViewsUpcoming* self;
	gboolean result = FALSE;
	WidgetsTaskRow* _tmp0_;
	WidgetsTaskRow* _tmp1_;
	gdouble _tmp2_;
	gdouble _tmp3_;
	WidgetsTaskRow* _tmp4_;
	gdouble _tmp5_;
	gdouble _tmp6_;
#line 478 "/run/build/planner/src/Views/Upcoming.vala"
	_data26_ = _data27_->_data26_;
#line 478 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data26_->self;
#line 479 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _data27_->row;
#line 479 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = _data27_->row;
#line 479 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = gtk_widget_get_opacity ((GtkWidget*) _tmp1_);
#line 479 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = _tmp2_;
#line 479 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp0_, _tmp3_ - 0.1);
#line 481 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = _data27_->row;
#line 481 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp5_ = gtk_widget_get_opacity ((GtkWidget*) _tmp4_);
#line 481 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = _tmp5_;
#line 481 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp6_ <= ((gdouble) 0)) {
#line 841 "Upcoming.c"
		WidgetsTaskRow* _tmp7_;
#line 482 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp7_ = _data27_->row;
#line 482 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_widget_destroy ((GtkWidget*) _tmp7_);
#line 483 "/run/build/planner/src/Views/Upcoming.vala"
		result = FALSE;
#line 483 "/run/build/planner/src/Views/Upcoming.vala"
		return result;
#line 851 "Upcoming.c"
	}
#line 486 "/run/build/planner/src/Views/Upcoming.vala"
	result = TRUE;
#line 486 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 857 "Upcoming.c"
}


static gboolean
____lambda331__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda331_ (self);
#line 478 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 868 "Upcoming.c"
}


static void
____lambda330_ (Block27Data* _data27_,
                ObjectsTask* _task)
{
	Block26Data* _data26_;
	ViewsUpcoming* self;
	GDateTime* _when = NULL;
	const gchar* _tmp0_;
	GTimeZone* _tmp1_;
	GTimeZone* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	gboolean _tmp5_ = FALSE;
	Utils* _tmp6_;
	GDateTime* _tmp7_;
#line 452 "/run/build/planner/src/Views/Upcoming.vala"
	_data26_ = _data27_->_data26_;
#line 452 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data26_->self;
#line 452 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (_task != NULL);
#line 453 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _task->when_date_utc;
#line 453 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = g_time_zone_new_local ();
#line 453 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = _tmp1_;
#line 453 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = g_date_time_new_from_iso8601 (_tmp0_, _tmp2_);
#line 453 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = _tmp3_;
#line 453 "/run/build/planner/src/Views/Upcoming.vala"
	_g_time_zone_unref0 (_tmp2_);
#line 453 "/run/build/planner/src/Views/Upcoming.vala"
	_when = _tmp4_;
#line 455 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = application_utils;
#line 455 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp7_ = _when;
#line 455 "/run/build/planner/src/Views/Upcoming.vala"
	if (utils_is_upcoming (_tmp6_, _tmp7_) == FALSE) {
#line 455 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = TRUE;
#line 915 "Upcoming.c"
	} else {
		const gchar* _tmp8_;
#line 455 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp8_ = _task->when_date_utc;
#line 455 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = g_strcmp0 (_tmp8_, "") == 0;
#line 922 "Upcoming.c"
	}
#line 455 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp5_) {
#line 926 "Upcoming.c"
		gchar* view = NULL;
		gchar* _tmp9_;
		const gchar* _tmp10_;
		ServicesNotifications* _tmp23_;
		const gchar* _tmp24_;
		const gchar* _tmp25_;
		gchar* _tmp26_;
		gchar* _tmp27_;
#line 456 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp9_ = g_strdup ("");
#line 456 "/run/build/planner/src/Views/Upcoming.vala"
		view = _tmp9_;
#line 458 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp10_ = _task->when_date_utc;
#line 458 "/run/build/planner/src/Views/Upcoming.vala"
		if (g_strcmp0 (_tmp10_, "") == 0) {
#line 943 "Upcoming.c"
			gint _tmp11_;
#line 459 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp11_ = _task->is_inbox;
#line 459 "/run/build/planner/src/Views/Upcoming.vala"
			if (_tmp11_ == 1) {
#line 949 "Upcoming.c"
				gchar* _tmp12_;
#line 460 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp12_ = g_strdup (_ ("Inbox"));
#line 460 "/run/build/planner/src/Views/Upcoming.vala"
				_g_free0 (view);
#line 460 "/run/build/planner/src/Views/Upcoming.vala"
				view = _tmp12_;
#line 957 "Upcoming.c"
			} else {
				ObjectsProject* project = NULL;
				ObjectsProject* _tmp13_;
				ServicesDatabase* _tmp14_;
				gint _tmp15_;
				ObjectsProject* _tmp16_;
				ObjectsProject* _tmp17_;
				const gchar* _tmp18_;
				gchar* _tmp19_;
#line 462 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp13_ = objects_project_new (0, 0, 0, "", "", "", "");
#line 462 "/run/build/planner/src/Views/Upcoming.vala"
				project = _tmp13_;
#line 463 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp14_ = application_database;
#line 463 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp15_ = _task->project_id;
#line 463 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp16_ = services_database_get_project (_tmp14_, _tmp15_);
#line 463 "/run/build/planner/src/Views/Upcoming.vala"
				_objects_project_unref0 (project);
#line 463 "/run/build/planner/src/Views/Upcoming.vala"
				project = _tmp16_;
#line 464 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp17_ = project;
#line 464 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp18_ = _tmp17_->name;
#line 464 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp19_ = g_strdup (_tmp18_);
#line 464 "/run/build/planner/src/Views/Upcoming.vala"
				_g_free0 (view);
#line 464 "/run/build/planner/src/Views/Upcoming.vala"
				view = _tmp19_;
#line 459 "/run/build/planner/src/Views/Upcoming.vala"
				_objects_project_unref0 (project);
#line 993 "Upcoming.c"
			}
		} else {
			Utils* _tmp20_;
			GDateTime* _tmp21_;
#line 466 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp20_ = application_utils;
#line 466 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp21_ = _when;
#line 466 "/run/build/planner/src/Views/Upcoming.vala"
			if (utils_is_today (_tmp20_, _tmp21_)) {
#line 1004 "Upcoming.c"
				gchar* _tmp22_;
#line 467 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp22_ = g_strdup (_ ("Today"));
#line 467 "/run/build/planner/src/Views/Upcoming.vala"
				_g_free0 (view);
#line 467 "/run/build/planner/src/Views/Upcoming.vala"
				view = _tmp22_;
#line 1012 "Upcoming.c"
			}
		}
#line 470 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp23_ = application_notification;
#line 470 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp24_ = _data26_->task->content;
#line 470 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp25_ = view;
#line 470 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp26_ = g_strdup_printf (_ ("It was moved to %s"), _tmp25_);
#line 470 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp27_ = _tmp26_;
#line 470 "/run/build/planner/src/Views/Upcoming.vala"
		g_signal_emit_by_name (_tmp23_, "send-local-notification", _tmp24_, _tmp27_, "document-export", 3, FALSE);
#line 470 "/run/build/planner/src/Views/Upcoming.vala"
		_g_free0 (_tmp27_);
#line 478 "/run/build/planner/src/Views/Upcoming.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 20, ____lambda331__gsource_func, block27_data_ref (_data27_), block27_data_unref);
#line 455 "/run/build/planner/src/Views/Upcoming.vala"
		_g_free0 (view);
#line 1033 "Upcoming.c"
	}
#line 452 "/run/build/planner/src/Views/Upcoming.vala"
	_g_date_time_unref0 (_when);
#line 1037 "Upcoming.c"
}


static void
_____lambda330__widgets_task_row_on_signal_update (WidgetsTaskRow* _sender,
                                                   ObjectsTask* task,
                                                   gpointer self)
{
#line 452 "/run/build/planner/src/Views/Upcoming.vala"
	____lambda330_ (self, task);
#line 1048 "Upcoming.c"
}


static void
views_upcoming_add_new_task (ViewsUpcoming* self,
                             ObjectsTask* task)
{
	Block26Data* _data26_;
	ObjectsTask* _tmp0_;
	const gchar* _tmp1_;
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (self != NULL);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (task != NULL);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	_data26_ = g_slice_new0 (Block26Data);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	_data26_->_ref_count_ = 1;
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	_data26_->self = g_object_ref (self);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _objects_task_ref0 (task);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	_objects_task_unref0 (_data26_->task);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	_data26_->task = _tmp0_;
#line 446 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = _data26_->task->when_date_utc;
#line 446 "/run/build/planner/src/Views/Upcoming.vala"
	if (g_strcmp0 (_tmp1_, "") != 0) {
#line 1079 "Upcoming.c"
		GDateTime* when = NULL;
		const gchar* _tmp2_;
		GTimeZone* _tmp3_;
		GTimeZone* _tmp4_;
		GDateTime* _tmp5_;
		GDateTime* _tmp6_;
		Utils* _tmp7_;
		GDateTime* _tmp8_;
#line 447 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp2_ = _data26_->task->when_date_utc;
#line 447 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = g_time_zone_new_local ();
#line 447 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp4_ = _tmp3_;
#line 447 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = g_date_time_new_from_iso8601 (_tmp2_, _tmp4_);
#line 447 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp6_ = _tmp5_;
#line 447 "/run/build/planner/src/Views/Upcoming.vala"
		_g_time_zone_unref0 (_tmp4_);
#line 447 "/run/build/planner/src/Views/Upcoming.vala"
		when = _tmp6_;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp7_ = application_utils;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp8_ = when;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
		if (utils_is_upcoming (_tmp7_, _tmp8_)) {
#line 1108 "Upcoming.c"
			Block27Data* _data27_;
			WidgetsTaskRow* _tmp9_;
			WidgetsTaskRow* _tmp10_;
			GtkListBox* _tmp11_;
			WidgetsTaskRow* _tmp12_;
			GtkListBox* _tmp13_;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
			_data27_ = g_slice_new0 (Block27Data);
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
			_data27_->_ref_count_ = 1;
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
			_data27_->_data26_ = block26_data_ref (_data26_);
#line 450 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp9_ = widgets_task_row_new (_data26_->task);
#line 450 "/run/build/planner/src/Views/Upcoming.vala"
			g_object_ref_sink (_tmp9_);
#line 450 "/run/build/planner/src/Views/Upcoming.vala"
			_data27_->row = _tmp9_;
#line 452 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp10_ = _data27_->row;
#line 452 "/run/build/planner/src/Views/Upcoming.vala"
			g_signal_connect_data (_tmp10_, "on-signal-update", (GCallback) _____lambda330__widgets_task_row_on_signal_update, block27_data_ref (_data27_), (GClosureNotify) block27_data_unref, 0);
#line 491 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp11_ = self->priv->tasks_list;
#line 491 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp12_ = _data27_->row;
#line 491 "/run/build/planner/src/Views/Upcoming.vala"
			gtk_container_add ((GtkContainer*) _tmp11_, (GtkWidget*) _tmp12_);
#line 492 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp13_ = self->priv->tasks_list;
#line 492 "/run/build/planner/src/Views/Upcoming.vala"
			gtk_widget_show_all ((GtkWidget*) _tmp13_);
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
			block27_data_unref (_data27_);
#line 449 "/run/build/planner/src/Views/Upcoming.vala"
			_data27_ = NULL;
#line 1145 "Upcoming.c"
		}
#line 495 "/run/build/planner/src/Views/Upcoming.vala"
		views_upcoming_check_visible_alertview (self);
#line 446 "/run/build/planner/src/Views/Upcoming.vala"
		_g_date_time_unref0 (when);
#line 1151 "Upcoming.c"
	}
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	block26_data_unref (_data26_);
#line 445 "/run/build/planner/src/Views/Upcoming.vala"
	_data26_ = NULL;
#line 1157 "Upcoming.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
	return self ? g_object_ref (self) : NULL;
#line 1166 "Upcoming.c"
}


void
views_upcoming_apply_remove (ViewsUpcoming* self)
{
	GtkListBox* _tmp0_;
	GList* _tmp1_;
	GtkListBox* _tmp22_;
#line 499 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (self != NULL);
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = self->priv->tasks_list;
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = gtk_container_get_children ((GtkContainer*) _tmp0_);
#line 1182 "Upcoming.c"
	{
		GList* element_collection = NULL;
		GList* element_it = NULL;
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
		element_collection = _tmp1_;
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
		for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 1190 "Upcoming.c"
			GtkWidget* _tmp2_;
			GtkWidget* element = NULL;
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp2_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
			element = _tmp2_;
#line 1197 "Upcoming.c"
			{
				WidgetsTaskRow* row = NULL;
				GtkWidget* _tmp3_;
				WidgetsTaskRow* _tmp4_;
				GDateTime* when = NULL;
				WidgetsTaskRow* _tmp5_;
				ObjectsTask* _tmp6_;
				ObjectsTask* _tmp7_;
				const gchar* _tmp8_;
				GTimeZone* _tmp9_;
				GTimeZone* _tmp10_;
				GDateTime* _tmp11_;
				GDateTime* _tmp12_;
				gboolean _tmp13_ = FALSE;
				Utils* _tmp14_;
				GDateTime* _tmp15_;
#line 501 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp3_ = element;
#line 501 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp4_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp3_, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) _tmp3_) : NULL);
#line 501 "/run/build/planner/src/Views/Upcoming.vala"
				row = _tmp4_;
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp5_ = row;
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp6_ = widgets_task_row_get_task (_tmp5_);
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp7_ = _tmp6_;
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp8_ = _tmp7_->when_date_utc;
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp9_ = g_time_zone_new_local ();
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp10_ = _tmp9_;
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp11_ = g_date_time_new_from_iso8601 (_tmp8_, _tmp10_);
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp12_ = _tmp11_;
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				_g_time_zone_unref0 (_tmp10_);
#line 502 "/run/build/planner/src/Views/Upcoming.vala"
				when = _tmp12_;
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp14_ = application_utils;
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp15_ = when;
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
				if (utils_is_upcoming (_tmp14_, _tmp15_) == FALSE) {
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp13_ = TRUE;
#line 1248 "Upcoming.c"
				} else {
					WidgetsTaskRow* _tmp16_;
					ObjectsTask* _tmp17_;
					ObjectsTask* _tmp18_;
					const gchar* _tmp19_;
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp16_ = row;
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp17_ = widgets_task_row_get_task (_tmp16_);
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp18_ = _tmp17_;
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp19_ = _tmp18_->when_date_utc;
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp13_ = g_strcmp0 (_tmp19_, "") == 0;
#line 1264 "Upcoming.c"
				}
#line 504 "/run/build/planner/src/Views/Upcoming.vala"
				if (_tmp13_) {
#line 1268 "Upcoming.c"
					GtkListBox* _tmp20_;
					GtkWidget* _tmp21_;
#line 505 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp20_ = self->priv->tasks_list;
#line 505 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp21_ = element;
#line 505 "/run/build/planner/src/Views/Upcoming.vala"
					gtk_container_remove ((GtkContainer*) _tmp20_, _tmp21_);
#line 1277 "Upcoming.c"
				}
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
				_g_date_time_unref0 (when);
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (row);
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (element);
#line 1285 "Upcoming.c"
			}
		}
#line 500 "/run/build/planner/src/Views/Upcoming.vala"
		(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 1290 "Upcoming.c"
	}
#line 509 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp22_ = self->priv->tasks_list;
#line 509 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_invalidate_sort (_tmp22_);
#line 1296 "Upcoming.c"
}


static Block28Data*
block28_data_ref (Block28Data* _data28_)
{
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
	g_atomic_int_inc (&_data28_->_ref_count_);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
	return _data28_;
#line 1307 "Upcoming.c"
}


static void
block28_data_unref (void * _userdata_)
{
	Block28Data* _data28_;
	_data28_ = (Block28Data*) _userdata_;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
	if (g_atomic_int_dec_and_test (&_data28_->_ref_count_)) {
#line 1318 "Upcoming.c"
		ViewsUpcoming* self;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		self = _data28_->self;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_data28_->row);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_objects_task_unref0 (_data28_->task);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (self);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		g_slice_free (Block28Data, _data28_);
#line 1330 "Upcoming.c"
	}
}


static gboolean
___lambda333_ (Block28Data* _data28_)
{
	ViewsUpcoming* self;
	gboolean result = FALSE;
	WidgetsTaskRow* _tmp0_;
	WidgetsTaskRow* _tmp1_;
	gdouble _tmp2_;
	gdouble _tmp3_;
	WidgetsTaskRow* _tmp4_;
	gdouble _tmp5_;
	gdouble _tmp6_;
#line 547 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data28_->self;
#line 548 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _data28_->row;
#line 548 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = _data28_->row;
#line 548 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = gtk_widget_get_opacity ((GtkWidget*) _tmp1_);
#line 548 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = _tmp2_;
#line 548 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp0_, _tmp3_ - 0.1);
#line 550 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = _data28_->row;
#line 550 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp5_ = gtk_widget_get_opacity ((GtkWidget*) _tmp4_);
#line 550 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = _tmp5_;
#line 550 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp6_ <= ((gdouble) 0)) {
#line 1367 "Upcoming.c"
		WidgetsTaskRow* _tmp7_;
#line 551 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp7_ = _data28_->row;
#line 551 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_widget_destroy ((GtkWidget*) _tmp7_);
#line 552 "/run/build/planner/src/Views/Upcoming.vala"
		result = FALSE;
#line 552 "/run/build/planner/src/Views/Upcoming.vala"
		return result;
#line 1377 "Upcoming.c"
	}
#line 555 "/run/build/planner/src/Views/Upcoming.vala"
	result = TRUE;
#line 555 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 1383 "Upcoming.c"
}


static gboolean
____lambda333__gsource_func (gpointer self)
{
	gboolean result;
	result = ___lambda333_ (self);
#line 547 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 1394 "Upcoming.c"
}


static void
____lambda332_ (Block28Data* _data28_,
                ObjectsTask* _task)
{
	ViewsUpcoming* self;
	GDateTime* _when = NULL;
	const gchar* _tmp0_;
	GTimeZone* _tmp1_;
	GTimeZone* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	gboolean _tmp5_ = FALSE;
	Utils* _tmp6_;
	GDateTime* _tmp7_;
	GtkListBox* _tmp29_;
#line 521 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data28_->self;
#line 521 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (_task != NULL);
#line 522 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _task->when_date_utc;
#line 522 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = g_time_zone_new_local ();
#line 522 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = _tmp1_;
#line 522 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = g_date_time_new_from_iso8601 (_tmp0_, _tmp2_);
#line 522 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = _tmp3_;
#line 522 "/run/build/planner/src/Views/Upcoming.vala"
	_g_time_zone_unref0 (_tmp2_);
#line 522 "/run/build/planner/src/Views/Upcoming.vala"
	_when = _tmp4_;
#line 524 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = application_utils;
#line 524 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp7_ = _when;
#line 524 "/run/build/planner/src/Views/Upcoming.vala"
	if (utils_is_upcoming (_tmp6_, _tmp7_) == FALSE) {
#line 524 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = TRUE;
#line 1439 "Upcoming.c"
	} else {
		const gchar* _tmp8_;
#line 524 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp8_ = _task->when_date_utc;
#line 524 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = g_strcmp0 (_tmp8_, "") == 0;
#line 1446 "Upcoming.c"
	}
#line 524 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp5_) {
#line 1450 "Upcoming.c"
		gchar* view = NULL;
		gchar* _tmp9_;
		const gchar* _tmp10_;
		ServicesNotifications* _tmp23_;
		ObjectsTask* _tmp24_;
		const gchar* _tmp25_;
		const gchar* _tmp26_;
		gchar* _tmp27_;
		gchar* _tmp28_;
#line 525 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp9_ = g_strdup ("");
#line 525 "/run/build/planner/src/Views/Upcoming.vala"
		view = _tmp9_;
#line 527 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp10_ = _task->when_date_utc;
#line 527 "/run/build/planner/src/Views/Upcoming.vala"
		if (g_strcmp0 (_tmp10_, "") == 0) {
#line 1468 "Upcoming.c"
			gint _tmp11_;
#line 528 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp11_ = _task->is_inbox;
#line 528 "/run/build/planner/src/Views/Upcoming.vala"
			if (_tmp11_ == 1) {
#line 1474 "Upcoming.c"
				gchar* _tmp12_;
#line 529 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp12_ = g_strdup (_ ("Inbox"));
#line 529 "/run/build/planner/src/Views/Upcoming.vala"
				_g_free0 (view);
#line 529 "/run/build/planner/src/Views/Upcoming.vala"
				view = _tmp12_;
#line 1482 "Upcoming.c"
			} else {
				ObjectsProject* project = NULL;
				ObjectsProject* _tmp13_;
				ServicesDatabase* _tmp14_;
				gint _tmp15_;
				ObjectsProject* _tmp16_;
				ObjectsProject* _tmp17_;
				const gchar* _tmp18_;
				gchar* _tmp19_;
#line 531 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp13_ = objects_project_new (0, 0, 0, "", "", "", "");
#line 531 "/run/build/planner/src/Views/Upcoming.vala"
				project = _tmp13_;
#line 532 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp14_ = application_database;
#line 532 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp15_ = _task->project_id;
#line 532 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp16_ = services_database_get_project (_tmp14_, _tmp15_);
#line 532 "/run/build/planner/src/Views/Upcoming.vala"
				_objects_project_unref0 (project);
#line 532 "/run/build/planner/src/Views/Upcoming.vala"
				project = _tmp16_;
#line 533 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp17_ = project;
#line 533 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp18_ = _tmp17_->name;
#line 533 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp19_ = g_strdup (_tmp18_);
#line 533 "/run/build/planner/src/Views/Upcoming.vala"
				_g_free0 (view);
#line 533 "/run/build/planner/src/Views/Upcoming.vala"
				view = _tmp19_;
#line 528 "/run/build/planner/src/Views/Upcoming.vala"
				_objects_project_unref0 (project);
#line 1518 "Upcoming.c"
			}
		} else {
			Utils* _tmp20_;
			GDateTime* _tmp21_;
#line 535 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp20_ = application_utils;
#line 535 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp21_ = _when;
#line 535 "/run/build/planner/src/Views/Upcoming.vala"
			if (utils_is_today (_tmp20_, _tmp21_)) {
#line 1529 "Upcoming.c"
				gchar* _tmp22_;
#line 536 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp22_ = g_strdup (_ ("Today"));
#line 536 "/run/build/planner/src/Views/Upcoming.vala"
				_g_free0 (view);
#line 536 "/run/build/planner/src/Views/Upcoming.vala"
				view = _tmp22_;
#line 1537 "Upcoming.c"
			}
		}
#line 539 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp23_ = application_notification;
#line 539 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp24_ = _data28_->task;
#line 539 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp25_ = _tmp24_->content;
#line 539 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp26_ = view;
#line 539 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp27_ = g_strdup_printf (_ ("It was moved to %s"), _tmp26_);
#line 539 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp28_ = _tmp27_;
#line 539 "/run/build/planner/src/Views/Upcoming.vala"
		g_signal_emit_by_name (_tmp23_, "send-local-notification", _tmp25_, _tmp28_, "document-export", 3, FALSE);
#line 539 "/run/build/planner/src/Views/Upcoming.vala"
		_g_free0 (_tmp28_);
#line 547 "/run/build/planner/src/Views/Upcoming.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 20, ____lambda333__gsource_func, block28_data_ref (_data28_), block28_data_unref);
#line 524 "/run/build/planner/src/Views/Upcoming.vala"
		_g_free0 (view);
#line 1560 "Upcoming.c"
	}
#line 559 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp29_ = self->priv->tasks_list;
#line 559 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_unselect_all (_tmp29_);
#line 521 "/run/build/planner/src/Views/Upcoming.vala"
	_g_date_time_unref0 (_when);
#line 1568 "Upcoming.c"
}


static void
_____lambda332__widgets_task_row_on_signal_update (WidgetsTaskRow* _sender,
                                                   ObjectsTask* task,
                                                   gpointer self)
{
#line 521 "/run/build/planner/src/Views/Upcoming.vala"
	____lambda332_ (self, task);
#line 1579 "Upcoming.c"
}


void
views_upcoming_update_tasks_list (ViewsUpcoming* self)
{
	GeeArrayList* all_tasks = NULL;
	GeeArrayList* _tmp0_;
	ServicesDatabase* _tmp1_;
	GeeArrayList* _tmp2_;
	Utils* _tmp20_;
	GtkListBox* _tmp21_;
#line 512 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (self != NULL);
#line 513 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = gee_array_list_new (OBJECTS_TYPE_TASK, (GBoxedCopyFunc) objects_task_ref, (GDestroyNotify) objects_task_unref, NULL, NULL, NULL);
#line 513 "/run/build/planner/src/Views/Upcoming.vala"
	all_tasks = _tmp0_;
#line 514 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = application_database;
#line 514 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = services_database_get_all_upcoming_tasks (_tmp1_);
#line 514 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (all_tasks);
#line 514 "/run/build/planner/src/Views/Upcoming.vala"
	all_tasks = _tmp2_;
#line 1606 "Upcoming.c"
	{
		GeeArrayList* _task_list = NULL;
		GeeArrayList* _tmp3_;
		GeeArrayList* _tmp4_;
		gint _task_size = 0;
		GeeArrayList* _tmp5_;
		gint _tmp6_;
		gint _tmp7_;
		gint _task_index = 0;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = all_tasks;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp4_ = _g_object_ref0 (_tmp3_);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_task_list = _tmp4_;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = _task_list;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp6_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp5_);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp7_ = _tmp6_;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_task_size = _tmp7_;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_task_index = -1;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		while (TRUE) {
#line 1634 "Upcoming.c"
			Block28Data* _data28_;
			gint _tmp8_;
			gint _tmp9_;
			gint _tmp10_;
			GeeArrayList* _tmp11_;
			gint _tmp12_;
			gpointer _tmp13_;
			ObjectsTask* _tmp14_;
			WidgetsTaskRow* _tmp15_;
			GtkListBox* _tmp16_;
			WidgetsTaskRow* _tmp17_;
			WidgetsTaskRow* _tmp18_;
			GtkListBox* _tmp19_;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_data28_ = g_slice_new0 (Block28Data);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_data28_->_ref_count_ = 1;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_data28_->self = g_object_ref (self);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp8_ = _task_index;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_task_index = _tmp8_ + 1;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp9_ = _task_index;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp10_ = _task_size;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			if (!(_tmp9_ < _tmp10_)) {
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
				block28_data_unref (_data28_);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
				_data28_ = NULL;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
				break;
#line 1670 "Upcoming.c"
			}
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp11_ = _task_list;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp12_ = _task_index;
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp13_ = gee_abstract_list_get ((GeeAbstractList*) _tmp11_, _tmp12_);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_data28_->task = (ObjectsTask*) _tmp13_;
#line 517 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp14_ = _data28_->task;
#line 517 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp15_ = widgets_task_row_new (_tmp14_);
#line 517 "/run/build/planner/src/Views/Upcoming.vala"
			g_object_ref_sink (_tmp15_);
#line 517 "/run/build/planner/src/Views/Upcoming.vala"
			_data28_->row = _tmp15_;
#line 519 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp16_ = self->priv->tasks_list;
#line 519 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp17_ = _data28_->row;
#line 519 "/run/build/planner/src/Views/Upcoming.vala"
			gtk_container_add ((GtkContainer*) _tmp16_, (GtkWidget*) _tmp17_);
#line 521 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp18_ = _data28_->row;
#line 521 "/run/build/planner/src/Views/Upcoming.vala"
			g_signal_connect_data (_tmp18_, "on-signal-update", (GCallback) _____lambda332__widgets_task_row_on_signal_update, block28_data_ref (_data28_), (GClosureNotify) block28_data_unref, 0);
#line 562 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp19_ = self->priv->tasks_list;
#line 562 "/run/build/planner/src/Views/Upcoming.vala"
			gtk_widget_show_all ((GtkWidget*) _tmp19_);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			block28_data_unref (_data28_);
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
			_data28_ = NULL;
#line 1706 "Upcoming.c"
		}
#line 516 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_task_list);
#line 1710 "Upcoming.c"
	}
#line 565 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp20_ = application_utils;
#line 565 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp21_ = self->priv->tasks_list;
#line 565 "/run/build/planner/src/Views/Upcoming.vala"
	if (utils_is_listbox_empty (_tmp20_, _tmp21_)) {
#line 1718 "Upcoming.c"
		GtkStack* _tmp22_;
#line 566 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp22_ = self->priv->main_stack;
#line 566 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_stack_set_visible_child_name (_tmp22_, "alert");
#line 1724 "Upcoming.c"
	}
#line 512 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (all_tasks);
#line 1728 "Upcoming.c"
}


static void
views_upcoming_task_on_revealer (ViewsUpcoming* self)
{
	WidgetsTaskNew* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
	GtkListBox* _tmp16_;
#line 570 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (self != NULL);
#line 571 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = self->priv->task_new_revealer;
#line 571 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = gtk_revealer_get_reveal_child ((GtkRevealer*) _tmp0_);
#line 571 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = _tmp1_;
#line 571 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp2_) {
#line 1749 "Upcoming.c"
		WidgetsTaskNew* _tmp3_;
		WidgetsTaskNew* _tmp4_;
		GtkRevealer* _tmp5_;
#line 572 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = self->priv->task_new_revealer;
#line 572 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_revealer_set_transition_type ((GtkRevealer*) _tmp3_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP);
#line 573 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp4_ = self->priv->task_new_revealer;
#line 573 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_revealer_set_reveal_child ((GtkRevealer*) _tmp4_, FALSE);
#line 575 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = self->priv->add_task_revealer;
#line 575 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_revealer_set_reveal_child (_tmp5_, TRUE);
#line 1765 "Upcoming.c"
	} else {
		WidgetsTaskNew* _tmp6_;
		WidgetsTaskNew* _tmp7_;
		GtkRevealer* _tmp8_;
		WidgetsTaskNew* _tmp9_;
		GtkEntry* _tmp10_;
		WidgetsTaskNew* _tmp11_;
		GDateTime* _tmp12_;
		GDateTime* _tmp13_;
		GDateTime* _tmp14_;
		GDateTime* _tmp15_;
#line 577 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp6_ = self->priv->task_new_revealer;
#line 577 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_revealer_set_transition_type ((GtkRevealer*) _tmp6_, GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN);
#line 578 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp7_ = self->priv->task_new_revealer;
#line 578 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_revealer_set_reveal_child ((GtkRevealer*) _tmp7_, TRUE);
#line 580 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp8_ = self->priv->add_task_revealer;
#line 580 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_revealer_set_reveal_child (_tmp8_, FALSE);
#line 581 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp9_ = self->priv->task_new_revealer;
#line 581 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp10_ = _tmp9_->name_entry;
#line 581 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_widget_grab_focus ((GtkWidget*) _tmp10_);
#line 583 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp11_ = self->priv->task_new_revealer;
#line 583 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp12_ = g_date_time_new_now_local ();
#line 583 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp13_ = _tmp12_;
#line 583 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp14_ = g_date_time_add_days (_tmp13_, 1);
#line 583 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp15_ = _tmp14_;
#line 583 "/run/build/planner/src/Views/Upcoming.vala"
		widgets_task_new_set_when_datetime (_tmp11_, _tmp15_);
#line 583 "/run/build/planner/src/Views/Upcoming.vala"
		_g_date_time_unref0 (_tmp15_);
#line 583 "/run/build/planner/src/Views/Upcoming.vala"
		_g_date_time_unref0 (_tmp13_);
#line 1811 "Upcoming.c"
	}
#line 586 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp16_ = self->priv->tasks_list;
#line 586 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_unselect_all (_tmp16_);
#line 1817 "Upcoming.c"
}


MainWindow*
views_upcoming_get_window (ViewsUpcoming* self)
{
	MainWindow* result;
	MainWindow* _tmp0_;
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = self->priv->_window;
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
	result = _tmp0_;
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 1834 "Upcoming.c"
}


static void
views_upcoming_set_window (ViewsUpcoming* self,
                           MainWindow* value)
{
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (self != NULL);
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
	if (views_upcoming_get_window (self) != value) {
#line 1846 "Upcoming.c"
		MainWindow* _tmp0_;
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp0_ = _g_object_ref0 (value);
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (self->priv->_window);
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
		self->priv->_window = _tmp0_;
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
		g_object_notify_by_pspec ((GObject *) self, views_upcoming_properties[VIEWS_UPCOMING_WINDOW_PROPERTY]);
#line 1856 "Upcoming.c"
	}
}


static Block29Data*
block29_data_ref (Block29Data* _data29_)
{
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	g_atomic_int_inc (&_data29_->_ref_count_);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	return _data29_;
#line 1868 "Upcoming.c"
}


static void
block29_data_unref (void * _userdata_)
{
	Block29Data* _data29_;
	_data29_ = (Block29Data*) _userdata_;
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	if (g_atomic_int_dec_and_test (&_data29_->_ref_count_)) {
#line 1879 "Upcoming.c"
		ViewsUpcoming* self;
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
		self = _data29_->self;
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_data29_->clipboard);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_data29_->labels_flowbox_revealer);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_data29_->show_hide_image);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_data29_->show_hide_all_button);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (self);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
		g_slice_free (Block29Data, _data29_);
#line 1895 "Upcoming.c"
	}
}


static void
_views_upcoming___lambda334_ (Block29Data* _data29_)
{
	ViewsUpcoming* self;
	GtkToggleButton* _tmp0_;
	gboolean _tmp1_;
	gboolean _tmp2_;
#line 63 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data29_->self;
#line 64 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _data29_->show_hide_all_button;
#line 64 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = gtk_toggle_button_get_active (_tmp0_);
#line 64 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = _tmp1_;
#line 64 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp2_) {
#line 1917 "Upcoming.c"
		GtkToggleButton* _tmp3_;
		GtkImage* _tmp4_;
		GtkListBox* _tmp5_;
		GList* _tmp6_;
#line 65 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = _data29_->show_hide_all_button;
#line 65 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_widget_set_tooltip_text ((GtkWidget*) _tmp3_, _ ("Close all tasks"));
#line 66 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp4_ = _data29_->show_hide_image;
#line 66 "/run/build/planner/src/Views/Upcoming.vala"
		g_object_set (_tmp4_, "icon-name", "zoom-out-symbolic", NULL);
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = self->priv->tasks_list;
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp6_ = gtk_container_get_children ((GtkContainer*) _tmp5_);
#line 1934 "Upcoming.c"
		{
			GList* element_collection = NULL;
			GList* element_it = NULL;
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
			element_collection = _tmp6_;
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
			for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 1942 "Upcoming.c"
				GtkWidget* _tmp7_;
				GtkWidget* element = NULL;
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp7_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
				element = _tmp7_;
#line 1949 "Upcoming.c"
				{
					WidgetsTaskRow* row = NULL;
					GtkWidget* _tmp8_;
					WidgetsTaskRow* _tmp9_;
					WidgetsTaskRow* _tmp10_;
#line 69 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp8_ = element;
#line 69 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp9_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp8_, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) _tmp8_) : NULL);
#line 69 "/run/build/planner/src/Views/Upcoming.vala"
					row = _tmp9_;
#line 70 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp10_ = row;
#line 70 "/run/build/planner/src/Views/Upcoming.vala"
					widgets_task_row_show_content (_tmp10_);
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
					_g_object_unref0 (row);
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
					_g_object_unref0 (element);
#line 1969 "Upcoming.c"
				}
			}
#line 68 "/run/build/planner/src/Views/Upcoming.vala"
			(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 1974 "Upcoming.c"
		}
	} else {
		GtkToggleButton* _tmp11_;
		GtkImage* _tmp12_;
		GtkListBox* _tmp13_;
		GList* _tmp14_;
#line 73 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp11_ = _data29_->show_hide_all_button;
#line 73 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_widget_set_tooltip_text ((GtkWidget*) _tmp11_, _ ("Open all tasks"));
#line 74 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp12_ = _data29_->show_hide_image;
#line 74 "/run/build/planner/src/Views/Upcoming.vala"
		g_object_set (_tmp12_, "icon-name", "zoom-in-symbolic", NULL);
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp13_ = self->priv->tasks_list;
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp14_ = gtk_container_get_children ((GtkContainer*) _tmp13_);
#line 1993 "Upcoming.c"
		{
			GList* element_collection = NULL;
			GList* element_it = NULL;
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
			element_collection = _tmp14_;
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
			for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 2001 "Upcoming.c"
				GtkWidget* _tmp15_;
				GtkWidget* element = NULL;
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp15_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
				element = _tmp15_;
#line 2008 "Upcoming.c"
				{
					WidgetsTaskRow* row = NULL;
					GtkWidget* _tmp16_;
					WidgetsTaskRow* _tmp17_;
					WidgetsTaskRow* _tmp18_;
#line 77 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp16_ = element;
#line 77 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp17_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp16_, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) _tmp16_) : NULL);
#line 77 "/run/build/planner/src/Views/Upcoming.vala"
					row = _tmp17_;
#line 78 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp18_ = row;
#line 78 "/run/build/planner/src/Views/Upcoming.vala"
					widgets_task_row_hide_content (_tmp18_);
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
					_g_object_unref0 (row);
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
					_g_object_unref0 (element);
#line 2028 "Upcoming.c"
				}
			}
#line 76 "/run/build/planner/src/Views/Upcoming.vala"
			(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 2033 "Upcoming.c"
		}
	}
}


static void
__views_upcoming___lambda334__gtk_toggle_button_toggled (GtkToggleButton* _sender,
                                                         gpointer self)
{
#line 63 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda334_ (self);
#line 2045 "Upcoming.c"
}


static void
_gtk_main_quit_gtk_widget_destroy (GtkWidget* _sender,
                                   gpointer self)
{
#line 107 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_main_quit ();
#line 2055 "Upcoming.c"
}


static void
_views_upcoming___lambda335_ (ViewsUpcoming* self)
{
	DialogsShareDialog* share_dialog = NULL;
	Application* _tmp0_;
	Application* _tmp1_;
	MainWindow* _tmp2_;
	DialogsShareDialog* _tmp3_;
	DialogsShareDialog* _tmp4_;
	DialogsShareDialog* _tmp5_;
	DialogsShareDialog* _tmp6_;
#line 105 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = application_get_instance ();
#line 105 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = _tmp0_;
#line 105 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = _tmp1_->main_window;
#line 105 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = dialogs_share_dialog_new (_tmp2_);
#line 105 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp3_);
#line 105 "/run/build/planner/src/Views/Upcoming.vala"
	share_dialog = _tmp3_;
#line 106 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = share_dialog;
#line 106 "/run/build/planner/src/Views/Upcoming.vala"
	dialogs_share_dialog_set_upcoming (_tmp4_, TRUE);
#line 107 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp5_ = share_dialog;
#line 107 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect ((GtkWidget*) _tmp5_, "destroy", (GCallback) _gtk_main_quit_gtk_widget_destroy, NULL);
#line 108 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = share_dialog;
#line 108 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp6_);
#line 104 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (share_dialog);
#line 2096 "Upcoming.c"
}


static void
__views_upcoming___lambda335__gtk_button_clicked (GtkButton* _sender,
                                                  gpointer self)
{
#line 104 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda335_ ((ViewsUpcoming*) self);
#line 2106 "Upcoming.c"
}


static gboolean
_views_upcoming____lambda336_ (ViewsUpcoming* self)
{
	gboolean result = FALSE;
	GtkStack* _tmp0_;
#line 210 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = self->priv->main_stack;
#line 210 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_stack_set_visible_child_name (_tmp0_, "alert");
#line 211 "/run/build/planner/src/Views/Upcoming.vala"
	result = FALSE;
#line 211 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2123 "Upcoming.c"
}


static gboolean
__views_upcoming____lambda336__gsource_func (gpointer self)
{
	gboolean result;
	result = _views_upcoming____lambda336_ ((ViewsUpcoming*) self);
#line 209 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2134 "Upcoming.c"
}


static gboolean
_views_upcoming____lambda337_ (ViewsUpcoming* self)
{
	gboolean result = FALSE;
	GtkStack* _tmp0_;
#line 215 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = self->priv->main_stack;
#line 215 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_stack_set_visible_child_name (_tmp0_, "main");
#line 216 "/run/build/planner/src/Views/Upcoming.vala"
	result = FALSE;
#line 216 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2151 "Upcoming.c"
}


static gboolean
__views_upcoming____lambda337__gsource_func (gpointer self)
{
	gboolean result;
	result = _views_upcoming____lambda337_ ((ViewsUpcoming*) self);
#line 214 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2162 "Upcoming.c"
}


static gboolean
_views_upcoming___lambda338_ (ViewsUpcoming* self,
                              GtkListBoxRow* row)
{
	gboolean result = FALSE;
	WidgetsTaskRow* item = NULL;
	WidgetsTaskRow* _tmp0_;
	WidgetsTaskRow* _tmp1_;
	ObjectsTask* _tmp2_;
	ObjectsTask* _tmp3_;
	gint _tmp4_;
#line 220 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_val_if_fail (row != NULL, FALSE);
#line 221 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (row, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) row) : NULL);
#line 221 "/run/build/planner/src/Views/Upcoming.vala"
	item = _tmp0_;
#line 222 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = item;
#line 222 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = widgets_task_row_get_task (_tmp1_);
#line 222 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = _tmp2_;
#line 222 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = _tmp3_->checked;
#line 222 "/run/build/planner/src/Views/Upcoming.vala"
	result = _tmp4_ == 0;
#line 222 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (item);
#line 222 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2197 "Upcoming.c"
}


static gboolean
__views_upcoming___lambda338__gtk_list_box_filter_func (GtkListBoxRow* row,
                                                        gpointer self)
{
	gboolean result;
	result = _views_upcoming___lambda338_ ((ViewsUpcoming*) self, row);
#line 220 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2209 "Upcoming.c"
}


static gint
_views_upcoming___lambda339_ (ViewsUpcoming* self,
                              GtkListBoxRow* row1,
                              GtkListBoxRow* row2)
{
	gint result = 0;
	WidgetsTaskRow* item1 = NULL;
	WidgetsTaskRow* _tmp0_;
	WidgetsTaskRow* item2 = NULL;
	WidgetsTaskRow* _tmp1_;
	GDateTime* date1 = NULL;
	WidgetsTaskRow* _tmp2_;
	ObjectsTask* _tmp3_;
	ObjectsTask* _tmp4_;
	const gchar* _tmp5_;
	GTimeZone* _tmp6_;
	GTimeZone* _tmp7_;
	GDateTime* _tmp8_;
	GDateTime* _tmp9_;
	GDateTime* date2 = NULL;
	WidgetsTaskRow* _tmp10_;
	ObjectsTask* _tmp11_;
	ObjectsTask* _tmp12_;
	const gchar* _tmp13_;
	GTimeZone* _tmp14_;
	GTimeZone* _tmp15_;
	GDateTime* _tmp16_;
	GDateTime* _tmp17_;
	GDateTime* _tmp18_;
	GDateTime* _tmp19_;
#line 225 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_val_if_fail (row1 != NULL, 0);
#line 225 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_val_if_fail (row2 != NULL, 0);
#line 226 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (row1, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) row1) : NULL);
#line 226 "/run/build/planner/src/Views/Upcoming.vala"
	item1 = _tmp0_;
#line 227 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (row2, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) row2) : NULL);
#line 227 "/run/build/planner/src/Views/Upcoming.vala"
	item2 = _tmp1_;
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = item1;
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = widgets_task_row_get_task (_tmp2_);
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = _tmp3_;
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp5_ = _tmp4_->when_date_utc;
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = g_time_zone_new_local ();
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp7_ = _tmp6_;
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp8_ = g_date_time_new_from_iso8601 (_tmp5_, _tmp7_);
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp9_ = _tmp8_;
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	_g_time_zone_unref0 (_tmp7_);
#line 229 "/run/build/planner/src/Views/Upcoming.vala"
	date1 = _tmp9_;
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp10_ = item2;
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp11_ = widgets_task_row_get_task (_tmp10_);
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp12_ = _tmp11_;
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp13_ = _tmp12_->when_date_utc;
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp14_ = g_time_zone_new_local ();
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp15_ = _tmp14_;
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp16_ = g_date_time_new_from_iso8601 (_tmp13_, _tmp15_);
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp17_ = _tmp16_;
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	_g_time_zone_unref0 (_tmp15_);
#line 230 "/run/build/planner/src/Views/Upcoming.vala"
	date2 = _tmp17_;
#line 232 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp18_ = date1;
#line 232 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp19_ = date2;
#line 232 "/run/build/planner/src/Views/Upcoming.vala"
	result = g_date_time_compare (_tmp18_, _tmp19_);
#line 232 "/run/build/planner/src/Views/Upcoming.vala"
	_g_date_time_unref0 (date2);
#line 232 "/run/build/planner/src/Views/Upcoming.vala"
	_g_date_time_unref0 (date1);
#line 232 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (item2);
#line 232 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (item1);
#line 232 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2311 "Upcoming.c"
}


static gint
__views_upcoming___lambda339__gtk_list_box_sort_func (GtkListBoxRow* row1,
                                                      GtkListBoxRow* row2,
                                                      gpointer self)
{
	gint result;
	result = _views_upcoming___lambda339_ ((ViewsUpcoming*) self, row1, row2);
#line 225 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2324 "Upcoming.c"
}


static void
_views_upcoming___lambda340_ (ViewsUpcoming* self)
{
#line 240 "/run/build/planner/src/Views/Upcoming.vala"
	views_upcoming_task_on_revealer (self);
#line 2333 "Upcoming.c"
}


static void
__views_upcoming___lambda340__gtk_button_clicked (GtkButton* _sender,
                                                  gpointer self)
{
#line 239 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda340_ ((ViewsUpcoming*) self);
#line 2343 "Upcoming.c"
}


static void
_views_upcoming___lambda341_ (ViewsUpcoming* self)
{
#line 244 "/run/build/planner/src/Views/Upcoming.vala"
	views_upcoming_task_on_revealer (self);
#line 2352 "Upcoming.c"
}


static void
__views_upcoming___lambda341__widgets_task_new_on_signal_close (WidgetsTaskNew* _sender,
                                                                gpointer self)
{
#line 243 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda341_ ((ViewsUpcoming*) self);
#line 2362 "Upcoming.c"
}


static gchar*
g_date_time_to_string (GDateTime* self)
{
	gchar* result = NULL;
	gchar* _tmp0_;
#line 3009 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_date_time_format (self, "%FT%H:%M:%S%z");
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _tmp0_;
#line 3010 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 2379 "Upcoming.c"
}


static void
_views_upcoming___lambda342_ (Block29Data* _data29_)
{
	ViewsUpcoming* self;
	gchar* text = NULL;
	gchar* _tmp0_;
	GtkClipboard* _tmp1_;
	gchar* _tmp2_;
	gboolean _tmp3_ = FALSE;
	const gchar* _tmp4_;
	GtkListBox* _tmp21_;
#line 247 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data29_->self;
#line 248 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = g_strdup ("");
#line 248 "/run/build/planner/src/Views/Upcoming.vala"
	text = _tmp0_;
#line 249 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = _data29_->clipboard;
#line 249 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = gtk_clipboard_wait_for_text (_tmp1_);
#line 249 "/run/build/planner/src/Views/Upcoming.vala"
	_g_free0 (text);
#line 249 "/run/build/planner/src/Views/Upcoming.vala"
	text = _tmp2_;
#line 251 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = text;
#line 251 "/run/build/planner/src/Views/Upcoming.vala"
	if (g_strcmp0 (_tmp4_, "") == 0) {
#line 251 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = TRUE;
#line 2414 "Upcoming.c"
	} else {
		const gchar* _tmp5_;
#line 251 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = text;
#line 251 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = _tmp5_ == NULL;
#line 2421 "Upcoming.c"
	}
#line 251 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp3_) {
#line 2425 "Upcoming.c"
		ServicesNotifications* _tmp6_;
#line 253 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp6_ = application_notification;
#line 253 "/run/build/planner/src/Views/Upcoming.vala"
		g_signal_emit_by_name (_tmp6_, "send-local-notification", _ ("Empty clipboard"), _ ("Try copying some text and try again"), "dialog-error", 3, FALSE);
#line 2431 "Upcoming.c"
	} else {
		ObjectsTask* task = NULL;
		ObjectsTask* _tmp7_;
		ObjectsTask* _tmp8_;
		const gchar* _tmp9_;
		gchar* _tmp10_;
		ObjectsTask* _tmp11_;
		ObjectsTask* _tmp12_;
		GDateTime* _tmp13_;
		GDateTime* _tmp14_;
		GDateTime* _tmp15_;
		GDateTime* _tmp16_;
		gchar* _tmp17_;
		ServicesDatabase* _tmp18_;
		ObjectsTask* _tmp19_;
#line 261 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp7_ = objects_task_new (0, 0, 0, 0, 0, 0, 0, 0, 0, "", "", "", "", "", "");
#line 261 "/run/build/planner/src/Views/Upcoming.vala"
		task = _tmp7_;
#line 262 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp8_ = task;
#line 262 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp9_ = text;
#line 262 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp10_ = g_strdup (_tmp9_);
#line 262 "/run/build/planner/src/Views/Upcoming.vala"
		_g_free0 (_tmp8_->content);
#line 262 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp8_->content = _tmp10_;
#line 263 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp11_ = task;
#line 263 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp11_->is_inbox = 1;
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp12_ = task;
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp13_ = g_date_time_new_now_local ();
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp14_ = _tmp13_;
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp15_ = g_date_time_add_days (_tmp14_, 1);
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp16_ = _tmp15_;
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp17_ = g_date_time_to_string (_tmp16_);
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_g_free0 (_tmp12_->when_date_utc);
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp12_->when_date_utc = _tmp17_;
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_g_date_time_unref0 (_tmp16_);
#line 264 "/run/build/planner/src/Views/Upcoming.vala"
		_g_date_time_unref0 (_tmp14_);
#line 266 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp18_ = application_database;
#line 266 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp19_ = task;
#line 266 "/run/build/planner/src/Views/Upcoming.vala"
		if (services_database_add_task (_tmp18_, _tmp19_) == SQLITE_DONE) {
#line 2491 "Upcoming.c"
			ServicesNotifications* _tmp20_;
#line 268 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp20_ = application_notification;
#line 268 "/run/build/planner/src/Views/Upcoming.vala"
			g_signal_emit_by_name (_tmp20_, "send-local-notification", _ ("His task was created from the clipboard"), _ ("Tap to undo"), "edit-paste", 3, TRUE);
#line 2497 "Upcoming.c"
		}
#line 251 "/run/build/planner/src/Views/Upcoming.vala"
		_objects_task_unref0 (task);
#line 2501 "Upcoming.c"
	}
#line 278 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp21_ = self->priv->tasks_list;
#line 278 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_unselect_all (_tmp21_);
#line 247 "/run/build/planner/src/Views/Upcoming.vala"
	_g_free0 (text);
#line 2509 "Upcoming.c"
}


static void
__views_upcoming___lambda342__gtk_button_clicked (GtkButton* _sender,
                                                  gpointer self)
{
#line 247 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda342_ (self);
#line 2519 "Upcoming.c"
}


static gboolean
_views_upcoming___lambda343_ (ViewsUpcoming* self,
                              GdkEvent* event)
{
	gboolean result = FALSE;
	gint button_press = 0;
	GSettings* _tmp0_;
	gint _tmp1_;
	GtkListBox* _tmp25_;
#line 281 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_val_if_fail (event != NULL, FALSE);
#line 282 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = application_settings;
#line 282 "/run/build/planner/src/Views/Upcoming.vala"
	button_press = g_settings_get_enum (_tmp0_, "quick-save");
#line 284 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = button_press;
#line 284 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp1_ == 0) {
#line 2542 "Upcoming.c"
	} else {
		gint _tmp2_;
#line 286 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp2_ = button_press;
#line 286 "/run/build/planner/src/Views/Upcoming.vala"
		if (_tmp2_ == 1) {
#line 2549 "Upcoming.c"
			GdkEventType _tmp3_;
#line 287 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp3_ = event->type;
#line 287 "/run/build/planner/src/Views/Upcoming.vala"
			if (_tmp3_ == GDK_2BUTTON_PRESS) {
#line 2555 "Upcoming.c"
				GtkListBox* _tmp4_;
				GList* _tmp5_;
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp4_ = self->priv->tasks_list;
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp5_ = gtk_container_get_children ((GtkContainer*) _tmp4_);
#line 2562 "Upcoming.c"
				{
					GList* element_collection = NULL;
					GList* element_it = NULL;
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
					element_collection = _tmp5_;
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
					for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 2570 "Upcoming.c"
						GtkWidget* _tmp6_;
						GtkWidget* element = NULL;
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
						_tmp6_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
						element = _tmp6_;
#line 2577 "Upcoming.c"
						{
							WidgetsTaskRow* row = NULL;
							GtkWidget* _tmp7_;
							WidgetsTaskRow* _tmp8_;
							WidgetsTaskRow* _tmp9_;
							GtkRevealer* _tmp10_;
							gboolean _tmp11_;
							gboolean _tmp12_;
#line 289 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp7_ = element;
#line 289 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp8_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp7_, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) _tmp7_) : NULL);
#line 289 "/run/build/planner/src/Views/Upcoming.vala"
							row = _tmp8_;
#line 291 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp9_ = row;
#line 291 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp10_ = _tmp9_->bottom_box_revealer;
#line 291 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp11_ = gtk_revealer_get_reveal_child (_tmp10_);
#line 291 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp12_ = _tmp11_;
#line 291 "/run/build/planner/src/Views/Upcoming.vala"
							if (_tmp12_) {
#line 2602 "Upcoming.c"
								WidgetsTaskRow* _tmp13_;
#line 292 "/run/build/planner/src/Views/Upcoming.vala"
								_tmp13_ = row;
#line 292 "/run/build/planner/src/Views/Upcoming.vala"
								widgets_task_row_hide_content (_tmp13_);
#line 2608 "Upcoming.c"
							}
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
							_g_object_unref0 (row);
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
							_g_object_unref0 (element);
#line 2614 "Upcoming.c"
						}
					}
#line 288 "/run/build/planner/src/Views/Upcoming.vala"
					(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 2619 "Upcoming.c"
				}
			}
		} else {
			GdkEventType _tmp14_;
#line 297 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp14_ = event->type;
#line 297 "/run/build/planner/src/Views/Upcoming.vala"
			if (_tmp14_ == GDK_3BUTTON_PRESS) {
#line 2628 "Upcoming.c"
				GtkListBox* _tmp15_;
				GList* _tmp16_;
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp15_ = self->priv->tasks_list;
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp16_ = gtk_container_get_children ((GtkContainer*) _tmp15_);
#line 2635 "Upcoming.c"
				{
					GList* element_collection = NULL;
					GList* element_it = NULL;
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
					element_collection = _tmp16_;
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
					for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 2643 "Upcoming.c"
						GtkWidget* _tmp17_;
						GtkWidget* element = NULL;
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
						_tmp17_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
						element = _tmp17_;
#line 2650 "Upcoming.c"
						{
							WidgetsTaskRow* row = NULL;
							GtkWidget* _tmp18_;
							WidgetsTaskRow* _tmp19_;
							WidgetsTaskRow* _tmp20_;
							GtkRevealer* _tmp21_;
							gboolean _tmp22_;
							gboolean _tmp23_;
#line 299 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp18_ = element;
#line 299 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp19_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp18_, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) _tmp18_) : NULL);
#line 299 "/run/build/planner/src/Views/Upcoming.vala"
							row = _tmp19_;
#line 301 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp20_ = row;
#line 301 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp21_ = _tmp20_->bottom_box_revealer;
#line 301 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp22_ = gtk_revealer_get_reveal_child (_tmp21_);
#line 301 "/run/build/planner/src/Views/Upcoming.vala"
							_tmp23_ = _tmp22_;
#line 301 "/run/build/planner/src/Views/Upcoming.vala"
							if (_tmp23_) {
#line 2675 "Upcoming.c"
								WidgetsTaskRow* _tmp24_;
#line 302 "/run/build/planner/src/Views/Upcoming.vala"
								_tmp24_ = row;
#line 302 "/run/build/planner/src/Views/Upcoming.vala"
								widgets_task_row_hide_content (_tmp24_);
#line 2681 "Upcoming.c"
							}
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
							_g_object_unref0 (row);
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
							_g_object_unref0 (element);
#line 2687 "Upcoming.c"
						}
					}
#line 298 "/run/build/planner/src/Views/Upcoming.vala"
					(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 2692 "Upcoming.c"
				}
			}
		}
	}
#line 308 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp25_ = self->priv->tasks_list;
#line 308 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_unselect_all (_tmp25_);
#line 309 "/run/build/planner/src/Views/Upcoming.vala"
	result = FALSE;
#line 309 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2705 "Upcoming.c"
}


static gboolean
__views_upcoming___lambda343__gtk_widget_event (GtkWidget* _sender,
                                                GdkEvent* event,
                                                gpointer self)
{
	gboolean result;
	result = _views_upcoming___lambda343_ ((ViewsUpcoming*) self, event);
#line 281 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2718 "Upcoming.c"
}


static void
_views_upcoming___lambda344_ (ViewsUpcoming* self)
{
	WidgetsPopoversLabelsPopover* _tmp0_;
	WidgetsPopoversLabelsPopover* _tmp1_;
#line 313 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = self->priv->labels_popover;
#line 313 "/run/build/planner/src/Views/Upcoming.vala"
	widgets_popovers_labels_popover_update_label_list (_tmp0_);
#line 314 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = self->priv->labels_popover;
#line 314 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp1_);
#line 2735 "Upcoming.c"
}


static void
__views_upcoming___lambda344__gtk_button_clicked (GtkButton* _sender,
                                                  gpointer self)
{
#line 312 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda344_ ((ViewsUpcoming*) self);
#line 2745 "Upcoming.c"
}


static gboolean
__lambda346_ (ViewsUpcoming* self,
              GtkListBoxRow* row)
{
	gboolean result = FALSE;
	WidgetsTaskRow* item = NULL;
	WidgetsTaskRow* _tmp0_;
	GeeArrayList* labels = NULL;
	GeeArrayList* _tmp1_;
	GeeArrayList* _labels = NULL;
	GeeArrayList* _tmp2_;
	WidgetsTaskRow* _tmp3_;
	ObjectsTask* _tmp4_;
	ObjectsTask* _tmp5_;
	const gchar* _tmp6_;
	gchar** _tmp7_;
	gchar** _tmp8_;
	GtkFlowBox* _tmp12_;
	GList* _tmp13_;
#line 328 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_val_if_fail (row != NULL, FALSE);
#line 329 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (row, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) row) : NULL);
#line 329 "/run/build/planner/src/Views/Upcoming.vala"
	item = _tmp0_;
#line 330 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = gee_array_list_new (G_TYPE_INT, NULL, NULL, NULL, NULL, NULL);
#line 330 "/run/build/planner/src/Views/Upcoming.vala"
	labels = _tmp1_;
#line 331 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = gee_array_list_new (G_TYPE_INT, NULL, NULL, NULL, NULL, NULL);
#line 331 "/run/build/planner/src/Views/Upcoming.vala"
	_labels = _tmp2_;
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = item;
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = widgets_task_row_get_task (_tmp3_);
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp5_ = _tmp4_;
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = _tmp5_->labels;
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp8_ = _tmp7_ = g_strsplit (_tmp6_, ";", 0);
#line 2792 "Upcoming.c"
	{
		gchar** label_id_collection = NULL;
		gint label_id_collection_length1 = 0;
		gint _label_id_collection_size_ = 0;
		gint label_id_it = 0;
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
		label_id_collection = _tmp8_;
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
		label_id_collection_length1 = _vala_array_length (_tmp7_);
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
		for (label_id_it = 0; label_id_it < _vala_array_length (_tmp7_); label_id_it = label_id_it + 1) {
#line 2804 "Upcoming.c"
			gchar* _tmp9_;
			gchar* label_id = NULL;
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp9_ = g_strdup (label_id_collection[label_id_it]);
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
			label_id = _tmp9_;
#line 2811 "Upcoming.c"
			{
				GeeArrayList* _tmp10_;
				const gchar* _tmp11_;
#line 334 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp10_ = labels;
#line 334 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp11_ = label_id;
#line 334 "/run/build/planner/src/Views/Upcoming.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) _tmp10_, (gpointer) ((gintptr) atoi (_tmp11_)));
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
				_g_free0 (label_id);
#line 2823 "Upcoming.c"
			}
		}
#line 333 "/run/build/planner/src/Views/Upcoming.vala"
		label_id_collection = (_vala_array_free (label_id_collection, label_id_collection_length1, (GDestroyNotify) g_free), NULL);
#line 2828 "Upcoming.c"
	}
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp12_ = self->priv->labels_flowbox;
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp13_ = gtk_container_get_children ((GtkContainer*) _tmp12_);
#line 2834 "Upcoming.c"
	{
		GList* element_collection = NULL;
		GList* element_it = NULL;
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
		element_collection = _tmp13_;
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
		for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 2842 "Upcoming.c"
			GtkWidget* _tmp14_;
			GtkWidget* element = NULL;
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp14_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
			element = _tmp14_;
#line 2849 "Upcoming.c"
			{
				WidgetsLabelChild* child = NULL;
				GtkWidget* _tmp15_;
				WidgetsLabelChild* _tmp16_;
				GeeArrayList* _tmp17_;
				WidgetsLabelChild* _tmp18_;
				ObjectsLabel* _tmp19_;
				ObjectsLabel* _tmp20_;
				gint _tmp21_;
#line 338 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp15_ = element;
#line 338 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp16_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp15_, WIDGETS_TYPE_LABEL_CHILD) ? ((WidgetsLabelChild*) _tmp15_) : NULL);
#line 338 "/run/build/planner/src/Views/Upcoming.vala"
				child = _tmp16_;
#line 339 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp17_ = _labels;
#line 339 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp18_ = child;
#line 339 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp19_ = widgets_label_child_get_label (_tmp18_);
#line 339 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp20_ = _tmp19_;
#line 339 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp21_ = _tmp20_->id;
#line 339 "/run/build/planner/src/Views/Upcoming.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) _tmp17_, (gpointer) ((gintptr) _tmp21_));
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (child);
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (element);
#line 2881 "Upcoming.c"
			}
		}
#line 337 "/run/build/planner/src/Views/Upcoming.vala"
		(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 2886 "Upcoming.c"
	}
	{
		GeeArrayList* _x_list = NULL;
		GeeArrayList* _tmp22_;
		GeeArrayList* _tmp23_;
		gint _x_size = 0;
		GeeArrayList* _tmp24_;
		gint _tmp25_;
		gint _tmp26_;
		gint _x_index = 0;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp22_ = labels;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp23_ = _g_object_ref0 (_tmp22_);
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_x_list = _tmp23_;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp24_ = _x_list;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp25_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp24_);
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp26_ = _tmp25_;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_x_size = _tmp26_;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_x_index = -1;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		while (TRUE) {
#line 2915 "Upcoming.c"
			gint _tmp27_;
			gint _tmp28_;
			gint _tmp29_;
			gint x = 0;
			GeeArrayList* _tmp30_;
			gint _tmp31_;
			gpointer _tmp32_;
			GeeArrayList* _tmp33_;
			gint _tmp34_;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp27_ = _x_index;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			_x_index = _tmp27_ + 1;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp28_ = _x_index;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp29_ = _x_size;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			if (!(_tmp28_ < _tmp29_)) {
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
				break;
#line 2937 "Upcoming.c"
			}
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp30_ = _x_list;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp31_ = _x_index;
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp32_ = gee_abstract_list_get ((GeeAbstractList*) _tmp30_, _tmp31_);
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
			x = (gint) ((gintptr) _tmp32_);
#line 344 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp33_ = _labels;
#line 344 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp34_ = x;
#line 344 "/run/build/planner/src/Views/Upcoming.vala"
			if (gee_abstract_collection_contains ((GeeAbstractCollection*) _tmp33_, (gpointer) ((gintptr) _tmp34_))) {
#line 345 "/run/build/planner/src/Views/Upcoming.vala"
				result = TRUE;
#line 345 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (_x_list);
#line 345 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (_labels);
#line 345 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (labels);
#line 345 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (item);
#line 345 "/run/build/planner/src/Views/Upcoming.vala"
				return result;
#line 2965 "Upcoming.c"
			}
		}
#line 343 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_x_list);
#line 2970 "Upcoming.c"
	}
#line 349 "/run/build/planner/src/Views/Upcoming.vala"
	result = FALSE;
#line 349 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (_labels);
#line 349 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (labels);
#line 349 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (item);
#line 349 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2982 "Upcoming.c"
}


static gboolean
___lambda346__gtk_list_box_filter_func (GtkListBoxRow* row,
                                        gpointer self)
{
	gboolean result;
	result = __lambda346_ ((ViewsUpcoming*) self, row);
#line 328 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 2994 "Upcoming.c"
}


static void
_views_upcoming___lambda345_ (Block29Data* _data29_,
                              ObjectsLabel* label)
{
	ViewsUpcoming* self;
	Utils* _tmp0_;
	GtkFlowBox* _tmp1_;
	gint _tmp2_;
	GtkRevealer* _tmp6_;
	Utils* _tmp7_;
	GtkFlowBox* _tmp8_;
	GtkFlowBox* _tmp9_;
	WidgetsPopoversLabelsPopover* _tmp10_;
	GtkListBox* _tmp11_;
#line 317 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data29_->self;
#line 317 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (label != NULL);
#line 318 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = application_utils;
#line 318 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = self->priv->labels_flowbox;
#line 318 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = label->id;
#line 318 "/run/build/planner/src/Views/Upcoming.vala"
	if (utils_is_label_repeted (_tmp0_, _tmp1_, _tmp2_) == FALSE) {
#line 3024 "Upcoming.c"
		WidgetsLabelChild* child = NULL;
		WidgetsLabelChild* _tmp3_;
		GtkFlowBox* _tmp4_;
		WidgetsLabelChild* _tmp5_;
#line 319 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = widgets_label_child_new (label);
#line 319 "/run/build/planner/src/Views/Upcoming.vala"
		g_object_ref_sink (_tmp3_);
#line 319 "/run/build/planner/src/Views/Upcoming.vala"
		child = _tmp3_;
#line 320 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp4_ = self->priv->labels_flowbox;
#line 320 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp5_ = child;
#line 320 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_container_add ((GtkContainer*) _tmp4_, (GtkWidget*) _tmp5_);
#line 318 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (child);
#line 3043 "Upcoming.c"
	}
#line 323 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = _data29_->labels_flowbox_revealer;
#line 323 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp7_ = application_utils;
#line 323 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp8_ = self->priv->labels_flowbox;
#line 323 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_revealer_set_reveal_child (_tmp6_, !utils_is_empty (_tmp7_, _tmp8_));
#line 324 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp9_ = self->priv->labels_flowbox;
#line 324 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_show_all ((GtkWidget*) _tmp9_);
#line 325 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp10_ = self->priv->labels_popover;
#line 325 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_popover_popdown ((GtkPopover*) _tmp10_);
#line 328 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp11_ = self->priv->tasks_list;
#line 328 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_set_filter_func (_tmp11_, ___lambda346__gtk_list_box_filter_func, g_object_ref (self), g_object_unref);
#line 3065 "Upcoming.c"
}


static void
__views_upcoming___lambda345__widgets_popovers_labels_popover_on_selected_label (WidgetsPopoversLabelsPopover* _sender,
                                                                                 ObjectsLabel* label,
                                                                                 gpointer self)
{
#line 317 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda345_ (self, label);
#line 3076 "Upcoming.c"
}


static gboolean
___lambda348_ (ViewsUpcoming* self,
               GtkListBoxRow* row)
{
	gboolean result = FALSE;
#line 356 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_val_if_fail (row != NULL, FALSE);
#line 357 "/run/build/planner/src/Views/Upcoming.vala"
	result = TRUE;
#line 357 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 3091 "Upcoming.c"
}


static gboolean
____lambda348__gtk_list_box_filter_func (GtkListBoxRow* row,
                                         gpointer self)
{
	gboolean result;
	result = ___lambda348_ ((ViewsUpcoming*) self, row);
#line 356 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 3103 "Upcoming.c"
}


static gboolean
___lambda349_ (ViewsUpcoming* self,
               GtkListBoxRow* row)
{
	gboolean result = FALSE;
	WidgetsTaskRow* item = NULL;
	WidgetsTaskRow* _tmp0_;
	GeeArrayList* labels = NULL;
	GeeArrayList* _tmp1_;
	GeeArrayList* _labels = NULL;
	GeeArrayList* _tmp2_;
	WidgetsTaskRow* _tmp3_;
	ObjectsTask* _tmp4_;
	ObjectsTask* _tmp5_;
	const gchar* _tmp6_;
	gchar** _tmp7_;
	gchar** _tmp8_;
	GtkFlowBox* _tmp12_;
	GList* _tmp13_;
#line 361 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_val_if_fail (row != NULL, FALSE);
#line 362 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (row, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) row) : NULL);
#line 362 "/run/build/planner/src/Views/Upcoming.vala"
	item = _tmp0_;
#line 363 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = gee_array_list_new (G_TYPE_INT, NULL, NULL, NULL, NULL, NULL);
#line 363 "/run/build/planner/src/Views/Upcoming.vala"
	labels = _tmp1_;
#line 364 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = gee_array_list_new (G_TYPE_INT, NULL, NULL, NULL, NULL, NULL);
#line 364 "/run/build/planner/src/Views/Upcoming.vala"
	_labels = _tmp2_;
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = item;
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = widgets_task_row_get_task (_tmp3_);
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp5_ = _tmp4_;
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = _tmp5_->labels;
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp8_ = _tmp7_ = g_strsplit (_tmp6_, ";", 0);
#line 3150 "Upcoming.c"
	{
		gchar** label_id_collection = NULL;
		gint label_id_collection_length1 = 0;
		gint _label_id_collection_size_ = 0;
		gint label_id_it = 0;
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
		label_id_collection = _tmp8_;
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
		label_id_collection_length1 = _vala_array_length (_tmp7_);
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
		for (label_id_it = 0; label_id_it < _vala_array_length (_tmp7_); label_id_it = label_id_it + 1) {
#line 3162 "Upcoming.c"
			gchar* _tmp9_;
			gchar* label_id = NULL;
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp9_ = g_strdup (label_id_collection[label_id_it]);
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
			label_id = _tmp9_;
#line 3169 "Upcoming.c"
			{
				GeeArrayList* _tmp10_;
				const gchar* _tmp11_;
#line 367 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp10_ = labels;
#line 367 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp11_ = label_id;
#line 367 "/run/build/planner/src/Views/Upcoming.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) _tmp10_, (gpointer) ((gintptr) atoi (_tmp11_)));
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
				_g_free0 (label_id);
#line 3181 "Upcoming.c"
			}
		}
#line 366 "/run/build/planner/src/Views/Upcoming.vala"
		label_id_collection = (_vala_array_free (label_id_collection, label_id_collection_length1, (GDestroyNotify) g_free), NULL);
#line 3186 "Upcoming.c"
	}
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp12_ = self->priv->labels_flowbox;
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp13_ = gtk_container_get_children ((GtkContainer*) _tmp12_);
#line 3192 "Upcoming.c"
	{
		GList* element_collection = NULL;
		GList* element_it = NULL;
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
		element_collection = _tmp13_;
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
		for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 3200 "Upcoming.c"
			GtkWidget* _tmp14_;
			GtkWidget* element = NULL;
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp14_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
			element = _tmp14_;
#line 3207 "Upcoming.c"
			{
				WidgetsLabelChild* child = NULL;
				GtkWidget* _tmp15_;
				WidgetsLabelChild* _tmp16_;
				GeeArrayList* _tmp17_;
				WidgetsLabelChild* _tmp18_;
				ObjectsLabel* _tmp19_;
				ObjectsLabel* _tmp20_;
				gint _tmp21_;
#line 371 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp15_ = element;
#line 371 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp16_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp15_, WIDGETS_TYPE_LABEL_CHILD) ? ((WidgetsLabelChild*) _tmp15_) : NULL);
#line 371 "/run/build/planner/src/Views/Upcoming.vala"
				child = _tmp16_;
#line 372 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp17_ = _labels;
#line 372 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp18_ = child;
#line 372 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp19_ = widgets_label_child_get_label (_tmp18_);
#line 372 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp20_ = _tmp19_;
#line 372 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp21_ = _tmp20_->id;
#line 372 "/run/build/planner/src/Views/Upcoming.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) _tmp17_, (gpointer) ((gintptr) _tmp21_));
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (child);
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (element);
#line 3239 "Upcoming.c"
			}
		}
#line 370 "/run/build/planner/src/Views/Upcoming.vala"
		(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 3244 "Upcoming.c"
	}
	{
		GeeArrayList* _x_list = NULL;
		GeeArrayList* _tmp22_;
		GeeArrayList* _tmp23_;
		gint _x_size = 0;
		GeeArrayList* _tmp24_;
		gint _tmp25_;
		gint _tmp26_;
		gint _x_index = 0;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp22_ = labels;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp23_ = _g_object_ref0 (_tmp22_);
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_x_list = _tmp23_;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp24_ = _x_list;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp25_ = gee_abstract_collection_get_size ((GeeAbstractCollection*) _tmp24_);
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp26_ = _tmp25_;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_x_size = _tmp26_;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_x_index = -1;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		while (TRUE) {
#line 3273 "Upcoming.c"
			gint _tmp27_;
			gint _tmp28_;
			gint _tmp29_;
			gint x = 0;
			GeeArrayList* _tmp30_;
			gint _tmp31_;
			gpointer _tmp32_;
			GeeArrayList* _tmp33_;
			gint _tmp34_;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp27_ = _x_index;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			_x_index = _tmp27_ + 1;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp28_ = _x_index;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp29_ = _x_size;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			if (!(_tmp28_ < _tmp29_)) {
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
				break;
#line 3295 "Upcoming.c"
			}
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp30_ = _x_list;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp31_ = _x_index;
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp32_ = gee_abstract_list_get ((GeeAbstractList*) _tmp30_, _tmp31_);
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
			x = (gint) ((gintptr) _tmp32_);
#line 377 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp33_ = _labels;
#line 377 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp34_ = x;
#line 377 "/run/build/planner/src/Views/Upcoming.vala"
			if (gee_abstract_collection_contains ((GeeAbstractCollection*) _tmp33_, (gpointer) ((gintptr) _tmp34_))) {
#line 378 "/run/build/planner/src/Views/Upcoming.vala"
				result = TRUE;
#line 378 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (_x_list);
#line 378 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (_labels);
#line 378 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (labels);
#line 378 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (item);
#line 378 "/run/build/planner/src/Views/Upcoming.vala"
				return result;
#line 3323 "Upcoming.c"
			}
		}
#line 376 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_x_list);
#line 3328 "Upcoming.c"
	}
#line 382 "/run/build/planner/src/Views/Upcoming.vala"
	result = FALSE;
#line 382 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (_labels);
#line 382 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (labels);
#line 382 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (item);
#line 382 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 3340 "Upcoming.c"
}


static gboolean
____lambda349__gtk_list_box_filter_func (GtkListBoxRow* row,
                                         gpointer self)
{
	gboolean result;
	result = ___lambda349_ ((ViewsUpcoming*) self, row);
#line 361 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 3352 "Upcoming.c"
}


static void
_views_upcoming___lambda347_ (Block29Data* _data29_,
                              GtkWidget* widget)
{
	ViewsUpcoming* self;
	Utils* _tmp0_;
	GtkFlowBox* _tmp1_;
#line 353 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data29_->self;
#line 353 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (widget != NULL);
#line 354 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = application_utils;
#line 354 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = self->priv->labels_flowbox;
#line 354 "/run/build/planner/src/Views/Upcoming.vala"
	if (utils_is_empty (_tmp0_, _tmp1_)) {
#line 3373 "Upcoming.c"
		GtkRevealer* _tmp2_;
		GtkListBox* _tmp3_;
#line 355 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp2_ = _data29_->labels_flowbox_revealer;
#line 355 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_revealer_set_reveal_child (_tmp2_, FALSE);
#line 356 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp3_ = self->priv->tasks_list;
#line 356 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_list_box_set_filter_func (_tmp3_, ____lambda348__gtk_list_box_filter_func, g_object_ref (self), g_object_unref);
#line 3384 "Upcoming.c"
	} else {
		GtkListBox* _tmp4_;
#line 361 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp4_ = self->priv->tasks_list;
#line 361 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_list_box_set_filter_func (_tmp4_, ____lambda349__gtk_list_box_filter_func, g_object_ref (self), g_object_unref);
#line 3391 "Upcoming.c"
	}
}


static void
__views_upcoming___lambda347__gtk_container_remove (GtkContainer* _sender,
                                                    GtkWidget* widget,
                                                    gpointer self)
{
#line 353 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda347_ (self, widget);
#line 3403 "Upcoming.c"
}


static void
_views_upcoming___lambda350_ (ViewsUpcoming* self,
                              GtkWidget* widget)
{
#line 387 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (widget != NULL);
#line 388 "/run/build/planner/src/Views/Upcoming.vala"
	views_upcoming_check_visible_alertview (self);
#line 3415 "Upcoming.c"
}


static void
__views_upcoming___lambda350__gtk_container_remove (GtkContainer* _sender,
                                                    GtkWidget* widget,
                                                    gpointer self)
{
#line 387 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda350_ ((ViewsUpcoming*) self, widget);
#line 3426 "Upcoming.c"
}


static Block30Data*
block30_data_ref (Block30Data* _data30_)
{
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
	g_atomic_int_inc (&_data30_->_ref_count_);
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
	return _data30_;
#line 3437 "Upcoming.c"
}


static void
block30_data_unref (void * _userdata_)
{
	Block30Data* _data30_;
	_data30_ = (Block30Data*) _userdata_;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
	if (g_atomic_int_dec_and_test (&_data30_->_ref_count_)) {
#line 3448 "Upcoming.c"
		ViewsUpcoming* self;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
		self = _data30_->self;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (_data30_->row);
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
		_g_object_unref0 (self);
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
		g_slice_free (Block30Data, _data30_);
#line 3458 "Upcoming.c"
	}
}


static gboolean
______lambda352_ (Block30Data* _data30_)
{
	ViewsUpcoming* self;
	gboolean result = FALSE;
	WidgetsTaskRow* _tmp0_;
	WidgetsTaskRow* _tmp1_;
	gdouble _tmp2_;
	gdouble _tmp3_;
	WidgetsTaskRow* _tmp4_;
	gdouble _tmp5_;
	gdouble _tmp6_;
#line 403 "/run/build/planner/src/Views/Upcoming.vala"
	self = _data30_->self;
#line 404 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = _data30_->row;
#line 404 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = _data30_->row;
#line 404 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = gtk_widget_get_opacity ((GtkWidget*) _tmp1_);
#line 404 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = _tmp2_;
#line 404 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_opacity ((GtkWidget*) _tmp0_, _tmp3_ - 0.1);
#line 406 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = _data30_->row;
#line 406 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp5_ = gtk_widget_get_opacity ((GtkWidget*) _tmp4_);
#line 406 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = _tmp5_;
#line 406 "/run/build/planner/src/Views/Upcoming.vala"
	if (_tmp6_ <= ((gdouble) 0)) {
#line 3495 "Upcoming.c"
		WidgetsTaskRow* _tmp7_;
#line 407 "/run/build/planner/src/Views/Upcoming.vala"
		_tmp7_ = _data30_->row;
#line 407 "/run/build/planner/src/Views/Upcoming.vala"
		gtk_widget_destroy ((GtkWidget*) _tmp7_);
#line 408 "/run/build/planner/src/Views/Upcoming.vala"
		result = FALSE;
#line 408 "/run/build/planner/src/Views/Upcoming.vala"
		return result;
#line 3505 "Upcoming.c"
	}
#line 411 "/run/build/planner/src/Views/Upcoming.vala"
	result = TRUE;
#line 411 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 3511 "Upcoming.c"
}


static gboolean
_______lambda352__gsource_func (gpointer self)
{
	gboolean result;
	result = ______lambda352_ (self);
#line 403 "/run/build/planner/src/Views/Upcoming.vala"
	return result;
#line 3522 "Upcoming.c"
}


static void
_views_upcoming___lambda351_ (ViewsUpcoming* self,
                              ObjectsTask* task)
{
	Utils* _tmp0_;
	GtkListBox* _tmp1_;
	gint _tmp2_;
	GtkListBox* _tmp3_;
	GList* _tmp4_;
#line 391 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (task != NULL);
#line 392 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = application_utils;
#line 392 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = self->priv->tasks_list;
#line 392 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = task->id;
#line 392 "/run/build/planner/src/Views/Upcoming.vala"
	if (utils_is_task_repeted (_tmp0_, _tmp1_, _tmp2_) == FALSE) {
#line 393 "/run/build/planner/src/Views/Upcoming.vala"
		views_upcoming_add_new_task (self, task);
#line 3547 "Upcoming.c"
	}
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = self->priv->tasks_list;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = gtk_container_get_children ((GtkContainer*) _tmp3_);
#line 3553 "Upcoming.c"
	{
		GList* element_collection = NULL;
		GList* element_it = NULL;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
		element_collection = _tmp4_;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
		for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 3561 "Upcoming.c"
			GtkWidget* _tmp5_;
			GtkWidget* element = NULL;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp5_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
			element = _tmp5_;
#line 3568 "Upcoming.c"
			{
				Block30Data* _data30_;
				GtkWidget* _tmp6_;
				WidgetsTaskRow* _tmp7_;
				WidgetsTaskRow* _tmp8_;
				ObjectsTask* _tmp9_;
				ObjectsTask* _tmp10_;
				gint _tmp11_;
				gint _tmp12_;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
				_data30_ = g_slice_new0 (Block30Data);
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
				_data30_->_ref_count_ = 1;
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
				_data30_->self = g_object_ref (self);
#line 397 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp6_ = element;
#line 397 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp7_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp6_, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) _tmp6_) : NULL);
#line 397 "/run/build/planner/src/Views/Upcoming.vala"
				_data30_->row = _tmp7_;
#line 399 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp8_ = _data30_->row;
#line 399 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp9_ = widgets_task_row_get_task (_tmp8_);
#line 399 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp10_ = _tmp9_;
#line 399 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp11_ = _tmp10_->id;
#line 399 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp12_ = task->id;
#line 399 "/run/build/planner/src/Views/Upcoming.vala"
				if (_tmp11_ == _tmp12_) {
#line 3602 "Upcoming.c"
					GDateTime* _when = NULL;
					const gchar* _tmp13_;
					GTimeZone* _tmp14_;
					GTimeZone* _tmp15_;
					GDateTime* _tmp16_;
					GDateTime* _tmp17_;
					gboolean _tmp18_ = FALSE;
					Utils* _tmp19_;
					GDateTime* _tmp20_;
#line 400 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp13_ = task->when_date_utc;
#line 400 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp14_ = g_time_zone_new_local ();
#line 400 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp15_ = _tmp14_;
#line 400 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp16_ = g_date_time_new_from_iso8601 (_tmp13_, _tmp15_);
#line 400 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp17_ = _tmp16_;
#line 400 "/run/build/planner/src/Views/Upcoming.vala"
					_g_time_zone_unref0 (_tmp15_);
#line 400 "/run/build/planner/src/Views/Upcoming.vala"
					_when = _tmp17_;
#line 402 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp19_ = application_utils;
#line 402 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp20_ = _when;
#line 402 "/run/build/planner/src/Views/Upcoming.vala"
					if (utils_is_upcoming (_tmp19_, _tmp20_) == FALSE) {
#line 402 "/run/build/planner/src/Views/Upcoming.vala"
						_tmp18_ = TRUE;
#line 3634 "Upcoming.c"
					} else {
						const gchar* _tmp21_;
#line 402 "/run/build/planner/src/Views/Upcoming.vala"
						_tmp21_ = task->when_date_utc;
#line 402 "/run/build/planner/src/Views/Upcoming.vala"
						_tmp18_ = g_strcmp0 (_tmp21_, "") == 0;
#line 3641 "Upcoming.c"
					}
#line 402 "/run/build/planner/src/Views/Upcoming.vala"
					if (_tmp18_) {
#line 403 "/run/build/planner/src/Views/Upcoming.vala"
						g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 20, _______lambda352__gsource_func, block30_data_ref (_data30_), block30_data_unref);
#line 3647 "Upcoming.c"
					} else {
						WidgetsTaskRow* _tmp22_;
#line 414 "/run/build/planner/src/Views/Upcoming.vala"
						_tmp22_ = _data30_->row;
#line 414 "/run/build/planner/src/Views/Upcoming.vala"
						widgets_task_row_set_update_task (_tmp22_, task);
#line 3654 "Upcoming.c"
					}
#line 399 "/run/build/planner/src/Views/Upcoming.vala"
					_g_date_time_unref0 (_when);
#line 3658 "Upcoming.c"
				}
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (element);
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
				block30_data_unref (_data30_);
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
				_data30_ = NULL;
#line 3666 "Upcoming.c"
			}
		}
#line 396 "/run/build/planner/src/Views/Upcoming.vala"
		(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 3671 "Upcoming.c"
	}
}


static void
__views_upcoming___lambda351__services_database_update_task_signal (ServicesDatabase* _sender,
                                                                    ObjectsTask* task,
                                                                    gpointer self)
{
#line 391 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda351_ ((ViewsUpcoming*) self, task);
#line 3683 "Upcoming.c"
}


static void
_views_upcoming___lambda353_ (ViewsUpcoming* self,
                              ObjectsTask* task)
{
#line 420 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (task != NULL);
#line 421 "/run/build/planner/src/Views/Upcoming.vala"
	views_upcoming_add_new_task (self, task);
#line 3695 "Upcoming.c"
}


static void
__views_upcoming___lambda353__services_database_add_task_signal (ServicesDatabase* _sender,
                                                                 ObjectsTask* task,
                                                                 gpointer self)
{
#line 420 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda353_ ((ViewsUpcoming*) self, task);
#line 3706 "Upcoming.c"
}


static void
_views_upcoming___lambda354_ (ViewsUpcoming* self,
                              ObjectsTask* task)
{
	GtkListBox* _tmp0_;
	GList* _tmp1_;
#line 424 "/run/build/planner/src/Views/Upcoming.vala"
	g_return_if_fail (task != NULL);
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = self->priv->tasks_list;
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = gtk_container_get_children ((GtkContainer*) _tmp0_);
#line 3722 "Upcoming.c"
	{
		GList* element_collection = NULL;
		GList* element_it = NULL;
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
		element_collection = _tmp1_;
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
		for (element_it = element_collection; element_it != NULL; element_it = element_it->next) {
#line 3730 "Upcoming.c"
			GtkWidget* _tmp2_;
			GtkWidget* element = NULL;
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
			_tmp2_ = _g_object_ref0 ((GtkWidget*) element_it->data);
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
			element = _tmp2_;
#line 3737 "Upcoming.c"
			{
				WidgetsTaskRow* row = NULL;
				GtkWidget* _tmp3_;
				WidgetsTaskRow* _tmp4_;
				WidgetsTaskRow* _tmp5_;
				ObjectsTask* _tmp6_;
				ObjectsTask* _tmp7_;
				gint _tmp8_;
				gint _tmp9_;
#line 426 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp3_ = element;
#line 426 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp4_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp3_, WIDGETS_TYPE_TASK_ROW) ? ((WidgetsTaskRow*) _tmp3_) : NULL);
#line 426 "/run/build/planner/src/Views/Upcoming.vala"
				row = _tmp4_;
#line 428 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp5_ = row;
#line 428 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp6_ = widgets_task_row_get_task (_tmp5_);
#line 428 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp7_ = _tmp6_;
#line 428 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp8_ = _tmp7_->id;
#line 428 "/run/build/planner/src/Views/Upcoming.vala"
				_tmp9_ = task->id;
#line 428 "/run/build/planner/src/Views/Upcoming.vala"
				if (_tmp8_ == _tmp9_) {
#line 3765 "Upcoming.c"
					GtkListBox* _tmp10_;
					GtkWidget* _tmp11_;
#line 429 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp10_ = self->priv->tasks_list;
#line 429 "/run/build/planner/src/Views/Upcoming.vala"
					_tmp11_ = element;
#line 429 "/run/build/planner/src/Views/Upcoming.vala"
					gtk_container_remove ((GtkContainer*) _tmp10_, _tmp11_);
#line 3774 "Upcoming.c"
				}
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (row);
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
				_g_object_unref0 (element);
#line 3780 "Upcoming.c"
			}
		}
#line 425 "/run/build/planner/src/Views/Upcoming.vala"
		(element_collection == NULL) ? NULL : (element_collection = (g_list_free (element_collection), NULL));
#line 3785 "Upcoming.c"
	}
}


static void
__views_upcoming___lambda354__services_database_on_signal_remove_task (ServicesDatabase* _sender,
                                                                       ObjectsTask* task,
                                                                       gpointer self)
{
#line 424 "/run/build/planner/src/Views/Upcoming.vala"
	_views_upcoming___lambda354_ ((ViewsUpcoming*) self, task);
#line 3797 "Upcoming.c"
}


static GObject *
views_upcoming_constructor (GType type,
                            guint n_construct_properties,
                            GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	ViewsUpcoming * self;
	Block29Data* _data29_;
	GtkStyleContext* _tmp0_;
	WidgetsAlertView* _tmp1_;
	GtkImage* upcoming_icon = NULL;
	GtkImage* _tmp2_;
	GtkLabel* upcoming_label = NULL;
	gchar* _tmp3_;
	gchar* _tmp4_;
	GtkLabel* _tmp5_;
	GtkLabel* _tmp6_;
	GtkLabel* _tmp7_;
	GtkStyleContext* _tmp8_;
	GtkLabel* _tmp9_;
	GtkToggleButton* _tmp10_;
	GtkToggleButton* _tmp11_;
	GtkToggleButton* _tmp12_;
	GtkToggleButton* _tmp13_;
	GtkStyleContext* _tmp14_;
	GtkToggleButton* _tmp15_;
	GtkImage* _tmp16_;
	GtkToggleButton* _tmp17_;
	GtkImage* _tmp18_;
	GtkToggleButton* _tmp19_;
	GtkButton* paste_button = NULL;
	GtkButton* _tmp20_;
	GtkButton* _tmp21_;
	GtkStyleContext* _tmp22_;
	GtkButton* _tmp23_;
	GtkButton* _tmp24_;
	GtkButton* _tmp25_;
	GtkButton* labels_button = NULL;
	GtkButton* _tmp26_;
	GtkButton* _tmp27_;
	GtkStyleContext* _tmp28_;
	GtkButton* _tmp29_;
	GtkButton* _tmp30_;
	GtkButton* _tmp31_;
	GtkButton* _tmp32_;
	WidgetsPopoversLabelsPopover* _tmp33_;
	WidgetsPopoversLabelsPopover* _tmp34_;
	GtkButton* share_button = NULL;
	GtkButton* _tmp35_;
	GtkButton* _tmp36_;
	GtkStyleContext* _tmp37_;
	GtkButton* _tmp38_;
	GtkButton* _tmp39_;
	GtkButton* _tmp40_;
	GtkButton* _tmp41_;
	GtkGrid* action_grid = NULL;
	GtkGrid* _tmp42_;
	GtkGrid* _tmp43_;
	GtkGrid* _tmp44_;
	GtkButton* _tmp45_;
	GtkGrid* _tmp46_;
	GtkButton* _tmp47_;
	GtkGrid* _tmp48_;
	GtkButton* _tmp49_;
	GtkGrid* _tmp50_;
	GtkToggleButton* _tmp51_;
	GtkBox* top_box = NULL;
	GtkBox* _tmp52_;
	GtkBox* _tmp53_;
	GtkBox* _tmp54_;
	GtkBox* _tmp55_;
	GtkBox* _tmp56_;
	GtkBox* _tmp57_;
	GtkImage* _tmp58_;
	GtkBox* _tmp59_;
	GtkLabel* _tmp60_;
	GtkBox* _tmp61_;
	GtkGrid* _tmp62_;
	GtkListBox* _tmp63_;
	GtkListBox* _tmp64_;
	GtkListBox* _tmp65_;
	GtkListBox* _tmp66_;
	GtkListBox* _tmp67_;
	GtkButton* _tmp68_;
	GtkButton* _tmp69_;
	GtkButton* _tmp70_;
	GtkButton* _tmp71_;
	GtkStyleContext* _tmp72_;
	GtkButton* _tmp73_;
	GtkStyleContext* _tmp74_;
	GtkButton* _tmp75_;
	GtkRevealer* _tmp76_;
	GtkRevealer* _tmp77_;
	GtkRevealer* _tmp78_;
	GtkRevealer* _tmp79_;
	GtkRevealer* _tmp80_;
	GtkButton* _tmp81_;
	GtkRevealer* _tmp82_;
	GtkRevealer* _tmp83_;
	WidgetsTaskNew* _tmp84_;
	WidgetsTaskNew* _tmp85_;
	WidgetsTaskNew* _tmp86_;
	GDateTime* _tmp87_;
	GDateTime* _tmp88_;
	GDateTime* _tmp89_;
	GDateTime* _tmp90_;
	GtkFlowBox* _tmp91_;
	GtkFlowBox* _tmp92_;
	GtkFlowBox* _tmp93_;
	GtkFlowBox* _tmp94_;
	GtkFlowBox* _tmp95_;
	GtkRevealer* _tmp96_;
	GtkRevealer* _tmp97_;
	GtkRevealer* _tmp98_;
	GtkRevealer* _tmp99_;
	GtkFlowBox* _tmp100_;
	GtkRevealer* _tmp101_;
	GtkBox* t_box = NULL;
	GtkBox* _tmp102_;
	GtkBox* _tmp103_;
	GtkBox* _tmp104_;
	GtkBox* _tmp105_;
	GtkBox* _tmp106_;
	GtkRevealer* _tmp107_;
	GtkBox* b_box = NULL;
	GtkBox* _tmp108_;
	GtkBox* _tmp109_;
	GtkBox* _tmp110_;
	GtkListBox* _tmp111_;
	GtkStack* _tmp112_;
	GtkStack* _tmp113_;
	GtkStack* _tmp114_;
	GtkStack* _tmp115_;
	GtkStack* _tmp116_;
	GtkStack* _tmp117_;
	GtkStack* _tmp118_;
	GtkBox* _tmp119_;
	GtkStack* _tmp120_;
	WidgetsAlertView* _tmp121_;
	GtkStack* _tmp122_;
	GtkBox* box = NULL;
	GtkBox* _tmp123_;
	GtkBox* _tmp124_;
	GtkBox* _tmp125_;
	GtkBox* _tmp126_;
	GtkBox* _tmp127_;
	GtkStack* _tmp128_;
	GtkScrolledWindow* scrolled = NULL;
	GtkScrolledWindow* _tmp129_;
	GtkScrolledWindow* _tmp130_;
	GtkBox* _tmp131_;
	GtkBox* main_box = NULL;
	GtkBox* _tmp132_;
	GtkBox* _tmp133_;
	GtkBox* _tmp134_;
	GtkScrolledWindow* _tmp135_;
	GtkOverlay* main_overlay = NULL;
	GtkOverlay* _tmp136_;
	GtkOverlay* _tmp137_;
	GtkRevealer* _tmp138_;
	GtkOverlay* _tmp139_;
	WidgetsTaskNew* _tmp140_;
	GtkOverlay* _tmp141_;
	GtkBox* _tmp142_;
	GtkOverlay* _tmp143_;
	Utils* _tmp144_;
	GtkListBox* _tmp145_;
	GtkListBox* _tmp146_;
	GtkListBox* _tmp147_;
	GdkDisplay* display = NULL;
	GdkDisplay* _tmp148_;
	GdkDisplay* _tmp149_;
	GdkDisplay* _tmp150_;
	GtkClipboard* _tmp151_;
	GtkClipboard* _tmp152_;
	GtkButton* _tmp153_;
	WidgetsTaskNew* _tmp154_;
	GtkButton* _tmp155_;
	GtkButton* _tmp156_;
	WidgetsPopoversLabelsPopover* _tmp157_;
	GtkFlowBox* _tmp158_;
	GtkListBox* _tmp159_;
	ServicesDatabase* _tmp160_;
	ServicesDatabase* _tmp161_;
	ServicesDatabase* _tmp162_;
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	parent_class = G_OBJECT_CLASS (views_upcoming_parent_class);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, VIEWS_TYPE_UPCOMING, ViewsUpcoming);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_data29_ = g_slice_new0 (Block29Data);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_data29_->_ref_count_ = 1;
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_data29_->self = g_object_ref (self);
#line 40 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp0_ = gtk_widget_get_style_context ((GtkWidget*) self);
#line 40 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_style_context_add_class (_tmp0_, GRANITE_STYLE_CLASS_WELCOME);
#line 42 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp1_ = widgets_alert_view_new (_ ("Get a bird's eye view of yours upcoming tasks"), _ ("This is your timeline for the next tasks."), "office-calendar-symbolic");
#line 42 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp1_);
#line 42 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->alert_view);
#line 42 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv->alert_view = _tmp1_;
#line 48 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp2_ = (GtkImage*) gtk_image_new_from_icon_name ("planner-upcoming", (GtkIconSize) GTK_ICON_SIZE_DND);
#line 48 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp2_);
#line 48 "/run/build/planner/src/Views/Upcoming.vala"
	upcoming_icon = _tmp2_;
#line 50 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp3_ = g_strdup_printf ("<b>%s</b>", _ ("Upcoming"));
#line 50 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp4_ = _tmp3_;
#line 50 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp5_ = (GtkLabel*) gtk_label_new (_tmp4_);
#line 50 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp5_);
#line 50 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp6_ = _tmp5_;
#line 50 "/run/build/planner/src/Views/Upcoming.vala"
	_g_free0 (_tmp4_);
#line 50 "/run/build/planner/src/Views/Upcoming.vala"
	upcoming_label = _tmp6_;
#line 51 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp7_ = upcoming_label;
#line 51 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 51 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_style_context_add_class (_tmp8_, GRANITE_STYLE_CLASS_H2_LABEL);
#line 52 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp9_ = upcoming_label;
#line 52 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_label_set_use_markup (_tmp9_, TRUE);
#line 54 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp10_ = (GtkToggleButton*) gtk_toggle_button_new ();
#line 54 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp10_);
#line 54 "/run/build/planner/src/Views/Upcoming.vala"
	_data29_->show_hide_all_button = _tmp10_;
#line 55 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp11_ = _data29_->show_hide_all_button;
#line 55 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp11_, GTK_ALIGN_CENTER);
#line 56 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp12_ = _data29_->show_hide_all_button;
#line 56 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp12_, GTK_ALIGN_CENTER);
#line 57 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp13_ = _data29_->show_hide_all_button;
#line 57 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp14_ = gtk_widget_get_style_context ((GtkWidget*) _tmp13_);
#line 57 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_style_context_add_class (_tmp14_, "planner-zoom-in-menu");
#line 58 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp15_ = _data29_->show_hide_all_button;
#line 58 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_tooltip_text ((GtkWidget*) _tmp15_, _ ("Open all tasks"));
#line 60 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp16_ = (GtkImage*) gtk_image_new_from_icon_name ("zoom-in-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 60 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp16_);
#line 60 "/run/build/planner/src/Views/Upcoming.vala"
	_data29_->show_hide_image = _tmp16_;
#line 61 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp17_ = _data29_->show_hide_all_button;
#line 61 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp18_ = _data29_->show_hide_image;
#line 61 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp17_, (GtkWidget*) _tmp18_);
#line 63 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp19_ = _data29_->show_hide_all_button;
#line 63 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_data (_tmp19_, "toggled", (GCallback) __views_upcoming___lambda334__gtk_toggle_button_toggled, block29_data_ref (_data29_), (GClosureNotify) block29_data_unref, 0);
#line 83 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp20_ = (GtkButton*) gtk_button_new_from_icon_name ("planner-paste-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 83 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp20_);
#line 83 "/run/build/planner/src/Views/Upcoming.vala"
	paste_button = _tmp20_;
#line 84 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp21_ = paste_button;
#line 84 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp22_ = gtk_widget_get_style_context ((GtkWidget*) _tmp21_);
#line 84 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_style_context_add_class (_tmp22_, "planner-paste-menu");
#line 85 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp23_ = paste_button;
#line 85 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_tooltip_text ((GtkWidget*) _tmp23_, _ ("Paste"));
#line 86 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp24_ = paste_button;
#line 86 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp24_, GTK_ALIGN_CENTER);
#line 87 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp25_ = paste_button;
#line 87 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp25_, GTK_ALIGN_CENTER);
#line 89 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp26_ = (GtkButton*) gtk_button_new_from_icon_name ("planner-label-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 89 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp26_);
#line 89 "/run/build/planner/src/Views/Upcoming.vala"
	labels_button = _tmp26_;
#line 90 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp27_ = labels_button;
#line 90 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp28_ = gtk_widget_get_style_context ((GtkWidget*) _tmp27_);
#line 90 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_style_context_add_class (_tmp28_, "planner-label-menu");
#line 91 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp29_ = labels_button;
#line 91 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_tooltip_text ((GtkWidget*) _tmp29_, _ ("Filter by Label"));
#line 92 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp30_ = labels_button;
#line 92 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp30_, GTK_ALIGN_CENTER);
#line 93 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp31_ = labels_button;
#line 93 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp31_, GTK_ALIGN_CENTER);
#line 95 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp32_ = labels_button;
#line 95 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp33_ = widgets_popovers_labels_popover_new ((GtkWidget*) _tmp32_);
#line 95 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp33_);
#line 95 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->labels_popover);
#line 95 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv->labels_popover = _tmp33_;
#line 96 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp34_ = self->priv->labels_popover;
#line 96 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_popover_set_position ((GtkPopover*) _tmp34_, GTK_POS_BOTTOM);
#line 98 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp35_ = (GtkButton*) gtk_button_new_from_icon_name ("planner-share-symbolic", (GtkIconSize) GTK_ICON_SIZE_MENU);
#line 98 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp35_);
#line 98 "/run/build/planner/src/Views/Upcoming.vala"
	share_button = _tmp35_;
#line 99 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp36_ = share_button;
#line 99 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp37_ = gtk_widget_get_style_context ((GtkWidget*) _tmp36_);
#line 99 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_style_context_add_class (_tmp37_, "planner-share-menu");
#line 100 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp38_ = share_button;
#line 100 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_tooltip_text ((GtkWidget*) _tmp38_, _ ("Share"));
#line 101 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp39_ = share_button;
#line 101 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp39_, GTK_ALIGN_CENTER);
#line 102 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp40_ = share_button;
#line 102 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp40_, GTK_ALIGN_CENTER);
#line 104 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp41_ = share_button;
#line 104 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object (_tmp41_, "clicked", (GCallback) __views_upcoming___lambda335__gtk_button_clicked, self, 0);
#line 111 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp42_ = (GtkGrid*) gtk_grid_new ();
#line 111 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp42_);
#line 111 "/run/build/planner/src/Views/Upcoming.vala"
	action_grid = _tmp42_;
#line 112 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp43_ = action_grid;
#line 112 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_grid_set_column_spacing (_tmp43_, 12);
#line 114 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp44_ = action_grid;
#line 114 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp45_ = labels_button;
#line 114 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp44_, (GtkWidget*) _tmp45_);
#line 115 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp46_ = action_grid;
#line 115 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp47_ = paste_button;
#line 115 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp46_, (GtkWidget*) _tmp47_);
#line 116 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp48_ = action_grid;
#line 116 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp49_ = share_button;
#line 116 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp48_, (GtkWidget*) _tmp49_);
#line 117 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp50_ = action_grid;
#line 117 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp51_ = _data29_->show_hide_all_button;
#line 117 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp50_, (GtkWidget*) _tmp51_);
#line 119 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp52_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 0);
#line 119 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp52_);
#line 119 "/run/build/planner/src/Views/Upcoming.vala"
	top_box = _tmp52_;
#line 120 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp53_ = top_box;
#line 120 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp53_, GTK_ALIGN_START);
#line 121 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp54_ = top_box;
#line 121 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp54_, TRUE);
#line 122 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp55_ = top_box;
#line 122 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp55_, 12);
#line 123 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp56_ = top_box;
#line 123 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp56_, 12);
#line 125 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp57_ = top_box;
#line 125 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp58_ = upcoming_icon;
#line 125 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_start (_tmp57_, (GtkWidget*) _tmp58_, FALSE, FALSE, (guint) 0);
#line 126 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp59_ = top_box;
#line 126 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp60_ = upcoming_label;
#line 126 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_start (_tmp59_, (GtkWidget*) _tmp60_, FALSE, FALSE, (guint) 12);
#line 127 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp61_ = top_box;
#line 127 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp62_ = action_grid;
#line 127 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_end (_tmp61_, (GtkWidget*) _tmp62_, FALSE, FALSE, (guint) 12);
#line 129 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp63_ = (GtkListBox*) gtk_list_box_new ();
#line 129 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp63_);
#line 129 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->tasks_list);
#line 129 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv->tasks_list = _tmp63_;
#line 130 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp64_ = self->priv->tasks_list;
#line 130 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_set_activate_on_single_click (_tmp64_, TRUE);
#line 131 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp65_ = self->priv->tasks_list;
#line 131 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_set_selection_mode (_tmp65_, GTK_SELECTION_SINGLE);
#line 132 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp66_ = self->priv->tasks_list;
#line 132 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp66_, GTK_ALIGN_START);
#line 133 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp67_ = self->priv->tasks_list;
#line 133 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp67_, TRUE);
#line 135 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp68_ = (GtkButton*) gtk_button_new_from_icon_name ("list-add-symbolic", (GtkIconSize) GTK_ICON_SIZE_SMALL_TOOLBAR);
#line 135 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp68_);
#line 135 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->add_task_button);
#line 135 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv->add_task_button = _tmp68_;
#line 136 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp69_ = self->priv->add_task_button;
#line 136 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp69_, "height-request", 32, NULL);
#line 137 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp70_ = self->priv->add_task_button;
#line 137 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp70_, "width-request", 32, NULL);
#line 138 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp71_ = self->priv->add_task_button;
#line 138 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp72_ = gtk_widget_get_style_context ((GtkWidget*) _tmp71_);
#line 138 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_style_context_add_class (_tmp72_, "button-circular");
#line 139 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp73_ = self->priv->add_task_button;
#line 139 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp74_ = gtk_widget_get_style_context ((GtkWidget*) _tmp73_);
#line 139 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_style_context_add_class (_tmp74_, "no-padding");
#line 140 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp75_ = self->priv->add_task_button;
#line 140 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_tooltip_text ((GtkWidget*) _tmp75_, _ ("Add new task"));
#line 142 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp76_ = (GtkRevealer*) gtk_revealer_new ();
#line 142 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp76_);
#line 142 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->add_task_revealer);
#line 142 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv->add_task_revealer = _tmp76_;
#line 143 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp77_ = self->priv->add_task_revealer;
#line 143 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp77_, GTK_ALIGN_END);
#line 144 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp78_ = self->priv->add_task_revealer;
#line 144 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_halign ((GtkWidget*) _tmp78_, GTK_ALIGN_END);
#line 145 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp79_ = self->priv->add_task_revealer;
#line 145 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_revealer_set_transition_type (_tmp79_, GTK_REVEALER_TRANSITION_TYPE_CROSSFADE);
#line 146 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp80_ = self->priv->add_task_revealer;
#line 146 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp81_ = self->priv->add_task_button;
#line 146 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp80_, (GtkWidget*) _tmp81_);
#line 147 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp82_ = self->priv->add_task_revealer;
#line 147 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp82_, "margin", 12, NULL);
#line 148 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp83_ = self->priv->add_task_revealer;
#line 148 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_revealer_set_reveal_child (_tmp83_, TRUE);
#line 150 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp84_ = widgets_task_new_new (TRUE, 0);
#line 150 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp84_);
#line 150 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->task_new_revealer);
#line 150 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv->task_new_revealer = _tmp84_;
#line 151 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp85_ = self->priv->task_new_revealer;
#line 151 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_valign ((GtkWidget*) _tmp85_, GTK_ALIGN_END);
#line 152 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp86_ = self->priv->task_new_revealer;
#line 152 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp87_ = g_date_time_new_now_local ();
#line 152 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp88_ = _tmp87_;
#line 152 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp89_ = g_date_time_add_days (_tmp88_, 1);
#line 152 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp90_ = _tmp89_;
#line 152 "/run/build/planner/src/Views/Upcoming.vala"
	widgets_task_new_set_when_datetime (_tmp86_, _tmp90_);
#line 152 "/run/build/planner/src/Views/Upcoming.vala"
	_g_date_time_unref0 (_tmp90_);
#line 152 "/run/build/planner/src/Views/Upcoming.vala"
	_g_date_time_unref0 (_tmp88_);
#line 154 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp91_ = (GtkFlowBox*) gtk_flow_box_new ();
#line 154 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp91_);
#line 154 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->labels_flowbox);
#line 154 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv->labels_flowbox = _tmp91_;
#line 155 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp92_ = self->priv->labels_flowbox;
#line 155 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_flow_box_set_selection_mode (_tmp92_, GTK_SELECTION_NONE);
#line 156 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp93_ = self->priv->labels_flowbox;
#line 156 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp93_, 6);
#line 157 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp94_ = self->priv->labels_flowbox;
#line 157 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp94_, "height-request", 38, NULL);
#line 158 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp95_ = self->priv->labels_flowbox;
#line 158 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp95_, "expand", FALSE, NULL);
#line 160 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp96_ = (GtkRevealer*) gtk_revealer_new ();
#line 160 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp96_);
#line 160 "/run/build/planner/src/Views/Upcoming.vala"
	_data29_->labels_flowbox_revealer = _tmp96_;
#line 161 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp97_ = _data29_->labels_flowbox_revealer;
#line 161 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp97_, 3);
#line 162 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp98_ = _data29_->labels_flowbox_revealer;
#line 162 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_margin_top ((GtkWidget*) _tmp98_, 6);
#line 163 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp99_ = _data29_->labels_flowbox_revealer;
#line 163 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp100_ = self->priv->labels_flowbox;
#line 163 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp99_, (GtkWidget*) _tmp100_);
#line 164 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp101_ = _data29_->labels_flowbox_revealer;
#line 164 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_revealer_set_reveal_child (_tmp101_, FALSE);
#line 166 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp102_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_VERTICAL, 0);
#line 166 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp102_);
#line 166 "/run/build/planner/src/Views/Upcoming.vala"
	t_box = _tmp102_;
#line 167 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp103_ = t_box;
#line 167 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_hexpand ((GtkWidget*) _tmp103_, TRUE);
#line 168 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp104_ = t_box;
#line 168 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp105_ = top_box;
#line 168 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_start (_tmp104_, (GtkWidget*) _tmp105_, FALSE, FALSE, (guint) 0);
#line 169 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp106_ = t_box;
#line 169 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp107_ = _data29_->labels_flowbox_revealer;
#line 169 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_start (_tmp106_, (GtkWidget*) _tmp107_, FALSE, FALSE, (guint) 0);
#line 171 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp108_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_VERTICAL, 0);
#line 171 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp108_);
#line 171 "/run/build/planner/src/Views/Upcoming.vala"
	b_box = _tmp108_;
#line 172 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp109_ = b_box;
#line 172 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp109_, "expand", TRUE, NULL);
#line 173 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp110_ = b_box;
#line 173 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp111_ = self->priv->tasks_list;
#line 173 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_start (_tmp110_, (GtkWidget*) _tmp111_, FALSE, TRUE, (guint) 0);
#line 175 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp112_ = (GtkStack*) gtk_stack_new ();
#line 175 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp112_);
#line 175 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->main_stack);
#line 175 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv->main_stack = _tmp112_;
#line 176 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp113_ = self->priv->main_stack;
#line 176 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp113_, "expand", TRUE, NULL);
#line 177 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp114_ = self->priv->main_stack;
#line 177 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_margin_start ((GtkWidget*) _tmp114_, 9);
#line 178 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp115_ = self->priv->main_stack;
#line 178 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_widget_set_margin_bottom ((GtkWidget*) _tmp115_, 9);
#line 179 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp116_ = self->priv->main_stack;
#line 179 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_stack_set_transition_duration (_tmp116_, (guint) 350);
#line 180 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp117_ = self->priv->main_stack;
#line 180 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_stack_set_transition_type (_tmp117_, GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT);
#line 182 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp118_ = self->priv->main_stack;
#line 182 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp119_ = b_box;
#line 182 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_stack_add_named (_tmp118_, (GtkWidget*) _tmp119_, "main");
#line 183 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp120_ = self->priv->main_stack;
#line 183 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp121_ = self->priv->alert_view;
#line 183 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_stack_add_named (_tmp120_, (GtkWidget*) _tmp121_, "alert");
#line 185 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp122_ = self->priv->main_stack;
#line 185 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_stack_set_visible_child_name (_tmp122_, "main");
#line 187 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp123_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_VERTICAL, 0);
#line 187 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp123_);
#line 187 "/run/build/planner/src/Views/Upcoming.vala"
	box = _tmp123_;
#line 188 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp124_ = box;
#line 188 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp124_, "expand", TRUE, NULL);
#line 189 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp125_ = box;
#line 189 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp126_ = t_box;
#line 189 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_start (_tmp125_, (GtkWidget*) _tmp126_, FALSE, TRUE, (guint) 0);
#line 190 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp127_ = box;
#line 190 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp128_ = self->priv->main_stack;
#line 190 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_start (_tmp127_, (GtkWidget*) _tmp128_, FALSE, TRUE, (guint) 0);
#line 192 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp129_ = (GtkScrolledWindow*) gtk_scrolled_window_new (NULL, NULL);
#line 192 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp129_);
#line 192 "/run/build/planner/src/Views/Upcoming.vala"
	scrolled = _tmp129_;
#line 193 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp130_ = scrolled;
#line 193 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp131_ = box;
#line 193 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp130_, (GtkWidget*) _tmp131_);
#line 195 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp132_ = (GtkBox*) gtk_box_new (GTK_ORIENTATION_VERTICAL, 0);
#line 195 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp132_);
#line 195 "/run/build/planner/src/Views/Upcoming.vala"
	main_box = _tmp132_;
#line 196 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp133_ = main_box;
#line 196 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_set ((GtkWidget*) _tmp133_, "expand", TRUE, NULL);
#line 197 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp134_ = main_box;
#line 197 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp135_ = scrolled;
#line 197 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_box_pack_start (_tmp134_, (GtkWidget*) _tmp135_, TRUE, TRUE, (guint) 0);
#line 199 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp136_ = (GtkOverlay*) gtk_overlay_new ();
#line 199 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_ref_sink (_tmp136_);
#line 199 "/run/build/planner/src/Views/Upcoming.vala"
	main_overlay = _tmp136_;
#line 200 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp137_ = main_overlay;
#line 200 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp138_ = self->priv->add_task_revealer;
#line 200 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_overlay_add_overlay (_tmp137_, (GtkWidget*) _tmp138_);
#line 201 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp139_ = main_overlay;
#line 201 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp140_ = self->priv->task_new_revealer;
#line 201 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_overlay_add_overlay (_tmp139_, (GtkWidget*) _tmp140_);
#line 202 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp141_ = main_overlay;
#line 202 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp142_ = main_box;
#line 202 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) _tmp141_, (GtkWidget*) _tmp142_);
#line 204 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp143_ = main_overlay;
#line 204 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_container_add ((GtkContainer*) self, (GtkWidget*) _tmp143_);
#line 205 "/run/build/planner/src/Views/Upcoming.vala"
	views_upcoming_update_tasks_list (self);
#line 206 "/run/build/planner/src/Views/Upcoming.vala"
	views_upcoming_check_visible_alertview (self);
#line 208 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp144_ = application_utils;
#line 208 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp145_ = self->priv->tasks_list;
#line 208 "/run/build/planner/src/Views/Upcoming.vala"
	if (utils_is_listbox_empty (_tmp144_, _tmp145_)) {
#line 209 "/run/build/planner/src/Views/Upcoming.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 200, __views_upcoming____lambda336__gsource_func, g_object_ref (self), g_object_unref);
#line 4583 "Upcoming.c"
	} else {
#line 214 "/run/build/planner/src/Views/Upcoming.vala"
		g_timeout_add_full (G_PRIORITY_DEFAULT, (guint) 200, __views_upcoming____lambda337__gsource_func, g_object_ref (self), g_object_unref);
#line 4587 "Upcoming.c"
	}
#line 220 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp146_ = self->priv->tasks_list;
#line 220 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_set_filter_func (_tmp146_, __views_upcoming___lambda338__gtk_list_box_filter_func, g_object_ref (self), g_object_unref);
#line 225 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp147_ = self->priv->tasks_list;
#line 225 "/run/build/planner/src/Views/Upcoming.vala"
	gtk_list_box_set_sort_func (_tmp147_, __views_upcoming___lambda339__gtk_list_box_sort_func, g_object_ref (self), g_object_unref);
#line 235 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp148_ = gdk_display_get_default ();
#line 235 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp149_ = _g_object_ref0 (_tmp148_);
#line 235 "/run/build/planner/src/Views/Upcoming.vala"
	display = _tmp149_;
#line 236 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp150_ = display;
#line 236 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp151_ = gtk_clipboard_get_for_display (_tmp150_, GDK_SELECTION_CLIPBOARD);
#line 236 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp152_ = _g_object_ref0 (_tmp151_);
#line 236 "/run/build/planner/src/Views/Upcoming.vala"
	_data29_->clipboard = _tmp152_;
#line 239 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp153_ = self->priv->add_task_button;
#line 239 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object (_tmp153_, "clicked", (GCallback) __views_upcoming___lambda340__gtk_button_clicked, self, 0);
#line 243 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp154_ = self->priv->task_new_revealer;
#line 243 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object (_tmp154_, "on-signal-close", (GCallback) __views_upcoming___lambda341__widgets_task_new_on_signal_close, self, 0);
#line 247 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp155_ = paste_button;
#line 247 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_data (_tmp155_, "clicked", (GCallback) __views_upcoming___lambda342__gtk_button_clicked, block29_data_ref (_data29_), (GClosureNotify) block29_data_unref, 0);
#line 281 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object ((GtkWidget*) self, "event", (GCallback) __views_upcoming___lambda343__gtk_widget_event, self, 0);
#line 312 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp156_ = labels_button;
#line 312 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object (_tmp156_, "clicked", (GCallback) __views_upcoming___lambda344__gtk_button_clicked, self, 0);
#line 317 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp157_ = self->priv->labels_popover;
#line 317 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_data (_tmp157_, "on-selected-label", (GCallback) __views_upcoming___lambda345__widgets_popovers_labels_popover_on_selected_label, block29_data_ref (_data29_), (GClosureNotify) block29_data_unref, 0);
#line 353 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp158_ = self->priv->labels_flowbox;
#line 353 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_data ((GtkContainer*) _tmp158_, "remove", (GCallback) __views_upcoming___lambda347__gtk_container_remove, block29_data_ref (_data29_), (GClosureNotify) block29_data_unref, 0);
#line 387 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp159_ = self->priv->tasks_list;
#line 387 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object ((GtkContainer*) _tmp159_, "remove", (GCallback) __views_upcoming___lambda350__gtk_container_remove, self, 0);
#line 391 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp160_ = application_database;
#line 391 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object (_tmp160_, "update-task-signal", (GCallback) __views_upcoming___lambda351__services_database_update_task_signal, self, 0);
#line 420 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp161_ = application_database;
#line 420 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object (_tmp161_, "add-task-signal", (GCallback) __views_upcoming___lambda353__services_database_add_task_signal, self, 0);
#line 424 "/run/build/planner/src/Views/Upcoming.vala"
	_tmp162_ = application_database;
#line 424 "/run/build/planner/src/Views/Upcoming.vala"
	g_signal_connect_object (_tmp162_, "on-signal-remove-task", (GCallback) __views_upcoming___lambda354__services_database_on_signal_remove_task, self, 0);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (display);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (main_overlay);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (main_box);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (scrolled);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (box);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (b_box);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (t_box);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (top_box);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (action_grid);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (share_button);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (labels_button);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (paste_button);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (upcoming_label);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (upcoming_icon);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	block29_data_unref (_data29_);
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	_data29_ = NULL;
#line 39 "/run/build/planner/src/Views/Upcoming.vala"
	return obj;
#line 4687 "Upcoming.c"
}


static void
views_upcoming_class_init (ViewsUpcomingClass * klass)
{
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	views_upcoming_parent_class = g_type_class_peek_parent (klass);
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	g_type_class_add_private (klass, sizeof (ViewsUpcomingPrivate));
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_views_upcoming_get_property;
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_views_upcoming_set_property;
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	G_OBJECT_CLASS (klass)->constructor = views_upcoming_constructor;
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	G_OBJECT_CLASS (klass)->finalize = views_upcoming_finalize;
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), VIEWS_UPCOMING_WINDOW_PROPERTY, views_upcoming_properties[VIEWS_UPCOMING_WINDOW_PROPERTY] = g_param_spec_object ("window", "window", "window", TYPE_MAIN_WINDOW, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
#line 4708 "Upcoming.c"
}


static void
views_upcoming_instance_init (ViewsUpcoming * self)
{
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	self->priv = VIEWS_UPCOMING_GET_PRIVATE (self);
#line 4717 "Upcoming.c"
}


static void
views_upcoming_finalize (GObject * obj)
{
	ViewsUpcoming * self;
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, VIEWS_TYPE_UPCOMING, ViewsUpcoming);
#line 23 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->_window);
#line 24 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->task_new_revealer);
#line 25 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->tasks_list);
#line 26 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->add_task_button);
#line 27 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->add_task_revealer);
#line 28 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->labels_flowbox);
#line 29 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->alert_view);
#line 30 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->labels_popover);
#line 31 "/run/build/planner/src/Views/Upcoming.vala"
	_g_object_unref0 (self->priv->main_stack);
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	G_OBJECT_CLASS (views_upcoming_parent_class)->finalize (obj);
#line 4747 "Upcoming.c"
}


GType
views_upcoming_get_type (void)
{
	static volatile gsize views_upcoming_type_id__volatile = 0;
	if (g_once_init_enter (&views_upcoming_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (ViewsUpcomingClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) views_upcoming_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (ViewsUpcoming), 0, (GInstanceInitFunc) views_upcoming_instance_init, NULL };
		GType views_upcoming_type_id;
		views_upcoming_type_id = g_type_register_static (gtk_event_box_get_type (), "ViewsUpcoming", &g_define_type_info, 0);
		g_once_init_leave (&views_upcoming_type_id__volatile, views_upcoming_type_id);
	}
	return views_upcoming_type_id__volatile;
}


static void
_vala_views_upcoming_get_property (GObject * object,
                                   guint property_id,
                                   GValue * value,
                                   GParamSpec * pspec)
{
	ViewsUpcoming * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, VIEWS_TYPE_UPCOMING, ViewsUpcoming);
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	switch (property_id) {
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		case VIEWS_UPCOMING_WINDOW_PROPERTY:
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		g_value_set_object (value, views_upcoming_get_window (self));
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		break;
#line 4781 "Upcoming.c"
		default:
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		break;
#line 4787 "Upcoming.c"
	}
}


static void
_vala_views_upcoming_set_property (GObject * object,
                                   guint property_id,
                                   const GValue * value,
                                   GParamSpec * pspec)
{
	ViewsUpcoming * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, VIEWS_TYPE_UPCOMING, ViewsUpcoming);
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
	switch (property_id) {
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		case VIEWS_UPCOMING_WINDOW_PROPERTY:
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		views_upcoming_set_window (self, g_value_get_object (value));
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		break;
#line 4808 "Upcoming.c"
		default:
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 22 "/run/build/planner/src/Views/Upcoming.vala"
		break;
#line 4814 "Upcoming.c"
	}
}


static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}


static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}


static gint
_vala_array_length (gpointer array)
{
	int length;
	length = 0;
	if (array) {
		while (((gpointer*) array)[length]) {
			length++;
		}
	}
	return length;
}



