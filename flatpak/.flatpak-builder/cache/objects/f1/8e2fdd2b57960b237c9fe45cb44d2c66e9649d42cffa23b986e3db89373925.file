/* individual.c generated by valac 0.40.11, the Vala compiler
 * generated from individual.vala, do not modify */

/*
 * Copyright (C) 2010, 2015 Collabora Ltd.
 * Copyright (C) 2011, 2013 Philip Withnall
 *
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors:
 *       Travis Reitter <travis.reitter@collabora.co.uk>
 *       Philip Withnall <philip@tecnocode.co.uk>
 */


#include <glib.h>
#include <glib-object.h>
#include <gio/gio.h>
#include <stdlib.h>
#include <string.h>
#include <gee.h>
#include <folks/small-set.h>
#include <folks/small-set-internal.h>
#include <glib/gi18n-lib.h>


#define FOLKS_TYPE_TRUST_LEVEL (folks_trust_level_get_type ())

#define FOLKS_TYPE_ALIAS_DETAILS (folks_alias_details_get_type ())
#define FOLKS_ALIAS_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_ALIAS_DETAILS, FolksAliasDetails))
#define FOLKS_IS_ALIAS_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_ALIAS_DETAILS))
#define FOLKS_ALIAS_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_ALIAS_DETAILS, FolksAliasDetailsIface))

typedef struct _FolksAliasDetails FolksAliasDetails;
typedef struct _FolksAliasDetailsIface FolksAliasDetailsIface;

#define FOLKS_TYPE_AVATAR_DETAILS (folks_avatar_details_get_type ())
#define FOLKS_AVATAR_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_AVATAR_DETAILS, FolksAvatarDetails))
#define FOLKS_IS_AVATAR_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_AVATAR_DETAILS))
#define FOLKS_AVATAR_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_AVATAR_DETAILS, FolksAvatarDetailsIface))

typedef struct _FolksAvatarDetails FolksAvatarDetails;
typedef struct _FolksAvatarDetailsIface FolksAvatarDetailsIface;

#define FOLKS_TYPE_BIRTHDAY_DETAILS (folks_birthday_details_get_type ())
#define FOLKS_BIRTHDAY_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetails))
#define FOLKS_IS_BIRTHDAY_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_BIRTHDAY_DETAILS))
#define FOLKS_BIRTHDAY_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetailsIface))

typedef struct _FolksBirthdayDetails FolksBirthdayDetails;
typedef struct _FolksBirthdayDetailsIface FolksBirthdayDetailsIface;

#define FOLKS_TYPE_EMAIL_DETAILS (folks_email_details_get_type ())
#define FOLKS_EMAIL_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_EMAIL_DETAILS, FolksEmailDetails))
#define FOLKS_IS_EMAIL_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_EMAIL_DETAILS))
#define FOLKS_EMAIL_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_EMAIL_DETAILS, FolksEmailDetailsIface))

typedef struct _FolksEmailDetails FolksEmailDetails;
typedef struct _FolksEmailDetailsIface FolksEmailDetailsIface;

#define FOLKS_TYPE_ABSTRACT_FIELD_DETAILS (folks_abstract_field_details_get_type ())
#define FOLKS_ABSTRACT_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS, FolksAbstractFieldDetails))
#define FOLKS_ABSTRACT_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS, FolksAbstractFieldDetailsClass))
#define FOLKS_IS_ABSTRACT_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS))
#define FOLKS_IS_ABSTRACT_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS))
#define FOLKS_ABSTRACT_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_ABSTRACT_FIELD_DETAILS, FolksAbstractFieldDetailsClass))

typedef struct _FolksAbstractFieldDetails FolksAbstractFieldDetails;
typedef struct _FolksAbstractFieldDetailsClass FolksAbstractFieldDetailsClass;

#define FOLKS_TYPE_EMAIL_FIELD_DETAILS (folks_email_field_details_get_type ())
#define FOLKS_EMAIL_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_EMAIL_FIELD_DETAILS, FolksEmailFieldDetails))
#define FOLKS_EMAIL_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_EMAIL_FIELD_DETAILS, FolksEmailFieldDetailsClass))
#define FOLKS_IS_EMAIL_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_EMAIL_FIELD_DETAILS))
#define FOLKS_IS_EMAIL_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_EMAIL_FIELD_DETAILS))
#define FOLKS_EMAIL_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_EMAIL_FIELD_DETAILS, FolksEmailFieldDetailsClass))

typedef struct _FolksEmailFieldDetails FolksEmailFieldDetails;
typedef struct _FolksEmailFieldDetailsClass FolksEmailFieldDetailsClass;

#define FOLKS_TYPE_EXTENDED_INFO (folks_extended_info_get_type ())
#define FOLKS_EXTENDED_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_EXTENDED_INFO, FolksExtendedInfo))
#define FOLKS_IS_EXTENDED_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_EXTENDED_INFO))
#define FOLKS_EXTENDED_INFO_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_EXTENDED_INFO, FolksExtendedInfoIface))

typedef struct _FolksExtendedInfo FolksExtendedInfo;
typedef struct _FolksExtendedInfoIface FolksExtendedInfoIface;

#define FOLKS_TYPE_EXTENDED_FIELD_DETAILS (folks_extended_field_details_get_type ())
#define FOLKS_EXTENDED_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_EXTENDED_FIELD_DETAILS, FolksExtendedFieldDetails))
#define FOLKS_EXTENDED_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_EXTENDED_FIELD_DETAILS, FolksExtendedFieldDetailsClass))
#define FOLKS_IS_EXTENDED_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_EXTENDED_FIELD_DETAILS))
#define FOLKS_IS_EXTENDED_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_EXTENDED_FIELD_DETAILS))
#define FOLKS_EXTENDED_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_EXTENDED_FIELD_DETAILS, FolksExtendedFieldDetailsClass))

typedef struct _FolksExtendedFieldDetails FolksExtendedFieldDetails;
typedef struct _FolksExtendedFieldDetailsClass FolksExtendedFieldDetailsClass;

#define FOLKS_TYPE_FAVOURITE_DETAILS (folks_favourite_details_get_type ())
#define FOLKS_FAVOURITE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_FAVOURITE_DETAILS, FolksFavouriteDetails))
#define FOLKS_IS_FAVOURITE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_FAVOURITE_DETAILS))
#define FOLKS_FAVOURITE_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_FAVOURITE_DETAILS, FolksFavouriteDetailsIface))

typedef struct _FolksFavouriteDetails FolksFavouriteDetails;
typedef struct _FolksFavouriteDetailsIface FolksFavouriteDetailsIface;

#define FOLKS_TYPE_GENDER_DETAILS (folks_gender_details_get_type ())
#define FOLKS_GENDER_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_GENDER_DETAILS, FolksGenderDetails))
#define FOLKS_IS_GENDER_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_GENDER_DETAILS))
#define FOLKS_GENDER_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_GENDER_DETAILS, FolksGenderDetailsIface))

typedef struct _FolksGenderDetails FolksGenderDetails;
typedef struct _FolksGenderDetailsIface FolksGenderDetailsIface;

#define FOLKS_TYPE_GENDER (folks_gender_get_type ())

#define FOLKS_TYPE_GROUP_DETAILS (folks_group_details_get_type ())
#define FOLKS_GROUP_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_GROUP_DETAILS, FolksGroupDetails))
#define FOLKS_IS_GROUP_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_GROUP_DETAILS))
#define FOLKS_GROUP_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_GROUP_DETAILS, FolksGroupDetailsIface))

typedef struct _FolksGroupDetails FolksGroupDetails;
typedef struct _FolksGroupDetailsIface FolksGroupDetailsIface;

#define FOLKS_TYPE_IM_DETAILS (folks_im_details_get_type ())
#define FOLKS_IM_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_IM_DETAILS, FolksImDetails))
#define FOLKS_IS_IM_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_IM_DETAILS))
#define FOLKS_IM_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_IM_DETAILS, FolksImDetailsIface))

typedef struct _FolksImDetails FolksImDetails;
typedef struct _FolksImDetailsIface FolksImDetailsIface;

#define FOLKS_TYPE_IM_FIELD_DETAILS (folks_im_field_details_get_type ())
#define FOLKS_IM_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_IM_FIELD_DETAILS, FolksImFieldDetails))
#define FOLKS_IM_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_IM_FIELD_DETAILS, FolksImFieldDetailsClass))
#define FOLKS_IS_IM_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_IM_FIELD_DETAILS))
#define FOLKS_IS_IM_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_IM_FIELD_DETAILS))
#define FOLKS_IM_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_IM_FIELD_DETAILS, FolksImFieldDetailsClass))

typedef struct _FolksImFieldDetails FolksImFieldDetails;
typedef struct _FolksImFieldDetailsClass FolksImFieldDetailsClass;

#define FOLKS_TYPE_INTERACTION_DETAILS (folks_interaction_details_get_type ())
#define FOLKS_INTERACTION_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_INTERACTION_DETAILS, FolksInteractionDetails))
#define FOLKS_IS_INTERACTION_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_INTERACTION_DETAILS))
#define FOLKS_INTERACTION_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_INTERACTION_DETAILS, FolksInteractionDetailsIface))

typedef struct _FolksInteractionDetails FolksInteractionDetails;
typedef struct _FolksInteractionDetailsIface FolksInteractionDetailsIface;

#define FOLKS_TYPE_LOCAL_ID_DETAILS (folks_local_id_details_get_type ())
#define FOLKS_LOCAL_ID_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_LOCAL_ID_DETAILS, FolksLocalIdDetails))
#define FOLKS_IS_LOCAL_ID_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_LOCAL_ID_DETAILS))
#define FOLKS_LOCAL_ID_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_LOCAL_ID_DETAILS, FolksLocalIdDetailsIface))

typedef struct _FolksLocalIdDetails FolksLocalIdDetails;
typedef struct _FolksLocalIdDetailsIface FolksLocalIdDetailsIface;

#define FOLKS_TYPE_LOCATION_DETAILS (folks_location_details_get_type ())
#define FOLKS_LOCATION_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_LOCATION_DETAILS, FolksLocationDetails))
#define FOLKS_IS_LOCATION_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_LOCATION_DETAILS))
#define FOLKS_LOCATION_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_LOCATION_DETAILS, FolksLocationDetailsIface))

typedef struct _FolksLocationDetails FolksLocationDetails;
typedef struct _FolksLocationDetailsIface FolksLocationDetailsIface;

#define FOLKS_TYPE_LOCATION (folks_location_get_type ())
#define FOLKS_LOCATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_LOCATION, FolksLocation))
#define FOLKS_LOCATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_LOCATION, FolksLocationClass))
#define FOLKS_IS_LOCATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_LOCATION))
#define FOLKS_IS_LOCATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_LOCATION))
#define FOLKS_LOCATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_LOCATION, FolksLocationClass))

typedef struct _FolksLocation FolksLocation;
typedef struct _FolksLocationClass FolksLocationClass;

#define FOLKS_TYPE_NAME_DETAILS (folks_name_details_get_type ())
#define FOLKS_NAME_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_NAME_DETAILS, FolksNameDetails))
#define FOLKS_IS_NAME_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_NAME_DETAILS))
#define FOLKS_NAME_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_NAME_DETAILS, FolksNameDetailsIface))

typedef struct _FolksNameDetails FolksNameDetails;
typedef struct _FolksNameDetailsIface FolksNameDetailsIface;

#define FOLKS_TYPE_STRUCTURED_NAME (folks_structured_name_get_type ())
#define FOLKS_STRUCTURED_NAME(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_STRUCTURED_NAME, FolksStructuredName))
#define FOLKS_STRUCTURED_NAME_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_STRUCTURED_NAME, FolksStructuredNameClass))
#define FOLKS_IS_STRUCTURED_NAME(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_STRUCTURED_NAME))
#define FOLKS_IS_STRUCTURED_NAME_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_STRUCTURED_NAME))
#define FOLKS_STRUCTURED_NAME_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_STRUCTURED_NAME, FolksStructuredNameClass))

typedef struct _FolksStructuredName FolksStructuredName;
typedef struct _FolksStructuredNameClass FolksStructuredNameClass;

#define FOLKS_TYPE_NOTE_DETAILS (folks_note_details_get_type ())
#define FOLKS_NOTE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_NOTE_DETAILS, FolksNoteDetails))
#define FOLKS_IS_NOTE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_NOTE_DETAILS))
#define FOLKS_NOTE_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_NOTE_DETAILS, FolksNoteDetailsIface))

typedef struct _FolksNoteDetails FolksNoteDetails;
typedef struct _FolksNoteDetailsIface FolksNoteDetailsIface;

#define FOLKS_TYPE_NOTE_FIELD_DETAILS (folks_note_field_details_get_type ())
#define FOLKS_NOTE_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_NOTE_FIELD_DETAILS, FolksNoteFieldDetails))
#define FOLKS_NOTE_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_NOTE_FIELD_DETAILS, FolksNoteFieldDetailsClass))
#define FOLKS_IS_NOTE_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_NOTE_FIELD_DETAILS))
#define FOLKS_IS_NOTE_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_NOTE_FIELD_DETAILS))
#define FOLKS_NOTE_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_NOTE_FIELD_DETAILS, FolksNoteFieldDetailsClass))

typedef struct _FolksNoteFieldDetails FolksNoteFieldDetails;
typedef struct _FolksNoteFieldDetailsClass FolksNoteFieldDetailsClass;

#define FOLKS_TYPE_PRESENCE_DETAILS (folks_presence_details_get_type ())
#define FOLKS_PRESENCE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetails))
#define FOLKS_IS_PRESENCE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_PRESENCE_DETAILS))
#define FOLKS_PRESENCE_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetailsIface))

typedef struct _FolksPresenceDetails FolksPresenceDetails;
typedef struct _FolksPresenceDetailsIface FolksPresenceDetailsIface;

#define FOLKS_TYPE_PRESENCE_TYPE (folks_presence_type_get_type ())

#define FOLKS_TYPE_PHONE_DETAILS (folks_phone_details_get_type ())
#define FOLKS_PHONE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_PHONE_DETAILS, FolksPhoneDetails))
#define FOLKS_IS_PHONE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_PHONE_DETAILS))
#define FOLKS_PHONE_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_PHONE_DETAILS, FolksPhoneDetailsIface))

typedef struct _FolksPhoneDetails FolksPhoneDetails;
typedef struct _FolksPhoneDetailsIface FolksPhoneDetailsIface;

#define FOLKS_TYPE_PHONE_FIELD_DETAILS (folks_phone_field_details_get_type ())
#define FOLKS_PHONE_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_PHONE_FIELD_DETAILS, FolksPhoneFieldDetails))
#define FOLKS_PHONE_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_PHONE_FIELD_DETAILS, FolksPhoneFieldDetailsClass))
#define FOLKS_IS_PHONE_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_PHONE_FIELD_DETAILS))
#define FOLKS_IS_PHONE_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_PHONE_FIELD_DETAILS))
#define FOLKS_PHONE_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_PHONE_FIELD_DETAILS, FolksPhoneFieldDetailsClass))

typedef struct _FolksPhoneFieldDetails FolksPhoneFieldDetails;
typedef struct _FolksPhoneFieldDetailsClass FolksPhoneFieldDetailsClass;

#define FOLKS_TYPE_POSTAL_ADDRESS_DETAILS (folks_postal_address_details_get_type ())
#define FOLKS_POSTAL_ADDRESS_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_POSTAL_ADDRESS_DETAILS, FolksPostalAddressDetails))
#define FOLKS_IS_POSTAL_ADDRESS_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_POSTAL_ADDRESS_DETAILS))
#define FOLKS_POSTAL_ADDRESS_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_POSTAL_ADDRESS_DETAILS, FolksPostalAddressDetailsIface))

typedef struct _FolksPostalAddressDetails FolksPostalAddressDetails;
typedef struct _FolksPostalAddressDetailsIface FolksPostalAddressDetailsIface;

#define FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS (folks_postal_address_field_details_get_type ())
#define FOLKS_POSTAL_ADDRESS_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetails))
#define FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetailsClass))
#define FOLKS_IS_POSTAL_ADDRESS_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS))
#define FOLKS_IS_POSTAL_ADDRESS_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS))
#define FOLKS_POSTAL_ADDRESS_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, FolksPostalAddressFieldDetailsClass))

typedef struct _FolksPostalAddressFieldDetails FolksPostalAddressFieldDetails;
typedef struct _FolksPostalAddressFieldDetailsClass FolksPostalAddressFieldDetailsClass;

#define FOLKS_TYPE_ROLE_DETAILS (folks_role_details_get_type ())
#define FOLKS_ROLE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_ROLE_DETAILS, FolksRoleDetails))
#define FOLKS_IS_ROLE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_ROLE_DETAILS))
#define FOLKS_ROLE_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_ROLE_DETAILS, FolksRoleDetailsIface))

typedef struct _FolksRoleDetails FolksRoleDetails;
typedef struct _FolksRoleDetailsIface FolksRoleDetailsIface;

#define FOLKS_TYPE_ROLE_FIELD_DETAILS (folks_role_field_details_get_type ())
#define FOLKS_ROLE_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_ROLE_FIELD_DETAILS, FolksRoleFieldDetails))
#define FOLKS_ROLE_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_ROLE_FIELD_DETAILS, FolksRoleFieldDetailsClass))
#define FOLKS_IS_ROLE_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_ROLE_FIELD_DETAILS))
#define FOLKS_IS_ROLE_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_ROLE_FIELD_DETAILS))
#define FOLKS_ROLE_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_ROLE_FIELD_DETAILS, FolksRoleFieldDetailsClass))

typedef struct _FolksRoleFieldDetails FolksRoleFieldDetails;
typedef struct _FolksRoleFieldDetailsClass FolksRoleFieldDetailsClass;

#define FOLKS_TYPE_URL_DETAILS (folks_url_details_get_type ())
#define FOLKS_URL_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_URL_DETAILS, FolksUrlDetails))
#define FOLKS_IS_URL_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_URL_DETAILS))
#define FOLKS_URL_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_URL_DETAILS, FolksUrlDetailsIface))

typedef struct _FolksUrlDetails FolksUrlDetails;
typedef struct _FolksUrlDetailsIface FolksUrlDetailsIface;

#define FOLKS_TYPE_URL_FIELD_DETAILS (folks_url_field_details_get_type ())
#define FOLKS_URL_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_URL_FIELD_DETAILS, FolksUrlFieldDetails))
#define FOLKS_URL_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_URL_FIELD_DETAILS, FolksUrlFieldDetailsClass))
#define FOLKS_IS_URL_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_URL_FIELD_DETAILS))
#define FOLKS_IS_URL_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_URL_FIELD_DETAILS))
#define FOLKS_URL_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_URL_FIELD_DETAILS, FolksUrlFieldDetailsClass))

typedef struct _FolksUrlFieldDetails FolksUrlFieldDetails;
typedef struct _FolksUrlFieldDetailsClass FolksUrlFieldDetailsClass;

#define FOLKS_TYPE_WEB_SERVICE_DETAILS (folks_web_service_details_get_type ())
#define FOLKS_WEB_SERVICE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_WEB_SERVICE_DETAILS, FolksWebServiceDetails))
#define FOLKS_IS_WEB_SERVICE_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_WEB_SERVICE_DETAILS))
#define FOLKS_WEB_SERVICE_DETAILS_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_WEB_SERVICE_DETAILS, FolksWebServiceDetailsIface))

typedef struct _FolksWebServiceDetails FolksWebServiceDetails;
typedef struct _FolksWebServiceDetailsIface FolksWebServiceDetailsIface;

#define FOLKS_TYPE_WEB_SERVICE_FIELD_DETAILS (folks_web_service_field_details_get_type ())
#define FOLKS_WEB_SERVICE_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_WEB_SERVICE_FIELD_DETAILS, FolksWebServiceFieldDetails))
#define FOLKS_WEB_SERVICE_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_WEB_SERVICE_FIELD_DETAILS, FolksWebServiceFieldDetailsClass))
#define FOLKS_IS_WEB_SERVICE_FIELD_DETAILS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_WEB_SERVICE_FIELD_DETAILS))
#define FOLKS_IS_WEB_SERVICE_FIELD_DETAILS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_WEB_SERVICE_FIELD_DETAILS))
#define FOLKS_WEB_SERVICE_FIELD_DETAILS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_WEB_SERVICE_FIELD_DETAILS, FolksWebServiceFieldDetailsClass))

typedef struct _FolksWebServiceFieldDetails FolksWebServiceFieldDetails;
typedef struct _FolksWebServiceFieldDetailsClass FolksWebServiceFieldDetailsClass;

#define FOLKS_TYPE_INDIVIDUAL (folks_individual_get_type ())
#define FOLKS_INDIVIDUAL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_INDIVIDUAL, FolksIndividual))
#define FOLKS_INDIVIDUAL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_INDIVIDUAL, FolksIndividualClass))
#define FOLKS_IS_INDIVIDUAL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_INDIVIDUAL))
#define FOLKS_IS_INDIVIDUAL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_INDIVIDUAL))
#define FOLKS_INDIVIDUAL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_INDIVIDUAL, FolksIndividualClass))

typedef struct _FolksIndividual FolksIndividual;
typedef struct _FolksIndividualClass FolksIndividualClass;
typedef struct _FolksIndividualPrivate FolksIndividualPrivate;

#define FOLKS_TYPE_PERSONA (folks_persona_get_type ())
#define FOLKS_PERSONA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_PERSONA, FolksPersona))
#define FOLKS_PERSONA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_PERSONA, FolksPersonaClass))
#define FOLKS_IS_PERSONA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_PERSONA))
#define FOLKS_IS_PERSONA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_PERSONA))
#define FOLKS_PERSONA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_PERSONA, FolksPersonaClass))

typedef struct _FolksPersona FolksPersona;
typedef struct _FolksPersonaClass FolksPersonaClass;

#define FOLKS_TYPE_PERSONA_STORE (folks_persona_store_get_type ())
#define FOLKS_PERSONA_STORE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_PERSONA_STORE, FolksPersonaStore))
#define FOLKS_PERSONA_STORE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_PERSONA_STORE, FolksPersonaStoreClass))
#define FOLKS_IS_PERSONA_STORE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_PERSONA_STORE))
#define FOLKS_IS_PERSONA_STORE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_PERSONA_STORE))
#define FOLKS_PERSONA_STORE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_PERSONA_STORE, FolksPersonaStoreClass))

typedef struct _FolksPersonaStore FolksPersonaStore;
typedef struct _FolksPersonaStoreClass FolksPersonaStoreClass;
enum  {
	FOLKS_INDIVIDUAL_0_PROPERTY,
	FOLKS_INDIVIDUAL_TRUST_LEVEL_PROPERTY,
	FOLKS_INDIVIDUAL_AVATAR_PROPERTY,
	FOLKS_INDIVIDUAL_PRESENCE_TYPE_PROPERTY,
	FOLKS_INDIVIDUAL_PRESENCE_STATUS_PROPERTY,
	FOLKS_INDIVIDUAL_PRESENCE_MESSAGE_PROPERTY,
	FOLKS_INDIVIDUAL_CLIENT_TYPES_PROPERTY,
	FOLKS_INDIVIDUAL_IS_USER_PROPERTY,
	FOLKS_INDIVIDUAL_ID_PROPERTY,
	FOLKS_INDIVIDUAL_DISPLAY_NAME_PROPERTY,
	FOLKS_INDIVIDUAL_ALIAS_PROPERTY,
	FOLKS_INDIVIDUAL_STRUCTURED_NAME_PROPERTY,
	FOLKS_INDIVIDUAL_FULL_NAME_PROPERTY,
	FOLKS_INDIVIDUAL_NICKNAME_PROPERTY,
	FOLKS_INDIVIDUAL_GENDER_PROPERTY,
	FOLKS_INDIVIDUAL_URLS_PROPERTY,
	FOLKS_INDIVIDUAL_PHONE_NUMBERS_PROPERTY,
	FOLKS_INDIVIDUAL_EMAIL_ADDRESSES_PROPERTY,
	FOLKS_INDIVIDUAL_ROLES_PROPERTY,
	FOLKS_INDIVIDUAL_LOCAL_IDS_PROPERTY,
	FOLKS_INDIVIDUAL_LOCATION_PROPERTY,
	FOLKS_INDIVIDUAL_BIRTHDAY_PROPERTY,
	FOLKS_INDIVIDUAL_CALENDAR_EVENT_ID_PROPERTY,
	FOLKS_INDIVIDUAL_NOTES_PROPERTY,
	FOLKS_INDIVIDUAL_POSTAL_ADDRESSES_PROPERTY,
	FOLKS_INDIVIDUAL_IS_FAVOURITE_PROPERTY,
	FOLKS_INDIVIDUAL_GROUPS_PROPERTY,
	FOLKS_INDIVIDUAL_IM_ADDRESSES_PROPERTY,
	FOLKS_INDIVIDUAL_WEB_SERVICE_ADDRESSES_PROPERTY,
	FOLKS_INDIVIDUAL_IM_INTERACTION_COUNT_PROPERTY,
	FOLKS_INDIVIDUAL_LAST_IM_INTERACTION_DATETIME_PROPERTY,
	FOLKS_INDIVIDUAL_CALL_INTERACTION_COUNT_PROPERTY,
	FOLKS_INDIVIDUAL_LAST_CALL_INTERACTION_DATETIME_PROPERTY,
	FOLKS_INDIVIDUAL_PERSONAS_PROPERTY,
	FOLKS_INDIVIDUAL_NUM_PROPERTIES
};
static GParamSpec* folks_individual_properties[FOLKS_INDIVIDUAL_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))
#define _g_free0(var) (var = (g_free (var), NULL))
#define _g_date_time_unref0(var) ((var == NULL) ? NULL : (var = (g_date_time_unref (var), NULL)))

#define FOLKS_INDIVIDUAL_TYPE__NOTIFIER (folks_individual__notifier_get_type ())
typedef struct _FolksIndividual_Notifier FolksIndividual_Notifier;
#define _g_error_free0(var) ((var == NULL) ? NULL : (var = (g_error_free (var), NULL)))
typedef struct _FolksIndividualChangeAvatarData FolksIndividualChangeAvatarData;
typedef struct _FolksIndividualChangeAliasData FolksIndividualChangeAliasData;
typedef struct _FolksIndividualChangeNicknameData FolksIndividualChangeNicknameData;
typedef struct _FolksIndividualChangeIsFavouriteData FolksIndividualChangeIsFavouriteData;
typedef struct _FolksIndividualChangeGroupsData FolksIndividualChangeGroupsData;
typedef struct _FolksIndividualChangeExtendedFieldData FolksIndividualChangeExtendedFieldData;
typedef struct _FolksIndividualRemoveExtendedFieldData FolksIndividualRemoveExtendedFieldData;
typedef struct _FolksIndividualChangeGroupData FolksIndividualChangeGroupData;

#define FOLKS_GROUP_DETAILS_TYPE_CHANGE_REASON (folks_group_details_change_reason_get_type ())
typedef struct _Block2Data Block2Data;
typedef struct _Block3Data Block3Data;

#define FOLKS_TYPE_POSTAL_ADDRESS (folks_postal_address_get_type ())
#define FOLKS_POSTAL_ADDRESS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddress))
#define FOLKS_POSTAL_ADDRESS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddressClass))
#define FOLKS_IS_POSTAL_ADDRESS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_POSTAL_ADDRESS))
#define FOLKS_IS_POSTAL_ADDRESS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), FOLKS_TYPE_POSTAL_ADDRESS))
#define FOLKS_POSTAL_ADDRESS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), FOLKS_TYPE_POSTAL_ADDRESS, FolksPostalAddressClass))

typedef struct _FolksPostalAddress FolksPostalAddress;
typedef struct _FolksPostalAddressClass FolksPostalAddressClass;

#define FOLKS_TYPE_PERSONA_STORE_TRUST (folks_persona_store_trust_get_type ())

#define FOLKS_TYPE_ANTI_LINKABLE (folks_anti_linkable_get_type ())
#define FOLKS_ANTI_LINKABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), FOLKS_TYPE_ANTI_LINKABLE, FolksAntiLinkable))
#define FOLKS_IS_ANTI_LINKABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), FOLKS_TYPE_ANTI_LINKABLE))
#define FOLKS_ANTI_LINKABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), FOLKS_TYPE_ANTI_LINKABLE, FolksAntiLinkableIface))

typedef struct _FolksAntiLinkable FolksAntiLinkable;
typedef struct _FolksAntiLinkableIface FolksAntiLinkableIface;
enum  {
	FOLKS_INDIVIDUAL_REMOVED_SIGNAL,
	FOLKS_INDIVIDUAL_PERSONAS_CHANGED_SIGNAL,
	FOLKS_INDIVIDUAL_NUM_SIGNALS
};
static guint folks_individual_signals[FOLKS_INDIVIDUAL_NUM_SIGNALS] = {0};
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

typedef enum  {
	FOLKS_TRUST_LEVEL_NONE,
	FOLKS_TRUST_LEVEL_PERSONAS
} FolksTrustLevel;

typedef enum  {
	FOLKS_PROPERTY_ERROR_NOT_WRITEABLE,
	FOLKS_PROPERTY_ERROR_INVALID_VALUE,
	FOLKS_PROPERTY_ERROR_UNKNOWN_ERROR,
	FOLKS_PROPERTY_ERROR_UNAVAILABLE
} FolksPropertyError;
#define FOLKS_PROPERTY_ERROR folks_property_error_quark ()
struct _FolksAliasDetailsIface {
	GTypeInterface parent_iface;
	void (*change_alias) (FolksAliasDetails* self, const gchar* alias, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_alias_finish) (FolksAliasDetails* self, GAsyncResult* _res_, GError** error);
	const gchar* (*get_alias) (FolksAliasDetails* self);
	void (*set_alias) (FolksAliasDetails* self, const gchar* value);
};

struct _FolksAvatarDetailsIface {
	GTypeInterface parent_iface;
	void (*change_avatar) (FolksAvatarDetails* self, GLoadableIcon* avatar, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_avatar_finish) (FolksAvatarDetails* self, GAsyncResult* _res_, GError** error);
	GLoadableIcon* (*get_avatar) (FolksAvatarDetails* self);
	void (*set_avatar) (FolksAvatarDetails* self, GLoadableIcon* value);
};

struct _FolksBirthdayDetailsIface {
	GTypeInterface parent_iface;
	void (*change_birthday) (FolksBirthdayDetails* self, GDateTime* birthday, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_birthday_finish) (FolksBirthdayDetails* self, GAsyncResult* _res_, GError** error);
	void (*change_calendar_event_id) (FolksBirthdayDetails* self, const gchar* event_id, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_calendar_event_id_finish) (FolksBirthdayDetails* self, GAsyncResult* _res_, GError** error);
	GDateTime* (*get_birthday) (FolksBirthdayDetails* self);
	void (*set_birthday) (FolksBirthdayDetails* self, GDateTime* value);
	const gchar* (*get_calendar_event_id) (FolksBirthdayDetails* self);
	void (*set_calendar_event_id) (FolksBirthdayDetails* self, const gchar* value);
};

struct _FolksEmailDetailsIface {
	GTypeInterface parent_iface;
	void (*change_email_addresses) (FolksEmailDetails* self, GeeSet* email_addresses, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_email_addresses_finish) (FolksEmailDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_email_addresses) (FolksEmailDetails* self);
	void (*set_email_addresses) (FolksEmailDetails* self, GeeSet* value);
};

struct _FolksExtendedInfoIface {
	GTypeInterface parent_iface;
	FolksExtendedFieldDetails* (*get_extended_field) (FolksExtendedInfo* self, const gchar* name);
	void (*change_extended_field) (FolksExtendedInfo* self, const gchar* name, FolksExtendedFieldDetails* value, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_extended_field_finish) (FolksExtendedInfo* self, GAsyncResult* _res_, GError** error);
	void (*remove_extended_field) (FolksExtendedInfo* self, const gchar* name, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*remove_extended_field_finish) (FolksExtendedInfo* self, GAsyncResult* _res_, GError** error);
};

struct _FolksFavouriteDetailsIface {
	GTypeInterface parent_iface;
	void (*change_is_favourite) (FolksFavouriteDetails* self, gboolean is_favourite, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_is_favourite_finish) (FolksFavouriteDetails* self, GAsyncResult* _res_, GError** error);
	gboolean (*get_is_favourite) (FolksFavouriteDetails* self);
	void (*set_is_favourite) (FolksFavouriteDetails* self, gboolean value);
};

typedef enum  {
	FOLKS_GENDER_UNSPECIFIED,
	FOLKS_GENDER_MALE,
	FOLKS_GENDER_FEMALE
} FolksGender;

struct _FolksGenderDetailsIface {
	GTypeInterface parent_iface;
	void (*change_gender) (FolksGenderDetails* self, FolksGender gender, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_gender_finish) (FolksGenderDetails* self, GAsyncResult* _res_, GError** error);
	FolksGender (*get_gender) (FolksGenderDetails* self);
	void (*set_gender) (FolksGenderDetails* self, FolksGender value);
};

struct _FolksGroupDetailsIface {
	GTypeInterface parent_iface;
	void (*change_group) (FolksGroupDetails* self, const gchar* group, gboolean is_member, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_group_finish) (FolksGroupDetails* self, GAsyncResult* _res_, GError** error);
	void (*change_groups) (FolksGroupDetails* self, GeeSet* groups, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_groups_finish) (FolksGroupDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_groups) (FolksGroupDetails* self);
	void (*set_groups) (FolksGroupDetails* self, GeeSet* value);
};

struct _FolksImDetailsIface {
	GTypeInterface parent_iface;
	void (*change_im_addresses) (FolksImDetails* self, GeeMultiMap* im_addresses, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_im_addresses_finish) (FolksImDetails* self, GAsyncResult* _res_, GError** error);
	GeeMultiMap* (*get_im_addresses) (FolksImDetails* self);
	void (*set_im_addresses) (FolksImDetails* self, GeeMultiMap* value);
};

struct _FolksInteractionDetailsIface {
	GTypeInterface parent_iface;
	guint (*get_im_interaction_count) (FolksInteractionDetails* self);
	GDateTime* (*get_last_im_interaction_datetime) (FolksInteractionDetails* self);
	guint (*get_call_interaction_count) (FolksInteractionDetails* self);
	GDateTime* (*get_last_call_interaction_datetime) (FolksInteractionDetails* self);
};

struct _FolksLocalIdDetailsIface {
	GTypeInterface parent_iface;
	void (*change_local_ids) (FolksLocalIdDetails* self, GeeSet* local_ids, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_local_ids_finish) (FolksLocalIdDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_local_ids) (FolksLocalIdDetails* self);
	void (*set_local_ids) (FolksLocalIdDetails* self, GeeSet* value);
};

struct _FolksLocationDetailsIface {
	GTypeInterface parent_iface;
	void (*change_location) (FolksLocationDetails* self, FolksLocation* location, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_location_finish) (FolksLocationDetails* self, GAsyncResult* _res_, GError** error);
	FolksLocation* (*get_location) (FolksLocationDetails* self);
	void (*set_location) (FolksLocationDetails* self, FolksLocation* value);
};

struct _FolksNameDetailsIface {
	GTypeInterface parent_iface;
	void (*change_structured_name) (FolksNameDetails* self, FolksStructuredName* name, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_structured_name_finish) (FolksNameDetails* self, GAsyncResult* _res_, GError** error);
	void (*change_full_name) (FolksNameDetails* self, const gchar* full_name, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_full_name_finish) (FolksNameDetails* self, GAsyncResult* _res_, GError** error);
	void (*change_nickname) (FolksNameDetails* self, const gchar* nickname, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_nickname_finish) (FolksNameDetails* self, GAsyncResult* _res_, GError** error);
	FolksStructuredName* (*get_structured_name) (FolksNameDetails* self);
	void (*set_structured_name) (FolksNameDetails* self, FolksStructuredName* value);
	const gchar* (*get_full_name) (FolksNameDetails* self);
	void (*set_full_name) (FolksNameDetails* self, const gchar* value);
	const gchar* (*get_nickname) (FolksNameDetails* self);
	void (*set_nickname) (FolksNameDetails* self, const gchar* value);
};

struct _FolksNoteDetailsIface {
	GTypeInterface parent_iface;
	void (*change_notes) (FolksNoteDetails* self, GeeSet* notes, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_notes_finish) (FolksNoteDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_notes) (FolksNoteDetails* self);
	void (*set_notes) (FolksNoteDetails* self, GeeSet* value);
};

typedef enum  {
	FOLKS_PRESENCE_TYPE_UNSET,
	FOLKS_PRESENCE_TYPE_OFFLINE,
	FOLKS_PRESENCE_TYPE_AVAILABLE,
	FOLKS_PRESENCE_TYPE_AWAY,
	FOLKS_PRESENCE_TYPE_EXTENDED_AWAY,
	FOLKS_PRESENCE_TYPE_HIDDEN,
	FOLKS_PRESENCE_TYPE_BUSY,
	FOLKS_PRESENCE_TYPE_UNKNOWN,
	FOLKS_PRESENCE_TYPE_ERROR
} FolksPresenceType;

struct _FolksPresenceDetailsIface {
	GTypeInterface parent_iface;
	FolksPresenceType (*get_presence_type) (FolksPresenceDetails* self);
	void (*set_presence_type) (FolksPresenceDetails* self, FolksPresenceType value);
	const gchar* (*get_presence_message) (FolksPresenceDetails* self);
	void (*set_presence_message) (FolksPresenceDetails* self, const gchar* value);
	gchar** (*get_client_types) (FolksPresenceDetails* self, int* result_length1);
	void (*set_client_types) (FolksPresenceDetails* self, gchar** value, int value_length1);
	const gchar* (*get_presence_status) (FolksPresenceDetails* self);
	void (*set_presence_status) (FolksPresenceDetails* self, const gchar* value);
};

struct _FolksPhoneDetailsIface {
	GTypeInterface parent_iface;
	void (*change_phone_numbers) (FolksPhoneDetails* self, GeeSet* phone_numbers, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_phone_numbers_finish) (FolksPhoneDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_phone_numbers) (FolksPhoneDetails* self);
	void (*set_phone_numbers) (FolksPhoneDetails* self, GeeSet* value);
};

struct _FolksPostalAddressDetailsIface {
	GTypeInterface parent_iface;
	void (*change_postal_addresses) (FolksPostalAddressDetails* self, GeeSet* postal_addresses, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_postal_addresses_finish) (FolksPostalAddressDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_postal_addresses) (FolksPostalAddressDetails* self);
	void (*set_postal_addresses) (FolksPostalAddressDetails* self, GeeSet* value);
};

struct _FolksRoleDetailsIface {
	GTypeInterface parent_iface;
	void (*change_roles) (FolksRoleDetails* self, GeeSet* roles, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_roles_finish) (FolksRoleDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_roles) (FolksRoleDetails* self);
	void (*set_roles) (FolksRoleDetails* self, GeeSet* value);
};

struct _FolksUrlDetailsIface {
	GTypeInterface parent_iface;
	void (*change_urls) (FolksUrlDetails* self, GeeSet* urls, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_urls_finish) (FolksUrlDetails* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_urls) (FolksUrlDetails* self);
	void (*set_urls) (FolksUrlDetails* self, GeeSet* value);
};

struct _FolksWebServiceDetailsIface {
	GTypeInterface parent_iface;
	void (*change_web_service_addresses) (FolksWebServiceDetails* self, GeeMultiMap* web_service_addresses, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_web_service_addresses_finish) (FolksWebServiceDetails* self, GAsyncResult* _res_, GError** error);
	GeeMultiMap* (*get_web_service_addresses) (FolksWebServiceDetails* self);
	void (*set_web_service_addresses) (FolksWebServiceDetails* self, GeeMultiMap* value);
};

struct _FolksIndividual {
	GObject parent_instance;
	FolksIndividualPrivate * priv;
};

struct _FolksIndividualClass {
	GObjectClass parent_class;
};

struct _FolksIndividualPrivate {
	FolksSmallSet* _persona_set;
	GeeSet* _persona_set_ro;
	GeeHashMap* _stores;
	guint _persona_user_count;
	FolksTrustLevel _trust_level;
	GLoadableIcon* _avatar;
	FolksPresenceType _presence_type;
	gchar* _presence_status;
	gchar* _presence_message;
	gchar** _client_types;
	gint _client_types_length1;
	gint __client_types_size_;
	gboolean _is_user;
	gchar* _id;
	gchar* _display_name;
	gchar* _alias;
	FolksStructuredName* _structured_name;
	gchar* _full_name;
	gchar* _nickname;
	FolksGender _gender;
	FolksSmallSet* _urls;
	GeeSet* _urls_ro;
	FolksSmallSet* _phone_numbers;
	GeeSet* _phone_numbers_ro;
	FolksSmallSet* _email_addresses;
	GeeSet* _email_addresses_ro;
	FolksSmallSet* _roles;
	GeeSet* _roles_ro;
	FolksSmallSet* _local_ids;
	GeeSet* _local_ids_ro;
	FolksLocation* _location;
	GDateTime* _birthday;
	gchar* _calendar_event_id;
	FolksSmallSet* _notes;
	GeeSet* _notes_ro;
	FolksSmallSet* _postal_addresses;
	GeeSet* _postal_addresses_ro;
	gboolean _is_favourite;
	FolksSmallSet* _groups;
	GeeSet* _groups_ro;
	GeeHashMultiMap* _im_addresses;
	GeeHashMultiMap* _web_service_addresses;
	GDateTime* _last_im_interaction_datetime;
	GDateTime* _last_call_interaction_datetime;
};

typedef void (*FolksIndividual_UnboundNotifier) (FolksIndividual* _self_, FolksPersona* persona, GParamSpec* ps);
struct _FolksIndividual_Notifier {
	const gchar* property;
	FolksIndividual_UnboundNotifier notify;
};

struct _FolksIndividualChangeAvatarData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksIndividual* self;
	GLoadableIcon* avatar;
	gboolean _tmp0_;
	gboolean _tmp1_;
	GLoadableIcon* _tmp2_;
	GLoadableIcon* _tmp3_;
	gboolean _tmp4_;
	GLoadableIcon* _tmp5_;
	const gchar* _tmp6_;
	GError* persona_error;
	gboolean prop_changed;
	FolksSmallSet* _p_list;
	FolksSmallSet* _tmp7_;
	FolksSmallSet* _tmp8_;
	gint _p_size;
	FolksSmallSet* _tmp9_;
	gint _tmp10_;
	gint _tmp11_;
	gint _p_index;
	gint _tmp12_;
	gint _tmp13_;
	gint _tmp14_;
	FolksPersona* p;
	FolksSmallSet* _tmp15_;
	gint _tmp16_;
	gconstpointer _tmp17_;
	FolksPersona* _tmp18_;
	FolksAvatarDetails* _a;
	FolksPersona* _tmp19_;
	FolksAvatarDetails* _tmp20_;
	FolksAvatarDetails* _tmp21_;
	FolksAvatarDetails* a;
	FolksAvatarDetails* _tmp22_;
	FolksAvatarDetails* _tmp23_;
	FolksPersona* _tmp24_;
	gchar** _tmp25_;
	gint _tmp25__length1;
	gchar** _tmp26_;
	gint _tmp26__length1;
	FolksAvatarDetails* _tmp27_;
	FolksPersona* _tmp28_;
	const gchar* _tmp29_;
	const gchar* _tmp30_;
	GError* e;
	GError* _tmp31_;
	GError* _tmp32_;
	GError* _tmp33_;
	gboolean _tmp34_;
	GError* _tmp35_;
	GError* _tmp36_;
	GError* _tmp37_;
	GError* _tmp38_;
	GError * _inner_error_;
};

struct _FolksIndividualChangeAliasData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksIndividual* self;
	gchar* alias;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	GError* persona_error;
	gboolean prop_changed;
	FolksSmallSet* _p_list;
	FolksSmallSet* _tmp2_;
	FolksSmallSet* _tmp3_;
	gint _p_size;
	FolksSmallSet* _tmp4_;
	gint _tmp5_;
	gint _tmp6_;
	gint _p_index;
	gint _tmp7_;
	gint _tmp8_;
	gint _tmp9_;
	FolksPersona* p;
	FolksSmallSet* _tmp10_;
	gint _tmp11_;
	gconstpointer _tmp12_;
	FolksPersona* _tmp13_;
	FolksAliasDetails* _a;
	FolksPersona* _tmp14_;
	FolksAliasDetails* _tmp15_;
	FolksAliasDetails* _tmp16_;
	FolksAliasDetails* a;
	FolksAliasDetails* _tmp17_;
	FolksAliasDetails* _tmp18_;
	FolksPersona* _tmp19_;
	gchar** _tmp20_;
	gint _tmp20__length1;
	gchar** _tmp21_;
	gint _tmp21__length1;
	FolksAliasDetails* _tmp22_;
	FolksPersona* _tmp23_;
	const gchar* _tmp24_;
	const gchar* _tmp25_;
	GError* e;
	GError* _tmp26_;
	GError* _tmp27_;
	GError* _tmp28_;
	gboolean _tmp29_;
	GError* _tmp30_;
	GError* _tmp31_;
	GError* _tmp32_;
	GError* _tmp33_;
	GError * _inner_error_;
};

struct _FolksIndividualChangeNicknameData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksIndividual* self;
	gchar* nickname;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	GError* persona_error;
	gboolean prop_changed;
	FolksSmallSet* _p_list;
	FolksSmallSet* _tmp3_;
	FolksSmallSet* _tmp4_;
	gint _p_size;
	FolksSmallSet* _tmp5_;
	gint _tmp6_;
	gint _tmp7_;
	gint _p_index;
	gint _tmp8_;
	gint _tmp9_;
	gint _tmp10_;
	FolksPersona* p;
	FolksSmallSet* _tmp11_;
	gint _tmp12_;
	gconstpointer _tmp13_;
	FolksPersona* _tmp14_;
	FolksNameDetails* _n;
	FolksPersona* _tmp15_;
	FolksNameDetails* _tmp16_;
	FolksNameDetails* _tmp17_;
	FolksNameDetails* n;
	FolksNameDetails* _tmp18_;
	FolksNameDetails* _tmp19_;
	FolksPersona* _tmp20_;
	gchar** _tmp21_;
	gint _tmp21__length1;
	gchar** _tmp22_;
	gint _tmp22__length1;
	FolksNameDetails* _tmp23_;
	FolksPersona* _tmp24_;
	const gchar* _tmp25_;
	const gchar* _tmp26_;
	GError* e;
	GError* _tmp27_;
	GError* _tmp28_;
	GError* _tmp29_;
	gboolean _tmp30_;
	GError* _tmp31_;
	GError* _tmp32_;
	GError* _tmp33_;
	GError* _tmp34_;
	GError * _inner_error_;
};

struct _FolksIndividualChangeIsFavouriteData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksIndividual* self;
	gboolean is_favourite;
	gboolean _tmp0_;
	const gchar* _tmp1_;
	const gchar* _tmp2_;
	GError* persona_error;
	gboolean prop_changed;
	FolksSmallSet* _p_list;
	FolksSmallSet* _tmp3_;
	FolksSmallSet* _tmp4_;
	gint _p_size;
	FolksSmallSet* _tmp5_;
	gint _tmp6_;
	gint _tmp7_;
	gint _p_index;
	gint _tmp8_;
	gint _tmp9_;
	gint _tmp10_;
	FolksPersona* p;
	FolksSmallSet* _tmp11_;
	gint _tmp12_;
	gconstpointer _tmp13_;
	FolksPersona* _tmp14_;
	FolksFavouriteDetails* _a;
	FolksPersona* _tmp15_;
	FolksFavouriteDetails* _tmp16_;
	FolksFavouriteDetails* _tmp17_;
	FolksFavouriteDetails* a;
	FolksFavouriteDetails* _tmp18_;
	FolksFavouriteDetails* _tmp19_;
	FolksPersona* _tmp20_;
	gchar** _tmp21_;
	gint _tmp21__length1;
	gchar** _tmp22_;
	gint _tmp22__length1;
	FolksFavouriteDetails* _tmp23_;
	FolksPersona* _tmp24_;
	const gchar* _tmp25_;
	const gchar* _tmp26_;
	GError* e;
	GError* _tmp27_;
	GError* _tmp28_;
	GError* _tmp29_;
	gboolean _tmp30_;
	GError* _tmp31_;
	GError* _tmp32_;
	GError* _tmp33_;
	GError* _tmp34_;
	GError * _inner_error_;
};

struct _FolksIndividualChangeGroupsData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksIndividual* self;
	GeeSet* groups;
	const gchar* _tmp0_;
	GError* persona_error;
	gboolean prop_changed;
	FolksSmallSet* _p_list;
	FolksSmallSet* _tmp1_;
	FolksSmallSet* _tmp2_;
	gint _p_size;
	FolksSmallSet* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	gint _p_index;
	gint _tmp6_;
	gint _tmp7_;
	gint _tmp8_;
	FolksPersona* p;
	FolksSmallSet* _tmp9_;
	gint _tmp10_;
	gconstpointer _tmp11_;
	FolksPersona* _tmp12_;
	FolksGroupDetails* _g;
	FolksPersona* _tmp13_;
	FolksGroupDetails* _tmp14_;
	FolksGroupDetails* _tmp15_;
	FolksGroupDetails* g;
	FolksGroupDetails* _tmp16_;
	FolksGroupDetails* _tmp17_;
	FolksPersona* _tmp18_;
	gchar** _tmp19_;
	gint _tmp19__length1;
	gchar** _tmp20_;
	gint _tmp20__length1;
	FolksGroupDetails* _tmp21_;
	FolksPersona* _tmp22_;
	const gchar* _tmp23_;
	const gchar* _tmp24_;
	GError* e;
	GError* _tmp25_;
	GError* _tmp26_;
	GError* _tmp27_;
	gboolean _tmp28_;
	GError* _tmp29_;
	GError* _tmp30_;
	GError* _tmp31_;
	GError* _tmp32_;
	GError * _inner_error_;
};

struct _FolksIndividualChangeExtendedFieldData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksIndividual* self;
	gchar* name;
	FolksExtendedFieldDetails* value;
	const gchar* _tmp0_;
	GError* persona_error;
	gboolean prop_changed;
	FolksSmallSet* _p_list;
	FolksSmallSet* _tmp1_;
	FolksSmallSet* _tmp2_;
	gint _p_size;
	FolksSmallSet* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	gint _p_index;
	gint _tmp6_;
	gint _tmp7_;
	gint _tmp8_;
	FolksPersona* p;
	FolksSmallSet* _tmp9_;
	gint _tmp10_;
	gconstpointer _tmp11_;
	FolksPersona* _tmp12_;
	FolksPersona* _tmp13_;
	gchar** _tmp14_;
	gint _tmp14__length1;
	gchar** _tmp15_;
	gint _tmp15__length1;
	FolksExtendedInfo* e;
	FolksPersona* _tmp16_;
	FolksExtendedInfo* _tmp17_;
	FolksExtendedInfo* _tmp18_;
	FolksPersona* _tmp19_;
	const gchar* _tmp20_;
	const gchar* _tmp21_;
	GError* _vala1_e;
	GError* _tmp22_;
	GError* _tmp23_;
	GError* _tmp24_;
	gboolean _tmp25_;
	GError* _tmp26_;
	GError* _tmp27_;
	GError* _tmp28_;
	GError* _tmp29_;
	GError * _inner_error_;
};

struct _FolksIndividualRemoveExtendedFieldData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksIndividual* self;
	gchar* name;
	const gchar* _tmp0_;
	GError* persona_error;
	FolksSmallSet* _p_list;
	FolksSmallSet* _tmp1_;
	FolksSmallSet* _tmp2_;
	gint _p_size;
	FolksSmallSet* _tmp3_;
	gint _tmp4_;
	gint _tmp5_;
	gint _p_index;
	gint _tmp6_;
	gint _tmp7_;
	gint _tmp8_;
	FolksPersona* p;
	FolksSmallSet* _tmp9_;
	gint _tmp10_;
	gconstpointer _tmp11_;
	FolksPersona* _tmp12_;
	FolksPersona* _tmp13_;
	gchar** _tmp14_;
	gint _tmp14__length1;
	gchar** _tmp15_;
	gint _tmp15__length1;
	FolksExtendedInfo* e;
	FolksPersona* _tmp16_;
	FolksExtendedInfo* _tmp17_;
	FolksExtendedInfo* _tmp18_;
	FolksPersona* _tmp19_;
	const gchar* _tmp20_;
	const gchar* _tmp21_;
	GError* _vala1_e;
	GError* _tmp22_;
	GError* _tmp23_;
	GError* _tmp24_;
	GError* _tmp25_;
	GError* _tmp26_;
	GError* _tmp27_;
	GError * _inner_error_;
};

struct _FolksIndividualChangeGroupData {
	int _state_;
	GObject* _source_object_;
	GAsyncResult* _res_;
	GTask* _async_result;
	GAsyncReadyCallback _callback_;
	gboolean _task_complete_;
	FolksIndividual* self;
	gchar* group;
	gboolean is_member;
	FolksSmallSet* _p_list;
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp1_;
	gint _p_size;
	FolksSmallSet* _tmp2_;
	gint _tmp3_;
	gint _tmp4_;
	gint _p_index;
	gint _tmp5_;
	gint _tmp6_;
	gint _tmp7_;
	FolksPersona* p;
	FolksSmallSet* _tmp8_;
	gint _tmp9_;
	gconstpointer _tmp10_;
	FolksPersona* _tmp11_;
	FolksPersona* _tmp12_;
	FolksPersona* _tmp13_;
};

typedef enum  {
	FOLKS_GROUP_DETAILS_CHANGE_REASON_NONE = 0,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_OFFLINE = 1,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_KICKED = 2,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_BUSY = 3,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_INVITED = 4,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_BANNED = 5,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_ERROR = 6,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_INVALID_MEMBER = 7,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_NO_ANSWER = 8,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_RENAMED = 9,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_PERMISSION_DENIED = 10,
	FOLKS_GROUP_DETAILS_CHANGE_REASON_SEPARATED = 11
} FolksGroupDetailsChangeReason;

typedef gboolean (*FolksIndividualPropertyFilter) (FolksPersona* persona, gpointer user_data);
typedef void (*FolksIndividualSingleValuedPropertySetter) (FolksPersona* chosen_persona, gpointer user_data);
struct _Block2Data {
	int _ref_count_;
	FolksIndividual* self;
	FolksIndividualPropertyFilter filter_func;
	gpointer filter_func_target;
	GCompareFunc compare_func;
	gchar* prop_name;
};

typedef gboolean (*FolksIndividualPropertyIsNull) (gpointer user_data);
typedef void (*FolksIndividualCollectionCreator) (gpointer user_data);
typedef gboolean (*FolksIndividualMultiValuedPropertySetter) (gpointer user_data);
struct _Block3Data {
	int _ref_count_;
	FolksIndividual* self;
	gboolean emit_notification;
};

typedef enum  {
	FOLKS_PERSONA_STORE_TRUST_NONE,
	FOLKS_PERSONA_STORE_TRUST_PARTIAL,
	FOLKS_PERSONA_STORE_TRUST_FULL
} FolksPersonaStoreTrust;

struct _FolksAntiLinkableIface {
	GTypeInterface parent_iface;
	void (*change_anti_links) (FolksAntiLinkable* self, GeeSet* anti_links, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*change_anti_links_finish) (FolksAntiLinkable* self, GAsyncResult* _res_, GError** error);
	GeeSet* (*get_anti_links) (FolksAntiLinkable* self);
	void (*set_anti_links) (FolksAntiLinkable* self, GeeSet* value);
};


static gpointer folks_individual_parent_class = NULL;
static FolksAliasDetailsIface * folks_individual_folks_alias_details_parent_iface = NULL;
static FolksAvatarDetailsIface * folks_individual_folks_avatar_details_parent_iface = NULL;
static FolksBirthdayDetailsIface * folks_individual_folks_birthday_details_parent_iface = NULL;
static FolksEmailDetailsIface * folks_individual_folks_email_details_parent_iface = NULL;
static FolksExtendedInfoIface * folks_individual_folks_extended_info_parent_iface = NULL;
static FolksFavouriteDetailsIface * folks_individual_folks_favourite_details_parent_iface = NULL;
static FolksGenderDetailsIface * folks_individual_folks_gender_details_parent_iface = NULL;
static FolksGroupDetailsIface * folks_individual_folks_group_details_parent_iface = NULL;
static FolksImDetailsIface * folks_individual_folks_im_details_parent_iface = NULL;
static FolksInteractionDetailsIface * folks_individual_folks_interaction_details_parent_iface = NULL;
static FolksLocalIdDetailsIface * folks_individual_folks_local_id_details_parent_iface = NULL;
static FolksLocationDetailsIface * folks_individual_folks_location_details_parent_iface = NULL;
static FolksNameDetailsIface * folks_individual_folks_name_details_parent_iface = NULL;
static FolksNoteDetailsIface * folks_individual_folks_note_details_parent_iface = NULL;
static FolksPresenceDetailsIface * folks_individual_folks_presence_details_parent_iface = NULL;
static FolksPhoneDetailsIface * folks_individual_folks_phone_details_parent_iface = NULL;
static FolksPostalAddressDetailsIface * folks_individual_folks_postal_address_details_parent_iface = NULL;
static FolksRoleDetailsIface * folks_individual_folks_role_details_parent_iface = NULL;
static FolksUrlDetailsIface * folks_individual_folks_url_details_parent_iface = NULL;
static FolksWebServiceDetailsIface * folks_individual_folks_web_service_details_parent_iface = NULL;

GType folks_trust_level_get_type (void) G_GNUC_CONST;
GQuark folks_property_error_quark (void);
GType folks_alias_details_get_type (void) G_GNUC_CONST;
GType folks_avatar_details_get_type (void) G_GNUC_CONST;
GType folks_birthday_details_get_type (void) G_GNUC_CONST;
GType folks_abstract_field_details_get_type (void) G_GNUC_CONST;
GType folks_email_field_details_get_type (void) G_GNUC_CONST;
GType folks_email_details_get_type (void) G_GNUC_CONST;
GType folks_extended_field_details_get_type (void) G_GNUC_CONST;
GType folks_extended_info_get_type (void) G_GNUC_CONST;
GType folks_favourite_details_get_type (void) G_GNUC_CONST;
GType folks_gender_get_type (void) G_GNUC_CONST;
GType folks_gender_details_get_type (void) G_GNUC_CONST;
GType folks_group_details_get_type (void) G_GNUC_CONST;
GType folks_im_field_details_get_type (void) G_GNUC_CONST;
GType folks_im_details_get_type (void) G_GNUC_CONST;
GType folks_interaction_details_get_type (void) G_GNUC_CONST;
GType folks_local_id_details_get_type (void) G_GNUC_CONST;
GType folks_location_get_type (void) G_GNUC_CONST;
GType folks_location_details_get_type (void) G_GNUC_CONST;
GType folks_structured_name_get_type (void) G_GNUC_CONST;
GType folks_name_details_get_type (void) G_GNUC_CONST;
GType folks_note_field_details_get_type (void) G_GNUC_CONST;
GType folks_note_details_get_type (void) G_GNUC_CONST;
GType folks_presence_type_get_type (void) G_GNUC_CONST;
GType folks_presence_details_get_type (void) G_GNUC_CONST;
GType folks_phone_field_details_get_type (void) G_GNUC_CONST;
GType folks_phone_details_get_type (void) G_GNUC_CONST;
GType folks_postal_address_field_details_get_type (void) G_GNUC_CONST;
GType folks_postal_address_details_get_type (void) G_GNUC_CONST;
GType folks_role_field_details_get_type (void) G_GNUC_CONST;
GType folks_role_details_get_type (void) G_GNUC_CONST;
GType folks_url_field_details_get_type (void) G_GNUC_CONST;
GType folks_url_details_get_type (void) G_GNUC_CONST;
GType folks_web_service_field_details_get_type (void) G_GNUC_CONST;
GType folks_web_service_details_get_type (void) G_GNUC_CONST;
GType folks_individual_get_type (void) G_GNUC_CONST;
GType folks_persona_get_type (void) G_GNUC_CONST;
GType folks_persona_store_get_type (void) G_GNUC_CONST;
#define FOLKS_INDIVIDUAL_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), FOLKS_TYPE_INDIVIDUAL, FolksIndividualPrivate))
const gchar* folks_individual_get_id (FolksIndividual* self);
static GType folks_individual__notifier_get_type (void) G_GNUC_CONST G_GNUC_UNUSED;
static FolksIndividual_Notifier* folks_individual__notifier_dup (const FolksIndividual_Notifier* self);
static void folks_individual__notifier_free (FolksIndividual_Notifier* self);
static void _folks_individual_notify_alias_cb (FolksIndividual* _self_,
                                        FolksPersona* p,
                                        GParamSpec* ps);
static void __folks_individual_notify_alias_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                         FolksPersona* persona,
                                                                         GParamSpec* ps);
static void _folks_individual_notify_avatar_cb (FolksIndividual* _self_,
                                         FolksPersona* p,
                                         GParamSpec* ps);
static void __folks_individual_notify_avatar_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                          FolksPersona* persona,
                                                                          GParamSpec* ps);
static void _folks_individual_notify_presence_cb (FolksIndividual* _self_,
                                           FolksPersona* p,
                                           GParamSpec* ps);
static void __folks_individual_notify_presence_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                            FolksPersona* persona,
                                                                            GParamSpec* ps);
static void _folks_individual_notify_im_addresses_cb (FolksIndividual* _self_,
                                               FolksPersona* p,
                                               GParamSpec* ps);
static void __folks_individual_notify_im_addresses_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                FolksPersona* persona,
                                                                                GParamSpec* ps);
static void _folks_individual_notify_web_service_addresses_cb (FolksIndividual* _self_,
                                                        FolksPersona* p,
                                                        GParamSpec* ps);
static void __folks_individual_notify_web_service_addresses_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                         FolksPersona* persona,
                                                                                         GParamSpec* ps);
static void _folks_individual_notify_is_favourite_cb (FolksIndividual* _self_,
                                               FolksPersona* p,
                                               GParamSpec* ps);
static void __folks_individual_notify_is_favourite_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                FolksPersona* persona,
                                                                                GParamSpec* ps);
static void _folks_individual_notify_structured_name_cb (FolksIndividual* _self_,
                                                  FolksPersona* p,
                                                  GParamSpec* ps);
static void __folks_individual_notify_structured_name_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                   FolksPersona* persona,
                                                                                   GParamSpec* ps);
static void _folks_individual_notify_full_name_cb (FolksIndividual* _self_,
                                            FolksPersona* p,
                                            GParamSpec* ps);
static void __folks_individual_notify_full_name_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                             FolksPersona* persona,
                                                                             GParamSpec* ps);
static void _folks_individual_notify_nickname_cb (FolksIndividual* _self_,
                                           FolksPersona* p,
                                           GParamSpec* ps);
static void __folks_individual_notify_nickname_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                            FolksPersona* persona,
                                                                            GParamSpec* ps);
static void _folks_individual_notify_gender_cb (FolksIndividual* _self_,
                                         FolksPersona* p,
                                         GParamSpec* ps);
static void __folks_individual_notify_gender_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                          FolksPersona* persona,
                                                                          GParamSpec* ps);
static void _folks_individual_notify_urls_cb (FolksIndividual* _self_,
                                       FolksPersona* p,
                                       GParamSpec* ps);
static void __folks_individual_notify_urls_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                        FolksPersona* persona,
                                                                        GParamSpec* ps);
static void _folks_individual_notify_phone_numbers_cb (FolksIndividual* _self_,
                                                FolksPersona* p,
                                                GParamSpec* ps);
static void __folks_individual_notify_phone_numbers_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                 FolksPersona* persona,
                                                                                 GParamSpec* ps);
static void _folks_individual_notify_email_addresses_cb (FolksIndividual* _self_,
                                                  FolksPersona* p,
                                                  GParamSpec* ps);
static void __folks_individual_notify_email_addresses_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                   FolksPersona* persona,
                                                                                   GParamSpec* ps);
static void _folks_individual_notify_roles_cb (FolksIndividual* _self_,
                                        FolksPersona* p,
                                        GParamSpec* ps);
static void __folks_individual_notify_roles_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                         FolksPersona* persona,
                                                                         GParamSpec* ps);
static void _folks_individual_notify_birthday_cb (FolksIndividual* _self_,
                                           FolksPersona* p,
                                           GParamSpec* ps);
static void __folks_individual_notify_birthday_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                            FolksPersona* persona,
                                                                            GParamSpec* ps);
static void _folks_individual_notify_notes_cb (FolksIndividual* _self_,
                                        FolksPersona* p,
                                        GParamSpec* ps);
static void __folks_individual_notify_notes_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                         FolksPersona* persona,
                                                                         GParamSpec* ps);
static void _folks_individual_notify_postal_addresses_cb (FolksIndividual* _self_,
                                                   FolksPersona* p,
                                                   GParamSpec* ps);
static void __folks_individual_notify_postal_addresses_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                    FolksPersona* persona,
                                                                                    GParamSpec* ps);
static void _folks_individual_notify_local_ids_cb (FolksIndividual* _self_,
                                            FolksPersona* p,
                                            GParamSpec* ps);
static void __folks_individual_notify_local_ids_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                             FolksPersona* persona,
                                                                             GParamSpec* ps);
static void _folks_individual_notify_location_cb (FolksIndividual* _self_,
                                           FolksPersona* p,
                                           GParamSpec* ps);
static void __folks_individual_notify_location_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                            FolksPersona* persona,
                                                                            GParamSpec* ps);
static void _folks_individual_notify_im_interaction_count_cb (FolksIndividual* _self_,
                                                       FolksPersona* p,
                                                       GParamSpec* ps);
static void __folks_individual_notify_im_interaction_count_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                        FolksPersona* persona,
                                                                                        GParamSpec* ps);
static void _folks_individual_notify_call_interaction_count_cb (FolksIndividual* _self_,
                                                         FolksPersona* p,
                                                         GParamSpec* ps);
static void __folks_individual_notify_call_interaction_count_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                          FolksPersona* persona,
                                                                                          GParamSpec* ps);
static void _folks_individual_notify_last_im_interaction_datetime_cb (FolksIndividual* _self_,
                                                               FolksPersona* p,
                                                               GParamSpec* ps);
static void __folks_individual_notify_last_im_interaction_datetime_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                                FolksPersona* persona,
                                                                                                GParamSpec* ps);
static void _folks_individual_notify_last_call_interaction_datetime_cb (FolksIndividual* _self_,
                                                                 FolksPersona* p,
                                                                 GParamSpec* ps);
static void __folks_individual_notify_last_call_interaction_datetime_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                                  FolksPersona* persona,
                                                                                                  GParamSpec* ps);
static void folks_individual_real_change_avatar_data_free (gpointer _data);
static void folks_individual_real_change_avatar_async_ready_wrapper (GObject *source_object,
                                                              GAsyncResult *res,
                                                              void *user_data);
static void folks_individual_real_change_avatar (FolksAvatarDetails* base,
                                          GLoadableIcon* avatar,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
static gboolean folks_individual_real_change_avatar_co (FolksIndividualChangeAvatarData* _data_);
gchar** folks_persona_get_writeable_properties (FolksPersona* self,
                                                int* result_length1);
static gboolean _vala_string_array_contains (gchar* * stack,
                                      int stack_length,
                                      gchar* needle);
void folks_avatar_details_change_avatar (FolksAvatarDetails* self,
                                         GLoadableIcon* avatar,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
void folks_avatar_details_change_avatar_finish (FolksAvatarDetails* self,
                                                GAsyncResult* _res_,
                                                GError** error);
static void folks_individual_change_avatar_ready (GObject* source_object,
                                           GAsyncResult* _res_,
                                           gpointer _user_data_);
const gchar* folks_persona_get_uid (FolksPersona* self);
static void folks_individual_real_change_alias_data_free (gpointer _data);
static void folks_individual_real_change_alias_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
static void folks_individual_real_change_alias (FolksAliasDetails* base,
                                         const gchar* alias,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
static gboolean folks_individual_real_change_alias_co (FolksIndividualChangeAliasData* _data_);
void folks_alias_details_change_alias (FolksAliasDetails* self,
                                       const gchar* alias,
                                       GAsyncReadyCallback _callback_,
                                       gpointer _user_data_);
void folks_alias_details_change_alias_finish (FolksAliasDetails* self,
                                              GAsyncResult* _res_,
                                              GError** error);
static void folks_individual_change_alias_ready (GObject* source_object,
                                          GAsyncResult* _res_,
                                          gpointer _user_data_);
static void folks_individual_real_change_nickname_data_free (gpointer _data);
static void folks_individual_real_change_nickname_async_ready_wrapper (GObject *source_object,
                                                                GAsyncResult *res,
                                                                void *user_data);
static void folks_individual_real_change_nickname (FolksNameDetails* base,
                                            const gchar* nickname,
                                            GAsyncReadyCallback _callback_,
                                            gpointer _user_data_);
static gboolean folks_individual_real_change_nickname_co (FolksIndividualChangeNicknameData* _data_);
void folks_name_details_change_nickname (FolksNameDetails* self,
                                         const gchar* nickname,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
void folks_name_details_change_nickname_finish (FolksNameDetails* self,
                                                GAsyncResult* _res_,
                                                GError** error);
static void folks_individual_change_nickname_ready (GObject* source_object,
                                             GAsyncResult* _res_,
                                             gpointer _user_data_);
static void folks_individual_real_change_is_favourite_data_free (gpointer _data);
static void folks_individual_real_change_is_favourite_async_ready_wrapper (GObject *source_object,
                                                                    GAsyncResult *res,
                                                                    void *user_data);
static void folks_individual_real_change_is_favourite (FolksFavouriteDetails* base,
                                                gboolean is_favourite,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
static gboolean folks_individual_real_change_is_favourite_co (FolksIndividualChangeIsFavouriteData* _data_);
void folks_favourite_details_change_is_favourite (FolksFavouriteDetails* self,
                                                  gboolean is_favourite,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_);
void folks_favourite_details_change_is_favourite_finish (FolksFavouriteDetails* self,
                                                         GAsyncResult* _res_,
                                                         GError** error);
static void folks_individual_change_is_favourite_ready (GObject* source_object,
                                                 GAsyncResult* _res_,
                                                 gpointer _user_data_);
static void folks_individual_real_change_groups_data_free (gpointer _data);
static void folks_individual_real_change_groups_async_ready_wrapper (GObject *source_object,
                                                              GAsyncResult *res,
                                                              void *user_data);
static void folks_individual_real_change_groups (FolksGroupDetails* base,
                                          GeeSet* groups,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
static gboolean folks_individual_real_change_groups_co (FolksIndividualChangeGroupsData* _data_);
void folks_group_details_change_groups (FolksGroupDetails* self,
                                        GeeSet* groups,
                                        GAsyncReadyCallback _callback_,
                                        gpointer _user_data_);
void folks_group_details_change_groups_finish (FolksGroupDetails* self,
                                               GAsyncResult* _res_,
                                               GError** error);
static void folks_individual_change_groups_ready (GObject* source_object,
                                           GAsyncResult* _res_,
                                           gpointer _user_data_);
static FolksExtendedFieldDetails* folks_individual_real_get_extended_field (FolksExtendedInfo* base,
                                                                     const gchar* name);
FolksExtendedFieldDetails* folks_extended_info_get_extended_field (FolksExtendedInfo* self,
                                                                   const gchar* name);
static void folks_individual_real_change_extended_field_data_free (gpointer _data);
static void folks_individual_real_change_extended_field_async_ready_wrapper (GObject *source_object,
                                                                      GAsyncResult *res,
                                                                      void *user_data);
static void folks_individual_real_change_extended_field (FolksExtendedInfo* base,
                                                  const gchar* name,
                                                  FolksExtendedFieldDetails* value,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_);
static gboolean folks_individual_real_change_extended_field_co (FolksIndividualChangeExtendedFieldData* _data_);
void folks_extended_info_change_extended_field (FolksExtendedInfo* self,
                                                const gchar* name,
                                                FolksExtendedFieldDetails* value,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
void folks_extended_info_change_extended_field_finish (FolksExtendedInfo* self,
                                                       GAsyncResult* _res_,
                                                       GError** error);
static void folks_individual_change_extended_field_ready (GObject* source_object,
                                                   GAsyncResult* _res_,
                                                   gpointer _user_data_);
static void folks_individual_real_remove_extended_field_data_free (gpointer _data);
static void folks_individual_real_remove_extended_field_async_ready_wrapper (GObject *source_object,
                                                                      GAsyncResult *res,
                                                                      void *user_data);
static void folks_individual_real_remove_extended_field (FolksExtendedInfo* base,
                                                  const gchar* name,
                                                  GAsyncReadyCallback _callback_,
                                                  gpointer _user_data_);
static gboolean folks_individual_real_remove_extended_field_co (FolksIndividualRemoveExtendedFieldData* _data_);
void folks_extended_info_remove_extended_field (FolksExtendedInfo* self,
                                                const gchar* name,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
void folks_extended_info_remove_extended_field_finish (FolksExtendedInfo* self,
                                                       GAsyncResult* _res_,
                                                       GError** error);
static void folks_individual_remove_extended_field_ready (GObject* source_object,
                                                   GAsyncResult* _res_,
                                                   gpointer _user_data_);
static void _folks_individual_update_alias (FolksIndividual* self);
static void _folks_individual_update_avatar (FolksIndividual* self);
static void _folks_individual_update_full_name (FolksIndividual* self);
static void _folks_individual_update_structured_name (FolksIndividual* self);
static void _folks_individual_update_nickname (FolksIndividual* self);
static void _folks_individual_persona_group_changed_cb (FolksIndividual* self,
                                                 const gchar* group,
                                                 gboolean is_member);
static void _folks_individual_update_groups (FolksIndividual* self,
                                      gboolean create_if_not_exist,
                                      gboolean emit_notification,
                                      gboolean force_update);
static void _folks_individual_update_gender (FolksIndividual* self);
static void _folks_individual_update_urls (FolksIndividual* self,
                                    gboolean create_if_not_exist,
                                    gboolean emit_notification,
                                    gboolean force_update);
static void _folks_individual_update_phone_numbers (FolksIndividual* self,
                                             gboolean create_if_not_exist,
                                             gboolean emit_notification,
                                             gboolean force_update);
static void _folks_individual_update_postal_addresses (FolksIndividual* self,
                                                gboolean create_if_not_exist,
                                                gboolean emit_notification,
                                                gboolean force_update);
static void _folks_individual_update_email_addresses (FolksIndividual* self,
                                               gboolean create_if_not_exist,
                                               gboolean emit_notification,
                                               gboolean force_update);
static void _folks_individual_update_roles (FolksIndividual* self,
                                     gboolean create_if_not_exist,
                                     gboolean emit_notification,
                                     gboolean force_update);
static void _folks_individual_update_birthday (FolksIndividual* self);
static void _folks_individual_update_notes (FolksIndividual* self,
                                     gboolean create_if_not_exist,
                                     gboolean emit_notification,
                                     gboolean force_update);
static void _folks_individual_update_local_ids (FolksIndividual* self,
                                         gboolean create_if_not_exist,
                                         gboolean emit_notification,
                                         gboolean force_update);
static void _folks_individual_update_location (FolksIndividual* self);
static void folks_individual_real_change_group_data_free (gpointer _data);
static void folks_individual_real_change_group_async_ready_wrapper (GObject *source_object,
                                                             GAsyncResult *res,
                                                             void *user_data);
static void folks_individual_real_change_group (FolksGroupDetails* base,
                                         const gchar* group,
                                         gboolean is_member,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
static gboolean folks_individual_real_change_group_co (FolksIndividualChangeGroupData* _data_);
void folks_group_details_change_group (FolksGroupDetails* self,
                                       const gchar* group,
                                       gboolean is_member,
                                       GAsyncReadyCallback _callback_,
                                       gpointer _user_data_);
void folks_group_details_change_group_finish (FolksGroupDetails* self,
                                              GAsyncResult* _res_,
                                              GError** error);
static void _folks_individual_update_presence (FolksIndividual* self);
static void _folks_individual_update_im_addresses (FolksIndividual* self,
                                            gboolean create_if_not_exist,
                                            gboolean emit_notification,
                                            gboolean force_update);
static void _folks_individual_update_web_service_addresses (FolksIndividual* self,
                                                     gboolean create_if_not_exist,
                                                     gboolean emit_notification,
                                                     gboolean force_update);
static void _folks_individual_update_is_favourite (FolksIndividual* self);
static void _folks_individual_persona_notify_cb (FolksIndividual* self,
                                          GObject* obj,
                                          GParamSpec* ps);
FolksIndividual* folks_persona_get_individual (FolksPersona* self);
static void _folks_individual_set_personas (FolksIndividual* self,
                                     GeeSet* personas,
                                     FolksIndividual* replacement_individual);
FolksIndividual* folks_individual_new (GeeSet* personas);
FolksIndividual* folks_individual_construct (GType object_type,
                                             GeeSet* personas);
static void _folks_individual_emit_personas_changed (FolksIndividual* self,
                                              GeeSet* added,
                                              GeeSet* removed);
static void _folks_individual_store_removed_cb (FolksIndividual* self,
                                         FolksPersonaStore* store);
FolksPersonaStore* folks_persona_get_store (FolksPersona* self);
GType folks_group_details_change_reason_get_type (void) G_GNUC_CONST;
static void _folks_individual_store_personas_changed_cb (FolksIndividual* self,
                                                  FolksPersonaStore* store,
                                                  GeeSet* added,
                                                  GeeSet* removed,
                                                  const gchar* message,
                                                  FolksPersona* actor,
                                                  FolksGroupDetailsChangeReason reason);
static void _folks_individual_update_fields (FolksIndividual* self);
static void _folks_individual_update_trust_level (FolksIndividual* self);
static void _folks_individual_update_display_name (FolksIndividual* self);
static void _folks_individual_update_single_valued_property (FolksIndividual* self,
                                                      GType interface_type,
                                                      FolksIndividualPropertyFilter filter_func,
                                                      gpointer filter_func_target,
                                                      GCompareFunc compare_func,
                                                      const gchar* prop_name,
                                                      FolksIndividualSingleValuedPropertySetter setter,
                                                      gpointer setter_target);
static Block2Data* block2_data_ref (Block2Data* _data2_);
static void block2_data_unref (void * _userdata_);
static gint __lambda6_ (Block2Data* _data2_,
                 FolksPersona* a,
                 FolksPersona* b);
gboolean folks_persona_store_get_is_primary_store (FolksPersonaStore* self);
static gint ___lambda6__gcompare_data_func (gconstpointer a,
                                     gconstpointer b,
                                     gpointer self);
static void _folks_individual_update_multi_valued_property (FolksIndividual* self,
                                                     const gchar* prop_name,
                                                     gboolean create_if_not_exist,
                                                     FolksIndividualPropertyIsNull prop_is_null,
                                                     gpointer prop_is_null_target,
                                                     FolksIndividualCollectionCreator create_collection,
                                                     gpointer create_collection_target,
                                                     FolksIndividualMultiValuedPropertySetter setter,
                                                     gpointer setter_target,
                                                     gboolean emit_notification,
                                                     gboolean force_update);
static Block3Data* block3_data_ref (Block3Data* _data3_);
static void block3_data_unref (void * _userdata_);
GeeSet* folks_group_details_get_groups (FolksGroupDetails* self);
static void __lambda64_ (Block3Data* _data3_,
                  const gchar* l);
static void ___lambda64__gfunc (gconstpointer data,
                         gpointer self);
static void _g_free0_ (gpointer var);
static inline void _g_list_free__g_free0_ (GList* self);
static gboolean __lambda13_ (FolksIndividual* self,
                      FolksPersona* p);
FolksPresenceType folks_presence_details_get_presence_type (FolksPresenceDetails* self);
static gboolean ___lambda13__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda14_ (FolksPersona* a,
                  FolksPersona* b);
gint folks_presence_details_typecmp (FolksPresenceType type_a,
                                     FolksPresenceType type_b);
static gint ___lambda14__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda15_ (FolksIndividual* self,
                  FolksPersona* p);
const gchar* folks_presence_details_get_presence_message (FolksPresenceDetails* self);
const gchar* folks_presence_details_get_presence_status (FolksPresenceDetails* self);
gchar** folks_presence_details_get_client_types (FolksPresenceDetails* self,
                                                 int* result_length1);
static gchar** _vala_array_dup1 (gchar** self,
                          int length);
void folks_presence_details_set_presence_message (FolksPresenceDetails* self,
                                                  const gchar* value);
void folks_presence_details_set_presence_type (FolksPresenceDetails* self,
                                               FolksPresenceType value);
void folks_presence_details_set_presence_status (FolksPresenceDetails* self,
                                                 const gchar* value);
void folks_presence_details_set_client_types (FolksPresenceDetails* self,
                                              gchar** value,
                                              int value_length1);
static void ___lambda15__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
static gboolean __lambda22_ (FolksIndividual* self,
                      FolksPersona* p);
gboolean folks_favourite_details_get_is_favourite (FolksFavouriteDetails* self);
static gboolean ___lambda22__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda23_ (FolksPersona* a,
                  FolksPersona* b);
static gint ___lambda23__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda24_ (FolksIndividual* self,
                  FolksPersona* p);
static void ___lambda24__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
static gchar* _folks_individual_look_up_alias_for_display_name (FolksIndividual* self,
                                                         FolksPersona* p);
const gchar* folks_alias_details_get_alias (FolksAliasDetails* self);
static gchar* _folks_individual_look_up_name_details_for_display_name (FolksIndividual* self,
                                                                FolksPersona* p);
const gchar* folks_name_details_get_full_name (FolksNameDetails* self);
FolksStructuredName* folks_name_details_get_structured_name (FolksNameDetails* self);
gchar* folks_structured_name_to_string (FolksStructuredName* self);
const gchar* folks_name_details_get_nickname (FolksNameDetails* self);
static gchar* _folks_individual_look_up_email_address_for_display_name (FolksIndividual* self,
                                                                 FolksPersona* p);
GeeSet* folks_email_details_get_email_addresses (FolksEmailDetails* self);
gconstpointer folks_abstract_field_details_get_value (FolksAbstractFieldDetails* self);
static gchar* _folks_individual_look_up_phone_number_for_display_name (FolksIndividual* self,
                                                                FolksPersona* p);
GeeSet* folks_phone_details_get_phone_numbers (FolksPhoneDetails* self);
static gchar* _folks_individual_look_up_display_id_for_display_name (FolksIndividual* self,
                                                              FolksPersona* p);
const gchar* folks_persona_get_display_id (FolksPersona* self);
const gchar* folks_persona_get_iid (FolksPersona* self);
static gchar* _folks_individual_look_up_postal_address_for_display_name (FolksIndividual* self,
                                                                  FolksPersona* p);
GeeSet* folks_postal_address_details_get_postal_addresses (FolksPostalAddressDetails* self);
GType folks_postal_address_get_type (void) G_GNUC_CONST;
gchar* folks_postal_address_to_string (FolksPostalAddress* self);
static gboolean __lambda7_ (FolksIndividual* self,
                     FolksPersona* p);
static gboolean ___lambda7__folks_individual_property_filter (FolksPersona* persona,
                                                       gpointer self);
static gint __lambda8_ (FolksPersona* a,
                 FolksPersona* b);
static gint ___lambda8__gcompare_func (gconstpointer a,
                                gconstpointer b);
static void __lambda9_ (FolksIndividual* self,
                 FolksPersona* p);
static void ___lambda9__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                 gpointer self);
static gboolean __lambda10_ (FolksIndividual* self,
                      FolksPersona* p);
GLoadableIcon* folks_avatar_details_get_avatar (FolksAvatarDetails* self);
static gboolean ___lambda10__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda11_ (FolksPersona* a,
                  FolksPersona* b);
static gint ___lambda11__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda12_ (FolksIndividual* self,
                  FolksPersona* p);
static void ___lambda12__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
gboolean folks_persona_get_is_user (FolksPersona* self);
GType folks_persona_store_trust_get_type (void) G_GNUC_CONST;
FolksPersonaStoreTrust folks_persona_store_get_trust_level (FolksPersonaStore* self);
FolksTrustLevel folks_individual_get_trust_level (FolksIndividual* self);
static void folks_individual_set_trust_level (FolksIndividual* self,
                                       FolksTrustLevel value);
static gboolean __lambda16_ (FolksIndividual* self);
static gboolean ___lambda16__folks_individual_property_is_null (gpointer self);
static void __lambda17_ (FolksIndividual* self);
guint folks_abstract_field_details_hash_static (FolksAbstractFieldDetails* value);
static guint _folks_abstract_field_details_hash_static_gee_hash_data_func (gconstpointer v,
                                                                    gpointer self);
gboolean folks_abstract_field_details_equal_static (FolksAbstractFieldDetails* left,
                                                    FolksAbstractFieldDetails* right);
static gboolean _folks_abstract_field_details_equal_static_gee_equal_data_func (gconstpointer a,
                                                                         gconstpointer b,
                                                                         gpointer self);
static void ___lambda17__folks_individual_collection_creator (gpointer self);
static gboolean __lambda18_ (FolksIndividual* self);
GeeMultiMap* folks_im_details_get_im_addresses (FolksImDetails* self);
gboolean folks_utils_multi_map_str_afd_equal (GeeMultiMap* a,
                                              GeeMultiMap* b);
static gboolean ___lambda18__folks_individual_multi_valued_property_setter (gpointer self);
static gboolean __lambda19_ (FolksIndividual* self);
static gboolean ___lambda19__folks_individual_property_is_null (gpointer self);
static void __lambda20_ (FolksIndividual* self);
static void ___lambda20__folks_individual_collection_creator (gpointer self);
static gboolean __lambda21_ (FolksIndividual* self);
GeeMultiMap* folks_web_service_details_get_web_service_addresses (FolksWebServiceDetails* self);
static gboolean ___lambda21__folks_individual_multi_valued_property_setter (gpointer self);
static void _folks_individual_connect_to_persona (FolksIndividual* self,
                                           FolksPersona* persona);
static void _folks_individual_disconnect_from_persona (FolksIndividual* self,
                                                FolksPersona* persona,
                                                FolksIndividual* replacement_individual);
void folks_persona_set_individual (FolksPersona* self,
                                   FolksIndividual* value);
static void __folks_individual_persona_notify_cb_g_object_notify (GObject* _sender,
                                                           GParamSpec* pspec,
                                                           gpointer self);
static void __folks_individual_persona_group_changed_cb_folks_group_details_group_changed (FolksGroupDetails* _sender,
                                                                                    const gchar* group,
                                                                                    gboolean is_member,
                                                                                    gpointer self);
static gboolean __lambda25_ (FolksIndividual* self,
                      FolksPersona* p);
gboolean folks_structured_name_is_empty (FolksStructuredName* self);
static gboolean ___lambda25__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda26_ (FolksPersona* a,
                  FolksPersona* b);
static gint ___lambda26__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda27_ (FolksIndividual* self,
                  FolksPersona* p);
gboolean folks_structured_name_equal (FolksStructuredName* self,
                                      FolksStructuredName* other);
static void ___lambda27__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
static gboolean __lambda28_ (FolksIndividual* self,
                      FolksPersona* p);
static gboolean ___lambda28__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda29_ (FolksPersona* a,
                  FolksPersona* b);
static gint ___lambda29__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda30_ (FolksIndividual* self,
                  FolksPersona* p);
static void ___lambda30__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
static gboolean __lambda31_ (FolksIndividual* self,
                      FolksPersona* p);
static gboolean ___lambda31__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda32_ (FolksPersona* a,
                  FolksPersona* b);
static gint ___lambda32__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda33_ (FolksIndividual* self,
                  FolksPersona* p);
static void ___lambda33__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
GeeSet* folks_individual_get_personas (FolksIndividual* self);
static gboolean __lambda34_ (FolksIndividual* self,
                      FolksPersona* p);
FolksGender folks_gender_details_get_gender (FolksGenderDetails* self);
static gboolean ___lambda34__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda35_ (FolksPersona* a,
                  FolksPersona* b);
static gint ___lambda35__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda36_ (FolksIndividual* self,
                  FolksPersona* p);
static void ___lambda36__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
static gboolean __lambda37_ (FolksIndividual* self);
static gboolean ___lambda37__folks_individual_property_is_null (gpointer self);
static void __lambda38_ (FolksIndividual* self);
static void ___lambda38__folks_individual_collection_creator (gpointer self);
static gboolean __lambda39_ (FolksIndividual* self);
GeeSet* folks_url_details_get_urls (FolksUrlDetails* self);
void folks_abstract_field_details_extend_parameters (FolksAbstractFieldDetails* self,
                                                     GeeMultiMap* additional);
GeeMultiMap* folks_abstract_field_details_get_parameters (FolksAbstractFieldDetails* self);
FolksUrlFieldDetails* folks_url_field_details_new (const gchar* value,
                                                   GeeMultiMap* parameters);
FolksUrlFieldDetails* folks_url_field_details_construct (GType object_type,
                                                         const gchar* value,
                                                         GeeMultiMap* parameters);
gboolean folks_utils_set_afd_equal (GeeSet* a,
                                    GeeSet* b);
static gboolean ___lambda39__folks_individual_multi_valued_property_setter (gpointer self);
static gboolean __lambda40_ (FolksIndividual* self);
static gboolean ___lambda40__folks_individual_property_is_null (gpointer self);
static void __lambda41_ (FolksIndividual* self);
static void ___lambda41__folks_individual_collection_creator (gpointer self);
static gboolean __lambda42_ (FolksIndividual* self);
FolksPhoneFieldDetails* folks_phone_field_details_new (const gchar* value,
                                                       GeeMultiMap* parameters);
FolksPhoneFieldDetails* folks_phone_field_details_construct (GType object_type,
                                                             const gchar* value,
                                                             GeeMultiMap* parameters);
gboolean folks_utils_set_string_afd_equal (GeeSet* a,
                                           GeeSet* b);
static gboolean ___lambda42__folks_individual_multi_valued_property_setter (gpointer self);
static gboolean __lambda43_ (FolksIndividual* self);
static gboolean ___lambda43__folks_individual_property_is_null (gpointer self);
static void __lambda44_ (FolksIndividual* self);
static void ___lambda44__folks_individual_collection_creator (gpointer self);
static gboolean __lambda45_ (FolksIndividual* self);
FolksEmailFieldDetails* folks_email_field_details_new (const gchar* value,
                                                       GeeMultiMap* parameters);
FolksEmailFieldDetails* folks_email_field_details_construct (GType object_type,
                                                             const gchar* value,
                                                             GeeMultiMap* parameters);
static gboolean ___lambda45__folks_individual_multi_valued_property_setter (gpointer self);
static gboolean __lambda46_ (FolksIndividual* self);
static gboolean ___lambda46__folks_individual_property_is_null (gpointer self);
static void __lambda47_ (FolksIndividual* self);
static void ___lambda47__folks_individual_collection_creator (gpointer self);
static gboolean __lambda48_ (FolksIndividual* self);
GeeSet* folks_role_details_get_roles (FolksRoleDetails* self);
static gboolean ___lambda48__folks_individual_multi_valued_property_setter (gpointer self);
static gboolean __lambda58_ (FolksIndividual* self);
static gboolean ___lambda58__folks_individual_property_is_null (gpointer self);
static void __lambda59_ (FolksIndividual* self);
static void ___lambda59__folks_individual_collection_creator (gpointer self);
static gboolean __lambda60_ (FolksIndividual* self);
GeeSet* folks_local_id_details_get_local_ids (FolksLocalIdDetails* self);
static gboolean ___lambda60__folks_individual_multi_valued_property_setter (gpointer self);
static gboolean __lambda61_ (FolksIndividual* self,
                      FolksPersona* p);
FolksLocation* folks_location_details_get_location (FolksLocationDetails* self);
static gboolean ___lambda61__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda62_ (FolksPersona* a,
                  FolksPersona* b);
static gint ___lambda62__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda63_ (FolksIndividual* self,
                  FolksPersona* p);
gboolean folks_location_equal (FolksLocation* self,
                               FolksLocation* other);
static void ___lambda63__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
static gboolean __lambda55_ (FolksIndividual* self);
static gboolean ___lambda55__folks_individual_property_is_null (gpointer self);
static void __lambda56_ (FolksIndividual* self);
static void ___lambda56__folks_individual_collection_creator (gpointer self);
static gboolean __lambda57_ (FolksIndividual* self);
static gboolean ___lambda57__folks_individual_multi_valued_property_setter (gpointer self);
static gboolean __lambda49_ (FolksIndividual* self,
                      FolksPersona* p);
GDateTime* folks_birthday_details_get_birthday (FolksBirthdayDetails* self);
const gchar* folks_birthday_details_get_calendar_event_id (FolksBirthdayDetails* self);
static gboolean ___lambda49__folks_individual_property_filter (FolksPersona* persona,
                                                        gpointer self);
static gint __lambda50_ (FolksPersona* a,
                  FolksPersona* b);
static gint ___lambda50__gcompare_func (gconstpointer a,
                                 gconstpointer b);
static void __lambda51_ (FolksIndividual* self,
                  FolksPersona* p);
static void ___lambda51__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                                  gpointer self);
static gboolean __lambda52_ (FolksIndividual* self);
static gboolean ___lambda52__folks_individual_property_is_null (gpointer self);
static void __lambda53_ (FolksIndividual* self);
static void ___lambda53__folks_individual_collection_creator (gpointer self);
static gboolean __lambda54_ (FolksIndividual* self);
GeeSet* folks_note_details_get_notes (FolksNoteDetails* self);
static gboolean ___lambda54__folks_individual_multi_valued_property_setter (gpointer self);
static void __folks_individual_store_removed_cb_folks_persona_store_removed (FolksPersonaStore* _sender,
                                                                      gpointer self);
static void __folks_individual_store_personas_changed_cb_folks_persona_store_personas_changed (FolksPersonaStore* _sender,
                                                                                        GeeSet* added,
                                                                                        GeeSet* removed,
                                                                                        const gchar* message,
                                                                                        FolksPersona* actor,
                                                                                        FolksGroupDetailsChangeReason reason,
                                                                                        gpointer self);
gboolean folks_individual_get_is_user (FolksIndividual* self);
static void folks_individual_set_is_user (FolksIndividual* self,
                                   gboolean value);
const gchar* folks_persona_store_get_id (FolksPersonaStore* self);
static void folks_individual_set_id (FolksIndividual* self,
                              const gchar* value);
void folks_individual_replace (FolksIndividual* self,
                               FolksIndividual* replacement_individual);
gboolean folks_individual_has_anti_link_with_persona (FolksIndividual* self,
                                                      FolksPersona* p);
GType folks_anti_linkable_get_type (void) G_GNUC_CONST;
gboolean folks_anti_linkable_has_anti_link_with_persona (FolksAntiLinkable* self,
                                                         FolksPersona* other_persona);
gboolean folks_individual_has_anti_link_with_individual (FolksIndividual* self,
                                                         FolksIndividual* i);
static gchar** _vala_array_dup2 (gchar** self,
                          int length);
const gchar* folks_individual_get_display_name (FolksIndividual* self);
void folks_name_details_change_structured_name (FolksNameDetails* self,
                                                FolksStructuredName* name,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
void folks_name_details_change_structured_name_finish (FolksNameDetails* self,
                                                       GAsyncResult* _res_,
                                                       GError** error);
void folks_name_details_change_full_name (FolksNameDetails* self,
                                          const gchar* full_name,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
void folks_name_details_change_full_name_finish (FolksNameDetails* self,
                                                 GAsyncResult* _res_,
                                                 GError** error);
void folks_gender_details_change_gender (FolksGenderDetails* self,
                                         FolksGender gender,
                                         GAsyncReadyCallback _callback_,
                                         gpointer _user_data_);
void folks_gender_details_change_gender_finish (FolksGenderDetails* self,
                                                GAsyncResult* _res_,
                                                GError** error);
void folks_url_details_change_urls (FolksUrlDetails* self,
                                    GeeSet* urls,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_);
void folks_url_details_change_urls_finish (FolksUrlDetails* self,
                                           GAsyncResult* _res_,
                                           GError** error);
void folks_phone_details_change_phone_numbers (FolksPhoneDetails* self,
                                               GeeSet* phone_numbers,
                                               GAsyncReadyCallback _callback_,
                                               gpointer _user_data_);
void folks_phone_details_change_phone_numbers_finish (FolksPhoneDetails* self,
                                                      GAsyncResult* _res_,
                                                      GError** error);
void folks_email_details_change_email_addresses (FolksEmailDetails* self,
                                                 GeeSet* email_addresses,
                                                 GAsyncReadyCallback _callback_,
                                                 gpointer _user_data_);
void folks_email_details_change_email_addresses_finish (FolksEmailDetails* self,
                                                        GAsyncResult* _res_,
                                                        GError** error);
void folks_role_details_change_roles (FolksRoleDetails* self,
                                      GeeSet* roles,
                                      GAsyncReadyCallback _callback_,
                                      gpointer _user_data_);
void folks_role_details_change_roles_finish (FolksRoleDetails* self,
                                             GAsyncResult* _res_,
                                             GError** error);
void folks_local_id_details_change_local_ids (FolksLocalIdDetails* self,
                                              GeeSet* local_ids,
                                              GAsyncReadyCallback _callback_,
                                              gpointer _user_data_);
void folks_local_id_details_change_local_ids_finish (FolksLocalIdDetails* self,
                                                     GAsyncResult* _res_,
                                                     GError** error);
void folks_location_details_change_location (FolksLocationDetails* self,
                                             FolksLocation* location,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_);
void folks_location_details_change_location_finish (FolksLocationDetails* self,
                                                    GAsyncResult* _res_,
                                                    GError** error);
void folks_birthday_details_change_birthday (FolksBirthdayDetails* self,
                                             GDateTime* birthday,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_);
void folks_birthday_details_change_birthday_finish (FolksBirthdayDetails* self,
                                                    GAsyncResult* _res_,
                                                    GError** error);
void folks_birthday_details_change_calendar_event_id (FolksBirthdayDetails* self,
                                                      const gchar* event_id,
                                                      GAsyncReadyCallback _callback_,
                                                      gpointer _user_data_);
void folks_birthday_details_change_calendar_event_id_finish (FolksBirthdayDetails* self,
                                                             GAsyncResult* _res_,
                                                             GError** error);
void folks_note_details_change_notes (FolksNoteDetails* self,
                                      GeeSet* notes,
                                      GAsyncReadyCallback _callback_,
                                      gpointer _user_data_);
void folks_note_details_change_notes_finish (FolksNoteDetails* self,
                                             GAsyncResult* _res_,
                                             GError** error);
void folks_postal_address_details_change_postal_addresses (FolksPostalAddressDetails* self,
                                                           GeeSet* postal_addresses,
                                                           GAsyncReadyCallback _callback_,
                                                           gpointer _user_data_);
void folks_postal_address_details_change_postal_addresses_finish (FolksPostalAddressDetails* self,
                                                                  GAsyncResult* _res_,
                                                                  GError** error);
void folks_im_details_change_im_addresses (FolksImDetails* self,
                                           GeeMultiMap* im_addresses,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_);
void folks_im_details_change_im_addresses_finish (FolksImDetails* self,
                                                  GAsyncResult* _res_,
                                                  GError** error);
void folks_web_service_details_change_web_service_addresses (FolksWebServiceDetails* self,
                                                             GeeMultiMap* web_service_addresses,
                                                             GAsyncReadyCallback _callback_,
                                                             gpointer _user_data_);
void folks_web_service_details_change_web_service_addresses_finish (FolksWebServiceDetails* self,
                                                                    GAsyncResult* _res_,
                                                                    GError** error);
guint folks_interaction_details_get_im_interaction_count (FolksInteractionDetails* self);
GDateTime* folks_interaction_details_get_last_im_interaction_datetime (FolksInteractionDetails* self);
guint folks_interaction_details_get_call_interaction_count (FolksInteractionDetails* self);
GDateTime* folks_interaction_details_get_last_call_interaction_datetime (FolksInteractionDetails* self);
void folks_individual_set_personas (FolksIndividual* self,
                                    GeeSet* value);
static void g_cclosure_user_marshal_VOID__OBJECT_OBJECT (GClosure * closure,
                                                  GValue * return_value,
                                                  guint n_param_values,
                                                  const GValue * param_values,
                                                  gpointer invocation_hint,
                                                  gpointer marshal_data);
static GObject * folks_individual_constructor (GType type,
                                        guint n_construct_properties,
                                        GObjectConstructParam * construct_properties);
static void folks_individual_finalize (GObject * obj);
static void _vala_folks_individual_get_property (GObject * object,
                                          guint property_id,
                                          GValue * value,
                                          GParamSpec * pspec);
void folks_avatar_details_set_avatar (FolksAvatarDetails* self,
                                      GLoadableIcon* value);
void folks_alias_details_set_alias (FolksAliasDetails* self,
                                    const gchar* value);
void folks_name_details_set_structured_name (FolksNameDetails* self,
                                             FolksStructuredName* value);
void folks_name_details_set_full_name (FolksNameDetails* self,
                                       const gchar* value);
void folks_name_details_set_nickname (FolksNameDetails* self,
                                      const gchar* value);
void folks_gender_details_set_gender (FolksGenderDetails* self,
                                      FolksGender value);
void folks_url_details_set_urls (FolksUrlDetails* self,
                                 GeeSet* value);
void folks_phone_details_set_phone_numbers (FolksPhoneDetails* self,
                                            GeeSet* value);
void folks_email_details_set_email_addresses (FolksEmailDetails* self,
                                              GeeSet* value);
void folks_role_details_set_roles (FolksRoleDetails* self,
                                   GeeSet* value);
void folks_local_id_details_set_local_ids (FolksLocalIdDetails* self,
                                           GeeSet* value);
void folks_location_details_set_location (FolksLocationDetails* self,
                                          FolksLocation* value);
void folks_birthday_details_set_birthday (FolksBirthdayDetails* self,
                                          GDateTime* value);
void folks_birthday_details_set_calendar_event_id (FolksBirthdayDetails* self,
                                                   const gchar* value);
void folks_note_details_set_notes (FolksNoteDetails* self,
                                   GeeSet* value);
void folks_postal_address_details_set_postal_addresses (FolksPostalAddressDetails* self,
                                                        GeeSet* value);
void folks_favourite_details_set_is_favourite (FolksFavouriteDetails* self,
                                               gboolean value);
void folks_group_details_set_groups (FolksGroupDetails* self,
                                     GeeSet* value);
void folks_im_details_set_im_addresses (FolksImDetails* self,
                                        GeeMultiMap* value);
void folks_web_service_details_set_web_service_addresses (FolksWebServiceDetails* self,
                                                          GeeMultiMap* value);
static void _vala_folks_individual_set_property (GObject * object,
                                          guint property_id,
                                          const GValue * value,
                                          GParamSpec * pspec);
static void _vala_array_destroy (gpointer array,
                          gint array_length,
                          GDestroyNotify destroy_func);
static void _vala_array_free (gpointer array,
                       gint array_length,
                       GDestroyNotify destroy_func);

static const FolksIndividual_Notifier FOLKS_INDIVIDUAL__notifiers[25] = {{"alias", __folks_individual_notify_alias_cb_folksindividual_unboundnotifier}, {"avatar", __folks_individual_notify_avatar_cb_folksindividual_unboundnotifier}, {"presence-message", __folks_individual_notify_presence_cb_folksindividual_unboundnotifier}, {"client-types", __folks_individual_notify_presence_cb_folksindividual_unboundnotifier}, {"presence-type", __folks_individual_notify_presence_cb_folksindividual_unboundnotifier}, {"im-addresses", __folks_individual_notify_im_addresses_cb_folksindividual_unboundnotifier}, {"web-service-addresses", __folks_individual_notify_web_service_addresses_cb_folksindividual_unboundnotifier}, {"is-favourite", __folks_individual_notify_is_favourite_cb_folksindividual_unboundnotifier}, {"structured-name", __folks_individual_notify_structured_name_cb_folksindividual_unboundnotifier}, {"full-name", __folks_individual_notify_full_name_cb_folksindividual_unboundnotifier}, {"nickname", __folks_individual_notify_nickname_cb_folksindividual_unboundnotifier}, {"gender", __folks_individual_notify_gender_cb_folksindividual_unboundnotifier}, {"urls", __folks_individual_notify_urls_cb_folksindividual_unboundnotifier}, {"phone-numbers", __folks_individual_notify_phone_numbers_cb_folksindividual_unboundnotifier}, {"email-addresses", __folks_individual_notify_email_addresses_cb_folksindividual_unboundnotifier}, {"roles", __folks_individual_notify_roles_cb_folksindividual_unboundnotifier}, {"birthday", __folks_individual_notify_birthday_cb_folksindividual_unboundnotifier}, {"notes", __folks_individual_notify_notes_cb_folksindividual_unboundnotifier}, {"postal-addresses", __folks_individual_notify_postal_addresses_cb_folksindividual_unboundnotifier}, {"local-ids", __folks_individual_notify_local_ids_cb_folksindividual_unboundnotifier}, {"location", __folks_individual_notify_location_cb_folksindividual_unboundnotifier}, {"im-interaction-count", __folks_individual_notify_im_interaction_count_cb_folksindividual_unboundnotifier}, {"call-interaction-count", __folks_individual_notify_call_interaction_count_cb_folksindividual_unboundnotifier}, {"last-im-interaction-datetime", __folks_individual_notify_last_im_interaction_datetime_cb_folksindividual_unboundnotifier}, {"last-call-interaction-datetime", __folks_individual_notify_last_call_interaction_datetime_cb_folksindividual_unboundnotifier}};

/**
 * Trust level for an {@link Individual} for use in the UI.
 *
 * @since 0.1.15
 */
GType
folks_trust_level_get_type (void)
{
	static volatile gsize folks_trust_level_type_id__volatile = 0;
	if (g_once_init_enter (&folks_trust_level_type_id__volatile)) {
		static const GEnumValue values[] = {{FOLKS_TRUST_LEVEL_NONE, "FOLKS_TRUST_LEVEL_NONE", "none"}, {FOLKS_TRUST_LEVEL_PERSONAS, "FOLKS_TRUST_LEVEL_PERSONAS", "personas"}, {0, NULL, NULL}};
		GType folks_trust_level_type_id;
		folks_trust_level_type_id = g_enum_register_static ("FolksTrustLevel", values);
		g_once_init_leave (&folks_trust_level_type_id__volatile, folks_trust_level_type_id);
	}
	return folks_trust_level_type_id__volatile;
}


static void
__folks_individual_notify_alias_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                    FolksPersona* persona,
                                                                    GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_alias_cb (_self_, persona, ps);
#line 2188 "individual.c"
}


static void
__folks_individual_notify_avatar_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                     FolksPersona* persona,
                                                                     GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_avatar_cb (_self_, persona, ps);
#line 2199 "individual.c"
}


static void
__folks_individual_notify_presence_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                       FolksPersona* persona,
                                                                       GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_presence_cb (_self_, persona, ps);
#line 2210 "individual.c"
}


static void
__folks_individual_notify_im_addresses_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                           FolksPersona* persona,
                                                                           GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_im_addresses_cb (_self_, persona, ps);
#line 2221 "individual.c"
}


static void
__folks_individual_notify_web_service_addresses_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                    FolksPersona* persona,
                                                                                    GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_web_service_addresses_cb (_self_, persona, ps);
#line 2232 "individual.c"
}


static void
__folks_individual_notify_is_favourite_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                           FolksPersona* persona,
                                                                           GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_is_favourite_cb (_self_, persona, ps);
#line 2243 "individual.c"
}


static void
__folks_individual_notify_structured_name_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                              FolksPersona* persona,
                                                                              GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_structured_name_cb (_self_, persona, ps);
#line 2254 "individual.c"
}


static void
__folks_individual_notify_full_name_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                        FolksPersona* persona,
                                                                        GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_full_name_cb (_self_, persona, ps);
#line 2265 "individual.c"
}


static void
__folks_individual_notify_nickname_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                       FolksPersona* persona,
                                                                       GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_nickname_cb (_self_, persona, ps);
#line 2276 "individual.c"
}


static void
__folks_individual_notify_gender_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                     FolksPersona* persona,
                                                                     GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_gender_cb (_self_, persona, ps);
#line 2287 "individual.c"
}


static void
__folks_individual_notify_urls_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                   FolksPersona* persona,
                                                                   GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_urls_cb (_self_, persona, ps);
#line 2298 "individual.c"
}


static void
__folks_individual_notify_phone_numbers_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                            FolksPersona* persona,
                                                                            GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_phone_numbers_cb (_self_, persona, ps);
#line 2309 "individual.c"
}


static void
__folks_individual_notify_email_addresses_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                              FolksPersona* persona,
                                                                              GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_email_addresses_cb (_self_, persona, ps);
#line 2320 "individual.c"
}


static void
__folks_individual_notify_roles_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                    FolksPersona* persona,
                                                                    GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_roles_cb (_self_, persona, ps);
#line 2331 "individual.c"
}


static void
__folks_individual_notify_birthday_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                       FolksPersona* persona,
                                                                       GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_birthday_cb (_self_, persona, ps);
#line 2342 "individual.c"
}


static void
__folks_individual_notify_notes_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                    FolksPersona* persona,
                                                                    GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_notes_cb (_self_, persona, ps);
#line 2353 "individual.c"
}


static void
__folks_individual_notify_postal_addresses_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                               FolksPersona* persona,
                                                                               GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_postal_addresses_cb (_self_, persona, ps);
#line 2364 "individual.c"
}


static void
__folks_individual_notify_local_ids_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                        FolksPersona* persona,
                                                                        GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_local_ids_cb (_self_, persona, ps);
#line 2375 "individual.c"
}


static void
__folks_individual_notify_location_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                       FolksPersona* persona,
                                                                       GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_location_cb (_self_, persona, ps);
#line 2386 "individual.c"
}


static void
__folks_individual_notify_im_interaction_count_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                   FolksPersona* persona,
                                                                                   GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_im_interaction_count_cb (_self_, persona, ps);
#line 2397 "individual.c"
}


static void
__folks_individual_notify_call_interaction_count_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                     FolksPersona* persona,
                                                                                     GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_call_interaction_count_cb (_self_, persona, ps);
#line 2408 "individual.c"
}


static void
__folks_individual_notify_last_im_interaction_datetime_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                           FolksPersona* persona,
                                                                                           GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_last_im_interaction_datetime_cb (_self_, persona, ps);
#line 2419 "individual.c"
}


static void
__folks_individual_notify_last_call_interaction_datetime_cb_folksindividual_unboundnotifier (FolksIndividual* _self_,
                                                                                             FolksPersona* persona,
                                                                                             GParamSpec* ps)
{
#line 1325 "/run/build/folks/folks/individual.vala"
	_folks_individual_notify_last_call_interaction_datetime_cb (_self_, persona, ps);
#line 2430 "individual.c"
}


static void
folks_individual_real_change_avatar_data_free (gpointer _data)
{
	FolksIndividualChangeAvatarData* _data_;
	_data_ = _data;
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->avatar);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->self);
#line 84 "/run/build/folks/folks/individual.vala"
	g_slice_free (FolksIndividualChangeAvatarData, _data_);
#line 2445 "individual.c"
}


static void
folks_individual_real_change_avatar_async_ready_wrapper (GObject *source_object,
                                                         GAsyncResult *res,
                                                         void *user_data)
{
	FolksIndividualChangeAvatarData* _task_data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 84 "/run/build/folks/folks/individual.vala"
	if (_task_data_->_callback_ != NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 2461 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_->_task_complete_ = TRUE;
#line 2465 "individual.c"
}


static gpointer
_g_object_ref0 (gpointer self)
{
#line 84 "/run/build/folks/folks/individual.vala"
	return self ? g_object_ref (self) : NULL;
#line 2474 "individual.c"
}


static void
folks_individual_real_change_avatar (FolksAvatarDetails* base,
                                     GLoadableIcon* avatar,
                                     GAsyncReadyCallback _callback_,
                                     gpointer _user_data_)
{
	FolksIndividual * self;
	FolksIndividualChangeAvatarData* _data_;
	FolksIndividual* _tmp0_;
	GLoadableIcon* _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_slice_new0 (FolksIndividualChangeAvatarData);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_callback_ = _callback_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_individual_real_change_avatar_async_ready_wrapper, _user_data_);
#line 84 "/run/build/folks/folks/individual.vala"
	if (_callback_ == NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_data_->_task_complete_ = TRUE;
#line 2500 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_individual_real_change_avatar_data_free);
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->self = _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _g_object_ref0 (avatar);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->avatar);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->avatar = _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_avatar_co (_data_);
#line 2516 "individual.c"
}


static void
folks_individual_real_change_avatar_finish (FolksAvatarDetails* base,
                                            GAsyncResult* _res_,
                                            GError** error)
{
	FolksIndividualChangeAvatarData* _data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 84 "/run/build/folks/folks/individual.vala"
	if (NULL == _data_) {
#line 84 "/run/build/folks/folks/individual.vala"
		return;
#line 2532 "individual.c"
	}
}


static gboolean
_vala_string_array_contains (gchar* * stack,
                             int stack_length,
                             gchar* needle)
{
	int i;
#line 190 "/run/build/folks/folks/individual.vala"
	for (i = 0; i < stack_length; i++) {
#line 190 "/run/build/folks/folks/individual.vala"
		if (g_strcmp0 (stack[i], needle) == 0) {
#line 190 "/run/build/folks/folks/individual.vala"
			return TRUE;
#line 2549 "individual.c"
		}
	}
#line 190 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 2554 "individual.c"
}


static void
folks_individual_change_avatar_ready (GObject* source_object,
                                      GAsyncResult* _res_,
                                      gpointer _user_data_)
{
	FolksIndividualChangeAvatarData* _data_;
#line 194 "/run/build/folks/folks/individual.vala"
	_data_ = _user_data_;
#line 194 "/run/build/folks/folks/individual.vala"
	_data_->_source_object_ = source_object;
#line 194 "/run/build/folks/folks/individual.vala"
	_data_->_res_ = _res_;
#line 194 "/run/build/folks/folks/individual.vala"
	_data_->_task_complete_ = TRUE;
#line 194 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_avatar_co (_data_);
#line 2574 "individual.c"
}


static gpointer
_g_error_copy0 (gpointer self)
{
#line 204 "/run/build/folks/folks/individual.vala"
	return self ? g_error_copy (self) : NULL;
#line 2583 "individual.c"
}


static gboolean
folks_individual_real_change_avatar_co (FolksIndividualChangeAvatarData* _data_)
{
#line 163 "/run/build/folks/folks/individual.vala"
	switch (_data_->_state_) {
#line 163 "/run/build/folks/folks/individual.vala"
		case 0:
#line 2594 "individual.c"
		goto _state_0;
#line 163 "/run/build/folks/folks/individual.vala"
		case 1:
#line 2598 "individual.c"
		goto _state_1;
		default:
#line 163 "/run/build/folks/folks/individual.vala"
		g_assert_not_reached ();
#line 2603 "individual.c"
	}
	_state_0:
#line 168 "/run/build/folks/folks/individual.vala"
	_data_->_tmp2_ = _data_->self->priv->_avatar;
#line 168 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp2_ != NULL) {
#line 168 "/run/build/folks/folks/individual.vala"
		_data_->_tmp3_ = _data_->self->priv->_avatar;
#line 168 "/run/build/folks/folks/individual.vala"
		_data_->_tmp1_ = g_icon_equal ((GIcon*) G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp3_, g_loadable_icon_get_type (), GLoadableIcon), (GIcon*) _data_->avatar);
#line 2614 "individual.c"
	} else {
#line 168 "/run/build/folks/folks/individual.vala"
		_data_->_tmp1_ = FALSE;
#line 2618 "individual.c"
	}
#line 168 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp1_) {
#line 168 "/run/build/folks/folks/individual.vala"
		_data_->_tmp0_ = TRUE;
#line 2624 "individual.c"
	} else {
#line 169 "/run/build/folks/folks/individual.vala"
		_data_->_tmp5_ = _data_->self->priv->_avatar;
#line 169 "/run/build/folks/folks/individual.vala"
		if (_data_->_tmp5_ == NULL) {
#line 169 "/run/build/folks/folks/individual.vala"
			_data_->_tmp4_ = _data_->avatar == NULL;
#line 2632 "individual.c"
		} else {
#line 169 "/run/build/folks/folks/individual.vala"
			_data_->_tmp4_ = FALSE;
#line 2636 "individual.c"
		}
#line 169 "/run/build/folks/folks/individual.vala"
		_data_->_tmp0_ = _data_->_tmp4_;
#line 2640 "individual.c"
	}
#line 168 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp0_) {
#line 171 "/run/build/folks/folks/individual.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 171 "/run/build/folks/folks/individual.vala"
		if (_data_->_state_ != 0) {
#line 171 "/run/build/folks/folks/individual.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 171 "/run/build/folks/folks/individual.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2652 "individual.c"
			}
		}
#line 171 "/run/build/folks/folks/individual.vala"
		g_object_unref (_data_->_async_result);
#line 171 "/run/build/folks/folks/individual.vala"
		return FALSE;
#line 2659 "individual.c"
	}
#line 174 "/run/build/folks/folks/individual.vala"
	_data_->_tmp6_ = _data_->self->priv->_id;
#line 174 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:174: Setting avatar of individual '%s' to '%p'…", _data_->_tmp6_, _data_->avatar);
#line 176 "/run/build/folks/folks/individual.vala"
	_data_->persona_error = NULL;
#line 177 "/run/build/folks/folks/individual.vala"
	_data_->prop_changed = FALSE;
#line 2669 "individual.c"
	{
#line 181 "/run/build/folks/folks/individual.vala"
		_data_->_tmp7_ = _data_->self->priv->_persona_set;
#line 181 "/run/build/folks/folks/individual.vala"
		_data_->_tmp8_ = _g_object_ref0 (_data_->_tmp7_);
#line 181 "/run/build/folks/folks/individual.vala"
		_data_->_p_list = _data_->_tmp8_;
#line 181 "/run/build/folks/folks/individual.vala"
		_data_->_tmp9_ = _data_->_p_list;
#line 181 "/run/build/folks/folks/individual.vala"
		_data_->_tmp10_ = gee_collection_get_size ((GeeCollection*) _data_->_tmp9_);
#line 181 "/run/build/folks/folks/individual.vala"
		_data_->_tmp11_ = _data_->_tmp10_;
#line 181 "/run/build/folks/folks/individual.vala"
		_data_->_p_size = _data_->_tmp11_;
#line 181 "/run/build/folks/folks/individual.vala"
		_data_->_p_index = -1;
#line 181 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->_tmp12_ = _data_->_p_index;
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->_p_index = _data_->_tmp12_ + 1;
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->_tmp13_ = _data_->_p_index;
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->_tmp14_ = _data_->_p_size;
#line 181 "/run/build/folks/folks/individual.vala"
			if (!(_data_->_tmp13_ < _data_->_tmp14_)) {
#line 181 "/run/build/folks/folks/individual.vala"
				break;
#line 2701 "individual.c"
			}
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15_ = _data_->_p_list;
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->_tmp16_ = _data_->_p_index;
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->_tmp17_ = folks_small_set_get (_data_->_tmp15_, _data_->_tmp16_);
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->_tmp18_ = _g_object_ref0 ((FolksPersona*) _data_->_tmp17_);
#line 181 "/run/build/folks/folks/individual.vala"
			_data_->p = _data_->_tmp18_;
#line 183 "/run/build/folks/folks/individual.vala"
			_data_->_tmp19_ = _data_->p;
#line 183 "/run/build/folks/folks/individual.vala"
			_data_->_tmp20_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp19_, FOLKS_TYPE_AVATAR_DETAILS) ? ((FolksAvatarDetails*) _data_->_tmp19_) : NULL);
#line 183 "/run/build/folks/folks/individual.vala"
			_data_->_a = _data_->_tmp20_;
#line 184 "/run/build/folks/folks/individual.vala"
			_data_->_tmp21_ = _data_->_a;
#line 184 "/run/build/folks/folks/individual.vala"
			if (_data_->_tmp21_ == NULL) {
#line 186 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->_a);
#line 186 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->p);
#line 186 "/run/build/folks/folks/individual.vala"
				continue;
#line 2729 "individual.c"
			}
#line 188 "/run/build/folks/folks/individual.vala"
			_data_->_tmp22_ = _data_->_a;
#line 188 "/run/build/folks/folks/individual.vala"
			_data_->_tmp23_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp22_, FOLKS_TYPE_AVATAR_DETAILS, FolksAvatarDetails));
#line 188 "/run/build/folks/folks/individual.vala"
			_data_->a = _data_->_tmp23_;
#line 190 "/run/build/folks/folks/individual.vala"
			_data_->_tmp24_ = _data_->p;
#line 190 "/run/build/folks/folks/individual.vala"
			_data_->_tmp25_ = folks_persona_get_writeable_properties (_data_->_tmp24_, &_data_->_tmp25__length1);
#line 190 "/run/build/folks/folks/individual.vala"
			_data_->_tmp26_ = _data_->_tmp25_;
#line 190 "/run/build/folks/folks/individual.vala"
			_data_->_tmp26__length1 = _data_->_tmp25__length1;
#line 190 "/run/build/folks/folks/individual.vala"
			if (_vala_string_array_contains (_data_->_tmp26_, _data_->_tmp26__length1, "avatar")) {
#line 2747 "individual.c"
				{
#line 194 "/run/build/folks/folks/individual.vala"
					_data_->_tmp27_ = _data_->a;
#line 194 "/run/build/folks/folks/individual.vala"
					_data_->_state_ = 1;
#line 194 "/run/build/folks/folks/individual.vala"
					folks_avatar_details_change_avatar (_data_->_tmp27_, _data_->avatar, folks_individual_change_avatar_ready, _data_);
#line 194 "/run/build/folks/folks/individual.vala"
					return FALSE;
#line 2757 "individual.c"
					_state_1:
#line 194 "/run/build/folks/folks/individual.vala"
					folks_avatar_details_change_avatar_finish (_data_->_tmp27_, _data_->_res_, &_data_->_inner_error_);
#line 194 "/run/build/folks/folks/individual.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 194 "/run/build/folks/folks/individual.vala"
						if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 2765 "individual.c"
							goto __catch10_folks_property_error;
						}
#line 194 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 194 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 194 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 194 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 194 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 194 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 194 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 194 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 194 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 2786 "individual.c"
					}
#line 195 "/run/build/folks/folks/individual.vala"
					_data_->_tmp28_ = _data_->p;
#line 195 "/run/build/folks/folks/individual.vala"
					_data_->_tmp29_ = folks_persona_get_uid (_data_->_tmp28_);
#line 195 "/run/build/folks/folks/individual.vala"
					_data_->_tmp30_ = _data_->_tmp29_;
#line 195 "/run/build/folks/folks/individual.vala"
					g_debug ("individual.vala:195:     written to writeable persona '%s'", _data_->_tmp30_);
#line 196 "/run/build/folks/folks/individual.vala"
					_data_->prop_changed = TRUE;
#line 2798 "individual.c"
				}
				goto __finally10;
				__catch10_folks_property_error:
				{
#line 192 "/run/build/folks/folks/individual.vala"
					_data_->e = _data_->_inner_error_;
#line 192 "/run/build/folks/folks/individual.vala"
					_data_->_inner_error_ = NULL;
#line 202 "/run/build/folks/folks/individual.vala"
					_data_->_tmp31_ = _data_->persona_error;
#line 202 "/run/build/folks/folks/individual.vala"
					if (_data_->_tmp31_ == NULL) {
#line 204 "/run/build/folks/folks/individual.vala"
						_data_->_tmp32_ = _data_->e;
#line 204 "/run/build/folks/folks/individual.vala"
						_data_->_tmp33_ = _g_error_copy0 (_data_->_tmp32_);
#line 204 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 204 "/run/build/folks/folks/individual.vala"
						_data_->persona_error = _data_->_tmp33_;
#line 2819 "individual.c"
					}
#line 192 "/run/build/folks/folks/individual.vala"
					_g_error_free0 (_data_->e);
#line 2823 "individual.c"
				}
				__finally10:
#line 192 "/run/build/folks/folks/individual.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 192 "/run/build/folks/folks/individual.vala"
					if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 192 "/run/build/folks/folks/individual.vala"
						g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 192 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 192 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 2846 "individual.c"
					} else {
#line 192 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 192 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 192 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 192 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 192 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 192 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 2866 "individual.c"
					}
				}
			}
#line 181 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->a);
#line 181 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->_a);
#line 181 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->p);
#line 2876 "individual.c"
		}
#line 181 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_data_->_p_list);
#line 2880 "individual.c"
	}
#line 212 "/run/build/folks/folks/individual.vala"
	_data_->_tmp34_ = _data_->prop_changed;
#line 212 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp34_ == FALSE) {
#line 214 "/run/build/folks/folks/individual.vala"
		_data_->_tmp35_ = _data_->persona_error;
#line 214 "/run/build/folks/folks/individual.vala"
		if (_data_->_tmp35_ == NULL) {
#line 216 "/run/build/folks/folks/individual.vala"
			_data_->_tmp36_ = g_error_new (FOLKS_PROPERTY_ERROR, FOLKS_PROPERTY_ERROR_NOT_WRITEABLE, _ ("Failed to change property ‘%s’: No suitable personas were found."), "avatar");
#line 216 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 216 "/run/build/folks/folks/individual.vala"
			_data_->persona_error = _data_->_tmp36_;
#line 2896 "individual.c"
		}
#line 221 "/run/build/folks/folks/individual.vala"
		_data_->_tmp37_ = _data_->persona_error;
#line 221 "/run/build/folks/folks/individual.vala"
		_data_->_tmp38_ = _g_error_copy0 (_data_->_tmp37_);
#line 221 "/run/build/folks/folks/individual.vala"
		_data_->_inner_error_ = _data_->_tmp38_;
#line 221 "/run/build/folks/folks/individual.vala"
		if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 221 "/run/build/folks/folks/individual.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 221 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 221 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 221 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 2914 "individual.c"
		} else {
#line 221 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 221 "/run/build/folks/folks/individual.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 221 "/run/build/folks/folks/individual.vala"
			g_clear_error (&_data_->_inner_error_);
#line 221 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 221 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 2926 "individual.c"
		}
	}
#line 163 "/run/build/folks/folks/individual.vala"
	_g_error_free0 (_data_->persona_error);
#line 163 "/run/build/folks/folks/individual.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 163 "/run/build/folks/folks/individual.vala"
	if (_data_->_state_ != 0) {
#line 163 "/run/build/folks/folks/individual.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 163 "/run/build/folks/folks/individual.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 2939 "individual.c"
		}
	}
#line 163 "/run/build/folks/folks/individual.vala"
	g_object_unref (_data_->_async_result);
#line 163 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 2946 "individual.c"
}


static void
folks_individual_real_change_alias_data_free (gpointer _data)
{
	FolksIndividualChangeAliasData* _data_;
	_data_ = _data;
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->alias);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->self);
#line 84 "/run/build/folks/folks/individual.vala"
	g_slice_free (FolksIndividualChangeAliasData, _data_);
#line 2961 "individual.c"
}


static void
folks_individual_real_change_alias_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	FolksIndividualChangeAliasData* _task_data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 84 "/run/build/folks/folks/individual.vala"
	if (_task_data_->_callback_ != NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 2977 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_->_task_complete_ = TRUE;
#line 2981 "individual.c"
}


static void
folks_individual_real_change_alias (FolksAliasDetails* base,
                                    const gchar* alias,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	FolksIndividual * self;
	FolksIndividualChangeAliasData* _data_;
	FolksIndividual* _tmp0_;
	gchar* _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_slice_new0 (FolksIndividualChangeAliasData);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_callback_ = _callback_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_individual_real_change_alias_async_ready_wrapper, _user_data_);
#line 84 "/run/build/folks/folks/individual.vala"
	if (_callback_ == NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_data_->_task_complete_ = TRUE;
#line 3007 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_individual_real_change_alias_data_free);
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->self = _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp1_ = g_strdup (alias);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->alias);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->alias = _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_alias_co (_data_);
#line 3023 "individual.c"
}


static void
folks_individual_real_change_alias_finish (FolksAliasDetails* base,
                                           GAsyncResult* _res_,
                                           GError** error)
{
	FolksIndividualChangeAliasData* _data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 84 "/run/build/folks/folks/individual.vala"
	if (NULL == _data_) {
#line 84 "/run/build/folks/folks/individual.vala"
		return;
#line 3039 "individual.c"
	}
}


/**
   * {@inheritDoc}
   *
   * @since 0.6.2
   */
static void
folks_individual_change_alias_ready (GObject* source_object,
                                     GAsyncResult* _res_,
                                     gpointer _user_data_)
{
	FolksIndividualChangeAliasData* _data_;
#line 381 "/run/build/folks/folks/individual.vala"
	_data_ = _user_data_;
#line 381 "/run/build/folks/folks/individual.vala"
	_data_->_source_object_ = source_object;
#line 381 "/run/build/folks/folks/individual.vala"
	_data_->_res_ = _res_;
#line 381 "/run/build/folks/folks/individual.vala"
	_data_->_task_complete_ = TRUE;
#line 381 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_alias_co (_data_);
#line 3065 "individual.c"
}


static gboolean
folks_individual_real_change_alias_co (FolksIndividualChangeAliasData* _data_)
{
#line 351 "/run/build/folks/folks/individual.vala"
	switch (_data_->_state_) {
#line 351 "/run/build/folks/folks/individual.vala"
		case 0:
#line 3076 "individual.c"
		goto _state_0;
#line 351 "/run/build/folks/folks/individual.vala"
		case 1:
#line 3080 "individual.c"
		goto _state_1;
		default:
#line 351 "/run/build/folks/folks/individual.vala"
		g_assert_not_reached ();
#line 3085 "individual.c"
	}
	_state_0:
#line 356 "/run/build/folks/folks/individual.vala"
	_data_->_tmp0_ = _data_->self->priv->_alias;
#line 356 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_data_->_tmp0_, _data_->alias) == 0) {
#line 358 "/run/build/folks/folks/individual.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 358 "/run/build/folks/folks/individual.vala"
		if (_data_->_state_ != 0) {
#line 358 "/run/build/folks/folks/individual.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 358 "/run/build/folks/folks/individual.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 3100 "individual.c"
			}
		}
#line 358 "/run/build/folks/folks/individual.vala"
		g_object_unref (_data_->_async_result);
#line 358 "/run/build/folks/folks/individual.vala"
		return FALSE;
#line 3107 "individual.c"
	}
#line 361 "/run/build/folks/folks/individual.vala"
	_data_->_tmp1_ = _data_->self->priv->_id;
#line 361 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:361: Setting alias of individual '%s' to '%s'…", _data_->_tmp1_, _data_->alias);
#line 363 "/run/build/folks/folks/individual.vala"
	_data_->persona_error = NULL;
#line 364 "/run/build/folks/folks/individual.vala"
	_data_->prop_changed = FALSE;
#line 3117 "individual.c"
	{
#line 368 "/run/build/folks/folks/individual.vala"
		_data_->_tmp2_ = _data_->self->priv->_persona_set;
#line 368 "/run/build/folks/folks/individual.vala"
		_data_->_tmp3_ = _g_object_ref0 (_data_->_tmp2_);
#line 368 "/run/build/folks/folks/individual.vala"
		_data_->_p_list = _data_->_tmp3_;
#line 368 "/run/build/folks/folks/individual.vala"
		_data_->_tmp4_ = _data_->_p_list;
#line 368 "/run/build/folks/folks/individual.vala"
		_data_->_tmp5_ = gee_collection_get_size ((GeeCollection*) _data_->_tmp4_);
#line 368 "/run/build/folks/folks/individual.vala"
		_data_->_tmp6_ = _data_->_tmp5_;
#line 368 "/run/build/folks/folks/individual.vala"
		_data_->_p_size = _data_->_tmp6_;
#line 368 "/run/build/folks/folks/individual.vala"
		_data_->_p_index = -1;
#line 368 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->_tmp7_ = _data_->_p_index;
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->_p_index = _data_->_tmp7_ + 1;
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->_tmp8_ = _data_->_p_index;
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->_tmp9_ = _data_->_p_size;
#line 368 "/run/build/folks/folks/individual.vala"
			if (!(_data_->_tmp8_ < _data_->_tmp9_)) {
#line 368 "/run/build/folks/folks/individual.vala"
				break;
#line 3149 "individual.c"
			}
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->_tmp10_ = _data_->_p_list;
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->_tmp11_ = _data_->_p_index;
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->_tmp12_ = folks_small_set_get (_data_->_tmp10_, _data_->_tmp11_);
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->_tmp13_ = _g_object_ref0 ((FolksPersona*) _data_->_tmp12_);
#line 368 "/run/build/folks/folks/individual.vala"
			_data_->p = _data_->_tmp13_;
#line 370 "/run/build/folks/folks/individual.vala"
			_data_->_tmp14_ = _data_->p;
#line 370 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp14_, FOLKS_TYPE_ALIAS_DETAILS) ? ((FolksAliasDetails*) _data_->_tmp14_) : NULL);
#line 370 "/run/build/folks/folks/individual.vala"
			_data_->_a = _data_->_tmp15_;
#line 371 "/run/build/folks/folks/individual.vala"
			_data_->_tmp16_ = _data_->_a;
#line 371 "/run/build/folks/folks/individual.vala"
			if (_data_->_tmp16_ == NULL) {
#line 373 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->_a);
#line 373 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->p);
#line 373 "/run/build/folks/folks/individual.vala"
				continue;
#line 3177 "individual.c"
			}
#line 375 "/run/build/folks/folks/individual.vala"
			_data_->_tmp17_ = _data_->_a;
#line 375 "/run/build/folks/folks/individual.vala"
			_data_->_tmp18_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp17_, FOLKS_TYPE_ALIAS_DETAILS, FolksAliasDetails));
#line 375 "/run/build/folks/folks/individual.vala"
			_data_->a = _data_->_tmp18_;
#line 377 "/run/build/folks/folks/individual.vala"
			_data_->_tmp19_ = _data_->p;
#line 377 "/run/build/folks/folks/individual.vala"
			_data_->_tmp20_ = folks_persona_get_writeable_properties (_data_->_tmp19_, &_data_->_tmp20__length1);
#line 377 "/run/build/folks/folks/individual.vala"
			_data_->_tmp21_ = _data_->_tmp20_;
#line 377 "/run/build/folks/folks/individual.vala"
			_data_->_tmp21__length1 = _data_->_tmp20__length1;
#line 377 "/run/build/folks/folks/individual.vala"
			if (_vala_string_array_contains (_data_->_tmp21_, _data_->_tmp21__length1, "alias")) {
#line 3195 "individual.c"
				{
#line 381 "/run/build/folks/folks/individual.vala"
					_data_->_tmp22_ = _data_->a;
#line 381 "/run/build/folks/folks/individual.vala"
					_data_->_state_ = 1;
#line 381 "/run/build/folks/folks/individual.vala"
					folks_alias_details_change_alias (_data_->_tmp22_, _data_->alias, folks_individual_change_alias_ready, _data_);
#line 381 "/run/build/folks/folks/individual.vala"
					return FALSE;
#line 3205 "individual.c"
					_state_1:
#line 381 "/run/build/folks/folks/individual.vala"
					folks_alias_details_change_alias_finish (_data_->_tmp22_, _data_->_res_, &_data_->_inner_error_);
#line 381 "/run/build/folks/folks/individual.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 381 "/run/build/folks/folks/individual.vala"
						if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 3213 "individual.c"
							goto __catch11_folks_property_error;
						}
#line 381 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 381 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 381 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 381 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 381 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 381 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 381 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 381 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 381 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 3234 "individual.c"
					}
#line 382 "/run/build/folks/folks/individual.vala"
					_data_->_tmp23_ = _data_->p;
#line 382 "/run/build/folks/folks/individual.vala"
					_data_->_tmp24_ = folks_persona_get_uid (_data_->_tmp23_);
#line 382 "/run/build/folks/folks/individual.vala"
					_data_->_tmp25_ = _data_->_tmp24_;
#line 382 "/run/build/folks/folks/individual.vala"
					g_debug ("individual.vala:382:     written to writeable persona '%s'", _data_->_tmp25_);
#line 383 "/run/build/folks/folks/individual.vala"
					_data_->prop_changed = TRUE;
#line 3246 "individual.c"
				}
				goto __finally11;
				__catch11_folks_property_error:
				{
#line 379 "/run/build/folks/folks/individual.vala"
					_data_->e = _data_->_inner_error_;
#line 379 "/run/build/folks/folks/individual.vala"
					_data_->_inner_error_ = NULL;
#line 389 "/run/build/folks/folks/individual.vala"
					_data_->_tmp26_ = _data_->persona_error;
#line 389 "/run/build/folks/folks/individual.vala"
					if (_data_->_tmp26_ == NULL) {
#line 391 "/run/build/folks/folks/individual.vala"
						_data_->_tmp27_ = _data_->e;
#line 391 "/run/build/folks/folks/individual.vala"
						_data_->_tmp28_ = _g_error_copy0 (_data_->_tmp27_);
#line 391 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 391 "/run/build/folks/folks/individual.vala"
						_data_->persona_error = _data_->_tmp28_;
#line 3267 "individual.c"
					}
#line 379 "/run/build/folks/folks/individual.vala"
					_g_error_free0 (_data_->e);
#line 3271 "individual.c"
				}
				__finally11:
#line 379 "/run/build/folks/folks/individual.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 379 "/run/build/folks/folks/individual.vala"
					if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 379 "/run/build/folks/folks/individual.vala"
						g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 379 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 379 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 3294 "individual.c"
					} else {
#line 379 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 379 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 379 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 379 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 379 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 379 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 3314 "individual.c"
					}
				}
			}
#line 368 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->a);
#line 368 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->_a);
#line 368 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->p);
#line 3324 "individual.c"
		}
#line 368 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_data_->_p_list);
#line 3328 "individual.c"
	}
#line 399 "/run/build/folks/folks/individual.vala"
	_data_->_tmp29_ = _data_->prop_changed;
#line 399 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp29_ == FALSE) {
#line 401 "/run/build/folks/folks/individual.vala"
		_data_->_tmp30_ = _data_->persona_error;
#line 401 "/run/build/folks/folks/individual.vala"
		if (_data_->_tmp30_ == NULL) {
#line 403 "/run/build/folks/folks/individual.vala"
			_data_->_tmp31_ = g_error_new (FOLKS_PROPERTY_ERROR, FOLKS_PROPERTY_ERROR_NOT_WRITEABLE, _ ("Failed to change property ‘%s’: No suitable personas were found."), "alias");
#line 403 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 403 "/run/build/folks/folks/individual.vala"
			_data_->persona_error = _data_->_tmp31_;
#line 3344 "individual.c"
		}
#line 408 "/run/build/folks/folks/individual.vala"
		_data_->_tmp32_ = _data_->persona_error;
#line 408 "/run/build/folks/folks/individual.vala"
		_data_->_tmp33_ = _g_error_copy0 (_data_->_tmp32_);
#line 408 "/run/build/folks/folks/individual.vala"
		_data_->_inner_error_ = _data_->_tmp33_;
#line 408 "/run/build/folks/folks/individual.vala"
		if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 408 "/run/build/folks/folks/individual.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 408 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 408 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 408 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 3362 "individual.c"
		} else {
#line 408 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 408 "/run/build/folks/folks/individual.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 408 "/run/build/folks/folks/individual.vala"
			g_clear_error (&_data_->_inner_error_);
#line 408 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 408 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 3374 "individual.c"
		}
	}
#line 351 "/run/build/folks/folks/individual.vala"
	_g_error_free0 (_data_->persona_error);
#line 351 "/run/build/folks/folks/individual.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 351 "/run/build/folks/folks/individual.vala"
	if (_data_->_state_ != 0) {
#line 351 "/run/build/folks/folks/individual.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 351 "/run/build/folks/folks/individual.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 3387 "individual.c"
		}
	}
#line 351 "/run/build/folks/folks/individual.vala"
	g_object_unref (_data_->_async_result);
#line 351 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 3394 "individual.c"
}


static void
folks_individual_real_change_nickname_data_free (gpointer _data)
{
	FolksIndividualChangeNicknameData* _data_;
	_data_ = _data;
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->nickname);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->self);
#line 84 "/run/build/folks/folks/individual.vala"
	g_slice_free (FolksIndividualChangeNicknameData, _data_);
#line 3409 "individual.c"
}


static void
folks_individual_real_change_nickname_async_ready_wrapper (GObject *source_object,
                                                           GAsyncResult *res,
                                                           void *user_data)
{
	FolksIndividualChangeNicknameData* _task_data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 84 "/run/build/folks/folks/individual.vala"
	if (_task_data_->_callback_ != NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 3425 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_->_task_complete_ = TRUE;
#line 3429 "individual.c"
}


static void
folks_individual_real_change_nickname (FolksNameDetails* base,
                                       const gchar* nickname,
                                       GAsyncReadyCallback _callback_,
                                       gpointer _user_data_)
{
	FolksIndividual * self;
	FolksIndividualChangeNicknameData* _data_;
	FolksIndividual* _tmp0_;
	gchar* _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_slice_new0 (FolksIndividualChangeNicknameData);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_callback_ = _callback_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_individual_real_change_nickname_async_ready_wrapper, _user_data_);
#line 84 "/run/build/folks/folks/individual.vala"
	if (_callback_ == NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_data_->_task_complete_ = TRUE;
#line 3455 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_individual_real_change_nickname_data_free);
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->self = _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp1_ = g_strdup (nickname);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->nickname);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->nickname = _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_nickname_co (_data_);
#line 3471 "individual.c"
}


static void
folks_individual_real_change_nickname_finish (FolksNameDetails* base,
                                              GAsyncResult* _res_,
                                              GError** error)
{
	FolksIndividualChangeNicknameData* _data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 84 "/run/build/folks/folks/individual.vala"
	if (NULL == _data_) {
#line 84 "/run/build/folks/folks/individual.vala"
		return;
#line 3487 "individual.c"
	}
}


/**
   * {@inheritDoc}
   *
   * @since 0.6.2
   */
static void
folks_individual_change_nickname_ready (GObject* source_object,
                                        GAsyncResult* _res_,
                                        gpointer _user_data_)
{
	FolksIndividualChangeNicknameData* _data_;
#line 490 "/run/build/folks/folks/individual.vala"
	_data_ = _user_data_;
#line 490 "/run/build/folks/folks/individual.vala"
	_data_->_source_object_ = source_object;
#line 490 "/run/build/folks/folks/individual.vala"
	_data_->_res_ = _res_;
#line 490 "/run/build/folks/folks/individual.vala"
	_data_->_task_complete_ = TRUE;
#line 490 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_nickname_co (_data_);
#line 3513 "individual.c"
}


static gboolean
folks_individual_real_change_nickname_co (FolksIndividualChangeNicknameData* _data_)
{
#line 453 "/run/build/folks/folks/individual.vala"
	switch (_data_->_state_) {
#line 453 "/run/build/folks/folks/individual.vala"
		case 0:
#line 3524 "individual.c"
		goto _state_0;
#line 453 "/run/build/folks/folks/individual.vala"
		case 1:
#line 3528 "individual.c"
		goto _state_1;
		default:
#line 453 "/run/build/folks/folks/individual.vala"
		g_assert_not_reached ();
#line 3533 "individual.c"
	}
	_state_0:
#line 460 "/run/build/folks/folks/individual.vala"
	if (_data_->nickname == NULL) {
#line 3538 "individual.c"
		gchar* _tmp0_;
#line 462 "/run/build/folks/folks/individual.vala"
		_tmp0_ = g_strdup ("");
#line 462 "/run/build/folks/folks/individual.vala"
		_g_free0 (_data_->nickname);
#line 462 "/run/build/folks/folks/individual.vala"
		_data_->nickname = _tmp0_;
#line 3546 "individual.c"
	}
#line 465 "/run/build/folks/folks/individual.vala"
	_data_->_tmp1_ = _data_->self->priv->_nickname;
#line 465 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_data_->_tmp1_, _data_->nickname) == 0) {
#line 467 "/run/build/folks/folks/individual.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 467 "/run/build/folks/folks/individual.vala"
		if (_data_->_state_ != 0) {
#line 467 "/run/build/folks/folks/individual.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 467 "/run/build/folks/folks/individual.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 3560 "individual.c"
			}
		}
#line 467 "/run/build/folks/folks/individual.vala"
		g_object_unref (_data_->_async_result);
#line 467 "/run/build/folks/folks/individual.vala"
		return FALSE;
#line 3567 "individual.c"
	}
#line 470 "/run/build/folks/folks/individual.vala"
	_data_->_tmp2_ = _data_->self->priv->_id;
#line 470 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:470: Setting nickname of individual '%s' to '%s'…", _data_->_tmp2_, _data_->nickname);
#line 472 "/run/build/folks/folks/individual.vala"
	_data_->persona_error = NULL;
#line 473 "/run/build/folks/folks/individual.vala"
	_data_->prop_changed = FALSE;
#line 3577 "individual.c"
	{
#line 477 "/run/build/folks/folks/individual.vala"
		_data_->_tmp3_ = _data_->self->priv->_persona_set;
#line 477 "/run/build/folks/folks/individual.vala"
		_data_->_tmp4_ = _g_object_ref0 (_data_->_tmp3_);
#line 477 "/run/build/folks/folks/individual.vala"
		_data_->_p_list = _data_->_tmp4_;
#line 477 "/run/build/folks/folks/individual.vala"
		_data_->_tmp5_ = _data_->_p_list;
#line 477 "/run/build/folks/folks/individual.vala"
		_data_->_tmp6_ = gee_collection_get_size ((GeeCollection*) _data_->_tmp5_);
#line 477 "/run/build/folks/folks/individual.vala"
		_data_->_tmp7_ = _data_->_tmp6_;
#line 477 "/run/build/folks/folks/individual.vala"
		_data_->_p_size = _data_->_tmp7_;
#line 477 "/run/build/folks/folks/individual.vala"
		_data_->_p_index = -1;
#line 477 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->_tmp8_ = _data_->_p_index;
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->_p_index = _data_->_tmp8_ + 1;
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->_tmp9_ = _data_->_p_index;
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->_tmp10_ = _data_->_p_size;
#line 477 "/run/build/folks/folks/individual.vala"
			if (!(_data_->_tmp9_ < _data_->_tmp10_)) {
#line 477 "/run/build/folks/folks/individual.vala"
				break;
#line 3609 "individual.c"
			}
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->_tmp11_ = _data_->_p_list;
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->_tmp12_ = _data_->_p_index;
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->_tmp13_ = folks_small_set_get (_data_->_tmp11_, _data_->_tmp12_);
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->_tmp14_ = _g_object_ref0 ((FolksPersona*) _data_->_tmp13_);
#line 477 "/run/build/folks/folks/individual.vala"
			_data_->p = _data_->_tmp14_;
#line 479 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15_ = _data_->p;
#line 479 "/run/build/folks/folks/individual.vala"
			_data_->_tmp16_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp15_, FOLKS_TYPE_NAME_DETAILS) ? ((FolksNameDetails*) _data_->_tmp15_) : NULL);
#line 479 "/run/build/folks/folks/individual.vala"
			_data_->_n = _data_->_tmp16_;
#line 480 "/run/build/folks/folks/individual.vala"
			_data_->_tmp17_ = _data_->_n;
#line 480 "/run/build/folks/folks/individual.vala"
			if (_data_->_tmp17_ == NULL) {
#line 482 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->_n);
#line 482 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->p);
#line 482 "/run/build/folks/folks/individual.vala"
				continue;
#line 3637 "individual.c"
			}
#line 484 "/run/build/folks/folks/individual.vala"
			_data_->_tmp18_ = _data_->_n;
#line 484 "/run/build/folks/folks/individual.vala"
			_data_->_tmp19_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp18_, FOLKS_TYPE_NAME_DETAILS, FolksNameDetails));
#line 484 "/run/build/folks/folks/individual.vala"
			_data_->n = _data_->_tmp19_;
#line 486 "/run/build/folks/folks/individual.vala"
			_data_->_tmp20_ = _data_->p;
#line 486 "/run/build/folks/folks/individual.vala"
			_data_->_tmp21_ = folks_persona_get_writeable_properties (_data_->_tmp20_, &_data_->_tmp21__length1);
#line 486 "/run/build/folks/folks/individual.vala"
			_data_->_tmp22_ = _data_->_tmp21_;
#line 486 "/run/build/folks/folks/individual.vala"
			_data_->_tmp22__length1 = _data_->_tmp21__length1;
#line 486 "/run/build/folks/folks/individual.vala"
			if (_vala_string_array_contains (_data_->_tmp22_, _data_->_tmp22__length1, "nickname")) {
#line 3655 "individual.c"
				{
#line 490 "/run/build/folks/folks/individual.vala"
					_data_->_tmp23_ = _data_->n;
#line 490 "/run/build/folks/folks/individual.vala"
					_data_->_state_ = 1;
#line 490 "/run/build/folks/folks/individual.vala"
					folks_name_details_change_nickname (_data_->_tmp23_, _data_->nickname, folks_individual_change_nickname_ready, _data_);
#line 490 "/run/build/folks/folks/individual.vala"
					return FALSE;
#line 3665 "individual.c"
					_state_1:
#line 490 "/run/build/folks/folks/individual.vala"
					folks_name_details_change_nickname_finish (_data_->_tmp23_, _data_->_res_, &_data_->_inner_error_);
#line 490 "/run/build/folks/folks/individual.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 490 "/run/build/folks/folks/individual.vala"
						if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 3673 "individual.c"
							goto __catch12_folks_property_error;
						}
#line 490 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->n);
#line 490 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_n);
#line 490 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 490 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 490 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 490 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 490 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 490 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 490 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 3694 "individual.c"
					}
#line 491 "/run/build/folks/folks/individual.vala"
					_data_->_tmp24_ = _data_->p;
#line 491 "/run/build/folks/folks/individual.vala"
					_data_->_tmp25_ = folks_persona_get_uid (_data_->_tmp24_);
#line 491 "/run/build/folks/folks/individual.vala"
					_data_->_tmp26_ = _data_->_tmp25_;
#line 491 "/run/build/folks/folks/individual.vala"
					g_debug ("individual.vala:491:     written to writeable persona '%s'", _data_->_tmp26_);
#line 492 "/run/build/folks/folks/individual.vala"
					_data_->prop_changed = TRUE;
#line 3706 "individual.c"
				}
				goto __finally12;
				__catch12_folks_property_error:
				{
#line 488 "/run/build/folks/folks/individual.vala"
					_data_->e = _data_->_inner_error_;
#line 488 "/run/build/folks/folks/individual.vala"
					_data_->_inner_error_ = NULL;
#line 498 "/run/build/folks/folks/individual.vala"
					_data_->_tmp27_ = _data_->persona_error;
#line 498 "/run/build/folks/folks/individual.vala"
					if (_data_->_tmp27_ == NULL) {
#line 500 "/run/build/folks/folks/individual.vala"
						_data_->_tmp28_ = _data_->e;
#line 500 "/run/build/folks/folks/individual.vala"
						_data_->_tmp29_ = _g_error_copy0 (_data_->_tmp28_);
#line 500 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 500 "/run/build/folks/folks/individual.vala"
						_data_->persona_error = _data_->_tmp29_;
#line 3727 "individual.c"
					}
#line 488 "/run/build/folks/folks/individual.vala"
					_g_error_free0 (_data_->e);
#line 3731 "individual.c"
				}
				__finally12:
#line 488 "/run/build/folks/folks/individual.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 488 "/run/build/folks/folks/individual.vala"
					if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 488 "/run/build/folks/folks/individual.vala"
						g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->n);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_n);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 488 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 488 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 3754 "individual.c"
					} else {
#line 488 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->n);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_n);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 488 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 488 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 488 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 488 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 488 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 3774 "individual.c"
					}
				}
			}
#line 477 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->n);
#line 477 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->_n);
#line 477 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->p);
#line 3784 "individual.c"
		}
#line 477 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_data_->_p_list);
#line 3788 "individual.c"
	}
#line 508 "/run/build/folks/folks/individual.vala"
	_data_->_tmp30_ = _data_->prop_changed;
#line 508 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp30_ == FALSE) {
#line 510 "/run/build/folks/folks/individual.vala"
		_data_->_tmp31_ = _data_->persona_error;
#line 510 "/run/build/folks/folks/individual.vala"
		if (_data_->_tmp31_ == NULL) {
#line 512 "/run/build/folks/folks/individual.vala"
			_data_->_tmp32_ = g_error_new (FOLKS_PROPERTY_ERROR, FOLKS_PROPERTY_ERROR_NOT_WRITEABLE, _ ("Failed to change property ‘%s’: No suitable personas were found."), "nickname");
#line 512 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 512 "/run/build/folks/folks/individual.vala"
			_data_->persona_error = _data_->_tmp32_;
#line 3804 "individual.c"
		}
#line 517 "/run/build/folks/folks/individual.vala"
		_data_->_tmp33_ = _data_->persona_error;
#line 517 "/run/build/folks/folks/individual.vala"
		_data_->_tmp34_ = _g_error_copy0 (_data_->_tmp33_);
#line 517 "/run/build/folks/folks/individual.vala"
		_data_->_inner_error_ = _data_->_tmp34_;
#line 517 "/run/build/folks/folks/individual.vala"
		if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 517 "/run/build/folks/folks/individual.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 517 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 517 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 517 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 3822 "individual.c"
		} else {
#line 517 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 517 "/run/build/folks/folks/individual.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 517 "/run/build/folks/folks/individual.vala"
			g_clear_error (&_data_->_inner_error_);
#line 517 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 517 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 3834 "individual.c"
		}
	}
#line 453 "/run/build/folks/folks/individual.vala"
	_g_error_free0 (_data_->persona_error);
#line 453 "/run/build/folks/folks/individual.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 453 "/run/build/folks/folks/individual.vala"
	if (_data_->_state_ != 0) {
#line 453 "/run/build/folks/folks/individual.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 453 "/run/build/folks/folks/individual.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 3847 "individual.c"
		}
	}
#line 453 "/run/build/folks/folks/individual.vala"
	g_object_unref (_data_->_async_result);
#line 453 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 3854 "individual.c"
}


static void
folks_individual_real_change_is_favourite_data_free (gpointer _data)
{
	FolksIndividualChangeIsFavouriteData* _data_;
	_data_ = _data;
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->self);
#line 84 "/run/build/folks/folks/individual.vala"
	g_slice_free (FolksIndividualChangeIsFavouriteData, _data_);
#line 3867 "individual.c"
}


static void
folks_individual_real_change_is_favourite_async_ready_wrapper (GObject *source_object,
                                                               GAsyncResult *res,
                                                               void *user_data)
{
	FolksIndividualChangeIsFavouriteData* _task_data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 84 "/run/build/folks/folks/individual.vala"
	if (_task_data_->_callback_ != NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 3883 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_->_task_complete_ = TRUE;
#line 3887 "individual.c"
}


static void
folks_individual_real_change_is_favourite (FolksFavouriteDetails* base,
                                           gboolean is_favourite,
                                           GAsyncReadyCallback _callback_,
                                           gpointer _user_data_)
{
	FolksIndividual * self;
	FolksIndividualChangeIsFavouriteData* _data_;
	FolksIndividual* _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_slice_new0 (FolksIndividualChangeIsFavouriteData);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_callback_ = _callback_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_individual_real_change_is_favourite_async_ready_wrapper, _user_data_);
#line 84 "/run/build/folks/folks/individual.vala"
	if (_callback_ == NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_data_->_task_complete_ = TRUE;
#line 3912 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_individual_real_change_is_favourite_data_free);
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->self = _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->is_favourite = is_favourite;
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_is_favourite_co (_data_);
#line 3924 "individual.c"
}


static void
folks_individual_real_change_is_favourite_finish (FolksFavouriteDetails* base,
                                                  GAsyncResult* _res_,
                                                  GError** error)
{
	FolksIndividualChangeIsFavouriteData* _data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 84 "/run/build/folks/folks/individual.vala"
	if (NULL == _data_) {
#line 84 "/run/build/folks/folks/individual.vala"
		return;
#line 3940 "individual.c"
	}
}


/**
   * {@inheritDoc}
   *
   * @since 0.6.2
   */
static void
folks_individual_change_is_favourite_ready (GObject* source_object,
                                            GAsyncResult* _res_,
                                            gpointer _user_data_)
{
	FolksIndividualChangeIsFavouriteData* _data_;
#line 741 "/run/build/folks/folks/individual.vala"
	_data_ = _user_data_;
#line 741 "/run/build/folks/folks/individual.vala"
	_data_->_source_object_ = source_object;
#line 741 "/run/build/folks/folks/individual.vala"
	_data_->_res_ = _res_;
#line 741 "/run/build/folks/folks/individual.vala"
	_data_->_task_complete_ = TRUE;
#line 741 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_is_favourite_co (_data_);
#line 3966 "individual.c"
}


static gboolean
folks_individual_real_change_is_favourite_co (FolksIndividualChangeIsFavouriteData* _data_)
{
#line 706 "/run/build/folks/folks/individual.vala"
	switch (_data_->_state_) {
#line 706 "/run/build/folks/folks/individual.vala"
		case 0:
#line 3977 "individual.c"
		goto _state_0;
#line 706 "/run/build/folks/folks/individual.vala"
		case 1:
#line 3981 "individual.c"
		goto _state_1;
		default:
#line 706 "/run/build/folks/folks/individual.vala"
		g_assert_not_reached ();
#line 3986 "individual.c"
	}
	_state_0:
#line 711 "/run/build/folks/folks/individual.vala"
	_data_->_tmp0_ = _data_->self->priv->_is_favourite;
#line 711 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp0_ == _data_->is_favourite) {
#line 713 "/run/build/folks/folks/individual.vala"
		g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 713 "/run/build/folks/folks/individual.vala"
		if (_data_->_state_ != 0) {
#line 713 "/run/build/folks/folks/individual.vala"
			while (_data_->_task_complete_ != TRUE) {
#line 713 "/run/build/folks/folks/individual.vala"
				g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 4001 "individual.c"
			}
		}
#line 713 "/run/build/folks/folks/individual.vala"
		g_object_unref (_data_->_async_result);
#line 713 "/run/build/folks/folks/individual.vala"
		return FALSE;
#line 4008 "individual.c"
	}
#line 717 "/run/build/folks/folks/individual.vala"
	if (_data_->is_favourite) {
#line 717 "/run/build/folks/folks/individual.vala"
		_data_->_tmp1_ = "TRUE";
#line 4014 "individual.c"
	} else {
#line 717 "/run/build/folks/folks/individual.vala"
		_data_->_tmp1_ = "FALSE";
#line 4018 "individual.c"
	}
#line 716 "/run/build/folks/folks/individual.vala"
	_data_->_tmp2_ = _data_->self->priv->_id;
#line 716 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:716: Setting '%s' favourite status to %s…", _data_->_tmp2_, _data_->_tmp1_);
#line 719 "/run/build/folks/folks/individual.vala"
	_data_->persona_error = NULL;
#line 720 "/run/build/folks/folks/individual.vala"
	_data_->prop_changed = FALSE;
#line 4028 "individual.c"
	{
#line 728 "/run/build/folks/folks/individual.vala"
		_data_->_tmp3_ = _data_->self->priv->_persona_set;
#line 728 "/run/build/folks/folks/individual.vala"
		_data_->_tmp4_ = _g_object_ref0 (_data_->_tmp3_);
#line 728 "/run/build/folks/folks/individual.vala"
		_data_->_p_list = _data_->_tmp4_;
#line 728 "/run/build/folks/folks/individual.vala"
		_data_->_tmp5_ = _data_->_p_list;
#line 728 "/run/build/folks/folks/individual.vala"
		_data_->_tmp6_ = gee_collection_get_size ((GeeCollection*) _data_->_tmp5_);
#line 728 "/run/build/folks/folks/individual.vala"
		_data_->_tmp7_ = _data_->_tmp6_;
#line 728 "/run/build/folks/folks/individual.vala"
		_data_->_p_size = _data_->_tmp7_;
#line 728 "/run/build/folks/folks/individual.vala"
		_data_->_p_index = -1;
#line 728 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->_tmp8_ = _data_->_p_index;
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->_p_index = _data_->_tmp8_ + 1;
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->_tmp9_ = _data_->_p_index;
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->_tmp10_ = _data_->_p_size;
#line 728 "/run/build/folks/folks/individual.vala"
			if (!(_data_->_tmp9_ < _data_->_tmp10_)) {
#line 728 "/run/build/folks/folks/individual.vala"
				break;
#line 4060 "individual.c"
			}
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->_tmp11_ = _data_->_p_list;
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->_tmp12_ = _data_->_p_index;
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->_tmp13_ = folks_small_set_get (_data_->_tmp11_, _data_->_tmp12_);
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->_tmp14_ = _g_object_ref0 ((FolksPersona*) _data_->_tmp13_);
#line 728 "/run/build/folks/folks/individual.vala"
			_data_->p = _data_->_tmp14_;
#line 730 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15_ = _data_->p;
#line 730 "/run/build/folks/folks/individual.vala"
			_data_->_tmp16_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp15_, FOLKS_TYPE_FAVOURITE_DETAILS) ? ((FolksFavouriteDetails*) _data_->_tmp15_) : NULL);
#line 730 "/run/build/folks/folks/individual.vala"
			_data_->_a = _data_->_tmp16_;
#line 731 "/run/build/folks/folks/individual.vala"
			_data_->_tmp17_ = _data_->_a;
#line 731 "/run/build/folks/folks/individual.vala"
			if (_data_->_tmp17_ == NULL) {
#line 733 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->_a);
#line 733 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->p);
#line 733 "/run/build/folks/folks/individual.vala"
				continue;
#line 4088 "individual.c"
			}
#line 735 "/run/build/folks/folks/individual.vala"
			_data_->_tmp18_ = _data_->_a;
#line 735 "/run/build/folks/folks/individual.vala"
			_data_->_tmp19_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp18_, FOLKS_TYPE_FAVOURITE_DETAILS, FolksFavouriteDetails));
#line 735 "/run/build/folks/folks/individual.vala"
			_data_->a = _data_->_tmp19_;
#line 737 "/run/build/folks/folks/individual.vala"
			_data_->_tmp20_ = _data_->p;
#line 737 "/run/build/folks/folks/individual.vala"
			_data_->_tmp21_ = folks_persona_get_writeable_properties (_data_->_tmp20_, &_data_->_tmp21__length1);
#line 737 "/run/build/folks/folks/individual.vala"
			_data_->_tmp22_ = _data_->_tmp21_;
#line 737 "/run/build/folks/folks/individual.vala"
			_data_->_tmp22__length1 = _data_->_tmp21__length1;
#line 737 "/run/build/folks/folks/individual.vala"
			if (_vala_string_array_contains (_data_->_tmp22_, _data_->_tmp22__length1, "is-favourite")) {
#line 4106 "individual.c"
				{
#line 741 "/run/build/folks/folks/individual.vala"
					_data_->_tmp23_ = _data_->a;
#line 741 "/run/build/folks/folks/individual.vala"
					_data_->_state_ = 1;
#line 741 "/run/build/folks/folks/individual.vala"
					folks_favourite_details_change_is_favourite (_data_->_tmp23_, _data_->is_favourite, folks_individual_change_is_favourite_ready, _data_);
#line 741 "/run/build/folks/folks/individual.vala"
					return FALSE;
#line 4116 "individual.c"
					_state_1:
#line 741 "/run/build/folks/folks/individual.vala"
					folks_favourite_details_change_is_favourite_finish (_data_->_tmp23_, _data_->_res_, &_data_->_inner_error_);
#line 741 "/run/build/folks/folks/individual.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 741 "/run/build/folks/folks/individual.vala"
						if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 4124 "individual.c"
							goto __catch13_folks_property_error;
						}
#line 741 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 741 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 741 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 741 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 741 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 741 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 741 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 741 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 741 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 4145 "individual.c"
					}
#line 742 "/run/build/folks/folks/individual.vala"
					_data_->_tmp24_ = _data_->p;
#line 742 "/run/build/folks/folks/individual.vala"
					_data_->_tmp25_ = folks_persona_get_uid (_data_->_tmp24_);
#line 742 "/run/build/folks/folks/individual.vala"
					_data_->_tmp26_ = _data_->_tmp25_;
#line 742 "/run/build/folks/folks/individual.vala"
					g_debug ("individual.vala:742:     written to persona '%s'", _data_->_tmp26_);
#line 743 "/run/build/folks/folks/individual.vala"
					_data_->prop_changed = TRUE;
#line 4157 "individual.c"
				}
				goto __finally13;
				__catch13_folks_property_error:
				{
#line 739 "/run/build/folks/folks/individual.vala"
					_data_->e = _data_->_inner_error_;
#line 739 "/run/build/folks/folks/individual.vala"
					_data_->_inner_error_ = NULL;
#line 749 "/run/build/folks/folks/individual.vala"
					_data_->_tmp27_ = _data_->persona_error;
#line 749 "/run/build/folks/folks/individual.vala"
					if (_data_->_tmp27_ == NULL) {
#line 751 "/run/build/folks/folks/individual.vala"
						_data_->_tmp28_ = _data_->e;
#line 751 "/run/build/folks/folks/individual.vala"
						_data_->_tmp29_ = _g_error_copy0 (_data_->_tmp28_);
#line 751 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 751 "/run/build/folks/folks/individual.vala"
						_data_->persona_error = _data_->_tmp29_;
#line 4178 "individual.c"
					}
#line 739 "/run/build/folks/folks/individual.vala"
					_g_error_free0 (_data_->e);
#line 4182 "individual.c"
				}
				__finally13:
#line 739 "/run/build/folks/folks/individual.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 739 "/run/build/folks/folks/individual.vala"
					if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 739 "/run/build/folks/folks/individual.vala"
						g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 739 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 739 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 4205 "individual.c"
					} else {
#line 739 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->a);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_a);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 739 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 739 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 739 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 739 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 739 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 4225 "individual.c"
					}
				}
			}
#line 728 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->a);
#line 728 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->_a);
#line 728 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->p);
#line 4235 "individual.c"
		}
#line 728 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_data_->_p_list);
#line 4239 "individual.c"
	}
#line 759 "/run/build/folks/folks/individual.vala"
	_data_->_tmp30_ = _data_->prop_changed;
#line 759 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp30_ == FALSE) {
#line 761 "/run/build/folks/folks/individual.vala"
		_data_->_tmp31_ = _data_->persona_error;
#line 761 "/run/build/folks/folks/individual.vala"
		if (_data_->_tmp31_ == NULL) {
#line 763 "/run/build/folks/folks/individual.vala"
			_data_->_tmp32_ = g_error_new (FOLKS_PROPERTY_ERROR, FOLKS_PROPERTY_ERROR_NOT_WRITEABLE, _ ("Failed to change property ‘%s’: No suitable personas were found."), "is-favourite");
#line 763 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 763 "/run/build/folks/folks/individual.vala"
			_data_->persona_error = _data_->_tmp32_;
#line 4255 "individual.c"
		}
#line 768 "/run/build/folks/folks/individual.vala"
		_data_->_tmp33_ = _data_->persona_error;
#line 768 "/run/build/folks/folks/individual.vala"
		_data_->_tmp34_ = _g_error_copy0 (_data_->_tmp33_);
#line 768 "/run/build/folks/folks/individual.vala"
		_data_->_inner_error_ = _data_->_tmp34_;
#line 768 "/run/build/folks/folks/individual.vala"
		if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 768 "/run/build/folks/folks/individual.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 768 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 768 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 768 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 4273 "individual.c"
		} else {
#line 768 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 768 "/run/build/folks/folks/individual.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 768 "/run/build/folks/folks/individual.vala"
			g_clear_error (&_data_->_inner_error_);
#line 768 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 768 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 4285 "individual.c"
		}
	}
#line 706 "/run/build/folks/folks/individual.vala"
	_g_error_free0 (_data_->persona_error);
#line 706 "/run/build/folks/folks/individual.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 706 "/run/build/folks/folks/individual.vala"
	if (_data_->_state_ != 0) {
#line 706 "/run/build/folks/folks/individual.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 706 "/run/build/folks/folks/individual.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 4298 "individual.c"
		}
	}
#line 706 "/run/build/folks/folks/individual.vala"
	g_object_unref (_data_->_async_result);
#line 706 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 4305 "individual.c"
}


static void
folks_individual_real_change_groups_data_free (gpointer _data)
{
	FolksIndividualChangeGroupsData* _data_;
	_data_ = _data;
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->groups);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->self);
#line 84 "/run/build/folks/folks/individual.vala"
	g_slice_free (FolksIndividualChangeGroupsData, _data_);
#line 4320 "individual.c"
}


static void
folks_individual_real_change_groups_async_ready_wrapper (GObject *source_object,
                                                         GAsyncResult *res,
                                                         void *user_data)
{
	FolksIndividualChangeGroupsData* _task_data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 84 "/run/build/folks/folks/individual.vala"
	if (_task_data_->_callback_ != NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 4336 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_->_task_complete_ = TRUE;
#line 4340 "individual.c"
}


static void
folks_individual_real_change_groups (FolksGroupDetails* base,
                                     GeeSet* groups,
                                     GAsyncReadyCallback _callback_,
                                     gpointer _user_data_)
{
	FolksIndividual * self;
	FolksIndividualChangeGroupsData* _data_;
	FolksIndividual* _tmp0_;
	GeeSet* _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_slice_new0 (FolksIndividualChangeGroupsData);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_callback_ = _callback_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_individual_real_change_groups_async_ready_wrapper, _user_data_);
#line 84 "/run/build/folks/folks/individual.vala"
	if (_callback_ == NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_data_->_task_complete_ = TRUE;
#line 4366 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_individual_real_change_groups_data_free);
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->self = _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _g_object_ref0 (groups);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->groups);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->groups = _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_groups_co (_data_);
#line 4382 "individual.c"
}


static void
folks_individual_real_change_groups_finish (FolksGroupDetails* base,
                                            GAsyncResult* _res_,
                                            GError** error)
{
	FolksIndividualChangeGroupsData* _data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 84 "/run/build/folks/folks/individual.vala"
	if (NULL == _data_) {
#line 84 "/run/build/folks/folks/individual.vala"
		return;
#line 4398 "individual.c"
	}
}


/**
   * {@inheritDoc}
   *
   * @since 0.6.2
   */
static void
folks_individual_change_groups_ready (GObject* source_object,
                                      GAsyncResult* _res_,
                                      gpointer _user_data_)
{
	FolksIndividualChangeGroupsData* _data_;
#line 819 "/run/build/folks/folks/individual.vala"
	_data_ = _user_data_;
#line 819 "/run/build/folks/folks/individual.vala"
	_data_->_source_object_ = source_object;
#line 819 "/run/build/folks/folks/individual.vala"
	_data_->_res_ = _res_;
#line 819 "/run/build/folks/folks/individual.vala"
	_data_->_task_complete_ = TRUE;
#line 819 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_groups_co (_data_);
#line 4424 "individual.c"
}


static gboolean
folks_individual_real_change_groups_co (FolksIndividualChangeGroupsData* _data_)
{
#line 794 "/run/build/folks/folks/individual.vala"
	switch (_data_->_state_) {
#line 794 "/run/build/folks/folks/individual.vala"
		case 0:
#line 4435 "individual.c"
		goto _state_0;
#line 794 "/run/build/folks/folks/individual.vala"
		case 1:
#line 4439 "individual.c"
		goto _state_1;
		default:
#line 794 "/run/build/folks/folks/individual.vala"
		g_assert_not_reached ();
#line 4444 "individual.c"
	}
	_state_0:
#line 799 "/run/build/folks/folks/individual.vala"
	_data_->_tmp0_ = _data_->self->priv->_id;
#line 799 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:799: Setting '%s' groups…", _data_->_tmp0_);
#line 801 "/run/build/folks/folks/individual.vala"
	_data_->persona_error = NULL;
#line 802 "/run/build/folks/folks/individual.vala"
	_data_->prop_changed = FALSE;
#line 4455 "individual.c"
	{
#line 806 "/run/build/folks/folks/individual.vala"
		_data_->_tmp1_ = _data_->self->priv->_persona_set;
#line 806 "/run/build/folks/folks/individual.vala"
		_data_->_tmp2_ = _g_object_ref0 (_data_->_tmp1_);
#line 806 "/run/build/folks/folks/individual.vala"
		_data_->_p_list = _data_->_tmp2_;
#line 806 "/run/build/folks/folks/individual.vala"
		_data_->_tmp3_ = _data_->_p_list;
#line 806 "/run/build/folks/folks/individual.vala"
		_data_->_tmp4_ = gee_collection_get_size ((GeeCollection*) _data_->_tmp3_);
#line 806 "/run/build/folks/folks/individual.vala"
		_data_->_tmp5_ = _data_->_tmp4_;
#line 806 "/run/build/folks/folks/individual.vala"
		_data_->_p_size = _data_->_tmp5_;
#line 806 "/run/build/folks/folks/individual.vala"
		_data_->_p_index = -1;
#line 806 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->_tmp6_ = _data_->_p_index;
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->_p_index = _data_->_tmp6_ + 1;
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->_tmp7_ = _data_->_p_index;
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->_tmp8_ = _data_->_p_size;
#line 806 "/run/build/folks/folks/individual.vala"
			if (!(_data_->_tmp7_ < _data_->_tmp8_)) {
#line 806 "/run/build/folks/folks/individual.vala"
				break;
#line 4487 "individual.c"
			}
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->_tmp9_ = _data_->_p_list;
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->_tmp10_ = _data_->_p_index;
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->_tmp11_ = folks_small_set_get (_data_->_tmp9_, _data_->_tmp10_);
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->_tmp12_ = _g_object_ref0 ((FolksPersona*) _data_->_tmp11_);
#line 806 "/run/build/folks/folks/individual.vala"
			_data_->p = _data_->_tmp12_;
#line 808 "/run/build/folks/folks/individual.vala"
			_data_->_tmp13_ = _data_->p;
#line 808 "/run/build/folks/folks/individual.vala"
			_data_->_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp13_, FOLKS_TYPE_GROUP_DETAILS) ? ((FolksGroupDetails*) _data_->_tmp13_) : NULL);
#line 808 "/run/build/folks/folks/individual.vala"
			_data_->_g = _data_->_tmp14_;
#line 809 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15_ = _data_->_g;
#line 809 "/run/build/folks/folks/individual.vala"
			if (_data_->_tmp15_ == NULL) {
#line 811 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->_g);
#line 811 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->p);
#line 811 "/run/build/folks/folks/individual.vala"
				continue;
#line 4515 "individual.c"
			}
#line 813 "/run/build/folks/folks/individual.vala"
			_data_->_tmp16_ = _data_->_g;
#line 813 "/run/build/folks/folks/individual.vala"
			_data_->_tmp17_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp16_, FOLKS_TYPE_GROUP_DETAILS, FolksGroupDetails));
#line 813 "/run/build/folks/folks/individual.vala"
			_data_->g = _data_->_tmp17_;
#line 815 "/run/build/folks/folks/individual.vala"
			_data_->_tmp18_ = _data_->p;
#line 815 "/run/build/folks/folks/individual.vala"
			_data_->_tmp19_ = folks_persona_get_writeable_properties (_data_->_tmp18_, &_data_->_tmp19__length1);
#line 815 "/run/build/folks/folks/individual.vala"
			_data_->_tmp20_ = _data_->_tmp19_;
#line 815 "/run/build/folks/folks/individual.vala"
			_data_->_tmp20__length1 = _data_->_tmp19__length1;
#line 815 "/run/build/folks/folks/individual.vala"
			if (_vala_string_array_contains (_data_->_tmp20_, _data_->_tmp20__length1, "groups")) {
#line 4533 "individual.c"
				{
#line 819 "/run/build/folks/folks/individual.vala"
					_data_->_tmp21_ = _data_->g;
#line 819 "/run/build/folks/folks/individual.vala"
					_data_->_state_ = 1;
#line 819 "/run/build/folks/folks/individual.vala"
					folks_group_details_change_groups (_data_->_tmp21_, _data_->groups, folks_individual_change_groups_ready, _data_);
#line 819 "/run/build/folks/folks/individual.vala"
					return FALSE;
#line 4543 "individual.c"
					_state_1:
#line 819 "/run/build/folks/folks/individual.vala"
					folks_group_details_change_groups_finish (_data_->_tmp21_, _data_->_res_, &_data_->_inner_error_);
#line 819 "/run/build/folks/folks/individual.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 819 "/run/build/folks/folks/individual.vala"
						if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 4551 "individual.c"
							goto __catch14_folks_property_error;
						}
#line 819 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->g);
#line 819 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_g);
#line 819 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 819 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 819 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 819 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 819 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 819 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 819 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 4572 "individual.c"
					}
#line 820 "/run/build/folks/folks/individual.vala"
					_data_->_tmp22_ = _data_->p;
#line 820 "/run/build/folks/folks/individual.vala"
					_data_->_tmp23_ = folks_persona_get_uid (_data_->_tmp22_);
#line 820 "/run/build/folks/folks/individual.vala"
					_data_->_tmp24_ = _data_->_tmp23_;
#line 820 "/run/build/folks/folks/individual.vala"
					g_debug ("individual.vala:820:     written to persona '%s'", _data_->_tmp24_);
#line 821 "/run/build/folks/folks/individual.vala"
					_data_->prop_changed = TRUE;
#line 4584 "individual.c"
				}
				goto __finally14;
				__catch14_folks_property_error:
				{
#line 817 "/run/build/folks/folks/individual.vala"
					_data_->e = _data_->_inner_error_;
#line 817 "/run/build/folks/folks/individual.vala"
					_data_->_inner_error_ = NULL;
#line 827 "/run/build/folks/folks/individual.vala"
					_data_->_tmp25_ = _data_->persona_error;
#line 827 "/run/build/folks/folks/individual.vala"
					if (_data_->_tmp25_ == NULL) {
#line 829 "/run/build/folks/folks/individual.vala"
						_data_->_tmp26_ = _data_->e;
#line 829 "/run/build/folks/folks/individual.vala"
						_data_->_tmp27_ = _g_error_copy0 (_data_->_tmp26_);
#line 829 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 829 "/run/build/folks/folks/individual.vala"
						_data_->persona_error = _data_->_tmp27_;
#line 4605 "individual.c"
					}
#line 817 "/run/build/folks/folks/individual.vala"
					_g_error_free0 (_data_->e);
#line 4609 "individual.c"
				}
				__finally14:
#line 817 "/run/build/folks/folks/individual.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 817 "/run/build/folks/folks/individual.vala"
					if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 817 "/run/build/folks/folks/individual.vala"
						g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->g);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_g);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 817 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 817 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 4632 "individual.c"
					} else {
#line 817 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->g);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_g);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 817 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 817 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 817 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 817 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 817 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 4652 "individual.c"
					}
				}
			}
#line 806 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->g);
#line 806 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->_g);
#line 806 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->p);
#line 4662 "individual.c"
		}
#line 806 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_data_->_p_list);
#line 4666 "individual.c"
	}
#line 837 "/run/build/folks/folks/individual.vala"
	_data_->_tmp28_ = _data_->prop_changed;
#line 837 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp28_ == FALSE) {
#line 839 "/run/build/folks/folks/individual.vala"
		_data_->_tmp29_ = _data_->persona_error;
#line 839 "/run/build/folks/folks/individual.vala"
		if (_data_->_tmp29_ == NULL) {
#line 841 "/run/build/folks/folks/individual.vala"
			_data_->_tmp30_ = g_error_new (FOLKS_PROPERTY_ERROR, FOLKS_PROPERTY_ERROR_NOT_WRITEABLE, _ ("Failed to change property ‘%s’: No suitable personas were found."), "groups");
#line 841 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 841 "/run/build/folks/folks/individual.vala"
			_data_->persona_error = _data_->_tmp30_;
#line 4682 "individual.c"
		}
#line 846 "/run/build/folks/folks/individual.vala"
		_data_->_tmp31_ = _data_->persona_error;
#line 846 "/run/build/folks/folks/individual.vala"
		_data_->_tmp32_ = _g_error_copy0 (_data_->_tmp31_);
#line 846 "/run/build/folks/folks/individual.vala"
		_data_->_inner_error_ = _data_->_tmp32_;
#line 846 "/run/build/folks/folks/individual.vala"
		if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 846 "/run/build/folks/folks/individual.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 846 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 846 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 846 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 4700 "individual.c"
		} else {
#line 846 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 846 "/run/build/folks/folks/individual.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 846 "/run/build/folks/folks/individual.vala"
			g_clear_error (&_data_->_inner_error_);
#line 846 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 846 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 4712 "individual.c"
		}
	}
#line 794 "/run/build/folks/folks/individual.vala"
	_g_error_free0 (_data_->persona_error);
#line 794 "/run/build/folks/folks/individual.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 794 "/run/build/folks/folks/individual.vala"
	if (_data_->_state_ != 0) {
#line 794 "/run/build/folks/folks/individual.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 794 "/run/build/folks/folks/individual.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 4725 "individual.c"
		}
	}
#line 794 "/run/build/folks/folks/individual.vala"
	g_object_unref (_data_->_async_result);
#line 794 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 4732 "individual.c"
}


/**
   * {@inheritDoc}
   *
   * @since 0.11.0
   */
static FolksExtendedFieldDetails*
folks_individual_real_get_extended_field (FolksExtendedInfo* base,
                                          const gchar* name)
{
	FolksIndividual * self;
	FolksExtendedFieldDetails* result = NULL;
	const gchar* _tmp0_;
#line 993 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 993 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (name != NULL, NULL);
#line 995 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_id;
#line 995 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:995: Getting extended field '%s' on '%s'…", name, _tmp0_);
#line 4756 "individual.c"
	{
		FolksSmallSet* _p_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _p_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _p_index = 0;
#line 999 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 999 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 999 "/run/build/folks/folks/individual.vala"
		_p_list = _tmp2_;
#line 999 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _p_list;
#line 999 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 999 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 999 "/run/build/folks/folks/individual.vala"
		_p_size = _tmp5_;
#line 999 "/run/build/folks/folks/individual.vala"
		_p_index = -1;
#line 999 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 4784 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* p = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksPersona* _tmp13_;
			gchar** _tmp14_;
			gint _tmp14__length1;
			gchar** _tmp15_;
			gint _tmp15__length1;
#line 999 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _p_index;
#line 999 "/run/build/folks/folks/individual.vala"
			_p_index = _tmp6_ + 1;
#line 999 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _p_index;
#line 999 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _p_size;
#line 999 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 999 "/run/build/folks/folks/individual.vala"
				break;
#line 4810 "individual.c"
			}
#line 999 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _p_list;
#line 999 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _p_index;
#line 999 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 999 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 999 "/run/build/folks/folks/individual.vala"
			p = _tmp12_;
#line 1001 "/run/build/folks/folks/individual.vala"
			_tmp13_ = p;
#line 1001 "/run/build/folks/folks/individual.vala"
			_tmp14_ = folks_persona_get_writeable_properties (_tmp13_, &_tmp14__length1);
#line 1001 "/run/build/folks/folks/individual.vala"
			_tmp15_ = _tmp14_;
#line 1001 "/run/build/folks/folks/individual.vala"
			_tmp15__length1 = _tmp14__length1;
#line 1001 "/run/build/folks/folks/individual.vala"
			if (_vala_string_array_contains (_tmp15_, _tmp15__length1, "extended-info")) {
#line 4832 "individual.c"
				FolksExtendedInfo* e = NULL;
				FolksPersona* _tmp16_;
				FolksExtendedInfo* _tmp17_;
				FolksExtendedFieldDetails* details = NULL;
				FolksExtendedInfo* _tmp18_;
				FolksExtendedFieldDetails* _tmp19_;
				FolksExtendedFieldDetails* _tmp20_;
#line 1003 "/run/build/folks/folks/individual.vala"
				_tmp16_ = p;
#line 1003 "/run/build/folks/folks/individual.vala"
				_tmp17_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp16_, FOLKS_TYPE_EXTENDED_INFO) ? ((FolksExtendedInfo*) _tmp16_) : NULL);
#line 1003 "/run/build/folks/folks/individual.vala"
				e = _tmp17_;
#line 1004 "/run/build/folks/folks/individual.vala"
				_tmp18_ = e;
#line 1004 "/run/build/folks/folks/individual.vala"
				_tmp19_ = folks_extended_info_get_extended_field (_tmp18_, name);
#line 1004 "/run/build/folks/folks/individual.vala"
				details = _tmp19_;
#line 1005 "/run/build/folks/folks/individual.vala"
				_tmp20_ = details;
#line 1005 "/run/build/folks/folks/individual.vala"
				if (_tmp20_ != NULL) {
#line 1007 "/run/build/folks/folks/individual.vala"
					result = details;
#line 1007 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (e);
#line 1007 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (p);
#line 1007 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_p_list);
#line 1007 "/run/build/folks/folks/individual.vala"
					return result;
#line 4866 "individual.c"
				}
#line 1001 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (details);
#line 1001 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (e);
#line 4872 "individual.c"
			}
#line 999 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 4876 "individual.c"
		}
#line 999 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_list);
#line 4880 "individual.c"
	}
#line 1012 "/run/build/folks/folks/individual.vala"
	result = NULL;
#line 1012 "/run/build/folks/folks/individual.vala"
	return result;
#line 4886 "individual.c"
}


static void
folks_individual_real_change_extended_field_data_free (gpointer _data)
{
	FolksIndividualChangeExtendedFieldData* _data_;
	_data_ = _data;
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->name);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->value);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->self);
#line 84 "/run/build/folks/folks/individual.vala"
	g_slice_free (FolksIndividualChangeExtendedFieldData, _data_);
#line 4903 "individual.c"
}


static void
folks_individual_real_change_extended_field_async_ready_wrapper (GObject *source_object,
                                                                 GAsyncResult *res,
                                                                 void *user_data)
{
	FolksIndividualChangeExtendedFieldData* _task_data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 84 "/run/build/folks/folks/individual.vala"
	if (_task_data_->_callback_ != NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 4919 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_->_task_complete_ = TRUE;
#line 4923 "individual.c"
}


static void
folks_individual_real_change_extended_field (FolksExtendedInfo* base,
                                             const gchar* name,
                                             FolksExtendedFieldDetails* value,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_)
{
	FolksIndividual * self;
	FolksIndividualChangeExtendedFieldData* _data_;
	FolksIndividual* _tmp0_;
	gchar* _tmp1_;
	FolksExtendedFieldDetails* _tmp2_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_slice_new0 (FolksIndividualChangeExtendedFieldData);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_callback_ = _callback_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_individual_real_change_extended_field_async_ready_wrapper, _user_data_);
#line 84 "/run/build/folks/folks/individual.vala"
	if (_callback_ == NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_data_->_task_complete_ = TRUE;
#line 4951 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_individual_real_change_extended_field_data_free);
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->self = _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp1_ = g_strdup (name);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->name);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->name = _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp2_ = _g_object_ref0 (value);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->value);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->value = _tmp2_;
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_extended_field_co (_data_);
#line 4973 "individual.c"
}


static void
folks_individual_real_change_extended_field_finish (FolksExtendedInfo* base,
                                                    GAsyncResult* _res_,
                                                    GError** error)
{
	FolksIndividualChangeExtendedFieldData* _data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 84 "/run/build/folks/folks/individual.vala"
	if (NULL == _data_) {
#line 84 "/run/build/folks/folks/individual.vala"
		return;
#line 4989 "individual.c"
	}
}


/**
   * {@inheritDoc}
   *
   * @since 0.11.0
   */
static void
folks_individual_change_extended_field_ready (GObject* source_object,
                                              GAsyncResult* _res_,
                                              gpointer _user_data_)
{
	FolksIndividualChangeExtendedFieldData* _data_;
#line 1037 "/run/build/folks/folks/individual.vala"
	_data_ = _user_data_;
#line 1037 "/run/build/folks/folks/individual.vala"
	_data_->_source_object_ = source_object;
#line 1037 "/run/build/folks/folks/individual.vala"
	_data_->_res_ = _res_;
#line 1037 "/run/build/folks/folks/individual.vala"
	_data_->_task_complete_ = TRUE;
#line 1037 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_extended_field_co (_data_);
#line 5015 "individual.c"
}


static gboolean
folks_individual_real_change_extended_field_co (FolksIndividualChangeExtendedFieldData* _data_)
{
#line 1020 "/run/build/folks/folks/individual.vala"
	switch (_data_->_state_) {
#line 1020 "/run/build/folks/folks/individual.vala"
		case 0:
#line 5026 "individual.c"
		goto _state_0;
#line 1020 "/run/build/folks/folks/individual.vala"
		case 1:
#line 5030 "individual.c"
		goto _state_1;
		default:
#line 1020 "/run/build/folks/folks/individual.vala"
		g_assert_not_reached ();
#line 5035 "individual.c"
	}
	_state_0:
#line 1023 "/run/build/folks/folks/individual.vala"
	_data_->_tmp0_ = _data_->self->priv->_id;
#line 1023 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:1023: Setting extended field '%s' on '%s'…", _data_->name, _data_->_tmp0_);
#line 1025 "/run/build/folks/folks/individual.vala"
	_data_->persona_error = NULL;
#line 1026 "/run/build/folks/folks/individual.vala"
	_data_->prop_changed = FALSE;
#line 5046 "individual.c"
	{
#line 1030 "/run/build/folks/folks/individual.vala"
		_data_->_tmp1_ = _data_->self->priv->_persona_set;
#line 1030 "/run/build/folks/folks/individual.vala"
		_data_->_tmp2_ = _g_object_ref0 (_data_->_tmp1_);
#line 1030 "/run/build/folks/folks/individual.vala"
		_data_->_p_list = _data_->_tmp2_;
#line 1030 "/run/build/folks/folks/individual.vala"
		_data_->_tmp3_ = _data_->_p_list;
#line 1030 "/run/build/folks/folks/individual.vala"
		_data_->_tmp4_ = gee_collection_get_size ((GeeCollection*) _data_->_tmp3_);
#line 1030 "/run/build/folks/folks/individual.vala"
		_data_->_tmp5_ = _data_->_tmp4_;
#line 1030 "/run/build/folks/folks/individual.vala"
		_data_->_p_size = _data_->_tmp5_;
#line 1030 "/run/build/folks/folks/individual.vala"
		_data_->_p_index = -1;
#line 1030 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->_tmp6_ = _data_->_p_index;
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->_p_index = _data_->_tmp6_ + 1;
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->_tmp7_ = _data_->_p_index;
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->_tmp8_ = _data_->_p_size;
#line 1030 "/run/build/folks/folks/individual.vala"
			if (!(_data_->_tmp7_ < _data_->_tmp8_)) {
#line 1030 "/run/build/folks/folks/individual.vala"
				break;
#line 5078 "individual.c"
			}
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->_tmp9_ = _data_->_p_list;
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->_tmp10_ = _data_->_p_index;
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->_tmp11_ = folks_small_set_get (_data_->_tmp9_, _data_->_tmp10_);
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->_tmp12_ = _g_object_ref0 ((FolksPersona*) _data_->_tmp11_);
#line 1030 "/run/build/folks/folks/individual.vala"
			_data_->p = _data_->_tmp12_;
#line 1032 "/run/build/folks/folks/individual.vala"
			_data_->_tmp13_ = _data_->p;
#line 1032 "/run/build/folks/folks/individual.vala"
			_data_->_tmp14_ = folks_persona_get_writeable_properties (_data_->_tmp13_, &_data_->_tmp14__length1);
#line 1032 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15_ = _data_->_tmp14_;
#line 1032 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15__length1 = _data_->_tmp14__length1;
#line 1032 "/run/build/folks/folks/individual.vala"
			if (_vala_string_array_contains (_data_->_tmp15_, _data_->_tmp15__length1, "extended-info")) {
#line 1034 "/run/build/folks/folks/individual.vala"
				_data_->_tmp16_ = _data_->p;
#line 1034 "/run/build/folks/folks/individual.vala"
				_data_->_tmp17_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp16_, FOLKS_TYPE_EXTENDED_INFO) ? ((FolksExtendedInfo*) _data_->_tmp16_) : NULL);
#line 1034 "/run/build/folks/folks/individual.vala"
				_data_->e = _data_->_tmp17_;
#line 5106 "individual.c"
				{
#line 1037 "/run/build/folks/folks/individual.vala"
					_data_->_tmp18_ = _data_->e;
#line 1037 "/run/build/folks/folks/individual.vala"
					_data_->_state_ = 1;
#line 1037 "/run/build/folks/folks/individual.vala"
					folks_extended_info_change_extended_field (_data_->_tmp18_, _data_->name, _data_->value, folks_individual_change_extended_field_ready, _data_);
#line 1037 "/run/build/folks/folks/individual.vala"
					return FALSE;
#line 5116 "individual.c"
					_state_1:
#line 1037 "/run/build/folks/folks/individual.vala"
					folks_extended_info_change_extended_field_finish (_data_->_tmp18_, _data_->_res_, &_data_->_inner_error_);
#line 1037 "/run/build/folks/folks/individual.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 1037 "/run/build/folks/folks/individual.vala"
						if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 5124 "individual.c"
							goto __catch15_folks_property_error;
						}
#line 1037 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->e);
#line 1037 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 1037 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 1037 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 1037 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 1037 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 1037 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 1037 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 5143 "individual.c"
					}
#line 1038 "/run/build/folks/folks/individual.vala"
					_data_->_tmp19_ = _data_->p;
#line 1038 "/run/build/folks/folks/individual.vala"
					_data_->_tmp20_ = folks_persona_get_uid (_data_->_tmp19_);
#line 1038 "/run/build/folks/folks/individual.vala"
					_data_->_tmp21_ = _data_->_tmp20_;
#line 1038 "/run/build/folks/folks/individual.vala"
					g_debug ("individual.vala:1038:     written to writeable persona '%s'", _data_->_tmp21_);
#line 1039 "/run/build/folks/folks/individual.vala"
					_data_->prop_changed = TRUE;
#line 5155 "individual.c"
				}
				goto __finally15;
				__catch15_folks_property_error:
				{
#line 1035 "/run/build/folks/folks/individual.vala"
					_data_->_vala1_e = _data_->_inner_error_;
#line 1035 "/run/build/folks/folks/individual.vala"
					_data_->_inner_error_ = NULL;
#line 1045 "/run/build/folks/folks/individual.vala"
					_data_->_tmp22_ = _data_->persona_error;
#line 1045 "/run/build/folks/folks/individual.vala"
					if (_data_->_tmp22_ == NULL) {
#line 1047 "/run/build/folks/folks/individual.vala"
						_data_->_tmp23_ = _data_->_vala1_e;
#line 1047 "/run/build/folks/folks/individual.vala"
						_data_->_tmp24_ = _g_error_copy0 (_data_->_tmp23_);
#line 1047 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 1047 "/run/build/folks/folks/individual.vala"
						_data_->persona_error = _data_->_tmp24_;
#line 5176 "individual.c"
					}
#line 1035 "/run/build/folks/folks/individual.vala"
					_g_error_free0 (_data_->_vala1_e);
#line 5180 "individual.c"
				}
				__finally15:
#line 1035 "/run/build/folks/folks/individual.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 1035 "/run/build/folks/folks/individual.vala"
					if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 1035 "/run/build/folks/folks/individual.vala"
						g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 1035 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->e);
#line 1035 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 1035 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 1035 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 1035 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 1035 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 5201 "individual.c"
					} else {
#line 1035 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->e);
#line 1035 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 1035 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 1035 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 1035 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 1035 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 1035 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 1035 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 5219 "individual.c"
					}
				}
#line 1032 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->e);
#line 5224 "individual.c"
			}
#line 1030 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->p);
#line 5228 "individual.c"
		}
#line 1030 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_data_->_p_list);
#line 5232 "individual.c"
	}
#line 1055 "/run/build/folks/folks/individual.vala"
	_data_->_tmp25_ = _data_->prop_changed;
#line 1055 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp25_ == FALSE) {
#line 1057 "/run/build/folks/folks/individual.vala"
		_data_->_tmp26_ = _data_->persona_error;
#line 1057 "/run/build/folks/folks/individual.vala"
		if (_data_->_tmp26_ == NULL) {
#line 1059 "/run/build/folks/folks/individual.vala"
			_data_->_tmp27_ = g_error_new (FOLKS_PROPERTY_ERROR, FOLKS_PROPERTY_ERROR_NOT_WRITEABLE, _ ("Failed to change property ‘%s’: No suitable personas were found."), "extended-info");
#line 1059 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 1059 "/run/build/folks/folks/individual.vala"
			_data_->persona_error = _data_->_tmp27_;
#line 5248 "individual.c"
		}
#line 1064 "/run/build/folks/folks/individual.vala"
		_data_->_tmp28_ = _data_->persona_error;
#line 1064 "/run/build/folks/folks/individual.vala"
		_data_->_tmp29_ = _g_error_copy0 (_data_->_tmp28_);
#line 1064 "/run/build/folks/folks/individual.vala"
		_data_->_inner_error_ = _data_->_tmp29_;
#line 1064 "/run/build/folks/folks/individual.vala"
		if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 1064 "/run/build/folks/folks/individual.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 1064 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 1064 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 1064 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 5266 "individual.c"
		} else {
#line 1064 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 1064 "/run/build/folks/folks/individual.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 1064 "/run/build/folks/folks/individual.vala"
			g_clear_error (&_data_->_inner_error_);
#line 1064 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 1064 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 5278 "individual.c"
		}
	}
#line 1020 "/run/build/folks/folks/individual.vala"
	_g_error_free0 (_data_->persona_error);
#line 1020 "/run/build/folks/folks/individual.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 1020 "/run/build/folks/folks/individual.vala"
	if (_data_->_state_ != 0) {
#line 1020 "/run/build/folks/folks/individual.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 1020 "/run/build/folks/folks/individual.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 5291 "individual.c"
		}
	}
#line 1020 "/run/build/folks/folks/individual.vala"
	g_object_unref (_data_->_async_result);
#line 1020 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 5298 "individual.c"
}


static void
folks_individual_real_remove_extended_field_data_free (gpointer _data)
{
	FolksIndividualRemoveExtendedFieldData* _data_;
	_data_ = _data;
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->name);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->self);
#line 84 "/run/build/folks/folks/individual.vala"
	g_slice_free (FolksIndividualRemoveExtendedFieldData, _data_);
#line 5313 "individual.c"
}


static void
folks_individual_real_remove_extended_field_async_ready_wrapper (GObject *source_object,
                                                                 GAsyncResult *res,
                                                                 void *user_data)
{
	FolksIndividualRemoveExtendedFieldData* _task_data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 84 "/run/build/folks/folks/individual.vala"
	if (_task_data_->_callback_ != NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 5329 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_->_task_complete_ = TRUE;
#line 5333 "individual.c"
}


static void
folks_individual_real_remove_extended_field (FolksExtendedInfo* base,
                                             const gchar* name,
                                             GAsyncReadyCallback _callback_,
                                             gpointer _user_data_)
{
	FolksIndividual * self;
	FolksIndividualRemoveExtendedFieldData* _data_;
	FolksIndividual* _tmp0_;
	gchar* _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_slice_new0 (FolksIndividualRemoveExtendedFieldData);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_callback_ = _callback_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_individual_real_remove_extended_field_async_ready_wrapper, _user_data_);
#line 84 "/run/build/folks/folks/individual.vala"
	if (_callback_ == NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_data_->_task_complete_ = TRUE;
#line 5359 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_individual_real_remove_extended_field_data_free);
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->self = _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp1_ = g_strdup (name);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->name);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->name = _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_real_remove_extended_field_co (_data_);
#line 5375 "individual.c"
}


static void
folks_individual_real_remove_extended_field_finish (FolksExtendedInfo* base,
                                                    GAsyncResult* _res_,
                                                    GError** error)
{
	FolksIndividualRemoveExtendedFieldData* _data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), error);
#line 84 "/run/build/folks/folks/individual.vala"
	if (NULL == _data_) {
#line 84 "/run/build/folks/folks/individual.vala"
		return;
#line 5391 "individual.c"
	}
}


/**
   * {@inheritDoc}
   *
   * @since 0.11.0
   */
static void
folks_individual_remove_extended_field_ready (GObject* source_object,
                                              GAsyncResult* _res_,
                                              gpointer _user_data_)
{
	FolksIndividualRemoveExtendedFieldData* _data_;
#line 1087 "/run/build/folks/folks/individual.vala"
	_data_ = _user_data_;
#line 1087 "/run/build/folks/folks/individual.vala"
	_data_->_source_object_ = source_object;
#line 1087 "/run/build/folks/folks/individual.vala"
	_data_->_res_ = _res_;
#line 1087 "/run/build/folks/folks/individual.vala"
	_data_->_task_complete_ = TRUE;
#line 1087 "/run/build/folks/folks/individual.vala"
	folks_individual_real_remove_extended_field_co (_data_);
#line 5417 "individual.c"
}


static gboolean
folks_individual_real_remove_extended_field_co (FolksIndividualRemoveExtendedFieldData* _data_)
{
#line 1073 "/run/build/folks/folks/individual.vala"
	switch (_data_->_state_) {
#line 1073 "/run/build/folks/folks/individual.vala"
		case 0:
#line 5428 "individual.c"
		goto _state_0;
#line 1073 "/run/build/folks/folks/individual.vala"
		case 1:
#line 5432 "individual.c"
		goto _state_1;
		default:
#line 1073 "/run/build/folks/folks/individual.vala"
		g_assert_not_reached ();
#line 5437 "individual.c"
	}
	_state_0:
#line 1075 "/run/build/folks/folks/individual.vala"
	_data_->_tmp0_ = _data_->self->priv->_id;
#line 1075 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:1075: Removing extended field '%s' on '%s'…", _data_->name, _data_->_tmp0_);
#line 1077 "/run/build/folks/folks/individual.vala"
	_data_->persona_error = NULL;
#line 5446 "individual.c"
	{
#line 1080 "/run/build/folks/folks/individual.vala"
		_data_->_tmp1_ = _data_->self->priv->_persona_set;
#line 1080 "/run/build/folks/folks/individual.vala"
		_data_->_tmp2_ = _g_object_ref0 (_data_->_tmp1_);
#line 1080 "/run/build/folks/folks/individual.vala"
		_data_->_p_list = _data_->_tmp2_;
#line 1080 "/run/build/folks/folks/individual.vala"
		_data_->_tmp3_ = _data_->_p_list;
#line 1080 "/run/build/folks/folks/individual.vala"
		_data_->_tmp4_ = gee_collection_get_size ((GeeCollection*) _data_->_tmp3_);
#line 1080 "/run/build/folks/folks/individual.vala"
		_data_->_tmp5_ = _data_->_tmp4_;
#line 1080 "/run/build/folks/folks/individual.vala"
		_data_->_p_size = _data_->_tmp5_;
#line 1080 "/run/build/folks/folks/individual.vala"
		_data_->_p_index = -1;
#line 1080 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->_tmp6_ = _data_->_p_index;
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->_p_index = _data_->_tmp6_ + 1;
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->_tmp7_ = _data_->_p_index;
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->_tmp8_ = _data_->_p_size;
#line 1080 "/run/build/folks/folks/individual.vala"
			if (!(_data_->_tmp7_ < _data_->_tmp8_)) {
#line 1080 "/run/build/folks/folks/individual.vala"
				break;
#line 5478 "individual.c"
			}
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->_tmp9_ = _data_->_p_list;
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->_tmp10_ = _data_->_p_index;
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->_tmp11_ = folks_small_set_get (_data_->_tmp9_, _data_->_tmp10_);
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->_tmp12_ = _g_object_ref0 ((FolksPersona*) _data_->_tmp11_);
#line 1080 "/run/build/folks/folks/individual.vala"
			_data_->p = _data_->_tmp12_;
#line 1082 "/run/build/folks/folks/individual.vala"
			_data_->_tmp13_ = _data_->p;
#line 1082 "/run/build/folks/folks/individual.vala"
			_data_->_tmp14_ = folks_persona_get_writeable_properties (_data_->_tmp13_, &_data_->_tmp14__length1);
#line 1082 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15_ = _data_->_tmp14_;
#line 1082 "/run/build/folks/folks/individual.vala"
			_data_->_tmp15__length1 = _data_->_tmp14__length1;
#line 1082 "/run/build/folks/folks/individual.vala"
			if (_vala_string_array_contains (_data_->_tmp15_, _data_->_tmp15__length1, "extended-info")) {
#line 1084 "/run/build/folks/folks/individual.vala"
				_data_->_tmp16_ = _data_->p;
#line 1084 "/run/build/folks/folks/individual.vala"
				_data_->_tmp17_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp16_, FOLKS_TYPE_EXTENDED_INFO) ? ((FolksExtendedInfo*) _data_->_tmp16_) : NULL);
#line 1084 "/run/build/folks/folks/individual.vala"
				_data_->e = _data_->_tmp17_;
#line 5506 "individual.c"
				{
#line 1087 "/run/build/folks/folks/individual.vala"
					_data_->_tmp18_ = _data_->e;
#line 1087 "/run/build/folks/folks/individual.vala"
					_data_->_state_ = 1;
#line 1087 "/run/build/folks/folks/individual.vala"
					folks_extended_info_remove_extended_field (_data_->_tmp18_, _data_->name, folks_individual_remove_extended_field_ready, _data_);
#line 1087 "/run/build/folks/folks/individual.vala"
					return FALSE;
#line 5516 "individual.c"
					_state_1:
#line 1087 "/run/build/folks/folks/individual.vala"
					folks_extended_info_remove_extended_field_finish (_data_->_tmp18_, _data_->_res_, &_data_->_inner_error_);
#line 1087 "/run/build/folks/folks/individual.vala"
					if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 1087 "/run/build/folks/folks/individual.vala"
						if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 5524 "individual.c"
							goto __catch16_folks_property_error;
						}
#line 1087 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->e);
#line 1087 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 1087 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 1087 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 1087 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: unexpected error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 1087 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 1087 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 1087 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 5543 "individual.c"
					}
#line 1088 "/run/build/folks/folks/individual.vala"
					_data_->_tmp19_ = _data_->p;
#line 1088 "/run/build/folks/folks/individual.vala"
					_data_->_tmp20_ = folks_persona_get_uid (_data_->_tmp19_);
#line 1088 "/run/build/folks/folks/individual.vala"
					_data_->_tmp21_ = _data_->_tmp20_;
#line 1088 "/run/build/folks/folks/individual.vala"
					g_debug ("individual.vala:1088:     removed from writeable persona '%s'", _data_->_tmp21_);
#line 5553 "individual.c"
				}
				goto __finally16;
				__catch16_folks_property_error:
				{
#line 1085 "/run/build/folks/folks/individual.vala"
					_data_->_vala1_e = _data_->_inner_error_;
#line 1085 "/run/build/folks/folks/individual.vala"
					_data_->_inner_error_ = NULL;
#line 1093 "/run/build/folks/folks/individual.vala"
					_data_->_tmp22_ = _data_->persona_error;
#line 1093 "/run/build/folks/folks/individual.vala"
					if (_data_->_tmp22_ == NULL) {
#line 1095 "/run/build/folks/folks/individual.vala"
						_data_->_tmp23_ = _data_->_vala1_e;
#line 1095 "/run/build/folks/folks/individual.vala"
						_data_->_tmp24_ = _g_error_copy0 (_data_->_tmp23_);
#line 1095 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 1095 "/run/build/folks/folks/individual.vala"
						_data_->persona_error = _data_->_tmp24_;
#line 5574 "individual.c"
					}
#line 1085 "/run/build/folks/folks/individual.vala"
					_g_error_free0 (_data_->_vala1_e);
#line 5578 "individual.c"
				}
				__finally16:
#line 1085 "/run/build/folks/folks/individual.vala"
				if (G_UNLIKELY (_data_->_inner_error_ != NULL)) {
#line 1085 "/run/build/folks/folks/individual.vala"
					if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 1085 "/run/build/folks/folks/individual.vala"
						g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 1085 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->e);
#line 1085 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 1085 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 1085 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 1085 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 1085 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 5599 "individual.c"
					} else {
#line 1085 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->e);
#line 1085 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->p);
#line 1085 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (_data_->_p_list);
#line 1085 "/run/build/folks/folks/individual.vala"
						_g_error_free0 (_data_->persona_error);
#line 1085 "/run/build/folks/folks/individual.vala"
						g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 1085 "/run/build/folks/folks/individual.vala"
						g_clear_error (&_data_->_inner_error_);
#line 1085 "/run/build/folks/folks/individual.vala"
						g_object_unref (_data_->_async_result);
#line 1085 "/run/build/folks/folks/individual.vala"
						return FALSE;
#line 5617 "individual.c"
					}
				}
#line 1082 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_data_->e);
#line 5622 "individual.c"
			}
#line 1080 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->p);
#line 5626 "individual.c"
		}
#line 1080 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_data_->_p_list);
#line 5630 "individual.c"
	}
#line 1102 "/run/build/folks/folks/individual.vala"
	_data_->_tmp25_ = _data_->persona_error;
#line 1102 "/run/build/folks/folks/individual.vala"
	if (_data_->_tmp25_ != NULL) {
#line 1104 "/run/build/folks/folks/individual.vala"
		_data_->_tmp26_ = _data_->persona_error;
#line 1104 "/run/build/folks/folks/individual.vala"
		_data_->_tmp27_ = _g_error_copy0 (_data_->_tmp26_);
#line 1104 "/run/build/folks/folks/individual.vala"
		_data_->_inner_error_ = _data_->_tmp27_;
#line 1104 "/run/build/folks/folks/individual.vala"
		if (_data_->_inner_error_->domain == FOLKS_PROPERTY_ERROR) {
#line 1104 "/run/build/folks/folks/individual.vala"
			g_task_return_error (_data_->_async_result, _data_->_inner_error_);
#line 1104 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 1104 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 1104 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 5652 "individual.c"
		} else {
#line 1104 "/run/build/folks/folks/individual.vala"
			_g_error_free0 (_data_->persona_error);
#line 1104 "/run/build/folks/folks/individual.vala"
			g_critical ("file %s: line %d: uncaught error: %s (%s, %d)", __FILE__, __LINE__, _data_->_inner_error_->message, g_quark_to_string (_data_->_inner_error_->domain), _data_->_inner_error_->code);
#line 1104 "/run/build/folks/folks/individual.vala"
			g_clear_error (&_data_->_inner_error_);
#line 1104 "/run/build/folks/folks/individual.vala"
			g_object_unref (_data_->_async_result);
#line 1104 "/run/build/folks/folks/individual.vala"
			return FALSE;
#line 5664 "individual.c"
		}
	}
#line 1073 "/run/build/folks/folks/individual.vala"
	_g_error_free0 (_data_->persona_error);
#line 1073 "/run/build/folks/folks/individual.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 1073 "/run/build/folks/folks/individual.vala"
	if (_data_->_state_ != 0) {
#line 1073 "/run/build/folks/folks/individual.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 1073 "/run/build/folks/folks/individual.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 5677 "individual.c"
		}
	}
#line 1073 "/run/build/folks/folks/individual.vala"
	g_object_unref (_data_->_async_result);
#line 1073 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 5684 "individual.c"
}


static void
_folks_individual_notify_alias_cb (FolksIndividual* _self_,
                                   FolksPersona* p,
                                   GParamSpec* ps)
{
#line 1147 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1147 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1147 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1149 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_alias (_self_);
#line 5701 "individual.c"
}


static void
_folks_individual_notify_avatar_cb (FolksIndividual* _self_,
                                    FolksPersona* p,
                                    GParamSpec* ps)
{
#line 1152 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1152 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1152 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1154 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_avatar (_self_);
#line 5718 "individual.c"
}


static void
_folks_individual_notify_full_name_cb (FolksIndividual* _self_,
                                       FolksPersona* p,
                                       GParamSpec* ps)
{
#line 1157 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1157 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1157 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1159 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_full_name (_self_);
#line 5735 "individual.c"
}


static void
_folks_individual_notify_structured_name_cb (FolksIndividual* _self_,
                                             FolksPersona* p,
                                             GParamSpec* ps)
{
#line 1162 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1162 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1162 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1164 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_structured_name (_self_);
#line 5752 "individual.c"
}


static void
_folks_individual_notify_nickname_cb (FolksIndividual* _self_,
                                      FolksPersona* p,
                                      GParamSpec* ps)
{
#line 1167 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1167 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1167 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1169 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_nickname (_self_);
#line 5769 "individual.c"
}


static void
_folks_individual_persona_group_changed_cb (FolksIndividual* self,
                                            const gchar* group,
                                            gboolean is_member)
{
#line 1172 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1172 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (group != NULL);
#line 1174 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_groups (self, FALSE, TRUE, TRUE);
#line 5784 "individual.c"
}


static void
_folks_individual_notify_gender_cb (FolksIndividual* _self_,
                                    FolksPersona* p,
                                    GParamSpec* ps)
{
#line 1177 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1177 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1177 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1179 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_gender (_self_);
#line 5801 "individual.c"
}


static void
_folks_individual_notify_urls_cb (FolksIndividual* _self_,
                                  FolksPersona* p,
                                  GParamSpec* ps)
{
#line 1182 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1182 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1182 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1184 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_urls (_self_, FALSE, TRUE, TRUE);
#line 5818 "individual.c"
}


static void
_folks_individual_notify_phone_numbers_cb (FolksIndividual* _self_,
                                           FolksPersona* p,
                                           GParamSpec* ps)
{
#line 1187 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1187 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1187 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1189 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_phone_numbers (_self_, FALSE, TRUE, TRUE);
#line 5835 "individual.c"
}


static void
_folks_individual_notify_postal_addresses_cb (FolksIndividual* _self_,
                                              FolksPersona* p,
                                              GParamSpec* ps)
{
#line 1192 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1192 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1192 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1194 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_postal_addresses (_self_, FALSE, TRUE, TRUE);
#line 5852 "individual.c"
}


static void
_folks_individual_notify_email_addresses_cb (FolksIndividual* _self_,
                                             FolksPersona* p,
                                             GParamSpec* ps)
{
#line 1197 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1197 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1197 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1199 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_email_addresses (_self_, FALSE, TRUE, TRUE);
#line 5869 "individual.c"
}


static void
_folks_individual_notify_roles_cb (FolksIndividual* _self_,
                                   FolksPersona* p,
                                   GParamSpec* ps)
{
#line 1202 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1202 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1202 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1204 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_roles (_self_, FALSE, TRUE, TRUE);
#line 5886 "individual.c"
}


static void
_folks_individual_notify_birthday_cb (FolksIndividual* _self_,
                                      FolksPersona* p,
                                      GParamSpec* ps)
{
#line 1207 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1207 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1207 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1209 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_birthday (_self_);
#line 5903 "individual.c"
}


static void
_folks_individual_notify_notes_cb (FolksIndividual* _self_,
                                   FolksPersona* p,
                                   GParamSpec* ps)
{
#line 1212 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1212 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1212 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1214 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_notes (_self_, FALSE, TRUE, TRUE);
#line 5920 "individual.c"
}


static void
_folks_individual_notify_local_ids_cb (FolksIndividual* _self_,
                                       FolksPersona* p,
                                       GParamSpec* ps)
{
#line 1217 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1217 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1217 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1219 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_local_ids (_self_, FALSE, TRUE, TRUE);
#line 5937 "individual.c"
}


static void
_folks_individual_notify_location_cb (FolksIndividual* _self_,
                                      FolksPersona* p,
                                      GParamSpec* ps)
{
#line 1222 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1222 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1222 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1224 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_location (_self_);
#line 5954 "individual.c"
}


static void
folks_individual_real_change_group_data_free (gpointer _data)
{
	FolksIndividualChangeGroupData* _data_;
	_data_ = _data;
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->group);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_data_->self);
#line 84 "/run/build/folks/folks/individual.vala"
	g_slice_free (FolksIndividualChangeGroupData, _data_);
#line 5969 "individual.c"
}


static void
folks_individual_real_change_group_async_ready_wrapper (GObject *source_object,
                                                        GAsyncResult *res,
                                                        void *user_data)
{
	FolksIndividualChangeGroupData* _task_data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_ = g_task_get_task_data (G_TASK (res));
#line 84 "/run/build/folks/folks/individual.vala"
	if (_task_data_->_callback_ != NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_task_data_->_callback_ (source_object, res, user_data);
#line 5985 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	_task_data_->_task_complete_ = TRUE;
#line 5989 "individual.c"
}


static void
folks_individual_real_change_group (FolksGroupDetails* base,
                                    const gchar* group,
                                    gboolean is_member,
                                    GAsyncReadyCallback _callback_,
                                    gpointer _user_data_)
{
	FolksIndividual * self;
	FolksIndividualChangeGroupData* _data_;
	FolksIndividual* _tmp0_;
	gchar* _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_slice_new0 (FolksIndividualChangeGroupData);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_callback_ = _callback_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->_async_result = g_task_new (G_OBJECT (self), NULL, folks_individual_real_change_group_async_ready_wrapper, _user_data_);
#line 84 "/run/build/folks/folks/individual.vala"
	if (_callback_ == NULL) {
#line 84 "/run/build/folks/folks/individual.vala"
		_data_->_task_complete_ = TRUE;
#line 6016 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	g_task_set_task_data (_data_->_async_result, _data_, folks_individual_real_change_group_data_free);
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (self);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->self = _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	_tmp1_ = g_strdup (group);
#line 84 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data_->group);
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->group = _tmp1_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_->is_member = is_member;
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_real_change_group_co (_data_);
#line 6034 "individual.c"
}


static void
folks_individual_real_change_group_finish (FolksGroupDetails* base,
                                           GAsyncResult* _res_,
                                           GError** error)
{
	FolksIndividualChangeGroupData* _data_;
#line 84 "/run/build/folks/folks/individual.vala"
	_data_ = g_task_propagate_pointer (G_TASK (_res_), NULL);
#line 6046 "individual.c"
}


/**
   * Add or remove the Individual from the specified group.
   *
   * If ``is_member`` is ``true``, the Individual will be added to the
   * ``group``. If it is ``false``, they will be removed from the ``group``.
   *
   * The group membership change will propagate to every {@link Persona} in
   * the Individual.
   *
   * @param group a freeform group identifier
   * @param is_member whether the Individual should be a member of the group
   * @since 0.1.11
   */
static gboolean
folks_individual_real_change_group_co (FolksIndividualChangeGroupData* _data_)
{
#line 1240 "/run/build/folks/folks/individual.vala"
	switch (_data_->_state_) {
#line 1240 "/run/build/folks/folks/individual.vala"
		case 0:
#line 6070 "individual.c"
		goto _state_0;
		default:
#line 1240 "/run/build/folks/folks/individual.vala"
		g_assert_not_reached ();
#line 6075 "individual.c"
	}
	_state_0:
	{
#line 1242 "/run/build/folks/folks/individual.vala"
		_data_->_tmp0_ = _data_->self->priv->_persona_set;
#line 1242 "/run/build/folks/folks/individual.vala"
		_data_->_tmp1_ = _g_object_ref0 (_data_->_tmp0_);
#line 1242 "/run/build/folks/folks/individual.vala"
		_data_->_p_list = _data_->_tmp1_;
#line 1242 "/run/build/folks/folks/individual.vala"
		_data_->_tmp2_ = _data_->_p_list;
#line 1242 "/run/build/folks/folks/individual.vala"
		_data_->_tmp3_ = gee_collection_get_size ((GeeCollection*) _data_->_tmp2_);
#line 1242 "/run/build/folks/folks/individual.vala"
		_data_->_tmp4_ = _data_->_tmp3_;
#line 1242 "/run/build/folks/folks/individual.vala"
		_data_->_p_size = _data_->_tmp4_;
#line 1242 "/run/build/folks/folks/individual.vala"
		_data_->_p_index = -1;
#line 1242 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->_tmp5_ = _data_->_p_index;
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->_p_index = _data_->_tmp5_ + 1;
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->_tmp6_ = _data_->_p_index;
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->_tmp7_ = _data_->_p_size;
#line 1242 "/run/build/folks/folks/individual.vala"
			if (!(_data_->_tmp6_ < _data_->_tmp7_)) {
#line 1242 "/run/build/folks/folks/individual.vala"
				break;
#line 6109 "individual.c"
			}
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->_tmp8_ = _data_->_p_list;
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->_tmp9_ = _data_->_p_index;
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->_tmp10_ = folks_small_set_get (_data_->_tmp8_, _data_->_tmp9_);
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->_tmp11_ = _g_object_ref0 ((FolksPersona*) _data_->_tmp10_);
#line 1242 "/run/build/folks/folks/individual.vala"
			_data_->p = _data_->_tmp11_;
#line 1244 "/run/build/folks/folks/individual.vala"
			_data_->_tmp12_ = _data_->p;
#line 1244 "/run/build/folks/folks/individual.vala"
			if (G_TYPE_CHECK_INSTANCE_TYPE (_data_->_tmp12_, FOLKS_TYPE_GROUP_DETAILS)) {
#line 1245 "/run/build/folks/folks/individual.vala"
				_data_->_tmp13_ = _data_->p;
#line 1245 "/run/build/folks/folks/individual.vala"
				folks_group_details_change_group (G_TYPE_CHECK_INSTANCE_CAST (_data_->_tmp13_, FOLKS_TYPE_GROUP_DETAILS, FolksGroupDetails), _data_->group, _data_->is_member, NULL, NULL);
#line 6129 "individual.c"
			}
#line 1242 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_data_->p);
#line 6133 "individual.c"
		}
#line 1242 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_data_->_p_list);
#line 6137 "individual.c"
	}
#line 1240 "/run/build/folks/folks/individual.vala"
	g_task_return_pointer (_data_->_async_result, _data_, NULL);
#line 1240 "/run/build/folks/folks/individual.vala"
	if (_data_->_state_ != 0) {
#line 1240 "/run/build/folks/folks/individual.vala"
		while (_data_->_task_complete_ != TRUE) {
#line 1240 "/run/build/folks/folks/individual.vala"
			g_main_context_iteration (g_task_get_context (_data_->_async_result), TRUE);
#line 6147 "individual.c"
		}
	}
#line 1240 "/run/build/folks/folks/individual.vala"
	g_object_unref (_data_->_async_result);
#line 1240 "/run/build/folks/folks/individual.vala"
	return FALSE;
#line 6154 "individual.c"
}


static void
_folks_individual_notify_presence_cb (FolksIndividual* _self_,
                                      FolksPersona* p,
                                      GParamSpec* ps)
{
#line 1252 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1252 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1252 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1254 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_presence (_self_);
#line 6171 "individual.c"
}


static void
_folks_individual_notify_im_addresses_cb (FolksIndividual* _self_,
                                          FolksPersona* p,
                                          GParamSpec* ps)
{
#line 1257 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1257 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1257 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1259 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_im_addresses (_self_, FALSE, TRUE, TRUE);
#line 6188 "individual.c"
}


static void
_folks_individual_notify_web_service_addresses_cb (FolksIndividual* _self_,
                                                   FolksPersona* p,
                                                   GParamSpec* ps)
{
#line 1262 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1262 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1262 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1264 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_web_service_addresses (_self_, FALSE, TRUE, TRUE);
#line 6205 "individual.c"
}


static void
_folks_individual_notify_is_favourite_cb (FolksIndividual* _self_,
                                          FolksPersona* p,
                                          GParamSpec* ps)
{
#line 1267 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1267 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1267 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1269 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_is_favourite (_self_);
#line 6222 "individual.c"
}


static void
_folks_individual_notify_im_interaction_count_cb (FolksIndividual* _self_,
                                                  FolksPersona* p,
                                                  GParamSpec* ps)
{
#line 1272 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1272 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1272 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1278 "/run/build/folks/folks/individual.vala"
	g_object_notify ((GObject*) _self_, "im-interaction-count");
#line 6239 "individual.c"
}


static void
_folks_individual_notify_call_interaction_count_cb (FolksIndividual* _self_,
                                                    FolksPersona* p,
                                                    GParamSpec* ps)
{
#line 1281 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1281 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1281 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1287 "/run/build/folks/folks/individual.vala"
	g_object_notify ((GObject*) _self_, "call-interaction-count");
#line 6256 "individual.c"
}


static void
_folks_individual_notify_last_im_interaction_datetime_cb (FolksIndividual* _self_,
                                                          FolksPersona* p,
                                                          GParamSpec* ps)
{
#line 1290 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1290 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1290 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1296 "/run/build/folks/folks/individual.vala"
	_g_date_time_unref0 (_self_->priv->_last_im_interaction_datetime);
#line 1296 "/run/build/folks/folks/individual.vala"
	_self_->priv->_last_im_interaction_datetime = NULL;
#line 1297 "/run/build/folks/folks/individual.vala"
	g_object_notify ((GObject*) _self_, "last-im-interaction-datetime");
#line 6277 "individual.c"
}


static void
_folks_individual_notify_last_call_interaction_datetime_cb (FolksIndividual* _self_,
                                                            FolksPersona* p,
                                                            GParamSpec* ps)
{
#line 1300 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (_self_ != NULL);
#line 1300 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (p != NULL);
#line 1300 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1306 "/run/build/folks/folks/individual.vala"
	_g_date_time_unref0 (_self_->priv->_last_call_interaction_datetime);
#line 1306 "/run/build/folks/folks/individual.vala"
	_self_->priv->_last_call_interaction_datetime = NULL;
#line 1307 "/run/build/folks/folks/individual.vala"
	g_object_notify ((GObject*) _self_, "last-call-interaction-datetime");
#line 6298 "individual.c"
}


static void
_folks_individual_persona_notify_cb (FolksIndividual* self,
                                     GObject* obj,
                                     GParamSpec* ps)
{
	FolksPersona* persona = NULL;
	FolksPersona* _tmp0_;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_ = FALSE;
	const gchar* _tmp3_;
#line 1354 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1354 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (obj != NULL);
#line 1354 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (ps != NULL);
#line 1356 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_PERSONA, FolksPersona));
#line 1356 "/run/build/folks/folks/individual.vala"
	persona = _tmp0_;
#line 1362 "/run/build/folks/folks/individual.vala"
	_tmp3_ = ps->name;
#line 1362 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp3_, "individual") != 0) {
#line 6326 "individual.c"
		FolksPersona* _tmp4_;
		FolksIndividual* _tmp5_;
		FolksIndividual* _tmp6_;
#line 1363 "/run/build/folks/folks/individual.vala"
		_tmp4_ = persona;
#line 1363 "/run/build/folks/folks/individual.vala"
		_tmp5_ = folks_persona_get_individual (_tmp4_);
#line 1363 "/run/build/folks/folks/individual.vala"
		_tmp6_ = _tmp5_;
#line 1363 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _tmp6_ != self;
#line 6338 "individual.c"
	} else {
#line 1362 "/run/build/folks/folks/individual.vala"
		_tmp2_ = FALSE;
#line 6342 "individual.c"
	}
#line 1362 "/run/build/folks/folks/individual.vala"
	if (_tmp2_) {
#line 6346 "individual.c"
		FolksPersona* _tmp7_;
		FolksIndividual* _tmp8_;
		FolksIndividual* _tmp9_;
#line 1364 "/run/build/folks/folks/individual.vala"
		_tmp7_ = persona;
#line 1364 "/run/build/folks/folks/individual.vala"
		_tmp8_ = folks_persona_get_individual (_tmp7_);
#line 1364 "/run/build/folks/folks/individual.vala"
		_tmp9_ = _tmp8_;
#line 1364 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp9_ != NULL;
#line 6358 "individual.c"
	} else {
#line 1362 "/run/build/folks/folks/individual.vala"
		_tmp1_ = FALSE;
#line 6362 "individual.c"
	}
#line 1362 "/run/build/folks/folks/individual.vala"
	if (_tmp1_) {
#line 6366 "individual.c"
		const gchar* _tmp10_;
		FolksPersona* _tmp11_;
		FolksPersona* _tmp12_;
		const gchar* _tmp13_;
		const gchar* _tmp14_;
		FolksPersona* _tmp15_;
		FolksIndividual* _tmp16_;
		FolksIndividual* _tmp17_;
#line 1366 "/run/build/folks/folks/individual.vala"
		_tmp10_ = ps->name;
#line 1366 "/run/build/folks/folks/individual.vala"
		_tmp11_ = persona;
#line 1366 "/run/build/folks/folks/individual.vala"
		_tmp12_ = persona;
#line 1366 "/run/build/folks/folks/individual.vala"
		_tmp13_ = folks_persona_get_uid (_tmp12_);
#line 1366 "/run/build/folks/folks/individual.vala"
		_tmp14_ = _tmp13_;
#line 1366 "/run/build/folks/folks/individual.vala"
		_tmp15_ = persona;
#line 1366 "/run/build/folks/folks/individual.vala"
		_tmp16_ = folks_persona_get_individual (_tmp15_);
#line 1366 "/run/build/folks/folks/individual.vala"
		_tmp17_ = _tmp16_;
#line 1366 "/run/build/folks/folks/individual.vala"
		g_warning ("Notification on property ‘%s’ of Persona %p (‘%s’) where " "Persona.individual is %p but was expected to be %p.", _tmp10_, _tmp11_, _tmp14_, _tmp17_, self);
#line 1369 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (persona);
#line 1369 "/run/build/folks/folks/individual.vala"
		return;
#line 6397 "individual.c"
	} else {
		const gchar* _tmp18_;
#line 1371 "/run/build/folks/folks/individual.vala"
		_tmp18_ = ps->name;
#line 1371 "/run/build/folks/folks/individual.vala"
		if (g_strcmp0 (_tmp18_, "individual") == 0) {
#line 6404 "individual.c"
			FolksPersona* _tmp19_;
			FolksIndividual* _tmp20_;
			FolksIndividual* _tmp21_;
#line 1373 "/run/build/folks/folks/individual.vala"
			_tmp19_ = persona;
#line 1373 "/run/build/folks/folks/individual.vala"
			_tmp20_ = folks_persona_get_individual (_tmp19_);
#line 1373 "/run/build/folks/folks/individual.vala"
			_tmp21_ = _tmp20_;
#line 1373 "/run/build/folks/folks/individual.vala"
			if (_tmp21_ != self) {
#line 6416 "individual.c"
				FolksSmallSet* remaining_personas = NULL;
				FolksSmallSet* _tmp22_;
				FolksSmallSet* _tmp23_;
				FolksSmallSet* _tmp24_;
				FolksSmallSet* _tmp25_;
				FolksPersona* _tmp26_;
				FolksSmallSet* _tmp27_;
#line 1376 "/run/build/folks/folks/individual.vala"
				_tmp22_ = folks_small_set_new (FOLKS_TYPE_PERSONA, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL);
#line 1376 "/run/build/folks/folks/individual.vala"
				remaining_personas = _tmp22_;
#line 1377 "/run/build/folks/folks/individual.vala"
				_tmp23_ = remaining_personas;
#line 1377 "/run/build/folks/folks/individual.vala"
				_tmp24_ = self->priv->_persona_set;
#line 1377 "/run/build/folks/folks/individual.vala"
				gee_collection_add_all ((GeeCollection*) _tmp23_, (GeeCollection*) _tmp24_);
#line 1378 "/run/build/folks/folks/individual.vala"
				_tmp25_ = remaining_personas;
#line 1378 "/run/build/folks/folks/individual.vala"
				_tmp26_ = persona;
#line 1378 "/run/build/folks/folks/individual.vala"
				gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp25_, _tmp26_);
#line 1380 "/run/build/folks/folks/individual.vala"
				_tmp27_ = remaining_personas;
#line 1380 "/run/build/folks/folks/individual.vala"
				_folks_individual_set_personas (self, (GeeSet*) _tmp27_, NULL);
#line 1373 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (remaining_personas);
#line 6446 "individual.c"
			}
#line 1383 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 1383 "/run/build/folks/folks/individual.vala"
			return;
#line 6452 "individual.c"
		}
	}
	{
		FolksIndividual_Notifier* notifier_collection = NULL;
		gint notifier_collection_length1 = 0;
		gint _notifier_collection_size_ = 0;
		gint notifier_it = 0;
#line 1386 "/run/build/folks/folks/individual.vala"
		notifier_collection = FOLKS_INDIVIDUAL__notifiers;
#line 1386 "/run/build/folks/folks/individual.vala"
		notifier_collection_length1 = G_N_ELEMENTS (FOLKS_INDIVIDUAL__notifiers);
#line 1386 "/run/build/folks/folks/individual.vala"
		for (notifier_it = 0; notifier_it < G_N_ELEMENTS (FOLKS_INDIVIDUAL__notifiers); notifier_it = notifier_it + 1) {
#line 6466 "individual.c"
			FolksIndividual_Notifier notifier = {0};
#line 1386 "/run/build/folks/folks/individual.vala"
			notifier = notifier_collection[notifier_it];
#line 6470 "individual.c"
			{
				const gchar* _tmp28_;
				FolksIndividual_Notifier _tmp29_;
				const gchar* _tmp30_;
#line 1388 "/run/build/folks/folks/individual.vala"
				_tmp28_ = ps->name;
#line 1388 "/run/build/folks/folks/individual.vala"
				_tmp29_ = notifier;
#line 1388 "/run/build/folks/folks/individual.vala"
				_tmp30_ = _tmp29_.property;
#line 1388 "/run/build/folks/folks/individual.vala"
				if (g_strcmp0 (_tmp28_, _tmp30_) == 0) {
#line 6483 "individual.c"
					FolksIndividual_Notifier _tmp31_;
					FolksIndividual_UnboundNotifier _tmp32_;
					FolksPersona* _tmp33_;
#line 1390 "/run/build/folks/folks/individual.vala"
					_tmp31_ = notifier;
#line 1390 "/run/build/folks/folks/individual.vala"
					_tmp32_ = _tmp31_.notify;
#line 1390 "/run/build/folks/folks/individual.vala"
					_tmp33_ = persona;
#line 1390 "/run/build/folks/folks/individual.vala"
					_tmp32_ (self, _tmp33_, ps);
#line 1391 "/run/build/folks/folks/individual.vala"
					break;
#line 6497 "individual.c"
				}
			}
		}
	}
#line 1354 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (persona);
#line 6504 "individual.c"
}


/**
   * Create a new Individual.
   *
   * The Individual can optionally be seeded with the {@link Persona}s in
   * ``personas``. Otherwise, it will have to have personas added using the
   * {@link Folks.Individual.personas} property after construction.
   *
   * @param personas a list of {@link Persona}s to initialise the
   * {@link Folks.Individual} with, or ``null``
   * @return a new Individual
   *
   * @since 0.5.1
   */
FolksIndividual*
folks_individual_construct (GType object_type,
                            GeeSet* personas)
{
	FolksIndividual * self = NULL;
	FolksSmallSet* _tmp0_;
	gint _tmp1_;
	gint _tmp2_;
#line 1411 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) g_object_new (object_type, "personas", personas, NULL);
#line 1413 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_persona_set;
#line 1413 "/run/build/folks/folks/individual.vala"
	_tmp1_ = gee_collection_get_size ((GeeCollection*) _tmp0_);
#line 1413 "/run/build/folks/folks/individual.vala"
	_tmp2_ = _tmp1_;
#line 1413 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:1413: Creating new Individual with %u Personas: %p", (guint) _tmp2_, self);
#line 1409 "/run/build/folks/folks/individual.vala"
	return self;
#line 6541 "individual.c"
}


FolksIndividual*
folks_individual_new (GeeSet* personas)
{
#line 1409 "/run/build/folks/folks/individual.vala"
	return folks_individual_construct (FOLKS_TYPE_INDIVIDUAL, personas);
#line 6550 "individual.c"
}


static void
_folks_individual_emit_personas_changed (FolksIndividual* self,
                                         GeeSet* added,
                                         GeeSet* removed)
{
	GeeSet* _added = NULL;
	GeeSet* _tmp0_;
	GeeSet* _removed = NULL;
	GeeSet* _tmp1_;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_ = FALSE;
	GeeSet* _tmp11_;
	GeeSet* _tmp12_;
	GeeSet* _tmp13_;
	GeeSet* _tmp14_;
	GeeSet* _tmp15_;
	GeeSet* _tmp16_;
	GeeSet* _tmp17_;
	GeeSet* _tmp18_;
#line 1430 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1433 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (added);
#line 1433 "/run/build/folks/folks/individual.vala"
	_added = _tmp0_;
#line 1434 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _g_object_ref0 (removed);
#line 1434 "/run/build/folks/folks/individual.vala"
	_removed = _tmp1_;
#line 1436 "/run/build/folks/folks/individual.vala"
	if (added == NULL) {
#line 1436 "/run/build/folks/folks/individual.vala"
		_tmp3_ = TRUE;
#line 6587 "individual.c"
	} else {
		gint _tmp4_;
		gint _tmp5_;
#line 1436 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) G_TYPE_CHECK_INSTANCE_CAST (added, GEE_TYPE_SET, GeeSet));
#line 1436 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 1436 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _tmp5_ == 0;
#line 6597 "individual.c"
	}
#line 1436 "/run/build/folks/folks/individual.vala"
	if (_tmp3_) {
#line 6601 "individual.c"
		gboolean _tmp6_ = FALSE;
#line 1437 "/run/build/folks/folks/individual.vala"
		if (removed == NULL) {
#line 1437 "/run/build/folks/folks/individual.vala"
			_tmp6_ = TRUE;
#line 6607 "individual.c"
		} else {
			gint _tmp7_;
			gint _tmp8_;
#line 1437 "/run/build/folks/folks/individual.vala"
			_tmp7_ = gee_collection_get_size ((GeeCollection*) G_TYPE_CHECK_INSTANCE_CAST (removed, GEE_TYPE_SET, GeeSet));
#line 1437 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _tmp7_;
#line 1437 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _tmp8_ == 0;
#line 6617 "individual.c"
		}
#line 1437 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _tmp6_;
#line 6621 "individual.c"
	} else {
#line 1436 "/run/build/folks/folks/individual.vala"
		_tmp2_ = FALSE;
#line 6625 "individual.c"
	}
#line 1436 "/run/build/folks/folks/individual.vala"
	if (_tmp2_) {
#line 1440 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_removed);
#line 1440 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_added);
#line 1440 "/run/build/folks/folks/individual.vala"
		return;
#line 6635 "individual.c"
	} else {
#line 1442 "/run/build/folks/folks/individual.vala"
		if (added == NULL) {
#line 6639 "individual.c"
			FolksSmallSet* _tmp9_;
#line 1444 "/run/build/folks/folks/individual.vala"
			_tmp9_ = folks_small_set_empty (FOLKS_TYPE_PERSONA, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref);
#line 1444 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_added);
#line 1444 "/run/build/folks/folks/individual.vala"
			_added = (GeeSet*) _tmp9_;
#line 6647 "individual.c"
		} else {
#line 1446 "/run/build/folks/folks/individual.vala"
			if (removed == NULL) {
#line 6651 "individual.c"
				FolksSmallSet* _tmp10_;
#line 1448 "/run/build/folks/folks/individual.vala"
				_tmp10_ = folks_small_set_empty (FOLKS_TYPE_PERSONA, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref);
#line 1448 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_removed);
#line 1448 "/run/build/folks/folks/individual.vala"
				_removed = (GeeSet*) _tmp10_;
#line 6659 "individual.c"
			}
		}
	}
#line 1452 "/run/build/folks/folks/individual.vala"
	_tmp11_ = _added;
#line 1452 "/run/build/folks/folks/individual.vala"
	_tmp12_ = gee_set_get_read_only_view (G_TYPE_CHECK_INSTANCE_CAST (_tmp11_, GEE_TYPE_SET, GeeSet));
#line 1452 "/run/build/folks/folks/individual.vala"
	_tmp13_ = _tmp12_;
#line 1452 "/run/build/folks/folks/individual.vala"
	_tmp14_ = _tmp13_;
#line 1452 "/run/build/folks/folks/individual.vala"
	_tmp15_ = _removed;
#line 1452 "/run/build/folks/folks/individual.vala"
	_tmp16_ = gee_set_get_read_only_view (G_TYPE_CHECK_INSTANCE_CAST (_tmp15_, GEE_TYPE_SET, GeeSet));
#line 1452 "/run/build/folks/folks/individual.vala"
	_tmp17_ = _tmp16_;
#line 1452 "/run/build/folks/folks/individual.vala"
	_tmp18_ = _tmp17_;
#line 1452 "/run/build/folks/folks/individual.vala"
	g_signal_emit (self, folks_individual_signals[FOLKS_INDIVIDUAL_PERSONAS_CHANGED_SIGNAL], 0, _tmp14_, _tmp18_);
#line 1452 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_tmp18_);
#line 1452 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_tmp14_);
#line 1430 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_removed);
#line 1430 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (_added);
#line 6689 "individual.c"
}


static void
_folks_individual_store_removed_cb (FolksIndividual* self,
                                    FolksPersonaStore* store)
{
	FolksSmallSet* remaining_personas = NULL;
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp18_;
#line 1456 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1456 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (store != NULL);
#line 1458 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_PERSONA, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL);
#line 1458 "/run/build/folks/folks/individual.vala"
	remaining_personas = _tmp0_;
#line 6708 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 1462 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 1462 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 1462 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 1462 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 1462 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 1462 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 1462 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 1462 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 1462 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 6736 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksPersona* _tmp13_;
			FolksPersonaStore* _tmp14_;
			FolksPersonaStore* _tmp15_;
#line 1462 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 1462 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 1462 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 1462 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 1462 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 1462 "/run/build/folks/folks/individual.vala"
				break;
#line 6760 "individual.c"
			}
#line 1462 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 1462 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 1462 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 1462 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 1462 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 1464 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 1464 "/run/build/folks/folks/individual.vala"
			_tmp14_ = folks_persona_get_store (_tmp13_);
#line 1464 "/run/build/folks/folks/individual.vala"
			_tmp15_ = _tmp14_;
#line 1464 "/run/build/folks/folks/individual.vala"
			if (_tmp15_ != store) {
#line 6780 "individual.c"
				FolksSmallSet* _tmp16_;
				FolksPersona* _tmp17_;
#line 1466 "/run/build/folks/folks/individual.vala"
				_tmp16_ = remaining_personas;
#line 1466 "/run/build/folks/folks/individual.vala"
				_tmp17_ = persona;
#line 1466 "/run/build/folks/folks/individual.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) _tmp16_, _tmp17_);
#line 6789 "individual.c"
			}
#line 1462 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 6793 "individual.c"
		}
#line 1462 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 6797 "individual.c"
	}
#line 1470 "/run/build/folks/folks/individual.vala"
	_tmp18_ = remaining_personas;
#line 1470 "/run/build/folks/folks/individual.vala"
	_folks_individual_set_personas (self, (GeeSet*) _tmp18_, NULL);
#line 1456 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (remaining_personas);
#line 6805 "individual.c"
}


static void
_folks_individual_store_personas_changed_cb (FolksIndividual* self,
                                             FolksPersonaStore* store,
                                             GeeSet* added,
                                             GeeSet* removed,
                                             const gchar* message,
                                             FolksPersona* actor,
                                             FolksGroupDetailsChangeReason reason)
{
	FolksSmallSet* remaining_personas = NULL;
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp16_;
#line 1473 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1473 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (store != NULL);
#line 1473 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (added != NULL);
#line 1473 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (removed != NULL);
#line 1480 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_PERSONA, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL);
#line 1480 "/run/build/folks/folks/individual.vala"
	remaining_personas = _tmp0_;
#line 6833 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 1484 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 1484 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 1484 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 1484 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 1484 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 1484 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 1484 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 1484 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 1484 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 6861 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksPersona* _tmp13_;
#line 1484 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 1484 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 1484 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 1484 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 1484 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 1484 "/run/build/folks/folks/individual.vala"
				break;
#line 6883 "individual.c"
			}
#line 1484 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 1484 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 1484 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 1484 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 1484 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 1486 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 1486 "/run/build/folks/folks/individual.vala"
			if (!gee_collection_contains ((GeeCollection*) removed, _tmp13_)) {
#line 6899 "individual.c"
				FolksSmallSet* _tmp14_;
				FolksPersona* _tmp15_;
#line 1488 "/run/build/folks/folks/individual.vala"
				_tmp14_ = remaining_personas;
#line 1488 "/run/build/folks/folks/individual.vala"
				_tmp15_ = persona;
#line 1488 "/run/build/folks/folks/individual.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) _tmp14_, _tmp15_);
#line 6908 "individual.c"
			}
#line 1484 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 6912 "individual.c"
		}
#line 1484 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 6916 "individual.c"
	}
#line 1492 "/run/build/folks/folks/individual.vala"
	_tmp16_ = remaining_personas;
#line 1492 "/run/build/folks/folks/individual.vala"
	_folks_individual_set_personas (self, (GeeSet*) _tmp16_, NULL);
#line 1473 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (remaining_personas);
#line 6924 "individual.c"
}


static void
_folks_individual_update_fields (FolksIndividual* self)
{
#line 1495 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1497 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_groups (self, FALSE, TRUE, TRUE);
#line 1498 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_presence (self);
#line 1499 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_is_favourite (self);
#line 1500 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_avatar (self);
#line 1501 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_alias (self);
#line 1502 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_trust_level (self);
#line 1503 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_im_addresses (self, FALSE, TRUE, TRUE);
#line 1504 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_web_service_addresses (self, FALSE, TRUE, TRUE);
#line 1505 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_structured_name (self);
#line 1506 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_full_name (self);
#line 1507 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_nickname (self);
#line 1508 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_gender (self);
#line 1509 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_urls (self, FALSE, TRUE, TRUE);
#line 1510 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_phone_numbers (self, FALSE, TRUE, TRUE);
#line 1511 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_email_addresses (self, FALSE, TRUE, TRUE);
#line 1512 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_roles (self, FALSE, TRUE, TRUE);
#line 1513 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_birthday (self);
#line 1514 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_notes (self, FALSE, TRUE, TRUE);
#line 1515 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_postal_addresses (self, FALSE, TRUE, TRUE);
#line 1516 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_local_ids (self, FALSE, TRUE, TRUE);
#line 1517 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_location (self);
#line 1520 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_display_name (self);
#line 6977 "individual.c"
}


static Block2Data*
block2_data_ref (Block2Data* _data2_)
{
#line 1567 "/run/build/folks/folks/individual.vala"
	g_atomic_int_inc (&_data2_->_ref_count_);
#line 1567 "/run/build/folks/folks/individual.vala"
	return _data2_;
#line 6988 "individual.c"
}


static void
block2_data_unref (void * _userdata_)
{
	Block2Data* _data2_;
	_data2_ = (Block2Data*) _userdata_;
#line 1567 "/run/build/folks/folks/individual.vala"
	if (g_atomic_int_dec_and_test (&_data2_->_ref_count_)) {
#line 6999 "individual.c"
		FolksIndividual* self;
#line 1567 "/run/build/folks/folks/individual.vala"
		self = _data2_->self;
#line 1567 "/run/build/folks/folks/individual.vala"
		_g_free0 (_data2_->prop_name);
#line 1567 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self);
#line 1567 "/run/build/folks/folks/individual.vala"
		g_slice_free (Block2Data, _data2_);
#line 7009 "individual.c"
	}
}


static gint
__lambda6_ (Block2Data* _data2_,
            FolksPersona* a,
            FolksPersona* b)
{
	FolksIndividual* self;
	gint result = 0;
	gboolean a_is_set = FALSE;
	gboolean b_is_set = FALSE;
	gboolean _tmp0_;
	gboolean _tmp1_;
	gboolean a_is_primary = FALSE;
	FolksPersonaStore* _tmp6_;
	FolksPersonaStore* _tmp7_;
	gboolean _tmp8_;
	gboolean _tmp9_;
	gboolean b_is_primary = FALSE;
	FolksPersonaStore* _tmp10_;
	FolksPersonaStore* _tmp11_;
	gboolean _tmp12_;
	gboolean _tmp13_;
	gboolean _tmp14_;
	gboolean _tmp15_;
	gboolean a_is_writeable = FALSE;
	gchar** _tmp20_;
	gint _tmp20__length1;
	gchar** _tmp21_;
	gint _tmp21__length1;
	gboolean b_is_writeable = FALSE;
	gchar** _tmp22_;
	gint _tmp22__length1;
	gchar** _tmp23_;
	gint _tmp23__length1;
	gboolean _tmp24_;
	gboolean _tmp25_;
	gint order = 0;
	gint _tmp30_;
#line 1572 "/run/build/folks/folks/individual.vala"
	self = _data2_->self;
#line 1572 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 1572 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 1574 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 1575 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 1578 "/run/build/folks/folks/individual.vala"
	a_is_set = _data2_->filter_func (a, _data2_->filter_func_target);
#line 1579 "/run/build/folks/folks/individual.vala"
	b_is_set = _data2_->filter_func (b, _data2_->filter_func_target);
#line 1581 "/run/build/folks/folks/individual.vala"
	_tmp0_ = a_is_set;
#line 1581 "/run/build/folks/folks/individual.vala"
	_tmp1_ = b_is_set;
#line 1581 "/run/build/folks/folks/individual.vala"
	if (_tmp0_ != _tmp1_) {
#line 7071 "individual.c"
		gint _tmp2_ = 0;
		gboolean _tmp3_;
		gint _tmp4_ = 0;
		gboolean _tmp5_;
#line 1583 "/run/build/folks/folks/individual.vala"
		_tmp3_ = a_is_set;
#line 1583 "/run/build/folks/folks/individual.vala"
		if (_tmp3_) {
#line 1583 "/run/build/folks/folks/individual.vala"
			_tmp2_ = 1;
#line 7082 "individual.c"
		} else {
#line 1583 "/run/build/folks/folks/individual.vala"
			_tmp2_ = 0;
#line 7086 "individual.c"
		}
#line 1583 "/run/build/folks/folks/individual.vala"
		_tmp5_ = b_is_set;
#line 1583 "/run/build/folks/folks/individual.vala"
		if (_tmp5_) {
#line 1583 "/run/build/folks/folks/individual.vala"
			_tmp4_ = 1;
#line 7094 "individual.c"
		} else {
#line 1583 "/run/build/folks/folks/individual.vala"
			_tmp4_ = 0;
#line 7098 "individual.c"
		}
#line 1583 "/run/build/folks/folks/individual.vala"
		result = _tmp2_ - _tmp4_;
#line 1583 "/run/build/folks/folks/individual.vala"
		return result;
#line 7104 "individual.c"
	}
#line 1586 "/run/build/folks/folks/individual.vala"
	_tmp6_ = folks_persona_get_store (a);
#line 1586 "/run/build/folks/folks/individual.vala"
	_tmp7_ = _tmp6_;
#line 1586 "/run/build/folks/folks/individual.vala"
	_tmp8_ = folks_persona_store_get_is_primary_store (_tmp7_);
#line 1586 "/run/build/folks/folks/individual.vala"
	_tmp9_ = _tmp8_;
#line 1586 "/run/build/folks/folks/individual.vala"
	a_is_primary = _tmp9_;
#line 1587 "/run/build/folks/folks/individual.vala"
	_tmp10_ = folks_persona_get_store (b);
#line 1587 "/run/build/folks/folks/individual.vala"
	_tmp11_ = _tmp10_;
#line 1587 "/run/build/folks/folks/individual.vala"
	_tmp12_ = folks_persona_store_get_is_primary_store (_tmp11_);
#line 1587 "/run/build/folks/folks/individual.vala"
	_tmp13_ = _tmp12_;
#line 1587 "/run/build/folks/folks/individual.vala"
	b_is_primary = _tmp13_;
#line 1589 "/run/build/folks/folks/individual.vala"
	_tmp14_ = a_is_primary;
#line 1589 "/run/build/folks/folks/individual.vala"
	_tmp15_ = b_is_primary;
#line 1589 "/run/build/folks/folks/individual.vala"
	if (_tmp14_ != _tmp15_) {
#line 7132 "individual.c"
		gint _tmp16_ = 0;
		gboolean _tmp17_;
		gint _tmp18_ = 0;
		gboolean _tmp19_;
#line 1591 "/run/build/folks/folks/individual.vala"
		_tmp17_ = a_is_primary;
#line 1591 "/run/build/folks/folks/individual.vala"
		if (_tmp17_) {
#line 1591 "/run/build/folks/folks/individual.vala"
			_tmp16_ = 1;
#line 7143 "individual.c"
		} else {
#line 1591 "/run/build/folks/folks/individual.vala"
			_tmp16_ = 0;
#line 7147 "individual.c"
		}
#line 1591 "/run/build/folks/folks/individual.vala"
		_tmp19_ = b_is_primary;
#line 1591 "/run/build/folks/folks/individual.vala"
		if (_tmp19_) {
#line 1591 "/run/build/folks/folks/individual.vala"
			_tmp18_ = 1;
#line 7155 "individual.c"
		} else {
#line 1591 "/run/build/folks/folks/individual.vala"
			_tmp18_ = 0;
#line 7159 "individual.c"
		}
#line 1591 "/run/build/folks/folks/individual.vala"
		result = _tmp16_ - _tmp18_;
#line 1591 "/run/build/folks/folks/individual.vala"
		return result;
#line 7165 "individual.c"
	}
#line 1597 "/run/build/folks/folks/individual.vala"
	_tmp20_ = folks_persona_get_writeable_properties (a, &_tmp20__length1);
#line 1597 "/run/build/folks/folks/individual.vala"
	_tmp21_ = _tmp20_;
#line 1597 "/run/build/folks/folks/individual.vala"
	_tmp21__length1 = _tmp20__length1;
#line 1597 "/run/build/folks/folks/individual.vala"
	a_is_writeable = _vala_string_array_contains (_tmp21_, _tmp21__length1, _data2_->prop_name);
#line 1598 "/run/build/folks/folks/individual.vala"
	_tmp22_ = folks_persona_get_writeable_properties (b, &_tmp22__length1);
#line 1598 "/run/build/folks/folks/individual.vala"
	_tmp23_ = _tmp22_;
#line 1598 "/run/build/folks/folks/individual.vala"
	_tmp23__length1 = _tmp22__length1;
#line 1598 "/run/build/folks/folks/individual.vala"
	b_is_writeable = _vala_string_array_contains (_tmp23_, _tmp23__length1, _data2_->prop_name);
#line 1600 "/run/build/folks/folks/individual.vala"
	_tmp24_ = a_is_writeable;
#line 1600 "/run/build/folks/folks/individual.vala"
	_tmp25_ = b_is_writeable;
#line 1600 "/run/build/folks/folks/individual.vala"
	if (_tmp24_ != _tmp25_) {
#line 7189 "individual.c"
		gint _tmp26_ = 0;
		gboolean _tmp27_;
		gint _tmp28_ = 0;
		gboolean _tmp29_;
#line 1602 "/run/build/folks/folks/individual.vala"
		_tmp27_ = a_is_writeable;
#line 1602 "/run/build/folks/folks/individual.vala"
		if (_tmp27_) {
#line 1602 "/run/build/folks/folks/individual.vala"
			_tmp26_ = 1;
#line 7200 "individual.c"
		} else {
#line 1602 "/run/build/folks/folks/individual.vala"
			_tmp26_ = 0;
#line 7204 "individual.c"
		}
#line 1602 "/run/build/folks/folks/individual.vala"
		_tmp29_ = b_is_writeable;
#line 1602 "/run/build/folks/folks/individual.vala"
		if (_tmp29_) {
#line 1602 "/run/build/folks/folks/individual.vala"
			_tmp28_ = 1;
#line 7212 "individual.c"
		} else {
#line 1602 "/run/build/folks/folks/individual.vala"
			_tmp28_ = 0;
#line 7216 "individual.c"
		}
#line 1602 "/run/build/folks/folks/individual.vala"
		result = _tmp26_ - _tmp28_;
#line 1602 "/run/build/folks/folks/individual.vala"
		return result;
#line 7222 "individual.c"
	}
#line 1610 "/run/build/folks/folks/individual.vala"
	order = _data2_->compare_func (a, b);
#line 1612 "/run/build/folks/folks/individual.vala"
	_tmp30_ = order;
#line 1612 "/run/build/folks/folks/individual.vala"
	if (_tmp30_ == 0) {
#line 7230 "individual.c"
		GCompareFunc _tmp31_;
		const gchar* _tmp32_;
		const gchar* _tmp33_;
		const gchar* _tmp34_;
		const gchar* _tmp35_;
#line 1614 "/run/build/folks/folks/individual.vala"
		_tmp31_ = g_strcmp0;
#line 1614 "/run/build/folks/folks/individual.vala"
		_tmp32_ = folks_persona_get_uid (a);
#line 1614 "/run/build/folks/folks/individual.vala"
		_tmp33_ = _tmp32_;
#line 1614 "/run/build/folks/folks/individual.vala"
		_tmp34_ = folks_persona_get_uid (b);
#line 1614 "/run/build/folks/folks/individual.vala"
		_tmp35_ = _tmp34_;
#line 1614 "/run/build/folks/folks/individual.vala"
		order = _tmp31_ (_tmp33_, _tmp35_);
#line 7248 "individual.c"
	}
#line 1617 "/run/build/folks/folks/individual.vala"
	result = order;
#line 1617 "/run/build/folks/folks/individual.vala"
	return result;
#line 7254 "individual.c"
}


static gint
___lambda6__gcompare_data_func (gconstpointer a,
                                gconstpointer b,
                                gpointer self)
{
	gint result;
	result = __lambda6_ (self, (FolksPersona*) a, (FolksPersona*) b);
#line 1572 "/run/build/folks/folks/individual.vala"
	return result;
#line 7267 "individual.c"
}


static void
_folks_individual_update_single_valued_property (FolksIndividual* self,
                                                 GType interface_type,
                                                 FolksIndividualPropertyFilter filter_func,
                                                 gpointer filter_func_target,
                                                 GCompareFunc compare_func,
                                                 const gchar* prop_name,
                                                 FolksIndividualSingleValuedPropertySetter setter,
                                                 gpointer setter_target)
{
	Block2Data* _data2_;
	gchar* _tmp0_;
	GCompareDataFunc primary_compare_func = NULL;
	void* primary_compare_func_target;
	GDestroyNotify primary_compare_func_target_destroy_notify;
	FolksPersona* candidate_p = NULL;
	FolksPersona* _tmp21_;
#line 1567 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1567 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (prop_name != NULL);
#line 1567 "/run/build/folks/folks/individual.vala"
	_data2_ = g_slice_new0 (Block2Data);
#line 1567 "/run/build/folks/folks/individual.vala"
	_data2_->_ref_count_ = 1;
#line 1567 "/run/build/folks/folks/individual.vala"
	_data2_->self = g_object_ref (self);
#line 1567 "/run/build/folks/folks/individual.vala"
	_data2_->filter_func = filter_func;
#line 1567 "/run/build/folks/folks/individual.vala"
	_data2_->filter_func_target = filter_func_target;
#line 1567 "/run/build/folks/folks/individual.vala"
	_data2_->compare_func = compare_func;
#line 1567 "/run/build/folks/folks/individual.vala"
	_tmp0_ = g_strdup (prop_name);
#line 1567 "/run/build/folks/folks/individual.vala"
	_g_free0 (_data2_->prop_name);
#line 1567 "/run/build/folks/folks/individual.vala"
	_data2_->prop_name = _tmp0_;
#line 1572 "/run/build/folks/folks/individual.vala"
	primary_compare_func = ___lambda6__gcompare_data_func;
#line 1572 "/run/build/folks/folks/individual.vala"
	primary_compare_func_target = block2_data_ref (_data2_);
#line 1572 "/run/build/folks/folks/individual.vala"
	primary_compare_func_target_destroy_notify = block2_data_unref;
#line 1620 "/run/build/folks/folks/individual.vala"
	candidate_p = NULL;
#line 7318 "individual.c"
	{
		FolksSmallSet* _p_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _p_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _p_index = 0;
#line 1622 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 1622 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 1622 "/run/build/folks/folks/individual.vala"
		_p_list = _tmp2_;
#line 1622 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _p_list;
#line 1622 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 1622 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 1622 "/run/build/folks/folks/individual.vala"
		_p_size = _tmp5_;
#line 1622 "/run/build/folks/folks/individual.vala"
		_p_index = -1;
#line 1622 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 7346 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* p = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksPersona* _tmp13_;
#line 1622 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _p_index;
#line 1622 "/run/build/folks/folks/individual.vala"
			_p_index = _tmp6_ + 1;
#line 1622 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _p_index;
#line 1622 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _p_size;
#line 1622 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 1622 "/run/build/folks/folks/individual.vala"
				break;
#line 7368 "individual.c"
			}
#line 1622 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _p_list;
#line 1622 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _p_index;
#line 1622 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 1622 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 1622 "/run/build/folks/folks/individual.vala"
			p = _tmp12_;
#line 1625 "/run/build/folks/folks/individual.vala"
			_tmp13_ = p;
#line 1625 "/run/build/folks/folks/individual.vala"
			if (g_type_is_a (G_TYPE_FROM_INSTANCE ((GObject*) _tmp13_), interface_type)) {
#line 7384 "individual.c"
				gboolean _tmp14_ = FALSE;
				FolksPersona* _tmp15_;
#line 1627 "/run/build/folks/folks/individual.vala"
				_tmp15_ = candidate_p;
#line 1627 "/run/build/folks/folks/individual.vala"
				if (_tmp15_ == NULL) {
#line 1627 "/run/build/folks/folks/individual.vala"
					_tmp14_ = TRUE;
#line 7393 "individual.c"
				} else {
					GCompareDataFunc _tmp16_;
					void* _tmp16__target;
					FolksPersona* _tmp17_;
					FolksPersona* _tmp18_;
#line 1628 "/run/build/folks/folks/individual.vala"
					_tmp16_ = primary_compare_func;
#line 1628 "/run/build/folks/folks/individual.vala"
					_tmp16__target = primary_compare_func_target;
#line 1628 "/run/build/folks/folks/individual.vala"
					_tmp17_ = p;
#line 1628 "/run/build/folks/folks/individual.vala"
					_tmp18_ = candidate_p;
#line 1628 "/run/build/folks/folks/individual.vala"
					_tmp14_ = _tmp16_ (_tmp17_, G_TYPE_CHECK_INSTANCE_CAST (_tmp18_, FOLKS_TYPE_PERSONA, FolksPersona), _tmp16__target) > 0;
#line 7409 "individual.c"
				}
#line 1627 "/run/build/folks/folks/individual.vala"
				if (_tmp14_) {
#line 7413 "individual.c"
					FolksPersona* _tmp19_;
					FolksPersona* _tmp20_;
#line 1630 "/run/build/folks/folks/individual.vala"
					_tmp19_ = p;
#line 1630 "/run/build/folks/folks/individual.vala"
					_tmp20_ = _g_object_ref0 (_tmp19_);
#line 1630 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (candidate_p);
#line 1630 "/run/build/folks/folks/individual.vala"
					candidate_p = _tmp20_;
#line 7424 "individual.c"
				}
			}
#line 1622 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 7429 "individual.c"
		}
#line 1622 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_list);
#line 7433 "individual.c"
	}
#line 1638 "/run/build/folks/folks/individual.vala"
	_tmp21_ = candidate_p;
#line 1638 "/run/build/folks/folks/individual.vala"
	setter (_tmp21_, setter_target);
#line 1567 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (candidate_p);
#line 1567 "/run/build/folks/folks/individual.vala"
	(primary_compare_func_target_destroy_notify == NULL) ? NULL : (primary_compare_func_target_destroy_notify (primary_compare_func_target), NULL);
#line 1567 "/run/build/folks/folks/individual.vala"
	primary_compare_func = NULL;
#line 1567 "/run/build/folks/folks/individual.vala"
	primary_compare_func_target = NULL;
#line 1567 "/run/build/folks/folks/individual.vala"
	primary_compare_func_target_destroy_notify = NULL;
#line 1567 "/run/build/folks/folks/individual.vala"
	block2_data_unref (_data2_);
#line 1567 "/run/build/folks/folks/individual.vala"
	_data2_ = NULL;
#line 7453 "individual.c"
}


static void
_folks_individual_update_multi_valued_property (FolksIndividual* self,
                                                const gchar* prop_name,
                                                gboolean create_if_not_exist,
                                                FolksIndividualPropertyIsNull prop_is_null,
                                                gpointer prop_is_null_target,
                                                FolksIndividualCollectionCreator create_collection,
                                                gpointer create_collection_target,
                                                FolksIndividualMultiValuedPropertySetter setter,
                                                gpointer setter_target,
                                                gboolean emit_notification,
                                                gboolean force_update)
{
	gboolean created = FALSE;
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gboolean _tmp2_ = FALSE;
	gboolean _tmp3_;
#line 1700 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1700 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (prop_name != NULL);
#line 1710 "/run/build/folks/folks/individual.vala"
	created = FALSE;
#line 1711 "/run/build/folks/folks/individual.vala"
	if (prop_is_null (prop_is_null_target)) {
#line 1714 "/run/build/folks/folks/individual.vala"
		if (create_if_not_exist == FALSE) {
#line 1716 "/run/build/folks/folks/individual.vala"
			if (emit_notification) {
#line 1718 "/run/build/folks/folks/individual.vala"
				g_object_notify ((GObject*) self, prop_name);
#line 7489 "individual.c"
			}
#line 1720 "/run/build/folks/folks/individual.vala"
			return;
#line 7493 "individual.c"
		}
#line 1724 "/run/build/folks/folks/individual.vala"
		create_collection (create_collection_target);
#line 1725 "/run/build/folks/folks/individual.vala"
		created = TRUE;
#line 7499 "individual.c"
	}
#line 1733 "/run/build/folks/folks/individual.vala"
	_tmp3_ = created;
#line 1733 "/run/build/folks/folks/individual.vala"
	if (_tmp3_) {
#line 1733 "/run/build/folks/folks/individual.vala"
		_tmp2_ = TRUE;
#line 7507 "individual.c"
	} else {
#line 1733 "/run/build/folks/folks/individual.vala"
		_tmp2_ = force_update;
#line 7511 "individual.c"
	}
#line 1733 "/run/build/folks/folks/individual.vala"
	if (_tmp2_) {
#line 1733 "/run/build/folks/folks/individual.vala"
		_tmp1_ = setter (setter_target) == TRUE;
#line 7517 "individual.c"
	} else {
#line 1733 "/run/build/folks/folks/individual.vala"
		_tmp1_ = FALSE;
#line 7521 "individual.c"
	}
#line 1733 "/run/build/folks/folks/individual.vala"
	if (_tmp1_) {
#line 1733 "/run/build/folks/folks/individual.vala"
		_tmp0_ = emit_notification;
#line 7527 "individual.c"
	} else {
#line 1733 "/run/build/folks/folks/individual.vala"
		_tmp0_ = FALSE;
#line 7531 "individual.c"
	}
#line 1733 "/run/build/folks/folks/individual.vala"
	if (_tmp0_) {
#line 1735 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, prop_name);
#line 7537 "individual.c"
	}
}


static Block3Data*
block3_data_ref (Block3Data* _data3_)
{
#line 1739 "/run/build/folks/folks/individual.vala"
	g_atomic_int_inc (&_data3_->_ref_count_);
#line 1739 "/run/build/folks/folks/individual.vala"
	return _data3_;
#line 7549 "individual.c"
}


static void
block3_data_unref (void * _userdata_)
{
	Block3Data* _data3_;
	_data3_ = (Block3Data*) _userdata_;
#line 1739 "/run/build/folks/folks/individual.vala"
	if (g_atomic_int_dec_and_test (&_data3_->_ref_count_)) {
#line 7560 "individual.c"
		FolksIndividual* self;
#line 1739 "/run/build/folks/folks/individual.vala"
		self = _data3_->self;
#line 1739 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self);
#line 1739 "/run/build/folks/folks/individual.vala"
		g_slice_free (Block3Data, _data3_);
#line 7568 "individual.c"
	}
}


static void
__lambda64_ (Block3Data* _data3_,
             const gchar* l)
{
	FolksIndividual* self;
	const gchar* group = NULL;
	FolksSmallSet* _tmp0_;
	const gchar* _tmp1_;
#line 1803 "/run/build/folks/folks/individual.vala"
	self = _data3_->self;
#line 1803 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (l != NULL);
#line 1805 "/run/build/folks/folks/individual.vala"
	group = (const gchar*) l;
#line 1806 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_groups;
#line 1806 "/run/build/folks/folks/individual.vala"
	_tmp1_ = group;
#line 1806 "/run/build/folks/folks/individual.vala"
	gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp0_, _tmp1_);
#line 1807 "/run/build/folks/folks/individual.vala"
	if (_data3_->emit_notification) {
#line 7595 "individual.c"
		const gchar* _tmp2_;
#line 1809 "/run/build/folks/folks/individual.vala"
		_tmp2_ = group;
#line 1809 "/run/build/folks/folks/individual.vala"
		g_signal_emit_by_name ((FolksGroupDetails*) self, "group-changed", _tmp2_, FALSE);
#line 7601 "individual.c"
	}
}


static void
___lambda64__gfunc (gconstpointer data,
                    gpointer self)
{
#line 1803 "/run/build/folks/folks/individual.vala"
	__lambda64_ (self, (const gchar*) data);
#line 7612 "individual.c"
}


static void
_g_free0_ (gpointer var)
{
#line 1739 "/run/build/folks/folks/individual.vala"
	var = (g_free (var), NULL);
#line 7621 "individual.c"
}


static inline void
_g_list_free__g_free0_ (GList* self)
{
#line 1739 "/run/build/folks/folks/individual.vala"
	g_list_free_full (self, (GDestroyNotify) _g_free0_);
#line 7630 "individual.c"
}


static void
_folks_individual_update_groups (FolksIndividual* self,
                                 gboolean create_if_not_exist,
                                 gboolean emit_notification,
                                 gboolean force_update)
{
	Block3Data* _data3_;
	gboolean created = FALSE;
	gboolean _tmp0_ = FALSE;
	FolksSmallSet* _tmp1_;
	gboolean _tmp7_ = FALSE;
	gboolean _tmp8_;
	FolksSmallSet* new_groups = NULL;
	FolksSmallSet* _tmp9_;
	GList* removes = NULL;
	GList* _tmp66_;
#line 1739 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1739 "/run/build/folks/folks/individual.vala"
	_data3_ = g_slice_new0 (Block3Data);
#line 1739 "/run/build/folks/folks/individual.vala"
	_data3_->_ref_count_ = 1;
#line 1739 "/run/build/folks/folks/individual.vala"
	_data3_->self = g_object_ref (self);
#line 1739 "/run/build/folks/folks/individual.vala"
	_data3_->emit_notification = emit_notification;
#line 1745 "/run/build/folks/folks/individual.vala"
	created = FALSE;
#line 1746 "/run/build/folks/folks/individual.vala"
	_tmp1_ = self->priv->_groups;
#line 1746 "/run/build/folks/folks/individual.vala"
	if (_tmp1_ == NULL) {
#line 1746 "/run/build/folks/folks/individual.vala"
		_tmp0_ = create_if_not_exist == FALSE;
#line 7668 "individual.c"
	} else {
#line 1746 "/run/build/folks/folks/individual.vala"
		_tmp0_ = FALSE;
#line 7672 "individual.c"
	}
#line 1746 "/run/build/folks/folks/individual.vala"
	if (_tmp0_) {
#line 1748 "/run/build/folks/folks/individual.vala"
		if (_data3_->emit_notification) {
#line 1750 "/run/build/folks/folks/individual.vala"
			g_object_notify ((GObject*) self, "groups");
#line 7680 "individual.c"
		}
#line 1752 "/run/build/folks/folks/individual.vala"
		block3_data_unref (_data3_);
#line 1752 "/run/build/folks/folks/individual.vala"
		_data3_ = NULL;
#line 1752 "/run/build/folks/folks/individual.vala"
		return;
#line 7688 "individual.c"
	} else {
		FolksSmallSet* _tmp2_;
#line 1756 "/run/build/folks/folks/individual.vala"
		_tmp2_ = self->priv->_groups;
#line 1756 "/run/build/folks/folks/individual.vala"
		if (_tmp2_ == NULL) {
#line 7695 "individual.c"
			FolksSmallSet* _tmp3_;
			FolksSmallSet* _tmp4_;
			GeeSet* _tmp5_;
			GeeSet* _tmp6_;
#line 1758 "/run/build/folks/folks/individual.vala"
			_tmp3_ = folks_small_set_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, NULL, NULL, NULL, NULL, NULL, NULL);
#line 1758 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (self->priv->_groups);
#line 1758 "/run/build/folks/folks/individual.vala"
			self->priv->_groups = _tmp3_;
#line 1759 "/run/build/folks/folks/individual.vala"
			_tmp4_ = self->priv->_groups;
#line 1759 "/run/build/folks/folks/individual.vala"
			_tmp5_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp4_);
#line 1759 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _tmp5_;
#line 1759 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (self->priv->_groups_ro);
#line 1759 "/run/build/folks/folks/individual.vala"
			self->priv->_groups_ro = _tmp6_;
#line 1760 "/run/build/folks/folks/individual.vala"
			created = TRUE;
#line 7718 "individual.c"
		}
	}
#line 1764 "/run/build/folks/folks/individual.vala"
	_tmp8_ = created;
#line 1764 "/run/build/folks/folks/individual.vala"
	if (!_tmp8_) {
#line 1764 "/run/build/folks/folks/individual.vala"
		_tmp7_ = !force_update;
#line 7727 "individual.c"
	} else {
#line 1764 "/run/build/folks/folks/individual.vala"
		_tmp7_ = FALSE;
#line 7731 "individual.c"
	}
#line 1764 "/run/build/folks/folks/individual.vala"
	if (_tmp7_) {
#line 1765 "/run/build/folks/folks/individual.vala"
		block3_data_unref (_data3_);
#line 1765 "/run/build/folks/folks/individual.vala"
		_data3_ = NULL;
#line 1765 "/run/build/folks/folks/individual.vala"
		return;
#line 7741 "individual.c"
	}
#line 1767 "/run/build/folks/folks/individual.vala"
	_tmp9_ = folks_small_set_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, NULL, NULL, NULL, NULL, NULL, NULL);
#line 1767 "/run/build/folks/folks/individual.vala"
	new_groups = _tmp9_;
#line 7747 "individual.c"
	{
		FolksSmallSet* _p_list = NULL;
		FolksSmallSet* _tmp10_;
		FolksSmallSet* _tmp11_;
		gint _p_size = 0;
		FolksSmallSet* _tmp12_;
		gint _tmp13_;
		gint _tmp14_;
		gint _p_index = 0;
#line 1774 "/run/build/folks/folks/individual.vala"
		_tmp10_ = self->priv->_persona_set;
#line 1774 "/run/build/folks/folks/individual.vala"
		_tmp11_ = _g_object_ref0 (_tmp10_);
#line 1774 "/run/build/folks/folks/individual.vala"
		_p_list = _tmp11_;
#line 1774 "/run/build/folks/folks/individual.vala"
		_tmp12_ = _p_list;
#line 1774 "/run/build/folks/folks/individual.vala"
		_tmp13_ = gee_collection_get_size ((GeeCollection*) _tmp12_);
#line 1774 "/run/build/folks/folks/individual.vala"
		_tmp14_ = _tmp13_;
#line 1774 "/run/build/folks/folks/individual.vala"
		_p_size = _tmp14_;
#line 1774 "/run/build/folks/folks/individual.vala"
		_p_index = -1;
#line 1774 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 7775 "individual.c"
			gint _tmp15_;
			gint _tmp16_;
			gint _tmp17_;
			FolksPersona* p = NULL;
			FolksSmallSet* _tmp18_;
			gint _tmp19_;
			gconstpointer _tmp20_;
			FolksPersona* _tmp21_;
			FolksPersona* _tmp22_;
#line 1774 "/run/build/folks/folks/individual.vala"
			_tmp15_ = _p_index;
#line 1774 "/run/build/folks/folks/individual.vala"
			_p_index = _tmp15_ + 1;
#line 1774 "/run/build/folks/folks/individual.vala"
			_tmp16_ = _p_index;
#line 1774 "/run/build/folks/folks/individual.vala"
			_tmp17_ = _p_size;
#line 1774 "/run/build/folks/folks/individual.vala"
			if (!(_tmp16_ < _tmp17_)) {
#line 1774 "/run/build/folks/folks/individual.vala"
				break;
#line 7797 "individual.c"
			}
#line 1774 "/run/build/folks/folks/individual.vala"
			_tmp18_ = _p_list;
#line 1774 "/run/build/folks/folks/individual.vala"
			_tmp19_ = _p_index;
#line 1774 "/run/build/folks/folks/individual.vala"
			_tmp20_ = folks_small_set_get (_tmp18_, _tmp19_);
#line 1774 "/run/build/folks/folks/individual.vala"
			_tmp21_ = _g_object_ref0 ((FolksPersona*) _tmp20_);
#line 1774 "/run/build/folks/folks/individual.vala"
			p = _tmp21_;
#line 1776 "/run/build/folks/folks/individual.vala"
			_tmp22_ = p;
#line 1776 "/run/build/folks/folks/individual.vala"
			if (G_TYPE_CHECK_INSTANCE_TYPE (_tmp22_, FOLKS_TYPE_GROUP_DETAILS)) {
#line 7813 "individual.c"
				FolksGroupDetails* persona = NULL;
				FolksPersona* _tmp23_;
				FolksGroupDetails* _tmp24_;
#line 1778 "/run/build/folks/folks/individual.vala"
				_tmp23_ = p;
#line 1778 "/run/build/folks/folks/individual.vala"
				_tmp24_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp23_, FOLKS_TYPE_GROUP_DETAILS, FolksGroupDetails));
#line 1778 "/run/build/folks/folks/individual.vala"
				persona = _tmp24_;
#line 7823 "individual.c"
				{
					GeeIterator* _group_it = NULL;
					FolksGroupDetails* _tmp25_;
					GeeSet* _tmp26_;
					GeeSet* _tmp27_;
					GeeIterator* _tmp28_;
#line 1780 "/run/build/folks/folks/individual.vala"
					_tmp25_ = persona;
#line 1780 "/run/build/folks/folks/individual.vala"
					_tmp26_ = folks_group_details_get_groups (_tmp25_);
#line 1780 "/run/build/folks/folks/individual.vala"
					_tmp27_ = _tmp26_;
#line 1780 "/run/build/folks/folks/individual.vala"
					_tmp28_ = gee_iterable_iterator ((GeeIterable*) _tmp27_);
#line 1780 "/run/build/folks/folks/individual.vala"
					_group_it = _tmp28_;
#line 1780 "/run/build/folks/folks/individual.vala"
					while (TRUE) {
#line 7842 "individual.c"
						GeeIterator* _tmp29_;
						gchar* group = NULL;
						GeeIterator* _tmp30_;
						gpointer _tmp31_;
						FolksSmallSet* _tmp32_;
						const gchar* _tmp33_;
#line 1780 "/run/build/folks/folks/individual.vala"
						_tmp29_ = _group_it;
#line 1780 "/run/build/folks/folks/individual.vala"
						if (!gee_iterator_next (_tmp29_)) {
#line 1780 "/run/build/folks/folks/individual.vala"
							break;
#line 7855 "individual.c"
						}
#line 1780 "/run/build/folks/folks/individual.vala"
						_tmp30_ = _group_it;
#line 1780 "/run/build/folks/folks/individual.vala"
						_tmp31_ = gee_iterator_get (_tmp30_);
#line 1780 "/run/build/folks/folks/individual.vala"
						group = (gchar*) _tmp31_;
#line 1782 "/run/build/folks/folks/individual.vala"
						_tmp32_ = new_groups;
#line 1782 "/run/build/folks/folks/individual.vala"
						_tmp33_ = group;
#line 1782 "/run/build/folks/folks/individual.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp32_, _tmp33_);
#line 1780 "/run/build/folks/folks/individual.vala"
						_g_free0 (group);
#line 7871 "individual.c"
					}
#line 1780 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_group_it);
#line 7875 "individual.c"
				}
#line 1776 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (persona);
#line 7879 "individual.c"
			}
#line 1774 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 7883 "individual.c"
		}
#line 1774 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_list);
#line 7887 "individual.c"
	}
	{
		FolksSmallSet* _group_list = NULL;
		FolksSmallSet* _tmp34_;
		FolksSmallSet* _tmp35_;
		gint _group_size = 0;
		FolksSmallSet* _tmp36_;
		gint _tmp37_;
		gint _tmp38_;
		gint _group_index = 0;
#line 1787 "/run/build/folks/folks/individual.vala"
		_tmp34_ = new_groups;
#line 1787 "/run/build/folks/folks/individual.vala"
		_tmp35_ = _g_object_ref0 (_tmp34_);
#line 1787 "/run/build/folks/folks/individual.vala"
		_group_list = _tmp35_;
#line 1787 "/run/build/folks/folks/individual.vala"
		_tmp36_ = _group_list;
#line 1787 "/run/build/folks/folks/individual.vala"
		_tmp37_ = gee_collection_get_size ((GeeCollection*) _tmp36_);
#line 1787 "/run/build/folks/folks/individual.vala"
		_tmp38_ = _tmp37_;
#line 1787 "/run/build/folks/folks/individual.vala"
		_group_size = _tmp38_;
#line 1787 "/run/build/folks/folks/individual.vala"
		_group_index = -1;
#line 1787 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 7916 "individual.c"
			gint _tmp39_;
			gint _tmp40_;
			gint _tmp41_;
			gchar* group = NULL;
			FolksSmallSet* _tmp42_;
			gint _tmp43_;
			gconstpointer _tmp44_;
			gchar* _tmp45_;
			gboolean _tmp46_ = FALSE;
			FolksSmallSet* _tmp47_;
			const gchar* _tmp48_;
#line 1787 "/run/build/folks/folks/individual.vala"
			_tmp39_ = _group_index;
#line 1787 "/run/build/folks/folks/individual.vala"
			_group_index = _tmp39_ + 1;
#line 1787 "/run/build/folks/folks/individual.vala"
			_tmp40_ = _group_index;
#line 1787 "/run/build/folks/folks/individual.vala"
			_tmp41_ = _group_size;
#line 1787 "/run/build/folks/folks/individual.vala"
			if (!(_tmp40_ < _tmp41_)) {
#line 1787 "/run/build/folks/folks/individual.vala"
				break;
#line 7940 "individual.c"
			}
#line 1787 "/run/build/folks/folks/individual.vala"
			_tmp42_ = _group_list;
#line 1787 "/run/build/folks/folks/individual.vala"
			_tmp43_ = _group_index;
#line 1787 "/run/build/folks/folks/individual.vala"
			_tmp44_ = folks_small_set_get (_tmp42_, _tmp43_);
#line 1787 "/run/build/folks/folks/individual.vala"
			_tmp45_ = g_strdup ((const gchar*) _tmp44_);
#line 1787 "/run/build/folks/folks/individual.vala"
			group = _tmp45_;
#line 1789 "/run/build/folks/folks/individual.vala"
			_tmp47_ = self->priv->_groups;
#line 1789 "/run/build/folks/folks/individual.vala"
			_tmp48_ = group;
#line 1789 "/run/build/folks/folks/individual.vala"
			if (gee_abstract_collection_add ((GeeAbstractCollection*) _tmp47_, _tmp48_)) {
#line 1789 "/run/build/folks/folks/individual.vala"
				_tmp46_ = _data3_->emit_notification;
#line 7960 "individual.c"
			} else {
#line 1789 "/run/build/folks/folks/individual.vala"
				_tmp46_ = FALSE;
#line 7964 "individual.c"
			}
#line 1789 "/run/build/folks/folks/individual.vala"
			if (_tmp46_) {
#line 7968 "individual.c"
				const gchar* _tmp49_;
#line 1791 "/run/build/folks/folks/individual.vala"
				_tmp49_ = group;
#line 1791 "/run/build/folks/folks/individual.vala"
				g_signal_emit_by_name ((FolksGroupDetails*) self, "group-changed", _tmp49_, TRUE);
#line 7974 "individual.c"
			}
#line 1787 "/run/build/folks/folks/individual.vala"
			_g_free0 (group);
#line 7978 "individual.c"
		}
#line 1787 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_group_list);
#line 7982 "individual.c"
	}
#line 1796 "/run/build/folks/folks/individual.vala"
	removes = NULL;
#line 7986 "individual.c"
	{
		FolksSmallSet* _group_list = NULL;
		FolksSmallSet* _tmp50_;
		FolksSmallSet* _tmp51_;
		gint _group_size = 0;
		FolksSmallSet* _tmp52_;
		gint _tmp53_;
		gint _tmp54_;
		gint _group_index = 0;
#line 1797 "/run/build/folks/folks/individual.vala"
		_tmp50_ = self->priv->_groups;
#line 1797 "/run/build/folks/folks/individual.vala"
		_tmp51_ = _g_object_ref0 (_tmp50_);
#line 1797 "/run/build/folks/folks/individual.vala"
		_group_list = _tmp51_;
#line 1797 "/run/build/folks/folks/individual.vala"
		_tmp52_ = _group_list;
#line 1797 "/run/build/folks/folks/individual.vala"
		_tmp53_ = gee_collection_get_size ((GeeCollection*) _tmp52_);
#line 1797 "/run/build/folks/folks/individual.vala"
		_tmp54_ = _tmp53_;
#line 1797 "/run/build/folks/folks/individual.vala"
		_group_size = _tmp54_;
#line 1797 "/run/build/folks/folks/individual.vala"
		_group_index = -1;
#line 1797 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 8014 "individual.c"
			gint _tmp55_;
			gint _tmp56_;
			gint _tmp57_;
			gchar* group = NULL;
			FolksSmallSet* _tmp58_;
			gint _tmp59_;
			gconstpointer _tmp60_;
			gchar* _tmp61_;
			FolksSmallSet* _tmp62_;
			const gchar* _tmp63_;
#line 1797 "/run/build/folks/folks/individual.vala"
			_tmp55_ = _group_index;
#line 1797 "/run/build/folks/folks/individual.vala"
			_group_index = _tmp55_ + 1;
#line 1797 "/run/build/folks/folks/individual.vala"
			_tmp56_ = _group_index;
#line 1797 "/run/build/folks/folks/individual.vala"
			_tmp57_ = _group_size;
#line 1797 "/run/build/folks/folks/individual.vala"
			if (!(_tmp56_ < _tmp57_)) {
#line 1797 "/run/build/folks/folks/individual.vala"
				break;
#line 8037 "individual.c"
			}
#line 1797 "/run/build/folks/folks/individual.vala"
			_tmp58_ = _group_list;
#line 1797 "/run/build/folks/folks/individual.vala"
			_tmp59_ = _group_index;
#line 1797 "/run/build/folks/folks/individual.vala"
			_tmp60_ = folks_small_set_get (_tmp58_, _tmp59_);
#line 1797 "/run/build/folks/folks/individual.vala"
			_tmp61_ = g_strdup ((const gchar*) _tmp60_);
#line 1797 "/run/build/folks/folks/individual.vala"
			group = _tmp61_;
#line 1799 "/run/build/folks/folks/individual.vala"
			_tmp62_ = new_groups;
#line 1799 "/run/build/folks/folks/individual.vala"
			_tmp63_ = group;
#line 1799 "/run/build/folks/folks/individual.vala"
			if (!gee_abstract_collection_contains ((GeeAbstractCollection*) _tmp62_, _tmp63_)) {
#line 8055 "individual.c"
				const gchar* _tmp64_;
				gchar* _tmp65_;
#line 1800 "/run/build/folks/folks/individual.vala"
				_tmp64_ = group;
#line 1800 "/run/build/folks/folks/individual.vala"
				_tmp65_ = g_strdup (_tmp64_);
#line 1800 "/run/build/folks/folks/individual.vala"
				removes = g_list_prepend (removes, _tmp65_);
#line 8064 "individual.c"
			}
#line 1797 "/run/build/folks/folks/individual.vala"
			_g_free0 (group);
#line 8068 "individual.c"
		}
#line 1797 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_group_list);
#line 8072 "individual.c"
	}
#line 1803 "/run/build/folks/folks/individual.vala"
	_tmp66_ = removes;
#line 1803 "/run/build/folks/folks/individual.vala"
	g_list_foreach (_tmp66_, ___lambda64__gfunc, _data3_);
#line 1739 "/run/build/folks/folks/individual.vala"
	(removes == NULL) ? NULL : (removes = (_g_list_free__g_free0_ (removes), NULL));
#line 1739 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_groups);
#line 1739 "/run/build/folks/folks/individual.vala"
	block3_data_unref (_data3_);
#line 1739 "/run/build/folks/folks/individual.vala"
	_data3_ = NULL;
#line 8086 "individual.c"
}


static gboolean
__lambda13_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	FolksPresenceType _tmp0_;
	FolksPresenceType _tmp1_;
#line 1816 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 1818 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_presence_details_get_presence_type (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetails));
#line 1818 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 1818 "/run/build/folks/folks/individual.vala"
	result = _tmp1_ != FOLKS_PRESENCE_TYPE_UNSET;
#line 1818 "/run/build/folks/folks/individual.vala"
	return result;
#line 8107 "individual.c"
}


static gboolean
___lambda13__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda13_ ((FolksIndividual*) self, persona);
#line 1816 "/run/build/folks/folks/individual.vala"
	return result;
#line 8119 "individual.c"
}


static gint
__lambda14_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
	FolksPresenceType a_presence = 0;
	FolksPresenceType _tmp0_;
	FolksPresenceType _tmp1_;
	FolksPresenceType b_presence = 0;
	FolksPresenceType _tmp2_;
	FolksPresenceType _tmp3_;
#line 1819 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 1819 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 1821 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_presence_details_get_presence_type (G_TYPE_CHECK_INSTANCE_CAST (a, FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetails));
#line 1821 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 1821 "/run/build/folks/folks/individual.vala"
	a_presence = _tmp1_;
#line 1822 "/run/build/folks/folks/individual.vala"
	_tmp2_ = folks_presence_details_get_presence_type (G_TYPE_CHECK_INSTANCE_CAST (b, FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetails));
#line 1822 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 1822 "/run/build/folks/folks/individual.vala"
	b_presence = _tmp3_;
#line 1824 "/run/build/folks/folks/individual.vala"
	result = folks_presence_details_typecmp (a_presence, b_presence);
#line 1824 "/run/build/folks/folks/individual.vala"
	return result;
#line 8154 "individual.c"
}


static gint
___lambda14__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda14_ ((FolksPersona*) a, (FolksPersona*) b);
#line 1816 "/run/build/folks/folks/individual.vala"
	return result;
#line 8166 "individual.c"
}


static gchar**
_vala_array_dup1 (gchar** self,
                  int length)
{
	gchar** result;
	int i;
#line 1837 "/run/build/folks/folks/individual.vala"
	result = g_new0 (gchar*, length + 1);
#line 1837 "/run/build/folks/folks/individual.vala"
	for (i = 0; i < length; i++) {
#line 8180 "individual.c"
		gchar* _tmp0_;
#line 1837 "/run/build/folks/folks/individual.vala"
		_tmp0_ = g_strdup (self[i]);
#line 1837 "/run/build/folks/folks/individual.vala"
		result[i] = _tmp0_;
#line 8186 "individual.c"
	}
#line 1837 "/run/build/folks/folks/individual.vala"
	return result;
#line 8190 "individual.c"
}


static void
__lambda15_ (FolksIndividual* self,
             FolksPersona* p)
{
	gchar* presence_message = NULL;
	gchar* _tmp0_;
	gchar* presence_status = NULL;
	gchar* _tmp1_;
	gchar** client_types = NULL;
	gchar** _tmp2_;
	gint client_types_length1;
	gint _client_types_size_;
	FolksPresenceType presence_type = 0;
	gboolean _tmp14_ = FALSE;
	gboolean _tmp15_ = FALSE;
	gboolean _tmp16_ = FALSE;
	FolksPresenceType _tmp17_;
	FolksPresenceType _tmp18_;
	FolksPresenceType _tmp19_;
#line 1827 "/run/build/folks/folks/individual.vala"
	_tmp0_ = g_strdup ("");
#line 1827 "/run/build/folks/folks/individual.vala"
	presence_message = _tmp0_;
#line 1828 "/run/build/folks/folks/individual.vala"
	_tmp1_ = g_strdup ("");
#line 1828 "/run/build/folks/folks/individual.vala"
	presence_status = _tmp1_;
#line 1829 "/run/build/folks/folks/individual.vala"
	_tmp2_ = g_new0 (gchar*, 0 + 1);
#line 1829 "/run/build/folks/folks/individual.vala"
	client_types = _tmp2_;
#line 1829 "/run/build/folks/folks/individual.vala"
	client_types_length1 = 0;
#line 1829 "/run/build/folks/folks/individual.vala"
	_client_types_size_ = client_types_length1;
#line 1830 "/run/build/folks/folks/individual.vala"
	presence_type = FOLKS_PRESENCE_TYPE_UNSET;
#line 1832 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 8233 "individual.c"
		FolksPresenceType _tmp3_;
		FolksPresenceType _tmp4_;
		const gchar* _tmp5_;
		const gchar* _tmp6_;
		gchar* _tmp7_;
		const gchar* _tmp8_;
		const gchar* _tmp9_;
		gchar* _tmp10_;
		gchar** _tmp11_;
		gint _tmp11__length1;
		gchar** _tmp12_;
		gint _tmp12__length1;
		gchar** _tmp13_;
		gint _tmp13__length1;
#line 1834 "/run/build/folks/folks/individual.vala"
		_tmp3_ = folks_presence_details_get_presence_type (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetails));
#line 1834 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _tmp3_;
#line 1834 "/run/build/folks/folks/individual.vala"
		presence_type = _tmp4_;
#line 1835 "/run/build/folks/folks/individual.vala"
		_tmp5_ = folks_presence_details_get_presence_message (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetails));
#line 1835 "/run/build/folks/folks/individual.vala"
		_tmp6_ = _tmp5_;
#line 1835 "/run/build/folks/folks/individual.vala"
		_tmp7_ = g_strdup (_tmp6_);
#line 1835 "/run/build/folks/folks/individual.vala"
		_g_free0 (presence_message);
#line 1835 "/run/build/folks/folks/individual.vala"
		presence_message = _tmp7_;
#line 1836 "/run/build/folks/folks/individual.vala"
		_tmp8_ = folks_presence_details_get_presence_status (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetails));
#line 1836 "/run/build/folks/folks/individual.vala"
		_tmp9_ = _tmp8_;
#line 1836 "/run/build/folks/folks/individual.vala"
		_tmp10_ = g_strdup (_tmp9_);
#line 1836 "/run/build/folks/folks/individual.vala"
		_g_free0 (presence_status);
#line 1836 "/run/build/folks/folks/individual.vala"
		presence_status = _tmp10_;
#line 1837 "/run/build/folks/folks/individual.vala"
		_tmp11_ = folks_presence_details_get_client_types (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_PRESENCE_DETAILS, FolksPresenceDetails), &_tmp11__length1);
#line 1837 "/run/build/folks/folks/individual.vala"
		_tmp12_ = _tmp11_;
#line 1837 "/run/build/folks/folks/individual.vala"
		_tmp12__length1 = _tmp11__length1;
#line 1837 "/run/build/folks/folks/individual.vala"
		_tmp13_ = (_tmp12_ != NULL) ? _vala_array_dup1 (_tmp12_, _tmp12__length1) : ((gpointer) _tmp12_);
#line 1837 "/run/build/folks/folks/individual.vala"
		_tmp13__length1 = _tmp12__length1;
#line 1837 "/run/build/folks/folks/individual.vala"
		client_types = (_vala_array_free (client_types, client_types_length1, (GDestroyNotify) g_free), NULL);
#line 1837 "/run/build/folks/folks/individual.vala"
		client_types = _tmp13_;
#line 1837 "/run/build/folks/folks/individual.vala"
		client_types_length1 = _tmp13__length1;
#line 1837 "/run/build/folks/folks/individual.vala"
		_client_types_size_ = client_types_length1;
#line 8292 "individual.c"
	}
#line 1841 "/run/build/folks/folks/individual.vala"
	_tmp17_ = folks_presence_details_get_presence_type ((FolksPresenceDetails*) self);
#line 1841 "/run/build/folks/folks/individual.vala"
	_tmp18_ = _tmp17_;
#line 1841 "/run/build/folks/folks/individual.vala"
	_tmp19_ = presence_type;
#line 1841 "/run/build/folks/folks/individual.vala"
	if (_tmp18_ != _tmp19_) {
#line 1841 "/run/build/folks/folks/individual.vala"
		_tmp16_ = TRUE;
#line 8304 "individual.c"
	} else {
		const gchar* _tmp20_;
		const gchar* _tmp21_;
		const gchar* _tmp22_;
#line 1842 "/run/build/folks/folks/individual.vala"
		_tmp20_ = folks_presence_details_get_presence_message ((FolksPresenceDetails*) self);
#line 1842 "/run/build/folks/folks/individual.vala"
		_tmp21_ = _tmp20_;
#line 1842 "/run/build/folks/folks/individual.vala"
		_tmp22_ = presence_message;
#line 1842 "/run/build/folks/folks/individual.vala"
		_tmp16_ = g_strcmp0 (_tmp21_, _tmp22_) != 0;
#line 8317 "individual.c"
	}
#line 1841 "/run/build/folks/folks/individual.vala"
	if (_tmp16_) {
#line 1841 "/run/build/folks/folks/individual.vala"
		_tmp15_ = TRUE;
#line 8323 "individual.c"
	} else {
		const gchar* _tmp23_;
		const gchar* _tmp24_;
		const gchar* _tmp25_;
#line 1843 "/run/build/folks/folks/individual.vala"
		_tmp23_ = folks_presence_details_get_presence_status ((FolksPresenceDetails*) self);
#line 1843 "/run/build/folks/folks/individual.vala"
		_tmp24_ = _tmp23_;
#line 1843 "/run/build/folks/folks/individual.vala"
		_tmp25_ = presence_status;
#line 1843 "/run/build/folks/folks/individual.vala"
		_tmp15_ = g_strcmp0 (_tmp24_, _tmp25_) != 0;
#line 8336 "individual.c"
	}
#line 1841 "/run/build/folks/folks/individual.vala"
	if (_tmp15_) {
#line 1841 "/run/build/folks/folks/individual.vala"
		_tmp14_ = TRUE;
#line 8342 "individual.c"
	} else {
		gchar** _tmp26_;
		gint _tmp26__length1;
		gchar** _tmp27_;
		gint _tmp27__length1;
		gchar** _tmp28_;
		gint _tmp28__length1;
#line 1844 "/run/build/folks/folks/individual.vala"
		_tmp26_ = folks_presence_details_get_client_types ((FolksPresenceDetails*) self, &_tmp26__length1);
#line 1844 "/run/build/folks/folks/individual.vala"
		_tmp27_ = _tmp26_;
#line 1844 "/run/build/folks/folks/individual.vala"
		_tmp27__length1 = _tmp26__length1;
#line 1844 "/run/build/folks/folks/individual.vala"
		_tmp28_ = client_types;
#line 1844 "/run/build/folks/folks/individual.vala"
		_tmp28__length1 = client_types_length1;
#line 1844 "/run/build/folks/folks/individual.vala"
		_tmp14_ = _tmp27_ != _tmp28_;
#line 8362 "individual.c"
	}
#line 1841 "/run/build/folks/folks/individual.vala"
	if (_tmp14_) {
#line 8366 "individual.c"
		const gchar* _tmp29_;
		FolksPresenceType _tmp30_;
		const gchar* _tmp31_;
		gchar** _tmp32_;
		gint _tmp32__length1;
#line 1846 "/run/build/folks/folks/individual.vala"
		g_object_freeze_notify ((GObject*) self);
#line 1847 "/run/build/folks/folks/individual.vala"
		_tmp29_ = presence_message;
#line 1847 "/run/build/folks/folks/individual.vala"
		folks_presence_details_set_presence_message ((FolksPresenceDetails*) self, _tmp29_);
#line 1848 "/run/build/folks/folks/individual.vala"
		_tmp30_ = presence_type;
#line 1848 "/run/build/folks/folks/individual.vala"
		folks_presence_details_set_presence_type ((FolksPresenceDetails*) self, _tmp30_);
#line 1849 "/run/build/folks/folks/individual.vala"
		_tmp31_ = presence_status;
#line 1849 "/run/build/folks/folks/individual.vala"
		folks_presence_details_set_presence_status ((FolksPresenceDetails*) self, _tmp31_);
#line 1850 "/run/build/folks/folks/individual.vala"
		_tmp32_ = client_types;
#line 1850 "/run/build/folks/folks/individual.vala"
		_tmp32__length1 = client_types_length1;
#line 1850 "/run/build/folks/folks/individual.vala"
		folks_presence_details_set_client_types ((FolksPresenceDetails*) self, _tmp32_, _tmp32__length1);
#line 1851 "/run/build/folks/folks/individual.vala"
		g_object_thaw_notify ((GObject*) self);
#line 8394 "individual.c"
	}
#line 1825 "/run/build/folks/folks/individual.vala"
	client_types = (_vala_array_free (client_types, client_types_length1, (GDestroyNotify) g_free), NULL);
#line 1825 "/run/build/folks/folks/individual.vala"
	_g_free0 (presence_status);
#line 1825 "/run/build/folks/folks/individual.vala"
	_g_free0 (presence_message);
#line 8402 "individual.c"
}


static void
___lambda15__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 1816 "/run/build/folks/folks/individual.vala"
	__lambda15_ ((FolksIndividual*) self, chosen_persona);
#line 8412 "individual.c"
}


static void
_folks_individual_update_presence (FolksIndividual* self)
{
#line 1814 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1816 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_PRESENCE_DETAILS, ___lambda13__folks_individual_property_filter, self, ___lambda14__gcompare_func, "presence", ___lambda15__folks_individual_single_valued_property_setter, self);
#line 8423 "individual.c"
}


static gboolean
__lambda22_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	gboolean _tmp0_;
	gboolean _tmp1_;
#line 1858 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 1860 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_favourite_details_get_is_favourite (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_FAVOURITE_DETAILS, FolksFavouriteDetails));
#line 1860 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 1860 "/run/build/folks/folks/individual.vala"
	result = _tmp1_;
#line 1860 "/run/build/folks/folks/individual.vala"
	return result;
#line 8444 "individual.c"
}


static gboolean
___lambda22__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda22_ ((FolksIndividual*) self, persona);
#line 1858 "/run/build/folks/folks/individual.vala"
	return result;
#line 8456 "individual.c"
}


static gint
__lambda23_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
	gboolean a_is_favourite = FALSE;
	gboolean _tmp0_;
	gboolean _tmp1_;
	gboolean b_is_favourite = FALSE;
	gboolean _tmp2_;
	gboolean _tmp3_;
	gint _tmp4_ = 0;
	gboolean _tmp5_;
	gint _tmp6_ = 0;
	gboolean _tmp7_;
#line 1861 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 1861 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 1863 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_favourite_details_get_is_favourite (G_TYPE_CHECK_INSTANCE_CAST (a, FOLKS_TYPE_FAVOURITE_DETAILS, FolksFavouriteDetails));
#line 1863 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 1863 "/run/build/folks/folks/individual.vala"
	a_is_favourite = _tmp1_;
#line 1864 "/run/build/folks/folks/individual.vala"
	_tmp2_ = folks_favourite_details_get_is_favourite (G_TYPE_CHECK_INSTANCE_CAST (b, FOLKS_TYPE_FAVOURITE_DETAILS, FolksFavouriteDetails));
#line 1864 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 1864 "/run/build/folks/folks/individual.vala"
	b_is_favourite = _tmp3_;
#line 1866 "/run/build/folks/folks/individual.vala"
	_tmp5_ = a_is_favourite;
#line 1866 "/run/build/folks/folks/individual.vala"
	if (_tmp5_ == TRUE) {
#line 1866 "/run/build/folks/folks/individual.vala"
		_tmp4_ = 1;
#line 8497 "individual.c"
	} else {
#line 1866 "/run/build/folks/folks/individual.vala"
		_tmp4_ = 0;
#line 8501 "individual.c"
	}
#line 1867 "/run/build/folks/folks/individual.vala"
	_tmp7_ = b_is_favourite;
#line 1867 "/run/build/folks/folks/individual.vala"
	if (_tmp7_ == TRUE) {
#line 1867 "/run/build/folks/folks/individual.vala"
		_tmp6_ = 1;
#line 8509 "individual.c"
	} else {
#line 1867 "/run/build/folks/folks/individual.vala"
		_tmp6_ = 0;
#line 8513 "individual.c"
	}
#line 1866 "/run/build/folks/folks/individual.vala"
	result = _tmp4_ - _tmp6_;
#line 1866 "/run/build/folks/folks/individual.vala"
	return result;
#line 8519 "individual.c"
}


static gint
___lambda23__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda23_ ((FolksPersona*) a, (FolksPersona*) b);
#line 1858 "/run/build/folks/folks/individual.vala"
	return result;
#line 8531 "individual.c"
}


static void
__lambda24_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean favourite = FALSE;
	gboolean _tmp2_;
	gboolean _tmp3_;
#line 1870 "/run/build/folks/folks/individual.vala"
	favourite = FALSE;
#line 1872 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 8546 "individual.c"
		gboolean _tmp0_;
		gboolean _tmp1_;
#line 1874 "/run/build/folks/folks/individual.vala"
		_tmp0_ = folks_favourite_details_get_is_favourite (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_FAVOURITE_DETAILS, FolksFavouriteDetails));
#line 1874 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp0_;
#line 1874 "/run/build/folks/folks/individual.vala"
		favourite = _tmp1_;
#line 8555 "individual.c"
	}
#line 1880 "/run/build/folks/folks/individual.vala"
	_tmp2_ = self->priv->_is_favourite;
#line 1880 "/run/build/folks/folks/individual.vala"
	_tmp3_ = favourite;
#line 1880 "/run/build/folks/folks/individual.vala"
	if (_tmp2_ != _tmp3_) {
#line 8563 "individual.c"
		gboolean _tmp4_;
#line 1882 "/run/build/folks/folks/individual.vala"
		_tmp4_ = favourite;
#line 1882 "/run/build/folks/folks/individual.vala"
		self->priv->_is_favourite = _tmp4_;
#line 1883 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "is-favourite");
#line 8571 "individual.c"
	}
}


static void
___lambda24__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 1858 "/run/build/folks/folks/individual.vala"
	__lambda24_ ((FolksIndividual*) self, chosen_persona);
#line 8582 "individual.c"
}


static void
_folks_individual_update_is_favourite (FolksIndividual* self)
{
#line 1856 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1858 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_FAVOURITE_DETAILS, ___lambda22__folks_individual_property_filter, self, ___lambda23__gcompare_func, "is-favourite", ___lambda24__folks_individual_single_valued_property_setter, self);
#line 8593 "individual.c"
}


static gchar*
_folks_individual_look_up_alias_for_display_name (FolksIndividual* self,
                                                  FolksPersona* p)
{
	gchar* result = NULL;
	FolksAliasDetails* a = NULL;
	FolksAliasDetails* _tmp0_;
	gboolean _tmp1_ = FALSE;
	FolksAliasDetails* _tmp2_;
	gchar* _tmp10_;
#line 1888 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1890 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (p, FOLKS_TYPE_ALIAS_DETAILS) ? ((FolksAliasDetails*) p) : NULL);
#line 1890 "/run/build/folks/folks/individual.vala"
	a = _tmp0_;
#line 1891 "/run/build/folks/folks/individual.vala"
	_tmp2_ = a;
#line 1891 "/run/build/folks/folks/individual.vala"
	if (_tmp2_ != NULL) {
#line 8617 "individual.c"
		FolksAliasDetails* _tmp3_;
		const gchar* _tmp4_;
		const gchar* _tmp5_;
#line 1891 "/run/build/folks/folks/individual.vala"
		_tmp3_ = a;
#line 1891 "/run/build/folks/folks/individual.vala"
		_tmp4_ = folks_alias_details_get_alias (_tmp3_);
#line 1891 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 1891 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp5_ != NULL;
#line 8629 "individual.c"
	} else {
#line 1891 "/run/build/folks/folks/individual.vala"
		_tmp1_ = FALSE;
#line 8633 "individual.c"
	}
#line 1891 "/run/build/folks/folks/individual.vala"
	if (_tmp1_) {
#line 8637 "individual.c"
		FolksAliasDetails* _tmp6_;
		const gchar* _tmp7_;
		const gchar* _tmp8_;
		gchar* _tmp9_;
#line 1893 "/run/build/folks/folks/individual.vala"
		_tmp6_ = a;
#line 1893 "/run/build/folks/folks/individual.vala"
		_tmp7_ = folks_alias_details_get_alias (_tmp6_);
#line 1893 "/run/build/folks/folks/individual.vala"
		_tmp8_ = _tmp7_;
#line 1893 "/run/build/folks/folks/individual.vala"
		_tmp9_ = g_strdup (_tmp8_);
#line 1893 "/run/build/folks/folks/individual.vala"
		result = _tmp9_;
#line 1893 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (a);
#line 1893 "/run/build/folks/folks/individual.vala"
		return result;
#line 8656 "individual.c"
	}
#line 1896 "/run/build/folks/folks/individual.vala"
	_tmp10_ = g_strdup ("");
#line 1896 "/run/build/folks/folks/individual.vala"
	result = _tmp10_;
#line 1896 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (a);
#line 1896 "/run/build/folks/folks/individual.vala"
	return result;
#line 8666 "individual.c"
}


static gchar*
_folks_individual_look_up_name_details_for_display_name (FolksIndividual* self,
                                                         FolksPersona* p)
{
	gchar* result = NULL;
	FolksNameDetails* n = NULL;
	FolksNameDetails* _tmp0_;
	FolksNameDetails* _tmp1_;
	gchar* _tmp23_;
#line 1899 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1901 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (p, FOLKS_TYPE_NAME_DETAILS) ? ((FolksNameDetails*) p) : NULL);
#line 1901 "/run/build/folks/folks/individual.vala"
	n = _tmp0_;
#line 1902 "/run/build/folks/folks/individual.vala"
	_tmp1_ = n;
#line 1902 "/run/build/folks/folks/individual.vala"
	if (_tmp1_ != NULL) {
#line 8689 "individual.c"
		FolksNameDetails* _tmp2_;
		const gchar* _tmp3_;
		const gchar* _tmp4_;
#line 1904 "/run/build/folks/folks/individual.vala"
		_tmp2_ = n;
#line 1904 "/run/build/folks/folks/individual.vala"
		_tmp3_ = folks_name_details_get_full_name (_tmp2_);
#line 1904 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _tmp3_;
#line 1904 "/run/build/folks/folks/individual.vala"
		if (g_strcmp0 (_tmp4_, "") != 0) {
#line 8701 "individual.c"
			FolksNameDetails* _tmp5_;
			const gchar* _tmp6_;
			const gchar* _tmp7_;
			gchar* _tmp8_;
#line 1906 "/run/build/folks/folks/individual.vala"
			_tmp5_ = n;
#line 1906 "/run/build/folks/folks/individual.vala"
			_tmp6_ = folks_name_details_get_full_name (_tmp5_);
#line 1906 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _tmp6_;
#line 1906 "/run/build/folks/folks/individual.vala"
			_tmp8_ = g_strdup (_tmp7_);
#line 1906 "/run/build/folks/folks/individual.vala"
			result = _tmp8_;
#line 1906 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (n);
#line 1906 "/run/build/folks/folks/individual.vala"
			return result;
#line 8720 "individual.c"
		} else {
			FolksNameDetails* _tmp9_;
			FolksStructuredName* _tmp10_;
			FolksStructuredName* _tmp11_;
#line 1908 "/run/build/folks/folks/individual.vala"
			_tmp9_ = n;
#line 1908 "/run/build/folks/folks/individual.vala"
			_tmp10_ = folks_name_details_get_structured_name (_tmp9_);
#line 1908 "/run/build/folks/folks/individual.vala"
			_tmp11_ = _tmp10_;
#line 1908 "/run/build/folks/folks/individual.vala"
			if (_tmp11_ != NULL) {
#line 8733 "individual.c"
				FolksNameDetails* _tmp12_;
				FolksStructuredName* _tmp13_;
				FolksStructuredName* _tmp14_;
				gchar* _tmp15_;
#line 1910 "/run/build/folks/folks/individual.vala"
				_tmp12_ = n;
#line 1910 "/run/build/folks/folks/individual.vala"
				_tmp13_ = folks_name_details_get_structured_name (_tmp12_);
#line 1910 "/run/build/folks/folks/individual.vala"
				_tmp14_ = _tmp13_;
#line 1910 "/run/build/folks/folks/individual.vala"
				_tmp15_ = folks_structured_name_to_string (_tmp14_);
#line 1910 "/run/build/folks/folks/individual.vala"
				result = _tmp15_;
#line 1910 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (n);
#line 1910 "/run/build/folks/folks/individual.vala"
				return result;
#line 8752 "individual.c"
			} else {
				FolksNameDetails* _tmp16_;
				const gchar* _tmp17_;
				const gchar* _tmp18_;
#line 1912 "/run/build/folks/folks/individual.vala"
				_tmp16_ = n;
#line 1912 "/run/build/folks/folks/individual.vala"
				_tmp17_ = folks_name_details_get_nickname (_tmp16_);
#line 1912 "/run/build/folks/folks/individual.vala"
				_tmp18_ = _tmp17_;
#line 1912 "/run/build/folks/folks/individual.vala"
				if (g_strcmp0 (_tmp18_, "") != 0) {
#line 8765 "individual.c"
					FolksNameDetails* _tmp19_;
					const gchar* _tmp20_;
					const gchar* _tmp21_;
					gchar* _tmp22_;
#line 1914 "/run/build/folks/folks/individual.vala"
					_tmp19_ = n;
#line 1914 "/run/build/folks/folks/individual.vala"
					_tmp20_ = folks_name_details_get_nickname (_tmp19_);
#line 1914 "/run/build/folks/folks/individual.vala"
					_tmp21_ = _tmp20_;
#line 1914 "/run/build/folks/folks/individual.vala"
					_tmp22_ = g_strdup (_tmp21_);
#line 1914 "/run/build/folks/folks/individual.vala"
					result = _tmp22_;
#line 1914 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (n);
#line 1914 "/run/build/folks/folks/individual.vala"
					return result;
#line 8784 "individual.c"
				}
			}
		}
	}
#line 1918 "/run/build/folks/folks/individual.vala"
	_tmp23_ = g_strdup ("");
#line 1918 "/run/build/folks/folks/individual.vala"
	result = _tmp23_;
#line 1918 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (n);
#line 1918 "/run/build/folks/folks/individual.vala"
	return result;
#line 8797 "individual.c"
}


static gchar*
_folks_individual_look_up_email_address_for_display_name (FolksIndividual* self,
                                                          FolksPersona* p)
{
	gchar* result = NULL;
	FolksEmailDetails* e = NULL;
	FolksEmailDetails* _tmp0_;
	FolksEmailDetails* _tmp1_;
	gchar* _tmp16_;
#line 1921 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1923 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (p, FOLKS_TYPE_EMAIL_DETAILS) ? ((FolksEmailDetails*) p) : NULL);
#line 1923 "/run/build/folks/folks/individual.vala"
	e = _tmp0_;
#line 1924 "/run/build/folks/folks/individual.vala"
	_tmp1_ = e;
#line 1924 "/run/build/folks/folks/individual.vala"
	if (_tmp1_ != NULL) {
#line 8820 "individual.c"
		{
			GeeIterator* _email_fd_it = NULL;
			FolksEmailDetails* _tmp2_;
			GeeSet* _tmp3_;
			GeeSet* _tmp4_;
			GeeIterator* _tmp5_;
#line 1926 "/run/build/folks/folks/individual.vala"
			_tmp2_ = e;
#line 1926 "/run/build/folks/folks/individual.vala"
			_tmp3_ = folks_email_details_get_email_addresses (G_TYPE_CHECK_INSTANCE_CAST (_tmp2_, FOLKS_TYPE_EMAIL_DETAILS, FolksEmailDetails));
#line 1926 "/run/build/folks/folks/individual.vala"
			_tmp4_ = _tmp3_;
#line 1926 "/run/build/folks/folks/individual.vala"
			_tmp5_ = gee_iterable_iterator ((GeeIterable*) _tmp4_);
#line 1926 "/run/build/folks/folks/individual.vala"
			_email_fd_it = _tmp5_;
#line 1926 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 8839 "individual.c"
				GeeIterator* _tmp6_;
				FolksEmailFieldDetails* email_fd = NULL;
				GeeIterator* _tmp7_;
				gpointer _tmp8_;
				FolksEmailFieldDetails* _tmp9_;
				gconstpointer _tmp10_;
				const gchar* _tmp11_;
#line 1926 "/run/build/folks/folks/individual.vala"
				_tmp6_ = _email_fd_it;
#line 1926 "/run/build/folks/folks/individual.vala"
				if (!gee_iterator_next (_tmp6_)) {
#line 1926 "/run/build/folks/folks/individual.vala"
					break;
#line 8853 "individual.c"
				}
#line 1926 "/run/build/folks/folks/individual.vala"
				_tmp7_ = _email_fd_it;
#line 1926 "/run/build/folks/folks/individual.vala"
				_tmp8_ = gee_iterator_get (_tmp7_);
#line 1926 "/run/build/folks/folks/individual.vala"
				email_fd = (FolksEmailFieldDetails*) _tmp8_;
#line 1928 "/run/build/folks/folks/individual.vala"
				_tmp9_ = email_fd;
#line 1928 "/run/build/folks/folks/individual.vala"
				_tmp10_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp9_);
#line 1928 "/run/build/folks/folks/individual.vala"
				_tmp11_ = _tmp10_;
#line 1928 "/run/build/folks/folks/individual.vala"
				if (((const gchar*) _tmp11_) != NULL) {
#line 8869 "individual.c"
					FolksEmailFieldDetails* _tmp12_;
					gconstpointer _tmp13_;
					const gchar* _tmp14_;
					gchar* _tmp15_;
#line 1930 "/run/build/folks/folks/individual.vala"
					_tmp12_ = email_fd;
#line 1930 "/run/build/folks/folks/individual.vala"
					_tmp13_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp12_);
#line 1930 "/run/build/folks/folks/individual.vala"
					_tmp14_ = _tmp13_;
#line 1930 "/run/build/folks/folks/individual.vala"
					_tmp15_ = g_strdup ((const gchar*) _tmp14_);
#line 1930 "/run/build/folks/folks/individual.vala"
					result = _tmp15_;
#line 1930 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (email_fd);
#line 1930 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_email_fd_it);
#line 1930 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (e);
#line 1930 "/run/build/folks/folks/individual.vala"
					return result;
#line 8892 "individual.c"
				}
#line 1926 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (email_fd);
#line 8896 "individual.c"
			}
#line 1926 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_email_fd_it);
#line 8900 "individual.c"
		}
	}
#line 1935 "/run/build/folks/folks/individual.vala"
	_tmp16_ = g_strdup ("");
#line 1935 "/run/build/folks/folks/individual.vala"
	result = _tmp16_;
#line 1935 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (e);
#line 1935 "/run/build/folks/folks/individual.vala"
	return result;
#line 8911 "individual.c"
}


static gchar*
_folks_individual_look_up_phone_number_for_display_name (FolksIndividual* self,
                                                         FolksPersona* p)
{
	gchar* result = NULL;
	FolksPhoneDetails* e = NULL;
	FolksPhoneDetails* _tmp0_;
	FolksPhoneDetails* _tmp1_;
	gchar* _tmp16_;
#line 1938 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1940 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (p, FOLKS_TYPE_PHONE_DETAILS) ? ((FolksPhoneDetails*) p) : NULL);
#line 1940 "/run/build/folks/folks/individual.vala"
	e = _tmp0_;
#line 1941 "/run/build/folks/folks/individual.vala"
	_tmp1_ = e;
#line 1941 "/run/build/folks/folks/individual.vala"
	if (_tmp1_ != NULL) {
#line 8934 "individual.c"
		{
			GeeIterator* _phone_fd_it = NULL;
			FolksPhoneDetails* _tmp2_;
			GeeSet* _tmp3_;
			GeeSet* _tmp4_;
			GeeIterator* _tmp5_;
#line 1943 "/run/build/folks/folks/individual.vala"
			_tmp2_ = e;
#line 1943 "/run/build/folks/folks/individual.vala"
			_tmp3_ = folks_phone_details_get_phone_numbers (G_TYPE_CHECK_INSTANCE_CAST (_tmp2_, FOLKS_TYPE_PHONE_DETAILS, FolksPhoneDetails));
#line 1943 "/run/build/folks/folks/individual.vala"
			_tmp4_ = _tmp3_;
#line 1943 "/run/build/folks/folks/individual.vala"
			_tmp5_ = gee_iterable_iterator ((GeeIterable*) _tmp4_);
#line 1943 "/run/build/folks/folks/individual.vala"
			_phone_fd_it = _tmp5_;
#line 1943 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 8953 "individual.c"
				GeeIterator* _tmp6_;
				FolksPhoneFieldDetails* phone_fd = NULL;
				GeeIterator* _tmp7_;
				gpointer _tmp8_;
				FolksPhoneFieldDetails* _tmp9_;
				gconstpointer _tmp10_;
				const gchar* _tmp11_;
#line 1943 "/run/build/folks/folks/individual.vala"
				_tmp6_ = _phone_fd_it;
#line 1943 "/run/build/folks/folks/individual.vala"
				if (!gee_iterator_next (_tmp6_)) {
#line 1943 "/run/build/folks/folks/individual.vala"
					break;
#line 8967 "individual.c"
				}
#line 1943 "/run/build/folks/folks/individual.vala"
				_tmp7_ = _phone_fd_it;
#line 1943 "/run/build/folks/folks/individual.vala"
				_tmp8_ = gee_iterator_get (_tmp7_);
#line 1943 "/run/build/folks/folks/individual.vala"
				phone_fd = (FolksPhoneFieldDetails*) _tmp8_;
#line 1945 "/run/build/folks/folks/individual.vala"
				_tmp9_ = phone_fd;
#line 1945 "/run/build/folks/folks/individual.vala"
				_tmp10_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp9_);
#line 1945 "/run/build/folks/folks/individual.vala"
				_tmp11_ = _tmp10_;
#line 1945 "/run/build/folks/folks/individual.vala"
				if (((const gchar*) _tmp11_) != NULL) {
#line 8983 "individual.c"
					FolksPhoneFieldDetails* _tmp12_;
					gconstpointer _tmp13_;
					const gchar* _tmp14_;
					gchar* _tmp15_;
#line 1947 "/run/build/folks/folks/individual.vala"
					_tmp12_ = phone_fd;
#line 1947 "/run/build/folks/folks/individual.vala"
					_tmp13_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp12_);
#line 1947 "/run/build/folks/folks/individual.vala"
					_tmp14_ = _tmp13_;
#line 1947 "/run/build/folks/folks/individual.vala"
					_tmp15_ = g_strdup ((const gchar*) _tmp14_);
#line 1947 "/run/build/folks/folks/individual.vala"
					result = _tmp15_;
#line 1947 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (phone_fd);
#line 1947 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_phone_fd_it);
#line 1947 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (e);
#line 1947 "/run/build/folks/folks/individual.vala"
					return result;
#line 9006 "individual.c"
				}
#line 1943 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (phone_fd);
#line 9010 "individual.c"
			}
#line 1943 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_phone_fd_it);
#line 9014 "individual.c"
		}
	}
#line 1952 "/run/build/folks/folks/individual.vala"
	_tmp16_ = g_strdup ("");
#line 1952 "/run/build/folks/folks/individual.vala"
	result = _tmp16_;
#line 1952 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (e);
#line 1952 "/run/build/folks/folks/individual.vala"
	return result;
#line 9025 "individual.c"
}


static gchar*
_folks_individual_look_up_display_id_for_display_name (FolksIndividual* self,
                                                       FolksPersona* p)
{
	gchar* result = NULL;
	gboolean _tmp0_ = FALSE;
	gboolean _tmp1_ = FALSE;
	gchar* _tmp11_;
#line 1955 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1959 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 9041 "individual.c"
		const gchar* _tmp2_;
		const gchar* _tmp3_;
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp2_ = folks_persona_get_display_id (p);
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _tmp2_;
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp3_ != NULL;
#line 9050 "individual.c"
	} else {
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp1_ = FALSE;
#line 9054 "individual.c"
	}
#line 1959 "/run/build/folks/folks/individual.vala"
	if (_tmp1_) {
#line 9058 "individual.c"
		const gchar* _tmp4_;
		const gchar* _tmp5_;
		const gchar* _tmp6_;
		const gchar* _tmp7_;
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp4_ = folks_persona_get_display_id (p);
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp6_ = folks_persona_get_iid (p);
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp7_ = _tmp6_;
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp0_ = g_strcmp0 (_tmp5_, _tmp7_) != 0;
#line 9073 "individual.c"
	} else {
#line 1959 "/run/build/folks/folks/individual.vala"
		_tmp0_ = FALSE;
#line 9077 "individual.c"
	}
#line 1959 "/run/build/folks/folks/individual.vala"
	if (_tmp0_) {
#line 9081 "individual.c"
		const gchar* _tmp8_;
		const gchar* _tmp9_;
		gchar* _tmp10_;
#line 1961 "/run/build/folks/folks/individual.vala"
		_tmp8_ = folks_persona_get_display_id (p);
#line 1961 "/run/build/folks/folks/individual.vala"
		_tmp9_ = _tmp8_;
#line 1961 "/run/build/folks/folks/individual.vala"
		_tmp10_ = g_strdup (_tmp9_);
#line 1961 "/run/build/folks/folks/individual.vala"
		result = _tmp10_;
#line 1961 "/run/build/folks/folks/individual.vala"
		return result;
#line 9095 "individual.c"
	}
#line 1964 "/run/build/folks/folks/individual.vala"
	_tmp11_ = g_strdup ("");
#line 1964 "/run/build/folks/folks/individual.vala"
	result = _tmp11_;
#line 1964 "/run/build/folks/folks/individual.vala"
	return result;
#line 9103 "individual.c"
}


static gchar*
_folks_individual_look_up_postal_address_for_display_name (FolksIndividual* self,
                                                           FolksPersona* p)
{
	gchar* result = NULL;
	FolksPostalAddressDetails* address_details = NULL;
	FolksPostalAddressDetails* _tmp0_;
	FolksPostalAddressDetails* _tmp1_;
	gchar* _tmp16_;
#line 1967 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1969 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (p, FOLKS_TYPE_POSTAL_ADDRESS_DETAILS) ? ((FolksPostalAddressDetails*) p) : NULL);
#line 1969 "/run/build/folks/folks/individual.vala"
	address_details = _tmp0_;
#line 1970 "/run/build/folks/folks/individual.vala"
	_tmp1_ = address_details;
#line 1970 "/run/build/folks/folks/individual.vala"
	if (_tmp1_ != NULL) {
#line 9126 "individual.c"
		{
			GeeIterator* _pa_fd_it = NULL;
			FolksPostalAddressDetails* _tmp2_;
			GeeSet* _tmp3_;
			GeeSet* _tmp4_;
			GeeIterator* _tmp5_;
#line 1972 "/run/build/folks/folks/individual.vala"
			_tmp2_ = address_details;
#line 1972 "/run/build/folks/folks/individual.vala"
			_tmp3_ = folks_postal_address_details_get_postal_addresses (G_TYPE_CHECK_INSTANCE_CAST (_tmp2_, FOLKS_TYPE_POSTAL_ADDRESS_DETAILS, FolksPostalAddressDetails));
#line 1972 "/run/build/folks/folks/individual.vala"
			_tmp4_ = _tmp3_;
#line 1972 "/run/build/folks/folks/individual.vala"
			_tmp5_ = gee_iterable_iterator ((GeeIterable*) _tmp4_);
#line 1972 "/run/build/folks/folks/individual.vala"
			_pa_fd_it = _tmp5_;
#line 1972 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 9145 "individual.c"
				GeeIterator* _tmp6_;
				FolksPostalAddressFieldDetails* pa_fd = NULL;
				GeeIterator* _tmp7_;
				gpointer _tmp8_;
				FolksPostalAddress* pa = NULL;
				FolksPostalAddressFieldDetails* _tmp9_;
				gconstpointer _tmp10_;
				FolksPostalAddress* _tmp11_;
				FolksPostalAddress* _tmp12_;
				FolksPostalAddress* _tmp13_;
#line 1972 "/run/build/folks/folks/individual.vala"
				_tmp6_ = _pa_fd_it;
#line 1972 "/run/build/folks/folks/individual.vala"
				if (!gee_iterator_next (_tmp6_)) {
#line 1972 "/run/build/folks/folks/individual.vala"
					break;
#line 9162 "individual.c"
				}
#line 1972 "/run/build/folks/folks/individual.vala"
				_tmp7_ = _pa_fd_it;
#line 1972 "/run/build/folks/folks/individual.vala"
				_tmp8_ = gee_iterator_get (_tmp7_);
#line 1972 "/run/build/folks/folks/individual.vala"
				pa_fd = (FolksPostalAddressFieldDetails*) _tmp8_;
#line 1974 "/run/build/folks/folks/individual.vala"
				_tmp9_ = pa_fd;
#line 1974 "/run/build/folks/folks/individual.vala"
				_tmp10_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp9_);
#line 1974 "/run/build/folks/folks/individual.vala"
				_tmp11_ = _tmp10_;
#line 1974 "/run/build/folks/folks/individual.vala"
				_tmp12_ = _g_object_ref0 ((FolksPostalAddress*) _tmp11_);
#line 1974 "/run/build/folks/folks/individual.vala"
				pa = _tmp12_;
#line 1975 "/run/build/folks/folks/individual.vala"
				_tmp13_ = pa;
#line 1975 "/run/build/folks/folks/individual.vala"
				if (_tmp13_ != NULL) {
#line 9184 "individual.c"
					FolksPostalAddress* _tmp14_;
					gchar* _tmp15_;
#line 1977 "/run/build/folks/folks/individual.vala"
					_tmp14_ = pa;
#line 1977 "/run/build/folks/folks/individual.vala"
					_tmp15_ = folks_postal_address_to_string (_tmp14_);
#line 1977 "/run/build/folks/folks/individual.vala"
					result = _tmp15_;
#line 1977 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (pa);
#line 1977 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (pa_fd);
#line 1977 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_pa_fd_it);
#line 1977 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (address_details);
#line 1977 "/run/build/folks/folks/individual.vala"
					return result;
#line 9203 "individual.c"
				}
#line 1972 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (pa);
#line 1972 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (pa_fd);
#line 9209 "individual.c"
			}
#line 1972 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_pa_fd_it);
#line 9213 "individual.c"
		}
	}
#line 1982 "/run/build/folks/folks/individual.vala"
	_tmp16_ = g_strdup ("");
#line 1982 "/run/build/folks/folks/individual.vala"
	result = _tmp16_;
#line 1982 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (address_details);
#line 1982 "/run/build/folks/folks/individual.vala"
	return result;
#line 9224 "individual.c"
}


static void
_folks_individual_update_display_name (FolksIndividual* self)
{
	FolksPersona* primary_persona = NULL;
	gchar* new_display_name = NULL;
	gchar* _tmp0_;
	FolksPersona* _tmp20_;
	gchar* _tmp21_;
	const gchar* _tmp37_;
	const gchar* _tmp55_;
	const gchar* _tmp73_;
	const gchar* _tmp91_;
	const gchar* _tmp109_;
	const gchar* _tmp127_;
	const gchar* _tmp129_;
	const gchar* _tmp130_;
#line 1985 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1987 "/run/build/folks/folks/individual.vala"
	primary_persona = NULL;
#line 1988 "/run/build/folks/folks/individual.vala"
	_tmp0_ = g_strdup ("");
#line 1988 "/run/build/folks/folks/individual.vala"
	new_display_name = _tmp0_;
#line 9252 "individual.c"
	{
		FolksSmallSet* _p_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _p_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _p_index = 0;
#line 1992 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 1992 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 1992 "/run/build/folks/folks/individual.vala"
		_p_list = _tmp2_;
#line 1992 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _p_list;
#line 1992 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 1992 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 1992 "/run/build/folks/folks/individual.vala"
		_p_size = _tmp5_;
#line 1992 "/run/build/folks/folks/individual.vala"
		_p_index = -1;
#line 1992 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 9280 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* p = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksPersona* _tmp13_;
			FolksPersonaStore* _tmp14_;
			FolksPersonaStore* _tmp15_;
			gboolean _tmp16_;
			gboolean _tmp17_;
#line 1992 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _p_index;
#line 1992 "/run/build/folks/folks/individual.vala"
			_p_index = _tmp6_ + 1;
#line 1992 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _p_index;
#line 1992 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _p_size;
#line 1992 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 1992 "/run/build/folks/folks/individual.vala"
				break;
#line 9306 "individual.c"
			}
#line 1992 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _p_list;
#line 1992 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _p_index;
#line 1992 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 1992 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 1992 "/run/build/folks/folks/individual.vala"
			p = _tmp12_;
#line 1994 "/run/build/folks/folks/individual.vala"
			_tmp13_ = p;
#line 1994 "/run/build/folks/folks/individual.vala"
			_tmp14_ = folks_persona_get_store (_tmp13_);
#line 1994 "/run/build/folks/folks/individual.vala"
			_tmp15_ = _tmp14_;
#line 1994 "/run/build/folks/folks/individual.vala"
			_tmp16_ = folks_persona_store_get_is_primary_store (_tmp15_);
#line 1994 "/run/build/folks/folks/individual.vala"
			_tmp17_ = _tmp16_;
#line 1994 "/run/build/folks/folks/individual.vala"
			if (_tmp17_) {
#line 9330 "individual.c"
				FolksPersona* _tmp18_;
				FolksPersona* _tmp19_;
#line 1996 "/run/build/folks/folks/individual.vala"
				_tmp18_ = p;
#line 1996 "/run/build/folks/folks/individual.vala"
				_tmp19_ = _g_object_ref0 (_tmp18_);
#line 1996 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (primary_persona);
#line 1996 "/run/build/folks/folks/individual.vala"
				primary_persona = _tmp19_;
#line 1997 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 1997 "/run/build/folks/folks/individual.vala"
				break;
#line 9345 "individual.c"
			}
#line 1992 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 9349 "individual.c"
		}
#line 1992 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_list);
#line 9353 "individual.c"
	}
#line 2002 "/run/build/folks/folks/individual.vala"
	_tmp20_ = primary_persona;
#line 2002 "/run/build/folks/folks/individual.vala"
	_tmp21_ = _folks_individual_look_up_alias_for_display_name (self, _tmp20_);
#line 2002 "/run/build/folks/folks/individual.vala"
	_g_free0 (new_display_name);
#line 2002 "/run/build/folks/folks/individual.vala"
	new_display_name = _tmp21_;
#line 9363 "individual.c"
	{
		FolksSmallSet* _p_list = NULL;
		FolksSmallSet* _tmp22_;
		FolksSmallSet* _tmp23_;
		gint _p_size = 0;
		FolksSmallSet* _tmp24_;
		gint _tmp25_;
		gint _tmp26_;
		gint _p_index = 0;
#line 2004 "/run/build/folks/folks/individual.vala"
		_tmp22_ = self->priv->_persona_set;
#line 2004 "/run/build/folks/folks/individual.vala"
		_tmp23_ = _g_object_ref0 (_tmp22_);
#line 2004 "/run/build/folks/folks/individual.vala"
		_p_list = _tmp23_;
#line 2004 "/run/build/folks/folks/individual.vala"
		_tmp24_ = _p_list;
#line 2004 "/run/build/folks/folks/individual.vala"
		_tmp25_ = gee_collection_get_size ((GeeCollection*) _tmp24_);
#line 2004 "/run/build/folks/folks/individual.vala"
		_tmp26_ = _tmp25_;
#line 2004 "/run/build/folks/folks/individual.vala"
		_p_size = _tmp26_;
#line 2004 "/run/build/folks/folks/individual.vala"
		_p_index = -1;
#line 2004 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 9391 "individual.c"
			gint _tmp27_;
			gint _tmp28_;
			gint _tmp29_;
			FolksPersona* p = NULL;
			FolksSmallSet* _tmp30_;
			gint _tmp31_;
			gconstpointer _tmp32_;
			FolksPersona* _tmp33_;
			const gchar* _tmp34_;
			FolksPersona* _tmp35_;
			gchar* _tmp36_;
#line 2004 "/run/build/folks/folks/individual.vala"
			_tmp27_ = _p_index;
#line 2004 "/run/build/folks/folks/individual.vala"
			_p_index = _tmp27_ + 1;
#line 2004 "/run/build/folks/folks/individual.vala"
			_tmp28_ = _p_index;
#line 2004 "/run/build/folks/folks/individual.vala"
			_tmp29_ = _p_size;
#line 2004 "/run/build/folks/folks/individual.vala"
			if (!(_tmp28_ < _tmp29_)) {
#line 2004 "/run/build/folks/folks/individual.vala"
				break;
#line 9415 "individual.c"
			}
#line 2004 "/run/build/folks/folks/individual.vala"
			_tmp30_ = _p_list;
#line 2004 "/run/build/folks/folks/individual.vala"
			_tmp31_ = _p_index;
#line 2004 "/run/build/folks/folks/individual.vala"
			_tmp32_ = folks_small_set_get (_tmp30_, _tmp31_);
#line 2004 "/run/build/folks/folks/individual.vala"
			_tmp33_ = _g_object_ref0 ((FolksPersona*) _tmp32_);
#line 2004 "/run/build/folks/folks/individual.vala"
			p = _tmp33_;
#line 2006 "/run/build/folks/folks/individual.vala"
			_tmp34_ = new_display_name;
#line 2006 "/run/build/folks/folks/individual.vala"
			if (g_strcmp0 (_tmp34_, "") != 0) {
#line 2008 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 2008 "/run/build/folks/folks/individual.vala"
				break;
#line 9435 "individual.c"
			}
#line 2011 "/run/build/folks/folks/individual.vala"
			_tmp35_ = p;
#line 2011 "/run/build/folks/folks/individual.vala"
			_tmp36_ = _folks_individual_look_up_alias_for_display_name (self, _tmp35_);
#line 2011 "/run/build/folks/folks/individual.vala"
			_g_free0 (new_display_name);
#line 2011 "/run/build/folks/folks/individual.vala"
			new_display_name = _tmp36_;
#line 2004 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 9447 "individual.c"
		}
#line 2004 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_list);
#line 9451 "individual.c"
	}
#line 2015 "/run/build/folks/folks/individual.vala"
	_tmp37_ = new_display_name;
#line 2015 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp37_, "") == 0) {
#line 9457 "individual.c"
		FolksPersona* _tmp38_;
		gchar* _tmp39_;
#line 2017 "/run/build/folks/folks/individual.vala"
		_tmp38_ = primary_persona;
#line 2017 "/run/build/folks/folks/individual.vala"
		_tmp39_ = _folks_individual_look_up_name_details_for_display_name (self, _tmp38_);
#line 2017 "/run/build/folks/folks/individual.vala"
		_g_free0 (new_display_name);
#line 2017 "/run/build/folks/folks/individual.vala"
		new_display_name = _tmp39_;
#line 9468 "individual.c"
		{
			FolksSmallSet* _p_list = NULL;
			FolksSmallSet* _tmp40_;
			FolksSmallSet* _tmp41_;
			gint _p_size = 0;
			FolksSmallSet* _tmp42_;
			gint _tmp43_;
			gint _tmp44_;
			gint _p_index = 0;
#line 2020 "/run/build/folks/folks/individual.vala"
			_tmp40_ = self->priv->_persona_set;
#line 2020 "/run/build/folks/folks/individual.vala"
			_tmp41_ = _g_object_ref0 (_tmp40_);
#line 2020 "/run/build/folks/folks/individual.vala"
			_p_list = _tmp41_;
#line 2020 "/run/build/folks/folks/individual.vala"
			_tmp42_ = _p_list;
#line 2020 "/run/build/folks/folks/individual.vala"
			_tmp43_ = gee_collection_get_size ((GeeCollection*) _tmp42_);
#line 2020 "/run/build/folks/folks/individual.vala"
			_tmp44_ = _tmp43_;
#line 2020 "/run/build/folks/folks/individual.vala"
			_p_size = _tmp44_;
#line 2020 "/run/build/folks/folks/individual.vala"
			_p_index = -1;
#line 2020 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 9496 "individual.c"
				gint _tmp45_;
				gint _tmp46_;
				gint _tmp47_;
				FolksPersona* p = NULL;
				FolksSmallSet* _tmp48_;
				gint _tmp49_;
				gconstpointer _tmp50_;
				FolksPersona* _tmp51_;
				const gchar* _tmp52_;
				FolksPersona* _tmp53_;
				gchar* _tmp54_;
#line 2020 "/run/build/folks/folks/individual.vala"
				_tmp45_ = _p_index;
#line 2020 "/run/build/folks/folks/individual.vala"
				_p_index = _tmp45_ + 1;
#line 2020 "/run/build/folks/folks/individual.vala"
				_tmp46_ = _p_index;
#line 2020 "/run/build/folks/folks/individual.vala"
				_tmp47_ = _p_size;
#line 2020 "/run/build/folks/folks/individual.vala"
				if (!(_tmp46_ < _tmp47_)) {
#line 2020 "/run/build/folks/folks/individual.vala"
					break;
#line 9520 "individual.c"
				}
#line 2020 "/run/build/folks/folks/individual.vala"
				_tmp48_ = _p_list;
#line 2020 "/run/build/folks/folks/individual.vala"
				_tmp49_ = _p_index;
#line 2020 "/run/build/folks/folks/individual.vala"
				_tmp50_ = folks_small_set_get (_tmp48_, _tmp49_);
#line 2020 "/run/build/folks/folks/individual.vala"
				_tmp51_ = _g_object_ref0 ((FolksPersona*) _tmp50_);
#line 2020 "/run/build/folks/folks/individual.vala"
				p = _tmp51_;
#line 2022 "/run/build/folks/folks/individual.vala"
				_tmp52_ = new_display_name;
#line 2022 "/run/build/folks/folks/individual.vala"
				if (g_strcmp0 (_tmp52_, "") != 0) {
#line 2024 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (p);
#line 2024 "/run/build/folks/folks/individual.vala"
					break;
#line 9540 "individual.c"
				}
#line 2027 "/run/build/folks/folks/individual.vala"
				_tmp53_ = p;
#line 2027 "/run/build/folks/folks/individual.vala"
				_tmp54_ = _folks_individual_look_up_name_details_for_display_name (self, _tmp53_);
#line 2027 "/run/build/folks/folks/individual.vala"
				_g_free0 (new_display_name);
#line 2027 "/run/build/folks/folks/individual.vala"
				new_display_name = _tmp54_;
#line 2020 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 9552 "individual.c"
			}
#line 2020 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_p_list);
#line 9556 "individual.c"
		}
	}
#line 2033 "/run/build/folks/folks/individual.vala"
	_tmp55_ = new_display_name;
#line 2033 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp55_, "") == 0) {
#line 9563 "individual.c"
		FolksPersona* _tmp56_;
		gchar* _tmp57_;
#line 2035 "/run/build/folks/folks/individual.vala"
		_tmp56_ = primary_persona;
#line 2035 "/run/build/folks/folks/individual.vala"
		_tmp57_ = _folks_individual_look_up_email_address_for_display_name (self, _tmp56_);
#line 2035 "/run/build/folks/folks/individual.vala"
		_g_free0 (new_display_name);
#line 2035 "/run/build/folks/folks/individual.vala"
		new_display_name = _tmp57_;
#line 9574 "individual.c"
		{
			FolksSmallSet* _p_list = NULL;
			FolksSmallSet* _tmp58_;
			FolksSmallSet* _tmp59_;
			gint _p_size = 0;
			FolksSmallSet* _tmp60_;
			gint _tmp61_;
			gint _tmp62_;
			gint _p_index = 0;
#line 2038 "/run/build/folks/folks/individual.vala"
			_tmp58_ = self->priv->_persona_set;
#line 2038 "/run/build/folks/folks/individual.vala"
			_tmp59_ = _g_object_ref0 (_tmp58_);
#line 2038 "/run/build/folks/folks/individual.vala"
			_p_list = _tmp59_;
#line 2038 "/run/build/folks/folks/individual.vala"
			_tmp60_ = _p_list;
#line 2038 "/run/build/folks/folks/individual.vala"
			_tmp61_ = gee_collection_get_size ((GeeCollection*) _tmp60_);
#line 2038 "/run/build/folks/folks/individual.vala"
			_tmp62_ = _tmp61_;
#line 2038 "/run/build/folks/folks/individual.vala"
			_p_size = _tmp62_;
#line 2038 "/run/build/folks/folks/individual.vala"
			_p_index = -1;
#line 2038 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 9602 "individual.c"
				gint _tmp63_;
				gint _tmp64_;
				gint _tmp65_;
				FolksPersona* p = NULL;
				FolksSmallSet* _tmp66_;
				gint _tmp67_;
				gconstpointer _tmp68_;
				FolksPersona* _tmp69_;
				const gchar* _tmp70_;
				FolksPersona* _tmp71_;
				gchar* _tmp72_;
#line 2038 "/run/build/folks/folks/individual.vala"
				_tmp63_ = _p_index;
#line 2038 "/run/build/folks/folks/individual.vala"
				_p_index = _tmp63_ + 1;
#line 2038 "/run/build/folks/folks/individual.vala"
				_tmp64_ = _p_index;
#line 2038 "/run/build/folks/folks/individual.vala"
				_tmp65_ = _p_size;
#line 2038 "/run/build/folks/folks/individual.vala"
				if (!(_tmp64_ < _tmp65_)) {
#line 2038 "/run/build/folks/folks/individual.vala"
					break;
#line 9626 "individual.c"
				}
#line 2038 "/run/build/folks/folks/individual.vala"
				_tmp66_ = _p_list;
#line 2038 "/run/build/folks/folks/individual.vala"
				_tmp67_ = _p_index;
#line 2038 "/run/build/folks/folks/individual.vala"
				_tmp68_ = folks_small_set_get (_tmp66_, _tmp67_);
#line 2038 "/run/build/folks/folks/individual.vala"
				_tmp69_ = _g_object_ref0 ((FolksPersona*) _tmp68_);
#line 2038 "/run/build/folks/folks/individual.vala"
				p = _tmp69_;
#line 2040 "/run/build/folks/folks/individual.vala"
				_tmp70_ = new_display_name;
#line 2040 "/run/build/folks/folks/individual.vala"
				if (g_strcmp0 (_tmp70_, "") != 0) {
#line 2042 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (p);
#line 2042 "/run/build/folks/folks/individual.vala"
					break;
#line 9646 "individual.c"
				}
#line 2045 "/run/build/folks/folks/individual.vala"
				_tmp71_ = p;
#line 2045 "/run/build/folks/folks/individual.vala"
				_tmp72_ = _folks_individual_look_up_email_address_for_display_name (self, _tmp71_);
#line 2045 "/run/build/folks/folks/individual.vala"
				_g_free0 (new_display_name);
#line 2045 "/run/build/folks/folks/individual.vala"
				new_display_name = _tmp72_;
#line 2038 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 9658 "individual.c"
			}
#line 2038 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_p_list);
#line 9662 "individual.c"
		}
	}
#line 2051 "/run/build/folks/folks/individual.vala"
	_tmp73_ = new_display_name;
#line 2051 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp73_, "") == 0) {
#line 9669 "individual.c"
		FolksPersona* _tmp74_;
		gchar* _tmp75_;
#line 2053 "/run/build/folks/folks/individual.vala"
		_tmp74_ = primary_persona;
#line 2053 "/run/build/folks/folks/individual.vala"
		_tmp75_ = _folks_individual_look_up_phone_number_for_display_name (self, _tmp74_);
#line 2053 "/run/build/folks/folks/individual.vala"
		_g_free0 (new_display_name);
#line 2053 "/run/build/folks/folks/individual.vala"
		new_display_name = _tmp75_;
#line 9680 "individual.c"
		{
			FolksSmallSet* _p_list = NULL;
			FolksSmallSet* _tmp76_;
			FolksSmallSet* _tmp77_;
			gint _p_size = 0;
			FolksSmallSet* _tmp78_;
			gint _tmp79_;
			gint _tmp80_;
			gint _p_index = 0;
#line 2056 "/run/build/folks/folks/individual.vala"
			_tmp76_ = self->priv->_persona_set;
#line 2056 "/run/build/folks/folks/individual.vala"
			_tmp77_ = _g_object_ref0 (_tmp76_);
#line 2056 "/run/build/folks/folks/individual.vala"
			_p_list = _tmp77_;
#line 2056 "/run/build/folks/folks/individual.vala"
			_tmp78_ = _p_list;
#line 2056 "/run/build/folks/folks/individual.vala"
			_tmp79_ = gee_collection_get_size ((GeeCollection*) _tmp78_);
#line 2056 "/run/build/folks/folks/individual.vala"
			_tmp80_ = _tmp79_;
#line 2056 "/run/build/folks/folks/individual.vala"
			_p_size = _tmp80_;
#line 2056 "/run/build/folks/folks/individual.vala"
			_p_index = -1;
#line 2056 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 9708 "individual.c"
				gint _tmp81_;
				gint _tmp82_;
				gint _tmp83_;
				FolksPersona* p = NULL;
				FolksSmallSet* _tmp84_;
				gint _tmp85_;
				gconstpointer _tmp86_;
				FolksPersona* _tmp87_;
				const gchar* _tmp88_;
				FolksPersona* _tmp89_;
				gchar* _tmp90_;
#line 2056 "/run/build/folks/folks/individual.vala"
				_tmp81_ = _p_index;
#line 2056 "/run/build/folks/folks/individual.vala"
				_p_index = _tmp81_ + 1;
#line 2056 "/run/build/folks/folks/individual.vala"
				_tmp82_ = _p_index;
#line 2056 "/run/build/folks/folks/individual.vala"
				_tmp83_ = _p_size;
#line 2056 "/run/build/folks/folks/individual.vala"
				if (!(_tmp82_ < _tmp83_)) {
#line 2056 "/run/build/folks/folks/individual.vala"
					break;
#line 9732 "individual.c"
				}
#line 2056 "/run/build/folks/folks/individual.vala"
				_tmp84_ = _p_list;
#line 2056 "/run/build/folks/folks/individual.vala"
				_tmp85_ = _p_index;
#line 2056 "/run/build/folks/folks/individual.vala"
				_tmp86_ = folks_small_set_get (_tmp84_, _tmp85_);
#line 2056 "/run/build/folks/folks/individual.vala"
				_tmp87_ = _g_object_ref0 ((FolksPersona*) _tmp86_);
#line 2056 "/run/build/folks/folks/individual.vala"
				p = _tmp87_;
#line 2058 "/run/build/folks/folks/individual.vala"
				_tmp88_ = new_display_name;
#line 2058 "/run/build/folks/folks/individual.vala"
				if (g_strcmp0 (_tmp88_, "") != 0) {
#line 2060 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (p);
#line 2060 "/run/build/folks/folks/individual.vala"
					break;
#line 9752 "individual.c"
				}
#line 2063 "/run/build/folks/folks/individual.vala"
				_tmp89_ = p;
#line 2063 "/run/build/folks/folks/individual.vala"
				_tmp90_ = _folks_individual_look_up_phone_number_for_display_name (self, _tmp89_);
#line 2063 "/run/build/folks/folks/individual.vala"
				_g_free0 (new_display_name);
#line 2063 "/run/build/folks/folks/individual.vala"
				new_display_name = _tmp90_;
#line 2056 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 9764 "individual.c"
			}
#line 2056 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_p_list);
#line 9768 "individual.c"
		}
	}
#line 2069 "/run/build/folks/folks/individual.vala"
	_tmp91_ = new_display_name;
#line 2069 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp91_, "") == 0) {
#line 9775 "individual.c"
		FolksPersona* _tmp92_;
		gchar* _tmp93_;
#line 2071 "/run/build/folks/folks/individual.vala"
		_tmp92_ = primary_persona;
#line 2071 "/run/build/folks/folks/individual.vala"
		_tmp93_ = _folks_individual_look_up_display_id_for_display_name (self, _tmp92_);
#line 2071 "/run/build/folks/folks/individual.vala"
		_g_free0 (new_display_name);
#line 2071 "/run/build/folks/folks/individual.vala"
		new_display_name = _tmp93_;
#line 9786 "individual.c"
		{
			FolksSmallSet* _p_list = NULL;
			FolksSmallSet* _tmp94_;
			FolksSmallSet* _tmp95_;
			gint _p_size = 0;
			FolksSmallSet* _tmp96_;
			gint _tmp97_;
			gint _tmp98_;
			gint _p_index = 0;
#line 2074 "/run/build/folks/folks/individual.vala"
			_tmp94_ = self->priv->_persona_set;
#line 2074 "/run/build/folks/folks/individual.vala"
			_tmp95_ = _g_object_ref0 (_tmp94_);
#line 2074 "/run/build/folks/folks/individual.vala"
			_p_list = _tmp95_;
#line 2074 "/run/build/folks/folks/individual.vala"
			_tmp96_ = _p_list;
#line 2074 "/run/build/folks/folks/individual.vala"
			_tmp97_ = gee_collection_get_size ((GeeCollection*) _tmp96_);
#line 2074 "/run/build/folks/folks/individual.vala"
			_tmp98_ = _tmp97_;
#line 2074 "/run/build/folks/folks/individual.vala"
			_p_size = _tmp98_;
#line 2074 "/run/build/folks/folks/individual.vala"
			_p_index = -1;
#line 2074 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 9814 "individual.c"
				gint _tmp99_;
				gint _tmp100_;
				gint _tmp101_;
				FolksPersona* p = NULL;
				FolksSmallSet* _tmp102_;
				gint _tmp103_;
				gconstpointer _tmp104_;
				FolksPersona* _tmp105_;
				const gchar* _tmp106_;
				FolksPersona* _tmp107_;
				gchar* _tmp108_;
#line 2074 "/run/build/folks/folks/individual.vala"
				_tmp99_ = _p_index;
#line 2074 "/run/build/folks/folks/individual.vala"
				_p_index = _tmp99_ + 1;
#line 2074 "/run/build/folks/folks/individual.vala"
				_tmp100_ = _p_index;
#line 2074 "/run/build/folks/folks/individual.vala"
				_tmp101_ = _p_size;
#line 2074 "/run/build/folks/folks/individual.vala"
				if (!(_tmp100_ < _tmp101_)) {
#line 2074 "/run/build/folks/folks/individual.vala"
					break;
#line 9838 "individual.c"
				}
#line 2074 "/run/build/folks/folks/individual.vala"
				_tmp102_ = _p_list;
#line 2074 "/run/build/folks/folks/individual.vala"
				_tmp103_ = _p_index;
#line 2074 "/run/build/folks/folks/individual.vala"
				_tmp104_ = folks_small_set_get (_tmp102_, _tmp103_);
#line 2074 "/run/build/folks/folks/individual.vala"
				_tmp105_ = _g_object_ref0 ((FolksPersona*) _tmp104_);
#line 2074 "/run/build/folks/folks/individual.vala"
				p = _tmp105_;
#line 2076 "/run/build/folks/folks/individual.vala"
				_tmp106_ = new_display_name;
#line 2076 "/run/build/folks/folks/individual.vala"
				if (g_strcmp0 (_tmp106_, "") != 0) {
#line 2078 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (p);
#line 2078 "/run/build/folks/folks/individual.vala"
					break;
#line 9858 "individual.c"
				}
#line 2081 "/run/build/folks/folks/individual.vala"
				_tmp107_ = p;
#line 2081 "/run/build/folks/folks/individual.vala"
				_tmp108_ = _folks_individual_look_up_display_id_for_display_name (self, _tmp107_);
#line 2081 "/run/build/folks/folks/individual.vala"
				_g_free0 (new_display_name);
#line 2081 "/run/build/folks/folks/individual.vala"
				new_display_name = _tmp108_;
#line 2074 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 9870 "individual.c"
			}
#line 2074 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_p_list);
#line 9874 "individual.c"
		}
	}
#line 2087 "/run/build/folks/folks/individual.vala"
	_tmp109_ = new_display_name;
#line 2087 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp109_, "") == 0) {
#line 9881 "individual.c"
		FolksPersona* _tmp110_;
		gchar* _tmp111_;
#line 2089 "/run/build/folks/folks/individual.vala"
		_tmp110_ = primary_persona;
#line 2089 "/run/build/folks/folks/individual.vala"
		_tmp111_ = _folks_individual_look_up_postal_address_for_display_name (self, _tmp110_);
#line 2089 "/run/build/folks/folks/individual.vala"
		_g_free0 (new_display_name);
#line 2089 "/run/build/folks/folks/individual.vala"
		new_display_name = _tmp111_;
#line 9892 "individual.c"
		{
			FolksSmallSet* _p_list = NULL;
			FolksSmallSet* _tmp112_;
			FolksSmallSet* _tmp113_;
			gint _p_size = 0;
			FolksSmallSet* _tmp114_;
			gint _tmp115_;
			gint _tmp116_;
			gint _p_index = 0;
#line 2092 "/run/build/folks/folks/individual.vala"
			_tmp112_ = self->priv->_persona_set;
#line 2092 "/run/build/folks/folks/individual.vala"
			_tmp113_ = _g_object_ref0 (_tmp112_);
#line 2092 "/run/build/folks/folks/individual.vala"
			_p_list = _tmp113_;
#line 2092 "/run/build/folks/folks/individual.vala"
			_tmp114_ = _p_list;
#line 2092 "/run/build/folks/folks/individual.vala"
			_tmp115_ = gee_collection_get_size ((GeeCollection*) _tmp114_);
#line 2092 "/run/build/folks/folks/individual.vala"
			_tmp116_ = _tmp115_;
#line 2092 "/run/build/folks/folks/individual.vala"
			_p_size = _tmp116_;
#line 2092 "/run/build/folks/folks/individual.vala"
			_p_index = -1;
#line 2092 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 9920 "individual.c"
				gint _tmp117_;
				gint _tmp118_;
				gint _tmp119_;
				FolksPersona* p = NULL;
				FolksSmallSet* _tmp120_;
				gint _tmp121_;
				gconstpointer _tmp122_;
				FolksPersona* _tmp123_;
				const gchar* _tmp124_;
				FolksPersona* _tmp125_;
				gchar* _tmp126_;
#line 2092 "/run/build/folks/folks/individual.vala"
				_tmp117_ = _p_index;
#line 2092 "/run/build/folks/folks/individual.vala"
				_p_index = _tmp117_ + 1;
#line 2092 "/run/build/folks/folks/individual.vala"
				_tmp118_ = _p_index;
#line 2092 "/run/build/folks/folks/individual.vala"
				_tmp119_ = _p_size;
#line 2092 "/run/build/folks/folks/individual.vala"
				if (!(_tmp118_ < _tmp119_)) {
#line 2092 "/run/build/folks/folks/individual.vala"
					break;
#line 9944 "individual.c"
				}
#line 2092 "/run/build/folks/folks/individual.vala"
				_tmp120_ = _p_list;
#line 2092 "/run/build/folks/folks/individual.vala"
				_tmp121_ = _p_index;
#line 2092 "/run/build/folks/folks/individual.vala"
				_tmp122_ = folks_small_set_get (_tmp120_, _tmp121_);
#line 2092 "/run/build/folks/folks/individual.vala"
				_tmp123_ = _g_object_ref0 ((FolksPersona*) _tmp122_);
#line 2092 "/run/build/folks/folks/individual.vala"
				p = _tmp123_;
#line 2094 "/run/build/folks/folks/individual.vala"
				_tmp124_ = new_display_name;
#line 2094 "/run/build/folks/folks/individual.vala"
				if (g_strcmp0 (_tmp124_, "") != 0) {
#line 2096 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (p);
#line 2096 "/run/build/folks/folks/individual.vala"
					break;
#line 9964 "individual.c"
				}
#line 2099 "/run/build/folks/folks/individual.vala"
				_tmp125_ = p;
#line 2099 "/run/build/folks/folks/individual.vala"
				_tmp126_ = _folks_individual_look_up_postal_address_for_display_name (self, _tmp125_);
#line 2099 "/run/build/folks/folks/individual.vala"
				_g_free0 (new_display_name);
#line 2099 "/run/build/folks/folks/individual.vala"
				new_display_name = _tmp126_;
#line 2092 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 9976 "individual.c"
			}
#line 2092 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_p_list);
#line 9980 "individual.c"
		}
	}
#line 2105 "/run/build/folks/folks/individual.vala"
	_tmp127_ = new_display_name;
#line 2105 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp127_, "") == 0) {
#line 9987 "individual.c"
		gchar* _tmp128_;
#line 2110 "/run/build/folks/folks/individual.vala"
		_tmp128_ = g_strdup (_ ("Unnamed Person"));
#line 2110 "/run/build/folks/folks/individual.vala"
		_g_free0 (new_display_name);
#line 2110 "/run/build/folks/folks/individual.vala"
		new_display_name = _tmp128_;
#line 9995 "individual.c"
	}
#line 2113 "/run/build/folks/folks/individual.vala"
	_tmp129_ = new_display_name;
#line 2113 "/run/build/folks/folks/individual.vala"
	_tmp130_ = self->priv->_display_name;
#line 2113 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp129_, _tmp130_) != 0) {
#line 10003 "individual.c"
		const gchar* _tmp131_;
		gchar* _tmp132_;
		const gchar* _tmp133_;
#line 2115 "/run/build/folks/folks/individual.vala"
		_tmp131_ = new_display_name;
#line 2115 "/run/build/folks/folks/individual.vala"
		_tmp132_ = g_strdup (_tmp131_);
#line 2115 "/run/build/folks/folks/individual.vala"
		_g_free0 (self->priv->_display_name);
#line 2115 "/run/build/folks/folks/individual.vala"
		self->priv->_display_name = _tmp132_;
#line 2116 "/run/build/folks/folks/individual.vala"
		_tmp133_ = new_display_name;
#line 2116 "/run/build/folks/folks/individual.vala"
		g_debug ("individual.vala:2116: Setting display name ‘%s’", _tmp133_);
#line 2117 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "display-name");
#line 10021 "individual.c"
	}
#line 1985 "/run/build/folks/folks/individual.vala"
	_g_free0 (new_display_name);
#line 1985 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (primary_persona);
#line 10027 "individual.c"
}


static gchar*
string_strip (const gchar* self)
{
	gchar* result = NULL;
	gchar* _result_ = NULL;
	gchar* _tmp0_;
	const gchar* _tmp1_;
#line 1304 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_return_val_if_fail (self != NULL, NULL);
#line 1305 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp0_ = g_strdup (self);
#line 1305 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_result_ = _tmp0_;
#line 1306 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	_tmp1_ = _result_;
#line 1306 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	g_strstrip (_tmp1_);
#line 1307 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	result = _result_;
#line 1307 "/app/share/vala-0.40/vapi/glib-2.0.vapi"
	return result;
#line 10052 "individual.c"
}


static gboolean
__lambda7_ (FolksIndividual* self,
            FolksPersona* p)
{
	gboolean result = FALSE;
	gchar* alias = NULL;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gboolean _tmp5_;
#line 2123 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 2125 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_alias_details_get_alias (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_ALIAS_DETAILS, FolksAliasDetails));
#line 2125 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2125 "/run/build/folks/folks/individual.vala"
	_tmp2_ = g_strdup (_tmp1_);
#line 2125 "/run/build/folks/folks/individual.vala"
	alias = _tmp2_;
#line 2126 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (alias != NULL, FALSE);
#line 2128 "/run/build/folks/folks/individual.vala"
	_tmp3_ = string_strip (alias);
#line 2128 "/run/build/folks/folks/individual.vala"
	_tmp4_ = _tmp3_;
#line 2128 "/run/build/folks/folks/individual.vala"
	_tmp5_ = g_strcmp0 (_tmp4_, "") != 0;
#line 2128 "/run/build/folks/folks/individual.vala"
	_g_free0 (_tmp4_);
#line 2128 "/run/build/folks/folks/individual.vala"
	result = _tmp5_;
#line 2128 "/run/build/folks/folks/individual.vala"
	_g_free0 (alias);
#line 2128 "/run/build/folks/folks/individual.vala"
	return result;
#line 10094 "individual.c"
}


static gboolean
___lambda7__folks_individual_property_filter (FolksPersona* persona,
                                              gpointer self)
{
	gboolean result;
	result = __lambda7_ ((FolksIndividual*) self, persona);
#line 2123 "/run/build/folks/folks/individual.vala"
	return result;
#line 10106 "individual.c"
}


static gint
__lambda8_ (FolksPersona* a,
            FolksPersona* b)
{
	gint result = 0;
	gchar* a_alias = NULL;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* b_alias = NULL;
	const gchar* _tmp3_;
	const gchar* _tmp4_;
	gchar* _tmp5_;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	gint _tmp8_ = 0;
	const gchar* _tmp9_;
	gchar* _tmp10_;
	gchar* _tmp11_;
	gboolean _tmp12_;
	gint a_is_empty = 0;
	gint _tmp13_ = 0;
	const gchar* _tmp14_;
	gchar* _tmp15_;
	gchar* _tmp16_;
	gboolean _tmp17_;
	gint b_is_empty = 0;
	gint _tmp18_ = 0;
	const gchar* _tmp19_;
	const gchar* _tmp20_;
	const gchar* _tmp21_;
	gint a_is_display_id = 0;
	gint _tmp22_ = 0;
	const gchar* _tmp23_;
	const gchar* _tmp24_;
	const gchar* _tmp25_;
	gint b_is_display_id = 0;
	gint _tmp26_;
	gint _tmp27_;
	gint _tmp28_;
#line 2129 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 2129 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 2131 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_alias_details_get_alias (G_TYPE_CHECK_INSTANCE_CAST (a, FOLKS_TYPE_ALIAS_DETAILS, FolksAliasDetails));
#line 2131 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2131 "/run/build/folks/folks/individual.vala"
	_tmp2_ = g_strdup (_tmp1_);
#line 2131 "/run/build/folks/folks/individual.vala"
	a_alias = _tmp2_;
#line 2132 "/run/build/folks/folks/individual.vala"
	_tmp3_ = folks_alias_details_get_alias (G_TYPE_CHECK_INSTANCE_CAST (b, FOLKS_TYPE_ALIAS_DETAILS, FolksAliasDetails));
#line 2132 "/run/build/folks/folks/individual.vala"
	_tmp4_ = _tmp3_;
#line 2132 "/run/build/folks/folks/individual.vala"
	_tmp5_ = g_strdup (_tmp4_);
#line 2132 "/run/build/folks/folks/individual.vala"
	b_alias = _tmp5_;
#line 2134 "/run/build/folks/folks/individual.vala"
	_tmp6_ = a_alias;
#line 2134 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (_tmp6_ != NULL, 0);
#line 2135 "/run/build/folks/folks/individual.vala"
	_tmp7_ = b_alias;
#line 2135 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (_tmp7_ != NULL, 0);
#line 2137 "/run/build/folks/folks/individual.vala"
	_tmp9_ = a_alias;
#line 2137 "/run/build/folks/folks/individual.vala"
	_tmp10_ = string_strip (_tmp9_);
#line 2137 "/run/build/folks/folks/individual.vala"
	_tmp11_ = _tmp10_;
#line 2137 "/run/build/folks/folks/individual.vala"
	_tmp12_ = g_strcmp0 (_tmp11_, "") == 0;
#line 2137 "/run/build/folks/folks/individual.vala"
	_g_free0 (_tmp11_);
#line 2137 "/run/build/folks/folks/individual.vala"
	if (_tmp12_) {
#line 2137 "/run/build/folks/folks/individual.vala"
		_tmp8_ = 1;
#line 10192 "individual.c"
	} else {
#line 2137 "/run/build/folks/folks/individual.vala"
		_tmp8_ = 0;
#line 10196 "individual.c"
	}
#line 2137 "/run/build/folks/folks/individual.vala"
	a_is_empty = _tmp8_;
#line 2138 "/run/build/folks/folks/individual.vala"
	_tmp14_ = b_alias;
#line 2138 "/run/build/folks/folks/individual.vala"
	_tmp15_ = string_strip (_tmp14_);
#line 2138 "/run/build/folks/folks/individual.vala"
	_tmp16_ = _tmp15_;
#line 2138 "/run/build/folks/folks/individual.vala"
	_tmp17_ = g_strcmp0 (_tmp16_, "") == 0;
#line 2138 "/run/build/folks/folks/individual.vala"
	_g_free0 (_tmp16_);
#line 2138 "/run/build/folks/folks/individual.vala"
	if (_tmp17_) {
#line 2138 "/run/build/folks/folks/individual.vala"
		_tmp13_ = 1;
#line 10214 "individual.c"
	} else {
#line 2138 "/run/build/folks/folks/individual.vala"
		_tmp13_ = 0;
#line 10218 "individual.c"
	}
#line 2138 "/run/build/folks/folks/individual.vala"
	b_is_empty = _tmp13_;
#line 2144 "/run/build/folks/folks/individual.vala"
	_tmp19_ = a_alias;
#line 2144 "/run/build/folks/folks/individual.vala"
	_tmp20_ = folks_persona_get_display_id (a);
#line 2144 "/run/build/folks/folks/individual.vala"
	_tmp21_ = _tmp20_;
#line 2144 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp19_, _tmp21_) == 0) {
#line 2144 "/run/build/folks/folks/individual.vala"
		_tmp18_ = 1;
#line 10232 "individual.c"
	} else {
#line 2144 "/run/build/folks/folks/individual.vala"
		_tmp18_ = 0;
#line 10236 "individual.c"
	}
#line 2144 "/run/build/folks/folks/individual.vala"
	a_is_display_id = _tmp18_;
#line 2145 "/run/build/folks/folks/individual.vala"
	_tmp23_ = b_alias;
#line 2145 "/run/build/folks/folks/individual.vala"
	_tmp24_ = folks_persona_get_display_id (b);
#line 2145 "/run/build/folks/folks/individual.vala"
	_tmp25_ = _tmp24_;
#line 2145 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp23_, _tmp25_) == 0) {
#line 2145 "/run/build/folks/folks/individual.vala"
		_tmp22_ = 1;
#line 10250 "individual.c"
	} else {
#line 2145 "/run/build/folks/folks/individual.vala"
		_tmp22_ = 0;
#line 10254 "individual.c"
	}
#line 2145 "/run/build/folks/folks/individual.vala"
	b_is_display_id = _tmp22_;
#line 2147 "/run/build/folks/folks/individual.vala"
	_tmp26_ = b_is_empty;
#line 2147 "/run/build/folks/folks/individual.vala"
	_tmp27_ = a_is_empty;
#line 2147 "/run/build/folks/folks/individual.vala"
	_tmp28_ = a_is_display_id;
#line 2147 "/run/build/folks/folks/individual.vala"
	result = (_tmp26_ + b_is_display_id) - (_tmp27_ + _tmp28_);
#line 2147 "/run/build/folks/folks/individual.vala"
	_g_free0 (b_alias);
#line 2147 "/run/build/folks/folks/individual.vala"
	_g_free0 (a_alias);
#line 2147 "/run/build/folks/folks/individual.vala"
	return result;
#line 10272 "individual.c"
}


static gint
___lambda8__gcompare_func (gconstpointer a,
                           gconstpointer b)
{
	gint result;
	result = __lambda8_ ((FolksPersona*) a, (FolksPersona*) b);
#line 2123 "/run/build/folks/folks/individual.vala"
	return result;
#line 10284 "individual.c"
}


static void
__lambda9_ (FolksIndividual* self,
            FolksPersona* p)
{
	gchar* alias = NULL;
	gchar* _tmp0_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
#line 2151 "/run/build/folks/folks/individual.vala"
	_tmp0_ = g_strdup ("");
#line 2151 "/run/build/folks/folks/individual.vala"
	alias = _tmp0_;
#line 2153 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 10302 "individual.c"
		const gchar* _tmp1_;
		const gchar* _tmp2_;
		gchar* _tmp3_;
#line 2155 "/run/build/folks/folks/individual.vala"
		_tmp1_ = folks_alias_details_get_alias (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_ALIAS_DETAILS, FolksAliasDetails));
#line 2155 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _tmp1_;
#line 2155 "/run/build/folks/folks/individual.vala"
		_tmp3_ = string_strip (_tmp2_);
#line 2155 "/run/build/folks/folks/individual.vala"
		_g_free0 (alias);
#line 2155 "/run/build/folks/folks/individual.vala"
		alias = _tmp3_;
#line 10316 "individual.c"
	}
#line 2162 "/run/build/folks/folks/individual.vala"
	_tmp4_ = self->priv->_alias;
#line 2162 "/run/build/folks/folks/individual.vala"
	_tmp5_ = alias;
#line 2162 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp4_, _tmp5_) != 0) {
#line 10324 "individual.c"
		const gchar* _tmp6_;
		gchar* _tmp7_;
		const gchar* _tmp8_;
#line 2164 "/run/build/folks/folks/individual.vala"
		_tmp6_ = alias;
#line 2164 "/run/build/folks/folks/individual.vala"
		_tmp7_ = g_strdup (_tmp6_);
#line 2164 "/run/build/folks/folks/individual.vala"
		_g_free0 (self->priv->_alias);
#line 2164 "/run/build/folks/folks/individual.vala"
		self->priv->_alias = _tmp7_;
#line 2165 "/run/build/folks/folks/individual.vala"
		_tmp8_ = alias;
#line 2165 "/run/build/folks/folks/individual.vala"
		g_debug ("individual.vala:2165: Setting alias ‘%s’", _tmp8_);
#line 2166 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "alias");
#line 2168 "/run/build/folks/folks/individual.vala"
		_folks_individual_update_display_name (self);
#line 10344 "individual.c"
	}
#line 2149 "/run/build/folks/folks/individual.vala"
	_g_free0 (alias);
#line 10348 "individual.c"
}


static void
___lambda9__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                            gpointer self)
{
#line 2123 "/run/build/folks/folks/individual.vala"
	__lambda9_ ((FolksIndividual*) self, chosen_persona);
#line 10358 "individual.c"
}


static void
_folks_individual_update_alias (FolksIndividual* self)
{
#line 2121 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2123 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_ALIAS_DETAILS, ___lambda7__folks_individual_property_filter, self, ___lambda8__gcompare_func, "alias", ___lambda9__folks_individual_single_valued_property_setter, self);
#line 10369 "individual.c"
}


static gboolean
__lambda10_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	GLoadableIcon* _tmp0_;
	GLoadableIcon* _tmp1_;
#line 2175 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 2177 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_avatar_details_get_avatar (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_AVATAR_DETAILS, FolksAvatarDetails));
#line 2177 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2177 "/run/build/folks/folks/individual.vala"
	result = _tmp1_ != NULL;
#line 2177 "/run/build/folks/folks/individual.vala"
	return result;
#line 10390 "individual.c"
}


static gboolean
___lambda10__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda10_ ((FolksIndividual*) self, persona);
#line 2175 "/run/build/folks/folks/individual.vala"
	return result;
#line 10402 "individual.c"
}


static gint
__lambda11_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
#line 2178 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 2178 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 2181 "/run/build/folks/folks/individual.vala"
	result = 0;
#line 2181 "/run/build/folks/folks/individual.vala"
	return result;
#line 10419 "individual.c"
}


static gint
___lambda11__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda11_ ((FolksPersona*) a, (FolksPersona*) b);
#line 2175 "/run/build/folks/folks/individual.vala"
	return result;
#line 10431 "individual.c"
}


static void
__lambda12_ (FolksIndividual* self,
             FolksPersona* p)
{
	GLoadableIcon* avatar = NULL;
	gboolean _tmp3_ = FALSE;
	gboolean _tmp4_ = FALSE;
	GLoadableIcon* _tmp5_;
#line 2184 "/run/build/folks/folks/individual.vala"
	avatar = NULL;
#line 2186 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 10447 "individual.c"
		GLoadableIcon* _tmp0_;
		GLoadableIcon* _tmp1_;
		GLoadableIcon* _tmp2_;
#line 2188 "/run/build/folks/folks/individual.vala"
		_tmp0_ = folks_avatar_details_get_avatar (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_AVATAR_DETAILS, FolksAvatarDetails));
#line 2188 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp0_;
#line 2188 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2188 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (avatar);
#line 2188 "/run/build/folks/folks/individual.vala"
		avatar = _tmp2_;
#line 10461 "individual.c"
	}
#line 2192 "/run/build/folks/folks/individual.vala"
	_tmp5_ = self->priv->_avatar;
#line 2192 "/run/build/folks/folks/individual.vala"
	if (_tmp5_ == NULL) {
#line 10467 "individual.c"
		GLoadableIcon* _tmp6_;
#line 2192 "/run/build/folks/folks/individual.vala"
		_tmp6_ = avatar;
#line 2192 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _tmp6_ != NULL;
#line 10473 "individual.c"
	} else {
#line 2192 "/run/build/folks/folks/individual.vala"
		_tmp4_ = FALSE;
#line 10477 "individual.c"
	}
#line 2192 "/run/build/folks/folks/individual.vala"
	if (_tmp4_) {
#line 2192 "/run/build/folks/folks/individual.vala"
		_tmp3_ = TRUE;
#line 10483 "individual.c"
	} else {
		gboolean _tmp7_ = FALSE;
		GLoadableIcon* _tmp8_;
#line 2193 "/run/build/folks/folks/individual.vala"
		_tmp8_ = self->priv->_avatar;
#line 2193 "/run/build/folks/folks/individual.vala"
		if (_tmp8_ != NULL) {
#line 10491 "individual.c"
			gboolean _tmp9_ = FALSE;
			GLoadableIcon* _tmp10_;
#line 2194 "/run/build/folks/folks/individual.vala"
			_tmp10_ = avatar;
#line 2194 "/run/build/folks/folks/individual.vala"
			if (_tmp10_ == NULL) {
#line 2194 "/run/build/folks/folks/individual.vala"
				_tmp9_ = TRUE;
#line 10500 "individual.c"
			} else {
				GLoadableIcon* _tmp11_;
				GLoadableIcon* _tmp12_;
#line 2194 "/run/build/folks/folks/individual.vala"
				_tmp11_ = self->priv->_avatar;
#line 2194 "/run/build/folks/folks/individual.vala"
				_tmp12_ = avatar;
#line 2194 "/run/build/folks/folks/individual.vala"
				_tmp9_ = !g_icon_equal ((GIcon*) G_TYPE_CHECK_INSTANCE_CAST (_tmp11_, g_loadable_icon_get_type (), GLoadableIcon), (GIcon*) _tmp12_);
#line 10510 "individual.c"
			}
#line 2194 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _tmp9_;
#line 10514 "individual.c"
		} else {
#line 2193 "/run/build/folks/folks/individual.vala"
			_tmp7_ = FALSE;
#line 10518 "individual.c"
		}
#line 2193 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _tmp7_;
#line 10522 "individual.c"
	}
#line 2192 "/run/build/folks/folks/individual.vala"
	if (_tmp3_) {
#line 10526 "individual.c"
		GLoadableIcon* _tmp13_;
		GLoadableIcon* _tmp14_;
#line 2196 "/run/build/folks/folks/individual.vala"
		_tmp13_ = avatar;
#line 2196 "/run/build/folks/folks/individual.vala"
		_tmp14_ = _g_object_ref0 (_tmp13_);
#line 2196 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_avatar);
#line 2196 "/run/build/folks/folks/individual.vala"
		self->priv->_avatar = _tmp14_;
#line 2197 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "avatar");
#line 10539 "individual.c"
	}
#line 2182 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (avatar);
#line 10543 "individual.c"
}


static void
___lambda12__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 2175 "/run/build/folks/folks/individual.vala"
	__lambda12_ ((FolksIndividual*) self, chosen_persona);
#line 10553 "individual.c"
}


static void
_folks_individual_update_avatar (FolksIndividual* self)
{
#line 2173 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2175 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_AVATAR_DETAILS, ___lambda10__folks_individual_property_filter, self, ___lambda11__gcompare_func, "avatar", ___lambda12__folks_individual_single_valued_property_setter, self);
#line 10564 "individual.c"
}


static void
_folks_individual_update_trust_level (FolksIndividual* self)
{
	FolksTrustLevel trust_level = 0;
	FolksTrustLevel _tmp21_;
	FolksTrustLevel _tmp22_;
#line 2202 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2204 "/run/build/folks/folks/individual.vala"
	trust_level = FOLKS_TRUST_LEVEL_PERSONAS;
#line 10578 "individual.c"
	{
		FolksSmallSet* _p_list = NULL;
		FolksSmallSet* _tmp0_;
		FolksSmallSet* _tmp1_;
		gint _p_size = 0;
		FolksSmallSet* _tmp2_;
		gint _tmp3_;
		gint _tmp4_;
		gint _p_index = 0;
#line 2206 "/run/build/folks/folks/individual.vala"
		_tmp0_ = self->priv->_persona_set;
#line 2206 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _g_object_ref0 (_tmp0_);
#line 2206 "/run/build/folks/folks/individual.vala"
		_p_list = _tmp1_;
#line 2206 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _p_list;
#line 2206 "/run/build/folks/folks/individual.vala"
		_tmp3_ = gee_collection_get_size ((GeeCollection*) _tmp2_);
#line 2206 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _tmp3_;
#line 2206 "/run/build/folks/folks/individual.vala"
		_p_size = _tmp4_;
#line 2206 "/run/build/folks/folks/individual.vala"
		_p_index = -1;
#line 2206 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 10606 "individual.c"
			gint _tmp5_;
			gint _tmp6_;
			gint _tmp7_;
			FolksPersona* p = NULL;
			FolksSmallSet* _tmp8_;
			gint _tmp9_;
			gconstpointer _tmp10_;
			FolksPersona* _tmp11_;
			gboolean _tmp12_ = FALSE;
			FolksPersona* _tmp13_;
			gboolean _tmp14_;
			gboolean _tmp15_;
#line 2206 "/run/build/folks/folks/individual.vala"
			_tmp5_ = _p_index;
#line 2206 "/run/build/folks/folks/individual.vala"
			_p_index = _tmp5_ + 1;
#line 2206 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _p_index;
#line 2206 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _p_size;
#line 2206 "/run/build/folks/folks/individual.vala"
			if (!(_tmp6_ < _tmp7_)) {
#line 2206 "/run/build/folks/folks/individual.vala"
				break;
#line 10631 "individual.c"
			}
#line 2206 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _p_list;
#line 2206 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _p_index;
#line 2206 "/run/build/folks/folks/individual.vala"
			_tmp10_ = folks_small_set_get (_tmp8_, _tmp9_);
#line 2206 "/run/build/folks/folks/individual.vala"
			_tmp11_ = _g_object_ref0 ((FolksPersona*) _tmp10_);
#line 2206 "/run/build/folks/folks/individual.vala"
			p = _tmp11_;
#line 2208 "/run/build/folks/folks/individual.vala"
			_tmp13_ = p;
#line 2208 "/run/build/folks/folks/individual.vala"
			_tmp14_ = folks_persona_get_is_user (_tmp13_);
#line 2208 "/run/build/folks/folks/individual.vala"
			_tmp15_ = _tmp14_;
#line 2208 "/run/build/folks/folks/individual.vala"
			if (_tmp15_ == FALSE) {
#line 10651 "individual.c"
				FolksPersona* _tmp16_;
				FolksPersonaStore* _tmp17_;
				FolksPersonaStore* _tmp18_;
				FolksPersonaStoreTrust _tmp19_;
				FolksPersonaStoreTrust _tmp20_;
#line 2209 "/run/build/folks/folks/individual.vala"
				_tmp16_ = p;
#line 2209 "/run/build/folks/folks/individual.vala"
				_tmp17_ = folks_persona_get_store (_tmp16_);
#line 2209 "/run/build/folks/folks/individual.vala"
				_tmp18_ = _tmp17_;
#line 2209 "/run/build/folks/folks/individual.vala"
				_tmp19_ = folks_persona_store_get_trust_level (_tmp18_);
#line 2209 "/run/build/folks/folks/individual.vala"
				_tmp20_ = _tmp19_;
#line 2209 "/run/build/folks/folks/individual.vala"
				_tmp12_ = _tmp20_ == FOLKS_PERSONA_STORE_TRUST_NONE;
#line 10669 "individual.c"
			} else {
#line 2208 "/run/build/folks/folks/individual.vala"
				_tmp12_ = FALSE;
#line 10673 "individual.c"
			}
#line 2208 "/run/build/folks/folks/individual.vala"
			if (_tmp12_) {
#line 2210 "/run/build/folks/folks/individual.vala"
				trust_level = FOLKS_TRUST_LEVEL_NONE;
#line 10679 "individual.c"
			}
#line 2206 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 10683 "individual.c"
		}
#line 2206 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_list);
#line 10687 "individual.c"
	}
#line 2214 "/run/build/folks/folks/individual.vala"
	_tmp21_ = self->priv->_trust_level;
#line 2214 "/run/build/folks/folks/individual.vala"
	_tmp22_ = trust_level;
#line 2214 "/run/build/folks/folks/individual.vala"
	if (_tmp21_ != _tmp22_) {
#line 10695 "individual.c"
		FolksTrustLevel _tmp23_;
#line 2215 "/run/build/folks/folks/individual.vala"
		_tmp23_ = trust_level;
#line 2215 "/run/build/folks/folks/individual.vala"
		folks_individual_set_trust_level (self, _tmp23_);
#line 10701 "individual.c"
	}
}


static gboolean
__lambda16_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	GeeHashMultiMap* _tmp0_;
#line 2221 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_im_addresses;
#line 2221 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2221 "/run/build/folks/folks/individual.vala"
	return result;
#line 10717 "individual.c"
}


static gboolean
___lambda16__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda16_ ((FolksIndividual*) self);
#line 2220 "/run/build/folks/folks/individual.vala"
	return result;
#line 10728 "individual.c"
}


static guint
_folks_abstract_field_details_hash_static_gee_hash_data_func (gconstpointer v,
                                                              gpointer self)
{
	guint result;
	result = folks_abstract_field_details_hash_static ((FolksAbstractFieldDetails*) v);
#line 2224 "/run/build/folks/folks/individual.vala"
	return result;
#line 10740 "individual.c"
}


static gboolean
_folks_abstract_field_details_equal_static_gee_equal_data_func (gconstpointer a,
                                                                gconstpointer b,
                                                                gpointer self)
{
	gboolean result;
	result = folks_abstract_field_details_equal_static ((FolksAbstractFieldDetails*) a, (FolksAbstractFieldDetails*) b);
#line 2224 "/run/build/folks/folks/individual.vala"
	return result;
#line 10753 "individual.c"
}


static void
__lambda17_ (FolksIndividual* self)
{
	GeeHashMultiMap* _tmp0_;
#line 2224 "/run/build/folks/folks/individual.vala"
	_tmp0_ = gee_hash_multi_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_IM_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2224 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_im_addresses);
#line 2224 "/run/build/folks/folks/individual.vala"
	self->priv->_im_addresses = _tmp0_;
#line 10767 "individual.c"
}


static void
___lambda17__folks_individual_collection_creator (gpointer self)
{
#line 2220 "/run/build/folks/folks/individual.vala"
	__lambda17_ ((FolksIndividual*) self);
#line 10776 "individual.c"
}


static gboolean
__lambda18_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	GeeHashMultiMap* new_im_addresses = NULL;
	GeeHashMultiMap* _tmp0_;
	GeeHashMultiMap* _tmp28_;
	GeeHashMultiMap* _tmp29_;
#line 2230 "/run/build/folks/folks/individual.vala"
	_tmp0_ = gee_hash_multi_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_IM_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2230 "/run/build/folks/folks/individual.vala"
	new_im_addresses = _tmp0_;
#line 10792 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 2234 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 2234 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2234 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 2234 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 2234 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 2234 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 2234 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 2234 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2234 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 10820 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksImDetails* im_details = NULL;
			FolksPersona* _tmp13_;
			FolksImDetails* _tmp14_;
			FolksImDetails* _tmp15_;
#line 2234 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 2234 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 2234 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2234 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 2234 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 2234 "/run/build/folks/folks/individual.vala"
				break;
#line 10845 "individual.c"
			}
#line 2234 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 2234 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 2234 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 2234 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 2234 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 2237 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 2237 "/run/build/folks/folks/individual.vala"
			_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_IM_DETAILS) ? ((FolksImDetails*) _tmp13_) : NULL);
#line 2237 "/run/build/folks/folks/individual.vala"
			im_details = _tmp14_;
#line 2238 "/run/build/folks/folks/individual.vala"
			_tmp15_ = im_details;
#line 2238 "/run/build/folks/folks/individual.vala"
			if (_tmp15_ != NULL) {
#line 10867 "individual.c"
				GeeMapIterator* iter = NULL;
				FolksImDetails* _tmp16_;
				GeeMultiMap* _tmp17_;
				GeeMultiMap* _tmp18_;
				GeeMapIterator* _tmp19_;
#line 2240 "/run/build/folks/folks/individual.vala"
				_tmp16_ = im_details;
#line 2240 "/run/build/folks/folks/individual.vala"
				_tmp17_ = folks_im_details_get_im_addresses (_tmp16_);
#line 2240 "/run/build/folks/folks/individual.vala"
				_tmp18_ = _tmp17_;
#line 2240 "/run/build/folks/folks/individual.vala"
				_tmp19_ = gee_multi_map_map_iterator (_tmp18_);
#line 2240 "/run/build/folks/folks/individual.vala"
				iter = _tmp19_;
#line 2242 "/run/build/folks/folks/individual.vala"
				while (TRUE) {
#line 10885 "individual.c"
					GeeMapIterator* _tmp20_;
					GeeHashMultiMap* _tmp21_;
					GeeMapIterator* _tmp22_;
					gpointer _tmp23_;
					gchar* _tmp24_;
					GeeMapIterator* _tmp25_;
					gpointer _tmp26_;
					FolksImFieldDetails* _tmp27_;
#line 2242 "/run/build/folks/folks/individual.vala"
					_tmp20_ = iter;
#line 2242 "/run/build/folks/folks/individual.vala"
					if (!gee_map_iterator_next (_tmp20_)) {
#line 2242 "/run/build/folks/folks/individual.vala"
						break;
#line 10900 "individual.c"
					}
#line 2243 "/run/build/folks/folks/individual.vala"
					_tmp21_ = new_im_addresses;
#line 2243 "/run/build/folks/folks/individual.vala"
					_tmp22_ = iter;
#line 2243 "/run/build/folks/folks/individual.vala"
					_tmp23_ = gee_map_iterator_get_key (_tmp22_);
#line 2243 "/run/build/folks/folks/individual.vala"
					_tmp24_ = (gchar*) _tmp23_;
#line 2243 "/run/build/folks/folks/individual.vala"
					_tmp25_ = iter;
#line 2243 "/run/build/folks/folks/individual.vala"
					_tmp26_ = gee_map_iterator_get_value (_tmp25_);
#line 2243 "/run/build/folks/folks/individual.vala"
					_tmp27_ = (FolksImFieldDetails*) _tmp26_;
#line 2243 "/run/build/folks/folks/individual.vala"
					gee_multi_map_set ((GeeMultiMap*) _tmp21_, _tmp24_, _tmp27_);
#line 2243 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_tmp27_);
#line 2243 "/run/build/folks/folks/individual.vala"
					_g_free0 (_tmp24_);
#line 10922 "individual.c"
				}
#line 2238 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (iter);
#line 10926 "individual.c"
			}
#line 2234 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (im_details);
#line 2234 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 10932 "individual.c"
		}
#line 2234 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 10936 "individual.c"
	}
#line 2248 "/run/build/folks/folks/individual.vala"
	_tmp28_ = new_im_addresses;
#line 2248 "/run/build/folks/folks/individual.vala"
	_tmp29_ = self->priv->_im_addresses;
#line 2248 "/run/build/folks/folks/individual.vala"
	if (!folks_utils_multi_map_str_afd_equal ((GeeMultiMap*) _tmp28_, (GeeMultiMap*) _tmp29_)) {
#line 10944 "individual.c"
		GeeHashMultiMap* _tmp30_;
		GeeHashMultiMap* _tmp31_;
#line 2251 "/run/build/folks/folks/individual.vala"
		_tmp30_ = new_im_addresses;
#line 2251 "/run/build/folks/folks/individual.vala"
		_tmp31_ = _g_object_ref0 (_tmp30_);
#line 2251 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_im_addresses);
#line 2251 "/run/build/folks/folks/individual.vala"
		self->priv->_im_addresses = _tmp31_;
#line 2252 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2252 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_im_addresses);
#line 2252 "/run/build/folks/folks/individual.vala"
		return result;
#line 10961 "individual.c"
	}
#line 2255 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2255 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_im_addresses);
#line 2255 "/run/build/folks/folks/individual.vala"
	return result;
#line 10969 "individual.c"
}


static gboolean
___lambda18__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda18_ ((FolksIndividual*) self);
#line 2220 "/run/build/folks/folks/individual.vala"
	return result;
#line 10980 "individual.c"
}


static void
_folks_individual_update_im_addresses (FolksIndividual* self,
                                       gboolean create_if_not_exist,
                                       gboolean emit_notification,
                                       gboolean force_update)
{
#line 2218 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2220 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "im-addresses", create_if_not_exist, ___lambda16__folks_individual_property_is_null, self, ___lambda17__folks_individual_collection_creator, self, ___lambda18__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 10994 "individual.c"
}


static gboolean
__lambda19_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	GeeHashMultiMap* _tmp0_;
#line 2263 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_web_service_addresses;
#line 2263 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2263 "/run/build/folks/folks/individual.vala"
	return result;
#line 11009 "individual.c"
}


static gboolean
___lambda19__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda19_ ((FolksIndividual*) self);
#line 2261 "/run/build/folks/folks/individual.vala"
	return result;
#line 11020 "individual.c"
}


static void
__lambda20_ (FolksIndividual* self)
{
	GeeHashMultiMap* _tmp0_;
#line 2266 "/run/build/folks/folks/individual.vala"
	_tmp0_ = gee_hash_multi_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_WEB_SERVICE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2266 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_web_service_addresses);
#line 2266 "/run/build/folks/folks/individual.vala"
	self->priv->_web_service_addresses = _tmp0_;
#line 11034 "individual.c"
}


static void
___lambda20__folks_individual_collection_creator (gpointer self)
{
#line 2261 "/run/build/folks/folks/individual.vala"
	__lambda20_ ((FolksIndividual*) self);
#line 11043 "individual.c"
}


static gboolean
__lambda21_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	GeeHashMultiMap* new_web_service_addresses = NULL;
	GeeHashMultiMap* _tmp0_;
	GeeHashMultiMap* _tmp28_;
	GeeHashMultiMap* _tmp29_;
#line 2273 "/run/build/folks/folks/individual.vala"
	_tmp0_ = gee_hash_multi_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_WEB_SERVICE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2273 "/run/build/folks/folks/individual.vala"
	new_web_service_addresses = _tmp0_;
#line 11059 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 2278 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 2278 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2278 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 2278 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 2278 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 2278 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 2278 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 2278 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2278 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 11087 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksWebServiceDetails* web_service_details = NULL;
			FolksPersona* _tmp13_;
			FolksWebServiceDetails* _tmp14_;
			FolksWebServiceDetails* _tmp15_;
#line 2278 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 2278 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 2278 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2278 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 2278 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 2278 "/run/build/folks/folks/individual.vala"
				break;
#line 11112 "individual.c"
			}
#line 2278 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 2278 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 2278 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 2278 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 2278 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 2281 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 2281 "/run/build/folks/folks/individual.vala"
			_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_WEB_SERVICE_DETAILS) ? ((FolksWebServiceDetails*) _tmp13_) : NULL);
#line 2281 "/run/build/folks/folks/individual.vala"
			web_service_details = _tmp14_;
#line 2282 "/run/build/folks/folks/individual.vala"
			_tmp15_ = web_service_details;
#line 2282 "/run/build/folks/folks/individual.vala"
			if (_tmp15_ != NULL) {
#line 11134 "individual.c"
				GeeMapIterator* iter = NULL;
				FolksWebServiceDetails* _tmp16_;
				GeeMultiMap* _tmp17_;
				GeeMultiMap* _tmp18_;
				GeeMapIterator* _tmp19_;
#line 2284 "/run/build/folks/folks/individual.vala"
				_tmp16_ = web_service_details;
#line 2284 "/run/build/folks/folks/individual.vala"
				_tmp17_ = folks_web_service_details_get_web_service_addresses (_tmp16_);
#line 2284 "/run/build/folks/folks/individual.vala"
				_tmp18_ = _tmp17_;
#line 2284 "/run/build/folks/folks/individual.vala"
				_tmp19_ = gee_multi_map_map_iterator (_tmp18_);
#line 2284 "/run/build/folks/folks/individual.vala"
				iter = _tmp19_;
#line 2286 "/run/build/folks/folks/individual.vala"
				while (TRUE) {
#line 11152 "individual.c"
					GeeMapIterator* _tmp20_;
					GeeHashMultiMap* _tmp21_;
					GeeMapIterator* _tmp22_;
					gpointer _tmp23_;
					gchar* _tmp24_;
					GeeMapIterator* _tmp25_;
					gpointer _tmp26_;
					FolksWebServiceFieldDetails* _tmp27_;
#line 2286 "/run/build/folks/folks/individual.vala"
					_tmp20_ = iter;
#line 2286 "/run/build/folks/folks/individual.vala"
					if (!gee_map_iterator_next (_tmp20_)) {
#line 2286 "/run/build/folks/folks/individual.vala"
						break;
#line 11167 "individual.c"
					}
#line 2287 "/run/build/folks/folks/individual.vala"
					_tmp21_ = new_web_service_addresses;
#line 2287 "/run/build/folks/folks/individual.vala"
					_tmp22_ = iter;
#line 2287 "/run/build/folks/folks/individual.vala"
					_tmp23_ = gee_map_iterator_get_key (_tmp22_);
#line 2287 "/run/build/folks/folks/individual.vala"
					_tmp24_ = (gchar*) _tmp23_;
#line 2287 "/run/build/folks/folks/individual.vala"
					_tmp25_ = iter;
#line 2287 "/run/build/folks/folks/individual.vala"
					_tmp26_ = gee_map_iterator_get_value (_tmp25_);
#line 2287 "/run/build/folks/folks/individual.vala"
					_tmp27_ = (FolksWebServiceFieldDetails*) _tmp26_;
#line 2287 "/run/build/folks/folks/individual.vala"
					gee_multi_map_set ((GeeMultiMap*) _tmp21_, _tmp24_, _tmp27_);
#line 2287 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_tmp27_);
#line 2287 "/run/build/folks/folks/individual.vala"
					_g_free0 (_tmp24_);
#line 11189 "individual.c"
				}
#line 2282 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (iter);
#line 11193 "individual.c"
			}
#line 2278 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (web_service_details);
#line 2278 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 11199 "individual.c"
		}
#line 2278 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 11203 "individual.c"
	}
#line 2292 "/run/build/folks/folks/individual.vala"
	_tmp28_ = new_web_service_addresses;
#line 2292 "/run/build/folks/folks/individual.vala"
	_tmp29_ = self->priv->_web_service_addresses;
#line 2292 "/run/build/folks/folks/individual.vala"
	if (!folks_utils_multi_map_str_afd_equal ((GeeMultiMap*) _tmp28_, (GeeMultiMap*) _tmp29_)) {
#line 11211 "individual.c"
		GeeHashMultiMap* _tmp30_;
		GeeHashMultiMap* _tmp31_;
#line 2295 "/run/build/folks/folks/individual.vala"
		_tmp30_ = new_web_service_addresses;
#line 2295 "/run/build/folks/folks/individual.vala"
		_tmp31_ = _g_object_ref0 (_tmp30_);
#line 2295 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_web_service_addresses);
#line 2295 "/run/build/folks/folks/individual.vala"
		self->priv->_web_service_addresses = _tmp31_;
#line 2296 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2296 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_web_service_addresses);
#line 2296 "/run/build/folks/folks/individual.vala"
		return result;
#line 11228 "individual.c"
	}
#line 2299 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2299 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_web_service_addresses);
#line 2299 "/run/build/folks/folks/individual.vala"
	return result;
#line 11236 "individual.c"
}


static gboolean
___lambda21__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda21_ ((FolksIndividual*) self);
#line 2261 "/run/build/folks/folks/individual.vala"
	return result;
#line 11247 "individual.c"
}


static void
_folks_individual_update_web_service_addresses (FolksIndividual* self,
                                                gboolean create_if_not_exist,
                                                gboolean emit_notification,
                                                gboolean force_update)
{
#line 2259 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2261 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "web-service-addresses", create_if_not_exist, ___lambda19__folks_individual_property_is_null, self, ___lambda20__folks_individual_collection_creator, self, ___lambda21__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 11261 "individual.c"
}


static void
__folks_individual_persona_notify_cb_g_object_notify (GObject* _sender,
                                                      GParamSpec* pspec,
                                                      gpointer self)
{
#line 2319 "/run/build/folks/folks/individual.vala"
	_folks_individual_persona_notify_cb ((FolksIndividual*) self, _sender, pspec);
#line 11272 "individual.c"
}


static void
__folks_individual_persona_group_changed_cb_folks_group_details_group_changed (FolksGroupDetails* _sender,
                                                                               const gchar* group,
                                                                               gboolean is_member,
                                                                               gpointer self)
{
#line 2323 "/run/build/folks/folks/individual.vala"
	_folks_individual_persona_group_changed_cb ((FolksIndividual*) self, group, is_member);
#line 11284 "individual.c"
}


static void
_folks_individual_connect_to_persona (FolksIndividual* self,
                                      FolksPersona* persona)
{
	gboolean _tmp0_ = FALSE;
	FolksIndividual* _tmp1_;
	FolksIndividual* _tmp2_;
#line 2305 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2305 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (persona != NULL);
#line 2307 "/run/build/folks/folks/individual.vala"
	_tmp1_ = folks_persona_get_individual (persona);
#line 2307 "/run/build/folks/folks/individual.vala"
	_tmp2_ = _tmp1_;
#line 2307 "/run/build/folks/folks/individual.vala"
	if (_tmp2_ != NULL) {
#line 11305 "individual.c"
		FolksIndividual* _tmp3_;
		FolksIndividual* _tmp4_;
#line 2307 "/run/build/folks/folks/individual.vala"
		_tmp3_ = folks_persona_get_individual (persona);
#line 2307 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _tmp3_;
#line 2307 "/run/build/folks/folks/individual.vala"
		_tmp0_ = _tmp4_ != self;
#line 11314 "individual.c"
	} else {
#line 2307 "/run/build/folks/folks/individual.vala"
		_tmp0_ = FALSE;
#line 11318 "individual.c"
	}
#line 2307 "/run/build/folks/folks/individual.vala"
	if (_tmp0_) {
#line 11322 "individual.c"
		FolksIndividual* _tmp5_;
		FolksIndividual* _tmp6_;
#line 2311 "/run/build/folks/folks/individual.vala"
		_tmp5_ = folks_persona_get_individual (persona);
#line 2311 "/run/build/folks/folks/individual.vala"
		_tmp6_ = _tmp5_;
#line 2311 "/run/build/folks/folks/individual.vala"
		_folks_individual_disconnect_from_persona (_tmp6_, persona, self);
#line 11331 "individual.c"
	}
#line 2314 "/run/build/folks/folks/individual.vala"
	folks_persona_set_individual (persona, self);
#line 2319 "/run/build/folks/folks/individual.vala"
	g_signal_connect_object ((GObject*) persona, "notify", (GCallback) __folks_individual_persona_notify_cb_g_object_notify, self, 0);
#line 2321 "/run/build/folks/folks/individual.vala"
	if (G_TYPE_CHECK_INSTANCE_TYPE (persona, FOLKS_TYPE_GROUP_DETAILS)) {
#line 2323 "/run/build/folks/folks/individual.vala"
		g_signal_connect_object (G_TYPE_CHECK_INSTANCE_CAST (persona, FOLKS_TYPE_GROUP_DETAILS, FolksGroupDetails), "group-changed", (GCallback) __folks_individual_persona_group_changed_cb_folks_group_details_group_changed, self, 0);
#line 11341 "individual.c"
	}
}


static gboolean
__lambda25_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	FolksStructuredName* name = NULL;
	FolksStructuredName* _tmp0_;
	FolksStructuredName* _tmp1_;
	FolksStructuredName* _tmp2_;
	gboolean _tmp3_ = FALSE;
	FolksStructuredName* _tmp4_;
#line 2330 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 2332 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_name_details_get_structured_name (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_NAME_DETAILS, FolksNameDetails));
#line 2332 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2332 "/run/build/folks/folks/individual.vala"
	_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2332 "/run/build/folks/folks/individual.vala"
	name = _tmp2_;
#line 2333 "/run/build/folks/folks/individual.vala"
	_tmp4_ = name;
#line 2333 "/run/build/folks/folks/individual.vala"
	if (_tmp4_ != NULL) {
#line 11371 "individual.c"
		FolksStructuredName* _tmp5_;
#line 2333 "/run/build/folks/folks/individual.vala"
		_tmp5_ = name;
#line 2333 "/run/build/folks/folks/individual.vala"
		_tmp3_ = !folks_structured_name_is_empty (G_TYPE_CHECK_INSTANCE_CAST (_tmp5_, FOLKS_TYPE_STRUCTURED_NAME, FolksStructuredName));
#line 11377 "individual.c"
	} else {
#line 2333 "/run/build/folks/folks/individual.vala"
		_tmp3_ = FALSE;
#line 11381 "individual.c"
	}
#line 2333 "/run/build/folks/folks/individual.vala"
	result = _tmp3_;
#line 2333 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (name);
#line 2333 "/run/build/folks/folks/individual.vala"
	return result;
#line 11389 "individual.c"
}


static gboolean
___lambda25__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda25_ ((FolksIndividual*) self, persona);
#line 2330 "/run/build/folks/folks/individual.vala"
	return result;
#line 11401 "individual.c"
}


static gint
__lambda26_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
#line 2334 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 2334 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 2337 "/run/build/folks/folks/individual.vala"
	result = 0;
#line 2337 "/run/build/folks/folks/individual.vala"
	return result;
#line 11418 "individual.c"
}


static gint
___lambda26__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda26_ ((FolksPersona*) a, (FolksPersona*) b);
#line 2330 "/run/build/folks/folks/individual.vala"
	return result;
#line 11430 "individual.c"
}


static void
__lambda27_ (FolksIndividual* self,
             FolksPersona* p)
{
	FolksStructuredName* name = NULL;
	gboolean _tmp6_ = FALSE;
	gboolean _tmp7_ = FALSE;
	FolksStructuredName* _tmp8_;
#line 2340 "/run/build/folks/folks/individual.vala"
	name = NULL;
#line 2342 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 11446 "individual.c"
		FolksStructuredName* _tmp0_;
		FolksStructuredName* _tmp1_;
		FolksStructuredName* _tmp2_;
		gboolean _tmp3_ = FALSE;
		FolksStructuredName* _tmp4_;
#line 2344 "/run/build/folks/folks/individual.vala"
		_tmp0_ = folks_name_details_get_structured_name (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_NAME_DETAILS, FolksNameDetails));
#line 2344 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp0_;
#line 2344 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2344 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (name);
#line 2344 "/run/build/folks/folks/individual.vala"
		name = _tmp2_;
#line 2346 "/run/build/folks/folks/individual.vala"
		_tmp4_ = name;
#line 2346 "/run/build/folks/folks/individual.vala"
		if (_tmp4_ != NULL) {
#line 11466 "individual.c"
			FolksStructuredName* _tmp5_;
#line 2346 "/run/build/folks/folks/individual.vala"
			_tmp5_ = name;
#line 2346 "/run/build/folks/folks/individual.vala"
			_tmp3_ = folks_structured_name_is_empty (G_TYPE_CHECK_INSTANCE_CAST (_tmp5_, FOLKS_TYPE_STRUCTURED_NAME, FolksStructuredName));
#line 11472 "individual.c"
		} else {
#line 2346 "/run/build/folks/folks/individual.vala"
			_tmp3_ = FALSE;
#line 11476 "individual.c"
		}
#line 2346 "/run/build/folks/folks/individual.vala"
		if (_tmp3_) {
#line 2348 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (name);
#line 2348 "/run/build/folks/folks/individual.vala"
			name = NULL;
#line 11484 "individual.c"
		}
	}
#line 2352 "/run/build/folks/folks/individual.vala"
	_tmp8_ = self->priv->_structured_name;
#line 2352 "/run/build/folks/folks/individual.vala"
	if (_tmp8_ == NULL) {
#line 11491 "individual.c"
		FolksStructuredName* _tmp9_;
#line 2352 "/run/build/folks/folks/individual.vala"
		_tmp9_ = name;
#line 2352 "/run/build/folks/folks/individual.vala"
		_tmp7_ = _tmp9_ != NULL;
#line 11497 "individual.c"
	} else {
#line 2352 "/run/build/folks/folks/individual.vala"
		_tmp7_ = FALSE;
#line 11501 "individual.c"
	}
#line 2352 "/run/build/folks/folks/individual.vala"
	if (_tmp7_) {
#line 2352 "/run/build/folks/folks/individual.vala"
		_tmp6_ = TRUE;
#line 11507 "individual.c"
	} else {
		gboolean _tmp10_ = FALSE;
		FolksStructuredName* _tmp11_;
#line 2353 "/run/build/folks/folks/individual.vala"
		_tmp11_ = self->priv->_structured_name;
#line 2353 "/run/build/folks/folks/individual.vala"
		if (_tmp11_ != NULL) {
#line 11515 "individual.c"
			gboolean _tmp12_ = FALSE;
			FolksStructuredName* _tmp13_;
#line 2354 "/run/build/folks/folks/individual.vala"
			_tmp13_ = name;
#line 2354 "/run/build/folks/folks/individual.vala"
			if (_tmp13_ == NULL) {
#line 2354 "/run/build/folks/folks/individual.vala"
				_tmp12_ = TRUE;
#line 11524 "individual.c"
			} else {
				FolksStructuredName* _tmp14_;
				FolksStructuredName* _tmp15_;
#line 2354 "/run/build/folks/folks/individual.vala"
				_tmp14_ = self->priv->_structured_name;
#line 2354 "/run/build/folks/folks/individual.vala"
				_tmp15_ = name;
#line 2354 "/run/build/folks/folks/individual.vala"
				_tmp12_ = !folks_structured_name_equal (G_TYPE_CHECK_INSTANCE_CAST (_tmp14_, FOLKS_TYPE_STRUCTURED_NAME, FolksStructuredName), G_TYPE_CHECK_INSTANCE_CAST (_tmp15_, FOLKS_TYPE_STRUCTURED_NAME, FolksStructuredName));
#line 11534 "individual.c"
			}
#line 2354 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _tmp12_;
#line 11538 "individual.c"
		} else {
#line 2353 "/run/build/folks/folks/individual.vala"
			_tmp10_ = FALSE;
#line 11542 "individual.c"
		}
#line 2353 "/run/build/folks/folks/individual.vala"
		_tmp6_ = _tmp10_;
#line 11546 "individual.c"
	}
#line 2352 "/run/build/folks/folks/individual.vala"
	if (_tmp6_) {
#line 11550 "individual.c"
		FolksStructuredName* _tmp16_;
		FolksStructuredName* _tmp17_;
#line 2356 "/run/build/folks/folks/individual.vala"
		_tmp16_ = name;
#line 2356 "/run/build/folks/folks/individual.vala"
		_tmp17_ = _g_object_ref0 (_tmp16_);
#line 2356 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_structured_name);
#line 2356 "/run/build/folks/folks/individual.vala"
		self->priv->_structured_name = _tmp17_;
#line 2357 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "structured-name");
#line 2359 "/run/build/folks/folks/individual.vala"
		_folks_individual_update_display_name (self);
#line 11565 "individual.c"
	}
#line 2338 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (name);
#line 11569 "individual.c"
}


static void
___lambda27__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 2330 "/run/build/folks/folks/individual.vala"
	__lambda27_ ((FolksIndividual*) self, chosen_persona);
#line 11579 "individual.c"
}


static void
_folks_individual_update_structured_name (FolksIndividual* self)
{
#line 2328 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2330 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_NAME_DETAILS, ___lambda25__folks_individual_property_filter, self, ___lambda26__gcompare_func, "structured-name", ___lambda27__folks_individual_single_valued_property_setter, self);
#line 11590 "individual.c"
}


static gboolean
__lambda28_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	gchar* name = NULL;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gboolean _tmp5_;
#line 2366 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 2368 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_name_details_get_full_name (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_NAME_DETAILS, FolksNameDetails));
#line 2368 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2368 "/run/build/folks/folks/individual.vala"
	_tmp2_ = g_strdup (_tmp1_);
#line 2368 "/run/build/folks/folks/individual.vala"
	name = _tmp2_;
#line 2369 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (name != NULL, FALSE);
#line 2371 "/run/build/folks/folks/individual.vala"
	_tmp3_ = string_strip (name);
#line 2371 "/run/build/folks/folks/individual.vala"
	_tmp4_ = _tmp3_;
#line 2371 "/run/build/folks/folks/individual.vala"
	_tmp5_ = g_strcmp0 (_tmp4_, "") != 0;
#line 2371 "/run/build/folks/folks/individual.vala"
	_g_free0 (_tmp4_);
#line 2371 "/run/build/folks/folks/individual.vala"
	result = _tmp5_;
#line 2371 "/run/build/folks/folks/individual.vala"
	_g_free0 (name);
#line 2371 "/run/build/folks/folks/individual.vala"
	return result;
#line 11632 "individual.c"
}


static gboolean
___lambda28__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda28_ ((FolksIndividual*) self, persona);
#line 2366 "/run/build/folks/folks/individual.vala"
	return result;
#line 11644 "individual.c"
}


static gint
__lambda29_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
#line 2372 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 2372 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 2375 "/run/build/folks/folks/individual.vala"
	result = 0;
#line 2375 "/run/build/folks/folks/individual.vala"
	return result;
#line 11661 "individual.c"
}


static gint
___lambda29__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda29_ ((FolksPersona*) a, (FolksPersona*) b);
#line 2366 "/run/build/folks/folks/individual.vala"
	return result;
#line 11673 "individual.c"
}


static void
__lambda30_ (FolksIndividual* self,
             FolksPersona* p)
{
	gchar* new_full_name = NULL;
	gchar* _tmp0_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
#line 2378 "/run/build/folks/folks/individual.vala"
	_tmp0_ = g_strdup ("");
#line 2378 "/run/build/folks/folks/individual.vala"
	new_full_name = _tmp0_;
#line 2380 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 11691 "individual.c"
		const gchar* _tmp1_;
		const gchar* _tmp2_;
		gchar* _tmp3_;
#line 2382 "/run/build/folks/folks/individual.vala"
		_tmp1_ = folks_name_details_get_full_name (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_NAME_DETAILS, FolksNameDetails));
#line 2382 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _tmp1_;
#line 2382 "/run/build/folks/folks/individual.vala"
		_tmp3_ = string_strip (_tmp2_);
#line 2382 "/run/build/folks/folks/individual.vala"
		_g_free0 (new_full_name);
#line 2382 "/run/build/folks/folks/individual.vala"
		new_full_name = _tmp3_;
#line 11705 "individual.c"
	}
#line 2385 "/run/build/folks/folks/individual.vala"
	_tmp4_ = new_full_name;
#line 2385 "/run/build/folks/folks/individual.vala"
	_tmp5_ = self->priv->_full_name;
#line 2385 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp4_, _tmp5_) != 0) {
#line 11713 "individual.c"
		const gchar* _tmp6_;
		gchar* _tmp7_;
#line 2387 "/run/build/folks/folks/individual.vala"
		_tmp6_ = new_full_name;
#line 2387 "/run/build/folks/folks/individual.vala"
		_tmp7_ = g_strdup (_tmp6_);
#line 2387 "/run/build/folks/folks/individual.vala"
		_g_free0 (self->priv->_full_name);
#line 2387 "/run/build/folks/folks/individual.vala"
		self->priv->_full_name = _tmp7_;
#line 2388 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "full-name");
#line 2390 "/run/build/folks/folks/individual.vala"
		_folks_individual_update_display_name (self);
#line 11728 "individual.c"
	}
#line 2376 "/run/build/folks/folks/individual.vala"
	_g_free0 (new_full_name);
#line 11732 "individual.c"
}


static void
___lambda30__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 2366 "/run/build/folks/folks/individual.vala"
	__lambda30_ ((FolksIndividual*) self, chosen_persona);
#line 11742 "individual.c"
}


static void
_folks_individual_update_full_name (FolksIndividual* self)
{
#line 2364 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2366 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_NAME_DETAILS, ___lambda28__folks_individual_property_filter, self, ___lambda29__gcompare_func, "full-name", ___lambda30__folks_individual_single_valued_property_setter, self);
#line 11753 "individual.c"
}


static gboolean
__lambda31_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	gchar* nickname = NULL;
	const gchar* _tmp0_;
	const gchar* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gboolean _tmp5_;
#line 2397 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 2399 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_name_details_get_nickname (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_NAME_DETAILS, FolksNameDetails));
#line 2399 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2399 "/run/build/folks/folks/individual.vala"
	_tmp2_ = g_strdup (_tmp1_);
#line 2399 "/run/build/folks/folks/individual.vala"
	nickname = _tmp2_;
#line 2400 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (nickname != NULL, FALSE);
#line 2402 "/run/build/folks/folks/individual.vala"
	_tmp3_ = string_strip (nickname);
#line 2402 "/run/build/folks/folks/individual.vala"
	_tmp4_ = _tmp3_;
#line 2402 "/run/build/folks/folks/individual.vala"
	_tmp5_ = g_strcmp0 (_tmp4_, "") != 0;
#line 2402 "/run/build/folks/folks/individual.vala"
	_g_free0 (_tmp4_);
#line 2402 "/run/build/folks/folks/individual.vala"
	result = _tmp5_;
#line 2402 "/run/build/folks/folks/individual.vala"
	_g_free0 (nickname);
#line 2402 "/run/build/folks/folks/individual.vala"
	return result;
#line 11795 "individual.c"
}


static gboolean
___lambda31__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda31_ ((FolksIndividual*) self, persona);
#line 2397 "/run/build/folks/folks/individual.vala"
	return result;
#line 11807 "individual.c"
}


static gint
__lambda32_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
#line 2403 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 2403 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 2406 "/run/build/folks/folks/individual.vala"
	result = 0;
#line 2406 "/run/build/folks/folks/individual.vala"
	return result;
#line 11824 "individual.c"
}


static gint
___lambda32__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda32_ ((FolksPersona*) a, (FolksPersona*) b);
#line 2397 "/run/build/folks/folks/individual.vala"
	return result;
#line 11836 "individual.c"
}


static void
__lambda33_ (FolksIndividual* self,
             FolksPersona* p)
{
	gchar* new_nickname = NULL;
	gchar* _tmp0_;
	const gchar* _tmp4_;
	const gchar* _tmp5_;
#line 2409 "/run/build/folks/folks/individual.vala"
	_tmp0_ = g_strdup ("");
#line 2409 "/run/build/folks/folks/individual.vala"
	new_nickname = _tmp0_;
#line 2411 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 11854 "individual.c"
		const gchar* _tmp1_;
		const gchar* _tmp2_;
		gchar* _tmp3_;
#line 2413 "/run/build/folks/folks/individual.vala"
		_tmp1_ = folks_name_details_get_nickname (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_NAME_DETAILS, FolksNameDetails));
#line 2413 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _tmp1_;
#line 2413 "/run/build/folks/folks/individual.vala"
		_tmp3_ = string_strip (_tmp2_);
#line 2413 "/run/build/folks/folks/individual.vala"
		_g_free0 (new_nickname);
#line 2413 "/run/build/folks/folks/individual.vala"
		new_nickname = _tmp3_;
#line 11868 "individual.c"
	}
#line 2416 "/run/build/folks/folks/individual.vala"
	_tmp4_ = new_nickname;
#line 2416 "/run/build/folks/folks/individual.vala"
	_tmp5_ = self->priv->_nickname;
#line 2416 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (_tmp4_, _tmp5_) != 0) {
#line 11876 "individual.c"
		const gchar* _tmp6_;
		gchar* _tmp7_;
#line 2418 "/run/build/folks/folks/individual.vala"
		_tmp6_ = new_nickname;
#line 2418 "/run/build/folks/folks/individual.vala"
		_tmp7_ = g_strdup (_tmp6_);
#line 2418 "/run/build/folks/folks/individual.vala"
		_g_free0 (self->priv->_nickname);
#line 2418 "/run/build/folks/folks/individual.vala"
		self->priv->_nickname = _tmp7_;
#line 2419 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "nickname");
#line 2421 "/run/build/folks/folks/individual.vala"
		_folks_individual_update_display_name (self);
#line 11891 "individual.c"
	}
#line 2407 "/run/build/folks/folks/individual.vala"
	_g_free0 (new_nickname);
#line 11895 "individual.c"
}


static void
___lambda33__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 2397 "/run/build/folks/folks/individual.vala"
	__lambda33_ ((FolksIndividual*) self, chosen_persona);
#line 11905 "individual.c"
}


static void
_folks_individual_update_nickname (FolksIndividual* self)
{
#line 2395 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2397 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_NAME_DETAILS, ___lambda31__folks_individual_property_filter, self, ___lambda32__gcompare_func, "nickname", ___lambda33__folks_individual_single_valued_property_setter, self);
#line 11916 "individual.c"
}


static void
_folks_individual_disconnect_from_persona (FolksIndividual* self,
                                           FolksPersona* persona,
                                           FolksIndividual* replacement_individual)
{
	guint _tmp0_;
	FolksIndividual* _tmp2_;
	FolksIndividual* _tmp3_;
#line 2426 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2426 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (persona != NULL);
#line 2429 "/run/build/folks/folks/individual.vala"
	g_signal_parse_name ("notify", G_TYPE_OBJECT, &_tmp0_, NULL, FALSE);
#line 2429 "/run/build/folks/folks/individual.vala"
	g_signal_handlers_disconnect_matched ((GObject*) persona, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp0_, 0, NULL, (GCallback) __folks_individual_persona_notify_cb_g_object_notify, self);
#line 2431 "/run/build/folks/folks/individual.vala"
	if (G_TYPE_CHECK_INSTANCE_TYPE (persona, FOLKS_TYPE_GROUP_DETAILS)) {
#line 11938 "individual.c"
		guint _tmp1_;
#line 2433 "/run/build/folks/folks/individual.vala"
		g_signal_parse_name ("group-changed", FOLKS_TYPE_GROUP_DETAILS, &_tmp1_, NULL, FALSE);
#line 2433 "/run/build/folks/folks/individual.vala"
		g_signal_handlers_disconnect_matched (G_TYPE_CHECK_INSTANCE_CAST (persona, FOLKS_TYPE_GROUP_DETAILS, FolksGroupDetails), G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp1_, 0, NULL, (GCallback) __folks_individual_persona_group_changed_cb_folks_group_details_group_changed, self);
#line 11944 "individual.c"
	}
#line 2445 "/run/build/folks/folks/individual.vala"
	_tmp2_ = folks_persona_get_individual (persona);
#line 2445 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 2445 "/run/build/folks/folks/individual.vala"
	if (_tmp3_ == self) {
#line 11952 "individual.c"
		gboolean _tmp4_ = FALSE;
#line 2451 "/run/build/folks/folks/individual.vala"
		if (replacement_individual != NULL) {
#line 11956 "individual.c"
			GeeSet* _tmp5_;
			GeeSet* _tmp6_;
#line 2452 "/run/build/folks/folks/individual.vala"
			_tmp5_ = folks_individual_get_personas (G_TYPE_CHECK_INSTANCE_CAST (replacement_individual, FOLKS_TYPE_INDIVIDUAL, FolksIndividual));
#line 2452 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _tmp5_;
#line 2452 "/run/build/folks/folks/individual.vala"
			_tmp4_ = gee_collection_contains ((GeeCollection*) _tmp6_, persona);
#line 11965 "individual.c"
		} else {
#line 2451 "/run/build/folks/folks/individual.vala"
			_tmp4_ = FALSE;
#line 11969 "individual.c"
		}
#line 2451 "/run/build/folks/folks/individual.vala"
		if (_tmp4_) {
#line 2454 "/run/build/folks/folks/individual.vala"
			folks_persona_set_individual (persona, replacement_individual);
#line 11975 "individual.c"
		} else {
#line 2458 "/run/build/folks/folks/individual.vala"
			folks_persona_set_individual (persona, NULL);
#line 11979 "individual.c"
		}
	}
}


static gboolean
__lambda34_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	FolksGender _tmp0_;
	FolksGender _tmp1_;
#line 2465 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 2467 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_gender_details_get_gender (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_GENDER_DETAILS, FolksGenderDetails));
#line 2467 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2467 "/run/build/folks/folks/individual.vala"
	result = _tmp1_ != FOLKS_GENDER_UNSPECIFIED;
#line 2467 "/run/build/folks/folks/individual.vala"
	return result;
#line 12002 "individual.c"
}


static gboolean
___lambda34__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda34_ ((FolksIndividual*) self, persona);
#line 2465 "/run/build/folks/folks/individual.vala"
	return result;
#line 12014 "individual.c"
}


static gint
__lambda35_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
#line 2468 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 2468 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 2473 "/run/build/folks/folks/individual.vala"
	result = 0;
#line 2473 "/run/build/folks/folks/individual.vala"
	return result;
#line 12031 "individual.c"
}


static gint
___lambda35__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda35_ ((FolksPersona*) a, (FolksPersona*) b);
#line 2465 "/run/build/folks/folks/individual.vala"
	return result;
#line 12043 "individual.c"
}


static void
__lambda36_ (FolksIndividual* self,
             FolksPersona* p)
{
	FolksGender new_gender = 0;
	FolksGender _tmp2_;
	FolksGender _tmp3_;
	FolksGender _tmp4_;
#line 2476 "/run/build/folks/folks/individual.vala"
	new_gender = FOLKS_GENDER_UNSPECIFIED;
#line 2478 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 12059 "individual.c"
		FolksGender _tmp0_;
		FolksGender _tmp1_;
#line 2480 "/run/build/folks/folks/individual.vala"
		_tmp0_ = folks_gender_details_get_gender (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_GENDER_DETAILS, FolksGenderDetails));
#line 2480 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp0_;
#line 2480 "/run/build/folks/folks/individual.vala"
		new_gender = _tmp1_;
#line 12068 "individual.c"
	}
#line 2483 "/run/build/folks/folks/individual.vala"
	_tmp2_ = new_gender;
#line 2483 "/run/build/folks/folks/individual.vala"
	_tmp3_ = folks_gender_details_get_gender ((FolksGenderDetails*) self);
#line 2483 "/run/build/folks/folks/individual.vala"
	_tmp4_ = _tmp3_;
#line 2483 "/run/build/folks/folks/individual.vala"
	if (_tmp2_ != _tmp4_) {
#line 12078 "individual.c"
		FolksGender _tmp5_;
#line 2485 "/run/build/folks/folks/individual.vala"
		_tmp5_ = new_gender;
#line 2485 "/run/build/folks/folks/individual.vala"
		self->priv->_gender = _tmp5_;
#line 2486 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "gender");
#line 12086 "individual.c"
	}
}


static void
___lambda36__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 2465 "/run/build/folks/folks/individual.vala"
	__lambda36_ ((FolksIndividual*) self, chosen_persona);
#line 12097 "individual.c"
}


static void
_folks_individual_update_gender (FolksIndividual* self)
{
#line 2463 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2465 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_GENDER_DETAILS, ___lambda34__folks_individual_property_filter, self, ___lambda35__gcompare_func, "gender", ___lambda36__folks_individual_single_valued_property_setter, self);
#line 12108 "individual.c"
}


static gboolean
__lambda37_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* _tmp0_;
#line 2494 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_urls;
#line 2494 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2494 "/run/build/folks/folks/individual.vala"
	return result;
#line 12123 "individual.c"
}


static gboolean
___lambda37__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda37_ ((FolksIndividual*) self);
#line 2493 "/run/build/folks/folks/individual.vala"
	return result;
#line 12134 "individual.c"
}


static void
__lambda38_ (FolksIndividual* self)
{
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp1_;
	GeeSet* _tmp2_;
	GeeSet* _tmp3_;
#line 2497 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_URL_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2497 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_urls);
#line 2497 "/run/build/folks/folks/individual.vala"
	self->priv->_urls = _tmp0_;
#line 2500 "/run/build/folks/folks/individual.vala"
	_tmp1_ = self->priv->_urls;
#line 2500 "/run/build/folks/folks/individual.vala"
	_tmp2_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp1_);
#line 2500 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 2500 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_urls_ro);
#line 2500 "/run/build/folks/folks/individual.vala"
	self->priv->_urls_ro = _tmp3_;
#line 12161 "individual.c"
}


static void
___lambda38__folks_individual_collection_creator (gpointer self)
{
#line 2493 "/run/build/folks/folks/individual.vala"
	__lambda38_ ((FolksIndividual*) self);
#line 12170 "individual.c"
}


static gboolean
__lambda39_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* new_urls = NULL;
	FolksSmallSet* _tmp0_;
	GeeHashMap* urls_set = NULL;
	GeeHashMap* _tmp1_;
	FolksSmallSet* _tmp50_;
	FolksSmallSet* _tmp51_;
#line 2504 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_URL_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2504 "/run/build/folks/folks/individual.vala"
	new_urls = _tmp0_;
#line 2507 "/run/build/folks/folks/individual.vala"
	_tmp1_ = gee_hash_map_new (G_TYPE_STRING, NULL, NULL, FOLKS_TYPE_URL_FIELD_DETAILS, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2507 "/run/build/folks/folks/individual.vala"
	urls_set = _tmp1_;
#line 12192 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp2_;
		FolksSmallSet* _tmp3_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		gint _persona_index = 0;
#line 2511 "/run/build/folks/folks/individual.vala"
		_tmp2_ = self->priv->_persona_set;
#line 2511 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _g_object_ref0 (_tmp2_);
#line 2511 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp3_;
#line 2511 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _persona_list;
#line 2511 "/run/build/folks/folks/individual.vala"
		_tmp5_ = gee_collection_get_size ((GeeCollection*) _tmp4_);
#line 2511 "/run/build/folks/folks/individual.vala"
		_tmp6_ = _tmp5_;
#line 2511 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp6_;
#line 2511 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2511 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 12220 "individual.c"
			gint _tmp7_;
			gint _tmp8_;
			gint _tmp9_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp10_;
			gint _tmp11_;
			gconstpointer _tmp12_;
			FolksPersona* _tmp13_;
			FolksUrlDetails* url_details = NULL;
			FolksPersona* _tmp14_;
			FolksUrlDetails* _tmp15_;
			FolksUrlDetails* _tmp16_;
#line 2511 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2511 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp7_ + 1;
#line 2511 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_index;
#line 2511 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_size;
#line 2511 "/run/build/folks/folks/individual.vala"
			if (!(_tmp8_ < _tmp9_)) {
#line 2511 "/run/build/folks/folks/individual.vala"
				break;
#line 12245 "individual.c"
			}
#line 2511 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_list;
#line 2511 "/run/build/folks/folks/individual.vala"
			_tmp11_ = _persona_index;
#line 2511 "/run/build/folks/folks/individual.vala"
			_tmp12_ = folks_small_set_get (_tmp10_, _tmp11_);
#line 2511 "/run/build/folks/folks/individual.vala"
			_tmp13_ = _g_object_ref0 ((FolksPersona*) _tmp12_);
#line 2511 "/run/build/folks/folks/individual.vala"
			persona = _tmp13_;
#line 2516 "/run/build/folks/folks/individual.vala"
			_tmp14_ = persona;
#line 2516 "/run/build/folks/folks/individual.vala"
			_tmp15_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp14_, FOLKS_TYPE_URL_DETAILS) ? ((FolksUrlDetails*) _tmp14_) : NULL);
#line 2516 "/run/build/folks/folks/individual.vala"
			url_details = _tmp15_;
#line 2517 "/run/build/folks/folks/individual.vala"
			_tmp16_ = url_details;
#line 2517 "/run/build/folks/folks/individual.vala"
			if (_tmp16_ != NULL) {
#line 12267 "individual.c"
				{
					GeeIterator* _url_fd_it = NULL;
					FolksUrlDetails* _tmp17_;
					GeeSet* _tmp18_;
					GeeSet* _tmp19_;
					GeeIterator* _tmp20_;
#line 2519 "/run/build/folks/folks/individual.vala"
					_tmp17_ = url_details;
#line 2519 "/run/build/folks/folks/individual.vala"
					_tmp18_ = folks_url_details_get_urls (G_TYPE_CHECK_INSTANCE_CAST (_tmp17_, FOLKS_TYPE_URL_DETAILS, FolksUrlDetails));
#line 2519 "/run/build/folks/folks/individual.vala"
					_tmp19_ = _tmp18_;
#line 2519 "/run/build/folks/folks/individual.vala"
					_tmp20_ = gee_iterable_iterator ((GeeIterable*) _tmp19_);
#line 2519 "/run/build/folks/folks/individual.vala"
					_url_fd_it = _tmp20_;
#line 2519 "/run/build/folks/folks/individual.vala"
					while (TRUE) {
#line 12286 "individual.c"
						GeeIterator* _tmp21_;
						FolksUrlFieldDetails* url_fd = NULL;
						GeeIterator* _tmp22_;
						gpointer _tmp23_;
						FolksUrlFieldDetails* existing = NULL;
						GeeHashMap* _tmp24_;
						FolksUrlFieldDetails* _tmp25_;
						gconstpointer _tmp26_;
						const gchar* _tmp27_;
						gpointer _tmp28_;
						FolksUrlFieldDetails* _tmp29_;
						FolksUrlFieldDetails* _tmp30_;
#line 2519 "/run/build/folks/folks/individual.vala"
						_tmp21_ = _url_fd_it;
#line 2519 "/run/build/folks/folks/individual.vala"
						if (!gee_iterator_next (_tmp21_)) {
#line 2519 "/run/build/folks/folks/individual.vala"
							break;
#line 12305 "individual.c"
						}
#line 2519 "/run/build/folks/folks/individual.vala"
						_tmp22_ = _url_fd_it;
#line 2519 "/run/build/folks/folks/individual.vala"
						_tmp23_ = gee_iterator_get (_tmp22_);
#line 2519 "/run/build/folks/folks/individual.vala"
						url_fd = (FolksUrlFieldDetails*) _tmp23_;
#line 2521 "/run/build/folks/folks/individual.vala"
						_tmp24_ = urls_set;
#line 2521 "/run/build/folks/folks/individual.vala"
						_tmp25_ = url_fd;
#line 2521 "/run/build/folks/folks/individual.vala"
						_tmp26_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp25_);
#line 2521 "/run/build/folks/folks/individual.vala"
						_tmp27_ = _tmp26_;
#line 2521 "/run/build/folks/folks/individual.vala"
						_tmp28_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp24_, (const gchar*) _tmp27_);
#line 2521 "/run/build/folks/folks/individual.vala"
						_tmp29_ = _g_object_ref0 ((FolksUrlFieldDetails*) _tmp28_);
#line 2521 "/run/build/folks/folks/individual.vala"
						existing = _tmp29_;
#line 2522 "/run/build/folks/folks/individual.vala"
						_tmp30_ = existing;
#line 2522 "/run/build/folks/folks/individual.vala"
						if (_tmp30_ != NULL) {
#line 12331 "individual.c"
							FolksUrlFieldDetails* _tmp31_;
							FolksUrlFieldDetails* _tmp32_;
							GeeMultiMap* _tmp33_;
							GeeMultiMap* _tmp34_;
#line 2524 "/run/build/folks/folks/individual.vala"
							_tmp31_ = existing;
#line 2524 "/run/build/folks/folks/individual.vala"
							_tmp32_ = url_fd;
#line 2524 "/run/build/folks/folks/individual.vala"
							_tmp33_ = folks_abstract_field_details_get_parameters ((FolksAbstractFieldDetails*) _tmp32_);
#line 2524 "/run/build/folks/folks/individual.vala"
							_tmp34_ = _tmp33_;
#line 2524 "/run/build/folks/folks/individual.vala"
							folks_abstract_field_details_extend_parameters ((FolksAbstractFieldDetails*) _tmp31_, _tmp34_);
#line 12346 "individual.c"
						} else {
							FolksUrlFieldDetails* new_url_fd = NULL;
							FolksUrlFieldDetails* _tmp35_;
							gconstpointer _tmp36_;
							const gchar* _tmp37_;
							FolksUrlFieldDetails* _tmp38_;
							FolksUrlFieldDetails* _tmp39_;
							FolksUrlFieldDetails* _tmp40_;
							GeeMultiMap* _tmp41_;
							GeeMultiMap* _tmp42_;
							GeeHashMap* _tmp43_;
							FolksUrlFieldDetails* _tmp44_;
							gconstpointer _tmp45_;
							const gchar* _tmp46_;
							FolksUrlFieldDetails* _tmp47_;
							FolksSmallSet* _tmp48_;
							FolksUrlFieldDetails* _tmp49_;
#line 2528 "/run/build/folks/folks/individual.vala"
							_tmp35_ = url_fd;
#line 2528 "/run/build/folks/folks/individual.vala"
							_tmp36_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp35_);
#line 2528 "/run/build/folks/folks/individual.vala"
							_tmp37_ = _tmp36_;
#line 2528 "/run/build/folks/folks/individual.vala"
							_tmp38_ = folks_url_field_details_new ((const gchar*) _tmp37_, NULL);
#line 2528 "/run/build/folks/folks/individual.vala"
							new_url_fd = _tmp38_;
#line 2530 "/run/build/folks/folks/individual.vala"
							_tmp39_ = new_url_fd;
#line 2530 "/run/build/folks/folks/individual.vala"
							_tmp40_ = url_fd;
#line 2530 "/run/build/folks/folks/individual.vala"
							_tmp41_ = folks_abstract_field_details_get_parameters ((FolksAbstractFieldDetails*) _tmp40_);
#line 2530 "/run/build/folks/folks/individual.vala"
							_tmp42_ = _tmp41_;
#line 2530 "/run/build/folks/folks/individual.vala"
							folks_abstract_field_details_extend_parameters ((FolksAbstractFieldDetails*) _tmp39_, _tmp42_);
#line 2531 "/run/build/folks/folks/individual.vala"
							_tmp43_ = urls_set;
#line 2531 "/run/build/folks/folks/individual.vala"
							_tmp44_ = new_url_fd;
#line 2531 "/run/build/folks/folks/individual.vala"
							_tmp45_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp44_);
#line 2531 "/run/build/folks/folks/individual.vala"
							_tmp46_ = _tmp45_;
#line 2531 "/run/build/folks/folks/individual.vala"
							_tmp47_ = new_url_fd;
#line 2531 "/run/build/folks/folks/individual.vala"
							gee_abstract_map_set ((GeeAbstractMap*) _tmp43_, (const gchar*) _tmp46_, _tmp47_);
#line 2532 "/run/build/folks/folks/individual.vala"
							_tmp48_ = new_urls;
#line 2532 "/run/build/folks/folks/individual.vala"
							_tmp49_ = new_url_fd;
#line 2532 "/run/build/folks/folks/individual.vala"
							gee_abstract_collection_add ((GeeAbstractCollection*) _tmp48_, _tmp49_);
#line 2522 "/run/build/folks/folks/individual.vala"
							_g_object_unref0 (new_url_fd);
#line 12404 "individual.c"
						}
#line 2519 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (existing);
#line 2519 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (url_fd);
#line 12410 "individual.c"
					}
#line 2519 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_url_fd_it);
#line 12414 "individual.c"
				}
			}
#line 2511 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (url_details);
#line 2511 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 12421 "individual.c"
		}
#line 2511 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 12425 "individual.c"
	}
#line 2538 "/run/build/folks/folks/individual.vala"
	_tmp50_ = new_urls;
#line 2538 "/run/build/folks/folks/individual.vala"
	_tmp51_ = self->priv->_urls;
#line 2538 "/run/build/folks/folks/individual.vala"
	if (!folks_utils_set_afd_equal ((GeeSet*) _tmp50_, (GeeSet*) _tmp51_)) {
#line 12433 "individual.c"
		FolksSmallSet* _tmp52_;
		FolksSmallSet* _tmp53_;
		FolksSmallSet* _tmp54_;
		GeeSet* _tmp55_;
		GeeSet* _tmp56_;
#line 2540 "/run/build/folks/folks/individual.vala"
		_tmp52_ = new_urls;
#line 2540 "/run/build/folks/folks/individual.vala"
		_tmp53_ = _g_object_ref0 (_tmp52_);
#line 2540 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_urls);
#line 2540 "/run/build/folks/folks/individual.vala"
		self->priv->_urls = _tmp53_;
#line 2541 "/run/build/folks/folks/individual.vala"
		_tmp54_ = new_urls;
#line 2541 "/run/build/folks/folks/individual.vala"
		_tmp55_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp54_);
#line 2541 "/run/build/folks/folks/individual.vala"
		_tmp56_ = _tmp55_;
#line 2541 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_urls_ro);
#line 2541 "/run/build/folks/folks/individual.vala"
		self->priv->_urls_ro = _tmp56_;
#line 2542 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2542 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (urls_set);
#line 2542 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_urls);
#line 2542 "/run/build/folks/folks/individual.vala"
		return result;
#line 12465 "individual.c"
	}
#line 2545 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2545 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (urls_set);
#line 2545 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_urls);
#line 2545 "/run/build/folks/folks/individual.vala"
	return result;
#line 12475 "individual.c"
}


static gboolean
___lambda39__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda39_ ((FolksIndividual*) self);
#line 2493 "/run/build/folks/folks/individual.vala"
	return result;
#line 12486 "individual.c"
}


static void
_folks_individual_update_urls (FolksIndividual* self,
                               gboolean create_if_not_exist,
                               gboolean emit_notification,
                               gboolean force_update)
{
#line 2491 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2493 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "urls", create_if_not_exist, ___lambda37__folks_individual_property_is_null, self, ___lambda38__folks_individual_collection_creator, self, ___lambda39__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 12500 "individual.c"
}


static gboolean
__lambda40_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* _tmp0_;
#line 2552 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_phone_numbers;
#line 2552 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2552 "/run/build/folks/folks/individual.vala"
	return result;
#line 12515 "individual.c"
}


static gboolean
___lambda40__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda40_ ((FolksIndividual*) self);
#line 2551 "/run/build/folks/folks/individual.vala"
	return result;
#line 12526 "individual.c"
}


static void
__lambda41_ (FolksIndividual* self)
{
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp1_;
	GeeSet* _tmp2_;
	GeeSet* _tmp3_;
#line 2555 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_PHONE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2555 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_phone_numbers);
#line 2555 "/run/build/folks/folks/individual.vala"
	self->priv->_phone_numbers = _tmp0_;
#line 2558 "/run/build/folks/folks/individual.vala"
	_tmp1_ = self->priv->_phone_numbers;
#line 2558 "/run/build/folks/folks/individual.vala"
	_tmp2_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp1_);
#line 2558 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 2558 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_phone_numbers_ro);
#line 2558 "/run/build/folks/folks/individual.vala"
	self->priv->_phone_numbers_ro = _tmp3_;
#line 12553 "individual.c"
}


static void
___lambda41__folks_individual_collection_creator (gpointer self)
{
#line 2551 "/run/build/folks/folks/individual.vala"
	__lambda41_ ((FolksIndividual*) self);
#line 12562 "individual.c"
}


static gboolean
__lambda42_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* new_phone_numbers = NULL;
	FolksSmallSet* _tmp0_;
	GeeHashMap* phone_numbers_set = NULL;
	GeeHashMap* _tmp1_;
	FolksSmallSet* _tmp49_;
	FolksSmallSet* _tmp50_;
#line 2562 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_PHONE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2562 "/run/build/folks/folks/individual.vala"
	new_phone_numbers = _tmp0_;
#line 2565 "/run/build/folks/folks/individual.vala"
	_tmp1_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_PHONE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2565 "/run/build/folks/folks/individual.vala"
	phone_numbers_set = _tmp1_;
#line 12584 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp2_;
		FolksSmallSet* _tmp3_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		gint _persona_index = 0;
#line 2568 "/run/build/folks/folks/individual.vala"
		_tmp2_ = self->priv->_persona_set;
#line 2568 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _g_object_ref0 (_tmp2_);
#line 2568 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp3_;
#line 2568 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _persona_list;
#line 2568 "/run/build/folks/folks/individual.vala"
		_tmp5_ = gee_collection_get_size ((GeeCollection*) _tmp4_);
#line 2568 "/run/build/folks/folks/individual.vala"
		_tmp6_ = _tmp5_;
#line 2568 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp6_;
#line 2568 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2568 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 12612 "individual.c"
			gint _tmp7_;
			gint _tmp8_;
			gint _tmp9_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp10_;
			gint _tmp11_;
			gconstpointer _tmp12_;
			FolksPersona* _tmp13_;
			FolksPhoneDetails* phone_details = NULL;
			FolksPersona* _tmp14_;
			FolksPhoneDetails* _tmp15_;
			FolksPhoneDetails* _tmp16_;
#line 2568 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2568 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp7_ + 1;
#line 2568 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_index;
#line 2568 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_size;
#line 2568 "/run/build/folks/folks/individual.vala"
			if (!(_tmp8_ < _tmp9_)) {
#line 2568 "/run/build/folks/folks/individual.vala"
				break;
#line 12637 "individual.c"
			}
#line 2568 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_list;
#line 2568 "/run/build/folks/folks/individual.vala"
			_tmp11_ = _persona_index;
#line 2568 "/run/build/folks/folks/individual.vala"
			_tmp12_ = folks_small_set_get (_tmp10_, _tmp11_);
#line 2568 "/run/build/folks/folks/individual.vala"
			_tmp13_ = _g_object_ref0 ((FolksPersona*) _tmp12_);
#line 2568 "/run/build/folks/folks/individual.vala"
			persona = _tmp13_;
#line 2573 "/run/build/folks/folks/individual.vala"
			_tmp14_ = persona;
#line 2573 "/run/build/folks/folks/individual.vala"
			_tmp15_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp14_, FOLKS_TYPE_PHONE_DETAILS) ? ((FolksPhoneDetails*) _tmp14_) : NULL);
#line 2573 "/run/build/folks/folks/individual.vala"
			phone_details = _tmp15_;
#line 2574 "/run/build/folks/folks/individual.vala"
			_tmp16_ = phone_details;
#line 2574 "/run/build/folks/folks/individual.vala"
			if (_tmp16_ != NULL) {
#line 12659 "individual.c"
				{
					GeeIterator* _phone_fd_it = NULL;
					FolksPhoneDetails* _tmp17_;
					GeeSet* _tmp18_;
					GeeSet* _tmp19_;
					GeeIterator* _tmp20_;
#line 2576 "/run/build/folks/folks/individual.vala"
					_tmp17_ = phone_details;
#line 2576 "/run/build/folks/folks/individual.vala"
					_tmp18_ = folks_phone_details_get_phone_numbers (G_TYPE_CHECK_INSTANCE_CAST (_tmp17_, FOLKS_TYPE_PHONE_DETAILS, FolksPhoneDetails));
#line 2576 "/run/build/folks/folks/individual.vala"
					_tmp19_ = _tmp18_;
#line 2576 "/run/build/folks/folks/individual.vala"
					_tmp20_ = gee_iterable_iterator ((GeeIterable*) _tmp19_);
#line 2576 "/run/build/folks/folks/individual.vala"
					_phone_fd_it = _tmp20_;
#line 2576 "/run/build/folks/folks/individual.vala"
					while (TRUE) {
#line 12678 "individual.c"
						GeeIterator* _tmp21_;
						FolksPhoneFieldDetails* phone_fd = NULL;
						GeeIterator* _tmp22_;
						gpointer _tmp23_;
						FolksPhoneFieldDetails* existing = NULL;
						GeeHashMap* _tmp24_;
						FolksPhoneFieldDetails* _tmp25_;
						gconstpointer _tmp26_;
						const gchar* _tmp27_;
						gpointer _tmp28_;
						FolksPhoneFieldDetails* _tmp29_;
#line 2576 "/run/build/folks/folks/individual.vala"
						_tmp21_ = _phone_fd_it;
#line 2576 "/run/build/folks/folks/individual.vala"
						if (!gee_iterator_next (_tmp21_)) {
#line 2576 "/run/build/folks/folks/individual.vala"
							break;
#line 12696 "individual.c"
						}
#line 2576 "/run/build/folks/folks/individual.vala"
						_tmp22_ = _phone_fd_it;
#line 2576 "/run/build/folks/folks/individual.vala"
						_tmp23_ = gee_iterator_get (_tmp22_);
#line 2576 "/run/build/folks/folks/individual.vala"
						phone_fd = (FolksPhoneFieldDetails*) _tmp23_;
#line 2578 "/run/build/folks/folks/individual.vala"
						_tmp24_ = phone_numbers_set;
#line 2578 "/run/build/folks/folks/individual.vala"
						_tmp25_ = phone_fd;
#line 2578 "/run/build/folks/folks/individual.vala"
						_tmp26_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp25_);
#line 2578 "/run/build/folks/folks/individual.vala"
						_tmp27_ = _tmp26_;
#line 2578 "/run/build/folks/folks/individual.vala"
						_tmp28_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp24_, (const gchar*) _tmp27_);
#line 2578 "/run/build/folks/folks/individual.vala"
						existing = (FolksPhoneFieldDetails*) _tmp28_;
#line 2579 "/run/build/folks/folks/individual.vala"
						_tmp29_ = existing;
#line 2579 "/run/build/folks/folks/individual.vala"
						if (_tmp29_ != NULL) {
#line 12720 "individual.c"
							FolksPhoneFieldDetails* _tmp30_;
							FolksPhoneFieldDetails* _tmp31_;
							GeeMultiMap* _tmp32_;
							GeeMultiMap* _tmp33_;
#line 2581 "/run/build/folks/folks/individual.vala"
							_tmp30_ = existing;
#line 2581 "/run/build/folks/folks/individual.vala"
							_tmp31_ = phone_fd;
#line 2581 "/run/build/folks/folks/individual.vala"
							_tmp32_ = folks_abstract_field_details_get_parameters ((FolksAbstractFieldDetails*) _tmp31_);
#line 2581 "/run/build/folks/folks/individual.vala"
							_tmp33_ = _tmp32_;
#line 2581 "/run/build/folks/folks/individual.vala"
							folks_abstract_field_details_extend_parameters ((FolksAbstractFieldDetails*) _tmp30_, _tmp33_);
#line 12735 "individual.c"
						} else {
							FolksPhoneFieldDetails* new_fd = NULL;
							FolksPhoneFieldDetails* _tmp34_;
							gconstpointer _tmp35_;
							const gchar* _tmp36_;
							FolksPhoneFieldDetails* _tmp37_;
							FolksPhoneFieldDetails* _tmp38_;
							FolksPhoneFieldDetails* _tmp39_;
							GeeMultiMap* _tmp40_;
							GeeMultiMap* _tmp41_;
							GeeHashMap* _tmp42_;
							FolksPhoneFieldDetails* _tmp43_;
							gconstpointer _tmp44_;
							const gchar* _tmp45_;
							FolksPhoneFieldDetails* _tmp46_;
							FolksSmallSet* _tmp47_;
							FolksPhoneFieldDetails* _tmp48_;
#line 2585 "/run/build/folks/folks/individual.vala"
							_tmp34_ = phone_fd;
#line 2585 "/run/build/folks/folks/individual.vala"
							_tmp35_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp34_);
#line 2585 "/run/build/folks/folks/individual.vala"
							_tmp36_ = _tmp35_;
#line 2585 "/run/build/folks/folks/individual.vala"
							_tmp37_ = folks_phone_field_details_new ((const gchar*) _tmp36_, NULL);
#line 2585 "/run/build/folks/folks/individual.vala"
							new_fd = _tmp37_;
#line 2587 "/run/build/folks/folks/individual.vala"
							_tmp38_ = new_fd;
#line 2587 "/run/build/folks/folks/individual.vala"
							_tmp39_ = phone_fd;
#line 2587 "/run/build/folks/folks/individual.vala"
							_tmp40_ = folks_abstract_field_details_get_parameters ((FolksAbstractFieldDetails*) _tmp39_);
#line 2587 "/run/build/folks/folks/individual.vala"
							_tmp41_ = _tmp40_;
#line 2587 "/run/build/folks/folks/individual.vala"
							folks_abstract_field_details_extend_parameters ((FolksAbstractFieldDetails*) _tmp38_, _tmp41_);
#line 2588 "/run/build/folks/folks/individual.vala"
							_tmp42_ = phone_numbers_set;
#line 2588 "/run/build/folks/folks/individual.vala"
							_tmp43_ = new_fd;
#line 2588 "/run/build/folks/folks/individual.vala"
							_tmp44_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp43_);
#line 2588 "/run/build/folks/folks/individual.vala"
							_tmp45_ = _tmp44_;
#line 2588 "/run/build/folks/folks/individual.vala"
							_tmp46_ = new_fd;
#line 2588 "/run/build/folks/folks/individual.vala"
							gee_abstract_map_set ((GeeAbstractMap*) _tmp42_, (const gchar*) _tmp45_, _tmp46_);
#line 2589 "/run/build/folks/folks/individual.vala"
							_tmp47_ = new_phone_numbers;
#line 2589 "/run/build/folks/folks/individual.vala"
							_tmp48_ = new_fd;
#line 2589 "/run/build/folks/folks/individual.vala"
							gee_abstract_collection_add ((GeeAbstractCollection*) _tmp47_, _tmp48_);
#line 2579 "/run/build/folks/folks/individual.vala"
							_g_object_unref0 (new_fd);
#line 12793 "individual.c"
						}
#line 2576 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (existing);
#line 2576 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (phone_fd);
#line 12799 "individual.c"
					}
#line 2576 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_phone_fd_it);
#line 12803 "individual.c"
				}
			}
#line 2568 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (phone_details);
#line 2568 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 12810 "individual.c"
		}
#line 2568 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 12814 "individual.c"
	}
#line 2595 "/run/build/folks/folks/individual.vala"
	_tmp49_ = new_phone_numbers;
#line 2595 "/run/build/folks/folks/individual.vala"
	_tmp50_ = self->priv->_phone_numbers;
#line 2595 "/run/build/folks/folks/individual.vala"
	if (!folks_utils_set_string_afd_equal ((GeeSet*) _tmp49_, (GeeSet*) _tmp50_)) {
#line 12822 "individual.c"
		FolksSmallSet* _tmp51_;
		FolksSmallSet* _tmp52_;
		FolksSmallSet* _tmp53_;
		GeeSet* _tmp54_;
		GeeSet* _tmp55_;
#line 2597 "/run/build/folks/folks/individual.vala"
		_tmp51_ = new_phone_numbers;
#line 2597 "/run/build/folks/folks/individual.vala"
		_tmp52_ = _g_object_ref0 (_tmp51_);
#line 2597 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_phone_numbers);
#line 2597 "/run/build/folks/folks/individual.vala"
		self->priv->_phone_numbers = _tmp52_;
#line 2598 "/run/build/folks/folks/individual.vala"
		_tmp53_ = new_phone_numbers;
#line 2598 "/run/build/folks/folks/individual.vala"
		_tmp54_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp53_);
#line 2598 "/run/build/folks/folks/individual.vala"
		_tmp55_ = _tmp54_;
#line 2598 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_phone_numbers_ro);
#line 2598 "/run/build/folks/folks/individual.vala"
		self->priv->_phone_numbers_ro = _tmp55_;
#line 2599 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2599 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (phone_numbers_set);
#line 2599 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_phone_numbers);
#line 2599 "/run/build/folks/folks/individual.vala"
		return result;
#line 12854 "individual.c"
	}
#line 2602 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2602 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (phone_numbers_set);
#line 2602 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_phone_numbers);
#line 2602 "/run/build/folks/folks/individual.vala"
	return result;
#line 12864 "individual.c"
}


static gboolean
___lambda42__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda42_ ((FolksIndividual*) self);
#line 2551 "/run/build/folks/folks/individual.vala"
	return result;
#line 12875 "individual.c"
}


static void
_folks_individual_update_phone_numbers (FolksIndividual* self,
                                        gboolean create_if_not_exist,
                                        gboolean emit_notification,
                                        gboolean force_update)
{
#line 2549 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2551 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "phone-numbers", create_if_not_exist, ___lambda40__folks_individual_property_is_null, self, ___lambda41__folks_individual_collection_creator, self, ___lambda42__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 12889 "individual.c"
}


static gboolean
__lambda43_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* _tmp0_;
#line 2609 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_email_addresses;
#line 2609 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2609 "/run/build/folks/folks/individual.vala"
	return result;
#line 12904 "individual.c"
}


static gboolean
___lambda43__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda43_ ((FolksIndividual*) self);
#line 2608 "/run/build/folks/folks/individual.vala"
	return result;
#line 12915 "individual.c"
}


static void
__lambda44_ (FolksIndividual* self)
{
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp1_;
	GeeSet* _tmp2_;
	GeeSet* _tmp3_;
#line 2612 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_EMAIL_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2612 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_email_addresses);
#line 2612 "/run/build/folks/folks/individual.vala"
	self->priv->_email_addresses = _tmp0_;
#line 2615 "/run/build/folks/folks/individual.vala"
	_tmp1_ = self->priv->_email_addresses;
#line 2615 "/run/build/folks/folks/individual.vala"
	_tmp2_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp1_);
#line 2615 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 2615 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_email_addresses_ro);
#line 2615 "/run/build/folks/folks/individual.vala"
	self->priv->_email_addresses_ro = _tmp3_;
#line 12942 "individual.c"
}


static void
___lambda44__folks_individual_collection_creator (gpointer self)
{
#line 2608 "/run/build/folks/folks/individual.vala"
	__lambda44_ ((FolksIndividual*) self);
#line 12951 "individual.c"
}


static gboolean
__lambda45_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* new_email_addresses = NULL;
	FolksSmallSet* _tmp0_;
	GeeHashMap* emails_set = NULL;
	GeeHashMap* _tmp1_;
	FolksSmallSet* _tmp48_;
	FolksSmallSet* _tmp49_;
#line 2619 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_EMAIL_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2619 "/run/build/folks/folks/individual.vala"
	new_email_addresses = _tmp0_;
#line 2622 "/run/build/folks/folks/individual.vala"
	_tmp1_ = gee_hash_map_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, FOLKS_TYPE_EMAIL_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2622 "/run/build/folks/folks/individual.vala"
	emails_set = _tmp1_;
#line 12973 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp2_;
		FolksSmallSet* _tmp3_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp4_;
		gint _tmp5_;
		gint _tmp6_;
		gint _persona_index = 0;
#line 2625 "/run/build/folks/folks/individual.vala"
		_tmp2_ = self->priv->_persona_set;
#line 2625 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _g_object_ref0 (_tmp2_);
#line 2625 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp3_;
#line 2625 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _persona_list;
#line 2625 "/run/build/folks/folks/individual.vala"
		_tmp5_ = gee_collection_get_size ((GeeCollection*) _tmp4_);
#line 2625 "/run/build/folks/folks/individual.vala"
		_tmp6_ = _tmp5_;
#line 2625 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp6_;
#line 2625 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2625 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 13001 "individual.c"
			gint _tmp7_;
			gint _tmp8_;
			gint _tmp9_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp10_;
			gint _tmp11_;
			gconstpointer _tmp12_;
			FolksPersona* _tmp13_;
			FolksEmailDetails* email_details = NULL;
			FolksPersona* _tmp14_;
			FolksEmailDetails* _tmp15_;
			FolksEmailDetails* _tmp16_;
#line 2625 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2625 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp7_ + 1;
#line 2625 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_index;
#line 2625 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_size;
#line 2625 "/run/build/folks/folks/individual.vala"
			if (!(_tmp8_ < _tmp9_)) {
#line 2625 "/run/build/folks/folks/individual.vala"
				break;
#line 13026 "individual.c"
			}
#line 2625 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_list;
#line 2625 "/run/build/folks/folks/individual.vala"
			_tmp11_ = _persona_index;
#line 2625 "/run/build/folks/folks/individual.vala"
			_tmp12_ = folks_small_set_get (_tmp10_, _tmp11_);
#line 2625 "/run/build/folks/folks/individual.vala"
			_tmp13_ = _g_object_ref0 ((FolksPersona*) _tmp12_);
#line 2625 "/run/build/folks/folks/individual.vala"
			persona = _tmp13_;
#line 2630 "/run/build/folks/folks/individual.vala"
			_tmp14_ = persona;
#line 2630 "/run/build/folks/folks/individual.vala"
			_tmp15_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp14_, FOLKS_TYPE_EMAIL_DETAILS) ? ((FolksEmailDetails*) _tmp14_) : NULL);
#line 2630 "/run/build/folks/folks/individual.vala"
			email_details = _tmp15_;
#line 2631 "/run/build/folks/folks/individual.vala"
			_tmp16_ = email_details;
#line 2631 "/run/build/folks/folks/individual.vala"
			if (_tmp16_ != NULL) {
#line 13048 "individual.c"
				{
					GeeIterator* _email_fd_it = NULL;
					FolksEmailDetails* _tmp17_;
					GeeSet* _tmp18_;
					GeeSet* _tmp19_;
					GeeIterator* _tmp20_;
#line 2633 "/run/build/folks/folks/individual.vala"
					_tmp17_ = email_details;
#line 2633 "/run/build/folks/folks/individual.vala"
					_tmp18_ = folks_email_details_get_email_addresses (G_TYPE_CHECK_INSTANCE_CAST (_tmp17_, FOLKS_TYPE_EMAIL_DETAILS, FolksEmailDetails));
#line 2633 "/run/build/folks/folks/individual.vala"
					_tmp19_ = _tmp18_;
#line 2633 "/run/build/folks/folks/individual.vala"
					_tmp20_ = gee_iterable_iterator ((GeeIterable*) _tmp19_);
#line 2633 "/run/build/folks/folks/individual.vala"
					_email_fd_it = _tmp20_;
#line 2633 "/run/build/folks/folks/individual.vala"
					while (TRUE) {
#line 13067 "individual.c"
						GeeIterator* _tmp21_;
						FolksEmailFieldDetails* email_fd = NULL;
						GeeIterator* _tmp22_;
						gpointer _tmp23_;
						FolksEmailFieldDetails* existing = NULL;
						GeeHashMap* _tmp24_;
						FolksEmailFieldDetails* _tmp25_;
						gconstpointer _tmp26_;
						const gchar* _tmp27_;
						gpointer _tmp28_;
						FolksEmailFieldDetails* _tmp29_;
#line 2633 "/run/build/folks/folks/individual.vala"
						_tmp21_ = _email_fd_it;
#line 2633 "/run/build/folks/folks/individual.vala"
						if (!gee_iterator_next (_tmp21_)) {
#line 2633 "/run/build/folks/folks/individual.vala"
							break;
#line 13085 "individual.c"
						}
#line 2633 "/run/build/folks/folks/individual.vala"
						_tmp22_ = _email_fd_it;
#line 2633 "/run/build/folks/folks/individual.vala"
						_tmp23_ = gee_iterator_get (_tmp22_);
#line 2633 "/run/build/folks/folks/individual.vala"
						email_fd = (FolksEmailFieldDetails*) _tmp23_;
#line 2635 "/run/build/folks/folks/individual.vala"
						_tmp24_ = emails_set;
#line 2635 "/run/build/folks/folks/individual.vala"
						_tmp25_ = email_fd;
#line 2635 "/run/build/folks/folks/individual.vala"
						_tmp26_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp25_);
#line 2635 "/run/build/folks/folks/individual.vala"
						_tmp27_ = _tmp26_;
#line 2635 "/run/build/folks/folks/individual.vala"
						_tmp28_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp24_, (const gchar*) _tmp27_);
#line 2635 "/run/build/folks/folks/individual.vala"
						existing = (FolksEmailFieldDetails*) _tmp28_;
#line 2636 "/run/build/folks/folks/individual.vala"
						_tmp29_ = existing;
#line 2636 "/run/build/folks/folks/individual.vala"
						if (_tmp29_ != NULL) {
#line 13109 "individual.c"
							FolksEmailFieldDetails* _tmp30_;
							FolksEmailFieldDetails* _tmp31_;
							GeeMultiMap* _tmp32_;
							GeeMultiMap* _tmp33_;
#line 2638 "/run/build/folks/folks/individual.vala"
							_tmp30_ = existing;
#line 2638 "/run/build/folks/folks/individual.vala"
							_tmp31_ = email_fd;
#line 2638 "/run/build/folks/folks/individual.vala"
							_tmp32_ = folks_abstract_field_details_get_parameters ((FolksAbstractFieldDetails*) _tmp31_);
#line 2638 "/run/build/folks/folks/individual.vala"
							_tmp33_ = _tmp32_;
#line 2638 "/run/build/folks/folks/individual.vala"
							folks_abstract_field_details_extend_parameters ((FolksAbstractFieldDetails*) _tmp30_, _tmp33_);
#line 13124 "individual.c"
						} else {
							FolksEmailFieldDetails* new_email_fd = NULL;
							FolksEmailFieldDetails* _tmp34_;
							gconstpointer _tmp35_;
							const gchar* _tmp36_;
							FolksEmailFieldDetails* _tmp37_;
							GeeMultiMap* _tmp38_;
							GeeMultiMap* _tmp39_;
							FolksEmailFieldDetails* _tmp40_;
							GeeHashMap* _tmp41_;
							FolksEmailFieldDetails* _tmp42_;
							gconstpointer _tmp43_;
							const gchar* _tmp44_;
							FolksEmailFieldDetails* _tmp45_;
							FolksSmallSet* _tmp46_;
							FolksEmailFieldDetails* _tmp47_;
#line 2642 "/run/build/folks/folks/individual.vala"
							_tmp34_ = email_fd;
#line 2642 "/run/build/folks/folks/individual.vala"
							_tmp35_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp34_);
#line 2642 "/run/build/folks/folks/individual.vala"
							_tmp36_ = _tmp35_;
#line 2642 "/run/build/folks/folks/individual.vala"
							_tmp37_ = email_fd;
#line 2642 "/run/build/folks/folks/individual.vala"
							_tmp38_ = folks_abstract_field_details_get_parameters ((FolksAbstractFieldDetails*) _tmp37_);
#line 2642 "/run/build/folks/folks/individual.vala"
							_tmp39_ = _tmp38_;
#line 2642 "/run/build/folks/folks/individual.vala"
							_tmp40_ = folks_email_field_details_new ((const gchar*) _tmp36_, _tmp39_);
#line 2642 "/run/build/folks/folks/individual.vala"
							new_email_fd = _tmp40_;
#line 2645 "/run/build/folks/folks/individual.vala"
							_tmp41_ = emails_set;
#line 2645 "/run/build/folks/folks/individual.vala"
							_tmp42_ = new_email_fd;
#line 2645 "/run/build/folks/folks/individual.vala"
							_tmp43_ = folks_abstract_field_details_get_value ((FolksAbstractFieldDetails*) _tmp42_);
#line 2645 "/run/build/folks/folks/individual.vala"
							_tmp44_ = _tmp43_;
#line 2645 "/run/build/folks/folks/individual.vala"
							_tmp45_ = new_email_fd;
#line 2645 "/run/build/folks/folks/individual.vala"
							gee_abstract_map_set ((GeeAbstractMap*) _tmp41_, (const gchar*) _tmp44_, _tmp45_);
#line 2646 "/run/build/folks/folks/individual.vala"
							_tmp46_ = new_email_addresses;
#line 2646 "/run/build/folks/folks/individual.vala"
							_tmp47_ = new_email_fd;
#line 2646 "/run/build/folks/folks/individual.vala"
							gee_abstract_collection_add ((GeeAbstractCollection*) _tmp46_, _tmp47_);
#line 2636 "/run/build/folks/folks/individual.vala"
							_g_object_unref0 (new_email_fd);
#line 13177 "individual.c"
						}
#line 2633 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (existing);
#line 2633 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (email_fd);
#line 13183 "individual.c"
					}
#line 2633 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_email_fd_it);
#line 13187 "individual.c"
				}
			}
#line 2625 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (email_details);
#line 2625 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 13194 "individual.c"
		}
#line 2625 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 13198 "individual.c"
	}
#line 2652 "/run/build/folks/folks/individual.vala"
	_tmp48_ = new_email_addresses;
#line 2652 "/run/build/folks/folks/individual.vala"
	_tmp49_ = self->priv->_email_addresses;
#line 2652 "/run/build/folks/folks/individual.vala"
	if (!folks_utils_set_afd_equal ((GeeSet*) _tmp48_, (GeeSet*) _tmp49_)) {
#line 13206 "individual.c"
		FolksSmallSet* _tmp50_;
		FolksSmallSet* _tmp51_;
		FolksSmallSet* _tmp52_;
		GeeSet* _tmp53_;
		GeeSet* _tmp54_;
#line 2655 "/run/build/folks/folks/individual.vala"
		_tmp50_ = new_email_addresses;
#line 2655 "/run/build/folks/folks/individual.vala"
		_tmp51_ = _g_object_ref0 (_tmp50_);
#line 2655 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_email_addresses);
#line 2655 "/run/build/folks/folks/individual.vala"
		self->priv->_email_addresses = _tmp51_;
#line 2656 "/run/build/folks/folks/individual.vala"
		_tmp52_ = new_email_addresses;
#line 2656 "/run/build/folks/folks/individual.vala"
		_tmp53_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp52_);
#line 2656 "/run/build/folks/folks/individual.vala"
		_tmp54_ = _tmp53_;
#line 2656 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_email_addresses_ro);
#line 2656 "/run/build/folks/folks/individual.vala"
		self->priv->_email_addresses_ro = _tmp54_;
#line 2657 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2657 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (emails_set);
#line 2657 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_email_addresses);
#line 2657 "/run/build/folks/folks/individual.vala"
		return result;
#line 13238 "individual.c"
	}
#line 2660 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2660 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (emails_set);
#line 2660 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_email_addresses);
#line 2660 "/run/build/folks/folks/individual.vala"
	return result;
#line 13248 "individual.c"
}


static gboolean
___lambda45__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda45_ ((FolksIndividual*) self);
#line 2608 "/run/build/folks/folks/individual.vala"
	return result;
#line 13259 "individual.c"
}


static void
_folks_individual_update_email_addresses (FolksIndividual* self,
                                          gboolean create_if_not_exist,
                                          gboolean emit_notification,
                                          gboolean force_update)
{
#line 2606 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2608 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "email-addresses", create_if_not_exist, ___lambda43__folks_individual_property_is_null, self, ___lambda44__folks_individual_collection_creator, self, ___lambda45__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 13273 "individual.c"
}


static gboolean
__lambda46_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* _tmp0_;
#line 2667 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_roles;
#line 2667 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2667 "/run/build/folks/folks/individual.vala"
	return result;
#line 13288 "individual.c"
}


static gboolean
___lambda46__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda46_ ((FolksIndividual*) self);
#line 2666 "/run/build/folks/folks/individual.vala"
	return result;
#line 13299 "individual.c"
}


static void
__lambda47_ (FolksIndividual* self)
{
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp1_;
	GeeSet* _tmp2_;
	GeeSet* _tmp3_;
#line 2670 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_ROLE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2670 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_roles);
#line 2670 "/run/build/folks/folks/individual.vala"
	self->priv->_roles = _tmp0_;
#line 2673 "/run/build/folks/folks/individual.vala"
	_tmp1_ = self->priv->_roles;
#line 2673 "/run/build/folks/folks/individual.vala"
	_tmp2_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp1_);
#line 2673 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 2673 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_roles_ro);
#line 2673 "/run/build/folks/folks/individual.vala"
	self->priv->_roles_ro = _tmp3_;
#line 13326 "individual.c"
}


static void
___lambda47__folks_individual_collection_creator (gpointer self)
{
#line 2666 "/run/build/folks/folks/individual.vala"
	__lambda47_ ((FolksIndividual*) self);
#line 13335 "individual.c"
}


static gboolean
__lambda48_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* new_roles = NULL;
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp25_;
	FolksSmallSet* _tmp26_;
#line 2677 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_ROLE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2677 "/run/build/folks/folks/individual.vala"
	new_roles = _tmp0_;
#line 13351 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 2681 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 2681 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2681 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 2681 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 2681 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 2681 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 2681 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 2681 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2681 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 13379 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksRoleDetails* role_details = NULL;
			FolksPersona* _tmp13_;
			FolksRoleDetails* _tmp14_;
			FolksRoleDetails* _tmp15_;
#line 2681 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 2681 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 2681 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2681 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 2681 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 2681 "/run/build/folks/folks/individual.vala"
				break;
#line 13404 "individual.c"
			}
#line 2681 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 2681 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 2681 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 2681 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 2681 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 2683 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 2683 "/run/build/folks/folks/individual.vala"
			_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_ROLE_DETAILS) ? ((FolksRoleDetails*) _tmp13_) : NULL);
#line 2683 "/run/build/folks/folks/individual.vala"
			role_details = _tmp14_;
#line 2684 "/run/build/folks/folks/individual.vala"
			_tmp15_ = role_details;
#line 2684 "/run/build/folks/folks/individual.vala"
			if (_tmp15_ != NULL) {
#line 13426 "individual.c"
				{
					GeeIterator* _role_fd_it = NULL;
					FolksRoleDetails* _tmp16_;
					GeeSet* _tmp17_;
					GeeSet* _tmp18_;
					GeeIterator* _tmp19_;
#line 2686 "/run/build/folks/folks/individual.vala"
					_tmp16_ = role_details;
#line 2686 "/run/build/folks/folks/individual.vala"
					_tmp17_ = folks_role_details_get_roles (G_TYPE_CHECK_INSTANCE_CAST (_tmp16_, FOLKS_TYPE_ROLE_DETAILS, FolksRoleDetails));
#line 2686 "/run/build/folks/folks/individual.vala"
					_tmp18_ = _tmp17_;
#line 2686 "/run/build/folks/folks/individual.vala"
					_tmp19_ = gee_iterable_iterator ((GeeIterable*) _tmp18_);
#line 2686 "/run/build/folks/folks/individual.vala"
					_role_fd_it = _tmp19_;
#line 2686 "/run/build/folks/folks/individual.vala"
					while (TRUE) {
#line 13445 "individual.c"
						GeeIterator* _tmp20_;
						FolksRoleFieldDetails* role_fd = NULL;
						GeeIterator* _tmp21_;
						gpointer _tmp22_;
						FolksSmallSet* _tmp23_;
						FolksRoleFieldDetails* _tmp24_;
#line 2686 "/run/build/folks/folks/individual.vala"
						_tmp20_ = _role_fd_it;
#line 2686 "/run/build/folks/folks/individual.vala"
						if (!gee_iterator_next (_tmp20_)) {
#line 2686 "/run/build/folks/folks/individual.vala"
							break;
#line 13458 "individual.c"
						}
#line 2686 "/run/build/folks/folks/individual.vala"
						_tmp21_ = _role_fd_it;
#line 2686 "/run/build/folks/folks/individual.vala"
						_tmp22_ = gee_iterator_get (_tmp21_);
#line 2686 "/run/build/folks/folks/individual.vala"
						role_fd = (FolksRoleFieldDetails*) _tmp22_;
#line 2688 "/run/build/folks/folks/individual.vala"
						_tmp23_ = new_roles;
#line 2688 "/run/build/folks/folks/individual.vala"
						_tmp24_ = role_fd;
#line 2688 "/run/build/folks/folks/individual.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp23_, _tmp24_);
#line 2686 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (role_fd);
#line 13474 "individual.c"
					}
#line 2686 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_role_fd_it);
#line 13478 "individual.c"
				}
			}
#line 2681 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (role_details);
#line 2681 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 13485 "individual.c"
		}
#line 2681 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 13489 "individual.c"
	}
#line 2693 "/run/build/folks/folks/individual.vala"
	_tmp25_ = new_roles;
#line 2693 "/run/build/folks/folks/individual.vala"
	_tmp26_ = self->priv->_roles;
#line 2693 "/run/build/folks/folks/individual.vala"
	if (!folks_utils_set_afd_equal ((GeeSet*) _tmp25_, (GeeSet*) _tmp26_)) {
#line 13497 "individual.c"
		FolksSmallSet* _tmp27_;
		FolksSmallSet* _tmp28_;
		FolksSmallSet* _tmp29_;
		GeeSet* _tmp30_;
		GeeSet* _tmp31_;
#line 2695 "/run/build/folks/folks/individual.vala"
		_tmp27_ = new_roles;
#line 2695 "/run/build/folks/folks/individual.vala"
		_tmp28_ = _g_object_ref0 (_tmp27_);
#line 2695 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_roles);
#line 2695 "/run/build/folks/folks/individual.vala"
		self->priv->_roles = _tmp28_;
#line 2696 "/run/build/folks/folks/individual.vala"
		_tmp29_ = new_roles;
#line 2696 "/run/build/folks/folks/individual.vala"
		_tmp30_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp29_);
#line 2696 "/run/build/folks/folks/individual.vala"
		_tmp31_ = _tmp30_;
#line 2696 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_roles_ro);
#line 2696 "/run/build/folks/folks/individual.vala"
		self->priv->_roles_ro = _tmp31_;
#line 2697 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2697 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_roles);
#line 2697 "/run/build/folks/folks/individual.vala"
		return result;
#line 13527 "individual.c"
	}
#line 2700 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2700 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_roles);
#line 2700 "/run/build/folks/folks/individual.vala"
	return result;
#line 13535 "individual.c"
}


static gboolean
___lambda48__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda48_ ((FolksIndividual*) self);
#line 2666 "/run/build/folks/folks/individual.vala"
	return result;
#line 13546 "individual.c"
}


static void
_folks_individual_update_roles (FolksIndividual* self,
                                gboolean create_if_not_exist,
                                gboolean emit_notification,
                                gboolean force_update)
{
#line 2664 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2666 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "roles", create_if_not_exist, ___lambda46__folks_individual_property_is_null, self, ___lambda47__folks_individual_collection_creator, self, ___lambda48__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 13560 "individual.c"
}


static gboolean
__lambda58_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* _tmp0_;
#line 2707 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_local_ids;
#line 2707 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2707 "/run/build/folks/folks/individual.vala"
	return result;
#line 13575 "individual.c"
}


static gboolean
___lambda58__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda58_ ((FolksIndividual*) self);
#line 2706 "/run/build/folks/folks/individual.vala"
	return result;
#line 13586 "individual.c"
}


static void
__lambda59_ (FolksIndividual* self)
{
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp1_;
	GeeSet* _tmp2_;
	GeeSet* _tmp3_;
#line 2710 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, NULL, NULL, NULL, NULL, NULL, NULL);
#line 2710 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_local_ids);
#line 2710 "/run/build/folks/folks/individual.vala"
	self->priv->_local_ids = _tmp0_;
#line 2711 "/run/build/folks/folks/individual.vala"
	_tmp1_ = self->priv->_local_ids;
#line 2711 "/run/build/folks/folks/individual.vala"
	_tmp2_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp1_);
#line 2711 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 2711 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_local_ids_ro);
#line 2711 "/run/build/folks/folks/individual.vala"
	self->priv->_local_ids_ro = _tmp3_;
#line 13613 "individual.c"
}


static void
___lambda59__folks_individual_collection_creator (gpointer self)
{
#line 2706 "/run/build/folks/folks/individual.vala"
	__lambda59_ ((FolksIndividual*) self);
#line 13622 "individual.c"
}


static gboolean
__lambda60_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* new_local_ids = NULL;
	FolksSmallSet* _tmp0_;
	gboolean _tmp25_ = FALSE;
	FolksSmallSet* _tmp26_;
	gint _tmp27_;
	gint _tmp28_;
	FolksSmallSet* _tmp29_;
	gint _tmp30_;
	gint _tmp31_;
#line 2715 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (G_TYPE_STRING, (GBoxedCopyFunc) g_strdup, (GDestroyNotify) g_free, NULL, NULL, NULL, NULL, NULL, NULL);
#line 2715 "/run/build/folks/folks/individual.vala"
	new_local_ids = _tmp0_;
#line 13643 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 2717 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 2717 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2717 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 2717 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 2717 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 2717 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 2717 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 2717 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2717 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 13671 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksLocalIdDetails* local_id_details = NULL;
			FolksPersona* _tmp13_;
			FolksLocalIdDetails* _tmp14_;
			FolksLocalIdDetails* _tmp15_;
#line 2717 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 2717 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 2717 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2717 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 2717 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 2717 "/run/build/folks/folks/individual.vala"
				break;
#line 13696 "individual.c"
			}
#line 2717 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 2717 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 2717 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 2717 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 2717 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 2719 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 2719 "/run/build/folks/folks/individual.vala"
			_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_LOCAL_ID_DETAILS) ? ((FolksLocalIdDetails*) _tmp13_) : NULL);
#line 2719 "/run/build/folks/folks/individual.vala"
			local_id_details = _tmp14_;
#line 2720 "/run/build/folks/folks/individual.vala"
			_tmp15_ = local_id_details;
#line 2720 "/run/build/folks/folks/individual.vala"
			if (_tmp15_ != NULL) {
#line 13718 "individual.c"
				{
					GeeIterator* _id_it = NULL;
					FolksLocalIdDetails* _tmp16_;
					GeeSet* _tmp17_;
					GeeSet* _tmp18_;
					GeeIterator* _tmp19_;
#line 2722 "/run/build/folks/folks/individual.vala"
					_tmp16_ = local_id_details;
#line 2722 "/run/build/folks/folks/individual.vala"
					_tmp17_ = folks_local_id_details_get_local_ids (G_TYPE_CHECK_INSTANCE_CAST (_tmp16_, FOLKS_TYPE_LOCAL_ID_DETAILS, FolksLocalIdDetails));
#line 2722 "/run/build/folks/folks/individual.vala"
					_tmp18_ = _tmp17_;
#line 2722 "/run/build/folks/folks/individual.vala"
					_tmp19_ = gee_iterable_iterator ((GeeIterable*) _tmp18_);
#line 2722 "/run/build/folks/folks/individual.vala"
					_id_it = _tmp19_;
#line 2722 "/run/build/folks/folks/individual.vala"
					while (TRUE) {
#line 13737 "individual.c"
						GeeIterator* _tmp20_;
						gchar* id = NULL;
						GeeIterator* _tmp21_;
						gpointer _tmp22_;
						FolksSmallSet* _tmp23_;
						const gchar* _tmp24_;
#line 2722 "/run/build/folks/folks/individual.vala"
						_tmp20_ = _id_it;
#line 2722 "/run/build/folks/folks/individual.vala"
						if (!gee_iterator_next (_tmp20_)) {
#line 2722 "/run/build/folks/folks/individual.vala"
							break;
#line 13750 "individual.c"
						}
#line 2722 "/run/build/folks/folks/individual.vala"
						_tmp21_ = _id_it;
#line 2722 "/run/build/folks/folks/individual.vala"
						_tmp22_ = gee_iterator_get (_tmp21_);
#line 2722 "/run/build/folks/folks/individual.vala"
						id = (gchar*) _tmp22_;
#line 2724 "/run/build/folks/folks/individual.vala"
						_tmp23_ = new_local_ids;
#line 2724 "/run/build/folks/folks/individual.vala"
						_tmp24_ = id;
#line 2724 "/run/build/folks/folks/individual.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp23_, _tmp24_);
#line 2722 "/run/build/folks/folks/individual.vala"
						_g_free0 (id);
#line 13766 "individual.c"
					}
#line 2722 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_id_it);
#line 13770 "individual.c"
				}
			}
#line 2717 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (local_id_details);
#line 2717 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 13777 "individual.c"
		}
#line 2717 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 13781 "individual.c"
	}
#line 2729 "/run/build/folks/folks/individual.vala"
	_tmp26_ = new_local_ids;
#line 2729 "/run/build/folks/folks/individual.vala"
	_tmp27_ = gee_collection_get_size ((GeeCollection*) _tmp26_);
#line 2729 "/run/build/folks/folks/individual.vala"
	_tmp28_ = _tmp27_;
#line 2729 "/run/build/folks/folks/individual.vala"
	_tmp29_ = self->priv->_local_ids;
#line 2729 "/run/build/folks/folks/individual.vala"
	_tmp30_ = gee_collection_get_size ((GeeCollection*) _tmp29_);
#line 2729 "/run/build/folks/folks/individual.vala"
	_tmp31_ = _tmp30_;
#line 2729 "/run/build/folks/folks/individual.vala"
	if (_tmp28_ != _tmp31_) {
#line 2729 "/run/build/folks/folks/individual.vala"
		_tmp25_ = TRUE;
#line 13799 "individual.c"
	} else {
		FolksSmallSet* _tmp32_;
		FolksSmallSet* _tmp33_;
#line 2730 "/run/build/folks/folks/individual.vala"
		_tmp32_ = new_local_ids;
#line 2730 "/run/build/folks/folks/individual.vala"
		_tmp33_ = self->priv->_local_ids;
#line 2730 "/run/build/folks/folks/individual.vala"
		_tmp25_ = !gee_collection_contains_all ((GeeCollection*) _tmp32_, (GeeCollection*) _tmp33_);
#line 13809 "individual.c"
	}
#line 2729 "/run/build/folks/folks/individual.vala"
	if (_tmp25_) {
#line 13813 "individual.c"
		FolksSmallSet* _tmp34_;
		FolksSmallSet* _tmp35_;
		FolksSmallSet* _tmp36_;
		GeeSet* _tmp37_;
		GeeSet* _tmp38_;
#line 2732 "/run/build/folks/folks/individual.vala"
		_tmp34_ = new_local_ids;
#line 2732 "/run/build/folks/folks/individual.vala"
		_tmp35_ = _g_object_ref0 (_tmp34_);
#line 2732 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_local_ids);
#line 2732 "/run/build/folks/folks/individual.vala"
		self->priv->_local_ids = _tmp35_;
#line 2733 "/run/build/folks/folks/individual.vala"
		_tmp36_ = new_local_ids;
#line 2733 "/run/build/folks/folks/individual.vala"
		_tmp37_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp36_);
#line 2733 "/run/build/folks/folks/individual.vala"
		_tmp38_ = _tmp37_;
#line 2733 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_local_ids_ro);
#line 2733 "/run/build/folks/folks/individual.vala"
		self->priv->_local_ids_ro = _tmp38_;
#line 2734 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2734 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_local_ids);
#line 2734 "/run/build/folks/folks/individual.vala"
		return result;
#line 13843 "individual.c"
	}
#line 2737 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2737 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_local_ids);
#line 2737 "/run/build/folks/folks/individual.vala"
	return result;
#line 13851 "individual.c"
}


static gboolean
___lambda60__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda60_ ((FolksIndividual*) self);
#line 2706 "/run/build/folks/folks/individual.vala"
	return result;
#line 13862 "individual.c"
}


static void
_folks_individual_update_local_ids (FolksIndividual* self,
                                    gboolean create_if_not_exist,
                                    gboolean emit_notification,
                                    gboolean force_update)
{
#line 2704 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2706 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "local-ids", create_if_not_exist, ___lambda58__folks_individual_property_is_null, self, ___lambda59__folks_individual_collection_creator, self, ___lambda60__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 13876 "individual.c"
}


static gboolean
__lambda61_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	FolksLocation* _tmp0_;
	FolksLocation* _tmp1_;
#line 2743 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 2745 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_location_details_get_location (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_LOCATION_DETAILS, FolksLocationDetails));
#line 2745 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2745 "/run/build/folks/folks/individual.vala"
	result = _tmp1_ != NULL;
#line 2745 "/run/build/folks/folks/individual.vala"
	return result;
#line 13897 "individual.c"
}


static gboolean
___lambda61__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda61_ ((FolksIndividual*) self, persona);
#line 2743 "/run/build/folks/folks/individual.vala"
	return result;
#line 13909 "individual.c"
}


static gint
__lambda62_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
#line 2746 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 2746 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 2749 "/run/build/folks/folks/individual.vala"
	result = 0;
#line 2749 "/run/build/folks/folks/individual.vala"
	return result;
#line 13926 "individual.c"
}


static gint
___lambda62__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda62_ ((FolksPersona*) a, (FolksPersona*) b);
#line 2743 "/run/build/folks/folks/individual.vala"
	return result;
#line 13938 "individual.c"
}


static void
__lambda63_ (FolksIndividual* self,
             FolksPersona* p)
{
	FolksLocation* new_location = NULL;
	gboolean _tmp2_ = FALSE;
	FolksLocation* _tmp3_;
	FolksLocation* _tmp4_;
	FolksLocation* _tmp5_;
#line 2752 "/run/build/folks/folks/individual.vala"
	new_location = NULL;
#line 2754 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 13955 "individual.c"
		FolksLocation* _tmp0_;
		FolksLocation* _tmp1_;
#line 2756 "/run/build/folks/folks/individual.vala"
		_tmp0_ = folks_location_details_get_location (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_LOCATION_DETAILS, FolksLocationDetails));
#line 2756 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp0_;
#line 2756 "/run/build/folks/folks/individual.vala"
		new_location = _tmp1_;
#line 13964 "individual.c"
	}
#line 2759 "/run/build/folks/folks/individual.vala"
	_tmp3_ = new_location;
#line 2759 "/run/build/folks/folks/individual.vala"
	_tmp4_ = folks_location_details_get_location ((FolksLocationDetails*) self);
#line 2759 "/run/build/folks/folks/individual.vala"
	_tmp5_ = _tmp4_;
#line 2759 "/run/build/folks/folks/individual.vala"
	if ((_tmp3_ == NULL) != (_tmp5_ == NULL)) {
#line 2759 "/run/build/folks/folks/individual.vala"
		_tmp2_ = TRUE;
#line 13976 "individual.c"
	} else {
		gboolean _tmp6_ = FALSE;
		FolksLocation* _tmp7_;
#line 2760 "/run/build/folks/folks/individual.vala"
		_tmp7_ = new_location;
#line 2760 "/run/build/folks/folks/individual.vala"
		if (_tmp7_ != NULL) {
#line 13984 "individual.c"
			FolksLocation* _tmp8_;
			FolksLocation* _tmp9_;
			FolksLocation* _tmp10_;
#line 2760 "/run/build/folks/folks/individual.vala"
			_tmp8_ = new_location;
#line 2760 "/run/build/folks/folks/individual.vala"
			_tmp9_ = folks_location_details_get_location ((FolksLocationDetails*) self);
#line 2760 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _tmp9_;
#line 2760 "/run/build/folks/folks/individual.vala"
			_tmp6_ = !folks_location_equal (_tmp8_, _tmp10_);
#line 13996 "individual.c"
		} else {
#line 2760 "/run/build/folks/folks/individual.vala"
			_tmp6_ = FALSE;
#line 14000 "individual.c"
		}
#line 2760 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _tmp6_;
#line 14004 "individual.c"
	}
#line 2759 "/run/build/folks/folks/individual.vala"
	if (_tmp2_) {
#line 14008 "individual.c"
		FolksLocation* _tmp11_;
		FolksLocation* _tmp12_;
#line 2762 "/run/build/folks/folks/individual.vala"
		_tmp11_ = new_location;
#line 2762 "/run/build/folks/folks/individual.vala"
		_tmp12_ = _g_object_ref0 (_tmp11_);
#line 2762 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_location);
#line 2762 "/run/build/folks/folks/individual.vala"
		self->priv->_location = _tmp12_;
#line 2763 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "location");
#line 14021 "individual.c"
	}
}


static void
___lambda63__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 2743 "/run/build/folks/folks/individual.vala"
	__lambda63_ ((FolksIndividual*) self, chosen_persona);
#line 14032 "individual.c"
}


static void
_folks_individual_update_location (FolksIndividual* self)
{
#line 2741 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2743 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_LOCATION_DETAILS, ___lambda61__folks_individual_property_filter, self, ___lambda62__gcompare_func, "location", ___lambda63__folks_individual_single_valued_property_setter, self);
#line 14043 "individual.c"
}


static gboolean
__lambda55_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* _tmp0_;
#line 2772 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_postal_addresses;
#line 2772 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2772 "/run/build/folks/folks/individual.vala"
	return result;
#line 14058 "individual.c"
}


static gboolean
___lambda55__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda55_ ((FolksIndividual*) self);
#line 2771 "/run/build/folks/folks/individual.vala"
	return result;
#line 14069 "individual.c"
}


static void
__lambda56_ (FolksIndividual* self)
{
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp1_;
	GeeSet* _tmp2_;
	GeeSet* _tmp3_;
#line 2775 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2775 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_postal_addresses);
#line 2775 "/run/build/folks/folks/individual.vala"
	self->priv->_postal_addresses = _tmp0_;
#line 2778 "/run/build/folks/folks/individual.vala"
	_tmp1_ = self->priv->_postal_addresses;
#line 2778 "/run/build/folks/folks/individual.vala"
	_tmp2_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp1_);
#line 2778 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 2778 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_postal_addresses_ro);
#line 2778 "/run/build/folks/folks/individual.vala"
	self->priv->_postal_addresses_ro = _tmp3_;
#line 14096 "individual.c"
}


static void
___lambda56__folks_individual_collection_creator (gpointer self)
{
#line 2771 "/run/build/folks/folks/individual.vala"
	__lambda56_ ((FolksIndividual*) self);
#line 14105 "individual.c"
}


static gboolean
__lambda57_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* new_postal_addresses = NULL;
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp25_;
	FolksSmallSet* _tmp26_;
#line 2782 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_POSTAL_ADDRESS_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2782 "/run/build/folks/folks/individual.vala"
	new_postal_addresses = _tmp0_;
#line 14121 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 2787 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 2787 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2787 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 2787 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 2787 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 2787 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 2787 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 2787 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2787 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 14149 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksPostalAddressDetails* postal_address_details = NULL;
			FolksPersona* _tmp13_;
			FolksPostalAddressDetails* _tmp14_;
			FolksPostalAddressDetails* _tmp15_;
#line 2787 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 2787 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 2787 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2787 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 2787 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 2787 "/run/build/folks/folks/individual.vala"
				break;
#line 14174 "individual.c"
			}
#line 2787 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 2787 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 2787 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 2787 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 2787 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 2789 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 2789 "/run/build/folks/folks/individual.vala"
			_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_POSTAL_ADDRESS_DETAILS) ? ((FolksPostalAddressDetails*) _tmp13_) : NULL);
#line 2789 "/run/build/folks/folks/individual.vala"
			postal_address_details = _tmp14_;
#line 2790 "/run/build/folks/folks/individual.vala"
			_tmp15_ = postal_address_details;
#line 2790 "/run/build/folks/folks/individual.vala"
			if (_tmp15_ != NULL) {
#line 14196 "individual.c"
				{
					GeeIterator* _pafd_it = NULL;
					FolksPostalAddressDetails* _tmp16_;
					GeeSet* _tmp17_;
					GeeSet* _tmp18_;
					GeeIterator* _tmp19_;
#line 2792 "/run/build/folks/folks/individual.vala"
					_tmp16_ = postal_address_details;
#line 2792 "/run/build/folks/folks/individual.vala"
					_tmp17_ = folks_postal_address_details_get_postal_addresses (G_TYPE_CHECK_INSTANCE_CAST (_tmp16_, FOLKS_TYPE_POSTAL_ADDRESS_DETAILS, FolksPostalAddressDetails));
#line 2792 "/run/build/folks/folks/individual.vala"
					_tmp18_ = _tmp17_;
#line 2792 "/run/build/folks/folks/individual.vala"
					_tmp19_ = gee_iterable_iterator ((GeeIterable*) _tmp18_);
#line 2792 "/run/build/folks/folks/individual.vala"
					_pafd_it = _tmp19_;
#line 2792 "/run/build/folks/folks/individual.vala"
					while (TRUE) {
#line 14215 "individual.c"
						GeeIterator* _tmp20_;
						FolksPostalAddressFieldDetails* pafd = NULL;
						GeeIterator* _tmp21_;
						gpointer _tmp22_;
						FolksSmallSet* _tmp23_;
						FolksPostalAddressFieldDetails* _tmp24_;
#line 2792 "/run/build/folks/folks/individual.vala"
						_tmp20_ = _pafd_it;
#line 2792 "/run/build/folks/folks/individual.vala"
						if (!gee_iterator_next (_tmp20_)) {
#line 2792 "/run/build/folks/folks/individual.vala"
							break;
#line 14228 "individual.c"
						}
#line 2792 "/run/build/folks/folks/individual.vala"
						_tmp21_ = _pafd_it;
#line 2792 "/run/build/folks/folks/individual.vala"
						_tmp22_ = gee_iterator_get (_tmp21_);
#line 2792 "/run/build/folks/folks/individual.vala"
						pafd = (FolksPostalAddressFieldDetails*) _tmp22_;
#line 2795 "/run/build/folks/folks/individual.vala"
						_tmp23_ = new_postal_addresses;
#line 2795 "/run/build/folks/folks/individual.vala"
						_tmp24_ = pafd;
#line 2795 "/run/build/folks/folks/individual.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp23_, _tmp24_);
#line 2792 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (pafd);
#line 14244 "individual.c"
					}
#line 2792 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_pafd_it);
#line 14248 "individual.c"
				}
			}
#line 2787 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (postal_address_details);
#line 2787 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 14255 "individual.c"
		}
#line 2787 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 14259 "individual.c"
	}
#line 2800 "/run/build/folks/folks/individual.vala"
	_tmp25_ = new_postal_addresses;
#line 2800 "/run/build/folks/folks/individual.vala"
	_tmp26_ = self->priv->_postal_addresses;
#line 2800 "/run/build/folks/folks/individual.vala"
	if (!folks_utils_set_afd_equal ((GeeSet*) _tmp25_, (GeeSet*) _tmp26_)) {
#line 14267 "individual.c"
		FolksSmallSet* _tmp27_;
		FolksSmallSet* _tmp28_;
		FolksSmallSet* _tmp29_;
		GeeSet* _tmp30_;
		GeeSet* _tmp31_;
#line 2803 "/run/build/folks/folks/individual.vala"
		_tmp27_ = new_postal_addresses;
#line 2803 "/run/build/folks/folks/individual.vala"
		_tmp28_ = _g_object_ref0 (_tmp27_);
#line 2803 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_postal_addresses);
#line 2803 "/run/build/folks/folks/individual.vala"
		self->priv->_postal_addresses = _tmp28_;
#line 2804 "/run/build/folks/folks/individual.vala"
		_tmp29_ = new_postal_addresses;
#line 2804 "/run/build/folks/folks/individual.vala"
		_tmp30_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp29_);
#line 2804 "/run/build/folks/folks/individual.vala"
		_tmp31_ = _tmp30_;
#line 2804 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_postal_addresses_ro);
#line 2804 "/run/build/folks/folks/individual.vala"
		self->priv->_postal_addresses_ro = _tmp31_;
#line 2806 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2806 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_postal_addresses);
#line 2806 "/run/build/folks/folks/individual.vala"
		return result;
#line 14297 "individual.c"
	}
#line 2809 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2809 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_postal_addresses);
#line 2809 "/run/build/folks/folks/individual.vala"
	return result;
#line 14305 "individual.c"
}


static gboolean
___lambda57__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda57_ ((FolksIndividual*) self);
#line 2771 "/run/build/folks/folks/individual.vala"
	return result;
#line 14316 "individual.c"
}


static void
_folks_individual_update_postal_addresses (FolksIndividual* self,
                                           gboolean create_if_not_exist,
                                           gboolean emit_notification,
                                           gboolean force_update)
{
#line 2768 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2771 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "postal-addresses", create_if_not_exist, ___lambda55__folks_individual_property_is_null, self, ___lambda56__folks_individual_collection_creator, self, ___lambda57__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 14330 "individual.c"
}


static gboolean
__lambda49_ (FolksIndividual* self,
             FolksPersona* p)
{
	gboolean result = FALSE;
	FolksBirthdayDetails* details = NULL;
	FolksBirthdayDetails* _tmp0_;
	gboolean _tmp1_ = FALSE;
	FolksBirthdayDetails* _tmp2_;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
#line 2815 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 2817 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetails));
#line 2817 "/run/build/folks/folks/individual.vala"
	details = _tmp0_;
#line 2818 "/run/build/folks/folks/individual.vala"
	_tmp2_ = details;
#line 2818 "/run/build/folks/folks/individual.vala"
	_tmp3_ = folks_birthday_details_get_birthday (_tmp2_);
#line 2818 "/run/build/folks/folks/individual.vala"
	_tmp4_ = _tmp3_;
#line 2818 "/run/build/folks/folks/individual.vala"
	if (_tmp4_ != NULL) {
#line 14359 "individual.c"
		FolksBirthdayDetails* _tmp5_;
		const gchar* _tmp6_;
		const gchar* _tmp7_;
#line 2818 "/run/build/folks/folks/individual.vala"
		_tmp5_ = details;
#line 2818 "/run/build/folks/folks/individual.vala"
		_tmp6_ = folks_birthday_details_get_calendar_event_id (_tmp5_);
#line 2818 "/run/build/folks/folks/individual.vala"
		_tmp7_ = _tmp6_;
#line 2818 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp7_ != NULL;
#line 14371 "individual.c"
	} else {
#line 2818 "/run/build/folks/folks/individual.vala"
		_tmp1_ = FALSE;
#line 14375 "individual.c"
	}
#line 2818 "/run/build/folks/folks/individual.vala"
	result = _tmp1_;
#line 2818 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (details);
#line 2818 "/run/build/folks/folks/individual.vala"
	return result;
#line 14383 "individual.c"
}


static gboolean
___lambda49__folks_individual_property_filter (FolksPersona* persona,
                                               gpointer self)
{
	gboolean result;
	result = __lambda49_ ((FolksIndividual*) self, persona);
#line 2815 "/run/build/folks/folks/individual.vala"
	return result;
#line 14395 "individual.c"
}


static gpointer
_g_date_time_ref0 (gpointer self)
{
#line 2821 "/run/build/folks/folks/individual.vala"
	return self ? g_date_time_ref (self) : NULL;
#line 14404 "individual.c"
}


static gint
__lambda50_ (FolksPersona* a,
             FolksPersona* b)
{
	gint result = 0;
	GDateTime* a_birthday = NULL;
	GDateTime* _tmp0_;
	GDateTime* _tmp1_;
	GDateTime* _tmp2_;
	GDateTime* b_birthday = NULL;
	GDateTime* _tmp3_;
	GDateTime* _tmp4_;
	GDateTime* _tmp5_;
	gchar* a_event_id = NULL;
	const gchar* _tmp6_;
	const gchar* _tmp7_;
	gchar* _tmp8_;
	gchar* b_event_id = NULL;
	const gchar* _tmp9_;
	const gchar* _tmp10_;
	gchar* _tmp11_;
	gint _tmp12_ = 0;
	GDateTime* _tmp13_;
	gint a_birthday_is_set = 0;
	gint _tmp14_ = 0;
	GDateTime* _tmp15_;
	gint b_birthday_is_set = 0;
	gint _tmp16_ = 0;
	const gchar* _tmp17_;
	gint a_event_id_is_set = 0;
	gint _tmp18_ = 0;
	const gchar* _tmp19_;
	gint b_event_id_is_set = 0;
	gint _tmp20_;
	gint _tmp21_;
	gint _tmp22_;
#line 2819 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (a != NULL, 0);
#line 2819 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (b != NULL, 0);
#line 2821 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_birthday_details_get_birthday (G_TYPE_CHECK_INSTANCE_CAST (a, FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetails));
#line 2821 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 2821 "/run/build/folks/folks/individual.vala"
	_tmp2_ = _g_date_time_ref0 (_tmp1_);
#line 2821 "/run/build/folks/folks/individual.vala"
	a_birthday = _tmp2_;
#line 2822 "/run/build/folks/folks/individual.vala"
	_tmp3_ = folks_birthday_details_get_birthday (G_TYPE_CHECK_INSTANCE_CAST (b, FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetails));
#line 2822 "/run/build/folks/folks/individual.vala"
	_tmp4_ = _tmp3_;
#line 2822 "/run/build/folks/folks/individual.vala"
	_tmp5_ = _g_date_time_ref0 (_tmp4_);
#line 2822 "/run/build/folks/folks/individual.vala"
	b_birthday = _tmp5_;
#line 2823 "/run/build/folks/folks/individual.vala"
	_tmp6_ = folks_birthday_details_get_calendar_event_id (G_TYPE_CHECK_INSTANCE_CAST (a, FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetails));
#line 2823 "/run/build/folks/folks/individual.vala"
	_tmp7_ = _tmp6_;
#line 2823 "/run/build/folks/folks/individual.vala"
	_tmp8_ = g_strdup (_tmp7_);
#line 2823 "/run/build/folks/folks/individual.vala"
	a_event_id = _tmp8_;
#line 2824 "/run/build/folks/folks/individual.vala"
	_tmp9_ = folks_birthday_details_get_calendar_event_id (G_TYPE_CHECK_INSTANCE_CAST (b, FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetails));
#line 2824 "/run/build/folks/folks/individual.vala"
	_tmp10_ = _tmp9_;
#line 2824 "/run/build/folks/folks/individual.vala"
	_tmp11_ = g_strdup (_tmp10_);
#line 2824 "/run/build/folks/folks/individual.vala"
	b_event_id = _tmp11_;
#line 2826 "/run/build/folks/folks/individual.vala"
	_tmp13_ = a_birthday;
#line 2826 "/run/build/folks/folks/individual.vala"
	if (_tmp13_ != NULL) {
#line 2826 "/run/build/folks/folks/individual.vala"
		_tmp12_ = 1;
#line 14486 "individual.c"
	} else {
#line 2826 "/run/build/folks/folks/individual.vala"
		_tmp12_ = 0;
#line 14490 "individual.c"
	}
#line 2826 "/run/build/folks/folks/individual.vala"
	a_birthday_is_set = _tmp12_;
#line 2827 "/run/build/folks/folks/individual.vala"
	_tmp15_ = b_birthday;
#line 2827 "/run/build/folks/folks/individual.vala"
	if (_tmp15_ != NULL) {
#line 2827 "/run/build/folks/folks/individual.vala"
		_tmp14_ = 1;
#line 14500 "individual.c"
	} else {
#line 2827 "/run/build/folks/folks/individual.vala"
		_tmp14_ = 0;
#line 14504 "individual.c"
	}
#line 2827 "/run/build/folks/folks/individual.vala"
	b_birthday_is_set = _tmp14_;
#line 2830 "/run/build/folks/folks/individual.vala"
	_tmp17_ = a_event_id;
#line 2830 "/run/build/folks/folks/individual.vala"
	if (_tmp17_ != NULL) {
#line 2830 "/run/build/folks/folks/individual.vala"
		_tmp16_ = 1;
#line 14514 "individual.c"
	} else {
#line 2830 "/run/build/folks/folks/individual.vala"
		_tmp16_ = 0;
#line 14518 "individual.c"
	}
#line 2830 "/run/build/folks/folks/individual.vala"
	a_event_id_is_set = _tmp16_;
#line 2831 "/run/build/folks/folks/individual.vala"
	_tmp19_ = b_event_id;
#line 2831 "/run/build/folks/folks/individual.vala"
	if (_tmp19_ != NULL) {
#line 2831 "/run/build/folks/folks/individual.vala"
		_tmp18_ = 1;
#line 14528 "individual.c"
	} else {
#line 2831 "/run/build/folks/folks/individual.vala"
		_tmp18_ = 0;
#line 14532 "individual.c"
	}
#line 2831 "/run/build/folks/folks/individual.vala"
	b_event_id_is_set = _tmp18_;
#line 2836 "/run/build/folks/folks/individual.vala"
	_tmp20_ = a_birthday_is_set;
#line 2836 "/run/build/folks/folks/individual.vala"
	_tmp21_ = a_event_id_is_set;
#line 2836 "/run/build/folks/folks/individual.vala"
	_tmp22_ = b_birthday_is_set;
#line 2836 "/run/build/folks/folks/individual.vala"
	result = (_tmp20_ + _tmp21_) - (_tmp22_ + b_event_id_is_set);
#line 2836 "/run/build/folks/folks/individual.vala"
	_g_free0 (b_event_id);
#line 2836 "/run/build/folks/folks/individual.vala"
	_g_free0 (a_event_id);
#line 2836 "/run/build/folks/folks/individual.vala"
	_g_date_time_unref0 (b_birthday);
#line 2836 "/run/build/folks/folks/individual.vala"
	_g_date_time_unref0 (a_birthday);
#line 2836 "/run/build/folks/folks/individual.vala"
	return result;
#line 14554 "individual.c"
}


static gint
___lambda50__gcompare_func (gconstpointer a,
                            gconstpointer b)
{
	gint result;
	result = __lambda50_ ((FolksPersona*) a, (FolksPersona*) b);
#line 2815 "/run/build/folks/folks/individual.vala"
	return result;
#line 14566 "individual.c"
}


static void
__lambda51_ (FolksIndividual* self,
             FolksPersona* p)
{
	GDateTime* bday = NULL;
	const gchar* calendar_event_id = NULL;
	gboolean _tmp4_ = FALSE;
	gboolean _tmp5_ = FALSE;
	gboolean _tmp6_ = FALSE;
	GDateTime* _tmp7_;
#line 2840 "/run/build/folks/folks/individual.vala"
	bday = NULL;
#line 2841 "/run/build/folks/folks/individual.vala"
	calendar_event_id = NULL;
#line 2843 "/run/build/folks/folks/individual.vala"
	if (p != NULL) {
#line 14586 "individual.c"
		GDateTime* _tmp0_;
		GDateTime* _tmp1_;
		const gchar* _tmp2_;
		const gchar* _tmp3_;
#line 2845 "/run/build/folks/folks/individual.vala"
		_tmp0_ = folks_birthday_details_get_birthday (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetails));
#line 2845 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp0_;
#line 2845 "/run/build/folks/folks/individual.vala"
		bday = _tmp1_;
#line 2846 "/run/build/folks/folks/individual.vala"
		_tmp2_ = folks_birthday_details_get_calendar_event_id (G_TYPE_CHECK_INSTANCE_CAST (p, FOLKS_TYPE_BIRTHDAY_DETAILS, FolksBirthdayDetails));
#line 2846 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _tmp2_;
#line 2846 "/run/build/folks/folks/individual.vala"
		calendar_event_id = _tmp3_;
#line 14603 "individual.c"
	}
#line 2849 "/run/build/folks/folks/individual.vala"
	_tmp7_ = self->priv->_birthday;
#line 2849 "/run/build/folks/folks/individual.vala"
	if (_tmp7_ == NULL) {
#line 14609 "individual.c"
		GDateTime* _tmp8_;
#line 2849 "/run/build/folks/folks/individual.vala"
		_tmp8_ = bday;
#line 2849 "/run/build/folks/folks/individual.vala"
		_tmp6_ = _tmp8_ != NULL;
#line 14615 "individual.c"
	} else {
#line 2849 "/run/build/folks/folks/individual.vala"
		_tmp6_ = FALSE;
#line 14619 "individual.c"
	}
#line 2849 "/run/build/folks/folks/individual.vala"
	if (_tmp6_) {
#line 2849 "/run/build/folks/folks/individual.vala"
		_tmp5_ = TRUE;
#line 14625 "individual.c"
	} else {
		gboolean _tmp9_ = FALSE;
		GDateTime* _tmp10_;
#line 2850 "/run/build/folks/folks/individual.vala"
		_tmp10_ = self->priv->_birthday;
#line 2850 "/run/build/folks/folks/individual.vala"
		if (_tmp10_ != NULL) {
#line 14633 "individual.c"
			gboolean _tmp11_ = FALSE;
			GDateTime* _tmp12_;
#line 2851 "/run/build/folks/folks/individual.vala"
			_tmp12_ = bday;
#line 2851 "/run/build/folks/folks/individual.vala"
			if (_tmp12_ == NULL) {
#line 2851 "/run/build/folks/folks/individual.vala"
				_tmp11_ = TRUE;
#line 14642 "individual.c"
			} else {
				GDateTime* _tmp13_;
				GDateTime* _tmp14_;
#line 2851 "/run/build/folks/folks/individual.vala"
				_tmp13_ = self->priv->_birthday;
#line 2851 "/run/build/folks/folks/individual.vala"
				_tmp14_ = bday;
#line 2851 "/run/build/folks/folks/individual.vala"
				_tmp11_ = !g_date_time_equal ((GDateTime*) _tmp13_, (GDateTime*) _tmp14_);
#line 14652 "individual.c"
			}
#line 2851 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _tmp11_;
#line 14656 "individual.c"
		} else {
#line 2850 "/run/build/folks/folks/individual.vala"
			_tmp9_ = FALSE;
#line 14660 "individual.c"
		}
#line 2850 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp9_;
#line 14664 "individual.c"
	}
#line 2849 "/run/build/folks/folks/individual.vala"
	if (_tmp5_) {
#line 2849 "/run/build/folks/folks/individual.vala"
		_tmp4_ = TRUE;
#line 14670 "individual.c"
	} else {
		const gchar* _tmp15_;
		const gchar* _tmp16_;
#line 2852 "/run/build/folks/folks/individual.vala"
		_tmp15_ = self->priv->_calendar_event_id;
#line 2852 "/run/build/folks/folks/individual.vala"
		_tmp16_ = calendar_event_id;
#line 2852 "/run/build/folks/folks/individual.vala"
		_tmp4_ = g_strcmp0 (_tmp15_, _tmp16_) != 0;
#line 14680 "individual.c"
	}
#line 2849 "/run/build/folks/folks/individual.vala"
	if (_tmp4_) {
#line 14684 "individual.c"
		GDateTime* _tmp17_;
		GDateTime* _tmp18_;
		const gchar* _tmp19_;
		gchar* _tmp20_;
#line 2854 "/run/build/folks/folks/individual.vala"
		_tmp17_ = bday;
#line 2854 "/run/build/folks/folks/individual.vala"
		_tmp18_ = _g_date_time_ref0 (_tmp17_);
#line 2854 "/run/build/folks/folks/individual.vala"
		_g_date_time_unref0 (self->priv->_birthday);
#line 2854 "/run/build/folks/folks/individual.vala"
		self->priv->_birthday = _tmp18_;
#line 2855 "/run/build/folks/folks/individual.vala"
		_tmp19_ = calendar_event_id;
#line 2855 "/run/build/folks/folks/individual.vala"
		_tmp20_ = g_strdup (_tmp19_);
#line 2855 "/run/build/folks/folks/individual.vala"
		_g_free0 (self->priv->_calendar_event_id);
#line 2855 "/run/build/folks/folks/individual.vala"
		self->priv->_calendar_event_id = _tmp20_;
#line 2857 "/run/build/folks/folks/individual.vala"
		g_object_freeze_notify ((GObject*) self);
#line 2858 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "birthday");
#line 2859 "/run/build/folks/folks/individual.vala"
		g_object_notify ((GObject*) self, "calendar-event-id");
#line 2860 "/run/build/folks/folks/individual.vala"
		g_object_thaw_notify ((GObject*) self);
#line 14713 "individual.c"
	}
}


static void
___lambda51__folks_individual_single_valued_property_setter (FolksPersona* chosen_persona,
                                                             gpointer self)
{
#line 2815 "/run/build/folks/folks/individual.vala"
	__lambda51_ ((FolksIndividual*) self, chosen_persona);
#line 14724 "individual.c"
}


static void
_folks_individual_update_birthday (FolksIndividual* self)
{
#line 2813 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2815 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_single_valued_property (self, FOLKS_TYPE_BIRTHDAY_DETAILS, ___lambda49__folks_individual_property_filter, self, ___lambda50__gcompare_func, "birthday", ___lambda51__folks_individual_single_valued_property_setter, self);
#line 14735 "individual.c"
}


static gboolean
__lambda52_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* _tmp0_;
#line 2868 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_notes;
#line 2868 "/run/build/folks/folks/individual.vala"
	result = _tmp0_ == NULL;
#line 2868 "/run/build/folks/folks/individual.vala"
	return result;
#line 14750 "individual.c"
}


static gboolean
___lambda52__folks_individual_property_is_null (gpointer self)
{
	gboolean result;
	result = __lambda52_ ((FolksIndividual*) self);
#line 2867 "/run/build/folks/folks/individual.vala"
	return result;
#line 14761 "individual.c"
}


static void
__lambda53_ (FolksIndividual* self)
{
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp1_;
	GeeSet* _tmp2_;
	GeeSet* _tmp3_;
#line 2871 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_NOTE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2871 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_notes);
#line 2871 "/run/build/folks/folks/individual.vala"
	self->priv->_notes = _tmp0_;
#line 2874 "/run/build/folks/folks/individual.vala"
	_tmp1_ = self->priv->_notes;
#line 2874 "/run/build/folks/folks/individual.vala"
	_tmp2_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp1_);
#line 2874 "/run/build/folks/folks/individual.vala"
	_tmp3_ = _tmp2_;
#line 2874 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_notes_ro);
#line 2874 "/run/build/folks/folks/individual.vala"
	self->priv->_notes_ro = _tmp3_;
#line 14788 "individual.c"
}


static void
___lambda53__folks_individual_collection_creator (gpointer self)
{
#line 2867 "/run/build/folks/folks/individual.vala"
	__lambda53_ ((FolksIndividual*) self);
#line 14797 "individual.c"
}


static gboolean
__lambda54_ (FolksIndividual* self)
{
	gboolean result = FALSE;
	FolksSmallSet* new_notes = NULL;
	FolksSmallSet* _tmp0_;
	FolksSmallSet* _tmp25_;
	FolksSmallSet* _tmp26_;
#line 2878 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_NOTE_FIELD_DETAILS, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, _folks_abstract_field_details_hash_static_gee_hash_data_func, NULL, NULL, _folks_abstract_field_details_equal_static_gee_equal_data_func, NULL, NULL);
#line 2878 "/run/build/folks/folks/individual.vala"
	new_notes = _tmp0_;
#line 14813 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 2882 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 2882 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 2882 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 2882 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 2882 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 2882 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 2882 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 2882 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 2882 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 14841 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksNoteDetails* note_details = NULL;
			FolksPersona* _tmp13_;
			FolksNoteDetails* _tmp14_;
			FolksNoteDetails* _tmp15_;
#line 2882 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 2882 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 2882 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 2882 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 2882 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 2882 "/run/build/folks/folks/individual.vala"
				break;
#line 14866 "individual.c"
			}
#line 2882 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 2882 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 2882 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 2882 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 2882 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 2884 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 2884 "/run/build/folks/folks/individual.vala"
			_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_NOTE_DETAILS) ? ((FolksNoteDetails*) _tmp13_) : NULL);
#line 2884 "/run/build/folks/folks/individual.vala"
			note_details = _tmp14_;
#line 2885 "/run/build/folks/folks/individual.vala"
			_tmp15_ = note_details;
#line 2885 "/run/build/folks/folks/individual.vala"
			if (_tmp15_ != NULL) {
#line 14888 "individual.c"
				{
					GeeIterator* _n_it = NULL;
					FolksNoteDetails* _tmp16_;
					GeeSet* _tmp17_;
					GeeSet* _tmp18_;
					GeeIterator* _tmp19_;
#line 2887 "/run/build/folks/folks/individual.vala"
					_tmp16_ = note_details;
#line 2887 "/run/build/folks/folks/individual.vala"
					_tmp17_ = folks_note_details_get_notes (G_TYPE_CHECK_INSTANCE_CAST (_tmp16_, FOLKS_TYPE_NOTE_DETAILS, FolksNoteDetails));
#line 2887 "/run/build/folks/folks/individual.vala"
					_tmp18_ = _tmp17_;
#line 2887 "/run/build/folks/folks/individual.vala"
					_tmp19_ = gee_iterable_iterator ((GeeIterable*) _tmp18_);
#line 2887 "/run/build/folks/folks/individual.vala"
					_n_it = _tmp19_;
#line 2887 "/run/build/folks/folks/individual.vala"
					while (TRUE) {
#line 14907 "individual.c"
						GeeIterator* _tmp20_;
						FolksNoteFieldDetails* n = NULL;
						GeeIterator* _tmp21_;
						gpointer _tmp22_;
						FolksSmallSet* _tmp23_;
						FolksNoteFieldDetails* _tmp24_;
#line 2887 "/run/build/folks/folks/individual.vala"
						_tmp20_ = _n_it;
#line 2887 "/run/build/folks/folks/individual.vala"
						if (!gee_iterator_next (_tmp20_)) {
#line 2887 "/run/build/folks/folks/individual.vala"
							break;
#line 14920 "individual.c"
						}
#line 2887 "/run/build/folks/folks/individual.vala"
						_tmp21_ = _n_it;
#line 2887 "/run/build/folks/folks/individual.vala"
						_tmp22_ = gee_iterator_get (_tmp21_);
#line 2887 "/run/build/folks/folks/individual.vala"
						n = (FolksNoteFieldDetails*) _tmp22_;
#line 2889 "/run/build/folks/folks/individual.vala"
						_tmp23_ = new_notes;
#line 2889 "/run/build/folks/folks/individual.vala"
						_tmp24_ = n;
#line 2889 "/run/build/folks/folks/individual.vala"
						gee_abstract_collection_add ((GeeAbstractCollection*) _tmp23_, _tmp24_);
#line 2887 "/run/build/folks/folks/individual.vala"
						_g_object_unref0 (n);
#line 14936 "individual.c"
					}
#line 2887 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (_n_it);
#line 14940 "individual.c"
				}
			}
#line 2882 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (note_details);
#line 2882 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 14947 "individual.c"
		}
#line 2882 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 14951 "individual.c"
	}
#line 2894 "/run/build/folks/folks/individual.vala"
	_tmp25_ = new_notes;
#line 2894 "/run/build/folks/folks/individual.vala"
	_tmp26_ = self->priv->_notes;
#line 2894 "/run/build/folks/folks/individual.vala"
	if (!folks_utils_set_afd_equal ((GeeSet*) _tmp25_, (GeeSet*) _tmp26_)) {
#line 14959 "individual.c"
		FolksSmallSet* _tmp27_;
		FolksSmallSet* _tmp28_;
		FolksSmallSet* _tmp29_;
		GeeSet* _tmp30_;
		GeeSet* _tmp31_;
#line 2896 "/run/build/folks/folks/individual.vala"
		_tmp27_ = new_notes;
#line 2896 "/run/build/folks/folks/individual.vala"
		_tmp28_ = _g_object_ref0 (_tmp27_);
#line 2896 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_notes);
#line 2896 "/run/build/folks/folks/individual.vala"
		self->priv->_notes = _tmp28_;
#line 2897 "/run/build/folks/folks/individual.vala"
		_tmp29_ = new_notes;
#line 2897 "/run/build/folks/folks/individual.vala"
		_tmp30_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp29_);
#line 2897 "/run/build/folks/folks/individual.vala"
		_tmp31_ = _tmp30_;
#line 2897 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (self->priv->_notes_ro);
#line 2897 "/run/build/folks/folks/individual.vala"
		self->priv->_notes_ro = _tmp31_;
#line 2898 "/run/build/folks/folks/individual.vala"
		result = TRUE;
#line 2898 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (new_notes);
#line 2898 "/run/build/folks/folks/individual.vala"
		return result;
#line 14989 "individual.c"
	}
#line 2901 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 2901 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (new_notes);
#line 2901 "/run/build/folks/folks/individual.vala"
	return result;
#line 14997 "individual.c"
}


static gboolean
___lambda54__folks_individual_multi_valued_property_setter (gpointer self)
{
	gboolean result;
	result = __lambda54_ ((FolksIndividual*) self);
#line 2867 "/run/build/folks/folks/individual.vala"
	return result;
#line 15008 "individual.c"
}


static void
_folks_individual_update_notes (FolksIndividual* self,
                                gboolean create_if_not_exist,
                                gboolean emit_notification,
                                gboolean force_update)
{
#line 2865 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2867 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_multi_valued_property (self, "notes", create_if_not_exist, ___lambda52__folks_individual_property_is_null, self, ___lambda53__folks_individual_collection_creator, self, ___lambda54__folks_individual_multi_valued_property_setter, self, emit_notification, force_update);
#line 15022 "individual.c"
}


static void
__folks_individual_store_removed_cb_folks_persona_store_removed (FolksPersonaStore* _sender,
                                                                 gpointer self)
{
#line 2941 "/run/build/folks/folks/individual.vala"
	_folks_individual_store_removed_cb ((FolksIndividual*) self, _sender);
#line 15032 "individual.c"
}


static void
__folks_individual_store_personas_changed_cb_folks_persona_store_personas_changed (FolksPersonaStore* _sender,
                                                                                   GeeSet* added,
                                                                                   GeeSet* removed,
                                                                                   const gchar* message,
                                                                                   FolksPersona* actor,
                                                                                   FolksGroupDetailsChangeReason reason,
                                                                                   gpointer self)
{
#line 2942 "/run/build/folks/folks/individual.vala"
	_folks_individual_store_personas_changed_cb ((FolksIndividual*) self, _sender, added, removed, message, actor, reason);
#line 15047 "individual.c"
}


static void
_folks_individual_set_personas (FolksIndividual* self,
                                GeeSet* personas,
                                FolksIndividual* replacement_individual)
{
	gboolean _tmp0_ = FALSE;
	FolksSmallSet* added = NULL;
	FolksSmallSet* _tmp1_;
	FolksSmallSet* removed = NULL;
	FolksSmallSet* _tmp2_;
	FolksSmallSet* _tmp85_;
	FolksSmallSet* _tmp86_;
	gboolean _tmp87_ = FALSE;
	guint _tmp88_;
	gboolean new_is_user = FALSE;
	gboolean _tmp89_;
	gboolean _tmp90_;
	FolksSmallSet* _tmp92_;
	gint _tmp93_;
	gint _tmp94_;
	FolksSmallSet* _tmp95_;
	gint _tmp96_;
	gint _tmp97_;
#line 2905 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 2908 "/run/build/folks/folks/individual.vala"
	if (replacement_individual == NULL) {
#line 2908 "/run/build/folks/folks/individual.vala"
		_tmp0_ = TRUE;
#line 15080 "individual.c"
	} else {
#line 2908 "/run/build/folks/folks/individual.vala"
		_tmp0_ = replacement_individual != self;
#line 15084 "individual.c"
	}
#line 2908 "/run/build/folks/folks/individual.vala"
	_vala_assert (_tmp0_, "replacement_individual == null || replacement_individual != this");
#line 2910 "/run/build/folks/folks/individual.vala"
	_tmp1_ = folks_small_set_new (FOLKS_TYPE_PERSONA, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL);
#line 2910 "/run/build/folks/folks/individual.vala"
	added = _tmp1_;
#line 2911 "/run/build/folks/folks/individual.vala"
	_tmp2_ = folks_small_set_new (FOLKS_TYPE_PERSONA, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL);
#line 2911 "/run/build/folks/folks/individual.vala"
	removed = _tmp2_;
#line 2915 "/run/build/folks/folks/individual.vala"
	if (personas != NULL) {
#line 15098 "individual.c"
		{
			GeeIterator* _p_it = NULL;
			GeeIterator* _tmp3_;
#line 2917 "/run/build/folks/folks/individual.vala"
			_tmp3_ = gee_iterable_iterator ((GeeIterable*) G_TYPE_CHECK_INSTANCE_CAST (personas, GEE_TYPE_SET, GeeSet));
#line 2917 "/run/build/folks/folks/individual.vala"
			_p_it = _tmp3_;
#line 2917 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 15108 "individual.c"
				GeeIterator* _tmp4_;
				FolksPersona* p = NULL;
				GeeIterator* _tmp5_;
				gpointer _tmp6_;
				FolksSmallSet* _tmp7_;
				FolksPersona* _tmp8_;
#line 2917 "/run/build/folks/folks/individual.vala"
				_tmp4_ = _p_it;
#line 2917 "/run/build/folks/folks/individual.vala"
				if (!gee_iterator_next (_tmp4_)) {
#line 2917 "/run/build/folks/folks/individual.vala"
					break;
#line 15121 "individual.c"
				}
#line 2917 "/run/build/folks/folks/individual.vala"
				_tmp5_ = _p_it;
#line 2917 "/run/build/folks/folks/individual.vala"
				_tmp6_ = gee_iterator_get (_tmp5_);
#line 2917 "/run/build/folks/folks/individual.vala"
				p = (FolksPersona*) _tmp6_;
#line 2919 "/run/build/folks/folks/individual.vala"
				_tmp7_ = self->priv->_persona_set;
#line 2919 "/run/build/folks/folks/individual.vala"
				_tmp8_ = p;
#line 2919 "/run/build/folks/folks/individual.vala"
				if (!gee_abstract_collection_contains ((GeeAbstractCollection*) _tmp7_, _tmp8_)) {
#line 15135 "individual.c"
					FolksPersona* _tmp9_;
					gboolean _tmp10_;
					gboolean _tmp11_;
					FolksSmallSet* _tmp13_;
					FolksPersona* _tmp14_;
					FolksSmallSet* _tmp15_;
					FolksPersona* _tmp16_;
					FolksPersona* _tmp17_;
					FolksPersonaStore* store = NULL;
					FolksPersona* _tmp18_;
					FolksPersonaStore* _tmp19_;
					FolksPersonaStore* _tmp20_;
					FolksPersonaStore* _tmp21_;
					guint num_from_store = 0U;
					GeeHashMap* _tmp22_;
					FolksPersonaStore* _tmp23_;
					gpointer _tmp24_;
					guint _tmp25_;
#line 2922 "/run/build/folks/folks/individual.vala"
					_tmp9_ = p;
#line 2922 "/run/build/folks/folks/individual.vala"
					_tmp10_ = folks_persona_get_is_user (_tmp9_);
#line 2922 "/run/build/folks/folks/individual.vala"
					_tmp11_ = _tmp10_;
#line 2922 "/run/build/folks/folks/individual.vala"
					if (_tmp11_) {
#line 15162 "individual.c"
						guint _tmp12_;
#line 2923 "/run/build/folks/folks/individual.vala"
						_tmp12_ = self->priv->_persona_user_count;
#line 2923 "/run/build/folks/folks/individual.vala"
						self->priv->_persona_user_count = _tmp12_ + 1;
#line 15168 "individual.c"
					}
#line 2925 "/run/build/folks/folks/individual.vala"
					_tmp13_ = added;
#line 2925 "/run/build/folks/folks/individual.vala"
					_tmp14_ = p;
#line 2925 "/run/build/folks/folks/individual.vala"
					gee_abstract_collection_add ((GeeAbstractCollection*) _tmp13_, _tmp14_);
#line 2927 "/run/build/folks/folks/individual.vala"
					_tmp15_ = self->priv->_persona_set;
#line 2927 "/run/build/folks/folks/individual.vala"
					_tmp16_ = p;
#line 2927 "/run/build/folks/folks/individual.vala"
					gee_abstract_collection_add ((GeeAbstractCollection*) _tmp15_, _tmp16_);
#line 2928 "/run/build/folks/folks/individual.vala"
					_tmp17_ = p;
#line 2928 "/run/build/folks/folks/individual.vala"
					_folks_individual_connect_to_persona (self, _tmp17_);
#line 2931 "/run/build/folks/folks/individual.vala"
					_tmp18_ = p;
#line 2931 "/run/build/folks/folks/individual.vala"
					_tmp19_ = folks_persona_get_store (_tmp18_);
#line 2931 "/run/build/folks/folks/individual.vala"
					_tmp20_ = _tmp19_;
#line 2931 "/run/build/folks/folks/individual.vala"
					_tmp21_ = _g_object_ref0 (_tmp20_);
#line 2931 "/run/build/folks/folks/individual.vala"
					store = _tmp21_;
#line 2932 "/run/build/folks/folks/individual.vala"
					_tmp22_ = self->priv->_stores;
#line 2932 "/run/build/folks/folks/individual.vala"
					_tmp23_ = store;
#line 2932 "/run/build/folks/folks/individual.vala"
					_tmp24_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp22_, _tmp23_);
#line 2932 "/run/build/folks/folks/individual.vala"
					num_from_store = (guint) ((guintptr) _tmp24_);
#line 2933 "/run/build/folks/folks/individual.vala"
					_tmp25_ = num_from_store;
#line 2933 "/run/build/folks/folks/individual.vala"
					if (_tmp25_ == ((guint) 0)) {
#line 15208 "individual.c"
						GeeHashMap* _tmp26_;
						FolksPersonaStore* _tmp27_;
						guint _tmp28_;
#line 2935 "/run/build/folks/folks/individual.vala"
						_tmp26_ = self->priv->_stores;
#line 2935 "/run/build/folks/folks/individual.vala"
						_tmp27_ = store;
#line 2935 "/run/build/folks/folks/individual.vala"
						_tmp28_ = num_from_store;
#line 2935 "/run/build/folks/folks/individual.vala"
						gee_abstract_map_set ((GeeAbstractMap*) _tmp26_, _tmp27_, (gpointer) ((guintptr) (_tmp28_ + 1)));
#line 15220 "individual.c"
					} else {
						GeeHashMap* _tmp29_;
						FolksPersonaStore* _tmp30_;
						FolksPersonaStore* _tmp31_;
						FolksPersonaStore* _tmp32_;
#line 2939 "/run/build/folks/folks/individual.vala"
						_tmp29_ = self->priv->_stores;
#line 2939 "/run/build/folks/folks/individual.vala"
						_tmp30_ = store;
#line 2939 "/run/build/folks/folks/individual.vala"
						gee_abstract_map_set ((GeeAbstractMap*) _tmp29_, _tmp30_, (gpointer) ((guintptr) ((guint) 1)));
#line 2941 "/run/build/folks/folks/individual.vala"
						_tmp31_ = store;
#line 2941 "/run/build/folks/folks/individual.vala"
						g_signal_connect_object (_tmp31_, "removed", (GCallback) __folks_individual_store_removed_cb_folks_persona_store_removed, self, 0);
#line 2942 "/run/build/folks/folks/individual.vala"
						_tmp32_ = store;
#line 2942 "/run/build/folks/folks/individual.vala"
						g_signal_connect_object (_tmp32_, "personas-changed", (GCallback) __folks_individual_store_personas_changed_cb_folks_persona_store_personas_changed, self, 0);
#line 15240 "individual.c"
					}
#line 2919 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (store);
#line 15244 "individual.c"
				}
#line 2917 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 15248 "individual.c"
			}
#line 2917 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_p_it);
#line 15252 "individual.c"
		}
	}
	{
		FolksSmallSet* _p_list = NULL;
		FolksSmallSet* _tmp33_;
		FolksSmallSet* _tmp34_;
		gint _p_size = 0;
		FolksSmallSet* _tmp35_;
		gint _tmp36_;
		gint _tmp37_;
		gint _p_index = 0;
#line 2950 "/run/build/folks/folks/individual.vala"
		_tmp33_ = self->priv->_persona_set;
#line 2950 "/run/build/folks/folks/individual.vala"
		_tmp34_ = _g_object_ref0 (_tmp33_);
#line 2950 "/run/build/folks/folks/individual.vala"
		_p_list = _tmp34_;
#line 2950 "/run/build/folks/folks/individual.vala"
		_tmp35_ = _p_list;
#line 2950 "/run/build/folks/folks/individual.vala"
		_tmp36_ = gee_collection_get_size ((GeeCollection*) _tmp35_);
#line 2950 "/run/build/folks/folks/individual.vala"
		_tmp37_ = _tmp36_;
#line 2950 "/run/build/folks/folks/individual.vala"
		_p_size = _tmp37_;
#line 2950 "/run/build/folks/folks/individual.vala"
		_p_index = -1;
#line 2950 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 15282 "individual.c"
			gint _tmp38_;
			gint _tmp39_;
			gint _tmp40_;
			FolksPersona* p = NULL;
			FolksSmallSet* _tmp41_;
			gint _tmp42_;
			gconstpointer _tmp43_;
			FolksPersona* _tmp44_;
			gboolean _tmp45_ = FALSE;
#line 2950 "/run/build/folks/folks/individual.vala"
			_tmp38_ = _p_index;
#line 2950 "/run/build/folks/folks/individual.vala"
			_p_index = _tmp38_ + 1;
#line 2950 "/run/build/folks/folks/individual.vala"
			_tmp39_ = _p_index;
#line 2950 "/run/build/folks/folks/individual.vala"
			_tmp40_ = _p_size;
#line 2950 "/run/build/folks/folks/individual.vala"
			if (!(_tmp39_ < _tmp40_)) {
#line 2950 "/run/build/folks/folks/individual.vala"
				break;
#line 15304 "individual.c"
			}
#line 2950 "/run/build/folks/folks/individual.vala"
			_tmp41_ = _p_list;
#line 2950 "/run/build/folks/folks/individual.vala"
			_tmp42_ = _p_index;
#line 2950 "/run/build/folks/folks/individual.vala"
			_tmp43_ = folks_small_set_get (_tmp41_, _tmp42_);
#line 2950 "/run/build/folks/folks/individual.vala"
			_tmp44_ = _g_object_ref0 ((FolksPersona*) _tmp43_);
#line 2950 "/run/build/folks/folks/individual.vala"
			p = _tmp44_;
#line 2952 "/run/build/folks/folks/individual.vala"
			if (personas == NULL) {
#line 2952 "/run/build/folks/folks/individual.vala"
				_tmp45_ = TRUE;
#line 15320 "individual.c"
			} else {
				FolksPersona* _tmp46_;
#line 2952 "/run/build/folks/folks/individual.vala"
				_tmp46_ = p;
#line 2952 "/run/build/folks/folks/individual.vala"
				_tmp45_ = !gee_collection_contains ((GeeCollection*) G_TYPE_CHECK_INSTANCE_CAST (personas, GEE_TYPE_SET, GeeSet), _tmp46_);
#line 15327 "individual.c"
			}
#line 2952 "/run/build/folks/folks/individual.vala"
			if (_tmp45_) {
#line 15331 "individual.c"
				FolksPersona* _tmp47_;
				gboolean _tmp48_;
				gboolean _tmp49_;
				FolksSmallSet* _tmp51_;
				FolksPersona* _tmp52_;
				FolksPersonaStore* store = NULL;
				FolksPersona* _tmp53_;
				FolksPersonaStore* _tmp54_;
				FolksPersonaStore* _tmp55_;
				FolksPersonaStore* _tmp56_;
				guint num_from_store = 0U;
				GeeHashMap* _tmp57_;
				FolksPersonaStore* _tmp58_;
				gpointer _tmp59_;
				guint _tmp60_;
				FolksPersona* _tmp70_;
#line 2955 "/run/build/folks/folks/individual.vala"
				_tmp47_ = p;
#line 2955 "/run/build/folks/folks/individual.vala"
				_tmp48_ = folks_persona_get_is_user (_tmp47_);
#line 2955 "/run/build/folks/folks/individual.vala"
				_tmp49_ = _tmp48_;
#line 2955 "/run/build/folks/folks/individual.vala"
				if (_tmp49_) {
#line 15356 "individual.c"
					guint _tmp50_;
#line 2956 "/run/build/folks/folks/individual.vala"
					_tmp50_ = self->priv->_persona_user_count;
#line 2956 "/run/build/folks/folks/individual.vala"
					self->priv->_persona_user_count = _tmp50_ - 1;
#line 15362 "individual.c"
				}
#line 2958 "/run/build/folks/folks/individual.vala"
				_tmp51_ = removed;
#line 2958 "/run/build/folks/folks/individual.vala"
				_tmp52_ = p;
#line 2958 "/run/build/folks/folks/individual.vala"
				gee_abstract_collection_add ((GeeAbstractCollection*) _tmp51_, _tmp52_);
#line 2961 "/run/build/folks/folks/individual.vala"
				_tmp53_ = p;
#line 2961 "/run/build/folks/folks/individual.vala"
				_tmp54_ = folks_persona_get_store (_tmp53_);
#line 2961 "/run/build/folks/folks/individual.vala"
				_tmp55_ = _tmp54_;
#line 2961 "/run/build/folks/folks/individual.vala"
				_tmp56_ = _g_object_ref0 (_tmp55_);
#line 2961 "/run/build/folks/folks/individual.vala"
				store = _tmp56_;
#line 2962 "/run/build/folks/folks/individual.vala"
				_tmp57_ = self->priv->_stores;
#line 2962 "/run/build/folks/folks/individual.vala"
				_tmp58_ = store;
#line 2962 "/run/build/folks/folks/individual.vala"
				_tmp59_ = gee_abstract_map_get ((GeeAbstractMap*) _tmp57_, _tmp58_);
#line 2962 "/run/build/folks/folks/individual.vala"
				num_from_store = (guint) ((guintptr) _tmp59_);
#line 2963 "/run/build/folks/folks/individual.vala"
				_tmp60_ = num_from_store;
#line 2963 "/run/build/folks/folks/individual.vala"
				if (_tmp60_ > ((guint) 1)) {
#line 15392 "individual.c"
					GeeHashMap* _tmp61_;
					FolksPersonaStore* _tmp62_;
					guint _tmp63_;
#line 2965 "/run/build/folks/folks/individual.vala"
					_tmp61_ = self->priv->_stores;
#line 2965 "/run/build/folks/folks/individual.vala"
					_tmp62_ = store;
#line 2965 "/run/build/folks/folks/individual.vala"
					_tmp63_ = num_from_store;
#line 2965 "/run/build/folks/folks/individual.vala"
					gee_abstract_map_set ((GeeAbstractMap*) _tmp61_, _tmp62_, (gpointer) ((guintptr) (_tmp63_ - 1)));
#line 15404 "individual.c"
				} else {
					FolksPersonaStore* _tmp64_;
					guint _tmp65_;
					FolksPersonaStore* _tmp66_;
					guint _tmp67_;
					GeeHashMap* _tmp68_;
					FolksPersonaStore* _tmp69_;
#line 2969 "/run/build/folks/folks/individual.vala"
					_tmp64_ = store;
#line 2969 "/run/build/folks/folks/individual.vala"
					g_signal_parse_name ("removed", FOLKS_TYPE_PERSONA_STORE, &_tmp65_, NULL, FALSE);
#line 2969 "/run/build/folks/folks/individual.vala"
					g_signal_handlers_disconnect_matched (_tmp64_, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp65_, 0, NULL, (GCallback) __folks_individual_store_removed_cb_folks_persona_store_removed, self);
#line 2970 "/run/build/folks/folks/individual.vala"
					_tmp66_ = store;
#line 2970 "/run/build/folks/folks/individual.vala"
					g_signal_parse_name ("personas-changed", FOLKS_TYPE_PERSONA_STORE, &_tmp67_, NULL, FALSE);
#line 2970 "/run/build/folks/folks/individual.vala"
					g_signal_handlers_disconnect_matched (_tmp66_, G_SIGNAL_MATCH_ID | G_SIGNAL_MATCH_FUNC | G_SIGNAL_MATCH_DATA, _tmp67_, 0, NULL, (GCallback) __folks_individual_store_personas_changed_cb_folks_persona_store_personas_changed, self);
#line 2973 "/run/build/folks/folks/individual.vala"
					_tmp68_ = self->priv->_stores;
#line 2973 "/run/build/folks/folks/individual.vala"
					_tmp69_ = store;
#line 2973 "/run/build/folks/folks/individual.vala"
					gee_abstract_map_unset ((GeeAbstractMap*) _tmp68_, _tmp69_, NULL);
#line 15430 "individual.c"
				}
#line 2976 "/run/build/folks/folks/individual.vala"
				_tmp70_ = p;
#line 2976 "/run/build/folks/folks/individual.vala"
				_folks_individual_disconnect_from_persona (self, _tmp70_, replacement_individual);
#line 2952 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (store);
#line 15438 "individual.c"
			}
#line 2950 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 15442 "individual.c"
		}
#line 2950 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_list);
#line 15446 "individual.c"
	}
	{
		FolksSmallSet* _p_list = NULL;
		FolksSmallSet* _tmp71_;
		FolksSmallSet* _tmp72_;
		gint _p_size = 0;
		FolksSmallSet* _tmp73_;
		gint _tmp74_;
		gint _tmp75_;
		gint _p_index = 0;
#line 2980 "/run/build/folks/folks/individual.vala"
		_tmp71_ = removed;
#line 2980 "/run/build/folks/folks/individual.vala"
		_tmp72_ = _g_object_ref0 (_tmp71_);
#line 2980 "/run/build/folks/folks/individual.vala"
		_p_list = _tmp72_;
#line 2980 "/run/build/folks/folks/individual.vala"
		_tmp73_ = _p_list;
#line 2980 "/run/build/folks/folks/individual.vala"
		_tmp74_ = gee_collection_get_size ((GeeCollection*) _tmp73_);
#line 2980 "/run/build/folks/folks/individual.vala"
		_tmp75_ = _tmp74_;
#line 2980 "/run/build/folks/folks/individual.vala"
		_p_size = _tmp75_;
#line 2980 "/run/build/folks/folks/individual.vala"
		_p_index = -1;
#line 2980 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 15475 "individual.c"
			gint _tmp76_;
			gint _tmp77_;
			gint _tmp78_;
			FolksPersona* p = NULL;
			FolksSmallSet* _tmp79_;
			gint _tmp80_;
			gconstpointer _tmp81_;
			FolksPersona* _tmp82_;
			FolksSmallSet* _tmp83_;
			FolksPersona* _tmp84_;
#line 2980 "/run/build/folks/folks/individual.vala"
			_tmp76_ = _p_index;
#line 2980 "/run/build/folks/folks/individual.vala"
			_p_index = _tmp76_ + 1;
#line 2980 "/run/build/folks/folks/individual.vala"
			_tmp77_ = _p_index;
#line 2980 "/run/build/folks/folks/individual.vala"
			_tmp78_ = _p_size;
#line 2980 "/run/build/folks/folks/individual.vala"
			if (!(_tmp77_ < _tmp78_)) {
#line 2980 "/run/build/folks/folks/individual.vala"
				break;
#line 15498 "individual.c"
			}
#line 2980 "/run/build/folks/folks/individual.vala"
			_tmp79_ = _p_list;
#line 2980 "/run/build/folks/folks/individual.vala"
			_tmp80_ = _p_index;
#line 2980 "/run/build/folks/folks/individual.vala"
			_tmp81_ = folks_small_set_get (_tmp79_, _tmp80_);
#line 2980 "/run/build/folks/folks/individual.vala"
			_tmp82_ = _g_object_ref0 ((FolksPersona*) _tmp81_);
#line 2980 "/run/build/folks/folks/individual.vala"
			p = _tmp82_;
#line 2982 "/run/build/folks/folks/individual.vala"
			_tmp83_ = self->priv->_persona_set;
#line 2982 "/run/build/folks/folks/individual.vala"
			_tmp84_ = p;
#line 2982 "/run/build/folks/folks/individual.vala"
			gee_abstract_collection_remove ((GeeAbstractCollection*) _tmp83_, _tmp84_);
#line 2980 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 15518 "individual.c"
		}
#line 2980 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_list);
#line 15522 "individual.c"
	}
#line 2985 "/run/build/folks/folks/individual.vala"
	_tmp85_ = added;
#line 2985 "/run/build/folks/folks/individual.vala"
	_tmp86_ = removed;
#line 2985 "/run/build/folks/folks/individual.vala"
	_folks_individual_emit_personas_changed (self, (GeeSet*) _tmp85_, (GeeSet*) _tmp86_);
#line 2988 "/run/build/folks/folks/individual.vala"
	_tmp88_ = self->priv->_persona_user_count;
#line 2988 "/run/build/folks/folks/individual.vala"
	if (_tmp88_ > ((guint) 0)) {
#line 2988 "/run/build/folks/folks/individual.vala"
		_tmp87_ = TRUE;
#line 15536 "individual.c"
	} else {
#line 2988 "/run/build/folks/folks/individual.vala"
		_tmp87_ = FALSE;
#line 15540 "individual.c"
	}
#line 2988 "/run/build/folks/folks/individual.vala"
	new_is_user = _tmp87_;
#line 2989 "/run/build/folks/folks/individual.vala"
	_tmp89_ = new_is_user;
#line 2989 "/run/build/folks/folks/individual.vala"
	_tmp90_ = self->priv->_is_user;
#line 2989 "/run/build/folks/folks/individual.vala"
	if (_tmp89_ != _tmp90_) {
#line 15550 "individual.c"
		gboolean _tmp91_;
#line 2990 "/run/build/folks/folks/individual.vala"
		_tmp91_ = new_is_user;
#line 2990 "/run/build/folks/folks/individual.vala"
		folks_individual_set_is_user (self, _tmp91_);
#line 15556 "individual.c"
	}
#line 2993 "/run/build/folks/folks/individual.vala"
	_tmp92_ = self->priv->_persona_set;
#line 2993 "/run/build/folks/folks/individual.vala"
	_tmp93_ = gee_collection_get_size ((GeeCollection*) _tmp92_);
#line 2993 "/run/build/folks/folks/individual.vala"
	_tmp94_ = _tmp93_;
#line 2993 "/run/build/folks/folks/individual.vala"
	if (_tmp94_ < 1) {
#line 2995 "/run/build/folks/folks/individual.vala"
		g_signal_emit (self, folks_individual_signals[FOLKS_INDIVIDUAL_REMOVED_SIGNAL], 0, replacement_individual);
#line 2996 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (removed);
#line 2996 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (added);
#line 2996 "/run/build/folks/folks/individual.vala"
		return;
#line 15574 "individual.c"
	}
#line 3021 "/run/build/folks/folks/individual.vala"
	_tmp95_ = self->priv->_persona_set;
#line 3021 "/run/build/folks/folks/individual.vala"
	_tmp96_ = gee_collection_get_size ((GeeCollection*) _tmp95_);
#line 3021 "/run/build/folks/folks/individual.vala"
	_tmp97_ = _tmp96_;
#line 3021 "/run/build/folks/folks/individual.vala"
	if (_tmp97_ > 0) {
#line 15584 "individual.c"
		FolksPersona* chosen_persona = NULL;
		FolksPersona* _tmp223_;
		const gchar* _tmp224_;
		const gchar* _tmp225_;
		gchar* _tmp226_;
		gchar* _tmp227_;
#line 3023 "/run/build/folks/folks/individual.vala"
		chosen_persona = NULL;
#line 15593 "individual.c"
		{
			FolksSmallSet* _persona_list = NULL;
			FolksSmallSet* _tmp98_;
			FolksSmallSet* _tmp99_;
			gint _persona_size = 0;
			FolksSmallSet* _tmp100_;
			gint _tmp101_;
			gint _tmp102_;
			gint _persona_index = 0;
#line 3025 "/run/build/folks/folks/individual.vala"
			_tmp98_ = self->priv->_persona_set;
#line 3025 "/run/build/folks/folks/individual.vala"
			_tmp99_ = _g_object_ref0 (_tmp98_);
#line 3025 "/run/build/folks/folks/individual.vala"
			_persona_list = _tmp99_;
#line 3025 "/run/build/folks/folks/individual.vala"
			_tmp100_ = _persona_list;
#line 3025 "/run/build/folks/folks/individual.vala"
			_tmp101_ = gee_collection_get_size ((GeeCollection*) _tmp100_);
#line 3025 "/run/build/folks/folks/individual.vala"
			_tmp102_ = _tmp101_;
#line 3025 "/run/build/folks/folks/individual.vala"
			_persona_size = _tmp102_;
#line 3025 "/run/build/folks/folks/individual.vala"
			_persona_index = -1;
#line 3025 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 15621 "individual.c"
				gint _tmp103_;
				gint _tmp104_;
				gint _tmp105_;
				FolksPersona* persona = NULL;
				FolksSmallSet* _tmp106_;
				gint _tmp107_;
				gconstpointer _tmp108_;
				FolksPersona* _tmp109_;
				FolksPersona* _tmp110_;
				FolksPersona* _chosen_persona = NULL;
				FolksPersona* _tmp113_;
				FolksPersona* _tmp114_;
				gboolean _tmp115_ = FALSE;
				gboolean _tmp116_ = FALSE;
				gboolean _tmp117_ = FALSE;
				gboolean _tmp118_ = FALSE;
				FolksPersona* _tmp119_;
				FolksPersonaStore* _tmp120_;
				FolksPersonaStore* _tmp121_;
				gboolean _tmp122_;
				gboolean _tmp123_;
#line 3025 "/run/build/folks/folks/individual.vala"
				_tmp103_ = _persona_index;
#line 3025 "/run/build/folks/folks/individual.vala"
				_persona_index = _tmp103_ + 1;
#line 3025 "/run/build/folks/folks/individual.vala"
				_tmp104_ = _persona_index;
#line 3025 "/run/build/folks/folks/individual.vala"
				_tmp105_ = _persona_size;
#line 3025 "/run/build/folks/folks/individual.vala"
				if (!(_tmp104_ < _tmp105_)) {
#line 3025 "/run/build/folks/folks/individual.vala"
					break;
#line 15655 "individual.c"
				}
#line 3025 "/run/build/folks/folks/individual.vala"
				_tmp106_ = _persona_list;
#line 3025 "/run/build/folks/folks/individual.vala"
				_tmp107_ = _persona_index;
#line 3025 "/run/build/folks/folks/individual.vala"
				_tmp108_ = folks_small_set_get (_tmp106_, _tmp107_);
#line 3025 "/run/build/folks/folks/individual.vala"
				_tmp109_ = _g_object_ref0 ((FolksPersona*) _tmp108_);
#line 3025 "/run/build/folks/folks/individual.vala"
				persona = _tmp109_;
#line 3027 "/run/build/folks/folks/individual.vala"
				_tmp110_ = chosen_persona;
#line 3027 "/run/build/folks/folks/individual.vala"
				if (_tmp110_ == NULL) {
#line 15671 "individual.c"
					FolksPersona* _tmp111_;
					FolksPersona* _tmp112_;
#line 3029 "/run/build/folks/folks/individual.vala"
					_tmp111_ = persona;
#line 3029 "/run/build/folks/folks/individual.vala"
					_tmp112_ = _g_object_ref0 (_tmp111_);
#line 3029 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (chosen_persona);
#line 3029 "/run/build/folks/folks/individual.vala"
					chosen_persona = _tmp112_;
#line 3030 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (persona);
#line 3030 "/run/build/folks/folks/individual.vala"
					continue;
#line 15686 "individual.c"
				}
#line 3033 "/run/build/folks/folks/individual.vala"
				_tmp113_ = chosen_persona;
#line 3033 "/run/build/folks/folks/individual.vala"
				_tmp114_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_CAST (_tmp113_, FOLKS_TYPE_PERSONA, FolksPersona));
#line 3033 "/run/build/folks/folks/individual.vala"
				_chosen_persona = _tmp114_;
#line 3035 "/run/build/folks/folks/individual.vala"
				_tmp119_ = _chosen_persona;
#line 3035 "/run/build/folks/folks/individual.vala"
				_tmp120_ = folks_persona_get_store (_tmp119_);
#line 3035 "/run/build/folks/folks/individual.vala"
				_tmp121_ = _tmp120_;
#line 3035 "/run/build/folks/folks/individual.vala"
				_tmp122_ = folks_persona_store_get_is_primary_store (_tmp121_);
#line 3035 "/run/build/folks/folks/individual.vala"
				_tmp123_ = _tmp122_;
#line 3035 "/run/build/folks/folks/individual.vala"
				if (_tmp123_ == FALSE) {
#line 15706 "individual.c"
					FolksPersona* _tmp124_;
					FolksPersonaStore* _tmp125_;
					FolksPersonaStore* _tmp126_;
					gboolean _tmp127_;
					gboolean _tmp128_;
#line 3036 "/run/build/folks/folks/individual.vala"
					_tmp124_ = persona;
#line 3036 "/run/build/folks/folks/individual.vala"
					_tmp125_ = folks_persona_get_store (_tmp124_);
#line 3036 "/run/build/folks/folks/individual.vala"
					_tmp126_ = _tmp125_;
#line 3036 "/run/build/folks/folks/individual.vala"
					_tmp127_ = folks_persona_store_get_is_primary_store (_tmp126_);
#line 3036 "/run/build/folks/folks/individual.vala"
					_tmp128_ = _tmp127_;
#line 3036 "/run/build/folks/folks/individual.vala"
					_tmp118_ = _tmp128_ == TRUE;
#line 15724 "individual.c"
				} else {
#line 3035 "/run/build/folks/folks/individual.vala"
					_tmp118_ = FALSE;
#line 15728 "individual.c"
				}
#line 3035 "/run/build/folks/folks/individual.vala"
				if (_tmp118_) {
#line 3035 "/run/build/folks/folks/individual.vala"
					_tmp117_ = TRUE;
#line 15734 "individual.c"
				} else {
					gboolean _tmp129_ = FALSE;
					FolksPersona* _tmp130_;
					FolksPersonaStore* _tmp131_;
					FolksPersonaStore* _tmp132_;
					gboolean _tmp133_;
					gboolean _tmp134_;
					FolksPersona* _tmp135_;
					FolksPersonaStore* _tmp136_;
					FolksPersonaStore* _tmp137_;
					gboolean _tmp138_;
					gboolean _tmp139_;
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp130_ = _chosen_persona;
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp131_ = folks_persona_get_store (_tmp130_);
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp132_ = _tmp131_;
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp133_ = folks_persona_store_get_is_primary_store (_tmp132_);
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp134_ = _tmp133_;
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp135_ = persona;
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp136_ = folks_persona_get_store (_tmp135_);
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp137_ = _tmp136_;
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp138_ = folks_persona_store_get_is_primary_store (_tmp137_);
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp139_ = _tmp138_;
#line 3037 "/run/build/folks/folks/individual.vala"
					if (_tmp134_ == _tmp139_) {
#line 15769 "individual.c"
						FolksPersona* _tmp140_;
						FolksPersonaStore* _tmp141_;
						FolksPersonaStore* _tmp142_;
						FolksPersonaStoreTrust _tmp143_;
						FolksPersonaStoreTrust _tmp144_;
						FolksPersona* _tmp145_;
						FolksPersonaStore* _tmp146_;
						FolksPersonaStore* _tmp147_;
						FolksPersonaStoreTrust _tmp148_;
						FolksPersonaStoreTrust _tmp149_;
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp140_ = _chosen_persona;
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp141_ = folks_persona_get_store (_tmp140_);
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp142_ = _tmp141_;
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp143_ = folks_persona_store_get_trust_level (_tmp142_);
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp144_ = _tmp143_;
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp145_ = persona;
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp146_ = folks_persona_get_store (_tmp145_);
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp147_ = _tmp146_;
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp148_ = folks_persona_store_get_trust_level (_tmp147_);
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp149_ = _tmp148_;
#line 3039 "/run/build/folks/folks/individual.vala"
						_tmp129_ = _tmp144_ > _tmp149_;
#line 15802 "individual.c"
					} else {
#line 3037 "/run/build/folks/folks/individual.vala"
						_tmp129_ = FALSE;
#line 15806 "individual.c"
					}
#line 3037 "/run/build/folks/folks/individual.vala"
					_tmp117_ = _tmp129_;
#line 15810 "individual.c"
				}
#line 3035 "/run/build/folks/folks/individual.vala"
				if (_tmp117_) {
#line 3035 "/run/build/folks/folks/individual.vala"
					_tmp116_ = TRUE;
#line 15816 "individual.c"
				} else {
					gboolean _tmp150_ = FALSE;
					gboolean _tmp151_ = FALSE;
					FolksPersona* _tmp152_;
					FolksPersonaStore* _tmp153_;
					FolksPersonaStore* _tmp154_;
					gboolean _tmp155_;
					gboolean _tmp156_;
					FolksPersona* _tmp157_;
					FolksPersonaStore* _tmp158_;
					FolksPersonaStore* _tmp159_;
					gboolean _tmp160_;
					gboolean _tmp161_;
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp152_ = _chosen_persona;
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp153_ = folks_persona_get_store (_tmp152_);
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp154_ = _tmp153_;
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp155_ = folks_persona_store_get_is_primary_store (_tmp154_);
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp156_ = _tmp155_;
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp157_ = persona;
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp158_ = folks_persona_get_store (_tmp157_);
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp159_ = _tmp158_;
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp160_ = folks_persona_store_get_is_primary_store (_tmp159_);
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp161_ = _tmp160_;
#line 3041 "/run/build/folks/folks/individual.vala"
					if (_tmp156_ == _tmp161_) {
#line 15852 "individual.c"
						FolksPersona* _tmp162_;
						FolksPersonaStore* _tmp163_;
						FolksPersonaStore* _tmp164_;
						FolksPersonaStoreTrust _tmp165_;
						FolksPersonaStoreTrust _tmp166_;
						FolksPersona* _tmp167_;
						FolksPersonaStore* _tmp168_;
						FolksPersonaStore* _tmp169_;
						FolksPersonaStoreTrust _tmp170_;
						FolksPersonaStoreTrust _tmp171_;
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp162_ = _chosen_persona;
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp163_ = folks_persona_get_store (_tmp162_);
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp164_ = _tmp163_;
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp165_ = folks_persona_store_get_trust_level (_tmp164_);
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp166_ = _tmp165_;
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp167_ = persona;
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp168_ = folks_persona_get_store (_tmp167_);
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp169_ = _tmp168_;
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp170_ = folks_persona_store_get_trust_level (_tmp169_);
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp171_ = _tmp170_;
#line 3043 "/run/build/folks/folks/individual.vala"
						_tmp151_ = _tmp166_ == _tmp171_;
#line 15885 "individual.c"
					} else {
#line 3041 "/run/build/folks/folks/individual.vala"
						_tmp151_ = FALSE;
#line 15889 "individual.c"
					}
#line 3041 "/run/build/folks/folks/individual.vala"
					if (_tmp151_) {
#line 15893 "individual.c"
						FolksPersona* _tmp172_;
						FolksPersonaStore* _tmp173_;
						FolksPersonaStore* _tmp174_;
						const gchar* _tmp175_;
						const gchar* _tmp176_;
						FolksPersona* _tmp177_;
						FolksPersonaStore* _tmp178_;
						FolksPersonaStore* _tmp179_;
						const gchar* _tmp180_;
						const gchar* _tmp181_;
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp172_ = _chosen_persona;
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp173_ = folks_persona_get_store (_tmp172_);
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp174_ = _tmp173_;
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp175_ = folks_persona_store_get_id (_tmp174_);
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp176_ = _tmp175_;
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp177_ = persona;
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp178_ = folks_persona_get_store (_tmp177_);
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp179_ = _tmp178_;
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp180_ = folks_persona_store_get_id (_tmp179_);
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp181_ = _tmp180_;
#line 3045 "/run/build/folks/folks/individual.vala"
						_tmp150_ = g_strcmp0 (_tmp176_, _tmp181_) > 0;
#line 15926 "individual.c"
					} else {
#line 3041 "/run/build/folks/folks/individual.vala"
						_tmp150_ = FALSE;
#line 15930 "individual.c"
					}
#line 3041 "/run/build/folks/folks/individual.vala"
					_tmp116_ = _tmp150_;
#line 15934 "individual.c"
				}
#line 3035 "/run/build/folks/folks/individual.vala"
				if (_tmp116_) {
#line 3035 "/run/build/folks/folks/individual.vala"
					_tmp115_ = TRUE;
#line 15940 "individual.c"
				} else {
					gboolean _tmp182_ = FALSE;
					gboolean _tmp183_ = FALSE;
					gboolean _tmp184_ = FALSE;
					FolksPersona* _tmp185_;
					FolksPersonaStore* _tmp186_;
					FolksPersonaStore* _tmp187_;
					gboolean _tmp188_;
					gboolean _tmp189_;
					FolksPersona* _tmp190_;
					FolksPersonaStore* _tmp191_;
					FolksPersonaStore* _tmp192_;
					gboolean _tmp193_;
					gboolean _tmp194_;
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp185_ = _chosen_persona;
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp186_ = folks_persona_get_store (_tmp185_);
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp187_ = _tmp186_;
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp188_ = folks_persona_store_get_is_primary_store (_tmp187_);
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp189_ = _tmp188_;
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp190_ = persona;
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp191_ = folks_persona_get_store (_tmp190_);
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp192_ = _tmp191_;
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp193_ = folks_persona_store_get_is_primary_store (_tmp192_);
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp194_ = _tmp193_;
#line 3046 "/run/build/folks/folks/individual.vala"
					if (_tmp189_ == _tmp194_) {
#line 15977 "individual.c"
						FolksPersona* _tmp195_;
						FolksPersonaStore* _tmp196_;
						FolksPersonaStore* _tmp197_;
						FolksPersonaStoreTrust _tmp198_;
						FolksPersonaStoreTrust _tmp199_;
						FolksPersona* _tmp200_;
						FolksPersonaStore* _tmp201_;
						FolksPersonaStore* _tmp202_;
						FolksPersonaStoreTrust _tmp203_;
						FolksPersonaStoreTrust _tmp204_;
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp195_ = _chosen_persona;
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp196_ = folks_persona_get_store (_tmp195_);
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp197_ = _tmp196_;
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp198_ = folks_persona_store_get_trust_level (_tmp197_);
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp199_ = _tmp198_;
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp200_ = persona;
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp201_ = folks_persona_get_store (_tmp200_);
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp202_ = _tmp201_;
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp203_ = folks_persona_store_get_trust_level (_tmp202_);
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp204_ = _tmp203_;
#line 3048 "/run/build/folks/folks/individual.vala"
						_tmp184_ = _tmp199_ == _tmp204_;
#line 16010 "individual.c"
					} else {
#line 3046 "/run/build/folks/folks/individual.vala"
						_tmp184_ = FALSE;
#line 16014 "individual.c"
					}
#line 3046 "/run/build/folks/folks/individual.vala"
					if (_tmp184_) {
#line 16018 "individual.c"
						FolksPersona* _tmp205_;
						FolksPersonaStore* _tmp206_;
						FolksPersonaStore* _tmp207_;
						const gchar* _tmp208_;
						const gchar* _tmp209_;
						FolksPersona* _tmp210_;
						FolksPersonaStore* _tmp211_;
						FolksPersonaStore* _tmp212_;
						const gchar* _tmp213_;
						const gchar* _tmp214_;
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp205_ = _chosen_persona;
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp206_ = folks_persona_get_store (_tmp205_);
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp207_ = _tmp206_;
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp208_ = folks_persona_store_get_id (_tmp207_);
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp209_ = _tmp208_;
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp210_ = persona;
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp211_ = folks_persona_get_store (_tmp210_);
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp212_ = _tmp211_;
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp213_ = folks_persona_store_get_id (_tmp212_);
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp214_ = _tmp213_;
#line 3050 "/run/build/folks/folks/individual.vala"
						_tmp183_ = g_strcmp0 (_tmp209_, _tmp214_) == 0;
#line 16051 "individual.c"
					} else {
#line 3046 "/run/build/folks/folks/individual.vala"
						_tmp183_ = FALSE;
#line 16055 "individual.c"
					}
#line 3046 "/run/build/folks/folks/individual.vala"
					if (_tmp183_) {
#line 16059 "individual.c"
						FolksPersona* _tmp215_;
						const gchar* _tmp216_;
						const gchar* _tmp217_;
						FolksPersona* _tmp218_;
						const gchar* _tmp219_;
						const gchar* _tmp220_;
#line 3051 "/run/build/folks/folks/individual.vala"
						_tmp215_ = _chosen_persona;
#line 3051 "/run/build/folks/folks/individual.vala"
						_tmp216_ = folks_persona_get_uid (_tmp215_);
#line 3051 "/run/build/folks/folks/individual.vala"
						_tmp217_ = _tmp216_;
#line 3051 "/run/build/folks/folks/individual.vala"
						_tmp218_ = persona;
#line 3051 "/run/build/folks/folks/individual.vala"
						_tmp219_ = folks_persona_get_uid (_tmp218_);
#line 3051 "/run/build/folks/folks/individual.vala"
						_tmp220_ = _tmp219_;
#line 3051 "/run/build/folks/folks/individual.vala"
						_tmp182_ = g_strcmp0 (_tmp217_, _tmp220_) > 0;
#line 16080 "individual.c"
					} else {
#line 3046 "/run/build/folks/folks/individual.vala"
						_tmp182_ = FALSE;
#line 16084 "individual.c"
					}
#line 3046 "/run/build/folks/folks/individual.vala"
					_tmp115_ = _tmp182_;
#line 16088 "individual.c"
				}
#line 3035 "/run/build/folks/folks/individual.vala"
				if (_tmp115_) {
#line 16092 "individual.c"
					FolksPersona* _tmp221_;
					FolksPersona* _tmp222_;
#line 3054 "/run/build/folks/folks/individual.vala"
					_tmp221_ = persona;
#line 3054 "/run/build/folks/folks/individual.vala"
					_tmp222_ = _g_object_ref0 (_tmp221_);
#line 3054 "/run/build/folks/folks/individual.vala"
					_g_object_unref0 (chosen_persona);
#line 3054 "/run/build/folks/folks/individual.vala"
					chosen_persona = _tmp222_;
#line 16103 "individual.c"
				}
#line 3025 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_chosen_persona);
#line 3025 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (persona);
#line 16109 "individual.c"
			}
#line 3025 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_persona_list);
#line 16113 "individual.c"
		}
#line 3061 "/run/build/folks/folks/individual.vala"
		_tmp223_ = chosen_persona;
#line 3061 "/run/build/folks/folks/individual.vala"
		_tmp224_ = folks_persona_get_uid (G_TYPE_CHECK_INSTANCE_CAST (_tmp223_, FOLKS_TYPE_PERSONA, FolksPersona));
#line 3061 "/run/build/folks/folks/individual.vala"
		_tmp225_ = _tmp224_;
#line 3061 "/run/build/folks/folks/individual.vala"
		_tmp226_ = g_compute_checksum_for_string (G_CHECKSUM_SHA1, _tmp225_, (gsize) -1);
#line 3061 "/run/build/folks/folks/individual.vala"
		_tmp227_ = _tmp226_;
#line 3061 "/run/build/folks/folks/individual.vala"
		folks_individual_set_id (self, _tmp227_);
#line 3061 "/run/build/folks/folks/individual.vala"
		_g_free0 (_tmp227_);
#line 3021 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (chosen_persona);
#line 16131 "individual.c"
	} else {
#line 3067 "/run/build/folks/folks/individual.vala"
		folks_individual_set_id (self, "");
#line 16135 "individual.c"
	}
#line 3071 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_fields (self);
#line 2905 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (removed);
#line 2905 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (added);
#line 16143 "individual.c"
}


void
folks_individual_replace (FolksIndividual* self,
                          FolksIndividual* replacement_individual)
{
#line 3074 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 3074 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (replacement_individual != NULL);
#line 3076 "/run/build/folks/folks/individual.vala"
	_folks_individual_set_personas (self, NULL, replacement_individual);
#line 16157 "individual.c"
}


/**
   * Anti-linked with a persona?
   *
   * Check whether this individual is anti-linked to {@link Persona} ``p`` at
   * all. If so, ``true`` will be returned — ``false`` will be returned
   * otherwise.
   *
   * Note that this will check for anti-links in either direction, since
   * anti-links are not necessarily symmetric.
   *
   * @param p persona to check for anti-links with
   * @return ``true`` if this individual is anti-linked with persona ``p``;
   * ``false``
   * otherwise
   * @since 0.7.3
   */
gboolean
folks_individual_has_anti_link_with_persona (FolksIndividual* self,
                                             FolksPersona* p)
{
	gboolean result = FALSE;
	FolksAntiLinkable* al = NULL;
	FolksAntiLinkable* _tmp0_;
#line 3095 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 3095 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (p != NULL, FALSE);
#line 3097 "/run/build/folks/folks/individual.vala"
	_tmp0_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (p, FOLKS_TYPE_ANTI_LINKABLE) ? ((FolksAntiLinkable*) p) : NULL);
#line 3097 "/run/build/folks/folks/individual.vala"
	al = _tmp0_;
#line 16192 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp1_;
		FolksSmallSet* _tmp2_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp3_;
		gint _tmp4_;
		gint _tmp5_;
		gint _persona_index = 0;
#line 3099 "/run/build/folks/folks/individual.vala"
		_tmp1_ = self->priv->_persona_set;
#line 3099 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _g_object_ref0 (_tmp1_);
#line 3099 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp2_;
#line 3099 "/run/build/folks/folks/individual.vala"
		_tmp3_ = _persona_list;
#line 3099 "/run/build/folks/folks/individual.vala"
		_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 3099 "/run/build/folks/folks/individual.vala"
		_tmp5_ = _tmp4_;
#line 3099 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp5_;
#line 3099 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 3099 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 16220 "individual.c"
			gint _tmp6_;
			gint _tmp7_;
			gint _tmp8_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp9_;
			gint _tmp10_;
			gconstpointer _tmp11_;
			FolksPersona* _tmp12_;
			FolksAntiLinkable* pl = NULL;
			FolksPersona* _tmp13_;
			FolksAntiLinkable* _tmp14_;
			gboolean _tmp15_ = FALSE;
			gboolean _tmp16_ = FALSE;
			FolksAntiLinkable* _tmp17_;
#line 3099 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 3099 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp6_ + 1;
#line 3099 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_index;
#line 3099 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_size;
#line 3099 "/run/build/folks/folks/individual.vala"
			if (!(_tmp7_ < _tmp8_)) {
#line 3099 "/run/build/folks/folks/individual.vala"
				break;
#line 16247 "individual.c"
			}
#line 3099 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_list;
#line 3099 "/run/build/folks/folks/individual.vala"
			_tmp10_ = _persona_index;
#line 3099 "/run/build/folks/folks/individual.vala"
			_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 3099 "/run/build/folks/folks/individual.vala"
			_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 3099 "/run/build/folks/folks/individual.vala"
			persona = _tmp12_;
#line 3101 "/run/build/folks/folks/individual.vala"
			_tmp13_ = persona;
#line 3101 "/run/build/folks/folks/individual.vala"
			_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_ANTI_LINKABLE) ? ((FolksAntiLinkable*) _tmp13_) : NULL);
#line 3101 "/run/build/folks/folks/individual.vala"
			pl = _tmp14_;
#line 3103 "/run/build/folks/folks/individual.vala"
			_tmp17_ = al;
#line 3103 "/run/build/folks/folks/individual.vala"
			if (_tmp17_ != NULL) {
#line 16269 "individual.c"
				FolksAntiLinkable* _tmp18_;
				FolksPersona* _tmp19_;
#line 3103 "/run/build/folks/folks/individual.vala"
				_tmp18_ = al;
#line 3103 "/run/build/folks/folks/individual.vala"
				_tmp19_ = persona;
#line 3103 "/run/build/folks/folks/individual.vala"
				_tmp16_ = folks_anti_linkable_has_anti_link_with_persona (G_TYPE_CHECK_INSTANCE_CAST (_tmp18_, FOLKS_TYPE_ANTI_LINKABLE, FolksAntiLinkable), _tmp19_);
#line 16278 "individual.c"
			} else {
#line 3103 "/run/build/folks/folks/individual.vala"
				_tmp16_ = FALSE;
#line 16282 "individual.c"
			}
#line 3103 "/run/build/folks/folks/individual.vala"
			if (_tmp16_) {
#line 3103 "/run/build/folks/folks/individual.vala"
				_tmp15_ = TRUE;
#line 16288 "individual.c"
			} else {
				gboolean _tmp20_ = FALSE;
				FolksAntiLinkable* _tmp21_;
#line 3104 "/run/build/folks/folks/individual.vala"
				_tmp21_ = pl;
#line 3104 "/run/build/folks/folks/individual.vala"
				if (_tmp21_ != NULL) {
#line 16296 "individual.c"
					FolksAntiLinkable* _tmp22_;
#line 3104 "/run/build/folks/folks/individual.vala"
					_tmp22_ = pl;
#line 3104 "/run/build/folks/folks/individual.vala"
					_tmp20_ = folks_anti_linkable_has_anti_link_with_persona (G_TYPE_CHECK_INSTANCE_CAST (_tmp22_, FOLKS_TYPE_ANTI_LINKABLE, FolksAntiLinkable), p);
#line 16302 "individual.c"
				} else {
#line 3104 "/run/build/folks/folks/individual.vala"
					_tmp20_ = FALSE;
#line 16306 "individual.c"
				}
#line 3104 "/run/build/folks/folks/individual.vala"
				_tmp15_ = _tmp20_;
#line 16310 "individual.c"
			}
#line 3103 "/run/build/folks/folks/individual.vala"
			if (_tmp15_) {
#line 3106 "/run/build/folks/folks/individual.vala"
				result = TRUE;
#line 3106 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (pl);
#line 3106 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (persona);
#line 3106 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_persona_list);
#line 3106 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (al);
#line 3106 "/run/build/folks/folks/individual.vala"
				return result;
#line 16326 "individual.c"
			}
#line 3099 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (pl);
#line 3099 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 16332 "individual.c"
		}
#line 3099 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 16336 "individual.c"
	}
#line 3110 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 3110 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (al);
#line 3110 "/run/build/folks/folks/individual.vala"
	return result;
#line 16344 "individual.c"
}


/**
   * Anti-linked with an individual?
   *
   * Check whether this individual is anti-linked to any of the {@link Persona}s
   * in {@link Folks.Individual} ``i``. If so, ``true`` will be returned —
   * ``false`` will be returned otherwise.
   *
   * Note that this will check for anti-links in either direction, since
   * anti-links are not necessarily symmetric.
   *
   * @param i individual to check for anti-links with
   * @return ``true`` if this individual is anti-linked with individual ``i``;
   * ``false`` otherwise
   * @since 0.7.3
   */
gboolean
folks_individual_has_anti_link_with_individual (FolksIndividual* self,
                                                FolksIndividual* i)
{
	gboolean result = FALSE;
#line 3128 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 3128 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (i != NULL, FALSE);
#line 16372 "individual.c"
	{
		GeeIterator* _p_it = NULL;
		GeeSet* _tmp0_;
		GeeSet* _tmp1_;
		GeeIterator* _tmp2_;
#line 3130 "/run/build/folks/folks/individual.vala"
		_tmp0_ = folks_individual_get_personas (i);
#line 3130 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _tmp0_;
#line 3130 "/run/build/folks/folks/individual.vala"
		_tmp2_ = gee_iterable_iterator ((GeeIterable*) _tmp1_);
#line 3130 "/run/build/folks/folks/individual.vala"
		_p_it = _tmp2_;
#line 3130 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 16388 "individual.c"
			GeeIterator* _tmp3_;
			FolksPersona* p = NULL;
			GeeIterator* _tmp4_;
			gpointer _tmp5_;
			FolksPersona* _tmp6_;
#line 3130 "/run/build/folks/folks/individual.vala"
			_tmp3_ = _p_it;
#line 3130 "/run/build/folks/folks/individual.vala"
			if (!gee_iterator_next (_tmp3_)) {
#line 3130 "/run/build/folks/folks/individual.vala"
				break;
#line 16400 "individual.c"
			}
#line 3130 "/run/build/folks/folks/individual.vala"
			_tmp4_ = _p_it;
#line 3130 "/run/build/folks/folks/individual.vala"
			_tmp5_ = gee_iterator_get (_tmp4_);
#line 3130 "/run/build/folks/folks/individual.vala"
			p = (FolksPersona*) _tmp5_;
#line 3132 "/run/build/folks/folks/individual.vala"
			_tmp6_ = p;
#line 3132 "/run/build/folks/folks/individual.vala"
			if (folks_individual_has_anti_link_with_persona (self, _tmp6_) == TRUE) {
#line 3134 "/run/build/folks/folks/individual.vala"
				result = TRUE;
#line 3134 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (p);
#line 3134 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (_p_it);
#line 3134 "/run/build/folks/folks/individual.vala"
				return result;
#line 16420 "individual.c"
			}
#line 3130 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (p);
#line 16424 "individual.c"
		}
#line 3130 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_p_it);
#line 16428 "individual.c"
	}
#line 3138 "/run/build/folks/folks/individual.vala"
	result = FALSE;
#line 3138 "/run/build/folks/folks/individual.vala"
	return result;
#line 16434 "individual.c"
}


FolksTrustLevel
folks_individual_get_trust_level (FolksIndividual* self)
{
	FolksTrustLevel result;
	FolksTrustLevel _tmp0_;
#line 130 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, 0);
#line 130 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_trust_level;
#line 130 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 130 "/run/build/folks/folks/individual.vala"
	return result;
#line 16451 "individual.c"
}


static void
folks_individual_set_trust_level (FolksIndividual* self,
                                  FolksTrustLevel value)
{
#line 130 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 130 "/run/build/folks/folks/individual.vala"
	if (folks_individual_get_trust_level (self) != value) {
#line 130 "/run/build/folks/folks/individual.vala"
		self->priv->_trust_level = value;
#line 130 "/run/build/folks/folks/individual.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_individual_properties[FOLKS_INDIVIDUAL_TRUST_LEVEL_PROPERTY]);
#line 16467 "individual.c"
	}
}


static GLoadableIcon*
folks_individual_real_get_avatar (FolksAvatarDetails* base)
{
	GLoadableIcon* result;
	FolksIndividual* self;
	GLoadableIcon* _tmp0_;
#line 142 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 142 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_avatar;
#line 142 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 142 "/run/build/folks/folks/individual.vala"
	return result;
#line 16486 "individual.c"
}


static void
folks_individual_real_set_avatar (FolksAvatarDetails* base,
                                  GLoadableIcon* value)
{
	FolksIndividual* self;
#line 143 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 143 "/run/build/folks/folks/individual.vala"
	folks_avatar_details_change_avatar ((FolksAvatarDetails*) self, value, NULL, NULL);
#line 16499 "individual.c"
}


static FolksPresenceType
folks_individual_real_get_presence_type (FolksPresenceDetails* base)
{
	FolksPresenceType result;
	FolksIndividual* self;
	FolksPresenceType _tmp0_;
#line 228 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 228 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_presence_type;
#line 228 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 228 "/run/build/folks/folks/individual.vala"
	return result;
#line 16517 "individual.c"
}


static void
folks_individual_real_set_presence_type (FolksPresenceDetails* base,
                                         FolksPresenceType value)
{
	FolksIndividual* self;
#line 228 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 228 "/run/build/folks/folks/individual.vala"
	if (folks_individual_real_get_presence_type (base) != value) {
#line 228 "/run/build/folks/folks/individual.vala"
		self->priv->_presence_type = value;
#line 228 "/run/build/folks/folks/individual.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_individual_properties[FOLKS_INDIVIDUAL_PRESENCE_TYPE_PROPERTY]);
#line 16534 "individual.c"
	}
}


static const gchar*
folks_individual_real_get_presence_status (FolksPresenceDetails* base)
{
	const gchar* result;
	FolksIndividual* self;
	const gchar* _tmp0_;
#line 235 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 235 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_presence_status;
#line 235 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 235 "/run/build/folks/folks/individual.vala"
	return result;
#line 16553 "individual.c"
}


static void
folks_individual_real_set_presence_status (FolksPresenceDetails* base,
                                           const gchar* value)
{
	FolksIndividual* self;
#line 235 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 235 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (value, folks_individual_real_get_presence_status (base)) != 0) {
#line 16566 "individual.c"
		gchar* _tmp0_;
#line 235 "/run/build/folks/folks/individual.vala"
		_tmp0_ = g_strdup (value);
#line 235 "/run/build/folks/folks/individual.vala"
		_g_free0 (self->priv->_presence_status);
#line 235 "/run/build/folks/folks/individual.vala"
		self->priv->_presence_status = _tmp0_;
#line 235 "/run/build/folks/folks/individual.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_individual_properties[FOLKS_INDIVIDUAL_PRESENCE_STATUS_PROPERTY]);
#line 16576 "individual.c"
	}
}


static const gchar*
folks_individual_real_get_presence_message (FolksPresenceDetails* base)
{
	const gchar* result;
	FolksIndividual* self;
	const gchar* _tmp0_;
#line 240 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 240 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_presence_message;
#line 240 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 240 "/run/build/folks/folks/individual.vala"
	return result;
#line 16595 "individual.c"
}


static void
folks_individual_real_set_presence_message (FolksPresenceDetails* base,
                                            const gchar* value)
{
	FolksIndividual* self;
#line 240 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 240 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (value, folks_individual_real_get_presence_message (base)) != 0) {
#line 16608 "individual.c"
		gchar* _tmp0_;
#line 240 "/run/build/folks/folks/individual.vala"
		_tmp0_ = g_strdup (value);
#line 240 "/run/build/folks/folks/individual.vala"
		_g_free0 (self->priv->_presence_message);
#line 240 "/run/build/folks/folks/individual.vala"
		self->priv->_presence_message = _tmp0_;
#line 240 "/run/build/folks/folks/individual.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_individual_properties[FOLKS_INDIVIDUAL_PRESENCE_MESSAGE_PROPERTY]);
#line 16618 "individual.c"
	}
}


static gchar**
folks_individual_real_get_client_types (FolksPresenceDetails* base,
                                        int* result_length1)
{
	gchar** result;
	FolksIndividual* self;
	gchar** _tmp0_;
	gint _tmp0__length1;
	gchar** _tmp1_;
	gint _tmp1__length1;
#line 247 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 247 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_client_types;
#line 247 "/run/build/folks/folks/individual.vala"
	_tmp0__length1 = self->priv->_client_types_length1;
#line 247 "/run/build/folks/folks/individual.vala"
	_tmp1_ = _tmp0_;
#line 247 "/run/build/folks/folks/individual.vala"
	_tmp1__length1 = _tmp0__length1;
#line 247 "/run/build/folks/folks/individual.vala"
	if (result_length1) {
#line 247 "/run/build/folks/folks/individual.vala"
		*result_length1 = _tmp1__length1;
#line 16647 "individual.c"
	}
#line 247 "/run/build/folks/folks/individual.vala"
	result = _tmp1_;
#line 247 "/run/build/folks/folks/individual.vala"
	return result;
#line 16653 "individual.c"
}


static gchar**
_vala_array_dup2 (gchar** self,
                  int length)
{
	gchar** result;
	int i;
#line 247 "/run/build/folks/folks/individual.vala"
	result = g_new0 (gchar*, length + 1);
#line 247 "/run/build/folks/folks/individual.vala"
	for (i = 0; i < length; i++) {
#line 16667 "individual.c"
		gchar* _tmp0_;
#line 247 "/run/build/folks/folks/individual.vala"
		_tmp0_ = g_strdup (self[i]);
#line 247 "/run/build/folks/folks/individual.vala"
		result[i] = _tmp0_;
#line 16673 "individual.c"
	}
#line 247 "/run/build/folks/folks/individual.vala"
	return result;
#line 16677 "individual.c"
}


static void
folks_individual_real_set_client_types (FolksPresenceDetails* base,
                                        gchar** value,
                                        int value_length1)
{
	FolksIndividual* self;
	int old_value_length;
#line 247 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 247 "/run/build/folks/folks/individual.vala"
	if (folks_individual_real_get_client_types (base, &old_value_length) != value) {
#line 16692 "individual.c"
		gchar** _tmp0_;
		gint _tmp0__length1;
#line 247 "/run/build/folks/folks/individual.vala"
		_tmp0_ = (value != NULL) ? _vala_array_dup2 (value, value_length1) : ((gpointer) value);
#line 247 "/run/build/folks/folks/individual.vala"
		_tmp0__length1 = value_length1;
#line 247 "/run/build/folks/folks/individual.vala"
		self->priv->_client_types = (_vala_array_free (self->priv->_client_types, self->priv->_client_types_length1, (GDestroyNotify) g_free), NULL);
#line 247 "/run/build/folks/folks/individual.vala"
		self->priv->_client_types = _tmp0_;
#line 247 "/run/build/folks/folks/individual.vala"
		self->priv->_client_types_length1 = _tmp0__length1;
#line 247 "/run/build/folks/folks/individual.vala"
		self->priv->__client_types_size_ = self->priv->_client_types_length1;
#line 247 "/run/build/folks/folks/individual.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_individual_properties[FOLKS_INDIVIDUAL_CLIENT_TYPES_PROPERTY]);
#line 16709 "individual.c"
	}
}


gboolean
folks_individual_get_is_user (FolksIndividual* self)
{
	gboolean result;
	gboolean _tmp0_;
#line 273 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, FALSE);
#line 273 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_is_user;
#line 273 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 273 "/run/build/folks/folks/individual.vala"
	return result;
#line 16727 "individual.c"
}


static void
folks_individual_set_is_user (FolksIndividual* self,
                              gboolean value)
{
#line 273 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 273 "/run/build/folks/folks/individual.vala"
	if (folks_individual_get_is_user (self) != value) {
#line 273 "/run/build/folks/folks/individual.vala"
		self->priv->_is_user = value;
#line 273 "/run/build/folks/folks/individual.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_individual_properties[FOLKS_INDIVIDUAL_IS_USER_PROPERTY]);
#line 16743 "individual.c"
	}
}


const gchar*
folks_individual_get_id (FolksIndividual* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 294 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 294 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_id;
#line 294 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 294 "/run/build/folks/folks/individual.vala"
	return result;
#line 16761 "individual.c"
}


static void
folks_individual_set_id (FolksIndividual* self,
                         const gchar* value)
{
#line 294 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 294 "/run/build/folks/folks/individual.vala"
	if (g_strcmp0 (value, folks_individual_get_id (self)) != 0) {
#line 16773 "individual.c"
		gchar* _tmp0_;
#line 294 "/run/build/folks/folks/individual.vala"
		_tmp0_ = g_strdup (value);
#line 294 "/run/build/folks/folks/individual.vala"
		_g_free0 (self->priv->_id);
#line 294 "/run/build/folks/folks/individual.vala"
		self->priv->_id = _tmp0_;
#line 294 "/run/build/folks/folks/individual.vala"
		g_object_notify_by_pspec ((GObject *) self, folks_individual_properties[FOLKS_INDIVIDUAL_ID_PROPERTY]);
#line 16783 "individual.c"
	}
}


const gchar*
folks_individual_get_display_name (FolksIndividual* self)
{
	const gchar* result;
	const gchar* _tmp0_;
#line 331 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 331 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_display_name;
#line 331 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 331 "/run/build/folks/folks/individual.vala"
	return result;
#line 16801 "individual.c"
}


static const gchar*
folks_individual_real_get_alias (FolksAliasDetails* base)
{
	const gchar* result;
	FolksIndividual* self;
	const gchar* _tmp0_;
#line 342 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 342 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_alias;
#line 342 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 342 "/run/build/folks/folks/individual.vala"
	return result;
#line 16819 "individual.c"
}


static void
folks_individual_real_set_alias (FolksAliasDetails* base,
                                 const gchar* value)
{
	FolksIndividual* self;
#line 343 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 343 "/run/build/folks/folks/individual.vala"
	folks_alias_details_change_alias ((FolksAliasDetails*) self, value, NULL, NULL);
#line 16832 "individual.c"
}


static FolksStructuredName*
folks_individual_real_get_structured_name (FolksNameDetails* base)
{
	FolksStructuredName* result;
	FolksIndividual* self;
	FolksStructuredName* _tmp0_;
#line 420 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 420 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_structured_name;
#line 420 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 420 "/run/build/folks/folks/individual.vala"
	return result;
#line 16850 "individual.c"
}


static void
folks_individual_real_set_structured_name (FolksNameDetails* base,
                                           FolksStructuredName* value)
{
	FolksIndividual* self;
#line 421 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 421 "/run/build/folks/folks/individual.vala"
	folks_name_details_change_structured_name ((FolksNameDetails*) self, value, NULL, NULL);
#line 16863 "individual.c"
}


static const gchar*
folks_individual_real_get_full_name (FolksNameDetails* base)
{
	const gchar* result;
	FolksIndividual* self;
	const gchar* _tmp0_;
#line 432 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 432 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_full_name;
#line 432 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 432 "/run/build/folks/folks/individual.vala"
	return result;
#line 16881 "individual.c"
}


static void
folks_individual_real_set_full_name (FolksNameDetails* base,
                                     const gchar* value)
{
	FolksIndividual* self;
#line 433 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 433 "/run/build/folks/folks/individual.vala"
	folks_name_details_change_full_name ((FolksNameDetails*) self, value, NULL, NULL);
#line 16894 "individual.c"
}


static const gchar*
folks_individual_real_get_nickname (FolksNameDetails* base)
{
	const gchar* result;
	FolksIndividual* self;
	const gchar* _tmp0_;
#line 444 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 444 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_nickname;
#line 444 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 444 "/run/build/folks/folks/individual.vala"
	return result;
#line 16912 "individual.c"
}


static void
folks_individual_real_set_nickname (FolksNameDetails* base,
                                    const gchar* value)
{
	FolksIndividual* self;
#line 445 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 445 "/run/build/folks/folks/individual.vala"
	folks_name_details_change_nickname ((FolksNameDetails*) self, value, NULL, NULL);
#line 16925 "individual.c"
}


static FolksGender
folks_individual_real_get_gender (FolksGenderDetails* base)
{
	FolksGender result;
	FolksIndividual* self;
	FolksGender _tmp0_;
#line 528 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 528 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_gender;
#line 528 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 528 "/run/build/folks/folks/individual.vala"
	return result;
#line 16943 "individual.c"
}


static void
folks_individual_real_set_gender (FolksGenderDetails* base,
                                  FolksGender value)
{
	FolksIndividual* self;
#line 529 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 529 "/run/build/folks/folks/individual.vala"
	folks_gender_details_change_gender ((FolksGenderDetails*) self, value, NULL, NULL);
#line 16956 "individual.c"
}


static GeeSet*
folks_individual_real_get_urls (FolksUrlDetails* base)
{
	GeeSet* result;
	FolksIndividual* self;
	GeeSet* _tmp0_;
#line 541 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 543 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_urls (self, TRUE, FALSE, FALSE);
#line 544 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_urls_ro;
#line 544 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 544 "/run/build/folks/folks/individual.vala"
	return result;
#line 16976 "individual.c"
}


static void
folks_individual_real_set_urls (FolksUrlDetails* base,
                                GeeSet* value)
{
	FolksIndividual* self;
#line 546 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 546 "/run/build/folks/folks/individual.vala"
	folks_url_details_change_urls ((FolksUrlDetails*) self, value, NULL, NULL);
#line 16989 "individual.c"
}


static GeeSet*
folks_individual_real_get_phone_numbers (FolksPhoneDetails* base)
{
	GeeSet* result;
	FolksIndividual* self;
	GeeSet* _tmp0_;
#line 558 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 560 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_phone_numbers (self, TRUE, FALSE, FALSE);
#line 561 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_phone_numbers_ro;
#line 561 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 561 "/run/build/folks/folks/individual.vala"
	return result;
#line 17009 "individual.c"
}


static void
folks_individual_real_set_phone_numbers (FolksPhoneDetails* base,
                                         GeeSet* value)
{
	FolksIndividual* self;
#line 563 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 563 "/run/build/folks/folks/individual.vala"
	folks_phone_details_change_phone_numbers ((FolksPhoneDetails*) self, value, NULL, NULL);
#line 17022 "individual.c"
}


static GeeSet*
folks_individual_real_get_email_addresses (FolksEmailDetails* base)
{
	GeeSet* result;
	FolksIndividual* self;
	GeeSet* _tmp0_;
#line 575 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 577 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_email_addresses (self, TRUE, FALSE, FALSE);
#line 578 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_email_addresses_ro;
#line 578 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 578 "/run/build/folks/folks/individual.vala"
	return result;
#line 17042 "individual.c"
}


static void
folks_individual_real_set_email_addresses (FolksEmailDetails* base,
                                           GeeSet* value)
{
	FolksIndividual* self;
#line 580 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 580 "/run/build/folks/folks/individual.vala"
	folks_email_details_change_email_addresses ((FolksEmailDetails*) self, value, NULL, NULL);
#line 17055 "individual.c"
}


static GeeSet*
folks_individual_real_get_roles (FolksRoleDetails* base)
{
	GeeSet* result;
	FolksIndividual* self;
	GeeSet* _tmp0_;
#line 592 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 594 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_roles (self, TRUE, FALSE, FALSE);
#line 595 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_roles_ro;
#line 595 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 595 "/run/build/folks/folks/individual.vala"
	return result;
#line 17075 "individual.c"
}


static void
folks_individual_real_set_roles (FolksRoleDetails* base,
                                 GeeSet* value)
{
	FolksIndividual* self;
#line 597 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 597 "/run/build/folks/folks/individual.vala"
	folks_role_details_change_roles ((FolksRoleDetails*) self, value, NULL, NULL);
#line 17088 "individual.c"
}


static GeeSet*
folks_individual_real_get_local_ids (FolksLocalIdDetails* base)
{
	GeeSet* result;
	FolksIndividual* self;
	GeeSet* _tmp0_;
#line 609 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 611 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_local_ids (self, TRUE, FALSE, FALSE);
#line 612 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_local_ids_ro;
#line 612 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 612 "/run/build/folks/folks/individual.vala"
	return result;
#line 17108 "individual.c"
}


static void
folks_individual_real_set_local_ids (FolksLocalIdDetails* base,
                                     GeeSet* value)
{
	FolksIndividual* self;
#line 614 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 614 "/run/build/folks/folks/individual.vala"
	folks_local_id_details_change_local_ids ((FolksLocalIdDetails*) self, value, NULL, NULL);
#line 17121 "individual.c"
}


static FolksLocation*
folks_individual_real_get_location (FolksLocationDetails* base)
{
	FolksLocation* result;
	FolksIndividual* self;
	FolksLocation* _tmp0_;
#line 624 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 624 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_location;
#line 624 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 624 "/run/build/folks/folks/individual.vala"
	return result;
#line 17139 "individual.c"
}


static void
folks_individual_real_set_location (FolksLocationDetails* base,
                                    FolksLocation* value)
{
	FolksIndividual* self;
#line 625 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 625 "/run/build/folks/folks/individual.vala"
	folks_location_details_change_location ((FolksLocationDetails*) self, value, NULL, NULL);
#line 17152 "individual.c"
}


static GDateTime*
folks_individual_real_get_birthday (FolksBirthdayDetails* base)
{
	GDateTime* result;
	FolksIndividual* self;
	GDateTime* _tmp0_;
#line 636 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 636 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_birthday;
#line 636 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 636 "/run/build/folks/folks/individual.vala"
	return result;
#line 17170 "individual.c"
}


static void
folks_individual_real_set_birthday (FolksBirthdayDetails* base,
                                    GDateTime* value)
{
	FolksIndividual* self;
#line 637 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 637 "/run/build/folks/folks/individual.vala"
	folks_birthday_details_change_birthday ((FolksBirthdayDetails*) self, value, NULL, NULL);
#line 17183 "individual.c"
}


static const gchar*
folks_individual_real_get_calendar_event_id (FolksBirthdayDetails* base)
{
	const gchar* result;
	FolksIndividual* self;
	const gchar* _tmp0_;
#line 648 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 648 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_calendar_event_id;
#line 648 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 648 "/run/build/folks/folks/individual.vala"
	return result;
#line 17201 "individual.c"
}


static void
folks_individual_real_set_calendar_event_id (FolksBirthdayDetails* base,
                                             const gchar* value)
{
	FolksIndividual* self;
#line 649 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 649 "/run/build/folks/folks/individual.vala"
	folks_birthday_details_change_calendar_event_id ((FolksBirthdayDetails*) self, value, NULL, NULL);
#line 17214 "individual.c"
}


static GeeSet*
folks_individual_real_get_notes (FolksNoteDetails* base)
{
	GeeSet* result;
	FolksIndividual* self;
	GeeSet* _tmp0_;
#line 661 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 663 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_notes (self, TRUE, FALSE, FALSE);
#line 664 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_notes_ro;
#line 664 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 664 "/run/build/folks/folks/individual.vala"
	return result;
#line 17234 "individual.c"
}


static void
folks_individual_real_set_notes (FolksNoteDetails* base,
                                 GeeSet* value)
{
	FolksIndividual* self;
#line 666 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 666 "/run/build/folks/folks/individual.vala"
	folks_note_details_change_notes ((FolksNoteDetails*) self, value, NULL, NULL);
#line 17247 "individual.c"
}


static GeeSet*
folks_individual_real_get_postal_addresses (FolksPostalAddressDetails* base)
{
	GeeSet* result;
	FolksIndividual* self;
	GeeSet* _tmp0_;
#line 678 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 680 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_postal_addresses (self, TRUE, FALSE, FALSE);
#line 681 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_postal_addresses_ro;
#line 681 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 681 "/run/build/folks/folks/individual.vala"
	return result;
#line 17267 "individual.c"
}


static void
folks_individual_real_set_postal_addresses (FolksPostalAddressDetails* base,
                                            GeeSet* value)
{
	FolksIndividual* self;
#line 683 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 683 "/run/build/folks/folks/individual.vala"
	folks_postal_address_details_change_postal_addresses ((FolksPostalAddressDetails*) self, value, NULL, NULL);
#line 17280 "individual.c"
}


static gboolean
folks_individual_real_get_is_favourite (FolksFavouriteDetails* base)
{
	gboolean result;
	FolksIndividual* self;
	gboolean _tmp0_;
#line 697 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 697 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_is_favourite;
#line 697 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 697 "/run/build/folks/folks/individual.vala"
	return result;
#line 17298 "individual.c"
}


static void
folks_individual_real_set_is_favourite (FolksFavouriteDetails* base,
                                        gboolean value)
{
	FolksIndividual* self;
#line 698 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 698 "/run/build/folks/folks/individual.vala"
	folks_favourite_details_change_is_favourite ((FolksFavouriteDetails*) self, value, NULL, NULL);
#line 17311 "individual.c"
}


static GeeSet*
folks_individual_real_get_groups (FolksGroupDetails* base)
{
	GeeSet* result;
	FolksIndividual* self;
	GeeSet* _tmp0_;
#line 781 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 783 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_groups (self, TRUE, FALSE, FALSE);
#line 784 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_groups_ro;
#line 784 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 784 "/run/build/folks/folks/individual.vala"
	return result;
#line 17331 "individual.c"
}


static void
folks_individual_real_set_groups (FolksGroupDetails* base,
                                  GeeSet* value)
{
	FolksIndividual* self;
#line 786 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 786 "/run/build/folks/folks/individual.vala"
	folks_group_details_change_groups ((FolksGroupDetails*) self, value, NULL, NULL);
#line 17344 "individual.c"
}


static GeeMultiMap*
folks_individual_real_get_im_addresses (FolksImDetails* base)
{
	GeeMultiMap* result;
	FolksIndividual* self;
	GeeHashMultiMap* _tmp0_;
#line 858 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 860 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_im_addresses (self, TRUE, FALSE, FALSE);
#line 861 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_im_addresses;
#line 861 "/run/build/folks/folks/individual.vala"
	result = (GeeMultiMap*) _tmp0_;
#line 861 "/run/build/folks/folks/individual.vala"
	return result;
#line 17364 "individual.c"
}


static void
folks_individual_real_set_im_addresses (FolksImDetails* base,
                                        GeeMultiMap* value)
{
	FolksIndividual* self;
#line 863 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 863 "/run/build/folks/folks/individual.vala"
	folks_im_details_change_im_addresses ((FolksImDetails*) self, value, NULL, NULL);
#line 17377 "individual.c"
}


static GeeMultiMap*
folks_individual_real_get_web_service_addresses (FolksWebServiceDetails* base)
{
	GeeMultiMap* result;
	FolksIndividual* self;
	GeeHashMultiMap* _tmp0_;
#line 875 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 877 "/run/build/folks/folks/individual.vala"
	_folks_individual_update_web_service_addresses (self, TRUE, FALSE, FALSE);
#line 878 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_web_service_addresses;
#line 878 "/run/build/folks/folks/individual.vala"
	result = (GeeMultiMap*) _tmp0_;
#line 878 "/run/build/folks/folks/individual.vala"
	return result;
#line 17397 "individual.c"
}


static void
folks_individual_real_set_web_service_addresses (FolksWebServiceDetails* base,
                                                 GeeMultiMap* value)
{
	FolksIndividual* self;
#line 881 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 881 "/run/build/folks/folks/individual.vala"
	folks_web_service_details_change_web_service_addresses ((FolksWebServiceDetails*) self, value, NULL, NULL);
#line 17410 "individual.c"
}


static guint
folks_individual_real_get_im_interaction_count (FolksInteractionDetails* base)
{
	guint result;
	FolksIndividual* self;
	guint counter = 0U;
	guint _tmp19_;
#line 889 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 891 "/run/build/folks/folks/individual.vala"
	counter = (guint) 0;
#line 17425 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp0_;
		FolksSmallSet* _tmp1_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp2_;
		gint _tmp3_;
		gint _tmp4_;
		gint _persona_index = 0;
#line 893 "/run/build/folks/folks/individual.vala"
		_tmp0_ = self->priv->_persona_set;
#line 893 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _g_object_ref0 (_tmp0_);
#line 893 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp1_;
#line 893 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _persona_list;
#line 893 "/run/build/folks/folks/individual.vala"
		_tmp3_ = gee_collection_get_size ((GeeCollection*) _tmp2_);
#line 893 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _tmp3_;
#line 893 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp4_;
#line 893 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 893 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 17453 "individual.c"
			gint _tmp5_;
			gint _tmp6_;
			gint _tmp7_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp8_;
			gint _tmp9_;
			gconstpointer _tmp10_;
			FolksPersona* _tmp11_;
			FolksInteractionDetails* my_interaction_details = NULL;
			FolksPersona* _tmp12_;
			FolksInteractionDetails* _tmp13_;
			FolksInteractionDetails* _tmp14_;
#line 893 "/run/build/folks/folks/individual.vala"
			_tmp5_ = _persona_index;
#line 893 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp5_ + 1;
#line 893 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 893 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_size;
#line 893 "/run/build/folks/folks/individual.vala"
			if (!(_tmp6_ < _tmp7_)) {
#line 893 "/run/build/folks/folks/individual.vala"
				break;
#line 17478 "individual.c"
			}
#line 893 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_list;
#line 893 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_index;
#line 893 "/run/build/folks/folks/individual.vala"
			_tmp10_ = folks_small_set_get (_tmp8_, _tmp9_);
#line 893 "/run/build/folks/folks/individual.vala"
			_tmp11_ = _g_object_ref0 ((FolksPersona*) _tmp10_);
#line 893 "/run/build/folks/folks/individual.vala"
			persona = _tmp11_;
#line 895 "/run/build/folks/folks/individual.vala"
			_tmp12_ = persona;
#line 895 "/run/build/folks/folks/individual.vala"
			_tmp13_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp12_, FOLKS_TYPE_INTERACTION_DETAILS) ? ((FolksInteractionDetails*) _tmp12_) : NULL);
#line 895 "/run/build/folks/folks/individual.vala"
			my_interaction_details = _tmp13_;
#line 896 "/run/build/folks/folks/individual.vala"
			_tmp14_ = my_interaction_details;
#line 896 "/run/build/folks/folks/individual.vala"
			if (_tmp14_ != NULL) {
#line 17500 "individual.c"
				guint _tmp15_;
				FolksInteractionDetails* _tmp16_;
				guint _tmp17_;
				guint _tmp18_;
#line 898 "/run/build/folks/folks/individual.vala"
				_tmp15_ = counter;
#line 898 "/run/build/folks/folks/individual.vala"
				_tmp16_ = my_interaction_details;
#line 898 "/run/build/folks/folks/individual.vala"
				_tmp17_ = folks_interaction_details_get_im_interaction_count (_tmp16_);
#line 898 "/run/build/folks/folks/individual.vala"
				_tmp18_ = _tmp17_;
#line 898 "/run/build/folks/folks/individual.vala"
				counter = _tmp15_ + _tmp18_;
#line 17515 "individual.c"
			}
#line 893 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (my_interaction_details);
#line 893 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 17521 "individual.c"
		}
#line 893 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 17525 "individual.c"
	}
#line 901 "/run/build/folks/folks/individual.vala"
	_tmp19_ = counter;
#line 901 "/run/build/folks/folks/individual.vala"
	result = _tmp19_;
#line 901 "/run/build/folks/folks/individual.vala"
	return result;
#line 17533 "individual.c"
}


static GDateTime*
folks_individual_real_get_last_im_interaction_datetime (FolksInteractionDetails* base)
{
	GDateTime* result;
	FolksIndividual* self;
	GDateTime* _tmp0_;
	GDateTime* _tmp32_;
#line 912 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 914 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_last_im_interaction_datetime;
#line 914 "/run/build/folks/folks/individual.vala"
	if (_tmp0_ == NULL) {
#line 17550 "individual.c"
		{
			FolksSmallSet* _persona_list = NULL;
			FolksSmallSet* _tmp1_;
			FolksSmallSet* _tmp2_;
			gint _persona_size = 0;
			FolksSmallSet* _tmp3_;
			gint _tmp4_;
			gint _tmp5_;
			gint _persona_index = 0;
#line 917 "/run/build/folks/folks/individual.vala"
			_tmp1_ = self->priv->_persona_set;
#line 917 "/run/build/folks/folks/individual.vala"
			_tmp2_ = _g_object_ref0 (_tmp1_);
#line 917 "/run/build/folks/folks/individual.vala"
			_persona_list = _tmp2_;
#line 917 "/run/build/folks/folks/individual.vala"
			_tmp3_ = _persona_list;
#line 917 "/run/build/folks/folks/individual.vala"
			_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 917 "/run/build/folks/folks/individual.vala"
			_tmp5_ = _tmp4_;
#line 917 "/run/build/folks/folks/individual.vala"
			_persona_size = _tmp5_;
#line 917 "/run/build/folks/folks/individual.vala"
			_persona_index = -1;
#line 917 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 17578 "individual.c"
				gint _tmp6_;
				gint _tmp7_;
				gint _tmp8_;
				FolksPersona* persona = NULL;
				FolksSmallSet* _tmp9_;
				gint _tmp10_;
				gconstpointer _tmp11_;
				FolksPersona* _tmp12_;
				FolksInteractionDetails* my_interaction_details = NULL;
				FolksPersona* _tmp13_;
				FolksInteractionDetails* _tmp14_;
				gboolean _tmp15_ = FALSE;
				FolksInteractionDetails* _tmp16_;
#line 917 "/run/build/folks/folks/individual.vala"
				_tmp6_ = _persona_index;
#line 917 "/run/build/folks/folks/individual.vala"
				_persona_index = _tmp6_ + 1;
#line 917 "/run/build/folks/folks/individual.vala"
				_tmp7_ = _persona_index;
#line 917 "/run/build/folks/folks/individual.vala"
				_tmp8_ = _persona_size;
#line 917 "/run/build/folks/folks/individual.vala"
				if (!(_tmp7_ < _tmp8_)) {
#line 917 "/run/build/folks/folks/individual.vala"
					break;
#line 17604 "individual.c"
				}
#line 917 "/run/build/folks/folks/individual.vala"
				_tmp9_ = _persona_list;
#line 917 "/run/build/folks/folks/individual.vala"
				_tmp10_ = _persona_index;
#line 917 "/run/build/folks/folks/individual.vala"
				_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 917 "/run/build/folks/folks/individual.vala"
				_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 917 "/run/build/folks/folks/individual.vala"
				persona = _tmp12_;
#line 919 "/run/build/folks/folks/individual.vala"
				_tmp13_ = persona;
#line 919 "/run/build/folks/folks/individual.vala"
				_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_INTERACTION_DETAILS) ? ((FolksInteractionDetails*) _tmp13_) : NULL);
#line 919 "/run/build/folks/folks/individual.vala"
				my_interaction_details = _tmp14_;
#line 920 "/run/build/folks/folks/individual.vala"
				_tmp16_ = my_interaction_details;
#line 920 "/run/build/folks/folks/individual.vala"
				if (_tmp16_ != NULL) {
#line 17626 "individual.c"
					FolksInteractionDetails* _tmp17_;
					GDateTime* _tmp18_;
					GDateTime* _tmp19_;
#line 921 "/run/build/folks/folks/individual.vala"
					_tmp17_ = my_interaction_details;
#line 921 "/run/build/folks/folks/individual.vala"
					_tmp18_ = folks_interaction_details_get_last_im_interaction_datetime (_tmp17_);
#line 921 "/run/build/folks/folks/individual.vala"
					_tmp19_ = _tmp18_;
#line 921 "/run/build/folks/folks/individual.vala"
					_tmp15_ = _tmp19_ != NULL;
#line 17638 "individual.c"
				} else {
#line 920 "/run/build/folks/folks/individual.vala"
					_tmp15_ = FALSE;
#line 17642 "individual.c"
				}
#line 920 "/run/build/folks/folks/individual.vala"
				if (_tmp15_) {
#line 17646 "individual.c"
					GDateTime* interaction_datetime = NULL;
					FolksInteractionDetails* _tmp20_;
					GDateTime* _tmp21_;
					GDateTime* _tmp22_;
					GDateTime* _tmp23_;
					gboolean _tmp24_ = FALSE;
					GDateTime* _tmp25_;
#line 923 "/run/build/folks/folks/individual.vala"
					_tmp20_ = my_interaction_details;
#line 923 "/run/build/folks/folks/individual.vala"
					_tmp21_ = folks_interaction_details_get_last_im_interaction_datetime (_tmp20_);
#line 923 "/run/build/folks/folks/individual.vala"
					_tmp22_ = _tmp21_;
#line 923 "/run/build/folks/folks/individual.vala"
					_tmp23_ = _g_date_time_ref0 (_tmp22_);
#line 923 "/run/build/folks/folks/individual.vala"
					interaction_datetime = _tmp23_;
#line 924 "/run/build/folks/folks/individual.vala"
					_tmp25_ = self->priv->_last_im_interaction_datetime;
#line 924 "/run/build/folks/folks/individual.vala"
					if (_tmp25_ == NULL) {
#line 924 "/run/build/folks/folks/individual.vala"
						_tmp24_ = TRUE;
#line 17670 "individual.c"
					} else {
						GDateTime* _tmp26_;
						GDateTime* _tmp27_;
#line 925 "/run/build/folks/folks/individual.vala"
						_tmp26_ = interaction_datetime;
#line 925 "/run/build/folks/folks/individual.vala"
						_tmp27_ = self->priv->_last_im_interaction_datetime;
#line 925 "/run/build/folks/folks/individual.vala"
						_tmp24_ = g_date_time_compare (_tmp26_, _tmp27_) == 1;
#line 17680 "individual.c"
					}
#line 924 "/run/build/folks/folks/individual.vala"
					if (_tmp24_) {
#line 17684 "individual.c"
						FolksInteractionDetails* _tmp28_;
						GDateTime* _tmp29_;
						GDateTime* _tmp30_;
						GDateTime* _tmp31_;
#line 927 "/run/build/folks/folks/individual.vala"
						_tmp28_ = my_interaction_details;
#line 927 "/run/build/folks/folks/individual.vala"
						_tmp29_ = folks_interaction_details_get_last_im_interaction_datetime (_tmp28_);
#line 927 "/run/build/folks/folks/individual.vala"
						_tmp30_ = _tmp29_;
#line 927 "/run/build/folks/folks/individual.vala"
						_tmp31_ = _g_date_time_ref0 (_tmp30_);
#line 927 "/run/build/folks/folks/individual.vala"
						_g_date_time_unref0 (self->priv->_last_im_interaction_datetime);
#line 927 "/run/build/folks/folks/individual.vala"
						self->priv->_last_im_interaction_datetime = _tmp31_;
#line 17701 "individual.c"
					}
#line 920 "/run/build/folks/folks/individual.vala"
					_g_date_time_unref0 (interaction_datetime);
#line 17705 "individual.c"
				}
#line 917 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (my_interaction_details);
#line 917 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (persona);
#line 17711 "individual.c"
			}
#line 917 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_persona_list);
#line 17715 "individual.c"
		}
	}
#line 932 "/run/build/folks/folks/individual.vala"
	_tmp32_ = self->priv->_last_im_interaction_datetime;
#line 932 "/run/build/folks/folks/individual.vala"
	result = _tmp32_;
#line 932 "/run/build/folks/folks/individual.vala"
	return result;
#line 17724 "individual.c"
}


static guint
folks_individual_real_get_call_interaction_count (FolksInteractionDetails* base)
{
	guint result;
	FolksIndividual* self;
	guint counter = 0U;
	guint _tmp19_;
#line 941 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 943 "/run/build/folks/folks/individual.vala"
	counter = (guint) 0;
#line 17739 "individual.c"
	{
		FolksSmallSet* _persona_list = NULL;
		FolksSmallSet* _tmp0_;
		FolksSmallSet* _tmp1_;
		gint _persona_size = 0;
		FolksSmallSet* _tmp2_;
		gint _tmp3_;
		gint _tmp4_;
		gint _persona_index = 0;
#line 945 "/run/build/folks/folks/individual.vala"
		_tmp0_ = self->priv->_persona_set;
#line 945 "/run/build/folks/folks/individual.vala"
		_tmp1_ = _g_object_ref0 (_tmp0_);
#line 945 "/run/build/folks/folks/individual.vala"
		_persona_list = _tmp1_;
#line 945 "/run/build/folks/folks/individual.vala"
		_tmp2_ = _persona_list;
#line 945 "/run/build/folks/folks/individual.vala"
		_tmp3_ = gee_collection_get_size ((GeeCollection*) _tmp2_);
#line 945 "/run/build/folks/folks/individual.vala"
		_tmp4_ = _tmp3_;
#line 945 "/run/build/folks/folks/individual.vala"
		_persona_size = _tmp4_;
#line 945 "/run/build/folks/folks/individual.vala"
		_persona_index = -1;
#line 945 "/run/build/folks/folks/individual.vala"
		while (TRUE) {
#line 17767 "individual.c"
			gint _tmp5_;
			gint _tmp6_;
			gint _tmp7_;
			FolksPersona* persona = NULL;
			FolksSmallSet* _tmp8_;
			gint _tmp9_;
			gconstpointer _tmp10_;
			FolksPersona* _tmp11_;
			FolksInteractionDetails* my_interaction_details = NULL;
			FolksPersona* _tmp12_;
			FolksInteractionDetails* _tmp13_;
			FolksInteractionDetails* _tmp14_;
#line 945 "/run/build/folks/folks/individual.vala"
			_tmp5_ = _persona_index;
#line 945 "/run/build/folks/folks/individual.vala"
			_persona_index = _tmp5_ + 1;
#line 945 "/run/build/folks/folks/individual.vala"
			_tmp6_ = _persona_index;
#line 945 "/run/build/folks/folks/individual.vala"
			_tmp7_ = _persona_size;
#line 945 "/run/build/folks/folks/individual.vala"
			if (!(_tmp6_ < _tmp7_)) {
#line 945 "/run/build/folks/folks/individual.vala"
				break;
#line 17792 "individual.c"
			}
#line 945 "/run/build/folks/folks/individual.vala"
			_tmp8_ = _persona_list;
#line 945 "/run/build/folks/folks/individual.vala"
			_tmp9_ = _persona_index;
#line 945 "/run/build/folks/folks/individual.vala"
			_tmp10_ = folks_small_set_get (_tmp8_, _tmp9_);
#line 945 "/run/build/folks/folks/individual.vala"
			_tmp11_ = _g_object_ref0 ((FolksPersona*) _tmp10_);
#line 945 "/run/build/folks/folks/individual.vala"
			persona = _tmp11_;
#line 947 "/run/build/folks/folks/individual.vala"
			_tmp12_ = persona;
#line 947 "/run/build/folks/folks/individual.vala"
			_tmp13_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp12_, FOLKS_TYPE_INTERACTION_DETAILS) ? ((FolksInteractionDetails*) _tmp12_) : NULL);
#line 947 "/run/build/folks/folks/individual.vala"
			my_interaction_details = _tmp13_;
#line 948 "/run/build/folks/folks/individual.vala"
			_tmp14_ = my_interaction_details;
#line 948 "/run/build/folks/folks/individual.vala"
			if (_tmp14_ != NULL) {
#line 17814 "individual.c"
				guint _tmp15_;
				FolksInteractionDetails* _tmp16_;
				guint _tmp17_;
				guint _tmp18_;
#line 950 "/run/build/folks/folks/individual.vala"
				_tmp15_ = counter;
#line 950 "/run/build/folks/folks/individual.vala"
				_tmp16_ = my_interaction_details;
#line 950 "/run/build/folks/folks/individual.vala"
				_tmp17_ = folks_interaction_details_get_call_interaction_count (_tmp16_);
#line 950 "/run/build/folks/folks/individual.vala"
				_tmp18_ = _tmp17_;
#line 950 "/run/build/folks/folks/individual.vala"
				counter = _tmp15_ + _tmp18_;
#line 17829 "individual.c"
			}
#line 945 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (my_interaction_details);
#line 945 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (persona);
#line 17835 "individual.c"
		}
#line 945 "/run/build/folks/folks/individual.vala"
		_g_object_unref0 (_persona_list);
#line 17839 "individual.c"
	}
#line 953 "/run/build/folks/folks/individual.vala"
	_tmp19_ = counter;
#line 953 "/run/build/folks/folks/individual.vala"
	result = _tmp19_;
#line 953 "/run/build/folks/folks/individual.vala"
	return result;
#line 17847 "individual.c"
}


static GDateTime*
folks_individual_real_get_last_call_interaction_datetime (FolksInteractionDetails* base)
{
	GDateTime* result;
	FolksIndividual* self;
	GDateTime* _tmp0_;
	GDateTime* _tmp32_;
#line 964 "/run/build/folks/folks/individual.vala"
	self = (FolksIndividual*) base;
#line 966 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_last_call_interaction_datetime;
#line 966 "/run/build/folks/folks/individual.vala"
	if (_tmp0_ == NULL) {
#line 17864 "individual.c"
		{
			FolksSmallSet* _persona_list = NULL;
			FolksSmallSet* _tmp1_;
			FolksSmallSet* _tmp2_;
			gint _persona_size = 0;
			FolksSmallSet* _tmp3_;
			gint _tmp4_;
			gint _tmp5_;
			gint _persona_index = 0;
#line 969 "/run/build/folks/folks/individual.vala"
			_tmp1_ = self->priv->_persona_set;
#line 969 "/run/build/folks/folks/individual.vala"
			_tmp2_ = _g_object_ref0 (_tmp1_);
#line 969 "/run/build/folks/folks/individual.vala"
			_persona_list = _tmp2_;
#line 969 "/run/build/folks/folks/individual.vala"
			_tmp3_ = _persona_list;
#line 969 "/run/build/folks/folks/individual.vala"
			_tmp4_ = gee_collection_get_size ((GeeCollection*) _tmp3_);
#line 969 "/run/build/folks/folks/individual.vala"
			_tmp5_ = _tmp4_;
#line 969 "/run/build/folks/folks/individual.vala"
			_persona_size = _tmp5_;
#line 969 "/run/build/folks/folks/individual.vala"
			_persona_index = -1;
#line 969 "/run/build/folks/folks/individual.vala"
			while (TRUE) {
#line 17892 "individual.c"
				gint _tmp6_;
				gint _tmp7_;
				gint _tmp8_;
				FolksPersona* persona = NULL;
				FolksSmallSet* _tmp9_;
				gint _tmp10_;
				gconstpointer _tmp11_;
				FolksPersona* _tmp12_;
				FolksInteractionDetails* my_interaction_details = NULL;
				FolksPersona* _tmp13_;
				FolksInteractionDetails* _tmp14_;
				gboolean _tmp15_ = FALSE;
				FolksInteractionDetails* _tmp16_;
#line 969 "/run/build/folks/folks/individual.vala"
				_tmp6_ = _persona_index;
#line 969 "/run/build/folks/folks/individual.vala"
				_persona_index = _tmp6_ + 1;
#line 969 "/run/build/folks/folks/individual.vala"
				_tmp7_ = _persona_index;
#line 969 "/run/build/folks/folks/individual.vala"
				_tmp8_ = _persona_size;
#line 969 "/run/build/folks/folks/individual.vala"
				if (!(_tmp7_ < _tmp8_)) {
#line 969 "/run/build/folks/folks/individual.vala"
					break;
#line 17918 "individual.c"
				}
#line 969 "/run/build/folks/folks/individual.vala"
				_tmp9_ = _persona_list;
#line 969 "/run/build/folks/folks/individual.vala"
				_tmp10_ = _persona_index;
#line 969 "/run/build/folks/folks/individual.vala"
				_tmp11_ = folks_small_set_get (_tmp9_, _tmp10_);
#line 969 "/run/build/folks/folks/individual.vala"
				_tmp12_ = _g_object_ref0 ((FolksPersona*) _tmp11_);
#line 969 "/run/build/folks/folks/individual.vala"
				persona = _tmp12_;
#line 971 "/run/build/folks/folks/individual.vala"
				_tmp13_ = persona;
#line 971 "/run/build/folks/folks/individual.vala"
				_tmp14_ = _g_object_ref0 (G_TYPE_CHECK_INSTANCE_TYPE (_tmp13_, FOLKS_TYPE_INTERACTION_DETAILS) ? ((FolksInteractionDetails*) _tmp13_) : NULL);
#line 971 "/run/build/folks/folks/individual.vala"
				my_interaction_details = _tmp14_;
#line 972 "/run/build/folks/folks/individual.vala"
				_tmp16_ = my_interaction_details;
#line 972 "/run/build/folks/folks/individual.vala"
				if (_tmp16_ != NULL) {
#line 17940 "individual.c"
					FolksInteractionDetails* _tmp17_;
					GDateTime* _tmp18_;
					GDateTime* _tmp19_;
#line 973 "/run/build/folks/folks/individual.vala"
					_tmp17_ = my_interaction_details;
#line 973 "/run/build/folks/folks/individual.vala"
					_tmp18_ = folks_interaction_details_get_last_call_interaction_datetime (_tmp17_);
#line 973 "/run/build/folks/folks/individual.vala"
					_tmp19_ = _tmp18_;
#line 973 "/run/build/folks/folks/individual.vala"
					_tmp15_ = _tmp19_ != NULL;
#line 17952 "individual.c"
				} else {
#line 972 "/run/build/folks/folks/individual.vala"
					_tmp15_ = FALSE;
#line 17956 "individual.c"
				}
#line 972 "/run/build/folks/folks/individual.vala"
				if (_tmp15_) {
#line 17960 "individual.c"
					GDateTime* interaction_datetime = NULL;
					FolksInteractionDetails* _tmp20_;
					GDateTime* _tmp21_;
					GDateTime* _tmp22_;
					GDateTime* _tmp23_;
					gboolean _tmp24_ = FALSE;
					GDateTime* _tmp25_;
#line 975 "/run/build/folks/folks/individual.vala"
					_tmp20_ = my_interaction_details;
#line 975 "/run/build/folks/folks/individual.vala"
					_tmp21_ = folks_interaction_details_get_last_call_interaction_datetime (_tmp20_);
#line 975 "/run/build/folks/folks/individual.vala"
					_tmp22_ = _tmp21_;
#line 975 "/run/build/folks/folks/individual.vala"
					_tmp23_ = _g_date_time_ref0 (_tmp22_);
#line 975 "/run/build/folks/folks/individual.vala"
					interaction_datetime = _tmp23_;
#line 976 "/run/build/folks/folks/individual.vala"
					_tmp25_ = self->priv->_last_call_interaction_datetime;
#line 976 "/run/build/folks/folks/individual.vala"
					if (_tmp25_ == NULL) {
#line 976 "/run/build/folks/folks/individual.vala"
						_tmp24_ = TRUE;
#line 17984 "individual.c"
					} else {
						GDateTime* _tmp26_;
						GDateTime* _tmp27_;
#line 977 "/run/build/folks/folks/individual.vala"
						_tmp26_ = interaction_datetime;
#line 977 "/run/build/folks/folks/individual.vala"
						_tmp27_ = self->priv->_last_call_interaction_datetime;
#line 977 "/run/build/folks/folks/individual.vala"
						_tmp24_ = g_date_time_compare (_tmp26_, _tmp27_) > 1;
#line 17994 "individual.c"
					}
#line 976 "/run/build/folks/folks/individual.vala"
					if (_tmp24_) {
#line 17998 "individual.c"
						FolksInteractionDetails* _tmp28_;
						GDateTime* _tmp29_;
						GDateTime* _tmp30_;
						GDateTime* _tmp31_;
#line 979 "/run/build/folks/folks/individual.vala"
						_tmp28_ = my_interaction_details;
#line 979 "/run/build/folks/folks/individual.vala"
						_tmp29_ = folks_interaction_details_get_last_call_interaction_datetime (_tmp28_);
#line 979 "/run/build/folks/folks/individual.vala"
						_tmp30_ = _tmp29_;
#line 979 "/run/build/folks/folks/individual.vala"
						_tmp31_ = _g_date_time_ref0 (_tmp30_);
#line 979 "/run/build/folks/folks/individual.vala"
						_g_date_time_unref0 (self->priv->_last_call_interaction_datetime);
#line 979 "/run/build/folks/folks/individual.vala"
						self->priv->_last_call_interaction_datetime = _tmp31_;
#line 18015 "individual.c"
					}
#line 972 "/run/build/folks/folks/individual.vala"
					_g_date_time_unref0 (interaction_datetime);
#line 18019 "individual.c"
				}
#line 969 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (my_interaction_details);
#line 969 "/run/build/folks/folks/individual.vala"
				_g_object_unref0 (persona);
#line 18025 "individual.c"
			}
#line 969 "/run/build/folks/folks/individual.vala"
			_g_object_unref0 (_persona_list);
#line 18029 "individual.c"
		}
	}
#line 984 "/run/build/folks/folks/individual.vala"
	_tmp32_ = self->priv->_last_call_interaction_datetime;
#line 984 "/run/build/folks/folks/individual.vala"
	result = _tmp32_;
#line 984 "/run/build/folks/folks/individual.vala"
	return result;
#line 18038 "individual.c"
}


GeeSet*
folks_individual_get_personas (FolksIndividual* self)
{
	GeeSet* result;
	GeeSet* _tmp0_;
#line 1130 "/run/build/folks/folks/individual.vala"
	g_return_val_if_fail (self != NULL, NULL);
#line 1130 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_persona_set_ro;
#line 1130 "/run/build/folks/folks/individual.vala"
	result = _tmp0_;
#line 1130 "/run/build/folks/folks/individual.vala"
	return result;
#line 18055 "individual.c"
}


void
folks_individual_set_personas (FolksIndividual* self,
                               GeeSet* value)
{
#line 1131 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (self != NULL);
#line 1131 "/run/build/folks/folks/individual.vala"
	_folks_individual_set_personas (self, value, NULL);
#line 1131 "/run/build/folks/folks/individual.vala"
	g_object_notify_by_pspec ((GObject *) self, folks_individual_properties[FOLKS_INDIVIDUAL_PERSONAS_PROPERTY]);
#line 18069 "individual.c"
}


static void
g_cclosure_user_marshal_VOID__OBJECT_OBJECT (GClosure * closure,
                                             GValue * return_value,
                                             guint n_param_values,
                                             const GValue * param_values,
                                             gpointer invocation_hint,
                                             gpointer marshal_data)
{
	typedef void (*GMarshalFunc_VOID__OBJECT_OBJECT) (gpointer data1, gpointer arg_1, gpointer arg_2, gpointer data2);
	register GMarshalFunc_VOID__OBJECT_OBJECT callback;
	register GCClosure * cc;
	register gpointer data1;
	register gpointer data2;
	cc = (GCClosure *) closure;
#line 84 "/run/build/folks/folks/individual.vala"
	g_return_if_fail (n_param_values == 3);
#line 84 "/run/build/folks/folks/individual.vala"
	if (G_CCLOSURE_SWAP_DATA (closure)) {
#line 84 "/run/build/folks/folks/individual.vala"
		data1 = closure->data;
#line 84 "/run/build/folks/folks/individual.vala"
		data2 = param_values->data[0].v_pointer;
#line 18095 "individual.c"
	} else {
#line 84 "/run/build/folks/folks/individual.vala"
		data1 = param_values->data[0].v_pointer;
#line 84 "/run/build/folks/folks/individual.vala"
		data2 = closure->data;
#line 18101 "individual.c"
	}
#line 84 "/run/build/folks/folks/individual.vala"
	callback = (GMarshalFunc_VOID__OBJECT_OBJECT) (marshal_data ? marshal_data : cc->callback);
#line 84 "/run/build/folks/folks/individual.vala"
	callback (data1, g_value_get_object (param_values + 1), g_value_get_object (param_values + 2), data2);
#line 18107 "individual.c"
}


static GObject *
folks_individual_constructor (GType type,
                              guint n_construct_properties,
                              GObjectConstructParam * construct_properties)
{
	GObject * obj;
	GObjectClass * parent_class;
	FolksIndividual * self;
	FolksSmallSet* _tmp0_;
	GeeSet* _tmp1_;
	GeeSet* _tmp2_;
#line 1417 "/run/build/folks/folks/individual.vala"
	parent_class = G_OBJECT_CLASS (folks_individual_parent_class);
#line 1417 "/run/build/folks/folks/individual.vala"
	obj = parent_class->constructor (type, n_construct_properties, construct_properties);
#line 1417 "/run/build/folks/folks/individual.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_INDIVIDUAL, FolksIndividual);
#line 1419 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_persona_set;
#line 1419 "/run/build/folks/folks/individual.vala"
	_tmp1_ = gee_abstract_set_get_read_only_view ((GeeAbstractSet*) _tmp0_);
#line 1419 "/run/build/folks/folks/individual.vala"
	_tmp2_ = _tmp1_;
#line 1419 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_persona_set_ro);
#line 1419 "/run/build/folks/folks/individual.vala"
	self->priv->_persona_set_ro = _tmp2_;
#line 1417 "/run/build/folks/folks/individual.vala"
	return obj;
#line 18140 "individual.c"
}


static FolksIndividual_Notifier*
folks_individual__notifier_dup (const FolksIndividual_Notifier* self)
{
	FolksIndividual_Notifier* dup;
#line 1314 "/run/build/folks/folks/individual.vala"
	dup = g_new0 (FolksIndividual_Notifier, 1);
#line 1314 "/run/build/folks/folks/individual.vala"
	memcpy (dup, self, sizeof (FolksIndividual_Notifier));
#line 1314 "/run/build/folks/folks/individual.vala"
	return dup;
#line 18154 "individual.c"
}


static void
folks_individual__notifier_free (FolksIndividual_Notifier* self)
{
#line 1314 "/run/build/folks/folks/individual.vala"
	g_free (self);
#line 18163 "individual.c"
}


static GType
folks_individual__notifier_get_type (void)
{
	static volatile gsize folks_individual__notifier_type_id__volatile = 0;
	if (g_once_init_enter (&folks_individual__notifier_type_id__volatile)) {
		GType folks_individual__notifier_type_id;
		folks_individual__notifier_type_id = g_boxed_type_register_static ("FolksIndividual_Notifier", (GBoxedCopyFunc) folks_individual__notifier_dup, (GBoxedFreeFunc) folks_individual__notifier_free);
		g_once_init_leave (&folks_individual__notifier_type_id__volatile, folks_individual__notifier_type_id);
	}
	return folks_individual__notifier_type_id__volatile;
}


static void
folks_individual_class_init (FolksIndividualClass * klass)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_parent_class = g_type_class_peek_parent (klass);
#line 84 "/run/build/folks/folks/individual.vala"
	g_type_class_add_private (klass, sizeof (FolksIndividualPrivate));
#line 84 "/run/build/folks/folks/individual.vala"
	G_OBJECT_CLASS (klass)->get_property = _vala_folks_individual_get_property;
#line 84 "/run/build/folks/folks/individual.vala"
	G_OBJECT_CLASS (klass)->set_property = _vala_folks_individual_set_property;
#line 84 "/run/build/folks/folks/individual.vala"
	G_OBJECT_CLASS (klass)->constructor = folks_individual_constructor;
#line 84 "/run/build/folks/folks/individual.vala"
	G_OBJECT_CLASS (klass)->finalize = folks_individual_finalize;
#line 18195 "individual.c"
	/**
	   * The trust level of the Individual.
	   *
	   * This specifies how far the Individual can be trusted to be who it claims
	   * to be. See the descriptions for the elements of {@link TrustLevel}.
	   *
	   * Clients should ''not'' allow linking of Individuals who have a trust level
	   * of {@link TrustLevel.NONE}.
	   *
	   * @since 0.1.15
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_TRUST_LEVEL_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_TRUST_LEVEL_PROPERTY] = g_param_spec_enum ("trust-level", "trust-level", "trust-level", FOLKS_TYPE_TRUST_LEVEL, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 18209 "individual.c"
	/**
	   * {@inheritDoc}
	   *
	   * @since 0.6.0
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_AVATAR_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_AVATAR_PROPERTY] = g_param_spec_object ("avatar", "avatar", "avatar", g_loadable_icon_get_type (), G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18217 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_PRESENCE_TYPE_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_PRESENCE_TYPE_PROPERTY] = g_param_spec_enum ("presence-type", "presence-type", "presence-type", FOLKS_TYPE_PRESENCE_TYPE, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18223 "individual.c"
	/**
	   * {@inheritDoc}
	   *
	   * @since 0.6.0
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_PRESENCE_STATUS_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_PRESENCE_STATUS_PROPERTY] = g_param_spec_string ("presence-status", "presence-status", "presence-status", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18231 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_PRESENCE_MESSAGE_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_PRESENCE_MESSAGE_PROPERTY] = g_param_spec_string ("presence-message", "presence-message", "presence-message", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18237 "individual.c"
	/**
	   * {@inheritDoc}
	   *
	   * @since 0.9.5
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_CLIENT_TYPES_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_CLIENT_TYPES_PROPERTY] = g_param_spec_boxed ("client-types", "client-types", "client-types", G_TYPE_STRV, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18245 "individual.c"
	/**
	   * Whether the Individual is the user.
	   *
	   * Iff the Individual represents the user – the person who owns the
	   * account in the backend for each {@link Persona} in the Individual –
	   * this is ``true``.
	   *
	   * It is //not// guaranteed that every {@link Persona} in the Individual has
	   * its {@link Persona.is_user} set to the same value as the Individual. For
	   * example, the user could own two Telepathy accounts, and have added the
	   * other account as a contact in each account. The accounts will expose a
	   * {@link Persona} for the user (which will have {@link Persona.is_user} set
	   * to ``true``) //and// a {@link Persona} for the contact for the other
	   * account (which will have {@link Persona.is_user} set to ``false``).
	   *
	   * It is guaranteed that iff this property is set to ``true`` on an
	   * Individual, there will be at least one {@link Persona} in the Individual
	   * with its {@link Persona.is_user} set to ``true``.
	   *
	   * It is guaranteed that there will only ever be one Individual with this
	   * property set to ``true``.
	   *
	   * @since 0.3.0
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_IS_USER_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_IS_USER_PROPERTY] = g_param_spec_boolean ("is-user", "is-user", "is-user", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 18272 "individual.c"
	/**
	   * A unique identifier for the Individual.
	   *
	   * This uniquely identifies the Individual, and persists across
	   * {@link IndividualAggregator} instances. It may not persist across linking
	   * the Individual with other Individuals.
	   *
	   * This is an opaque string and has no structure.
	   *
	   * If an identifier is required which will be used for a long-lived link
	   * between different stored data, it may be more desirable to use the
	   * {@link Persona.uid} of the most relevant {@link Persona} in the Individual
	   * instead. For example, if storing references to Individuals who are tagged
	   * in a photo, it may be safer to store the UID of the Persona whose backend
	   * provided the photo (e.g. Facebook).
	   *
	   * As a special case, the ID defaults to an empty string when the individual
	   * has no personas (i.e. if it’s just been constructed).
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_ID_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_ID_PROPERTY] = g_param_spec_string ("id", "id", "id", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 18294 "individual.c"
	/**
	   * The name of this Individual to display in the UI.
	   *
	   * This value is set according to the following list of possibilities, each
	   * one being tried first on the primary persona, then on all other personas in
	   * the Individual, before falling back to the next item on the list:
	   * # Alias
	   * # Full name, structured name or nickname
	   * # E-mail address
	   * # Phone number
	   * # Display ID (e.g. foo@example.org)
	   * # Postal address
	   * # _("Unnamed Person")
	   *
	   * @since 0.9.7
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_DISPLAY_NAME_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_DISPLAY_NAME_PROPERTY] = g_param_spec_string ("display-name", "display-name", "display-name", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 18313 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_ALIAS_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_ALIAS_PROPERTY] = g_param_spec_string ("alias", "alias", "alias", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18319 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_STRUCTURED_NAME_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_STRUCTURED_NAME_PROPERTY] = g_param_spec_object ("structured-name", "structured-name", "structured-name", FOLKS_TYPE_STRUCTURED_NAME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18325 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_FULL_NAME_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_FULL_NAME_PROPERTY] = g_param_spec_string ("full-name", "full-name", "full-name", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18331 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_NICKNAME_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_NICKNAME_PROPERTY] = g_param_spec_string ("nickname", "nickname", "nickname", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18337 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_GENDER_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_GENDER_PROPERTY] = g_param_spec_enum ("gender", "gender", "gender", FOLKS_TYPE_GENDER, 0, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18343 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_URLS_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_URLS_PROPERTY] = g_param_spec_object ("urls", "urls", "urls", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18349 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_PHONE_NUMBERS_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_PHONE_NUMBERS_PROPERTY] = g_param_spec_object ("phone-numbers", "phone-numbers", "phone-numbers", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18355 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_EMAIL_ADDRESSES_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_EMAIL_ADDRESSES_PROPERTY] = g_param_spec_object ("email-addresses", "email-addresses", "email-addresses", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18361 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_ROLES_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_ROLES_PROPERTY] = g_param_spec_object ("roles", "roles", "roles", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18367 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_LOCAL_IDS_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_LOCAL_IDS_PROPERTY] = g_param_spec_object ("local-ids", "local-ids", "local-ids", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18373 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_LOCATION_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_LOCATION_PROPERTY] = g_param_spec_object ("location", "location", "location", FOLKS_TYPE_LOCATION, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18379 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_BIRTHDAY_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_BIRTHDAY_PROPERTY] = g_param_spec_boxed ("birthday", "birthday", "birthday", G_TYPE_DATE_TIME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18385 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_CALENDAR_EVENT_ID_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_CALENDAR_EVENT_ID_PROPERTY] = g_param_spec_string ("calendar-event-id", "calendar-event-id", "calendar-event-id", NULL, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18391 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_NOTES_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_NOTES_PROPERTY] = g_param_spec_object ("notes", "notes", "notes", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18397 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_POSTAL_ADDRESSES_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_POSTAL_ADDRESSES_PROPERTY] = g_param_spec_object ("postal-addresses", "postal-addresses", "postal-addresses", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18403 "individual.c"
	/**
	   * Whether this Individual is a user-defined favourite.
	   *
	   * This property is ``true`` if any of this Individual's {@link Persona}s are
	   * favourites).
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_IS_FAVOURITE_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_IS_FAVOURITE_PROPERTY] = g_param_spec_boolean ("is-favourite", "is-favourite", "is-favourite", FALSE, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18412 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_GROUPS_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_GROUPS_PROPERTY] = g_param_spec_object ("groups", "groups", "groups", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18418 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_IM_ADDRESSES_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_IM_ADDRESSES_PROPERTY] = g_param_spec_object ("im-addresses", "im-addresses", "im-addresses", GEE_TYPE_MULTI_MAP, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18424 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_WEB_SERVICE_ADDRESSES_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_WEB_SERVICE_ADDRESSES_PROPERTY] = g_param_spec_object ("web-service-addresses", "web-service-addresses", "web-service-addresses", GEE_TYPE_MULTI_MAP, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18430 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_IM_INTERACTION_COUNT_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_IM_INTERACTION_COUNT_PROPERTY] = g_param_spec_uint ("im-interaction-count", "im-interaction-count", "im-interaction-count", 0, G_MAXUINT, 0U, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_LAST_IM_INTERACTION_DATETIME_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_LAST_IM_INTERACTION_DATETIME_PROPERTY] = g_param_spec_boxed ("last-im-interaction-datetime", "last-im-interaction-datetime", "last-im-interaction-datetime", G_TYPE_DATE_TIME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 18438 "individual.c"
	/**
	   * {@inheritDoc}
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_CALL_INTERACTION_COUNT_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_CALL_INTERACTION_COUNT_PROPERTY] = g_param_spec_uint ("call-interaction-count", "call-interaction-count", "call-interaction-count", 0, G_MAXUINT, 0U, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_LAST_CALL_INTERACTION_DATETIME_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_LAST_CALL_INTERACTION_DATETIME_PROPERTY] = g_param_spec_boxed ("last-call-interaction-datetime", "last-call-interaction-datetime", "last-call-interaction-datetime", G_TYPE_DATE_TIME, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE));
#line 18446 "individual.c"
	/**
	   * The set of {@link Persona}s encapsulated by this Individual.
	   *
	   * There must always be at least one Persona in this set.
	   *
	   * No order is specified over the set of personas, as such an order may be
	   * different across each of the properties implemented by the personas (e.g.
	   * should they be ordered by presence, name, star sign, etc.?).
	   *
	   * Changing the set of personas may cause updates to the aggregated properties
	   * provided by the Individual, resulting in property notifications for them.
	   *
	   * Changing the set of personas will not cause permanent linking/unlinking of
	   * the added/removed personas to/from this Individual. To do that, call
	   * {@link IndividualAggregator.link_personas} or
	   * {@link IndividualAggregator.unlink_individual}, which will ensure the link
	   * changes are written to the appropriate backend.
	   *
	   * @since 0.5.1
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	g_object_class_install_property (G_OBJECT_CLASS (klass), FOLKS_INDIVIDUAL_PERSONAS_PROPERTY, folks_individual_properties[FOLKS_INDIVIDUAL_PERSONAS_PROPERTY] = g_param_spec_object ("personas", "personas", "personas", GEE_TYPE_SET, G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE));
#line 18469 "individual.c"
	/**
	   * Emitted when the last of the Individual's {@link Persona}s has been
	   * removed.
	   *
	   * At this point, the Individual is invalid, so any client referencing it
	   * should unreference it and remove it from their UI.
	   *
	   * @param replacement_individual the individual which has replaced this one
	   * due to linking, or ``null`` if this individual was removed for another
	   * reason
	   * @since 0.1.13
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_signals[FOLKS_INDIVIDUAL_REMOVED_SIGNAL] = g_signal_new ("removed", FOLKS_TYPE_INDIVIDUAL, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_marshal_VOID__OBJECT, G_TYPE_NONE, 1, FOLKS_TYPE_INDIVIDUAL);
#line 18484 "individual.c"
	/**
	   * Emitted when one or more {@link Persona}s are added to or removed from
	   * the Individual. As the parameters are (unordered) sets, the orders of their
	   * elements are undefined.
	   *
	   * @param added a set of {@link Persona}s which have been added
	   * @param removed a set of {@link Persona}s which have been removed
	   *
	   * @since 0.5.1
	   */
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_signals[FOLKS_INDIVIDUAL_PERSONAS_CHANGED_SIGNAL] = g_signal_new ("personas-changed", FOLKS_TYPE_INDIVIDUAL, G_SIGNAL_RUN_LAST, 0, NULL, NULL, g_cclosure_user_marshal_VOID__OBJECT_OBJECT, G_TYPE_NONE, 2, GEE_TYPE_SET, GEE_TYPE_SET);
#line 18497 "individual.c"
}


static void
folks_individual_folks_alias_details_interface_init (FolksAliasDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_alias_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_alias = (void (*) (FolksAliasDetails *, const gchar*, GAsyncReadyCallback, gpointer)) folks_individual_real_change_alias;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_alias_finish = (void (*) (FolksAliasDetails *, GAsyncResult*, GError**)) folks_individual_real_change_alias_finish;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_alias = folks_individual_real_get_alias;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_alias = folks_individual_real_set_alias;
#line 18514 "individual.c"
}


static void
folks_individual_folks_avatar_details_interface_init (FolksAvatarDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_avatar_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_avatar = (void (*) (FolksAvatarDetails *, GLoadableIcon*, GAsyncReadyCallback, gpointer)) folks_individual_real_change_avatar;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_avatar_finish = (void (*) (FolksAvatarDetails *, GAsyncResult*, GError**)) folks_individual_real_change_avatar_finish;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_avatar = folks_individual_real_get_avatar;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_avatar = folks_individual_real_set_avatar;
#line 18531 "individual.c"
}


static void
folks_individual_folks_birthday_details_interface_init (FolksBirthdayDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_birthday_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_birthday = folks_individual_real_get_birthday;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_birthday = folks_individual_real_set_birthday;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_calendar_event_id = folks_individual_real_get_calendar_event_id;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_calendar_event_id = folks_individual_real_set_calendar_event_id;
#line 18548 "individual.c"
}


static void
folks_individual_folks_email_details_interface_init (FolksEmailDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_email_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_email_addresses = folks_individual_real_get_email_addresses;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_email_addresses = folks_individual_real_set_email_addresses;
#line 18561 "individual.c"
}


static void
folks_individual_folks_extended_info_interface_init (FolksExtendedInfoIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_extended_info_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_extended_field = (FolksExtendedFieldDetails* (*) (FolksExtendedInfo *, const gchar*)) folks_individual_real_get_extended_field;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_extended_field = (void (*) (FolksExtendedInfo *, const gchar*, FolksExtendedFieldDetails*, GAsyncReadyCallback, gpointer)) folks_individual_real_change_extended_field;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_extended_field_finish = (void (*) (FolksExtendedInfo *, GAsyncResult*, GError**)) folks_individual_real_change_extended_field_finish;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->remove_extended_field = (void (*) (FolksExtendedInfo *, const gchar*, GAsyncReadyCallback, gpointer)) folks_individual_real_remove_extended_field;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->remove_extended_field_finish = (void (*) (FolksExtendedInfo *, GAsyncResult*, GError**)) folks_individual_real_remove_extended_field_finish;
#line 18580 "individual.c"
}


static void
folks_individual_folks_favourite_details_interface_init (FolksFavouriteDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_favourite_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_is_favourite = (void (*) (FolksFavouriteDetails *, gboolean, GAsyncReadyCallback, gpointer)) folks_individual_real_change_is_favourite;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_is_favourite_finish = (void (*) (FolksFavouriteDetails *, GAsyncResult*, GError**)) folks_individual_real_change_is_favourite_finish;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_is_favourite = folks_individual_real_get_is_favourite;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_is_favourite = folks_individual_real_set_is_favourite;
#line 18597 "individual.c"
}


static void
folks_individual_folks_gender_details_interface_init (FolksGenderDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_gender_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_gender = folks_individual_real_get_gender;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_gender = folks_individual_real_set_gender;
#line 18610 "individual.c"
}


static void
folks_individual_folks_group_details_interface_init (FolksGroupDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_group_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_groups = (void (*) (FolksGroupDetails *, GeeSet*, GAsyncReadyCallback, gpointer)) folks_individual_real_change_groups;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_groups_finish = (void (*) (FolksGroupDetails *, GAsyncResult*, GError**)) folks_individual_real_change_groups_finish;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_group = (void (*) (FolksGroupDetails *, const gchar*, gboolean, GAsyncReadyCallback, gpointer)) folks_individual_real_change_group;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_group_finish = (void (*) (FolksGroupDetails *, GAsyncResult*, GError**)) folks_individual_real_change_group_finish;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_groups = folks_individual_real_get_groups;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_groups = folks_individual_real_set_groups;
#line 18631 "individual.c"
}


static void
folks_individual_folks_im_details_interface_init (FolksImDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_im_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_im_addresses = folks_individual_real_get_im_addresses;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_im_addresses = folks_individual_real_set_im_addresses;
#line 18644 "individual.c"
}


static void
folks_individual_folks_interaction_details_interface_init (FolksInteractionDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_interaction_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_im_interaction_count = folks_individual_real_get_im_interaction_count;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_last_im_interaction_datetime = folks_individual_real_get_last_im_interaction_datetime;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_call_interaction_count = folks_individual_real_get_call_interaction_count;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_last_call_interaction_datetime = folks_individual_real_get_last_call_interaction_datetime;
#line 18661 "individual.c"
}


static void
folks_individual_folks_local_id_details_interface_init (FolksLocalIdDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_local_id_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_local_ids = folks_individual_real_get_local_ids;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_local_ids = folks_individual_real_set_local_ids;
#line 18674 "individual.c"
}


static void
folks_individual_folks_location_details_interface_init (FolksLocationDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_location_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_location = folks_individual_real_get_location;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_location = folks_individual_real_set_location;
#line 18687 "individual.c"
}


static void
folks_individual_folks_name_details_interface_init (FolksNameDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_name_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_nickname = (void (*) (FolksNameDetails *, const gchar*, GAsyncReadyCallback, gpointer)) folks_individual_real_change_nickname;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->change_nickname_finish = (void (*) (FolksNameDetails *, GAsyncResult*, GError**)) folks_individual_real_change_nickname_finish;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_structured_name = folks_individual_real_get_structured_name;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_structured_name = folks_individual_real_set_structured_name;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_full_name = folks_individual_real_get_full_name;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_full_name = folks_individual_real_set_full_name;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_nickname = folks_individual_real_get_nickname;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_nickname = folks_individual_real_set_nickname;
#line 18712 "individual.c"
}


static void
folks_individual_folks_note_details_interface_init (FolksNoteDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_note_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_notes = folks_individual_real_get_notes;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_notes = folks_individual_real_set_notes;
#line 18725 "individual.c"
}


static void
folks_individual_folks_presence_details_interface_init (FolksPresenceDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_presence_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_presence_type = folks_individual_real_get_presence_type;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_presence_type = folks_individual_real_set_presence_type;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_presence_status = folks_individual_real_get_presence_status;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_presence_status = folks_individual_real_set_presence_status;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_presence_message = folks_individual_real_get_presence_message;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_presence_message = folks_individual_real_set_presence_message;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_client_types = folks_individual_real_get_client_types;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_client_types = folks_individual_real_set_client_types;
#line 18750 "individual.c"
}


static void
folks_individual_folks_phone_details_interface_init (FolksPhoneDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_phone_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_phone_numbers = folks_individual_real_get_phone_numbers;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_phone_numbers = folks_individual_real_set_phone_numbers;
#line 18763 "individual.c"
}


static void
folks_individual_folks_postal_address_details_interface_init (FolksPostalAddressDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_postal_address_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_postal_addresses = folks_individual_real_get_postal_addresses;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_postal_addresses = folks_individual_real_set_postal_addresses;
#line 18776 "individual.c"
}


static void
folks_individual_folks_role_details_interface_init (FolksRoleDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_role_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_roles = folks_individual_real_get_roles;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_roles = folks_individual_real_set_roles;
#line 18789 "individual.c"
}


static void
folks_individual_folks_url_details_interface_init (FolksUrlDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_url_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_urls = folks_individual_real_get_urls;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_urls = folks_individual_real_set_urls;
#line 18802 "individual.c"
}


static void
folks_individual_folks_web_service_details_interface_init (FolksWebServiceDetailsIface * iface)
{
#line 84 "/run/build/folks/folks/individual.vala"
	folks_individual_folks_web_service_details_parent_iface = g_type_interface_peek_parent (iface);
#line 84 "/run/build/folks/folks/individual.vala"
	iface->get_web_service_addresses = folks_individual_real_get_web_service_addresses;
#line 84 "/run/build/folks/folks/individual.vala"
	iface->set_web_service_addresses = folks_individual_real_set_web_service_addresses;
#line 18815 "individual.c"
}


static void
folks_individual_instance_init (FolksIndividual * self)
{
	FolksSmallSet* _tmp0_;
	GeeHashMap* _tmp1_;
	gchar* _tmp2_;
	gchar* _tmp3_;
	gchar* _tmp4_;
	gchar* _tmp5_;
	gchar* _tmp6_;
	gchar* _tmp7_;
	gchar* _tmp8_;
#line 84 "/run/build/folks/folks/individual.vala"
	self->priv = FOLKS_INDIVIDUAL_GET_PRIVATE (self);
#line 107 "/run/build/folks/folks/individual.vala"
	_tmp0_ = folks_small_set_new (FOLKS_TYPE_PERSONA, (GBoxedCopyFunc) g_object_ref, (GDestroyNotify) g_object_unref, NULL, NULL, NULL, NULL, NULL, NULL);
#line 107 "/run/build/folks/folks/individual.vala"
	self->priv->_persona_set = _tmp0_;
#line 113 "/run/build/folks/folks/individual.vala"
	_tmp1_ = gee_hash_map_new (FOLKS_TYPE_PERSONA_STORE, NULL, NULL, G_TYPE_UINT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#line 113 "/run/build/folks/folks/individual.vala"
	self->priv->_stores = _tmp1_;
#line 117 "/run/build/folks/folks/individual.vala"
	self->priv->_persona_user_count = (guint) 0;
#line 132 "/run/build/folks/folks/individual.vala"
	self->priv->_avatar = NULL;
#line 235 "/run/build/folks/folks/individual.vala"
	_tmp2_ = g_strdup ("");
#line 235 "/run/build/folks/folks/individual.vala"
	self->priv->_presence_status = _tmp2_;
#line 240 "/run/build/folks/folks/individual.vala"
	_tmp3_ = g_strdup ("");
#line 240 "/run/build/folks/folks/individual.vala"
	self->priv->_presence_message = _tmp3_;
#line 294 "/run/build/folks/folks/individual.vala"
	_tmp4_ = g_strdup ("");
#line 294 "/run/build/folks/folks/individual.vala"
	self->priv->_id = _tmp4_;
#line 310 "/run/build/folks/folks/individual.vala"
	_tmp5_ = g_strdup ("");
#line 310 "/run/build/folks/folks/individual.vala"
	self->priv->_display_name = _tmp5_;
#line 334 "/run/build/folks/folks/individual.vala"
	_tmp6_ = g_strdup ("");
#line 334 "/run/build/folks/folks/individual.vala"
	self->priv->_alias = _tmp6_;
#line 412 "/run/build/folks/folks/individual.vala"
	self->priv->_structured_name = NULL;
#line 424 "/run/build/folks/folks/individual.vala"
	_tmp7_ = g_strdup ("");
#line 424 "/run/build/folks/folks/individual.vala"
	self->priv->_full_name = _tmp7_;
#line 436 "/run/build/folks/folks/individual.vala"
	_tmp8_ = g_strdup ("");
#line 436 "/run/build/folks/folks/individual.vala"
	self->priv->_nickname = _tmp8_;
#line 521 "/run/build/folks/folks/individual.vala"
	self->priv->_gender = FOLKS_GENDER_UNSPECIFIED;
#line 532 "/run/build/folks/folks/individual.vala"
	self->priv->_urls = NULL;
#line 533 "/run/build/folks/folks/individual.vala"
	self->priv->_urls_ro = NULL;
#line 549 "/run/build/folks/folks/individual.vala"
	self->priv->_phone_numbers = NULL;
#line 550 "/run/build/folks/folks/individual.vala"
	self->priv->_phone_numbers_ro = NULL;
#line 566 "/run/build/folks/folks/individual.vala"
	self->priv->_email_addresses = NULL;
#line 567 "/run/build/folks/folks/individual.vala"
	self->priv->_email_addresses_ro = NULL;
#line 583 "/run/build/folks/folks/individual.vala"
	self->priv->_roles = NULL;
#line 584 "/run/build/folks/folks/individual.vala"
	self->priv->_roles_ro = NULL;
#line 600 "/run/build/folks/folks/individual.vala"
	self->priv->_local_ids = NULL;
#line 601 "/run/build/folks/folks/individual.vala"
	self->priv->_local_ids_ro = NULL;
#line 617 "/run/build/folks/folks/individual.vala"
	self->priv->_location = NULL;
#line 628 "/run/build/folks/folks/individual.vala"
	self->priv->_birthday = NULL;
#line 640 "/run/build/folks/folks/individual.vala"
	self->priv->_calendar_event_id = NULL;
#line 652 "/run/build/folks/folks/individual.vala"
	self->priv->_notes = NULL;
#line 653 "/run/build/folks/folks/individual.vala"
	self->priv->_notes_ro = NULL;
#line 669 "/run/build/folks/folks/individual.vala"
	self->priv->_postal_addresses = NULL;
#line 670 "/run/build/folks/folks/individual.vala"
	self->priv->_postal_addresses_ro = NULL;
#line 686 "/run/build/folks/folks/individual.vala"
	self->priv->_is_favourite = FALSE;
#line 772 "/run/build/folks/folks/individual.vala"
	self->priv->_groups = NULL;
#line 773 "/run/build/folks/folks/individual.vala"
	self->priv->_groups_ro = NULL;
#line 850 "/run/build/folks/folks/individual.vala"
	self->priv->_im_addresses = NULL;
#line 866 "/run/build/folks/folks/individual.vala"
	self->priv->_web_service_addresses = NULL;
#line 908 "/run/build/folks/folks/individual.vala"
	self->priv->_last_im_interaction_datetime = NULL;
#line 960 "/run/build/folks/folks/individual.vala"
	self->priv->_last_call_interaction_datetime = NULL;
#line 18925 "individual.c"
}


static void
folks_individual_finalize (GObject * obj)
{
	FolksIndividual * self;
	const gchar* _tmp0_;
#line 84 "/run/build/folks/folks/individual.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, FOLKS_TYPE_INDIVIDUAL, FolksIndividual);
#line 1424 "/run/build/folks/folks/individual.vala"
	_tmp0_ = self->priv->_id;
#line 1424 "/run/build/folks/folks/individual.vala"
	g_debug ("individual.vala:1424: Destroying Individual '%s': %p", _tmp0_, self);
#line 107 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_persona_set);
#line 109 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_persona_set_ro);
#line 113 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_stores);
#line 132 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_avatar);
#line 235 "/run/build/folks/folks/individual.vala"
	_g_free0 (self->priv->_presence_status);
#line 240 "/run/build/folks/folks/individual.vala"
	_g_free0 (self->priv->_presence_message);
#line 247 "/run/build/folks/folks/individual.vala"
	self->priv->_client_types = (_vala_array_free (self->priv->_client_types, self->priv->_client_types_length1, (GDestroyNotify) g_free), NULL);
#line 294 "/run/build/folks/folks/individual.vala"
	_g_free0 (self->priv->_id);
#line 310 "/run/build/folks/folks/individual.vala"
	_g_free0 (self->priv->_display_name);
#line 334 "/run/build/folks/folks/individual.vala"
	_g_free0 (self->priv->_alias);
#line 412 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_structured_name);
#line 424 "/run/build/folks/folks/individual.vala"
	_g_free0 (self->priv->_full_name);
#line 436 "/run/build/folks/folks/individual.vala"
	_g_free0 (self->priv->_nickname);
#line 532 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_urls);
#line 533 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_urls_ro);
#line 549 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_phone_numbers);
#line 550 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_phone_numbers_ro);
#line 566 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_email_addresses);
#line 567 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_email_addresses_ro);
#line 583 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_roles);
#line 584 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_roles_ro);
#line 600 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_local_ids);
#line 601 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_local_ids_ro);
#line 617 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_location);
#line 628 "/run/build/folks/folks/individual.vala"
	_g_date_time_unref0 (self->priv->_birthday);
#line 640 "/run/build/folks/folks/individual.vala"
	_g_free0 (self->priv->_calendar_event_id);
#line 652 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_notes);
#line 653 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_notes_ro);
#line 669 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_postal_addresses);
#line 670 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_postal_addresses_ro);
#line 772 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_groups);
#line 773 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_groups_ro);
#line 850 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_im_addresses);
#line 866 "/run/build/folks/folks/individual.vala"
	_g_object_unref0 (self->priv->_web_service_addresses);
#line 908 "/run/build/folks/folks/individual.vala"
	_g_date_time_unref0 (self->priv->_last_im_interaction_datetime);
#line 960 "/run/build/folks/folks/individual.vala"
	_g_date_time_unref0 (self->priv->_last_call_interaction_datetime);
#line 84 "/run/build/folks/folks/individual.vala"
	G_OBJECT_CLASS (folks_individual_parent_class)->finalize (obj);
#line 19014 "individual.c"
}


/**
 * A physical person, aggregated from the various {@link Persona}s the person
 * might have, such as their different IM addresses or vCard entries. An
 * individual must always contain at least one {@link Persona}.
 *
 * When choosing the values of single-valued properties (such as
 * {@link Individual.alias} and {@link Individual.avatar}; but not multi-valued
 * properties such as {@link Individual.groups} and
 * {@link Individual.im_addresses}) from the {@link Persona}s in the
 * individual to present as the values of those properties of the individual,
 * it is guaranteed that if the individual contains a persona from the primary
 * persona store (see {@link IndividualAggregator.primary_store}), its property
 * values will be chosen above all others. This means that any changes to
 * property values made through folks (which are normally written to the primary
 * store) will always be used by {@link Folks.Individual}s.
 *
 * No further guarantees are made about the order of preference used for
 * choosing which property values to use for the {@link Folks.Individual}, other
 * than that the order may vary between properties, but is guaranteed to be
 * stable for a given property.
 */
GType
folks_individual_get_type (void)
{
	static volatile gsize folks_individual_type_id__volatile = 0;
	if (g_once_init_enter (&folks_individual_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (FolksIndividualClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) folks_individual_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (FolksIndividual), 0, (GInstanceInitFunc) folks_individual_instance_init, NULL };
		static const GInterfaceInfo folks_alias_details_info = { (GInterfaceInitFunc) folks_individual_folks_alias_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_avatar_details_info = { (GInterfaceInitFunc) folks_individual_folks_avatar_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_birthday_details_info = { (GInterfaceInitFunc) folks_individual_folks_birthday_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_email_details_info = { (GInterfaceInitFunc) folks_individual_folks_email_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_extended_info_info = { (GInterfaceInitFunc) folks_individual_folks_extended_info_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_favourite_details_info = { (GInterfaceInitFunc) folks_individual_folks_favourite_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_gender_details_info = { (GInterfaceInitFunc) folks_individual_folks_gender_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_group_details_info = { (GInterfaceInitFunc) folks_individual_folks_group_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_im_details_info = { (GInterfaceInitFunc) folks_individual_folks_im_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_interaction_details_info = { (GInterfaceInitFunc) folks_individual_folks_interaction_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_local_id_details_info = { (GInterfaceInitFunc) folks_individual_folks_local_id_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_location_details_info = { (GInterfaceInitFunc) folks_individual_folks_location_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_name_details_info = { (GInterfaceInitFunc) folks_individual_folks_name_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_note_details_info = { (GInterfaceInitFunc) folks_individual_folks_note_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_presence_details_info = { (GInterfaceInitFunc) folks_individual_folks_presence_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_phone_details_info = { (GInterfaceInitFunc) folks_individual_folks_phone_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_postal_address_details_info = { (GInterfaceInitFunc) folks_individual_folks_postal_address_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_role_details_info = { (GInterfaceInitFunc) folks_individual_folks_role_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_url_details_info = { (GInterfaceInitFunc) folks_individual_folks_url_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		static const GInterfaceInfo folks_web_service_details_info = { (GInterfaceInitFunc) folks_individual_folks_web_service_details_interface_init, (GInterfaceFinalizeFunc) NULL, NULL};
		GType folks_individual_type_id;
		folks_individual_type_id = g_type_register_static (G_TYPE_OBJECT, "FolksIndividual", &g_define_type_info, 0);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_ALIAS_DETAILS, &folks_alias_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_AVATAR_DETAILS, &folks_avatar_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_BIRTHDAY_DETAILS, &folks_birthday_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_EMAIL_DETAILS, &folks_email_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_EXTENDED_INFO, &folks_extended_info_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_FAVOURITE_DETAILS, &folks_favourite_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_GENDER_DETAILS, &folks_gender_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_GROUP_DETAILS, &folks_group_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_IM_DETAILS, &folks_im_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_INTERACTION_DETAILS, &folks_interaction_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_LOCAL_ID_DETAILS, &folks_local_id_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_LOCATION_DETAILS, &folks_location_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_NAME_DETAILS, &folks_name_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_NOTE_DETAILS, &folks_note_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_PRESENCE_DETAILS, &folks_presence_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_PHONE_DETAILS, &folks_phone_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_POSTAL_ADDRESS_DETAILS, &folks_postal_address_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_ROLE_DETAILS, &folks_role_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_URL_DETAILS, &folks_url_details_info);
		g_type_add_interface_static (folks_individual_type_id, FOLKS_TYPE_WEB_SERVICE_DETAILS, &folks_web_service_details_info);
		g_once_init_leave (&folks_individual_type_id__volatile, folks_individual_type_id);
	}
	return folks_individual_type_id__volatile;
}


static void
_vala_folks_individual_get_property (GObject * object,
                                     guint property_id,
                                     GValue * value,
                                     GParamSpec * pspec)
{
	FolksIndividual * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_TYPE_INDIVIDUAL, FolksIndividual);
#line 84 "/run/build/folks/folks/individual.vala"
	switch (property_id) {
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_TRUST_LEVEL_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_enum (value, folks_individual_get_trust_level (self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_AVATAR_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_avatar_details_get_avatar ((FolksAvatarDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PRESENCE_TYPE_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_enum (value, folks_presence_details_get_presence_type ((FolksPresenceDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PRESENCE_STATUS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_string (value, folks_presence_details_get_presence_status ((FolksPresenceDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PRESENCE_MESSAGE_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_string (value, folks_presence_details_get_presence_message ((FolksPresenceDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_CLIENT_TYPES_PROPERTY:
#line 19135 "individual.c"
		{
			int length;
#line 84 "/run/build/folks/folks/individual.vala"
			g_value_set_boxed (value, folks_presence_details_get_client_types ((FolksPresenceDetails*) self, &length));
#line 19140 "individual.c"
		}
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_IS_USER_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_boolean (value, folks_individual_get_is_user (self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_ID_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_string (value, folks_individual_get_id (self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_DISPLAY_NAME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_string (value, folks_individual_get_display_name (self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_ALIAS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_string (value, folks_alias_details_get_alias ((FolksAliasDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_STRUCTURED_NAME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_name_details_get_structured_name ((FolksNameDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_FULL_NAME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_string (value, folks_name_details_get_full_name ((FolksNameDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_NICKNAME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_string (value, folks_name_details_get_nickname ((FolksNameDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_GENDER_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_enum (value, folks_gender_details_get_gender ((FolksGenderDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_URLS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_url_details_get_urls ((FolksUrlDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PHONE_NUMBERS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_phone_details_get_phone_numbers ((FolksPhoneDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_EMAIL_ADDRESSES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_email_details_get_email_addresses ((FolksEmailDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_ROLES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_role_details_get_roles ((FolksRoleDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_LOCAL_IDS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_local_id_details_get_local_ids ((FolksLocalIdDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_LOCATION_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_location_details_get_location ((FolksLocationDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_BIRTHDAY_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_boxed (value, folks_birthday_details_get_birthday ((FolksBirthdayDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_CALENDAR_EVENT_ID_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_string (value, folks_birthday_details_get_calendar_event_id ((FolksBirthdayDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_NOTES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_note_details_get_notes ((FolksNoteDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_POSTAL_ADDRESSES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_postal_address_details_get_postal_addresses ((FolksPostalAddressDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_IS_FAVOURITE_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_boolean (value, folks_favourite_details_get_is_favourite ((FolksFavouriteDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_GROUPS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_group_details_get_groups ((FolksGroupDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_IM_ADDRESSES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_im_details_get_im_addresses ((FolksImDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_WEB_SERVICE_ADDRESSES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_web_service_details_get_web_service_addresses ((FolksWebServiceDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_IM_INTERACTION_COUNT_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_uint (value, folks_interaction_details_get_im_interaction_count ((FolksInteractionDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_LAST_IM_INTERACTION_DATETIME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_boxed (value, folks_interaction_details_get_last_im_interaction_datetime ((FolksInteractionDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_CALL_INTERACTION_COUNT_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_uint (value, folks_interaction_details_get_call_interaction_count ((FolksInteractionDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_LAST_CALL_INTERACTION_DATETIME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_boxed (value, folks_interaction_details_get_last_call_interaction_datetime ((FolksInteractionDetails*) self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PERSONAS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		g_value_set_object (value, folks_individual_get_personas (self));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 19306 "individual.c"
		default:
#line 84 "/run/build/folks/folks/individual.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 19312 "individual.c"
	}
}


static void
_vala_folks_individual_set_property (GObject * object,
                                     guint property_id,
                                     const GValue * value,
                                     GParamSpec * pspec)
{
	FolksIndividual * self;
	self = G_TYPE_CHECK_INSTANCE_CAST (object, FOLKS_TYPE_INDIVIDUAL, FolksIndividual);
#line 84 "/run/build/folks/folks/individual.vala"
	switch (property_id) {
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_TRUST_LEVEL_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_individual_set_trust_level (self, g_value_get_enum (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_AVATAR_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_avatar_details_set_avatar ((FolksAvatarDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PRESENCE_TYPE_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_presence_details_set_presence_type ((FolksPresenceDetails*) self, g_value_get_enum (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PRESENCE_STATUS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_presence_details_set_presence_status ((FolksPresenceDetails*) self, g_value_get_string (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PRESENCE_MESSAGE_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_presence_details_set_presence_message ((FolksPresenceDetails*) self, g_value_get_string (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_CLIENT_TYPES_PROPERTY:
#line 19359 "individual.c"
		{
			gpointer boxed;
#line 84 "/run/build/folks/folks/individual.vala"
			boxed = g_value_get_boxed (value);
#line 84 "/run/build/folks/folks/individual.vala"
			folks_presence_details_set_client_types ((FolksPresenceDetails*) self, boxed, (boxed == NULL) ? 0 : g_strv_length (boxed));
#line 19366 "individual.c"
		}
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_IS_USER_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_individual_set_is_user (self, g_value_get_boolean (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_ID_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_individual_set_id (self, g_value_get_string (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_ALIAS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_alias_details_set_alias ((FolksAliasDetails*) self, g_value_get_string (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_STRUCTURED_NAME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_name_details_set_structured_name ((FolksNameDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_FULL_NAME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_name_details_set_full_name ((FolksNameDetails*) self, g_value_get_string (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_NICKNAME_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_name_details_set_nickname ((FolksNameDetails*) self, g_value_get_string (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_GENDER_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_gender_details_set_gender ((FolksGenderDetails*) self, g_value_get_enum (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_URLS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_url_details_set_urls ((FolksUrlDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PHONE_NUMBERS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_phone_details_set_phone_numbers ((FolksPhoneDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_EMAIL_ADDRESSES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_email_details_set_email_addresses ((FolksEmailDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_ROLES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_role_details_set_roles ((FolksRoleDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_LOCAL_IDS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_local_id_details_set_local_ids ((FolksLocalIdDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_LOCATION_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_location_details_set_location ((FolksLocationDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_BIRTHDAY_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_birthday_details_set_birthday ((FolksBirthdayDetails*) self, g_value_get_boxed (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_CALENDAR_EVENT_ID_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_birthday_details_set_calendar_event_id ((FolksBirthdayDetails*) self, g_value_get_string (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_NOTES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_note_details_set_notes ((FolksNoteDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_POSTAL_ADDRESSES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_postal_address_details_set_postal_addresses ((FolksPostalAddressDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_IS_FAVOURITE_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_favourite_details_set_is_favourite ((FolksFavouriteDetails*) self, g_value_get_boolean (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_GROUPS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_group_details_set_groups ((FolksGroupDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_IM_ADDRESSES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_im_details_set_im_addresses ((FolksImDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_WEB_SERVICE_ADDRESSES_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_web_service_details_set_web_service_addresses ((FolksWebServiceDetails*) self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 84 "/run/build/folks/folks/individual.vala"
		case FOLKS_INDIVIDUAL_PERSONAS_PROPERTY:
#line 84 "/run/build/folks/folks/individual.vala"
		folks_individual_set_personas (self, g_value_get_object (value));
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 19502 "individual.c"
		default:
#line 84 "/run/build/folks/folks/individual.vala"
		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
#line 84 "/run/build/folks/folks/individual.vala"
		break;
#line 19508 "individual.c"
	}
}


static void
_vala_array_destroy (gpointer array,
                     gint array_length,
                     GDestroyNotify destroy_func)
{
	if ((array != NULL) && (destroy_func != NULL)) {
		int i;
		for (i = 0; i < array_length; i = i + 1) {
			if (((gpointer*) array)[i] != NULL) {
				destroy_func (((gpointer*) array)[i]);
			}
		}
	}
}


static void
_vala_array_free (gpointer array,
                  gint array_length,
                  GDestroyNotify destroy_func)
{
	_vala_array_destroy (array, array_length, destroy_func);
	g_free (array);
}



